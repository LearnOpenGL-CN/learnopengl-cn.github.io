{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce\u6765\u5230OpenGL\u7684\u4e16\u754c \u6b22\u8fce\u6765\u5230OpenGL\u7684\u4e16\u754c\u3002\u8fd9\u4e2a\u5de5\u7a0b\u53ea\u662f\u6211( Joey de Vries )\u7684\u4e00\u6b21\u5c0f\u5c0f\u7684\u5c1d\u8bd5\uff0c\u5e0c\u671b\u80fd\u591f\u5efa\u7acb\u8d77\u4e00\u4e2a\u5b8c\u5584\u7684OpenGL\u6559\u5b66\u5e73\u53f0\u3002\u65e0\u8bba\u4f60\u5b66\u4e60OpenGL\u662f\u4e3a\u4e86\u5b66\u4e1a\uff0c\u627e\u5de5\u4f5c\uff0c\u6216\u4ec5\u4ec5\u662f\u56e0\u4e3a\u5174\u8da3\uff0c\u8fd9\u4e2a\u7f51\u7ad9\u90fd\u5c06\u80fd\u591f\u6559\u4f1a\u4f60 \u73b0\u4ee3 (Core-profile) OpenGL\u4ece\u57fa\u7840\uff0c\u4e2d\u7ea7\uff0c\u5230\u9ad8\u7ea7\u7684\u77e5\u8bc6\u3002LearnOpenGL\u7684\u76ee\u6807\u662f\u4f7f\u7528\u6613\u4e8e\u7406\u89e3\u7684\u5f62\u5f0f\uff0c\u4f7f\u7528\u6e05\u6670\u7684\u4f8b\u5b50\uff0c\u5c55\u73b0\u73b0\u4ee3OpenGL\u7684\u6240\u6709\u77e5\u8bc6\u70b9\uff0c\u5e76\u4e0e\u6b64\u540c\u65f6\u4e3a\u4f60\u4ee5\u540e\u7684\u5b66\u4e60\u63d0\u4f9b\u6709\u7528\u7684\u53c2\u8003\u3002 \u5982\u679c\u60a8\u559c\u6b22\u8fd9\u4e2a\u7cfb\u5217\u6559\u7a0b\u7684\u8bdd\uff0c\u4e0d\u59a8\u5411Joey de Vries\u7684 Paypal \u8fdb\u884c\u6350\u8d60\uff0c\u652f\u6301\u4e00\u4e0b\u4f5c\u8005\uff0c\u8ba9\u8fd9\u4e2a\u6559\u7a0b\u80fd\u591f\u6301\u7eed\u5b8c\u5584\u5e76\u66f4\u65b0\u3002 \u4e3a\u4ec0\u4e48\u8981\u9605\u8bfb\u8fd9\u4e9b\u6559\u7a0b\u5462\uff1f \u5728\u4e92\u8054\u7f51\u4e0a\uff0c\u6709\u5173\u5b66\u4e60OpenGL\u7684\u6709\u6210\u5343\u4e0a\u4e07\u7684\u6587\u6863\u4e0e\u8d44\u6e90\uff0c\u7136\u800c\u5176\u4e2d\u5927\u90e8\u5206\u7684\u8d44\u6e90\u4ec5\u4ec5\u8ba8\u8bba\u4e86OpenGL\u7684\u7acb\u5373\u6e32\u67d3\u6a21\u5f0f\uff08Immediate Mode\uff0c\u901a\u5e38\u4f1a\u8bf4\u65e7OpenGL\uff09\uff0c\u4ea6\u6216\u662f\u4e0d\u5b8c\u6574\uff0c\u7f3a\u5c11\u9002\u5f53\u7684\u6587\u6863\uff0c\u751a\u81f3\u662f\u4ec5\u4ec5\u4e0d\u9002\u5408\u4f60\u7684\u53e3\u5473\u3002\u6240\u4ee5\uff0c\u6211\u7684\u76ee\u6807\u662f\u63d0\u4f9b\u4e00\u4e2a\u65e2\u5b8c\u6574\uff0c\u53c8\u6613\u61c2\u7684\u5e73\u53f0\u4f9b\u4eba\u4eec\u5b66\u4e60\u3002 \u5982\u679c\u4f60\u5f88\u4eab\u53d7\u90a3\u4e9b\u63d0\u4f9b\u624b\u628a\u624b\u6307\u5bfc\u7684\u6559\u7a0b\uff0c\u90a3\u4e9b\u63d0\u4f9b\u6e05\u6670\u4f8b\u5b50\u7684\u6559\u7a0b\uff0c\u4ee5\u53ca\u90a3\u4e9b\u4e0d\u4f1a\u4e00\u4e0b\u5c06\u4f60\u6df9\u6ca1\u5728\u7ec6\u8282\u4e2d\u7684\u6559\u7a0b\uff0c\u90a3\u4e48\u6211\u7684\u8fd9\u4e9b\u6559\u7a0b\u5f88\u53ef\u80fd\u5c31\u5f88\u9002\u5408\u4f60\u3002\u6211\u7684\u6559\u7a0b\u65e8\u5728\u8ba9\u90a3\u4e9b\u6ca1\u6709\u56fe\u5f62\u7f16\u7a0b\u7ecf\u9a8c\u7684\u4eba\u4eec\u80fd\u591f\u7406\u89e3\uff0c\u53c8\u8ba9\u90a3\u4e9b\u6709\u7ecf\u9a8c\u7684\u8bfb\u8005\u6709\u9605\u8bfb\u4e0b\u53bb\u7684\u5174\u8da3\u3002\u6211\u7684\u6559\u7a0b\u540c\u6837\u4e5f\u8ba8\u8bba\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u6982\u5ff5\uff0c\u53ea\u9700\u8981\u4f60\u518d\u6709\u4e00\u70b9\u521b\u9020\u529b\uff0c\u5c31\u80fd\u5c06\u4f60\u7684\u60f3\u6cd5\u53d8\u6210\u771f\u6b63\u76843D\u7a0b\u5e8f\u3002\u5982\u679c\u5982\u679c\u4f60\u89c9\u5f97\u524d\u9762\u8fd9\u4e9b\u8bb2\u7684\u90fd\u662f\u4f60\uff0c\u6b22\u8fce\u7ee7\u7eed\u9605\u8bfb\u6211\u7684\u6559\u7a0b\u3002 \u4f60\u5c06\u5b66\u4f1a\u4ec0\u4e48\u5462\uff1f \u6211\u8fd9\u4e9b\u6559\u7a0b\u7684\u6838\u5fc3\u662f\u73b0\u4ee3OpenGL\u3002\u5b66\u4e60\uff08\u548c\u4f7f\u7528\uff09\u73b0\u4ee3OpenGL\u9700\u8981\u7528\u6237\u5bf9\u56fe\u5f62\u7f16\u7a0b\u4ee5\u53caOpenGL\u7684\u5e55\u540e\u8fd0\u4f5c\u6709\u975e\u5e38\u597d\u7684\u7406\u89e3\u624d\u80fd\u5728\u7f16\u7a0b\u4e2d\u6709\u5f88\u597d\u7684\u53d1\u6325\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u4f1a\u9996\u5148\u8ba8\u8bba\u6838\u5fc3\u7684\u56fe\u5f62\u5b66\u6982\u5ff5\uff0cOpenGL\u600e\u6837\u5c06\u50cf\u7d20\u7ed8\u5236\u5230\u5c4f\u5e55\u4e0a\uff0c\u4ee5\u53ca\u5982\u4f55\u5229\u7528\u9ed1\u79d1\u6280\u505a\u51fa\u4e00\u4e9b\u5f88\u9177\u7684\u6548\u679c\u3002 \u9664\u4e86\u6838\u5fc3\u6982\u5ff5\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u4f1a\u8ba8\u8bba\u8bb8\u591a\u6709\u7528\u7684\u6280\u5de7\uff0c\u5b83\u4eec\u90fd\u53ef\u4ee5\u7528\u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\uff0c\u6bd4\u5982\u8bf4\u5728\u573a\u666f\u4e2d\u79fb\u52a8\uff0c\u505a\u51fa\u6f02\u4eae\u7684\u5149\u7167\uff0c\u52a0\u8f7d\u5efa\u6a21\u8f6f\u4ef6\u5bfc\u51fa\u7684\u81ea\u5b9a\u4e49\u6a21\u578b\uff0c\u505a\u4e00\u4e9b\u5f88\u9177\u7684\u540e\u671f\u5904\u7406\u6280\u5de7\u7b49\u3002\u6700\u540e\uff0c\u6211\u4eec\u4e5f\u5c06\u4f1a\u4f7f\u7528\u6211\u4eec\u5df2\u5b66\u7684\u77e5\u8bc6\u4ece\u5934\u5f00\u59cb\u505a\u4e00\u4e2a\u5c0f\u6e38\u620f\uff0c\u8ba9\u4f60\u771f\u6b63\u4f53\u9a8c\u4e00\u628a\u56fe\u5f62\u7f16\u7a0b\u7684\u9b45\u529b\u3002 \u5173\u4e8e\u4e2d\u6587\u7ffb\u8bd1 \u8fd9\u91cc\u662fLearnOpenGL\u6559\u7a0b\u7684\u4e2d\u6587\u7ffb\u8bd1\uff0c\u82f1\u6587\u7248\u7684\u5730\u5740\u4e3a\uff1a https://learnopengl.com/ \u7531\u4e8e\u7ffb\u8bd1\u53ef\u80fd\u65e0\u6cd5\u505a\u5230\u7cbe\u786e\u8868\u8fbe\u539f\u6587\u610f\u601d\uff0c\u6211\u4eec\u63a8\u8350\u60a8\u5728\u5bf9\u95ee\u9898\u6709\u7591\u60d1\u7684\u65f6\u5019\u53bb\u9605\u8bfb\u4e00\u4e0b\u82f1\u6587\u7248\u7684\u6559\u7a0b\u3002\u5982\u679c\u60a8\u5bf9\u7ffb\u8bd1\u6709\u66f4\u597d\u7684\u5efa\u8bae\uff0c\u53ef\u4ee5\u53bb\u6211\u4eec\u7684 GitHub\u5de5\u7a0b \u4e0a\u63d0\u4ea4Issue\u6216\u8005Pull Request\u3002\u5982\u679c\u662f\u5bf9\u6559\u7a0b\u7684\u5185\u5bb9\u6709\u95ee\u9898\uff0c\u8bf7\u5148\u67e5\u770b\u539f\u6587\uff0c\u5982\u679c\u4e0d\u662f\u7ffb\u8bd1\u9519\u8bef\u7684\u8bdd\uff0c\u8bf7\u76f4\u63a5\u5728\u539f\u7f51\u7ad9\u8bc4\u8bba\u533a\u5411\u4f5c\u8005\uff08JoeyDeVries\uff09\u53cd\u9988\u3002 \u5982\u679c\u6559\u7a0b\u4e2d\u7684\u6e90\u7801\u65e0\u6cd5\u6253\u5f00\u7684\u8bdd\uff0c\u53ef\u4ee5\u5230\u6559\u7a0b\u7684 GitHub\u9875\u9762 \u4e0a\u53bb\u5bfb\u627e\u6240\u9700\u7684\u4ee3\u7801\uff0c\u6bcf\u4e00\u8282\u6559\u7a0b\u7684\u6e90\u7801\u4ee5\u53ca\u7ec3\u4e60\u90fd\u4f4d\u4e8e src \u76ee\u5f55\u4e0b\u7684\u5bf9\u5e94\u7ae0\u8282\u76ee\u5f55\u4e2d\u3002","title":"\u4e3b\u9875"},{"location":"#opengl","text":"\u6b22\u8fce\u6765\u5230OpenGL\u7684\u4e16\u754c\u3002\u8fd9\u4e2a\u5de5\u7a0b\u53ea\u662f\u6211( Joey de Vries )\u7684\u4e00\u6b21\u5c0f\u5c0f\u7684\u5c1d\u8bd5\uff0c\u5e0c\u671b\u80fd\u591f\u5efa\u7acb\u8d77\u4e00\u4e2a\u5b8c\u5584\u7684OpenGL\u6559\u5b66\u5e73\u53f0\u3002\u65e0\u8bba\u4f60\u5b66\u4e60OpenGL\u662f\u4e3a\u4e86\u5b66\u4e1a\uff0c\u627e\u5de5\u4f5c\uff0c\u6216\u4ec5\u4ec5\u662f\u56e0\u4e3a\u5174\u8da3\uff0c\u8fd9\u4e2a\u7f51\u7ad9\u90fd\u5c06\u80fd\u591f\u6559\u4f1a\u4f60 \u73b0\u4ee3 (Core-profile) OpenGL\u4ece\u57fa\u7840\uff0c\u4e2d\u7ea7\uff0c\u5230\u9ad8\u7ea7\u7684\u77e5\u8bc6\u3002LearnOpenGL\u7684\u76ee\u6807\u662f\u4f7f\u7528\u6613\u4e8e\u7406\u89e3\u7684\u5f62\u5f0f\uff0c\u4f7f\u7528\u6e05\u6670\u7684\u4f8b\u5b50\uff0c\u5c55\u73b0\u73b0\u4ee3OpenGL\u7684\u6240\u6709\u77e5\u8bc6\u70b9\uff0c\u5e76\u4e0e\u6b64\u540c\u65f6\u4e3a\u4f60\u4ee5\u540e\u7684\u5b66\u4e60\u63d0\u4f9b\u6709\u7528\u7684\u53c2\u8003\u3002 \u5982\u679c\u60a8\u559c\u6b22\u8fd9\u4e2a\u7cfb\u5217\u6559\u7a0b\u7684\u8bdd\uff0c\u4e0d\u59a8\u5411Joey de Vries\u7684 Paypal \u8fdb\u884c\u6350\u8d60\uff0c\u652f\u6301\u4e00\u4e0b\u4f5c\u8005\uff0c\u8ba9\u8fd9\u4e2a\u6559\u7a0b\u80fd\u591f\u6301\u7eed\u5b8c\u5584\u5e76\u66f4\u65b0\u3002","title":"\u6b22\u8fce\u6765\u5230OpenGL\u7684\u4e16\u754c"},{"location":"#_1","text":"\u5728\u4e92\u8054\u7f51\u4e0a\uff0c\u6709\u5173\u5b66\u4e60OpenGL\u7684\u6709\u6210\u5343\u4e0a\u4e07\u7684\u6587\u6863\u4e0e\u8d44\u6e90\uff0c\u7136\u800c\u5176\u4e2d\u5927\u90e8\u5206\u7684\u8d44\u6e90\u4ec5\u4ec5\u8ba8\u8bba\u4e86OpenGL\u7684\u7acb\u5373\u6e32\u67d3\u6a21\u5f0f\uff08Immediate Mode\uff0c\u901a\u5e38\u4f1a\u8bf4\u65e7OpenGL\uff09\uff0c\u4ea6\u6216\u662f\u4e0d\u5b8c\u6574\uff0c\u7f3a\u5c11\u9002\u5f53\u7684\u6587\u6863\uff0c\u751a\u81f3\u662f\u4ec5\u4ec5\u4e0d\u9002\u5408\u4f60\u7684\u53e3\u5473\u3002\u6240\u4ee5\uff0c\u6211\u7684\u76ee\u6807\u662f\u63d0\u4f9b\u4e00\u4e2a\u65e2\u5b8c\u6574\uff0c\u53c8\u6613\u61c2\u7684\u5e73\u53f0\u4f9b\u4eba\u4eec\u5b66\u4e60\u3002 \u5982\u679c\u4f60\u5f88\u4eab\u53d7\u90a3\u4e9b\u63d0\u4f9b\u624b\u628a\u624b\u6307\u5bfc\u7684\u6559\u7a0b\uff0c\u90a3\u4e9b\u63d0\u4f9b\u6e05\u6670\u4f8b\u5b50\u7684\u6559\u7a0b\uff0c\u4ee5\u53ca\u90a3\u4e9b\u4e0d\u4f1a\u4e00\u4e0b\u5c06\u4f60\u6df9\u6ca1\u5728\u7ec6\u8282\u4e2d\u7684\u6559\u7a0b\uff0c\u90a3\u4e48\u6211\u7684\u8fd9\u4e9b\u6559\u7a0b\u5f88\u53ef\u80fd\u5c31\u5f88\u9002\u5408\u4f60\u3002\u6211\u7684\u6559\u7a0b\u65e8\u5728\u8ba9\u90a3\u4e9b\u6ca1\u6709\u56fe\u5f62\u7f16\u7a0b\u7ecf\u9a8c\u7684\u4eba\u4eec\u80fd\u591f\u7406\u89e3\uff0c\u53c8\u8ba9\u90a3\u4e9b\u6709\u7ecf\u9a8c\u7684\u8bfb\u8005\u6709\u9605\u8bfb\u4e0b\u53bb\u7684\u5174\u8da3\u3002\u6211\u7684\u6559\u7a0b\u540c\u6837\u4e5f\u8ba8\u8bba\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u6982\u5ff5\uff0c\u53ea\u9700\u8981\u4f60\u518d\u6709\u4e00\u70b9\u521b\u9020\u529b\uff0c\u5c31\u80fd\u5c06\u4f60\u7684\u60f3\u6cd5\u53d8\u6210\u771f\u6b63\u76843D\u7a0b\u5e8f\u3002\u5982\u679c\u5982\u679c\u4f60\u89c9\u5f97\u524d\u9762\u8fd9\u4e9b\u8bb2\u7684\u90fd\u662f\u4f60\uff0c\u6b22\u8fce\u7ee7\u7eed\u9605\u8bfb\u6211\u7684\u6559\u7a0b\u3002","title":"\u4e3a\u4ec0\u4e48\u8981\u9605\u8bfb\u8fd9\u4e9b\u6559\u7a0b\u5462\uff1f"},{"location":"#_2","text":"\u6211\u8fd9\u4e9b\u6559\u7a0b\u7684\u6838\u5fc3\u662f\u73b0\u4ee3OpenGL\u3002\u5b66\u4e60\uff08\u548c\u4f7f\u7528\uff09\u73b0\u4ee3OpenGL\u9700\u8981\u7528\u6237\u5bf9\u56fe\u5f62\u7f16\u7a0b\u4ee5\u53caOpenGL\u7684\u5e55\u540e\u8fd0\u4f5c\u6709\u975e\u5e38\u597d\u7684\u7406\u89e3\u624d\u80fd\u5728\u7f16\u7a0b\u4e2d\u6709\u5f88\u597d\u7684\u53d1\u6325\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u4f1a\u9996\u5148\u8ba8\u8bba\u6838\u5fc3\u7684\u56fe\u5f62\u5b66\u6982\u5ff5\uff0cOpenGL\u600e\u6837\u5c06\u50cf\u7d20\u7ed8\u5236\u5230\u5c4f\u5e55\u4e0a\uff0c\u4ee5\u53ca\u5982\u4f55\u5229\u7528\u9ed1\u79d1\u6280\u505a\u51fa\u4e00\u4e9b\u5f88\u9177\u7684\u6548\u679c\u3002 \u9664\u4e86\u6838\u5fc3\u6982\u5ff5\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u4f1a\u8ba8\u8bba\u8bb8\u591a\u6709\u7528\u7684\u6280\u5de7\uff0c\u5b83\u4eec\u90fd\u53ef\u4ee5\u7528\u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\uff0c\u6bd4\u5982\u8bf4\u5728\u573a\u666f\u4e2d\u79fb\u52a8\uff0c\u505a\u51fa\u6f02\u4eae\u7684\u5149\u7167\uff0c\u52a0\u8f7d\u5efa\u6a21\u8f6f\u4ef6\u5bfc\u51fa\u7684\u81ea\u5b9a\u4e49\u6a21\u578b\uff0c\u505a\u4e00\u4e9b\u5f88\u9177\u7684\u540e\u671f\u5904\u7406\u6280\u5de7\u7b49\u3002\u6700\u540e\uff0c\u6211\u4eec\u4e5f\u5c06\u4f1a\u4f7f\u7528\u6211\u4eec\u5df2\u5b66\u7684\u77e5\u8bc6\u4ece\u5934\u5f00\u59cb\u505a\u4e00\u4e2a\u5c0f\u6e38\u620f\uff0c\u8ba9\u4f60\u771f\u6b63\u4f53\u9a8c\u4e00\u628a\u56fe\u5f62\u7f16\u7a0b\u7684\u9b45\u529b\u3002","title":"\u4f60\u5c06\u5b66\u4f1a\u4ec0\u4e48\u5462\uff1f"},{"location":"#_3","text":"\u8fd9\u91cc\u662fLearnOpenGL\u6559\u7a0b\u7684\u4e2d\u6587\u7ffb\u8bd1\uff0c\u82f1\u6587\u7248\u7684\u5730\u5740\u4e3a\uff1a https://learnopengl.com/ \u7531\u4e8e\u7ffb\u8bd1\u53ef\u80fd\u65e0\u6cd5\u505a\u5230\u7cbe\u786e\u8868\u8fbe\u539f\u6587\u610f\u601d\uff0c\u6211\u4eec\u63a8\u8350\u60a8\u5728\u5bf9\u95ee\u9898\u6709\u7591\u60d1\u7684\u65f6\u5019\u53bb\u9605\u8bfb\u4e00\u4e0b\u82f1\u6587\u7248\u7684\u6559\u7a0b\u3002\u5982\u679c\u60a8\u5bf9\u7ffb\u8bd1\u6709\u66f4\u597d\u7684\u5efa\u8bae\uff0c\u53ef\u4ee5\u53bb\u6211\u4eec\u7684 GitHub\u5de5\u7a0b \u4e0a\u63d0\u4ea4Issue\u6216\u8005Pull Request\u3002\u5982\u679c\u662f\u5bf9\u6559\u7a0b\u7684\u5185\u5bb9\u6709\u95ee\u9898\uff0c\u8bf7\u5148\u67e5\u770b\u539f\u6587\uff0c\u5982\u679c\u4e0d\u662f\u7ffb\u8bd1\u9519\u8bef\u7684\u8bdd\uff0c\u8bf7\u76f4\u63a5\u5728\u539f\u7f51\u7ad9\u8bc4\u8bba\u533a\u5411\u4f5c\u8005\uff08JoeyDeVries\uff09\u53cd\u9988\u3002 \u5982\u679c\u6559\u7a0b\u4e2d\u7684\u6e90\u7801\u65e0\u6cd5\u6253\u5f00\u7684\u8bdd\uff0c\u53ef\u4ee5\u5230\u6559\u7a0b\u7684 GitHub\u9875\u9762 \u4e0a\u53bb\u5bfb\u627e\u6240\u9700\u7684\u4ee3\u7801\uff0c\u6bcf\u4e00\u8282\u6559\u7a0b\u7684\u6e90\u7801\u4ee5\u53ca\u7ec3\u4e60\u90fd\u4f4d\u4e8e src \u76ee\u5f55\u4e0b\u7684\u5bf9\u5e94\u7ae0\u8282\u76ee\u5f55\u4e2d\u3002","title":"\u5173\u4e8e\u4e2d\u6587\u7ffb\u8bd1"},{"location":"code_repo/","text":"\u4ee3\u7801\u4ed3\u5e93 \u4f60\u53ef\u4ee5\u5728\u6bcf\u4e00\u7bc7\u6559\u7a0b\u4e2d\u627e\u5230\u5728\u7ebf\u7684\u4ee3\u7801\u8303\u4f8b\uff0c\u4f46\u5982\u679c\u4f60\u60f3\u81ea\u5df1\u8fd0\u884c\u6559\u7a0b\u7684Demo\u6216\u8005\u5c06\u6b63\u5e38\u5de5\u4f5c\u7684\u8303\u4f8b\u4ee3\u7801\u4e0e\u4f60\u7684\u4ee3\u7801\u8fdb\u884c\u6bd4\u8f83\uff0c\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5728\u7ebf\u7684GitHub\u4ee3\u7801\u4ed3\u5e93\u3002 \u76ee\u524d\uff0c CMakeLists.txt \u6587\u4ef6\u80fd\u591f\u6b63\u5e38\u751f\u6210Visual Studio\u7684\u5de5\u7a0b\u6587\u4ef6\u548cmake\u6587\u4ef6\uff0c\u5b83\u80fd\u591f\u5728Windows\u548cLinux\u4e0a\u8fd0\u884c\u3002\u4f46\u662f\u5b83\u5728Apple\u7684macOS\u548c\u5176\u5b83\u7684IDE\u4e0a\u8fd8\u6ca1\u6709\u8fdb\u884c\u975e\u5e38\u5b8c\u5168\u7684\u6d4b\u8bd5\uff0c\u6240\u4ee5\u5982\u679c\u51fa\u73b0\u95ee\u9898\u4f60\u53ef\u4ee5\u7559\u8a00\u6216\u8005\u5e2e\u5fd9\u901a\u8fc7Pull Request\u6765\u66f4\u65b0\u4e00\u4e0b CMakeLists.txt \u6587\u4ef6\u8ba9\u5b83\u652f\u6301\u4e0d\u540c\u7684\u7cfb\u7edf\u3002 \u6211\u975e\u5e38\u611f\u8c22Zwookie\u5728\u5236\u4f5cLinux\u7684CMake\u811a\u672c\u65f6\u63d0\u4f9b\u7684\u5de8\u5927\u5e2e\u52a9\u3002\u611f\u8c22Zwookie\u5bf9CMakeLists\u7684\u66f4\u65b0\uff0c\u73b0\u5728\u5b83\u80fd\u591f\u5728Windows\u548cLinux\u4e0a\u751f\u6210\u5de5\u7a0b\u6587\u4ef6\u4e86\u3002 \u4f60\u4e5f\u53ef\u4ee5\u67e5\u770bPolytonic\u7684 Glitter \uff0c\u5b83\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u6837\u677f\u5de5\u7a0b\uff0c\u5b83\u63d0\u4f9b\u4e86\u5df2\u7ecf\u9884\u914d\u7f6e\u597d\u7684\u76f8\u5173\u4f9d\u8d56\u9879\u3002","title":"\u4ee3\u7801\u4ed3\u5e93"},{"location":"code_repo/#_1","text":"\u4f60\u53ef\u4ee5\u5728\u6bcf\u4e00\u7bc7\u6559\u7a0b\u4e2d\u627e\u5230\u5728\u7ebf\u7684\u4ee3\u7801\u8303\u4f8b\uff0c\u4f46\u5982\u679c\u4f60\u60f3\u81ea\u5df1\u8fd0\u884c\u6559\u7a0b\u7684Demo\u6216\u8005\u5c06\u6b63\u5e38\u5de5\u4f5c\u7684\u8303\u4f8b\u4ee3\u7801\u4e0e\u4f60\u7684\u4ee3\u7801\u8fdb\u884c\u6bd4\u8f83\uff0c\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5728\u7ebf\u7684GitHub\u4ee3\u7801\u4ed3\u5e93\u3002 \u76ee\u524d\uff0c CMakeLists.txt \u6587\u4ef6\u80fd\u591f\u6b63\u5e38\u751f\u6210Visual Studio\u7684\u5de5\u7a0b\u6587\u4ef6\u548cmake\u6587\u4ef6\uff0c\u5b83\u80fd\u591f\u5728Windows\u548cLinux\u4e0a\u8fd0\u884c\u3002\u4f46\u662f\u5b83\u5728Apple\u7684macOS\u548c\u5176\u5b83\u7684IDE\u4e0a\u8fd8\u6ca1\u6709\u8fdb\u884c\u975e\u5e38\u5b8c\u5168\u7684\u6d4b\u8bd5\uff0c\u6240\u4ee5\u5982\u679c\u51fa\u73b0\u95ee\u9898\u4f60\u53ef\u4ee5\u7559\u8a00\u6216\u8005\u5e2e\u5fd9\u901a\u8fc7Pull Request\u6765\u66f4\u65b0\u4e00\u4e0b CMakeLists.txt \u6587\u4ef6\u8ba9\u5b83\u652f\u6301\u4e0d\u540c\u7684\u7cfb\u7edf\u3002 \u6211\u975e\u5e38\u611f\u8c22Zwookie\u5728\u5236\u4f5cLinux\u7684CMake\u811a\u672c\u65f6\u63d0\u4f9b\u7684\u5de8\u5927\u5e2e\u52a9\u3002\u611f\u8c22Zwookie\u5bf9CMakeLists\u7684\u66f4\u65b0\uff0c\u73b0\u5728\u5b83\u80fd\u591f\u5728Windows\u548cLinux\u4e0a\u751f\u6210\u5de5\u7a0b\u6587\u4ef6\u4e86\u3002 \u4f60\u4e5f\u53ef\u4ee5\u67e5\u770bPolytonic\u7684 Glitter \uff0c\u5b83\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u6837\u677f\u5de5\u7a0b\uff0c\u5b83\u63d0\u4f9b\u4e86\u5df2\u7ecf\u9884\u914d\u7f6e\u597d\u7684\u76f8\u5173\u4f9d\u8d56\u9879\u3002","title":"\u4ee3\u7801\u4ed3\u5e93"},{"location":"intro/","text":"\u7b80\u4ecb \u4f60\u5230\u8fd9\u91cc\u6765\u53ef\u80fd\u662f\u60f3\u5b66\u4e60\u8ba1\u7b97\u673a\u56fe\u5f62\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u5e76\u4e14\u81ea\u5df1\u505a\u4e00\u4e9b\u5f88\u9177\u7684\u4e1c\u897f\u3002\u81ea\u5df1\u505a\u4e1c\u897f\u662f\u975e\u5e38\u6709\u8da3\u7684\uff0c\u540c\u6837\u4e5f\u80fd\u7ed9\u4f60\u5e26\u6765\u5bf9\u56fe\u5f62\u7f16\u7a0b\u7684\u5174\u8da3\u3002\u7136\u800c\uff0c\u5728\u4f60\u5f00\u59cb\u5b66\u4e60\u65c5\u7a0b\u4e4b\u524d\uff0c\u6709\u8fd9\u4e48\u51e0\u70b9\u6ce8\u610f\u4e8b\u9879\u3002 \u524d\u7f6e\u77e5\u8bc6 \u7531\u4e8eOpenGL\u662f\u4e00\u4e2a\u56fe\u5f62API\uff0c\u5e76\u4e0d\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u5e73\u53f0\uff0c\u5b83\u9700\u8981\u4e00\u4e2a\u7f16\u7a0b\u8bed\u8a00\u6765\u5de5\u4f5c\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u7684\u662fC++\u3002\u6240\u4ee5\uff0c\u5bf9C++\u7684\u719f\u7ec3\u638c\u63e1\u5728\u5b66\u4e60\u8fd9\u4e2a\u6559\u7a0b\u4e2d\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u5f53\u7136\uff0c\u6211\u4ecd\u5c06\u5c1d\u8bd5\u89e3\u91ca\u5927\u90e8\u5206\u7528\u5230\u7684\u6982\u5ff5\uff0c\u5305\u62ec\u4e00\u4e9b\u9ad8\u7ea7\u7684C++\u8bdd\u9898\uff0c\u6240\u4ee5\uff0c\u4f60\u5e76\u4e0d\u4e00\u5b9a\u8981\u662f\u4e00\u4e2aC++\u4e13\u5bb6\u624d\u80fd\u6765\u5b66\u4e60\u3002\u4e0d\u8fc7\uff0c\u8bf7\u786e\u4fdd\u4f60\u81f3\u5c11\u5e94\u8be5\u80fd\u5199\u4e2a\u6bd4 \u2018Hello World\u2019 \u590d\u6742\u7684\u7a0b\u5e8f\u3002\u5982\u679c\u4f60\u5bf9C++\u4e0d\u662f\u5f88\u719f\u6089\uff0c\u6211\u63a8\u8350\u60a8\u5b66\u4e60\u4e00\u4e0b www.learncpp.com \u4e0a\u7684\u514d\u8d39\u6559\u7a0b\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u4e5f\u5c06\u7528\u5230\u4e00\u4e9b\u6570\u5b66\u77e5\u8bc6\uff08\u7ebf\u6027\u4ee3\u6570\u3001\u51e0\u4f55\u3001\u4e09\u89d2\u5b66\uff09\uff0c\u540c\u6837\u6211\u4e5f\u4f1a\u5c1d\u8bd5\u89e3\u91ca\u6240\u6709\u7684\u5fc5\u5907\u7684\u6570\u5b66\u6982\u5ff5\u3002\u4f46\u662f\uff0c\u6bd5\u7adf\u6211\u4e0d\u662f\u4e00\u4e2a\u6570\u5b66\u5bb6\uff0c\u5373\u4f7f\u6211\u7684\u89e3\u91ca\u53ef\u80fd\u4f1a\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u4f46\u662f\u8fd9\u4e9b\u89e3\u91ca\u90fd\u662f\u4e0d\u5168\u9762\u7684\u3002\u6240\u4ee5\uff0c\u5728\u5fc5\u987b\u7684\u65f6\u5019\u6211\u4f1a\u94fe\u63a5\u4e00\u4e9b\u4e0d\u9519\u7684\u8d44\u6599\uff0c\u5b83\u4eec\u4f1a\u5c06\u8fd9\u4e9b\u6982\u5ff5\u89e3\u91ca\u7684\u66f4\u52a0\u5168\u9762\u3002\u4e0d\u8981\u88ab\u5fc5\u987b\u7684\u6570\u5b66\u77e5\u8bc6\u5413\u5230\u4e86\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u6982\u5ff5\u53ea\u8981\u6709\u57fa\u7840\u7684\u6570\u5b66\u80cc\u666f\u90fd\u53ef\u4ee5\u7406\u89e3\u3002\u6211\u4e5f\u4f1a\u5c06\u6570\u5b66\u7684\u5185\u5bb9\u538b\u7f29\u81f3\u6781\u9650\u3002\u5927\u90e8\u5206\u7684\u529f\u80fd\u751a\u81f3\u90fd\u4e0d\u9700\u8981\u4f60\u7406\u89e3\u6240\u6709\u7684\u6570\u5b66\u77e5\u8bc6\uff0c\u53ea\u8981\u4f60\u4f1a\u4f7f\u7528\u5c31\u884c\u3002 \u7ed3\u6784 LearnOpenGL\u88ab\u5206\u89e3\u6210\u4e86\u8bb8\u591a\u5927\u7684\u4e3b\u9898\u3002\u6bcf\u4e2a\u4e3b\u9898\u5305\u62ec\u4e00\u4e9b\u5c0f\u8282\uff0c\u6bcf\u4e2a\u5c0f\u8282\u4e2d\u4f1a\u5bf9\u4e0d\u540c\u7684\u6982\u5ff5\u8fdb\u884c\u8be6\u7ec6\u7684\u89e3\u91ca\u3002\u6240\u6709\u7684\u4e3b\u9898\u90fd\u53ef\u4ee5\u5728\u76ee\u5f55\u4e2d\u627e\u5230\u3002\u8fd9\u4e9b\u4e3b\u9898\u662f\u6309\u7167\u7ebf\u6027\u6765\u5b66\u4e60\u7684\uff08\u6240\u4ee5\u5efa\u8bae\u4ece\u4e0a\u5230\u4e0b\u6765\u8bfb\uff0c\u9664\u975e\u6709\u7279\u6b8a\u6307\u793a\uff09\uff0c\u6bcf\u4e2a\u9875\u9762\u5c06\u4f1a\u89e3\u91ca\u6bcf\u4e2a\u6982\u5ff5\u7684\u80cc\u666f\u7406\u8bba\u548c\u5b9e\u9645\u64cd\u4f5c\u3002 \u4e3a\u4e86\u8ba9\u6559\u7a0b\u66f4\u5bb9\u6613\u7406\u89e3\uff0c\u7ed3\u6784\u66f4\u9c9c\u660e\uff0c\u672c\u7ad9\u91c7\u7528\u4e86 \u65b9\u6846 \u548c \u4ee3\u7801\u5757 \u3002 \u65b9\u6846 Important \u7eff\u8272 \u65b9\u6846\u662f\u4e00\u4e9b\u6ce8\u91ca\u6216\u8005\u662f\u5bf9\u4e8eOpenGL\u6216\u8ba8\u8bba\u4e3b\u9898\u6709\u7528\u7684\u7279\u6027/\u63d0\u793a\u3002 Attention \u7ea2\u8272 \u65b9\u6846\u662f\u4e00\u4e9b\u8b66\u544a\u6216\u8005\u4e00\u4e9b\u4f60\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u7279\u6027\u3002 \u8bd1\u6ce8 \u84dd\u8272 \u65b9\u6846\u662f\u7ffb\u8bd1\u65f6\u4e3a\u4e86\u5e2e\u52a9\u8bfb\u8005\u7406\u89e3\u9644\u52a0\u7684\u4e00\u4e9b\u4fe1\u606f\u3002 \u4ee3\u7801 \u4f60\u5728\u7f51\u7ad9\u4e2d\u5c06\u4f1a\u770b\u5230\u5f88\u591a\u5c0f\u7247\u7684\u4ee3\u7801\uff0c\u5b83\u4eec\u5c06\u4f1a\u5728\u4e0b\u9762\u8fd9\u6837\u7684\u4ee3\u7801\u6846\u4e2d\uff1a // \u8fd9\u4e2a\u65b9\u6846\u662f\u4ee3\u7801 \u7531\u4e8e\u8fd9\u6837\u53ea\u63d0\u4f9b\u4e86\u4ee3\u7801\u7684\u7247\u6bb5\uff0c\u5f53\u9700\u8981\u7684\u65f6\u5019\u6211\u4f1a\u63d0\u4f9b\u4e2a\u94fe\u63a5\u5230\u5f53\u524d\u5de5\u7a0b\u7684\u6e90\u4ee3\u7801\u7684\u3002 \u989c\u8272\u6807\u8bb0 \u6709\u4e00\u4e9b\u8bcd\u8bed\u4f1a\u4ee5\u4e0d\u540c\u989c\u8272\u663e\u793a\u51fa\u6765\uff0c\u7528\u6765\u8868\u793a\u8fd9\u4e9b\u8bcd\u8bed\u6709\u4e0d\u540c\u7684\u610f\u4e49\uff1a \u5b9a\u4e49 \uff1a\u7eff\u8272\u7684\u5b57\u662f\u5b9a\u4e49\uff0c\u5373\u4e00\u4e2a\u91cd\u8981\u7684\u6982\u5ff5\u6216\u540d\u79f0\uff0c\u8fd9\u4e9b\u8bcd\u8bed\u4f60\u80fd\u7ecf\u5e38\u89c1\u5230\u3002 \u7a0b\u5e8f\u903b\u8f91 \uff1a\u7ea2\u8272\u7684\u5b57\u662f\u51fd\u6570\u7684\u540d\u79f0\u6216\u8005\u662f\u7c7b\u540d\u3002 \u53d8\u91cf \uff1a\u84dd\u8272\u7684\u5b57\u662f\u53d8\u91cf\uff0c\u5305\u62ec\u6240\u6709\u7684OpenGL\u5e38\u91cf\u3002 \u73b0\u5728\u4f60\u5e94\u8be5\u5bf9\u8fd9\u4e2a\u7f51\u7ad9\u7684\u7ed3\u6784\u6709\u4e00\u4e9b\u4e86\u89e3\u4e86\uff0c\u4f60\u73b0\u5728\u53ef\u4ee5\u8fdb\u5165\u300c\u5165\u95e8\u300d\u8fd9\u4e00\u7ae0\uff0c\u5f00\u59cb\u4f60\u7684OpenGL\u5b66\u4e60\u751f\u6daf\u5427\uff01","title":"\u7b80\u4ecb"},{"location":"intro/#_1","text":"\u4f60\u5230\u8fd9\u91cc\u6765\u53ef\u80fd\u662f\u60f3\u5b66\u4e60\u8ba1\u7b97\u673a\u56fe\u5f62\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u5e76\u4e14\u81ea\u5df1\u505a\u4e00\u4e9b\u5f88\u9177\u7684\u4e1c\u897f\u3002\u81ea\u5df1\u505a\u4e1c\u897f\u662f\u975e\u5e38\u6709\u8da3\u7684\uff0c\u540c\u6837\u4e5f\u80fd\u7ed9\u4f60\u5e26\u6765\u5bf9\u56fe\u5f62\u7f16\u7a0b\u7684\u5174\u8da3\u3002\u7136\u800c\uff0c\u5728\u4f60\u5f00\u59cb\u5b66\u4e60\u65c5\u7a0b\u4e4b\u524d\uff0c\u6709\u8fd9\u4e48\u51e0\u70b9\u6ce8\u610f\u4e8b\u9879\u3002","title":"\u7b80\u4ecb"},{"location":"intro/#_2","text":"\u7531\u4e8eOpenGL\u662f\u4e00\u4e2a\u56fe\u5f62API\uff0c\u5e76\u4e0d\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u5e73\u53f0\uff0c\u5b83\u9700\u8981\u4e00\u4e2a\u7f16\u7a0b\u8bed\u8a00\u6765\u5de5\u4f5c\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u7684\u662fC++\u3002\u6240\u4ee5\uff0c\u5bf9C++\u7684\u719f\u7ec3\u638c\u63e1\u5728\u5b66\u4e60\u8fd9\u4e2a\u6559\u7a0b\u4e2d\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u5f53\u7136\uff0c\u6211\u4ecd\u5c06\u5c1d\u8bd5\u89e3\u91ca\u5927\u90e8\u5206\u7528\u5230\u7684\u6982\u5ff5\uff0c\u5305\u62ec\u4e00\u4e9b\u9ad8\u7ea7\u7684C++\u8bdd\u9898\uff0c\u6240\u4ee5\uff0c\u4f60\u5e76\u4e0d\u4e00\u5b9a\u8981\u662f\u4e00\u4e2aC++\u4e13\u5bb6\u624d\u80fd\u6765\u5b66\u4e60\u3002\u4e0d\u8fc7\uff0c\u8bf7\u786e\u4fdd\u4f60\u81f3\u5c11\u5e94\u8be5\u80fd\u5199\u4e2a\u6bd4 \u2018Hello World\u2019 \u590d\u6742\u7684\u7a0b\u5e8f\u3002\u5982\u679c\u4f60\u5bf9C++\u4e0d\u662f\u5f88\u719f\u6089\uff0c\u6211\u63a8\u8350\u60a8\u5b66\u4e60\u4e00\u4e0b www.learncpp.com \u4e0a\u7684\u514d\u8d39\u6559\u7a0b\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u4e5f\u5c06\u7528\u5230\u4e00\u4e9b\u6570\u5b66\u77e5\u8bc6\uff08\u7ebf\u6027\u4ee3\u6570\u3001\u51e0\u4f55\u3001\u4e09\u89d2\u5b66\uff09\uff0c\u540c\u6837\u6211\u4e5f\u4f1a\u5c1d\u8bd5\u89e3\u91ca\u6240\u6709\u7684\u5fc5\u5907\u7684\u6570\u5b66\u6982\u5ff5\u3002\u4f46\u662f\uff0c\u6bd5\u7adf\u6211\u4e0d\u662f\u4e00\u4e2a\u6570\u5b66\u5bb6\uff0c\u5373\u4f7f\u6211\u7684\u89e3\u91ca\u53ef\u80fd\u4f1a\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u4f46\u662f\u8fd9\u4e9b\u89e3\u91ca\u90fd\u662f\u4e0d\u5168\u9762\u7684\u3002\u6240\u4ee5\uff0c\u5728\u5fc5\u987b\u7684\u65f6\u5019\u6211\u4f1a\u94fe\u63a5\u4e00\u4e9b\u4e0d\u9519\u7684\u8d44\u6599\uff0c\u5b83\u4eec\u4f1a\u5c06\u8fd9\u4e9b\u6982\u5ff5\u89e3\u91ca\u7684\u66f4\u52a0\u5168\u9762\u3002\u4e0d\u8981\u88ab\u5fc5\u987b\u7684\u6570\u5b66\u77e5\u8bc6\u5413\u5230\u4e86\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u6982\u5ff5\u53ea\u8981\u6709\u57fa\u7840\u7684\u6570\u5b66\u80cc\u666f\u90fd\u53ef\u4ee5\u7406\u89e3\u3002\u6211\u4e5f\u4f1a\u5c06\u6570\u5b66\u7684\u5185\u5bb9\u538b\u7f29\u81f3\u6781\u9650\u3002\u5927\u90e8\u5206\u7684\u529f\u80fd\u751a\u81f3\u90fd\u4e0d\u9700\u8981\u4f60\u7406\u89e3\u6240\u6709\u7684\u6570\u5b66\u77e5\u8bc6\uff0c\u53ea\u8981\u4f60\u4f1a\u4f7f\u7528\u5c31\u884c\u3002","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"intro/#_3","text":"LearnOpenGL\u88ab\u5206\u89e3\u6210\u4e86\u8bb8\u591a\u5927\u7684\u4e3b\u9898\u3002\u6bcf\u4e2a\u4e3b\u9898\u5305\u62ec\u4e00\u4e9b\u5c0f\u8282\uff0c\u6bcf\u4e2a\u5c0f\u8282\u4e2d\u4f1a\u5bf9\u4e0d\u540c\u7684\u6982\u5ff5\u8fdb\u884c\u8be6\u7ec6\u7684\u89e3\u91ca\u3002\u6240\u6709\u7684\u4e3b\u9898\u90fd\u53ef\u4ee5\u5728\u76ee\u5f55\u4e2d\u627e\u5230\u3002\u8fd9\u4e9b\u4e3b\u9898\u662f\u6309\u7167\u7ebf\u6027\u6765\u5b66\u4e60\u7684\uff08\u6240\u4ee5\u5efa\u8bae\u4ece\u4e0a\u5230\u4e0b\u6765\u8bfb\uff0c\u9664\u975e\u6709\u7279\u6b8a\u6307\u793a\uff09\uff0c\u6bcf\u4e2a\u9875\u9762\u5c06\u4f1a\u89e3\u91ca\u6bcf\u4e2a\u6982\u5ff5\u7684\u80cc\u666f\u7406\u8bba\u548c\u5b9e\u9645\u64cd\u4f5c\u3002 \u4e3a\u4e86\u8ba9\u6559\u7a0b\u66f4\u5bb9\u6613\u7406\u89e3\uff0c\u7ed3\u6784\u66f4\u9c9c\u660e\uff0c\u672c\u7ad9\u91c7\u7528\u4e86 \u65b9\u6846 \u548c \u4ee3\u7801\u5757 \u3002","title":"\u7ed3\u6784"},{"location":"intro/#_4","text":"Important \u7eff\u8272 \u65b9\u6846\u662f\u4e00\u4e9b\u6ce8\u91ca\u6216\u8005\u662f\u5bf9\u4e8eOpenGL\u6216\u8ba8\u8bba\u4e3b\u9898\u6709\u7528\u7684\u7279\u6027/\u63d0\u793a\u3002 Attention \u7ea2\u8272 \u65b9\u6846\u662f\u4e00\u4e9b\u8b66\u544a\u6216\u8005\u4e00\u4e9b\u4f60\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u7279\u6027\u3002 \u8bd1\u6ce8 \u84dd\u8272 \u65b9\u6846\u662f\u7ffb\u8bd1\u65f6\u4e3a\u4e86\u5e2e\u52a9\u8bfb\u8005\u7406\u89e3\u9644\u52a0\u7684\u4e00\u4e9b\u4fe1\u606f\u3002","title":"\u65b9\u6846"},{"location":"intro/#_5","text":"\u4f60\u5728\u7f51\u7ad9\u4e2d\u5c06\u4f1a\u770b\u5230\u5f88\u591a\u5c0f\u7247\u7684\u4ee3\u7801\uff0c\u5b83\u4eec\u5c06\u4f1a\u5728\u4e0b\u9762\u8fd9\u6837\u7684\u4ee3\u7801\u6846\u4e2d\uff1a // \u8fd9\u4e2a\u65b9\u6846\u662f\u4ee3\u7801 \u7531\u4e8e\u8fd9\u6837\u53ea\u63d0\u4f9b\u4e86\u4ee3\u7801\u7684\u7247\u6bb5\uff0c\u5f53\u9700\u8981\u7684\u65f6\u5019\u6211\u4f1a\u63d0\u4f9b\u4e2a\u94fe\u63a5\u5230\u5f53\u524d\u5de5\u7a0b\u7684\u6e90\u4ee3\u7801\u7684\u3002","title":"\u4ee3\u7801"},{"location":"intro/#_6","text":"\u6709\u4e00\u4e9b\u8bcd\u8bed\u4f1a\u4ee5\u4e0d\u540c\u989c\u8272\u663e\u793a\u51fa\u6765\uff0c\u7528\u6765\u8868\u793a\u8fd9\u4e9b\u8bcd\u8bed\u6709\u4e0d\u540c\u7684\u610f\u4e49\uff1a \u5b9a\u4e49 \uff1a\u7eff\u8272\u7684\u5b57\u662f\u5b9a\u4e49\uff0c\u5373\u4e00\u4e2a\u91cd\u8981\u7684\u6982\u5ff5\u6216\u540d\u79f0\uff0c\u8fd9\u4e9b\u8bcd\u8bed\u4f60\u80fd\u7ecf\u5e38\u89c1\u5230\u3002 \u7a0b\u5e8f\u903b\u8f91 \uff1a\u7ea2\u8272\u7684\u5b57\u662f\u51fd\u6570\u7684\u540d\u79f0\u6216\u8005\u662f\u7c7b\u540d\u3002 \u53d8\u91cf \uff1a\u84dd\u8272\u7684\u5b57\u662f\u53d8\u91cf\uff0c\u5305\u62ec\u6240\u6709\u7684OpenGL\u5e38\u91cf\u3002 \u73b0\u5728\u4f60\u5e94\u8be5\u5bf9\u8fd9\u4e2a\u7f51\u7ad9\u7684\u7ed3\u6784\u6709\u4e00\u4e9b\u4e86\u89e3\u4e86\uff0c\u4f60\u73b0\u5728\u53ef\u4ee5\u8fdb\u5165\u300c\u5165\u95e8\u300d\u8fd9\u4e00\u7ae0\uff0c\u5f00\u59cb\u4f60\u7684OpenGL\u5b66\u4e60\u751f\u6daf\u5427\uff01","title":"\u989c\u8272\u6807\u8bb0"},{"location":"legacy/","text":"\u5386\u53f2\u5b58\u6863 \u7531\u4e8e\u4f5c\u8005\u5728\u5bf9\u6559\u7a0b\u4e0d\u65ad\u5730\u66f4\u65b0\uff0c\u4e00\u4e9b\u6bd4\u8f83\u65e7\u7684\u5185\u5bb9\u5c31\u4ece\u6559\u7a0b\u4e2d\u5220\u9664\u6216\u8005\u4fee\u6539\u4e86\uff0c\u4f46\u662f\u8fd9\u90e8\u5206\u5185\u5bb9\u4ecd\u7136\u5bf9\u5728\u66f4\u65b0\u4ee5\u524d\u5c31\u5f00\u59cb\u5b66\u4e60\u7684\u8bfb\u8005\u53ef\u80fd\u8fd8\u662f\u4f1a\u6709\u70b9\u7528\u5904\u7684\u3002\u6240\u4ee5\uff0c\u6211\u4f1a\u5c06\u88ab\u5927\u6bb5\u5220\u9664\u6216\u4fee\u6539\u7684\u5185\u5bb9\u7559\u5230\u8fd9\u91cc\u4ee5\u4f9b\u5927\u5bb6\u53c2\u8003\u3002 \u6ce8\u610f\u7684\u662f\uff0c\u4e00\u4e9b\u6bd4\u8f83\u5c0f\u7684\u6539\u52a8\u5c06\u4e0d\u4f1a\u51fa\u73b0\u5728\u8fd9\u91cc\u3002 01-01 OpenGL Important \u57fa\u5143\u7c7b\u578b(Primitive Type) \u4f7f\u7528OpenGL\u65f6\uff0c\u5efa\u8bae\u4f7f\u7528OpenGL\u5b9a\u4e49\u7684\u57fa\u5143\u7c7b\u578b\u3002\u6bd4\u5982\u4f7f\u7528 float \u65f6\u6211\u4eec\u52a0\u4e0a\u524d\u7f00 GL \uff08\u56e0\u6b64\u5199\u4f5c GLfloat \uff09\u3002 int \u3001 uint \u3001 char \u3001 bool \u7b49\u7b49\u4e5f\u7c7b\u4f3c\u3002OpenGL\u5b9a\u4e49\u7684\u8fd9\u4e9bGL\u57fa\u5143\u7c7b\u578b\u7684\u5185\u5b58\u5e03\u5c40\u662f\u4e0e\u5e73\u53f0\u65e0\u5173\u7684\uff0c\u800cint\u7b49\u57fa\u5143\u7c7b\u578b\u5728\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u53ef\u80fd\u6709\u4e0d\u540c\u7684\u5185\u5b58\u5e03\u5c40\u3002\u4f7f\u7528GL\u57fa\u5143\u7c7b\u578b\u53ef\u4ee5\u4fdd\u8bc1\u4f60\u7684\u7a0b\u5e8f\u5728\u4e0d\u540c\u7684\u5e73\u53f0\u4e0a\u5de5\u4f5c\u4e00\u81f4\u3002 01-02 \u521b\u5efa\u7a97\u53e3 \u7f16\u8bd1\u548c\u94fe\u63a5GLEW GLEW\u662fOpenGL Extension Wrangler Library\u7684\u7f29\u5199\uff0c\u5b83\u80fd\u89e3\u51b3\u6211\u4eec\u4e0a\u9762\u63d0\u5230\u7684\u90a3\u4e2a\u7e41\u7410\u7684\u95ee\u9898\u3002\u56e0\u4e3aGLEW\u4e5f\u662f\u4e00\u4e2a\u5e93\uff0c\u6211\u4eec\u540c\u6837\u9700\u8981\u6784\u5efa\u5e76\u5c06\u5176\u94fe\u63a5\u8fdb\u5de5\u7a0b\u3002GLEW\u53ef\u4ee5\u4ece \u8fd9\u91cc \u4e0b\u8f7d\uff0c\u4f60\u540c\u6837\u53ef\u4ee5\u9009\u62e9\u4e0b\u8f7d\u4e8c\u8fdb\u5236\u7248\u672c\uff0c\u5982\u679c\u4f60\u7684\u76ee\u6807\u5e73\u53f0\u5217\u5728\u4e0a\u9762\u7684\u8bdd\uff0c\u6216\u8005\u4e0b\u8f7d\u6e90\u7801\u7f16\u8bd1\uff0c\u6b65\u9aa4\u548c\u7f16\u8bd1GLFW\u65f6\u5dee\u4e0d\u591a\u3002\u8bb0\u4f4f\uff0c\u5982\u679c\u4e0d\u786e\u5b9a\u7684\u8bdd\uff0c\u9009\u62e932\u4f4d\u7684\u4e8c\u8fdb\u5236\u7248\u672c\u3002 \u6211\u4eec\u4f7f\u7528GLEW\u7684 \u9759\u6001 \u7248\u672c glew32s.lib \uff08\u6ce8\u610f\u8fd9\u91cc\u7684\u201cs\u201d\uff09\uff0c\u5c06\u5e93\u6587\u4ef6\u6dfb\u52a0\u5230\u4f60\u7684\u5e93\u76ee\u5f55\uff0c\u5c06 include \u5185\u5bb9\u6dfb\u52a0\u5230\u4f60\u7684include\u76ee\u5f55\u3002\u63a5\u4e0b\u6765\uff0c\u5728VS\u7684\u94fe\u63a5\u5668\u9009\u9879\u91cc\u52a0\u4e0a glew32s.lib \u3002\u6ce8\u610fGLFW3\uff08\u9ed8\u8ba4\uff09\u4e5f\u662f\u7f16\u8bd1\u6210\u4e86\u4e00\u4e2a\u9759\u6001\u5e93\u3002 Important \u9759\u6001 (Static)\u94fe\u63a5\u662f\u6307\u7f16\u8bd1\u65f6\u5c31\u5c06\u5e93\u4ee3\u7801\u91cc\u7684\u5185\u5bb9\u6574\u5408\u8fdb\u4f60\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u4f18\u70b9\u5c31\u662f\u4f60\u4e0d\u9700\u8981\u7ba1\u7406\u989d\u5916\u7684\u6587\u4ef6\u4e86\uff0c\u53ea\u9700\u8981\u53d1\u5e03\u4f60\u5355\u72ec\u7684\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u5c31\u884c\u4e86\u3002\u7f3a\u70b9\u5c31\u662f\u4f60\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4f1a\u53d8\u5f97\u66f4\u5927\uff0c\u53e6\u5916\u5f53\u5e93\u6709\u5347\u7ea7\u7248\u672c\u65f6\uff0c\u4f60\u5fc5\u987b\u91cd\u65b0\u8fdb\u884c\u7f16\u8bd1\u6574\u4e2a\u7a0b\u5e8f\u3002 \u52a8\u6001 (Dynamic)\u94fe\u63a5\u662f\u6307\u4e00\u4e2a\u5e93\u901a\u8fc7 .dll \u6216 .so \u7684\u65b9\u5f0f\u5b58\u5728\uff0c\u5b83\u7684\u4ee3\u7801\u4e0e\u4f60\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u4ee3\u7801\u662f\u5206\u79bb\u7684\u3002\u4f18\u70b9\u662f\u4f7f\u4f60\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5927\u5c0f\u53d8\u5c0f\u5e76\u4e14\u66f4\u5bb9\u6613\u5347\u7ea7\uff0c\u7f3a\u70b9\u662f\u4f60\u6700\u7ec8\u53d1\u5e03\u7a0b\u5e8f\u65f6\u5fc5\u987b\u5e26\u4e0a\u8fd9\u4e9bDLL\u3002 \u5982\u679c\u4f60\u5e0c\u671b\u9759\u6001\u94fe\u63a5GLEW\uff0c\u5fc5\u987b\u5728\u5305\u542bGLEW\u5934\u6587\u4ef6\u4e4b\u524d\u5b9a\u4e49\u9884\u5904\u7406\u5668\u5b8f GLEW_STATIC \uff1a #define GLEW_STATIC #include <GL/glew.h> \u5982\u679c\u4f60\u5e0c\u671b\u52a8\u6001\u94fe\u63a5\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u7701\u7565\u8fd9\u4e2a\u5b8f\u3002\u4f46\u662f\u8bb0\u4f4f\u4f7f\u7528\u52a8\u6001\u94fe\u63a5\u7684\u8bdd\u4f60\u9700\u8981\u62f7\u8d1d\u4e00\u4efd.DLL\u6587\u4ef6\u5230\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u76ee\u5f55\u3002 Important \u5bf9\u4e8e\u7528GCC\u7f16\u8bd1\u7684Linux\u7528\u6237\u5efa\u8bae\u4f7f\u7528\u8fd9\u4e2a\u547d\u4ee4\u884c\u9009\u9879 -lGLEW -lglfw3 -lGL -lX11 -lpthread -lXrandr -lXi \u3002\u6ca1\u6709\u6b63\u786e\u94fe\u63a5\u76f8\u5e94\u7684\u5e93\u4f1a\u4ea7\u751f undefined reference (\u672a\u5b9a\u4e49\u7684\u5f15\u7528) \u8fd9\u4e2a\u9519\u8bef\u3002 \u6211\u4eec\u73b0\u5728\u6210\u529f\u7f16\u8bd1\u4e86GLFW\u548cGLEW\u5e93\uff0c\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u5c06\u8fdb\u5165 \u4e0b\u4e00\u8282 \u53bb\u771f\u6b63\u4f7f\u7528GLFW\u548cGLEW\u6765\u8bbe\u7f6eOpenGL\u4e0a\u4e0b\u6587\u5e76\u521b\u5efa\u7a97\u53e3\u3002\u8bb0\u5f97\u786e\u4fdd\u4f60\u7684\u5934\u6587\u4ef6\u548c\u5e93\u6587\u4ef6\u7684\u76ee\u5f55\u8bbe\u7f6e\u6b63\u786e\uff0c\u4ee5\u53ca\u94fe\u63a5\u5668\u91cc\u5f15\u7528\u7684\u5e93\u6587\u4ef6\u540d\u6b63\u786e\u3002\u5982\u679c\u4ecd\u7136\u9047\u5230\u9519\u8bef\uff0c\u53ef\u4ee5\u5148\u770b\u4e00\u4e0b\u8bc4\u8bba\u6709\u6ca1\u6709\u4eba\u9047\u5230\u7c7b\u4f3c\u7684\u95ee\u9898\uff0c\u8bf7\u53c2\u8003\u989d\u5916\u8d44\u6e90\u4e2d\u7684\u4f8b\u5b50\u6216\u8005\u5728\u4e0b\u9762\u7684\u8bc4\u8bba\u533a\u63d0\u95ee\u3002 01-03 \u4f60\u597d\uff0c\u7a97\u53e3 GLEW \u5728\u4e4b\u524d\u7684\u6559\u7a0b\u4e2d\u5df2\u7ecf\u63d0\u5230\u8fc7\uff0cGLEW\u662f\u7528\u6765\u7ba1\u7406OpenGL\u7684\u51fd\u6570\u6307\u9488\u7684\uff0c\u6240\u4ee5\u5728\u8c03\u7528\u4efb\u4f55OpenGL\u7684\u51fd\u6570\u4e4b\u524d\u6211\u4eec\u9700\u8981\u521d\u59cb\u5316GLEW\u3002 glewExperimental = GL_TRUE; if (glewInit() != GLEW_OK) { std::cout << \"Failed to initialize GLEW\" << std::endl; return -1; } \u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u5728\u521d\u59cb\u5316GLEW\u4e4b\u524d\u8bbe\u7f6e glewExperimental \u53d8\u91cf\u7684\u503c\u4e3a GL_TRUE \uff0c\u8fd9\u6837\u505a\u80fd\u8ba9GLEW\u5728\u7ba1\u7406OpenGL\u7684\u51fd\u6570\u6307\u9488\u65f6\u66f4\u591a\u5730\u4f7f\u7528\u73b0\u4ee3\u5316\u7684\u6280\u672f\uff0c\u5982\u679c\u628a\u5b83\u8bbe\u7f6e\u4e3a GL_FALSE \u7684\u8bdd\u53ef\u80fd\u4f1a\u5728\u4f7f\u7528OpenGL\u7684\u6838\u5fc3\u6a21\u5f0f\u65f6\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\u3002 \u89c6\u53e3(Viewport) \u5728\u6211\u4eec\u5f00\u59cb\u6e32\u67d3\u4e4b\u524d\u8fd8\u6709\u4e00\u4ef6\u91cd\u8981\u7684\u4e8b\u60c5\u8981\u505a\uff0c\u6211\u4eec\u5fc5\u987b\u544a\u8bc9OpenGL\u6e32\u67d3\u7a97\u53e3\u7684\u5c3a\u5bf8\u5927\u5c0f\uff0c\u8fd9\u6837OpenGL\u624d\u53ea\u80fd\u77e5\u9053\u600e\u6837\u76f8\u5bf9\u4e8e\u7a97\u53e3\u5927\u5c0f\u663e\u793a\u6570\u636e\u548c\u5750\u6807\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 glViewport \u51fd\u6570\u6765\u8bbe\u7f6e\u7a97\u53e3\u7684 \u7ef4\u5ea6 (Dimension)\uff1a int width, height; glfwGetFramebufferSize(window, &width, &height); glViewport(0, 0, width, height); glViewport \u51fd\u6570\u524d\u4e24\u4e2a\u53c2\u6570\u63a7\u5236\u7a97\u53e3\u5de6\u4e0b\u89d2\u7684\u4f4d\u7f6e\u3002\u7b2c\u4e09\u4e2a\u548c\u7b2c\u56db\u4e2a\u53c2\u6570\u63a7\u5236\u6e32\u67d3\u7a97\u53e3\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff08\u50cf\u7d20\uff09\uff0c\u8fd9\u91cc\u6211\u4eec\u662f\u76f4\u63a5\u4eceGLFW\u4e2d\u83b7\u53d6\u7684\u3002\u6211\u4eec\u4eceGLFW\u4e2d\u83b7\u53d6\u89c6\u53e3\u7684\u7ef4\u5ea6\u800c\u4e0d\u8bbe\u7f6e\u4e3a800*600\u662f\u4e3a\u4e86\u8ba9\u5b83\u5728\u9ad8DPI\u7684\u5c4f\u5e55\u4e0a\uff08\u6bd4\u5982\u8bf4Apple\u7684\u89c6\u7f51\u819c\u663e\u793a\u5c4f\uff09\u4e5f\u80fd \u6b63\u5e38\u5de5\u4f5c \u3002 \u6211\u4eec\u5b9e\u9645\u4e0a\u4e5f\u53ef\u4ee5\u5c06\u89c6\u53e3\u7684\u7ef4\u5ea6\u8bbe\u7f6e\u4e3a\u6bd4GLFW\u7684\u7ef4\u5ea6\u5c0f\uff0c\u8fd9\u6837\u5b50\u4e4b\u540e\u6240\u6709\u7684OpenGL\u6e32\u67d3\u5c06\u4f1a\u5728\u4e00\u4e2a\u66f4\u5c0f\u7684\u7a97\u53e3\u4e2d\u663e\u793a\uff0c\u8fd9\u6837\u5b50\u7684\u8bdd\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u4e00\u4e9b\u5176\u5b83\u5143\u7d20\u663e\u793a\u5728OpenGL\u89c6\u53e3\u4e4b\u5916\u3002 Important OpenGL\u5e55\u540e\u4f7f\u7528 glViewport \u4e2d\u5b9a\u4e49\u7684\u4f4d\u7f6e\u548c\u5bbd\u9ad8\u8fdb\u884c2D\u5750\u6807\u7684\u8f6c\u6362\uff0c\u5c06OpenGL\u4e2d\u7684\u4f4d\u7f6e\u5750\u6807\u8f6c\u6362\u4e3a\u4f60\u7684\u5c4f\u5e55\u5750\u6807\u3002\u4f8b\u5982\uff0cOpenGL\u4e2d\u7684\u5750\u6807(-0.5, 0.5)\u6709\u53ef\u80fd\uff08\u6700\u7ec8\uff09\u88ab\u6620\u5c04\u4e3a\u5c4f\u5e55\u4e2d\u7684\u5750\u6807(200,450)\u3002\u6ce8\u610f\uff0c\u5904\u7406\u8fc7\u7684OpenGL\u5750\u6807\u8303\u56f4\u53ea\u4e3a-1\u52301\uff0c\u56e0\u6b64\u6211\u4eec\u4e8b\u5b9e\u4e0a\u5c06(-1\u52301)\u8303\u56f4\u5185\u7684\u5750\u6807\u6620\u5c04\u5230(0, 800)\u548c(0, 600)\u3002 \u8f93\u5165 \u6211\u4eec\u540c\u6837\u4e5f\u5e0c\u671b\u80fd\u591f\u5728GLFW\u4e2d\u5b9e\u73b0\u4e00\u4e9b\u952e\u76d8\u63a7\u5236\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528GLFW\u7684\u56de\u8c03\u51fd\u6570(Callback Function)\u6765\u5b8c\u6210\u3002 \u56de\u8c03\u51fd\u6570 \u4e8b\u5b9e\u4e0a\u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u5f53\u6211\u4eec\u8bbe\u7f6e\u597d\u540e\uff0cGLFW\u4f1a\u5728\u5408\u9002\u7684\u65f6\u5019\u8c03\u7528\u5b83\u3002 \u6309\u952e\u56de\u8c03 (KeyCallback)\u662f\u4f17\u591a\u56de\u8c03\u51fd\u6570\u4e2d\u7684\u4e00\u79cd\u3002\u5f53\u6211\u4eec\u8bbe\u7f6e\u4e86\u6309\u952e\u56de\u8c03\u4e4b\u540e\uff0cGLFW\u4f1a\u5728\u7528\u6237\u6709\u952e\u76d8\u4ea4\u4e92\u65f6\u8c03\u7528\u5b83\u3002\u8be5\u56de\u8c03\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\u6240\u793a\uff1a void key_callback(GLFWwindow* window, int key, int scancode, int action, int mode); \u6309\u952e\u56de\u8c03\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a GLFWwindow \u6307\u9488\u4f5c\u4e3a\u5b83\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff1b\u7b2c\u4e8c\u4e2a\u6574\u5f62\u53c2\u6570\u7528\u6765\u8868\u793a\u6309\u4e0b\u7684\u6309\u952e\uff1b action \u53c2\u6570\u8868\u793a\u8fd9\u4e2a\u6309\u952e\u662f\u88ab\u6309\u4e0b\u8fd8\u662f\u91ca\u653e\uff1b\u6700\u540e\u4e00\u4e2a\u6574\u5f62\u53c2\u6570\u8868\u793a\u662f\u5426\u6709Ctrl\u3001Shift\u3001Alt\u3001Super\u7b49\u6309\u94ae\u7684\u64cd\u4f5c\u3002GLFW\u4f1a\u5728\u5408\u9002\u7684\u65f6\u5019\u8c03\u7528\u5b83\uff0c\u5e76\u4e3a\u5404\u4e2a\u53c2\u6570\u4f20\u5165\u9002\u5f53\u7684\u503c\u3002 void key_callback(GLFWwindow* window, int key, int scancode, int action, int mode) { // \u5f53\u7528\u6237\u6309\u4e0bESC\u952e,\u6211\u4eec\u8bbe\u7f6ewindow\u7a97\u53e3\u7684WindowShouldClose\u5c5e\u6027\u4e3atrue // \u5173\u95ed\u5e94\u7528\u7a0b\u5e8f if(key == GLFW_KEY_ESCAPE && action == GLFW_PRESS) glfwSetWindowShouldClose(window, GL_TRUE); } \u5728\u6211\u4eec\uff08\u65b0\u521b\u5efa\u7684\uff09 key_callback \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u68c0\u6d4b\u4e86\u952e\u76d8\u662f\u5426\u6309\u4e0b\u4e86Escape\u952e\u3002\u5982\u679c\u952e\u7684\u786e\u6309\u4e0b\u4e86(\u4e0d\u91ca\u653e)\uff0c\u6211\u4eec\u4f7f\u7528 glfwSetwindowShouldClose \u51fd\u6570\u8bbe\u5b9a WindowShouldClose \u5c5e\u6027\u4e3a true \u4ece\u800c\u5173\u95edGLFW\u3002main\u51fd\u6570\u7684 while \u5faa\u73af\u4e0b\u4e00\u6b21\u7684\u68c0\u6d4b\u5c06\u4e3a\u5931\u8d25\uff0c\u7a0b\u5e8f\u5c31\u5173\u95ed\u4e86\u3002 \u6700\u540e\u4e00\u4ef6\u4e8b\u5c31\u662f\u901a\u8fc7GLFW\u6ce8\u518c\u6211\u4eec\u7684\u51fd\u6570\u81f3\u5408\u9002\u7684\u56de\u8c03\uff0c\u4ee3\u7801\u662f\u8fd9\u6837\u7684: glfwSetKeyCallback(window, key_callback); \u9664\u4e86\u6309\u952e\u56de\u8c03\u51fd\u6570\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u80fd\u6211\u4eec\u81ea\u5df1\u7684\u51fd\u6570\u6ce8\u518c\u5176\u5b83\u7684\u56de\u8c03\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u6765\u5904\u7406\u7a97\u53e3\u5c3a\u5bf8\u53d8\u5316\u3001\u5904\u7406\u4e00\u4e9b\u9519\u8bef\u4fe1\u606f\u7b49\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u521b\u5efa\u7a97\u53e3\u4e4b\u540e\uff0c\u5f00\u59cb\u6e38\u620f\u5faa\u73af\u4e4b\u524d\u6ce8\u518c\u5404\u79cd\u56de\u8c03\u51fd\u6570\u3002 01-06 \u7eb9\u7406 SOIL SOIL\u662f\u7b80\u6613OpenGL\u56fe\u50cf\u5e93(Simple OpenGL Image Library)\u7684\u7f29\u5199\uff0c\u5b83\u652f\u6301\u5927\u591a\u6570\u6d41\u884c\u7684\u56fe\u50cf\u683c\u5f0f\uff0c\u4f7f\u7528\u8d77\u6765\u4e5f\u5f88\u7b80\u5355\uff0c\u4f60\u53ef\u4ee5\u4ece\u4ed6\u4eec\u7684 \u4e3b\u9875 \u4e0b\u8f7d\u3002\u50cf\u5176\u5b83\u5e93\u4e00\u6837\uff0c\u4f60\u5fc5\u987b\u81ea\u5df1\u751f\u6210 .lib \u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 /projects \u6587\u4ef6\u5939\u5185\u7684\u4efb\u610f\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848(Solution)\u6587\u4ef6\uff08\u4e0d\u7528\u62c5\u5fc3\u4ed6\u4eec\u7684Visual Studio\u7248\u672c\u592a\u8001\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u4eec\u8f6c\u53d8\u4e3a\u65b0\u7684\u7248\u672c\uff0c\u8fd9\u4e00\u822c\u662f\u6ca1\u95ee\u9898\u7684\u3002\u8bd1\u6ce8\uff1a\u7528VS2010\u7684\u65f6\u5019\uff0c\u4f60\u8981\u7528VC8\u800c\u4e0d\u662fVC9\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u60f3\u5fc5\u66f4\u9ad8\u7248\u672c\u7684\u60c5\u51b5\u4ea6\u662f\u5982\u6b64\uff09\u6765\u751f\u6210\u4f60\u81ea\u5df1\u7684 .lib \u6587\u4ef6\u3002\u4f60\u8fd8\u8981\u6dfb\u52a0 src \u6587\u4ef6\u5939\u91cc\u9762\u7684\u6587\u4ef6\u5230\u4f60\u7684 includes \u6587\u4ef6\u5939\uff1b\u5bf9\u4e86\uff0c\u4e0d\u8981\u5fd8\u8bb0\u6dfb\u52a0 SOIL.lib \u5230\u4f60\u7684\u94fe\u63a5\u5668\u9009\u9879\uff0c\u5e76\u5728\u4f60\u4ee3\u7801\u6587\u4ef6\u7684\u5f00\u5934\u52a0\u4e0a #include <SOIL.h> \u3002 \u4e0b\u9762\u7684\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u4e00\u5f20 \u6728\u7bb1 \u7684\u56fe\u7247\u3002\u8981\u4f7f\u7528SOIL\u52a0\u8f7d\u56fe\u7247\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5b83\u7684 SOIL_load_image \u51fd\u6570\uff1a int width, height; unsigned char* image = SOIL_load_image(\"container.jpg\", &width, &height, 0, SOIL_LOAD_RGB); \u51fd\u6570\u9996\u5148\u9700\u8981\u8f93\u5165\u56fe\u7247\u6587\u4ef6\u7684\u8def\u5f84\u3002\u7136\u540e\u9700\u8981\u4e24\u4e2a int \u6307\u9488\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u548c\u7b2c\u4e09\u4e2a\u53c2\u6570\uff0cSOIL\u4f1a\u5206\u522b\u8fd4\u56de\u56fe\u7247\u7684 \u5bbd\u5ea6 \u548c \u9ad8\u5ea6 \u5230\u5176\u4e2d\u3002\u540e\u9762\u6211\u4eec\u5728\u751f\u6210\u7eb9\u7406\u7684\u65f6\u5019\u4f1a\u7528\u56fe\u50cf\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002\u7b2c\u56db\u4e2a\u53c2\u6570\u6307\u5b9a\u56fe\u7247\u7684 \u901a\u9053 (Channel)\u6570\u91cf\uff0c\u4f46\u662f\u8fd9\u91cc\u6211\u4eec\u53ea\u9700\u7559\u4e3a 0 \u3002\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u544a\u8bc9SOIL\u5982\u4f55\u6765\u52a0\u8f7d\u56fe\u7247\uff1a\u6211\u4eec\u53ea\u5173\u6ce8\u56fe\u7247\u7684 RGB \u503c\u3002\u7ed3\u679c\u4f1a\u50a8\u5b58\u4e3a\u4e00\u4e2a\u5f88\u5927\u7684char/byte\u6570\u7ec4\u3002 \u751f\u6210\u7eb9\u7406 \u548c\u4e4b\u524d\u751f\u6210\u7684OpenGL\u5bf9\u8c61\u4e00\u6837\uff0c\u7eb9\u7406\u4e5f\u662f\u4f7f\u7528ID\u5f15\u7528\u7684\u3002\u8ba9\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\uff1a GLuint texture; glGenTextures(1, &texture); glGenTextures \u51fd\u6570\u9996\u5148\u9700\u8981\u8f93\u5165\u751f\u6210\u7eb9\u7406\u7684\u6570\u91cf\uff0c\u7136\u540e\u628a\u5b83\u4eec\u50a8\u5b58\u5728\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684 GLuint \u6570\u7ec4\u4e2d\uff08\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u53ea\u662f\u4e00\u4e2a\u5355\u72ec\u7684 GLuint \uff09\uff0c\u5c31\u50cf\u5176\u4ed6\u5bf9\u8c61\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u7ed1\u5b9a\u5b83\uff0c\u8ba9\u4e4b\u540e\u4efb\u4f55\u7684\u7eb9\u7406\u6307\u4ee4\u90fd\u53ef\u4ee5\u914d\u7f6e\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\uff1a glBindTexture(GL_TEXTURE_2D, texture); \u73b0\u5728\u7eb9\u7406\u5df2\u7ecf\u7ed1\u5b9a\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u524d\u9762\u8f7d\u5165\u7684\u56fe\u7247\u6570\u636e\u751f\u6210\u4e00\u4e2a\u7eb9\u7406\u4e86\u3002\u7eb9\u7406\u53ef\u4ee5\u901a\u8fc7 glTexImage2D \u6765\u751f\u6210\uff1a glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, image); glGenerateMipmap(GL_TEXTURE_2D); \u51fd\u6570\u5f88\u957f\uff0c\u53c2\u6570\u4e5f\u4e0d\u5c11\uff0c\u6240\u4ee5\u6211\u4eec\u4e00\u4e2a\u4e00\u4e2a\u5730\u8bb2\u89e3\uff1a \u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u4e86\u7eb9\u7406\u76ee\u6807(Target)\u3002\u8bbe\u7f6e\u4e3a GL_TEXTURE_2D \u610f\u5473\u7740\u4f1a\u751f\u6210\u4e0e\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\u5bf9\u8c61\u5728\u540c\u4e00\u4e2a\u76ee\u6807\u4e0a\u7684\u7eb9\u7406\uff08\u4efb\u4f55\u7ed1\u5b9a\u5230 GL_TEXTURE_1D \u548c GL_TEXTURE_3D \u7684\u7eb9\u7406\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\uff09\u3002 \u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u7eb9\u7406\u6307\u5b9a\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7684\u7ea7\u522b\uff0c\u5982\u679c\u4f60\u5e0c\u671b\u5355\u72ec\u624b\u52a8\u8bbe\u7f6e\u6bcf\u4e2a\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7684\u7ea7\u522b\u7684\u8bdd\u3002\u8fd9\u91cc\u6211\u4eec\u586b0\uff0c\u4e5f\u5c31\u662f\u57fa\u672c\u7ea7\u522b\u3002 \u7b2c\u4e09\u4e2a\u53c2\u6570\u544a\u8bc9OpenGL\u6211\u4eec\u5e0c\u671b\u628a\u7eb9\u7406\u50a8\u5b58\u4e3a\u4f55\u79cd\u683c\u5f0f\u3002\u6211\u4eec\u7684\u56fe\u50cf\u53ea\u6709 RGB \u503c\uff0c\u56e0\u6b64\u6211\u4eec\u4e5f\u628a\u7eb9\u7406\u50a8\u5b58\u4e3a RGB \u503c\u3002 \u7b2c\u56db\u4e2a\u548c\u7b2c\u4e94\u4e2a\u53c2\u6570\u8bbe\u7f6e\u6700\u7ec8\u7684\u7eb9\u7406\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002\u6211\u4eec\u4e4b\u524d\u52a0\u8f7d\u56fe\u50cf\u7684\u65f6\u5019\u50a8\u5b58\u4e86\u5b83\u4eec\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u5bf9\u5e94\u7684\u53d8\u91cf\u3002 \u4e0b\u4e2a\u53c2\u6570\u5e94\u8be5\u603b\u662f\u88ab\u8bbe\u4e3a 0 \uff08\u5386\u53f2\u9057\u7559\u95ee\u9898\uff09\u3002 \u7b2c\u4e03\u7b2c\u516b\u4e2a\u53c2\u6570\u5b9a\u4e49\u4e86\u6e90\u56fe\u7684\u683c\u5f0f\u548c\u6570\u636e\u7c7b\u578b\u3002\u6211\u4eec\u4f7f\u7528RGB\u503c\u52a0\u8f7d\u8fd9\u4e2a\u56fe\u50cf\uff0c\u5e76\u628a\u5b83\u4eec\u50a8\u5b58\u4e3a char (byte)\u6570\u7ec4\uff0c\u6211\u4eec\u5c06\u4f1a\u4f20\u5165\u5bf9\u5e94\u503c\u3002 \u6700\u540e\u4e00\u4e2a\u53c2\u6570\u662f\u771f\u6b63\u7684\u56fe\u50cf\u6570\u636e\u3002 \u5f53\u8c03\u7528 glTexImage2D \u65f6\uff0c\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\u5bf9\u8c61\u5c31\u4f1a\u88ab\u9644\u52a0\u4e0a\u7eb9\u7406\u56fe\u50cf\u3002\u7136\u800c\uff0c\u76ee\u524d\u53ea\u6709\u57fa\u672c\u7ea7\u522b(Base-level)\u7684\u7eb9\u7406\u56fe\u50cf\u88ab\u52a0\u8f7d\u4e86\uff0c\u5982\u679c\u8981\u4f7f\u7528\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\uff0c\u6211\u4eec\u5fc5\u987b\u624b\u52a8\u8bbe\u7f6e\u6240\u6709\u4e0d\u540c\u7684\u56fe\u50cf\uff08\u4e0d\u65ad\u9012\u589e\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff09\u3002\u6216\u8005\uff0c\u76f4\u63a5\u5728\u751f\u6210\u7eb9\u7406\u4e4b\u540e\u8c03\u7528 glGenerateMipmap \u3002\u8fd9\u4f1a\u4e3a\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\u81ea\u52a8\u751f\u6210\u6240\u6709\u9700\u8981\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u3002 \u751f\u6210\u4e86\u7eb9\u7406\u548c\u76f8\u5e94\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u540e\uff0c\u91ca\u653e\u56fe\u50cf\u7684\u5185\u5b58\u5e76\u89e3\u7ed1\u7eb9\u7406\u5bf9\u8c61\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4e60\u60ef\u3002 SOIL_free_image_data(image); glBindTexture(GL_TEXTURE_2D, 0); \u751f\u6210\u4e00\u4e2a\u7eb9\u7406\u7684\u8fc7\u7a0b\u5e94\u8be5\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a GLuint texture; glGenTextures(1, &texture); glBindTexture(GL_TEXTURE_2D, texture); // \u4e3a\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\u5bf9\u8c61\u8bbe\u7f6e\u73af\u7ed5\u3001\u8fc7\u6ee4\u65b9\u5f0f ... // \u52a0\u8f7d\u5e76\u751f\u6210\u7eb9\u7406 int width, height; unsigned char* image = SOIL_load_image(\"container.jpg\", &width, &height, 0, SOIL_LOAD_RGB); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, image); glGenerateMipmap(GL_TEXTURE_2D); SOIL_free_image_data(image); glBindTexture(GL_TEXTURE_2D, 0); \u7eb9\u7406\u5355\u5143 \u4f60\u53ef\u80fd\u4f1a\u5947\u602a\u4e3a\u4ec0\u4e48 sampler2D \u53d8\u91cf\u662f\u4e2auniform\uff0c\u6211\u4eec\u5374\u4e0d\u7528 glUniform \u7ed9\u5b83\u8d4b\u503c\u3002\u4f7f\u7528 glUniform1i \uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u7eb9\u7406\u91c7\u6837\u5668\u5206\u914d\u4e00\u4e2a\u4f4d\u7f6e\u503c\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u80fd\u591f\u5728\u4e00\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u8bbe\u7f6e\u591a\u4e2a\u7eb9\u7406\u3002\u4e00\u4e2a\u7eb9\u7406\u7684\u4f4d\u7f6e\u503c\u901a\u5e38\u79f0\u4e3a\u4e00\u4e2a \u7eb9\u7406\u5355\u5143 (Texture Unit)\u3002\u4e00\u4e2a\u7eb9\u7406\u7684\u9ed8\u8ba4\u7eb9\u7406\u5355\u5143\u662f0\uff0c\u5b83\u662f\u9ed8\u8ba4\u7684\u6fc0\u6d3b\u7eb9\u7406\u5355\u5143\uff0c\u6240\u4ee5\u6559\u7a0b\u524d\u9762\u90e8\u5206\u6211\u4eec\u6ca1\u6709\u5206\u914d\u4e00\u4e2a\u4f4d\u7f6e\u503c\u3002 \u7eb9\u7406\u5355\u5143\u7684\u4e3b\u8981\u76ee\u7684\u662f\u8ba9\u6211\u4eec\u5728\u7740\u8272\u5668\u4e2d\u53ef\u4ee5\u4f7f\u7528\u591a\u4e8e\u4e00\u4e2a\u7684\u7eb9\u7406\u3002\u901a\u8fc7\u628a\u7eb9\u7406\u5355\u5143\u8d4b\u503c\u7ed9\u91c7\u6837\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u6b21\u7ed1\u5b9a\u591a\u4e2a\u7eb9\u7406\uff0c\u53ea\u8981\u6211\u4eec\u9996\u5148\u6fc0\u6d3b\u5bf9\u5e94\u7684\u7eb9\u7406\u5355\u5143\u3002\u5c31\u50cf glBindTexture \u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 glActiveTexture \u6fc0\u6d3b\u7eb9\u7406\u5355\u5143\uff0c\u4f20\u5165\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7684\u7eb9\u7406\u5355\u5143\uff1a glActiveTexture(GL_TEXTURE0); //\u5728\u7ed1\u5b9a\u7eb9\u7406\u4e4b\u524d\u5148\u6fc0\u6d3b\u7eb9\u7406\u5355\u5143 glBindTexture(GL_TEXTURE_2D, texture); \u6fc0\u6d3b\u7eb9\u7406\u5355\u5143\u4e4b\u540e\uff0c\u63a5\u4e0b\u6765\u7684 glBindTexture \u51fd\u6570\u8c03\u7528\u4f1a\u7ed1\u5b9a\u8fd9\u4e2a\u7eb9\u7406\u5230\u5f53\u524d\u6fc0\u6d3b\u7684\u7eb9\u7406\u5355\u5143\uff0c\u7eb9\u7406\u5355\u5143 GL_TEXTURE0 \u9ed8\u8ba4\u603b\u662f\u88ab\u6fc0\u6d3b\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u524d\u9762\u7684\u4f8b\u5b50\u91cc\u5f53\u6211\u4eec\u4f7f\u7528 glBindTexture \u7684\u65f6\u5019\uff0c\u65e0\u9700\u6fc0\u6d3b\u4efb\u4f55\u7eb9\u7406\u5355\u5143\u3002 Important OpenGL\u81f3\u5c11\u4fdd\u8bc1\u670916\u4e2a\u7eb9\u7406\u5355\u5143\u4f9b\u4f60\u4f7f\u7528\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u53ef\u4ee5\u6fc0\u6d3b\u4ece GL_TEXTURE0 \u5230 GL_TEXTRUE15 \u3002\u5b83\u4eec\u90fd\u662f\u6309\u987a\u5e8f\u5b9a\u4e49\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7 GL_TEXTURE0 + 8 \u7684\u65b9\u5f0f\u83b7\u5f97 GL_TEXTURE8 \uff0c\u8fd9\u5728\u5f53\u6211\u4eec\u9700\u8981\u5faa\u73af\u4e00\u4e9b\u7eb9\u7406\u5355\u5143\u7684\u65f6\u5019\u4f1a\u5f88\u6709\u7528\u3002 \u6211\u4eec\u4ecd\u7136\u9700\u8981\u7f16\u8f91\u7247\u6bb5\u7740\u8272\u5668\u6765\u63a5\u6536\u53e6\u4e00\u4e2a\u91c7\u6837\u5668\u3002\u8fd9\u5e94\u8be5\u76f8\u5bf9\u6765\u8bf4\u975e\u5e38\u76f4\u63a5\u4e86\uff1a #version 330 core ... uniform sampler2D ourTexture1; uniform sampler2D ourTexture2; void main() { color = mix(texture(ourTexture1, TexCoord), texture(ourTexture2, TexCoord), 0.2); } \u6700\u7ec8\u8f93\u51fa\u989c\u8272\u73b0\u5728\u662f\u4e24\u4e2a\u7eb9\u7406\u7684\u7ed3\u5408\u3002GLSL\u5185\u5efa\u7684 mix \u51fd\u6570\u9700\u8981\u63a5\u53d7\u4e24\u4e2a\u503c\u4f5c\u4e3a\u53c2\u6570\uff0c\u5e76\u5bf9\u5b83\u4eec\u6839\u636e\u7b2c\u4e09\u4e2a\u53c2\u6570\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\u3002\u3002\u5982\u679c\u7b2c\u4e09\u4e2a\u503c\u662f 0.0 \uff0c\u5b83\u4f1a\u8fd4\u56de\u7b2c\u4e00\u4e2a\u8f93\u5165\uff1b\u5982\u679c\u662f 1.0 \uff0c\u4f1a\u8fd4\u56de\u7b2c\u4e8c\u4e2a\u8f93\u5165\u503c\u3002 0.2 \u4f1a\u8fd4\u56de 80% \u7684\u7b2c\u4e00\u4e2a\u8f93\u5165\u989c\u8272\u548c 20% \u7684\u7b2c\u4e8c\u4e2a\u8f93\u5165\u989c\u8272\uff0c\u5373\u8fd4\u56de\u4e24\u4e2a\u7eb9\u7406\u7684\u6df7\u5408\u8272\u3002 \u6211\u4eec\u73b0\u5728\u9700\u8981\u8f7d\u5165\u5e76\u521b\u5efa\u53e6\u4e00\u4e2a\u7eb9\u7406\uff1b\u4f60\u5e94\u8be5\u5bf9\u8fd9\u4e9b\u6b65\u9aa4\u5f88\u719f\u6089\u4e86\u3002\u8bb0\u5f97\u521b\u5efa\u53e6\u4e00\u4e2a\u7eb9\u7406\u5bf9\u8c61\uff0c\u8f7d\u5165\u56fe\u7247\uff0c\u4f7f\u7528 glTexImage2D \u751f\u6210\u6700\u7ec8\u7eb9\u7406\u3002\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u7eb9\u7406\u6211\u4eec\u4f7f\u7528\u4e00\u5f20 \u4f60\u5b66\u4e60OpenGL\u65f6\u7684\u9762\u90e8\u8868\u60c5 \u56fe\u7247\u3002 \u4e3a\u4e86\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u7eb9\u7406\uff08\u4ee5\u53ca\u7b2c\u4e00\u4e2a\uff09\uff0c\u6211\u4eec\u5fc5\u987b\u6539\u53d8\u4e00\u70b9\u6e32\u67d3\u6d41\u7a0b\uff0c\u5148\u7ed1\u5b9a\u4e24\u4e2a\u7eb9\u7406\u5230\u5bf9\u5e94\u7684\u7eb9\u7406\u5355\u5143\uff0c\u7136\u540e\u5b9a\u4e49\u54ea\u4e2auniform\u91c7\u6837\u5668\u5bf9\u5e94\u54ea\u4e2a\u7eb9\u7406\u5355\u5143\uff1a glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_2D, texture1); glUniform1i(glGetUniformLocation(ourShader.Program, \"ourTexture1\"), 0); glActiveTexture(GL_TEXTURE1); glBindTexture(GL_TEXTURE_2D, texture2); glUniform1i(glGetUniformLocation(ourShader.Program, \"ourTexture2\"), 1); glBindVertexArray(VAO); glDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_INT, 0); glBindVertexArray(0); \u6ce8\u610f\uff0c\u6211\u4eec\u4f7f\u7528 glUniform1i \u8bbe\u7f6euniform\u91c7\u6837\u5668\u7684\u4f4d\u7f6e\u503c\uff0c\u6216\u8005\u8bf4\u7eb9\u7406\u5355\u5143\u3002\u901a\u8fc7 glUniform1i \u7684\u8bbe\u7f6e\uff0c\u6211\u4eec\u4fdd\u8bc1\u6bcf\u4e2auniform\u91c7\u6837\u5668\u5bf9\u5e94\u7740\u6b63\u786e\u7684\u7eb9\u7406\u5355\u5143\u3002\u4f60\u5e94\u8be5\u80fd\u5f97\u5230\u4e0b\u9762\u7684\u7ed3\u679c\uff1a \u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u7eb9\u7406\u4e0a\u4e0b\u98a0\u5012\u4e86\uff01\u8fd9\u662f\u56e0\u4e3aOpenGL\u8981\u6c42y\u8f74 0.0 \u5750\u6807\u662f\u5728\u56fe\u7247\u7684\u5e95\u90e8\u7684\uff0c\u4f46\u662f\u56fe\u7247\u7684y\u8f74 0.0 \u5750\u6807\u901a\u5e38\u5728\u9876\u90e8\u3002\u4e00\u4e9b\u56fe\u7247\u52a0\u8f7d\u5668\u6bd4\u5982 DevIL \u5728\u52a0\u8f7d\u7684\u65f6\u5019\u6709\u9009\u9879\u91cd\u7f6ey\u539f\u70b9\uff0c\u4f46\u662fSOIL\u6ca1\u6709\u3002SOIL\u5374\u6709\u4e00\u4e2a\u53eb\u505a SOIL_load_OGL_texture \u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u53eb\u505a SOIL_FLAG_INVERT_Y \u7684\u6807\u8bb0\u52a0\u8f7d \u5e76 \u751f\u6210\u7eb9\u7406\uff0c\u8fd9\u53ef\u4ee5\u89e3\u51b3\u6211\u4eec\u7684\u95ee\u9898\u3002\u4e0d\u8fc7\u8fd9\u4e2a\u51fd\u6570\u7528\u4e86\u4e00\u4e9b\u5728\u73b0\u4ee3OpenGL\u4e2d\u5931\u6548\u7684\u7279\u6027\uff0c\u6240\u4ee5\u73b0\u5728\u6211\u4eec\u4ecd\u9700\u575a\u6301\u4f7f\u7528 SOIL_load_image \uff0c\u81ea\u5df1\u505a\u7eb9\u7406\u7684\u751f\u6210\u3002 \u6240\u4ee5\u4fee\u590d\u6211\u4eec\u7684\u5c0f\u95ee\u9898\uff0c\u6709\u4e24\u4e2a\u9009\u62e9\uff1a \u6211\u4eec\u53ef\u4ee5\u6539\u53d8\u9876\u70b9\u6570\u636e\u7684\u7eb9\u7406\u5750\u6807\uff0c\u7ffb\u8f6c y \u503c\uff08\u75281\u51cf\u53bby\u5750\u6807\uff09\u3002 \u6211\u4eec\u53ef\u4ee5\u7f16\u8f91\u9876\u70b9\u7740\u8272\u5668\u6765\u81ea\u52a8\u7ffb\u8f6c y \u5750\u6807\uff0c\u66ff\u6362 TexCoord \u7684\u503c\u4e3a TexCoord = vec2(texCoord.x, 1.0f - texCoord.y); \u3002 Attention \u4e0a\u9762\u63d0\u4f9b\u7684\u89e3\u51b3\u65b9\u6848\u4ec5\u4ec5\u901a\u8fc7\u4e00\u4e9b\u9ed1\u79d1\u6280\u8ba9\u56fe\u7247\u7ffb\u8f6c\u3002\u5b83\u4eec\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u7136\u800c\u5b9e\u9645\u4e0a\u8fd9\u79cd\u65b9\u6848\u7684\u6548\u679c\u53d6\u51b3\u4e8e\u4f60\u7684\u5b9e\u73b0\u548c\u7eb9\u7406\uff0c\u6240\u4ee5\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6848\u662f\u8c03\u6574\u4f60\u7684\u56fe\u7247\u52a0\u8f7d\u5668\uff0c\u6216\u8005\u4ee5\u4e00\u79cdy\u539f\u70b9\u7b26\u5408OpenGL\u9700\u6c42\u7684\u65b9\u5f0f\u7f16\u8f91\u4f60\u7684\u7eb9\u7406\u56fe\u50cf\u3002 \u5982\u679c\u4f60\u7f16\u8f91\u4e86\u9876\u70b9\u6570\u636e\uff0c\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u7ffb\u8f6c\u4e86\u7eb5\u5750\u6807\uff0c\u4f60\u4f1a\u5f97\u5230\u4e0b\u9762\u7684\u7ed3\u679c\uff1a \u5982\u679c\u4f60\u770b\u5230\u4e86\u4e00\u4e2a\u5f00\u5fc3\u7684\u7bb1\u5b50\uff0c\u4f60\u5c31\u505a\u5bf9\u4e86\u3002\u4f60\u53ef\u4ee5\u5bf9\u6bd4\u4e00\u4e0b \u6e90\u4ee3\u7801 \uff0c\u4ee5\u53ca \u9876\u70b9\u7740 \u548c \u7247\u6bb5 \u7740\u8272\u5668\u3002 01-09 \u6444\u50cf\u673a \u81ea\u7531\u79fb\u52a8 \u8ba9\u6444\u50cf\u673a\u7ed5\u7740\u573a\u666f\u8f6c\u7684\u786e\u5f88\u6709\u8da3\uff0c\u4f46\u662f\u8ba9\u6211\u4eec\u81ea\u5df1\u79fb\u52a8\u6444\u50cf\u673a\u4f1a\u66f4\u6709\u8da3\uff01\u9996\u5148\u6211\u4eec\u5fc5\u987b\u8bbe\u7f6e\u4e00\u4e2a\u6444\u50cf\u673a\u7cfb\u7edf\uff0c\u6240\u4ee5\u5728\u6211\u4eec\u7684\u7a0b\u5e8f\u524d\u9762\u5b9a\u4e49\u4e00\u4e9b\u6444\u50cf\u673a\u53d8\u91cf\u5f88\u6709\u7528\uff1a glm::vec3 cameraPos = glm::vec3(0.0f, 0.0f, 3.0f); glm::vec3 cameraFront = glm::vec3(0.0f, 0.0f, -1.0f); glm::vec3 cameraUp = glm::vec3(0.0f, 1.0f, 0.0f); LookAt \u51fd\u6570\u73b0\u5728\u6210\u4e86\uff1a view = glm::lookAt(cameraPos, cameraPos + cameraFront, cameraUp); \u6211\u4eec\u9996\u5148\u5c06\u6444\u50cf\u673a\u4f4d\u7f6e\u8bbe\u7f6e\u4e3a\u4e4b\u524d\u5b9a\u4e49\u7684 cameraPos \u3002\u65b9\u5411\u662f\u5f53\u524d\u7684\u4f4d\u7f6e\u52a0\u4e0a\u6211\u4eec\u521a\u521a\u5b9a\u4e49\u7684\u65b9\u5411\u5411\u91cf\u3002\u8fd9\u6837\u80fd\u4fdd\u8bc1\u65e0\u8bba\u6211\u4eec\u600e\u4e48\u79fb\u52a8\uff0c\u6444\u50cf\u673a\u90fd\u4f1a\u6ce8\u89c6\u7740\u76ee\u6807\u65b9\u5411\u3002\u8ba9\u6211\u4eec\u6446\u5f04\u4e00\u4e0b\u8fd9\u4e9b\u5411\u91cf\uff0c\u5728\u6309\u4e0b\u67d0\u4e9b\u6309\u94ae\u65f6\u66f4\u65b0 cameraPos \u5411\u91cf\u3002 \u6211\u4eec\u5df2\u7ecf\u4e3aGLFW\u7684\u952e\u76d8\u8f93\u5165\u5b9a\u4e49\u4e86\u4e00\u4e2a key_callback \u51fd\u6570\uff0c\u6211\u4eec\u6765\u65b0\u6dfb\u52a0\u51e0\u4e2a\u9700\u8981\u68c0\u67e5\u7684\u6309\u952e\u547d\u4ee4\uff1a void key_callback(GLFWwindow* window, int key, int scancode, int action, int mode) { ... GLfloat cameraSpeed = 0.05f; if(key == GLFW_KEY_W) cameraPos += cameraSpeed * cameraFront; if(key == GLFW_KEY_S) cameraPos -= cameraSpeed * cameraFront; if(key == GLFW_KEY_A) cameraPos -= glm::normalize(glm::cross(cameraFront, cameraUp)) * cameraSpeed; if(key == GLFW_KEY_D) cameraPos += glm::normalize(glm::cross(cameraFront, cameraUp)) * cameraSpeed; } \u5f53\u6211\u4eec\u6309\u4e0b WASD \u952e\u7684\u4efb\u610f\u4e00\u4e2a\uff0c\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u90fd\u4f1a\u76f8\u5e94\u66f4\u65b0\u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5411\u524d\u6216\u5411\u540e\u79fb\u52a8\uff0c\u6211\u4eec\u5c31\u628a\u4f4d\u7f6e\u5411\u91cf\u52a0\u4e0a\u6216\u51cf\u53bb\u65b9\u5411\u5411\u91cf\u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5411\u5de6\u53f3\u79fb\u52a8\uff0c\u6211\u4eec\u4f7f\u7528\u53c9\u4e58\u6765\u521b\u5efa\u4e00\u4e2a \u53f3\u5411\u91cf (Right Vector)\uff0c\u5e76\u6cbf\u7740\u5b83\u76f8\u5e94\u79fb\u52a8\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u6837\u5c31\u521b\u5efa\u4e86\u4f7f\u7528\u6444\u50cf\u673a\u65f6\u719f\u6089\u7684 \u626b\u5c04 (Strafe)\u6548\u679c\u3002 Important \u6ce8\u610f\uff0c\u6211\u4eec\u5bf9 \u53f3\u5411\u91cf \u8fdb\u884c\u4e86\u6807\u51c6\u5316\u3002\u5982\u679c\u6211\u4eec\u6ca1\u5bf9\u8fd9\u4e2a\u5411\u91cf\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u6700\u540e\u7684\u53c9\u4e58\u7ed3\u679c\u4f1a\u6839\u636e cameraFront \u53d8\u91cf\u8fd4\u56de\u5927\u5c0f\u4e0d\u540c\u7684\u5411\u91cf\u3002\u5982\u679c\u6211\u4eec\u4e0d\u5bf9\u5411\u91cf\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u6211\u4eec\u5c31\u5f97\u6839\u636e\u6444\u50cf\u673a\u7684\u671d\u5411\u4e0d\u540c\u52a0\u901f\u6216\u51cf\u901f\u79fb\u52a8\u4e86\uff0c\u4f46\u5047\u5982\u8fdb\u884c\u4e86\u6807\u51c6\u5316\u79fb\u52a8\u5c31\u662f\u5300\u901f\u7684\u3002 \u5982\u679c\u4f60\u7528\u8fd9\u6bb5\u4ee3\u7801\u66f4\u65b0 key_callback \u51fd\u6570\uff0c\u4f60\u5c31\u53ef\u4ee5\u5728\u573a\u666f\u4e2d\u81ea\u7531\u7684\u524d\u540e\u5de6\u53f3\u79fb\u52a8\u4e86\u3002 \u5728\u6446\u5f04\u8fd9\u4e2a\u57fa\u7840\u7684\u6444\u50cf\u673a\u7cfb\u7edf\u4e4b\u540e\u4f60\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u8fd9\u4e2a\u6444\u50cf\u673a\u7cfb\u7edf\u4e0d\u80fd\u540c\u65f6\u671d\u4e24\u4e2a\u65b9\u5411\u79fb\u52a8\uff08\u5bf9\u89d2\u7ebf\u79fb\u52a8\uff09\uff0c\u800c\u4e14\u5f53\u4f60\u6309\u4e0b\u4e00\u4e2a\u6309\u952e\u65f6\uff0c\u5b83\u4f1a\u5148\u987f\u4e00\u4e0b\u624d\u5f00\u59cb\u79fb\u52a8\u3002\u8fd9\u662f\u56e0\u4e3a\u5927\u591a\u6570\u4e8b\u4ef6\u8f93\u5165\u7cfb\u7edf\u4e00\u6b21\u53ea\u80fd\u5904\u7406\u4e00\u4e2a\u952e\u76d8\u8f93\u5165\uff0c\u5b83\u4eec\u7684\u51fd\u6570\u53ea\u6709\u5f53\u6211\u4eec\u6fc0\u6d3b\u4e86\u4e00\u4e2a\u6309\u952e\u65f6\u624d\u88ab\u8c03\u7528\u3002\u867d\u7136\u8fd9\u5bf9\u5927\u591a\u6570GUI\u7cfb\u7edf\u90fd\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u5b83\u5bf9\u6444\u50cf\u673a\u6765\u8bf4\u5e76\u4e0d\u5408\u7406\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e9b\u5c0f\u6280\u5de7\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u8fd9\u4e2a\u6280\u5de7\u662f\u5728\u56de\u8c03\u51fd\u6570\u4e2d\u53ea\u8ddf\u8e2a\u54ea\u4e2a\u6309\u952e\u88ab\u6309\u4e0b/\u91ca\u653e\u3002\u5728\u6e38\u620f\u5faa\u73af\u4e2d\u6211\u4eec\u8bfb\u53d6\u8fd9\u4e9b\u503c\uff0c\u68c0\u67e5\u54ea\u4e2a\u6309\u952e\u662f \u6fc0\u6d3b\u7684 \uff0c\u7136\u540e\u505a\u51fa\u76f8\u5e94\u53cd\u5e94\u3002\u6211\u4eec\u53ea\u50a8\u5b58\u54ea\u4e2a\u6309\u952e\u88ab\u6309\u4e0b/\u91ca\u653e\u7684\u72b6\u6001\u4fe1\u606f\uff0c\u5e76\u5728\u6e38\u620f\u5faa\u73af\u4e2d\u5bf9\u72b6\u6001\u505a\u51fa\u53cd\u5e94\u3002\u9996\u5148\uff0c\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2aboolean\u6570\u7ec4\u4ee3\u8868\u88ab\u6309\u4e0b/\u91ca\u653e\u7684\u6309\u952e\uff1a bool keys[1024]; \u7136\u540e\u6211\u4eec\u9700\u8981\u5728 key_callback \u51fd\u6570\u4e2d\u8bbe\u7f6e\u88ab\u6309\u4e0b/\u91ca\u653e\u7684\u6309\u952e\u4e3a true \u6216 false \uff1a if(action == GLFW_PRESS) keys[key] = true; else if(action == GLFW_RELEASE) keys[key] = false; \u5e76\u4e14\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u53eb\u505a do_movement \u7684\u51fd\u6570\uff0c\u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u5c06\u6839\u636e\u6b63\u5728\u88ab\u6309\u4e0b\u7684\u6309\u952e\u66f4\u65b0\u6444\u50cf\u673a\u7684\u503c\u3002\uff1a void do_movement() { // \u6444\u50cf\u673a\u63a7\u5236 GLfloat cameraSpeed = 0.01f; if(keys[GLFW_KEY_W]) cameraPos += cameraSpeed * cameraFront; if(keys[GLFW_KEY_S]) cameraPos -= cameraSpeed * cameraFront; if(keys[GLFW_KEY_A]) cameraPos -= glm::normalize(glm::cross(cameraFront, cameraUp)) * cameraSpeed; if(keys[GLFW_KEY_D]) cameraPos += glm::normalize(glm::cross(cameraFront, cameraUp)) * cameraSpeed; } \u4e4b\u524d\u7684\u4ee3\u7801\u73b0\u5728\u88ab\u79fb\u52a8\u5230 do_movement \u51fd\u6570\u4e2d\u3002\u7531\u4e8e\u6240\u6709GLFW\u7684\u6309\u952e\u679a\u4e3e\u503c\u672c\u8d28\u4e0a\u90fd\u662f\u6574\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u4eec\u5f53\u6570\u7ec4\u7d22\u5f15\u4f7f\u7528\u3002 \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u5728\u6e38\u620f\u5faa\u73af\u4e2d\u6dfb\u52a0\u65b0\u51fd\u6570\u7684\u8c03\u7528\uff1a while(!glfwWindowShouldClose(window)) { // \u68c0\u6d4b\u5e76\u8c03\u7528\u4e8b\u4ef6 glfwPollEvents(); do_movement(); // \u6e32\u67d3 ... } \u81f3\u6b64\uff0c\u4f60\u5e94\u8be5\u53ef\u4ee5\u540c\u65f6\u5411\u591a\u4e2a\u65b9\u5411\u79fb\u52a8\u4e86\uff0c\u5e76\u4e14\u5f53\u4f60\u6309\u4e0b\u6309\u94ae\u65f6\u4e5f\u4f1a\u7acb\u523b\u79fb\u52a8\u4e86\u3002\u5982\u9047\u56f0\u96be\uff0c\u53ef\u4ee5\u67e5\u770b\u4e0b \u6e90\u4ee3\u7801 \u3002","title":"\u5386\u53f2\u5b58\u6863"},{"location":"legacy/#_1","text":"\u7531\u4e8e\u4f5c\u8005\u5728\u5bf9\u6559\u7a0b\u4e0d\u65ad\u5730\u66f4\u65b0\uff0c\u4e00\u4e9b\u6bd4\u8f83\u65e7\u7684\u5185\u5bb9\u5c31\u4ece\u6559\u7a0b\u4e2d\u5220\u9664\u6216\u8005\u4fee\u6539\u4e86\uff0c\u4f46\u662f\u8fd9\u90e8\u5206\u5185\u5bb9\u4ecd\u7136\u5bf9\u5728\u66f4\u65b0\u4ee5\u524d\u5c31\u5f00\u59cb\u5b66\u4e60\u7684\u8bfb\u8005\u53ef\u80fd\u8fd8\u662f\u4f1a\u6709\u70b9\u7528\u5904\u7684\u3002\u6240\u4ee5\uff0c\u6211\u4f1a\u5c06\u88ab\u5927\u6bb5\u5220\u9664\u6216\u4fee\u6539\u7684\u5185\u5bb9\u7559\u5230\u8fd9\u91cc\u4ee5\u4f9b\u5927\u5bb6\u53c2\u8003\u3002 \u6ce8\u610f\u7684\u662f\uff0c\u4e00\u4e9b\u6bd4\u8f83\u5c0f\u7684\u6539\u52a8\u5c06\u4e0d\u4f1a\u51fa\u73b0\u5728\u8fd9\u91cc\u3002","title":"\u5386\u53f2\u5b58\u6863"},{"location":"legacy/#01-01-opengl","text":"Important \u57fa\u5143\u7c7b\u578b(Primitive Type) \u4f7f\u7528OpenGL\u65f6\uff0c\u5efa\u8bae\u4f7f\u7528OpenGL\u5b9a\u4e49\u7684\u57fa\u5143\u7c7b\u578b\u3002\u6bd4\u5982\u4f7f\u7528 float \u65f6\u6211\u4eec\u52a0\u4e0a\u524d\u7f00 GL \uff08\u56e0\u6b64\u5199\u4f5c GLfloat \uff09\u3002 int \u3001 uint \u3001 char \u3001 bool \u7b49\u7b49\u4e5f\u7c7b\u4f3c\u3002OpenGL\u5b9a\u4e49\u7684\u8fd9\u4e9bGL\u57fa\u5143\u7c7b\u578b\u7684\u5185\u5b58\u5e03\u5c40\u662f\u4e0e\u5e73\u53f0\u65e0\u5173\u7684\uff0c\u800cint\u7b49\u57fa\u5143\u7c7b\u578b\u5728\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u53ef\u80fd\u6709\u4e0d\u540c\u7684\u5185\u5b58\u5e03\u5c40\u3002\u4f7f\u7528GL\u57fa\u5143\u7c7b\u578b\u53ef\u4ee5\u4fdd\u8bc1\u4f60\u7684\u7a0b\u5e8f\u5728\u4e0d\u540c\u7684\u5e73\u53f0\u4e0a\u5de5\u4f5c\u4e00\u81f4\u3002","title":"01-01 OpenGL"},{"location":"legacy/#01-02","text":"","title":"01-02 \u521b\u5efa\u7a97\u53e3"},{"location":"legacy/#glew","text":"GLEW\u662fOpenGL Extension Wrangler Library\u7684\u7f29\u5199\uff0c\u5b83\u80fd\u89e3\u51b3\u6211\u4eec\u4e0a\u9762\u63d0\u5230\u7684\u90a3\u4e2a\u7e41\u7410\u7684\u95ee\u9898\u3002\u56e0\u4e3aGLEW\u4e5f\u662f\u4e00\u4e2a\u5e93\uff0c\u6211\u4eec\u540c\u6837\u9700\u8981\u6784\u5efa\u5e76\u5c06\u5176\u94fe\u63a5\u8fdb\u5de5\u7a0b\u3002GLEW\u53ef\u4ee5\u4ece \u8fd9\u91cc \u4e0b\u8f7d\uff0c\u4f60\u540c\u6837\u53ef\u4ee5\u9009\u62e9\u4e0b\u8f7d\u4e8c\u8fdb\u5236\u7248\u672c\uff0c\u5982\u679c\u4f60\u7684\u76ee\u6807\u5e73\u53f0\u5217\u5728\u4e0a\u9762\u7684\u8bdd\uff0c\u6216\u8005\u4e0b\u8f7d\u6e90\u7801\u7f16\u8bd1\uff0c\u6b65\u9aa4\u548c\u7f16\u8bd1GLFW\u65f6\u5dee\u4e0d\u591a\u3002\u8bb0\u4f4f\uff0c\u5982\u679c\u4e0d\u786e\u5b9a\u7684\u8bdd\uff0c\u9009\u62e932\u4f4d\u7684\u4e8c\u8fdb\u5236\u7248\u672c\u3002 \u6211\u4eec\u4f7f\u7528GLEW\u7684 \u9759\u6001 \u7248\u672c glew32s.lib \uff08\u6ce8\u610f\u8fd9\u91cc\u7684\u201cs\u201d\uff09\uff0c\u5c06\u5e93\u6587\u4ef6\u6dfb\u52a0\u5230\u4f60\u7684\u5e93\u76ee\u5f55\uff0c\u5c06 include \u5185\u5bb9\u6dfb\u52a0\u5230\u4f60\u7684include\u76ee\u5f55\u3002\u63a5\u4e0b\u6765\uff0c\u5728VS\u7684\u94fe\u63a5\u5668\u9009\u9879\u91cc\u52a0\u4e0a glew32s.lib \u3002\u6ce8\u610fGLFW3\uff08\u9ed8\u8ba4\uff09\u4e5f\u662f\u7f16\u8bd1\u6210\u4e86\u4e00\u4e2a\u9759\u6001\u5e93\u3002 Important \u9759\u6001 (Static)\u94fe\u63a5\u662f\u6307\u7f16\u8bd1\u65f6\u5c31\u5c06\u5e93\u4ee3\u7801\u91cc\u7684\u5185\u5bb9\u6574\u5408\u8fdb\u4f60\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u4f18\u70b9\u5c31\u662f\u4f60\u4e0d\u9700\u8981\u7ba1\u7406\u989d\u5916\u7684\u6587\u4ef6\u4e86\uff0c\u53ea\u9700\u8981\u53d1\u5e03\u4f60\u5355\u72ec\u7684\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u5c31\u884c\u4e86\u3002\u7f3a\u70b9\u5c31\u662f\u4f60\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4f1a\u53d8\u5f97\u66f4\u5927\uff0c\u53e6\u5916\u5f53\u5e93\u6709\u5347\u7ea7\u7248\u672c\u65f6\uff0c\u4f60\u5fc5\u987b\u91cd\u65b0\u8fdb\u884c\u7f16\u8bd1\u6574\u4e2a\u7a0b\u5e8f\u3002 \u52a8\u6001 (Dynamic)\u94fe\u63a5\u662f\u6307\u4e00\u4e2a\u5e93\u901a\u8fc7 .dll \u6216 .so \u7684\u65b9\u5f0f\u5b58\u5728\uff0c\u5b83\u7684\u4ee3\u7801\u4e0e\u4f60\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u4ee3\u7801\u662f\u5206\u79bb\u7684\u3002\u4f18\u70b9\u662f\u4f7f\u4f60\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5927\u5c0f\u53d8\u5c0f\u5e76\u4e14\u66f4\u5bb9\u6613\u5347\u7ea7\uff0c\u7f3a\u70b9\u662f\u4f60\u6700\u7ec8\u53d1\u5e03\u7a0b\u5e8f\u65f6\u5fc5\u987b\u5e26\u4e0a\u8fd9\u4e9bDLL\u3002 \u5982\u679c\u4f60\u5e0c\u671b\u9759\u6001\u94fe\u63a5GLEW\uff0c\u5fc5\u987b\u5728\u5305\u542bGLEW\u5934\u6587\u4ef6\u4e4b\u524d\u5b9a\u4e49\u9884\u5904\u7406\u5668\u5b8f GLEW_STATIC \uff1a #define GLEW_STATIC #include <GL/glew.h> \u5982\u679c\u4f60\u5e0c\u671b\u52a8\u6001\u94fe\u63a5\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u7701\u7565\u8fd9\u4e2a\u5b8f\u3002\u4f46\u662f\u8bb0\u4f4f\u4f7f\u7528\u52a8\u6001\u94fe\u63a5\u7684\u8bdd\u4f60\u9700\u8981\u62f7\u8d1d\u4e00\u4efd.DLL\u6587\u4ef6\u5230\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u76ee\u5f55\u3002 Important \u5bf9\u4e8e\u7528GCC\u7f16\u8bd1\u7684Linux\u7528\u6237\u5efa\u8bae\u4f7f\u7528\u8fd9\u4e2a\u547d\u4ee4\u884c\u9009\u9879 -lGLEW -lglfw3 -lGL -lX11 -lpthread -lXrandr -lXi \u3002\u6ca1\u6709\u6b63\u786e\u94fe\u63a5\u76f8\u5e94\u7684\u5e93\u4f1a\u4ea7\u751f undefined reference (\u672a\u5b9a\u4e49\u7684\u5f15\u7528) \u8fd9\u4e2a\u9519\u8bef\u3002 \u6211\u4eec\u73b0\u5728\u6210\u529f\u7f16\u8bd1\u4e86GLFW\u548cGLEW\u5e93\uff0c\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u5c06\u8fdb\u5165 \u4e0b\u4e00\u8282 \u53bb\u771f\u6b63\u4f7f\u7528GLFW\u548cGLEW\u6765\u8bbe\u7f6eOpenGL\u4e0a\u4e0b\u6587\u5e76\u521b\u5efa\u7a97\u53e3\u3002\u8bb0\u5f97\u786e\u4fdd\u4f60\u7684\u5934\u6587\u4ef6\u548c\u5e93\u6587\u4ef6\u7684\u76ee\u5f55\u8bbe\u7f6e\u6b63\u786e\uff0c\u4ee5\u53ca\u94fe\u63a5\u5668\u91cc\u5f15\u7528\u7684\u5e93\u6587\u4ef6\u540d\u6b63\u786e\u3002\u5982\u679c\u4ecd\u7136\u9047\u5230\u9519\u8bef\uff0c\u53ef\u4ee5\u5148\u770b\u4e00\u4e0b\u8bc4\u8bba\u6709\u6ca1\u6709\u4eba\u9047\u5230\u7c7b\u4f3c\u7684\u95ee\u9898\uff0c\u8bf7\u53c2\u8003\u989d\u5916\u8d44\u6e90\u4e2d\u7684\u4f8b\u5b50\u6216\u8005\u5728\u4e0b\u9762\u7684\u8bc4\u8bba\u533a\u63d0\u95ee\u3002","title":"\u7f16\u8bd1\u548c\u94fe\u63a5GLEW"},{"location":"legacy/#01-03","text":"","title":"01-03 \u4f60\u597d\uff0c\u7a97\u53e3"},{"location":"legacy/#glew_1","text":"\u5728\u4e4b\u524d\u7684\u6559\u7a0b\u4e2d\u5df2\u7ecf\u63d0\u5230\u8fc7\uff0cGLEW\u662f\u7528\u6765\u7ba1\u7406OpenGL\u7684\u51fd\u6570\u6307\u9488\u7684\uff0c\u6240\u4ee5\u5728\u8c03\u7528\u4efb\u4f55OpenGL\u7684\u51fd\u6570\u4e4b\u524d\u6211\u4eec\u9700\u8981\u521d\u59cb\u5316GLEW\u3002 glewExperimental = GL_TRUE; if (glewInit() != GLEW_OK) { std::cout << \"Failed to initialize GLEW\" << std::endl; return -1; } \u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u5728\u521d\u59cb\u5316GLEW\u4e4b\u524d\u8bbe\u7f6e glewExperimental \u53d8\u91cf\u7684\u503c\u4e3a GL_TRUE \uff0c\u8fd9\u6837\u505a\u80fd\u8ba9GLEW\u5728\u7ba1\u7406OpenGL\u7684\u51fd\u6570\u6307\u9488\u65f6\u66f4\u591a\u5730\u4f7f\u7528\u73b0\u4ee3\u5316\u7684\u6280\u672f\uff0c\u5982\u679c\u628a\u5b83\u8bbe\u7f6e\u4e3a GL_FALSE \u7684\u8bdd\u53ef\u80fd\u4f1a\u5728\u4f7f\u7528OpenGL\u7684\u6838\u5fc3\u6a21\u5f0f\u65f6\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\u3002","title":"GLEW"},{"location":"legacy/#viewport","text":"\u5728\u6211\u4eec\u5f00\u59cb\u6e32\u67d3\u4e4b\u524d\u8fd8\u6709\u4e00\u4ef6\u91cd\u8981\u7684\u4e8b\u60c5\u8981\u505a\uff0c\u6211\u4eec\u5fc5\u987b\u544a\u8bc9OpenGL\u6e32\u67d3\u7a97\u53e3\u7684\u5c3a\u5bf8\u5927\u5c0f\uff0c\u8fd9\u6837OpenGL\u624d\u53ea\u80fd\u77e5\u9053\u600e\u6837\u76f8\u5bf9\u4e8e\u7a97\u53e3\u5927\u5c0f\u663e\u793a\u6570\u636e\u548c\u5750\u6807\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 glViewport \u51fd\u6570\u6765\u8bbe\u7f6e\u7a97\u53e3\u7684 \u7ef4\u5ea6 (Dimension)\uff1a int width, height; glfwGetFramebufferSize(window, &width, &height); glViewport(0, 0, width, height); glViewport \u51fd\u6570\u524d\u4e24\u4e2a\u53c2\u6570\u63a7\u5236\u7a97\u53e3\u5de6\u4e0b\u89d2\u7684\u4f4d\u7f6e\u3002\u7b2c\u4e09\u4e2a\u548c\u7b2c\u56db\u4e2a\u53c2\u6570\u63a7\u5236\u6e32\u67d3\u7a97\u53e3\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff08\u50cf\u7d20\uff09\uff0c\u8fd9\u91cc\u6211\u4eec\u662f\u76f4\u63a5\u4eceGLFW\u4e2d\u83b7\u53d6\u7684\u3002\u6211\u4eec\u4eceGLFW\u4e2d\u83b7\u53d6\u89c6\u53e3\u7684\u7ef4\u5ea6\u800c\u4e0d\u8bbe\u7f6e\u4e3a800*600\u662f\u4e3a\u4e86\u8ba9\u5b83\u5728\u9ad8DPI\u7684\u5c4f\u5e55\u4e0a\uff08\u6bd4\u5982\u8bf4Apple\u7684\u89c6\u7f51\u819c\u663e\u793a\u5c4f\uff09\u4e5f\u80fd \u6b63\u5e38\u5de5\u4f5c \u3002 \u6211\u4eec\u5b9e\u9645\u4e0a\u4e5f\u53ef\u4ee5\u5c06\u89c6\u53e3\u7684\u7ef4\u5ea6\u8bbe\u7f6e\u4e3a\u6bd4GLFW\u7684\u7ef4\u5ea6\u5c0f\uff0c\u8fd9\u6837\u5b50\u4e4b\u540e\u6240\u6709\u7684OpenGL\u6e32\u67d3\u5c06\u4f1a\u5728\u4e00\u4e2a\u66f4\u5c0f\u7684\u7a97\u53e3\u4e2d\u663e\u793a\uff0c\u8fd9\u6837\u5b50\u7684\u8bdd\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u4e00\u4e9b\u5176\u5b83\u5143\u7d20\u663e\u793a\u5728OpenGL\u89c6\u53e3\u4e4b\u5916\u3002 Important OpenGL\u5e55\u540e\u4f7f\u7528 glViewport \u4e2d\u5b9a\u4e49\u7684\u4f4d\u7f6e\u548c\u5bbd\u9ad8\u8fdb\u884c2D\u5750\u6807\u7684\u8f6c\u6362\uff0c\u5c06OpenGL\u4e2d\u7684\u4f4d\u7f6e\u5750\u6807\u8f6c\u6362\u4e3a\u4f60\u7684\u5c4f\u5e55\u5750\u6807\u3002\u4f8b\u5982\uff0cOpenGL\u4e2d\u7684\u5750\u6807(-0.5, 0.5)\u6709\u53ef\u80fd\uff08\u6700\u7ec8\uff09\u88ab\u6620\u5c04\u4e3a\u5c4f\u5e55\u4e2d\u7684\u5750\u6807(200,450)\u3002\u6ce8\u610f\uff0c\u5904\u7406\u8fc7\u7684OpenGL\u5750\u6807\u8303\u56f4\u53ea\u4e3a-1\u52301\uff0c\u56e0\u6b64\u6211\u4eec\u4e8b\u5b9e\u4e0a\u5c06(-1\u52301)\u8303\u56f4\u5185\u7684\u5750\u6807\u6620\u5c04\u5230(0, 800)\u548c(0, 600)\u3002","title":"\u89c6\u53e3(Viewport)"},{"location":"legacy/#_2","text":"\u6211\u4eec\u540c\u6837\u4e5f\u5e0c\u671b\u80fd\u591f\u5728GLFW\u4e2d\u5b9e\u73b0\u4e00\u4e9b\u952e\u76d8\u63a7\u5236\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528GLFW\u7684\u56de\u8c03\u51fd\u6570(Callback Function)\u6765\u5b8c\u6210\u3002 \u56de\u8c03\u51fd\u6570 \u4e8b\u5b9e\u4e0a\u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u5f53\u6211\u4eec\u8bbe\u7f6e\u597d\u540e\uff0cGLFW\u4f1a\u5728\u5408\u9002\u7684\u65f6\u5019\u8c03\u7528\u5b83\u3002 \u6309\u952e\u56de\u8c03 (KeyCallback)\u662f\u4f17\u591a\u56de\u8c03\u51fd\u6570\u4e2d\u7684\u4e00\u79cd\u3002\u5f53\u6211\u4eec\u8bbe\u7f6e\u4e86\u6309\u952e\u56de\u8c03\u4e4b\u540e\uff0cGLFW\u4f1a\u5728\u7528\u6237\u6709\u952e\u76d8\u4ea4\u4e92\u65f6\u8c03\u7528\u5b83\u3002\u8be5\u56de\u8c03\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\u6240\u793a\uff1a void key_callback(GLFWwindow* window, int key, int scancode, int action, int mode); \u6309\u952e\u56de\u8c03\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a GLFWwindow \u6307\u9488\u4f5c\u4e3a\u5b83\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff1b\u7b2c\u4e8c\u4e2a\u6574\u5f62\u53c2\u6570\u7528\u6765\u8868\u793a\u6309\u4e0b\u7684\u6309\u952e\uff1b action \u53c2\u6570\u8868\u793a\u8fd9\u4e2a\u6309\u952e\u662f\u88ab\u6309\u4e0b\u8fd8\u662f\u91ca\u653e\uff1b\u6700\u540e\u4e00\u4e2a\u6574\u5f62\u53c2\u6570\u8868\u793a\u662f\u5426\u6709Ctrl\u3001Shift\u3001Alt\u3001Super\u7b49\u6309\u94ae\u7684\u64cd\u4f5c\u3002GLFW\u4f1a\u5728\u5408\u9002\u7684\u65f6\u5019\u8c03\u7528\u5b83\uff0c\u5e76\u4e3a\u5404\u4e2a\u53c2\u6570\u4f20\u5165\u9002\u5f53\u7684\u503c\u3002 void key_callback(GLFWwindow* window, int key, int scancode, int action, int mode) { // \u5f53\u7528\u6237\u6309\u4e0bESC\u952e,\u6211\u4eec\u8bbe\u7f6ewindow\u7a97\u53e3\u7684WindowShouldClose\u5c5e\u6027\u4e3atrue // \u5173\u95ed\u5e94\u7528\u7a0b\u5e8f if(key == GLFW_KEY_ESCAPE && action == GLFW_PRESS) glfwSetWindowShouldClose(window, GL_TRUE); } \u5728\u6211\u4eec\uff08\u65b0\u521b\u5efa\u7684\uff09 key_callback \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u68c0\u6d4b\u4e86\u952e\u76d8\u662f\u5426\u6309\u4e0b\u4e86Escape\u952e\u3002\u5982\u679c\u952e\u7684\u786e\u6309\u4e0b\u4e86(\u4e0d\u91ca\u653e)\uff0c\u6211\u4eec\u4f7f\u7528 glfwSetwindowShouldClose \u51fd\u6570\u8bbe\u5b9a WindowShouldClose \u5c5e\u6027\u4e3a true \u4ece\u800c\u5173\u95edGLFW\u3002main\u51fd\u6570\u7684 while \u5faa\u73af\u4e0b\u4e00\u6b21\u7684\u68c0\u6d4b\u5c06\u4e3a\u5931\u8d25\uff0c\u7a0b\u5e8f\u5c31\u5173\u95ed\u4e86\u3002 \u6700\u540e\u4e00\u4ef6\u4e8b\u5c31\u662f\u901a\u8fc7GLFW\u6ce8\u518c\u6211\u4eec\u7684\u51fd\u6570\u81f3\u5408\u9002\u7684\u56de\u8c03\uff0c\u4ee3\u7801\u662f\u8fd9\u6837\u7684: glfwSetKeyCallback(window, key_callback); \u9664\u4e86\u6309\u952e\u56de\u8c03\u51fd\u6570\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u80fd\u6211\u4eec\u81ea\u5df1\u7684\u51fd\u6570\u6ce8\u518c\u5176\u5b83\u7684\u56de\u8c03\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u6765\u5904\u7406\u7a97\u53e3\u5c3a\u5bf8\u53d8\u5316\u3001\u5904\u7406\u4e00\u4e9b\u9519\u8bef\u4fe1\u606f\u7b49\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u521b\u5efa\u7a97\u53e3\u4e4b\u540e\uff0c\u5f00\u59cb\u6e38\u620f\u5faa\u73af\u4e4b\u524d\u6ce8\u518c\u5404\u79cd\u56de\u8c03\u51fd\u6570\u3002","title":"\u8f93\u5165"},{"location":"legacy/#01-06","text":"","title":"01-06 \u7eb9\u7406"},{"location":"legacy/#soil","text":"SOIL\u662f\u7b80\u6613OpenGL\u56fe\u50cf\u5e93(Simple OpenGL Image Library)\u7684\u7f29\u5199\uff0c\u5b83\u652f\u6301\u5927\u591a\u6570\u6d41\u884c\u7684\u56fe\u50cf\u683c\u5f0f\uff0c\u4f7f\u7528\u8d77\u6765\u4e5f\u5f88\u7b80\u5355\uff0c\u4f60\u53ef\u4ee5\u4ece\u4ed6\u4eec\u7684 \u4e3b\u9875 \u4e0b\u8f7d\u3002\u50cf\u5176\u5b83\u5e93\u4e00\u6837\uff0c\u4f60\u5fc5\u987b\u81ea\u5df1\u751f\u6210 .lib \u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 /projects \u6587\u4ef6\u5939\u5185\u7684\u4efb\u610f\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848(Solution)\u6587\u4ef6\uff08\u4e0d\u7528\u62c5\u5fc3\u4ed6\u4eec\u7684Visual Studio\u7248\u672c\u592a\u8001\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u4eec\u8f6c\u53d8\u4e3a\u65b0\u7684\u7248\u672c\uff0c\u8fd9\u4e00\u822c\u662f\u6ca1\u95ee\u9898\u7684\u3002\u8bd1\u6ce8\uff1a\u7528VS2010\u7684\u65f6\u5019\uff0c\u4f60\u8981\u7528VC8\u800c\u4e0d\u662fVC9\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u60f3\u5fc5\u66f4\u9ad8\u7248\u672c\u7684\u60c5\u51b5\u4ea6\u662f\u5982\u6b64\uff09\u6765\u751f\u6210\u4f60\u81ea\u5df1\u7684 .lib \u6587\u4ef6\u3002\u4f60\u8fd8\u8981\u6dfb\u52a0 src \u6587\u4ef6\u5939\u91cc\u9762\u7684\u6587\u4ef6\u5230\u4f60\u7684 includes \u6587\u4ef6\u5939\uff1b\u5bf9\u4e86\uff0c\u4e0d\u8981\u5fd8\u8bb0\u6dfb\u52a0 SOIL.lib \u5230\u4f60\u7684\u94fe\u63a5\u5668\u9009\u9879\uff0c\u5e76\u5728\u4f60\u4ee3\u7801\u6587\u4ef6\u7684\u5f00\u5934\u52a0\u4e0a #include <SOIL.h> \u3002 \u4e0b\u9762\u7684\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u4e00\u5f20 \u6728\u7bb1 \u7684\u56fe\u7247\u3002\u8981\u4f7f\u7528SOIL\u52a0\u8f7d\u56fe\u7247\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5b83\u7684 SOIL_load_image \u51fd\u6570\uff1a int width, height; unsigned char* image = SOIL_load_image(\"container.jpg\", &width, &height, 0, SOIL_LOAD_RGB); \u51fd\u6570\u9996\u5148\u9700\u8981\u8f93\u5165\u56fe\u7247\u6587\u4ef6\u7684\u8def\u5f84\u3002\u7136\u540e\u9700\u8981\u4e24\u4e2a int \u6307\u9488\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u548c\u7b2c\u4e09\u4e2a\u53c2\u6570\uff0cSOIL\u4f1a\u5206\u522b\u8fd4\u56de\u56fe\u7247\u7684 \u5bbd\u5ea6 \u548c \u9ad8\u5ea6 \u5230\u5176\u4e2d\u3002\u540e\u9762\u6211\u4eec\u5728\u751f\u6210\u7eb9\u7406\u7684\u65f6\u5019\u4f1a\u7528\u56fe\u50cf\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002\u7b2c\u56db\u4e2a\u53c2\u6570\u6307\u5b9a\u56fe\u7247\u7684 \u901a\u9053 (Channel)\u6570\u91cf\uff0c\u4f46\u662f\u8fd9\u91cc\u6211\u4eec\u53ea\u9700\u7559\u4e3a 0 \u3002\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u544a\u8bc9SOIL\u5982\u4f55\u6765\u52a0\u8f7d\u56fe\u7247\uff1a\u6211\u4eec\u53ea\u5173\u6ce8\u56fe\u7247\u7684 RGB \u503c\u3002\u7ed3\u679c\u4f1a\u50a8\u5b58\u4e3a\u4e00\u4e2a\u5f88\u5927\u7684char/byte\u6570\u7ec4\u3002","title":"SOIL"},{"location":"legacy/#_3","text":"\u548c\u4e4b\u524d\u751f\u6210\u7684OpenGL\u5bf9\u8c61\u4e00\u6837\uff0c\u7eb9\u7406\u4e5f\u662f\u4f7f\u7528ID\u5f15\u7528\u7684\u3002\u8ba9\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\uff1a GLuint texture; glGenTextures(1, &texture); glGenTextures \u51fd\u6570\u9996\u5148\u9700\u8981\u8f93\u5165\u751f\u6210\u7eb9\u7406\u7684\u6570\u91cf\uff0c\u7136\u540e\u628a\u5b83\u4eec\u50a8\u5b58\u5728\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684 GLuint \u6570\u7ec4\u4e2d\uff08\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u53ea\u662f\u4e00\u4e2a\u5355\u72ec\u7684 GLuint \uff09\uff0c\u5c31\u50cf\u5176\u4ed6\u5bf9\u8c61\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u7ed1\u5b9a\u5b83\uff0c\u8ba9\u4e4b\u540e\u4efb\u4f55\u7684\u7eb9\u7406\u6307\u4ee4\u90fd\u53ef\u4ee5\u914d\u7f6e\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\uff1a glBindTexture(GL_TEXTURE_2D, texture); \u73b0\u5728\u7eb9\u7406\u5df2\u7ecf\u7ed1\u5b9a\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u524d\u9762\u8f7d\u5165\u7684\u56fe\u7247\u6570\u636e\u751f\u6210\u4e00\u4e2a\u7eb9\u7406\u4e86\u3002\u7eb9\u7406\u53ef\u4ee5\u901a\u8fc7 glTexImage2D \u6765\u751f\u6210\uff1a glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, image); glGenerateMipmap(GL_TEXTURE_2D); \u51fd\u6570\u5f88\u957f\uff0c\u53c2\u6570\u4e5f\u4e0d\u5c11\uff0c\u6240\u4ee5\u6211\u4eec\u4e00\u4e2a\u4e00\u4e2a\u5730\u8bb2\u89e3\uff1a \u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u4e86\u7eb9\u7406\u76ee\u6807(Target)\u3002\u8bbe\u7f6e\u4e3a GL_TEXTURE_2D \u610f\u5473\u7740\u4f1a\u751f\u6210\u4e0e\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\u5bf9\u8c61\u5728\u540c\u4e00\u4e2a\u76ee\u6807\u4e0a\u7684\u7eb9\u7406\uff08\u4efb\u4f55\u7ed1\u5b9a\u5230 GL_TEXTURE_1D \u548c GL_TEXTURE_3D \u7684\u7eb9\u7406\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\uff09\u3002 \u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u7eb9\u7406\u6307\u5b9a\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7684\u7ea7\u522b\uff0c\u5982\u679c\u4f60\u5e0c\u671b\u5355\u72ec\u624b\u52a8\u8bbe\u7f6e\u6bcf\u4e2a\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7684\u7ea7\u522b\u7684\u8bdd\u3002\u8fd9\u91cc\u6211\u4eec\u586b0\uff0c\u4e5f\u5c31\u662f\u57fa\u672c\u7ea7\u522b\u3002 \u7b2c\u4e09\u4e2a\u53c2\u6570\u544a\u8bc9OpenGL\u6211\u4eec\u5e0c\u671b\u628a\u7eb9\u7406\u50a8\u5b58\u4e3a\u4f55\u79cd\u683c\u5f0f\u3002\u6211\u4eec\u7684\u56fe\u50cf\u53ea\u6709 RGB \u503c\uff0c\u56e0\u6b64\u6211\u4eec\u4e5f\u628a\u7eb9\u7406\u50a8\u5b58\u4e3a RGB \u503c\u3002 \u7b2c\u56db\u4e2a\u548c\u7b2c\u4e94\u4e2a\u53c2\u6570\u8bbe\u7f6e\u6700\u7ec8\u7684\u7eb9\u7406\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002\u6211\u4eec\u4e4b\u524d\u52a0\u8f7d\u56fe\u50cf\u7684\u65f6\u5019\u50a8\u5b58\u4e86\u5b83\u4eec\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u5bf9\u5e94\u7684\u53d8\u91cf\u3002 \u4e0b\u4e2a\u53c2\u6570\u5e94\u8be5\u603b\u662f\u88ab\u8bbe\u4e3a 0 \uff08\u5386\u53f2\u9057\u7559\u95ee\u9898\uff09\u3002 \u7b2c\u4e03\u7b2c\u516b\u4e2a\u53c2\u6570\u5b9a\u4e49\u4e86\u6e90\u56fe\u7684\u683c\u5f0f\u548c\u6570\u636e\u7c7b\u578b\u3002\u6211\u4eec\u4f7f\u7528RGB\u503c\u52a0\u8f7d\u8fd9\u4e2a\u56fe\u50cf\uff0c\u5e76\u628a\u5b83\u4eec\u50a8\u5b58\u4e3a char (byte)\u6570\u7ec4\uff0c\u6211\u4eec\u5c06\u4f1a\u4f20\u5165\u5bf9\u5e94\u503c\u3002 \u6700\u540e\u4e00\u4e2a\u53c2\u6570\u662f\u771f\u6b63\u7684\u56fe\u50cf\u6570\u636e\u3002 \u5f53\u8c03\u7528 glTexImage2D \u65f6\uff0c\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\u5bf9\u8c61\u5c31\u4f1a\u88ab\u9644\u52a0\u4e0a\u7eb9\u7406\u56fe\u50cf\u3002\u7136\u800c\uff0c\u76ee\u524d\u53ea\u6709\u57fa\u672c\u7ea7\u522b(Base-level)\u7684\u7eb9\u7406\u56fe\u50cf\u88ab\u52a0\u8f7d\u4e86\uff0c\u5982\u679c\u8981\u4f7f\u7528\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\uff0c\u6211\u4eec\u5fc5\u987b\u624b\u52a8\u8bbe\u7f6e\u6240\u6709\u4e0d\u540c\u7684\u56fe\u50cf\uff08\u4e0d\u65ad\u9012\u589e\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff09\u3002\u6216\u8005\uff0c\u76f4\u63a5\u5728\u751f\u6210\u7eb9\u7406\u4e4b\u540e\u8c03\u7528 glGenerateMipmap \u3002\u8fd9\u4f1a\u4e3a\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\u81ea\u52a8\u751f\u6210\u6240\u6709\u9700\u8981\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u3002 \u751f\u6210\u4e86\u7eb9\u7406\u548c\u76f8\u5e94\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u540e\uff0c\u91ca\u653e\u56fe\u50cf\u7684\u5185\u5b58\u5e76\u89e3\u7ed1\u7eb9\u7406\u5bf9\u8c61\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4e60\u60ef\u3002 SOIL_free_image_data(image); glBindTexture(GL_TEXTURE_2D, 0); \u751f\u6210\u4e00\u4e2a\u7eb9\u7406\u7684\u8fc7\u7a0b\u5e94\u8be5\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a GLuint texture; glGenTextures(1, &texture); glBindTexture(GL_TEXTURE_2D, texture); // \u4e3a\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\u5bf9\u8c61\u8bbe\u7f6e\u73af\u7ed5\u3001\u8fc7\u6ee4\u65b9\u5f0f ... // \u52a0\u8f7d\u5e76\u751f\u6210\u7eb9\u7406 int width, height; unsigned char* image = SOIL_load_image(\"container.jpg\", &width, &height, 0, SOIL_LOAD_RGB); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, image); glGenerateMipmap(GL_TEXTURE_2D); SOIL_free_image_data(image); glBindTexture(GL_TEXTURE_2D, 0);","title":"\u751f\u6210\u7eb9\u7406"},{"location":"legacy/#_4","text":"\u4f60\u53ef\u80fd\u4f1a\u5947\u602a\u4e3a\u4ec0\u4e48 sampler2D \u53d8\u91cf\u662f\u4e2auniform\uff0c\u6211\u4eec\u5374\u4e0d\u7528 glUniform \u7ed9\u5b83\u8d4b\u503c\u3002\u4f7f\u7528 glUniform1i \uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u7eb9\u7406\u91c7\u6837\u5668\u5206\u914d\u4e00\u4e2a\u4f4d\u7f6e\u503c\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u80fd\u591f\u5728\u4e00\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u8bbe\u7f6e\u591a\u4e2a\u7eb9\u7406\u3002\u4e00\u4e2a\u7eb9\u7406\u7684\u4f4d\u7f6e\u503c\u901a\u5e38\u79f0\u4e3a\u4e00\u4e2a \u7eb9\u7406\u5355\u5143 (Texture Unit)\u3002\u4e00\u4e2a\u7eb9\u7406\u7684\u9ed8\u8ba4\u7eb9\u7406\u5355\u5143\u662f0\uff0c\u5b83\u662f\u9ed8\u8ba4\u7684\u6fc0\u6d3b\u7eb9\u7406\u5355\u5143\uff0c\u6240\u4ee5\u6559\u7a0b\u524d\u9762\u90e8\u5206\u6211\u4eec\u6ca1\u6709\u5206\u914d\u4e00\u4e2a\u4f4d\u7f6e\u503c\u3002 \u7eb9\u7406\u5355\u5143\u7684\u4e3b\u8981\u76ee\u7684\u662f\u8ba9\u6211\u4eec\u5728\u7740\u8272\u5668\u4e2d\u53ef\u4ee5\u4f7f\u7528\u591a\u4e8e\u4e00\u4e2a\u7684\u7eb9\u7406\u3002\u901a\u8fc7\u628a\u7eb9\u7406\u5355\u5143\u8d4b\u503c\u7ed9\u91c7\u6837\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u6b21\u7ed1\u5b9a\u591a\u4e2a\u7eb9\u7406\uff0c\u53ea\u8981\u6211\u4eec\u9996\u5148\u6fc0\u6d3b\u5bf9\u5e94\u7684\u7eb9\u7406\u5355\u5143\u3002\u5c31\u50cf glBindTexture \u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 glActiveTexture \u6fc0\u6d3b\u7eb9\u7406\u5355\u5143\uff0c\u4f20\u5165\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7684\u7eb9\u7406\u5355\u5143\uff1a glActiveTexture(GL_TEXTURE0); //\u5728\u7ed1\u5b9a\u7eb9\u7406\u4e4b\u524d\u5148\u6fc0\u6d3b\u7eb9\u7406\u5355\u5143 glBindTexture(GL_TEXTURE_2D, texture); \u6fc0\u6d3b\u7eb9\u7406\u5355\u5143\u4e4b\u540e\uff0c\u63a5\u4e0b\u6765\u7684 glBindTexture \u51fd\u6570\u8c03\u7528\u4f1a\u7ed1\u5b9a\u8fd9\u4e2a\u7eb9\u7406\u5230\u5f53\u524d\u6fc0\u6d3b\u7684\u7eb9\u7406\u5355\u5143\uff0c\u7eb9\u7406\u5355\u5143 GL_TEXTURE0 \u9ed8\u8ba4\u603b\u662f\u88ab\u6fc0\u6d3b\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u524d\u9762\u7684\u4f8b\u5b50\u91cc\u5f53\u6211\u4eec\u4f7f\u7528 glBindTexture \u7684\u65f6\u5019\uff0c\u65e0\u9700\u6fc0\u6d3b\u4efb\u4f55\u7eb9\u7406\u5355\u5143\u3002 Important OpenGL\u81f3\u5c11\u4fdd\u8bc1\u670916\u4e2a\u7eb9\u7406\u5355\u5143\u4f9b\u4f60\u4f7f\u7528\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u53ef\u4ee5\u6fc0\u6d3b\u4ece GL_TEXTURE0 \u5230 GL_TEXTRUE15 \u3002\u5b83\u4eec\u90fd\u662f\u6309\u987a\u5e8f\u5b9a\u4e49\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7 GL_TEXTURE0 + 8 \u7684\u65b9\u5f0f\u83b7\u5f97 GL_TEXTURE8 \uff0c\u8fd9\u5728\u5f53\u6211\u4eec\u9700\u8981\u5faa\u73af\u4e00\u4e9b\u7eb9\u7406\u5355\u5143\u7684\u65f6\u5019\u4f1a\u5f88\u6709\u7528\u3002 \u6211\u4eec\u4ecd\u7136\u9700\u8981\u7f16\u8f91\u7247\u6bb5\u7740\u8272\u5668\u6765\u63a5\u6536\u53e6\u4e00\u4e2a\u91c7\u6837\u5668\u3002\u8fd9\u5e94\u8be5\u76f8\u5bf9\u6765\u8bf4\u975e\u5e38\u76f4\u63a5\u4e86\uff1a #version 330 core ... uniform sampler2D ourTexture1; uniform sampler2D ourTexture2; void main() { color = mix(texture(ourTexture1, TexCoord), texture(ourTexture2, TexCoord), 0.2); } \u6700\u7ec8\u8f93\u51fa\u989c\u8272\u73b0\u5728\u662f\u4e24\u4e2a\u7eb9\u7406\u7684\u7ed3\u5408\u3002GLSL\u5185\u5efa\u7684 mix \u51fd\u6570\u9700\u8981\u63a5\u53d7\u4e24\u4e2a\u503c\u4f5c\u4e3a\u53c2\u6570\uff0c\u5e76\u5bf9\u5b83\u4eec\u6839\u636e\u7b2c\u4e09\u4e2a\u53c2\u6570\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\u3002\u3002\u5982\u679c\u7b2c\u4e09\u4e2a\u503c\u662f 0.0 \uff0c\u5b83\u4f1a\u8fd4\u56de\u7b2c\u4e00\u4e2a\u8f93\u5165\uff1b\u5982\u679c\u662f 1.0 \uff0c\u4f1a\u8fd4\u56de\u7b2c\u4e8c\u4e2a\u8f93\u5165\u503c\u3002 0.2 \u4f1a\u8fd4\u56de 80% \u7684\u7b2c\u4e00\u4e2a\u8f93\u5165\u989c\u8272\u548c 20% \u7684\u7b2c\u4e8c\u4e2a\u8f93\u5165\u989c\u8272\uff0c\u5373\u8fd4\u56de\u4e24\u4e2a\u7eb9\u7406\u7684\u6df7\u5408\u8272\u3002 \u6211\u4eec\u73b0\u5728\u9700\u8981\u8f7d\u5165\u5e76\u521b\u5efa\u53e6\u4e00\u4e2a\u7eb9\u7406\uff1b\u4f60\u5e94\u8be5\u5bf9\u8fd9\u4e9b\u6b65\u9aa4\u5f88\u719f\u6089\u4e86\u3002\u8bb0\u5f97\u521b\u5efa\u53e6\u4e00\u4e2a\u7eb9\u7406\u5bf9\u8c61\uff0c\u8f7d\u5165\u56fe\u7247\uff0c\u4f7f\u7528 glTexImage2D \u751f\u6210\u6700\u7ec8\u7eb9\u7406\u3002\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u7eb9\u7406\u6211\u4eec\u4f7f\u7528\u4e00\u5f20 \u4f60\u5b66\u4e60OpenGL\u65f6\u7684\u9762\u90e8\u8868\u60c5 \u56fe\u7247\u3002 \u4e3a\u4e86\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u7eb9\u7406\uff08\u4ee5\u53ca\u7b2c\u4e00\u4e2a\uff09\uff0c\u6211\u4eec\u5fc5\u987b\u6539\u53d8\u4e00\u70b9\u6e32\u67d3\u6d41\u7a0b\uff0c\u5148\u7ed1\u5b9a\u4e24\u4e2a\u7eb9\u7406\u5230\u5bf9\u5e94\u7684\u7eb9\u7406\u5355\u5143\uff0c\u7136\u540e\u5b9a\u4e49\u54ea\u4e2auniform\u91c7\u6837\u5668\u5bf9\u5e94\u54ea\u4e2a\u7eb9\u7406\u5355\u5143\uff1a glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_2D, texture1); glUniform1i(glGetUniformLocation(ourShader.Program, \"ourTexture1\"), 0); glActiveTexture(GL_TEXTURE1); glBindTexture(GL_TEXTURE_2D, texture2); glUniform1i(glGetUniformLocation(ourShader.Program, \"ourTexture2\"), 1); glBindVertexArray(VAO); glDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_INT, 0); glBindVertexArray(0); \u6ce8\u610f\uff0c\u6211\u4eec\u4f7f\u7528 glUniform1i \u8bbe\u7f6euniform\u91c7\u6837\u5668\u7684\u4f4d\u7f6e\u503c\uff0c\u6216\u8005\u8bf4\u7eb9\u7406\u5355\u5143\u3002\u901a\u8fc7 glUniform1i \u7684\u8bbe\u7f6e\uff0c\u6211\u4eec\u4fdd\u8bc1\u6bcf\u4e2auniform\u91c7\u6837\u5668\u5bf9\u5e94\u7740\u6b63\u786e\u7684\u7eb9\u7406\u5355\u5143\u3002\u4f60\u5e94\u8be5\u80fd\u5f97\u5230\u4e0b\u9762\u7684\u7ed3\u679c\uff1a \u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u7eb9\u7406\u4e0a\u4e0b\u98a0\u5012\u4e86\uff01\u8fd9\u662f\u56e0\u4e3aOpenGL\u8981\u6c42y\u8f74 0.0 \u5750\u6807\u662f\u5728\u56fe\u7247\u7684\u5e95\u90e8\u7684\uff0c\u4f46\u662f\u56fe\u7247\u7684y\u8f74 0.0 \u5750\u6807\u901a\u5e38\u5728\u9876\u90e8\u3002\u4e00\u4e9b\u56fe\u7247\u52a0\u8f7d\u5668\u6bd4\u5982 DevIL \u5728\u52a0\u8f7d\u7684\u65f6\u5019\u6709\u9009\u9879\u91cd\u7f6ey\u539f\u70b9\uff0c\u4f46\u662fSOIL\u6ca1\u6709\u3002SOIL\u5374\u6709\u4e00\u4e2a\u53eb\u505a SOIL_load_OGL_texture \u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u53eb\u505a SOIL_FLAG_INVERT_Y \u7684\u6807\u8bb0\u52a0\u8f7d \u5e76 \u751f\u6210\u7eb9\u7406\uff0c\u8fd9\u53ef\u4ee5\u89e3\u51b3\u6211\u4eec\u7684\u95ee\u9898\u3002\u4e0d\u8fc7\u8fd9\u4e2a\u51fd\u6570\u7528\u4e86\u4e00\u4e9b\u5728\u73b0\u4ee3OpenGL\u4e2d\u5931\u6548\u7684\u7279\u6027\uff0c\u6240\u4ee5\u73b0\u5728\u6211\u4eec\u4ecd\u9700\u575a\u6301\u4f7f\u7528 SOIL_load_image \uff0c\u81ea\u5df1\u505a\u7eb9\u7406\u7684\u751f\u6210\u3002 \u6240\u4ee5\u4fee\u590d\u6211\u4eec\u7684\u5c0f\u95ee\u9898\uff0c\u6709\u4e24\u4e2a\u9009\u62e9\uff1a \u6211\u4eec\u53ef\u4ee5\u6539\u53d8\u9876\u70b9\u6570\u636e\u7684\u7eb9\u7406\u5750\u6807\uff0c\u7ffb\u8f6c y \u503c\uff08\u75281\u51cf\u53bby\u5750\u6807\uff09\u3002 \u6211\u4eec\u53ef\u4ee5\u7f16\u8f91\u9876\u70b9\u7740\u8272\u5668\u6765\u81ea\u52a8\u7ffb\u8f6c y \u5750\u6807\uff0c\u66ff\u6362 TexCoord \u7684\u503c\u4e3a TexCoord = vec2(texCoord.x, 1.0f - texCoord.y); \u3002 Attention \u4e0a\u9762\u63d0\u4f9b\u7684\u89e3\u51b3\u65b9\u6848\u4ec5\u4ec5\u901a\u8fc7\u4e00\u4e9b\u9ed1\u79d1\u6280\u8ba9\u56fe\u7247\u7ffb\u8f6c\u3002\u5b83\u4eec\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u7136\u800c\u5b9e\u9645\u4e0a\u8fd9\u79cd\u65b9\u6848\u7684\u6548\u679c\u53d6\u51b3\u4e8e\u4f60\u7684\u5b9e\u73b0\u548c\u7eb9\u7406\uff0c\u6240\u4ee5\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6848\u662f\u8c03\u6574\u4f60\u7684\u56fe\u7247\u52a0\u8f7d\u5668\uff0c\u6216\u8005\u4ee5\u4e00\u79cdy\u539f\u70b9\u7b26\u5408OpenGL\u9700\u6c42\u7684\u65b9\u5f0f\u7f16\u8f91\u4f60\u7684\u7eb9\u7406\u56fe\u50cf\u3002 \u5982\u679c\u4f60\u7f16\u8f91\u4e86\u9876\u70b9\u6570\u636e\uff0c\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u7ffb\u8f6c\u4e86\u7eb5\u5750\u6807\uff0c\u4f60\u4f1a\u5f97\u5230\u4e0b\u9762\u7684\u7ed3\u679c\uff1a \u5982\u679c\u4f60\u770b\u5230\u4e86\u4e00\u4e2a\u5f00\u5fc3\u7684\u7bb1\u5b50\uff0c\u4f60\u5c31\u505a\u5bf9\u4e86\u3002\u4f60\u53ef\u4ee5\u5bf9\u6bd4\u4e00\u4e0b \u6e90\u4ee3\u7801 \uff0c\u4ee5\u53ca \u9876\u70b9\u7740 \u548c \u7247\u6bb5 \u7740\u8272\u5668\u3002","title":"\u7eb9\u7406\u5355\u5143"},{"location":"legacy/#01-09","text":"","title":"01-09 \u6444\u50cf\u673a"},{"location":"legacy/#_5","text":"\u8ba9\u6444\u50cf\u673a\u7ed5\u7740\u573a\u666f\u8f6c\u7684\u786e\u5f88\u6709\u8da3\uff0c\u4f46\u662f\u8ba9\u6211\u4eec\u81ea\u5df1\u79fb\u52a8\u6444\u50cf\u673a\u4f1a\u66f4\u6709\u8da3\uff01\u9996\u5148\u6211\u4eec\u5fc5\u987b\u8bbe\u7f6e\u4e00\u4e2a\u6444\u50cf\u673a\u7cfb\u7edf\uff0c\u6240\u4ee5\u5728\u6211\u4eec\u7684\u7a0b\u5e8f\u524d\u9762\u5b9a\u4e49\u4e00\u4e9b\u6444\u50cf\u673a\u53d8\u91cf\u5f88\u6709\u7528\uff1a glm::vec3 cameraPos = glm::vec3(0.0f, 0.0f, 3.0f); glm::vec3 cameraFront = glm::vec3(0.0f, 0.0f, -1.0f); glm::vec3 cameraUp = glm::vec3(0.0f, 1.0f, 0.0f); LookAt \u51fd\u6570\u73b0\u5728\u6210\u4e86\uff1a view = glm::lookAt(cameraPos, cameraPos + cameraFront, cameraUp); \u6211\u4eec\u9996\u5148\u5c06\u6444\u50cf\u673a\u4f4d\u7f6e\u8bbe\u7f6e\u4e3a\u4e4b\u524d\u5b9a\u4e49\u7684 cameraPos \u3002\u65b9\u5411\u662f\u5f53\u524d\u7684\u4f4d\u7f6e\u52a0\u4e0a\u6211\u4eec\u521a\u521a\u5b9a\u4e49\u7684\u65b9\u5411\u5411\u91cf\u3002\u8fd9\u6837\u80fd\u4fdd\u8bc1\u65e0\u8bba\u6211\u4eec\u600e\u4e48\u79fb\u52a8\uff0c\u6444\u50cf\u673a\u90fd\u4f1a\u6ce8\u89c6\u7740\u76ee\u6807\u65b9\u5411\u3002\u8ba9\u6211\u4eec\u6446\u5f04\u4e00\u4e0b\u8fd9\u4e9b\u5411\u91cf\uff0c\u5728\u6309\u4e0b\u67d0\u4e9b\u6309\u94ae\u65f6\u66f4\u65b0 cameraPos \u5411\u91cf\u3002 \u6211\u4eec\u5df2\u7ecf\u4e3aGLFW\u7684\u952e\u76d8\u8f93\u5165\u5b9a\u4e49\u4e86\u4e00\u4e2a key_callback \u51fd\u6570\uff0c\u6211\u4eec\u6765\u65b0\u6dfb\u52a0\u51e0\u4e2a\u9700\u8981\u68c0\u67e5\u7684\u6309\u952e\u547d\u4ee4\uff1a void key_callback(GLFWwindow* window, int key, int scancode, int action, int mode) { ... GLfloat cameraSpeed = 0.05f; if(key == GLFW_KEY_W) cameraPos += cameraSpeed * cameraFront; if(key == GLFW_KEY_S) cameraPos -= cameraSpeed * cameraFront; if(key == GLFW_KEY_A) cameraPos -= glm::normalize(glm::cross(cameraFront, cameraUp)) * cameraSpeed; if(key == GLFW_KEY_D) cameraPos += glm::normalize(glm::cross(cameraFront, cameraUp)) * cameraSpeed; } \u5f53\u6211\u4eec\u6309\u4e0b WASD \u952e\u7684\u4efb\u610f\u4e00\u4e2a\uff0c\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u90fd\u4f1a\u76f8\u5e94\u66f4\u65b0\u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5411\u524d\u6216\u5411\u540e\u79fb\u52a8\uff0c\u6211\u4eec\u5c31\u628a\u4f4d\u7f6e\u5411\u91cf\u52a0\u4e0a\u6216\u51cf\u53bb\u65b9\u5411\u5411\u91cf\u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5411\u5de6\u53f3\u79fb\u52a8\uff0c\u6211\u4eec\u4f7f\u7528\u53c9\u4e58\u6765\u521b\u5efa\u4e00\u4e2a \u53f3\u5411\u91cf (Right Vector)\uff0c\u5e76\u6cbf\u7740\u5b83\u76f8\u5e94\u79fb\u52a8\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u6837\u5c31\u521b\u5efa\u4e86\u4f7f\u7528\u6444\u50cf\u673a\u65f6\u719f\u6089\u7684 \u626b\u5c04 (Strafe)\u6548\u679c\u3002 Important \u6ce8\u610f\uff0c\u6211\u4eec\u5bf9 \u53f3\u5411\u91cf \u8fdb\u884c\u4e86\u6807\u51c6\u5316\u3002\u5982\u679c\u6211\u4eec\u6ca1\u5bf9\u8fd9\u4e2a\u5411\u91cf\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u6700\u540e\u7684\u53c9\u4e58\u7ed3\u679c\u4f1a\u6839\u636e cameraFront \u53d8\u91cf\u8fd4\u56de\u5927\u5c0f\u4e0d\u540c\u7684\u5411\u91cf\u3002\u5982\u679c\u6211\u4eec\u4e0d\u5bf9\u5411\u91cf\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u6211\u4eec\u5c31\u5f97\u6839\u636e\u6444\u50cf\u673a\u7684\u671d\u5411\u4e0d\u540c\u52a0\u901f\u6216\u51cf\u901f\u79fb\u52a8\u4e86\uff0c\u4f46\u5047\u5982\u8fdb\u884c\u4e86\u6807\u51c6\u5316\u79fb\u52a8\u5c31\u662f\u5300\u901f\u7684\u3002 \u5982\u679c\u4f60\u7528\u8fd9\u6bb5\u4ee3\u7801\u66f4\u65b0 key_callback \u51fd\u6570\uff0c\u4f60\u5c31\u53ef\u4ee5\u5728\u573a\u666f\u4e2d\u81ea\u7531\u7684\u524d\u540e\u5de6\u53f3\u79fb\u52a8\u4e86\u3002 \u5728\u6446\u5f04\u8fd9\u4e2a\u57fa\u7840\u7684\u6444\u50cf\u673a\u7cfb\u7edf\u4e4b\u540e\u4f60\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u8fd9\u4e2a\u6444\u50cf\u673a\u7cfb\u7edf\u4e0d\u80fd\u540c\u65f6\u671d\u4e24\u4e2a\u65b9\u5411\u79fb\u52a8\uff08\u5bf9\u89d2\u7ebf\u79fb\u52a8\uff09\uff0c\u800c\u4e14\u5f53\u4f60\u6309\u4e0b\u4e00\u4e2a\u6309\u952e\u65f6\uff0c\u5b83\u4f1a\u5148\u987f\u4e00\u4e0b\u624d\u5f00\u59cb\u79fb\u52a8\u3002\u8fd9\u662f\u56e0\u4e3a\u5927\u591a\u6570\u4e8b\u4ef6\u8f93\u5165\u7cfb\u7edf\u4e00\u6b21\u53ea\u80fd\u5904\u7406\u4e00\u4e2a\u952e\u76d8\u8f93\u5165\uff0c\u5b83\u4eec\u7684\u51fd\u6570\u53ea\u6709\u5f53\u6211\u4eec\u6fc0\u6d3b\u4e86\u4e00\u4e2a\u6309\u952e\u65f6\u624d\u88ab\u8c03\u7528\u3002\u867d\u7136\u8fd9\u5bf9\u5927\u591a\u6570GUI\u7cfb\u7edf\u90fd\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u5b83\u5bf9\u6444\u50cf\u673a\u6765\u8bf4\u5e76\u4e0d\u5408\u7406\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e9b\u5c0f\u6280\u5de7\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u8fd9\u4e2a\u6280\u5de7\u662f\u5728\u56de\u8c03\u51fd\u6570\u4e2d\u53ea\u8ddf\u8e2a\u54ea\u4e2a\u6309\u952e\u88ab\u6309\u4e0b/\u91ca\u653e\u3002\u5728\u6e38\u620f\u5faa\u73af\u4e2d\u6211\u4eec\u8bfb\u53d6\u8fd9\u4e9b\u503c\uff0c\u68c0\u67e5\u54ea\u4e2a\u6309\u952e\u662f \u6fc0\u6d3b\u7684 \uff0c\u7136\u540e\u505a\u51fa\u76f8\u5e94\u53cd\u5e94\u3002\u6211\u4eec\u53ea\u50a8\u5b58\u54ea\u4e2a\u6309\u952e\u88ab\u6309\u4e0b/\u91ca\u653e\u7684\u72b6\u6001\u4fe1\u606f\uff0c\u5e76\u5728\u6e38\u620f\u5faa\u73af\u4e2d\u5bf9\u72b6\u6001\u505a\u51fa\u53cd\u5e94\u3002\u9996\u5148\uff0c\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2aboolean\u6570\u7ec4\u4ee3\u8868\u88ab\u6309\u4e0b/\u91ca\u653e\u7684\u6309\u952e\uff1a bool keys[1024]; \u7136\u540e\u6211\u4eec\u9700\u8981\u5728 key_callback \u51fd\u6570\u4e2d\u8bbe\u7f6e\u88ab\u6309\u4e0b/\u91ca\u653e\u7684\u6309\u952e\u4e3a true \u6216 false \uff1a if(action == GLFW_PRESS) keys[key] = true; else if(action == GLFW_RELEASE) keys[key] = false; \u5e76\u4e14\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u53eb\u505a do_movement \u7684\u51fd\u6570\uff0c\u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u5c06\u6839\u636e\u6b63\u5728\u88ab\u6309\u4e0b\u7684\u6309\u952e\u66f4\u65b0\u6444\u50cf\u673a\u7684\u503c\u3002\uff1a void do_movement() { // \u6444\u50cf\u673a\u63a7\u5236 GLfloat cameraSpeed = 0.01f; if(keys[GLFW_KEY_W]) cameraPos += cameraSpeed * cameraFront; if(keys[GLFW_KEY_S]) cameraPos -= cameraSpeed * cameraFront; if(keys[GLFW_KEY_A]) cameraPos -= glm::normalize(glm::cross(cameraFront, cameraUp)) * cameraSpeed; if(keys[GLFW_KEY_D]) cameraPos += glm::normalize(glm::cross(cameraFront, cameraUp)) * cameraSpeed; } \u4e4b\u524d\u7684\u4ee3\u7801\u73b0\u5728\u88ab\u79fb\u52a8\u5230 do_movement \u51fd\u6570\u4e2d\u3002\u7531\u4e8e\u6240\u6709GLFW\u7684\u6309\u952e\u679a\u4e3e\u503c\u672c\u8d28\u4e0a\u90fd\u662f\u6574\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u4eec\u5f53\u6570\u7ec4\u7d22\u5f15\u4f7f\u7528\u3002 \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u5728\u6e38\u620f\u5faa\u73af\u4e2d\u6dfb\u52a0\u65b0\u51fd\u6570\u7684\u8c03\u7528\uff1a while(!glfwWindowShouldClose(window)) { // \u68c0\u6d4b\u5e76\u8c03\u7528\u4e8b\u4ef6 glfwPollEvents(); do_movement(); // \u6e32\u67d3 ... } \u81f3\u6b64\uff0c\u4f60\u5e94\u8be5\u53ef\u4ee5\u540c\u65f6\u5411\u591a\u4e2a\u65b9\u5411\u79fb\u52a8\u4e86\uff0c\u5e76\u4e14\u5f53\u4f60\u6309\u4e0b\u6309\u94ae\u65f6\u4e5f\u4f1a\u7acb\u523b\u79fb\u52a8\u4e86\u3002\u5982\u9047\u56f0\u96be\uff0c\u53ef\u4ee5\u67e5\u770b\u4e0b \u6e90\u4ee3\u7801 \u3002","title":"\u81ea\u7531\u79fb\u52a8"},{"location":"01%20Getting%20started/01%20OpenGL/","text":"OpenGL \u539f\u6587 OpenGL \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 gjy_1992, Krasjet \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u5728\u5f00\u59cb\u8fd9\u6bb5\u65c5\u7a0b\u4e4b\u524d\u6211\u4eec\u5148\u4e86\u89e3\u4e00\u4e0bOpenGL\u5230\u5e95\u662f\u4ec0\u4e48\u3002\u4e00\u822c\u5b83\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2aAPI( Application Programming Interface , \u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u63a5\u53e3)\uff0c\u5305\u542b\u4e86\u4e00\u7cfb\u5217\u53ef\u4ee5\u64cd\u4f5c\u56fe\u5f62\u3001\u56fe\u50cf\u7684\u51fd\u6570\u3002\u7136\u800c\uff0cOpenGL\u672c\u8eab\u5e76\u4e0d\u662f\u4e00\u4e2aAPI\uff0c\u5b83\u4ec5\u4ec5\u662f\u4e00\u4e2a\u7531 Khronos\u7ec4\u7ec7 \u5236\u5b9a\u5e76\u7ef4\u62a4\u7684\u89c4\u8303(Specification)\u3002 OpenGL\u89c4\u8303\u4e25\u683c\u89c4\u5b9a\u4e86\u6bcf\u4e2a\u51fd\u6570\u8be5\u5982\u4f55\u6267\u884c\uff0c\u4ee5\u53ca\u5b83\u4eec\u7684\u8f93\u51fa\u503c\u3002\u81f3\u4e8e\u5185\u90e8\u5177\u4f53\u6bcf\u4e2a\u51fd\u6570\u662f\u5982\u4f55\u5b9e\u73b0(Implement)\u7684\uff0c\u5c06\u7531OpenGL\u5e93\u7684\u5f00\u53d1\u8005\u81ea\u884c\u51b3\u5b9a\uff08\u8bd1\u6ce8\uff1a\u8fd9\u91cc\u5f00\u53d1\u8005\u662f\u6307\u7f16\u5199OpenGL\u5e93\u7684\u4eba\uff09\u3002\u56e0\u4e3aOpenGL\u89c4\u8303\u5e76\u6ca1\u6709\u89c4\u5b9a\u5b9e\u73b0\u7684\u7ec6\u8282\uff0c\u5177\u4f53\u7684OpenGL\u5e93\u5141\u8bb8\u4f7f\u7528\u4e0d\u540c\u7684\u5b9e\u73b0\uff0c\u53ea\u8981\u5176\u529f\u80fd\u548c\u7ed3\u679c\u4e0e\u89c4\u8303\u76f8\u5339\u914d\uff08\u4ea6\u5373\uff0c\u4f5c\u4e3a\u7528\u6237\u4e0d\u4f1a\u611f\u53d7\u5230\u529f\u80fd\u4e0a\u7684\u5dee\u5f02\uff09\u3002 \u5b9e\u9645\u7684OpenGL\u5e93\u7684\u5f00\u53d1\u8005\u901a\u5e38\u662f\u663e\u5361\u7684\u751f\u4ea7\u5546\u3002\u4f60\u8d2d\u4e70\u7684\u663e\u5361\u6240\u652f\u6301\u7684OpenGL\u7248\u672c\u90fd\u4e3a\u8fd9\u4e2a\u7cfb\u5217\u7684\u663e\u5361\u4e13\u95e8\u5f00\u53d1\u7684\u3002\u5f53\u4f60\u4f7f\u7528Apple\u7cfb\u7edf\u7684\u65f6\u5019\uff0cOpenGL\u5e93\u662f\u7531Apple\u81ea\u8eab\u7ef4\u62a4\u7684\u3002\u5728Linux\u4e0b\uff0c\u6709\u663e\u5361\u751f\u4ea7\u5546\u63d0\u4f9b\u7684OpenGL\u5e93\uff0c\u4e5f\u6709\u4e00\u4e9b\u7231\u597d\u8005\u6539\u7f16\u7684\u7248\u672c\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u4efb\u4f55\u65f6\u5019OpenGL\u5e93\u8868\u73b0\u7684\u884c\u4e3a\u4e0e\u89c4\u8303\u89c4\u5b9a\u7684\u4e0d\u4e00\u81f4\u65f6\uff0c\u57fa\u672c\u90fd\u662f\u5e93\u7684\u5f00\u53d1\u8005\u7559\u4e0b\u7684bug\u3002 Important \u7531\u4e8eOpenGL\u7684\u5927\u591a\u6570\u5b9e\u73b0\u90fd\u662f\u7531\u663e\u5361\u5382\u5546\u7f16\u5199\u7684\uff0c\u5f53\u4ea7\u751f\u4e00\u4e2abug\u65f6\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u5347\u7ea7\u663e\u5361\u9a71\u52a8\u6765\u89e3\u51b3\u3002\u8fd9\u4e9b\u9a71\u52a8\u4f1a\u5305\u62ec\u4f60\u7684\u663e\u5361\u80fd\u652f\u6301\u7684\u6700\u65b0\u7248\u672c\u7684OpenGL\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u603b\u662f\u5efa\u8bae\u4f60\u5076\u5c14\u66f4\u65b0\u4e00\u4e0b\u663e\u5361\u9a71\u52a8\u3002 \u6240\u6709\u7248\u672c\u7684OpenGL\u89c4\u8303\u6587\u6863\u90fd\u88ab\u516c\u5f00\u7684\u5bc4\u5b58\u5728Khronos\u90a3\u91cc\u3002\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u627e\u5230OpenGL3.3\uff08\u6211\u4eec\u5c06\u8981\u4f7f\u7528\u7684\u7248\u672c\uff09\u7684 \u89c4\u8303\u6587\u6863 \u3002\u5982\u679c\u4f60\u60f3\u6df1\u5165\u5230OpenGL\u7684\u7ec6\u8282\uff08\u53ea\u5173\u5fc3\u51fd\u6570\u529f\u80fd\u7684\u63cf\u8ff0\u800c\u4e0d\u662f\u51fd\u6570\u7684\u5b9e\u73b0\uff09\uff0c\u8fd9\u662f\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002\u5982\u679c\u4f60\u60f3\u77e5\u9053\u6bcf\u4e2a\u51fd\u6570 \u5177\u4f53\u7684 \u8fd0\u4f5c\u65b9\u5f0f\uff0c\u8fd9\u4e2a\u89c4\u8303\u4e5f\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u53c2\u8003\u3002 \u6838\u5fc3\u6a21\u5f0f\u4e0e\u7acb\u5373\u6e32\u67d3\u6a21\u5f0f \u65e9\u671f\u7684OpenGL\u4f7f\u7528 \u7acb\u5373\u6e32\u67d3\u6a21\u5f0f \uff08Immediate mode\uff0c\u4e5f\u5c31\u662f \u56fa\u5b9a\u6e32\u67d3\u7ba1\u7ebf \uff09\uff0c\u8fd9\u4e2a\u6a21\u5f0f\u4e0b\u7ed8\u5236\u56fe\u5f62\u5f88\u65b9\u4fbf\u3002OpenGL\u7684\u5927\u591a\u6570\u529f\u80fd\u90fd\u88ab\u5e93\u9690\u85cf\u8d77\u6765\uff0c\u5f00\u53d1\u8005\u5f88\u5c11\u6709\u63a7\u5236OpenGL\u5982\u4f55\u8fdb\u884c\u8ba1\u7b97\u7684\u81ea\u7531\u3002\u800c\u5f00\u53d1\u8005\u8feb\u5207\u5e0c\u671b\u80fd\u6709\u66f4\u591a\u7684\u7075\u6d3b\u6027\u3002\u968f\u7740\u65f6\u95f4\u63a8\u79fb\uff0c\u89c4\u8303\u8d8a\u6765\u8d8a\u7075\u6d3b\uff0c\u5f00\u53d1\u8005\u5bf9\u7ed8\u56fe\u7ec6\u8282\u6709\u4e86\u66f4\u591a\u7684\u638c\u63a7\u3002\u7acb\u5373\u6e32\u67d3\u6a21\u5f0f\u786e\u5b9e\u5bb9\u6613\u4f7f\u7528\u548c\u7406\u89e3\uff0c\u4f46\u662f\u6548\u7387\u592a\u4f4e\u3002\u56e0\u6b64\u4eceOpenGL3.2\u5f00\u59cb\uff0c\u89c4\u8303\u6587\u6863\u5f00\u59cb\u5e9f\u5f03\u7acb\u5373\u6e32\u67d3\u6a21\u5f0f\uff0c\u5e76\u9f13\u52b1\u5f00\u53d1\u8005\u5728OpenGL\u7684 \u6838\u5fc3\u6a21\u5f0f (Core-profile)\u4e0b\u8fdb\u884c\u5f00\u53d1\uff0c\u8fd9\u4e2a\u5206\u652f\u7684\u89c4\u8303\u5b8c\u5168\u79fb\u9664\u4e86\u65e7\u7684\u7279\u6027\u3002 \u5f53\u4f7f\u7528OpenGL\u7684\u6838\u5fc3\u6a21\u5f0f\u65f6\uff0cOpenGL\u8feb\u4f7f\u6211\u4eec\u4f7f\u7528\u73b0\u4ee3\u7684\u51fd\u6570\u3002\u5f53\u6211\u4eec\u8bd5\u56fe\u4f7f\u7528\u4e00\u4e2a\u5df2\u5e9f\u5f03\u7684\u51fd\u6570\u65f6\uff0cOpenGL\u4f1a\u629b\u51fa\u4e00\u4e2a\u9519\u8bef\u5e76\u7ec8\u6b62\u7ed8\u56fe\u3002\u73b0\u4ee3\u51fd\u6570\u7684\u4f18\u52bf\u662f\u66f4\u9ad8\u7684\u7075\u6d3b\u6027\u548c\u6548\u7387\uff0c\u7136\u800c\u4e5f\u66f4\u96be\u4e8e\u5b66\u4e60\u3002\u7acb\u5373\u6e32\u67d3\u6a21\u5f0f\u4eceOpenGL \u5b9e\u9645 \u8fd0\u4f5c\u4e2d\u62bd\u8c61\u6389\u4e86\u5f88\u591a\u7ec6\u8282\uff0c\u56e0\u6b64\u5b83\u5728\u6613\u4e8e\u5b66\u4e60\u7684\u540c\u65f6\uff0c\u4e5f\u5f88\u96be\u8ba9\u4eba\u53bb\u628a\u63e1OpenGL\u5177\u4f53\u662f\u5982\u4f55\u8fd0\u4f5c\u7684\u3002\u73b0\u4ee3\u51fd\u6570\u8981\u6c42\u4f7f\u7528\u8005\u771f\u6b63\u7406\u89e3OpenGL\u548c\u56fe\u5f62\u7f16\u7a0b\uff0c\u5b83\u6709\u4e00\u4e9b\u96be\u5ea6\uff0c\u7136\u800c\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u7075\u6d3b\u6027\uff0c\u66f4\u9ad8\u7684\u6548\u7387\uff0c\u66f4\u91cd\u8981\u7684\u662f\u53ef\u4ee5\u66f4\u6df1\u5165\u7684\u7406\u89e3\u56fe\u5f62\u7f16\u7a0b\u3002 \u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u7684\u6559\u7a0b\u9762\u5411OpenGL3.3\u7684\u6838\u5fc3\u6a21\u5f0f\u3002\u867d\u7136\u4e0a\u624b\u66f4\u56f0\u96be\uff0c\u4f46\u8fd9\u4efd\u52aa\u529b\u662f\u503c\u5f97\u7684\u3002 \u73b0\u4eca\uff0c\u66f4\u9ad8\u7248\u672c\u7684OpenGL\u5df2\u7ecf\u53d1\u5e03\uff08\u5199\u4f5c\u65f6\u6700\u65b0\u7248\u672c\u4e3a4.5\uff09\uff0c\u4f60\u53ef\u80fd\u4f1a\u95ee\uff1a\u65e2\u7136OpenGL 4.5 \u90fd\u51fa\u6765\u4e86\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u8fd8\u8981\u5b66\u4e60OpenGL 3.3\uff1f\u7b54\u6848\u5f88\u7b80\u5355\uff0c\u6240\u6709OpenGL\u7684\u66f4\u9ad8\u7684\u7248\u672c\u90fd\u662f\u57283.3\u7684\u57fa\u7840\u4e0a\uff0c\u5f15\u5165\u4e86\u989d\u5916\u7684\u529f\u80fd\uff0c\u5e76\u6ca1\u6709\u6539\u52a8\u6838\u5fc3\u67b6\u6784\u3002\u65b0\u7248\u672c\u53ea\u662f\u5f15\u5165\u4e86\u4e00\u4e9b\u66f4\u6709\u6548\u7387\u6216\u66f4\u6709\u7528\u7684\u65b9\u5f0f\u53bb\u5b8c\u6210\u540c\u6837\u7684\u529f\u80fd\u3002\u56e0\u6b64\uff0c\u6240\u6709\u7684\u6982\u5ff5\u548c\u6280\u672f\u5728\u73b0\u4ee3OpenGL\u7248\u672c\u91cc\u90fd\u4fdd\u6301\u4e00\u81f4\u3002\u5f53\u4f60\u7684\u7ecf\u9a8c\u8db3\u591f\uff0c\u4f60\u53ef\u4ee5\u8f7b\u677e\u4f7f\u7528\u6765\u81ea\u66f4\u9ad8\u7248\u672cOpenGL\u7684\u65b0\u7279\u6027\u3002 Attention \u5f53\u4f7f\u7528\u65b0\u7248\u672c\u7684OpenGL\u7279\u6027\u65f6\uff0c\u53ea\u6709\u65b0\u4e00\u4ee3\u7684\u663e\u5361\u80fd\u591f\u652f\u6301\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u5927\u591a\u6570\u5f00\u53d1\u8005\u57fa\u4e8e\u8f83\u4f4e\u7248\u672c\u7684OpenGL\u7f16\u5199\u7a0b\u5e8f\uff0c\u5e76\u53ea\u63d0\u4f9b\u9009\u9879\u542f\u7528\u65b0\u7248\u672c\u7684\u7279\u6027\u3002 \u5728\u6709\u4e9b\u6559\u7a0b\u91cc\u4f60\u4f1a\u770b\u89c1\u66f4\u73b0\u4ee3\u7684\u7279\u6027\uff0c\u5b83\u4eec\u540c\u6837\u4f1a\u4ee5\u8fd9\u79cd\u7ea2\u8272\u6ce8\u91ca\u65b9\u5f0f\u6807\u660e\u3002 \u6269\u5c55 OpenGL\u7684\u4e00\u5927\u7279\u6027\u5c31\u662f\u5bf9\u6269\u5c55(Extension)\u7684\u652f\u6301\uff0c\u5f53\u4e00\u4e2a\u663e\u5361\u516c\u53f8\u63d0\u51fa\u4e00\u4e2a\u65b0\u7279\u6027\u6216\u8005\u6e32\u67d3\u4e0a\u7684\u5927\u4f18\u5316\uff0c\u901a\u5e38\u4f1a\u4ee5 \u6269\u5c55 \u7684\u65b9\u5f0f\u5728\u9a71\u52a8\u4e2d\u5b9e\u73b0\u3002\u5982\u679c\u4e00\u4e2a\u7a0b\u5e8f\u5728\u652f\u6301\u8fd9\u4e2a\u6269\u5c55\u7684\u663e\u5361\u4e0a\u8fd0\u884c\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u6269\u5c55\u63d0\u4f9b\u7684\u4e00\u4e9b\u66f4\u5148\u8fdb\u66f4\u6709\u6548\u7684\u56fe\u5f62\u529f\u80fd\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5f00\u53d1\u8005\u4e0d\u5fc5\u7b49\u5f85\u4e00\u4e2a\u65b0\u7684OpenGL\u89c4\u8303\u9762\u4e16\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u65b0\u7684\u6e32\u67d3\u7279\u6027\u4e86\uff0c\u53ea\u9700\u8981\u7b80\u5355\u5730\u68c0\u67e5\u4e00\u4e0b\u663e\u5361\u662f\u5426\u652f\u6301\u6b64\u6269\u5c55\u3002\u901a\u5e38\uff0c\u5f53\u4e00\u4e2a\u6269\u5c55\u975e\u5e38\u6d41\u884c\u6216\u8005\u975e\u5e38\u6709\u7528\u7684\u65f6\u5019\uff0c\u5b83\u5c06\u6700\u7ec8\u6210\u4e3a\u672a\u6765\u7684OpenGL\u89c4\u8303\u7684\u4e00\u90e8\u5206\u3002 \u4f7f\u7528\u6269\u5c55\u7684\u4ee3\u7801\u5927\u591a\u770b\u4e0a\u53bb\u5982\u4e0b\uff1a if(GL_ARB_extension_name) { // \u4f7f\u7528\u786c\u4ef6\u652f\u6301\u7684\u5168\u65b0\u7684\u73b0\u4ee3\u7279\u6027 } else { // \u4e0d\u652f\u6301\u6b64\u6269\u5c55: \u7528\u65e7\u7684\u65b9\u5f0f\u53bb\u505a } \u4f7f\u7528OpenGL3.3\u65f6\uff0c\u6211\u4eec\u5f88\u5c11\u9700\u8981\u4f7f\u7528\u6269\u5c55\u6765\u5b8c\u6210\u5927\u591a\u6570\u529f\u80fd\uff0c\u5f53\u9700\u8981\u7684\u65f6\u5019\uff0c\u672c\u6559\u7a0b\u5c06\u63d0\u4f9b\u9002\u5f53\u7684\u6307\u793a\u3002 \u72b6\u6001\u673a OpenGL\u81ea\u8eab\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u72b6\u6001\u673a(State Machine)\uff1a\u4e00\u7cfb\u5217\u7684\u53d8\u91cf\u63cf\u8ff0OpenGL\u6b64\u523b\u5e94\u5f53\u5982\u4f55\u8fd0\u884c\u3002OpenGL\u7684\u72b6\u6001\u901a\u5e38\u88ab\u79f0\u4e3aOpenGL \u4e0a\u4e0b\u6587 (Context)\u3002\u6211\u4eec\u901a\u5e38\u4f7f\u7528\u5982\u4e0b\u9014\u5f84\u53bb\u66f4\u6539OpenGL\u72b6\u6001\uff1a\u8bbe\u7f6e\u9009\u9879\uff0c\u64cd\u4f5c\u7f13\u51b2\u3002\u6700\u540e\uff0c\u6211\u4eec\u4f7f\u7528\u5f53\u524dOpenGL\u4e0a\u4e0b\u6587\u6765\u6e32\u67d3\u3002 \u5047\u8bbe\u5f53\u6211\u4eec\u60f3\u544a\u8bc9OpenGL\u53bb\u753b\u7ebf\u6bb5\u800c\u4e0d\u662f\u4e09\u89d2\u5f62\u7684\u65f6\u5019\uff0c\u6211\u4eec\u901a\u8fc7\u6539\u53d8\u4e00\u4e9b\u4e0a\u4e0b\u6587\u53d8\u91cf\u6765\u6539\u53d8OpenGL\u72b6\u6001\uff0c\u4ece\u800c\u544a\u8bc9OpenGL\u5982\u4f55\u53bb\u7ed8\u56fe\u3002\u4e00\u65e6\u6211\u4eec\u6539\u53d8\u4e86OpenGL\u7684\u72b6\u6001\u4e3a\u7ed8\u5236\u7ebf\u6bb5\uff0c\u4e0b\u4e00\u4e2a\u7ed8\u5236\u547d\u4ee4\u5c31\u4f1a\u753b\u51fa\u7ebf\u6bb5\u800c\u4e0d\u662f\u4e09\u89d2\u5f62\u3002 \u5f53\u4f7f\u7528OpenGL\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u9047\u5230\u4e00\u4e9b \u72b6\u6001\u8bbe\u7f6e \u51fd\u6570(State-changing Function)\uff0c\u8fd9\u7c7b\u51fd\u6570\u5c06\u4f1a\u6539\u53d8\u4e0a\u4e0b\u6587\u3002\u4ee5\u53ca \u72b6\u6001\u4f7f\u7528 \u51fd\u6570(State-using Function)\uff0c\u8fd9\u7c7b\u51fd\u6570\u4f1a\u6839\u636e\u5f53\u524dOpenGL\u7684\u72b6\u6001\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c\u3002\u53ea\u8981\u4f60\u8bb0\u4f4fOpenGL\u672c\u8d28\u4e0a\u662f\u4e2a\u5927\u72b6\u6001\u673a\uff0c\u5c31\u80fd\u66f4\u5bb9\u6613\u7406\u89e3\u5b83\u7684\u5927\u90e8\u5206\u7279\u6027\u3002 \u5bf9\u8c61 OpenGL\u5e93\u662f\u7528C\u8bed\u8a00\u5199\u7684\uff0c\u540c\u65f6\u4e5f\u652f\u6301\u591a\u79cd\u8bed\u8a00\u7684\u6d3e\u751f\uff0c\u4f46\u5176\u5185\u6838\u4ecd\u662f\u4e00\u4e2aC\u5e93\u3002\u7531\u4e8eC\u7684\u4e00\u4e9b\u8bed\u8a00\u7ed3\u6784\u4e0d\u6613\u88ab\u7ffb\u8bd1\u5230\u5176\u5b83\u7684\u9ad8\u7ea7\u8bed\u8a00\uff0c\u56e0\u6b64OpenGL\u5f00\u53d1\u7684\u65f6\u5019\u5f15\u5165\u4e86\u4e00\u4e9b\u62bd\u8c61\u5c42\u3002\u201c\u5bf9\u8c61(Object)\u201d\u5c31\u662f\u5176\u4e2d\u4e00\u4e2a\u3002 \u5728OpenGL\u4e2d\u4e00\u4e2a \u5bf9\u8c61 \u662f\u6307\u4e00\u4e9b\u9009\u9879\u7684\u96c6\u5408\uff0c\u5b83\u4ee3\u8868OpenGL\u72b6\u6001\u7684\u4e00\u4e2a\u5b50\u96c6\u3002\u6bd4\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u5bf9\u8c61\u6765\u4ee3\u8868\u7ed8\u56fe\u7a97\u53e3\u7684\u8bbe\u7f6e\uff0c\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u8bbe\u7f6e\u5b83\u7684\u5927\u5c0f\u3001\u652f\u6301\u7684\u989c\u8272\u4f4d\u6570\u7b49\u7b49\u3002\u53ef\u4ee5\u628a\u5bf9\u8c61\u770b\u505a\u4e00\u4e2aC\u98ce\u683c\u7684\u7ed3\u6784\u4f53(Struct)\uff1a struct object_name { float option1; int option2; char[] name; }; \u8bd1\u6ce8 \u5728\u66f4\u65b0\u524d\u7684\u6559\u7a0b\u4e2d\u4e00\u76f4\u4f7f\u7528\u7684\u90fd\u662fOpenGL\u7684\u57fa\u672c\u7c7b\u578b\uff0c\u4f46\u7531\u4e8e\u4f5c\u8005\u89c9\u5f97\u5728\u672c\u6559\u7a0b\u7cfb\u5217\u4e2d\u5e76\u6ca1\u6709\u4e00\u4e2a\u5fc5\u987b\u4f7f\u7528\u5b83\u4eec\u7684\u539f\u56e0\uff0c\u6240\u6709\u7684\u7c7b\u578b\u90fd\u6539\u4e3a\u4e86\u81ea\u5e26\u7c7b\u578b\u3002\u4f46\u662f\u8bf7\u4ecd\u7136\u8bb0\u4f4f\uff0c\u4f7f\u7528OpenGL\u7684\u7c7b\u578b\u7684\u597d\u5904\u662f\u4fdd\u8bc1\u4e86\u5728\u5404\u5e73\u53f0\u4e2d\u6bcf\u4e00\u79cd\u7c7b\u578b\u7684\u5927\u5c0f\u90fd\u662f\u7edf\u4e00\u7684\u3002\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u5b83\u7684\u5b9a\u5bbd\u7c7b\u578b(Fixed-width Type)\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002 \u5f53\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u901a\u5e38\u770b\u8d77\u6765\u50cf\u5982\u4e0b\u4e00\u6837\uff08\u628aOpenGL\u4e0a\u4e0b\u6587\u770b\u4f5c\u4e00\u4e2a\u5927\u7684\u7ed3\u6784\u4f53\uff09\uff1a // OpenGL\u7684\u72b6\u6001 struct OpenGL_Context { ... object* object_Window_Target; ... }; // \u521b\u5efa\u5bf9\u8c61 unsigned int objectId = 0; glGenObject(1, &objectId); // \u7ed1\u5b9a\u5bf9\u8c61\u81f3\u4e0a\u4e0b\u6587 glBindObject(GL_WINDOW_TARGET, objectId); // \u8bbe\u7f6e\u5f53\u524d\u7ed1\u5b9a\u5230 GL_WINDOW_TARGET \u7684\u5bf9\u8c61\u7684\u4e00\u4e9b\u9009\u9879 glSetObjectOption(GL_WINDOW_TARGET, GL_OPTION_WINDOW_WIDTH, 800); glSetObjectOption(GL_WINDOW_TARGET, GL_OPTION_WINDOW_HEIGHT, 600); // \u5c06\u4e0a\u4e0b\u6587\u5bf9\u8c61\u8bbe\u56de\u9ed8\u8ba4 glBindObject(GL_WINDOW_TARGET, 0); \u8fd9\u4e00\u5c0f\u6bb5\u4ee3\u7801\u5c55\u73b0\u4e86\u4f60\u4ee5\u540e\u4f7f\u7528OpenGL\u65f6\u5e38\u89c1\u7684\u5de5\u4f5c\u6d41\u3002\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u7136\u540e\u7528\u4e00\u4e2aid\u4fdd\u5b58\u5b83\u7684\u5f15\u7528\uff08\u5b9e\u9645\u6570\u636e\u88ab\u50a8\u5b58\u5728\u540e\u53f0\uff09\u3002\u7136\u540e\u6211\u4eec\u5c06\u5bf9\u8c61\u7ed1\u5b9a\u81f3\u4e0a\u4e0b\u6587\u7684\u76ee\u6807\u4f4d\u7f6e\uff08\u4f8b\u5b50\u4e2d\u7a97\u53e3\u5bf9\u8c61\u76ee\u6807\u7684\u4f4d\u7f6e\u88ab\u5b9a\u4e49\u6210 GL_WINDOW_TARGET \uff09\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u8bbe\u7f6e\u7a97\u53e3\u7684\u9009\u9879\u3002\u6700\u540e\u6211\u4eec\u5c06\u76ee\u6807\u4f4d\u7f6e\u7684\u5bf9\u8c61id\u8bbe\u56de0\uff0c\u89e3\u7ed1\u8fd9\u4e2a\u5bf9\u8c61\u3002\u8bbe\u7f6e\u7684\u9009\u9879\u5c06\u88ab\u4fdd\u5b58\u5728 objectId \u6240\u5f15\u7528\u7684\u5bf9\u8c61\u4e2d\uff0c\u4e00\u65e6\u6211\u4eec\u91cd\u65b0\u7ed1\u5b9a\u8fd9\u4e2a\u5bf9\u8c61\u5230 GL_WINDOW_TARGET \u4f4d\u7f6e\uff0c\u8fd9\u4e9b\u9009\u9879\u5c31\u4f1a\u91cd\u65b0\u751f\u6548\u3002 Attention \u76ee\u524d\u63d0\u4f9b\u7684\u793a\u4f8b\u4ee3\u7801\u53ea\u662fOpenGL\u5982\u4f55\u64cd\u4f5c\u7684\u4e00\u4e2a\u5927\u81f4\u63cf\u8ff0\uff0c\u901a\u8fc7\u9605\u8bfb\u4ee5\u540e\u7684\u6559\u7a0b\u4f60\u4f1a\u9047\u5230\u5f88\u591a\u5b9e\u9645\u7684\u4f8b\u5b50\u3002 \u4f7f\u7528\u5bf9\u8c61\u7684\u4e00\u4e2a\u597d\u5904\u662f\u5728\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u4e0d\u6b62\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5e76\u8bbe\u7f6e\u5b83\u4eec\u7684\u9009\u9879\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u53ef\u4ee5\u662f\u4e0d\u540c\u7684\u8bbe\u7f6e\u3002\u5728\u6211\u4eec\u6267\u884c\u4e00\u4e2a\u4f7f\u7528OpenGL\u72b6\u6001\u7684\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u7ed1\u5b9a\u542b\u6709\u9700\u8981\u7684\u8bbe\u7f6e\u7684\u5bf9\u8c61\u5373\u53ef\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u6709\u4e00\u4e9b\u4f5c\u4e3a3D\u6a21\u578b\u6570\u636e\uff08\u4e00\u680b\u623f\u5b50\u6216\u4e00\u4e2a\u4eba\u7269\uff09\u7684\u5bb9\u5668\u5bf9\u8c61\uff0c\u5728\u6211\u4eec\u60f3\u7ed8\u5236\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u6a21\u578b\u7684\u65f6\u5019\uff0c\u53ea\u9700\u7ed1\u5b9a\u4e00\u4e2a\u5305\u542b\u5bf9\u5e94\u6a21\u578b\u6570\u636e\u7684\u5bf9\u8c61\u5c31\u53ef\u4ee5\u4e86\uff08\u5f53\u7136\uff0c\u6211\u4eec\u9700\u8981\u5148\u521b\u5efa\u5e76\u8bbe\u7f6e\u5bf9\u8c61\u7684\u9009\u9879\uff09\u3002\u62e5\u6709\u6570\u4e2a\u8fd9\u6837\u7684\u5bf9\u8c61\u5141\u8bb8\u6211\u4eec\u6307\u5b9a\u591a\u4e2a\u6a21\u578b\uff0c\u5728\u60f3\u753b\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u5c06\u5bf9\u5e94\u7684\u5bf9\u8c61\u7ed1\u5b9a\u4e0a\u53bb\uff0c\u4fbf\u4e0d\u9700\u8981\u518d\u91cd\u590d\u8bbe\u7f6e\u9009\u9879\u4e86\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u5427 \u4f60\u73b0\u5728\u5df2\u7ecf\u77e5\u9053\u4e00\u4e9bOpenGL\u7684\u76f8\u5173\u77e5\u8bc6\u4e86\uff0cOpenGL\u89c4\u8303\u548c\u5e93\uff0cOpenGL\u5e55\u540e\u5927\u81f4\u7684\u8fd0\u4f5c\u6d41\u7a0b\uff0c\u4ee5\u53caOpenGL\u4f7f\u7528\u7684\u4e00\u4e9b\u4f20\u7edf\u6280\u5de7\u3002\u4e0d\u8981\u62c5\u5fc3\u4f60\u8fd8\u6ca1\u6709\u5b8c\u5168\u6d88\u5316\u5b83\u4eec\uff0c\u540e\u9762\u7684\u6559\u7a0b\u6211\u4eec\u4f1a\u4ed4\u7ec6\u5730\u8bb2\u89e3\u6bcf\u4e00\u4e2a\u6b65\u9aa4\uff0c\u4f60\u4f1a\u901a\u8fc7\u8db3\u591f\u7684\u4f8b\u5b50\u6765\u771f\u6b63\u638c\u63e1OpenGL\u3002\u5982\u679c\u4f60\u5df2\u7ecf\u505a\u597d\u4e86\u5f00\u59cb\u4e0b\u4e00\u6b65\u7684\u51c6\u5907\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 \u8fd9\u91cc \u5f00\u59cb\u521b\u5efaOpenGL\u4e0a\u4e0b\u6587\u4ee5\u53ca\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u7a97\u53e3\u4e86\u3002 \u9644\u52a0\u8d44\u6e90 opengl.org \uff1aOpenGL\u5b98\u65b9\u7f51\u7ad9\u3002 OpenGL registry \uff1a\u5305\u542bOpenGL\u5404\u7248\u672c\u7684\u89c4\u8303\u548c\u6269\u5c55\u3002","title":"OpenGL"},{"location":"01%20Getting%20started/01%20OpenGL/#opengl","text":"\u539f\u6587 OpenGL \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 gjy_1992, Krasjet \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u5728\u5f00\u59cb\u8fd9\u6bb5\u65c5\u7a0b\u4e4b\u524d\u6211\u4eec\u5148\u4e86\u89e3\u4e00\u4e0bOpenGL\u5230\u5e95\u662f\u4ec0\u4e48\u3002\u4e00\u822c\u5b83\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2aAPI( Application Programming Interface , \u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u63a5\u53e3)\uff0c\u5305\u542b\u4e86\u4e00\u7cfb\u5217\u53ef\u4ee5\u64cd\u4f5c\u56fe\u5f62\u3001\u56fe\u50cf\u7684\u51fd\u6570\u3002\u7136\u800c\uff0cOpenGL\u672c\u8eab\u5e76\u4e0d\u662f\u4e00\u4e2aAPI\uff0c\u5b83\u4ec5\u4ec5\u662f\u4e00\u4e2a\u7531 Khronos\u7ec4\u7ec7 \u5236\u5b9a\u5e76\u7ef4\u62a4\u7684\u89c4\u8303(Specification)\u3002 OpenGL\u89c4\u8303\u4e25\u683c\u89c4\u5b9a\u4e86\u6bcf\u4e2a\u51fd\u6570\u8be5\u5982\u4f55\u6267\u884c\uff0c\u4ee5\u53ca\u5b83\u4eec\u7684\u8f93\u51fa\u503c\u3002\u81f3\u4e8e\u5185\u90e8\u5177\u4f53\u6bcf\u4e2a\u51fd\u6570\u662f\u5982\u4f55\u5b9e\u73b0(Implement)\u7684\uff0c\u5c06\u7531OpenGL\u5e93\u7684\u5f00\u53d1\u8005\u81ea\u884c\u51b3\u5b9a\uff08\u8bd1\u6ce8\uff1a\u8fd9\u91cc\u5f00\u53d1\u8005\u662f\u6307\u7f16\u5199OpenGL\u5e93\u7684\u4eba\uff09\u3002\u56e0\u4e3aOpenGL\u89c4\u8303\u5e76\u6ca1\u6709\u89c4\u5b9a\u5b9e\u73b0\u7684\u7ec6\u8282\uff0c\u5177\u4f53\u7684OpenGL\u5e93\u5141\u8bb8\u4f7f\u7528\u4e0d\u540c\u7684\u5b9e\u73b0\uff0c\u53ea\u8981\u5176\u529f\u80fd\u548c\u7ed3\u679c\u4e0e\u89c4\u8303\u76f8\u5339\u914d\uff08\u4ea6\u5373\uff0c\u4f5c\u4e3a\u7528\u6237\u4e0d\u4f1a\u611f\u53d7\u5230\u529f\u80fd\u4e0a\u7684\u5dee\u5f02\uff09\u3002 \u5b9e\u9645\u7684OpenGL\u5e93\u7684\u5f00\u53d1\u8005\u901a\u5e38\u662f\u663e\u5361\u7684\u751f\u4ea7\u5546\u3002\u4f60\u8d2d\u4e70\u7684\u663e\u5361\u6240\u652f\u6301\u7684OpenGL\u7248\u672c\u90fd\u4e3a\u8fd9\u4e2a\u7cfb\u5217\u7684\u663e\u5361\u4e13\u95e8\u5f00\u53d1\u7684\u3002\u5f53\u4f60\u4f7f\u7528Apple\u7cfb\u7edf\u7684\u65f6\u5019\uff0cOpenGL\u5e93\u662f\u7531Apple\u81ea\u8eab\u7ef4\u62a4\u7684\u3002\u5728Linux\u4e0b\uff0c\u6709\u663e\u5361\u751f\u4ea7\u5546\u63d0\u4f9b\u7684OpenGL\u5e93\uff0c\u4e5f\u6709\u4e00\u4e9b\u7231\u597d\u8005\u6539\u7f16\u7684\u7248\u672c\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u4efb\u4f55\u65f6\u5019OpenGL\u5e93\u8868\u73b0\u7684\u884c\u4e3a\u4e0e\u89c4\u8303\u89c4\u5b9a\u7684\u4e0d\u4e00\u81f4\u65f6\uff0c\u57fa\u672c\u90fd\u662f\u5e93\u7684\u5f00\u53d1\u8005\u7559\u4e0b\u7684bug\u3002 Important \u7531\u4e8eOpenGL\u7684\u5927\u591a\u6570\u5b9e\u73b0\u90fd\u662f\u7531\u663e\u5361\u5382\u5546\u7f16\u5199\u7684\uff0c\u5f53\u4ea7\u751f\u4e00\u4e2abug\u65f6\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u5347\u7ea7\u663e\u5361\u9a71\u52a8\u6765\u89e3\u51b3\u3002\u8fd9\u4e9b\u9a71\u52a8\u4f1a\u5305\u62ec\u4f60\u7684\u663e\u5361\u80fd\u652f\u6301\u7684\u6700\u65b0\u7248\u672c\u7684OpenGL\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u603b\u662f\u5efa\u8bae\u4f60\u5076\u5c14\u66f4\u65b0\u4e00\u4e0b\u663e\u5361\u9a71\u52a8\u3002 \u6240\u6709\u7248\u672c\u7684OpenGL\u89c4\u8303\u6587\u6863\u90fd\u88ab\u516c\u5f00\u7684\u5bc4\u5b58\u5728Khronos\u90a3\u91cc\u3002\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u627e\u5230OpenGL3.3\uff08\u6211\u4eec\u5c06\u8981\u4f7f\u7528\u7684\u7248\u672c\uff09\u7684 \u89c4\u8303\u6587\u6863 \u3002\u5982\u679c\u4f60\u60f3\u6df1\u5165\u5230OpenGL\u7684\u7ec6\u8282\uff08\u53ea\u5173\u5fc3\u51fd\u6570\u529f\u80fd\u7684\u63cf\u8ff0\u800c\u4e0d\u662f\u51fd\u6570\u7684\u5b9e\u73b0\uff09\uff0c\u8fd9\u662f\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002\u5982\u679c\u4f60\u60f3\u77e5\u9053\u6bcf\u4e2a\u51fd\u6570 \u5177\u4f53\u7684 \u8fd0\u4f5c\u65b9\u5f0f\uff0c\u8fd9\u4e2a\u89c4\u8303\u4e5f\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u53c2\u8003\u3002","title":"OpenGL"},{"location":"01%20Getting%20started/01%20OpenGL/#_1","text":"\u65e9\u671f\u7684OpenGL\u4f7f\u7528 \u7acb\u5373\u6e32\u67d3\u6a21\u5f0f \uff08Immediate mode\uff0c\u4e5f\u5c31\u662f \u56fa\u5b9a\u6e32\u67d3\u7ba1\u7ebf \uff09\uff0c\u8fd9\u4e2a\u6a21\u5f0f\u4e0b\u7ed8\u5236\u56fe\u5f62\u5f88\u65b9\u4fbf\u3002OpenGL\u7684\u5927\u591a\u6570\u529f\u80fd\u90fd\u88ab\u5e93\u9690\u85cf\u8d77\u6765\uff0c\u5f00\u53d1\u8005\u5f88\u5c11\u6709\u63a7\u5236OpenGL\u5982\u4f55\u8fdb\u884c\u8ba1\u7b97\u7684\u81ea\u7531\u3002\u800c\u5f00\u53d1\u8005\u8feb\u5207\u5e0c\u671b\u80fd\u6709\u66f4\u591a\u7684\u7075\u6d3b\u6027\u3002\u968f\u7740\u65f6\u95f4\u63a8\u79fb\uff0c\u89c4\u8303\u8d8a\u6765\u8d8a\u7075\u6d3b\uff0c\u5f00\u53d1\u8005\u5bf9\u7ed8\u56fe\u7ec6\u8282\u6709\u4e86\u66f4\u591a\u7684\u638c\u63a7\u3002\u7acb\u5373\u6e32\u67d3\u6a21\u5f0f\u786e\u5b9e\u5bb9\u6613\u4f7f\u7528\u548c\u7406\u89e3\uff0c\u4f46\u662f\u6548\u7387\u592a\u4f4e\u3002\u56e0\u6b64\u4eceOpenGL3.2\u5f00\u59cb\uff0c\u89c4\u8303\u6587\u6863\u5f00\u59cb\u5e9f\u5f03\u7acb\u5373\u6e32\u67d3\u6a21\u5f0f\uff0c\u5e76\u9f13\u52b1\u5f00\u53d1\u8005\u5728OpenGL\u7684 \u6838\u5fc3\u6a21\u5f0f (Core-profile)\u4e0b\u8fdb\u884c\u5f00\u53d1\uff0c\u8fd9\u4e2a\u5206\u652f\u7684\u89c4\u8303\u5b8c\u5168\u79fb\u9664\u4e86\u65e7\u7684\u7279\u6027\u3002 \u5f53\u4f7f\u7528OpenGL\u7684\u6838\u5fc3\u6a21\u5f0f\u65f6\uff0cOpenGL\u8feb\u4f7f\u6211\u4eec\u4f7f\u7528\u73b0\u4ee3\u7684\u51fd\u6570\u3002\u5f53\u6211\u4eec\u8bd5\u56fe\u4f7f\u7528\u4e00\u4e2a\u5df2\u5e9f\u5f03\u7684\u51fd\u6570\u65f6\uff0cOpenGL\u4f1a\u629b\u51fa\u4e00\u4e2a\u9519\u8bef\u5e76\u7ec8\u6b62\u7ed8\u56fe\u3002\u73b0\u4ee3\u51fd\u6570\u7684\u4f18\u52bf\u662f\u66f4\u9ad8\u7684\u7075\u6d3b\u6027\u548c\u6548\u7387\uff0c\u7136\u800c\u4e5f\u66f4\u96be\u4e8e\u5b66\u4e60\u3002\u7acb\u5373\u6e32\u67d3\u6a21\u5f0f\u4eceOpenGL \u5b9e\u9645 \u8fd0\u4f5c\u4e2d\u62bd\u8c61\u6389\u4e86\u5f88\u591a\u7ec6\u8282\uff0c\u56e0\u6b64\u5b83\u5728\u6613\u4e8e\u5b66\u4e60\u7684\u540c\u65f6\uff0c\u4e5f\u5f88\u96be\u8ba9\u4eba\u53bb\u628a\u63e1OpenGL\u5177\u4f53\u662f\u5982\u4f55\u8fd0\u4f5c\u7684\u3002\u73b0\u4ee3\u51fd\u6570\u8981\u6c42\u4f7f\u7528\u8005\u771f\u6b63\u7406\u89e3OpenGL\u548c\u56fe\u5f62\u7f16\u7a0b\uff0c\u5b83\u6709\u4e00\u4e9b\u96be\u5ea6\uff0c\u7136\u800c\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u7075\u6d3b\u6027\uff0c\u66f4\u9ad8\u7684\u6548\u7387\uff0c\u66f4\u91cd\u8981\u7684\u662f\u53ef\u4ee5\u66f4\u6df1\u5165\u7684\u7406\u89e3\u56fe\u5f62\u7f16\u7a0b\u3002 \u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u7684\u6559\u7a0b\u9762\u5411OpenGL3.3\u7684\u6838\u5fc3\u6a21\u5f0f\u3002\u867d\u7136\u4e0a\u624b\u66f4\u56f0\u96be\uff0c\u4f46\u8fd9\u4efd\u52aa\u529b\u662f\u503c\u5f97\u7684\u3002 \u73b0\u4eca\uff0c\u66f4\u9ad8\u7248\u672c\u7684OpenGL\u5df2\u7ecf\u53d1\u5e03\uff08\u5199\u4f5c\u65f6\u6700\u65b0\u7248\u672c\u4e3a4.5\uff09\uff0c\u4f60\u53ef\u80fd\u4f1a\u95ee\uff1a\u65e2\u7136OpenGL 4.5 \u90fd\u51fa\u6765\u4e86\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u8fd8\u8981\u5b66\u4e60OpenGL 3.3\uff1f\u7b54\u6848\u5f88\u7b80\u5355\uff0c\u6240\u6709OpenGL\u7684\u66f4\u9ad8\u7684\u7248\u672c\u90fd\u662f\u57283.3\u7684\u57fa\u7840\u4e0a\uff0c\u5f15\u5165\u4e86\u989d\u5916\u7684\u529f\u80fd\uff0c\u5e76\u6ca1\u6709\u6539\u52a8\u6838\u5fc3\u67b6\u6784\u3002\u65b0\u7248\u672c\u53ea\u662f\u5f15\u5165\u4e86\u4e00\u4e9b\u66f4\u6709\u6548\u7387\u6216\u66f4\u6709\u7528\u7684\u65b9\u5f0f\u53bb\u5b8c\u6210\u540c\u6837\u7684\u529f\u80fd\u3002\u56e0\u6b64\uff0c\u6240\u6709\u7684\u6982\u5ff5\u548c\u6280\u672f\u5728\u73b0\u4ee3OpenGL\u7248\u672c\u91cc\u90fd\u4fdd\u6301\u4e00\u81f4\u3002\u5f53\u4f60\u7684\u7ecf\u9a8c\u8db3\u591f\uff0c\u4f60\u53ef\u4ee5\u8f7b\u677e\u4f7f\u7528\u6765\u81ea\u66f4\u9ad8\u7248\u672cOpenGL\u7684\u65b0\u7279\u6027\u3002 Attention \u5f53\u4f7f\u7528\u65b0\u7248\u672c\u7684OpenGL\u7279\u6027\u65f6\uff0c\u53ea\u6709\u65b0\u4e00\u4ee3\u7684\u663e\u5361\u80fd\u591f\u652f\u6301\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u5927\u591a\u6570\u5f00\u53d1\u8005\u57fa\u4e8e\u8f83\u4f4e\u7248\u672c\u7684OpenGL\u7f16\u5199\u7a0b\u5e8f\uff0c\u5e76\u53ea\u63d0\u4f9b\u9009\u9879\u542f\u7528\u65b0\u7248\u672c\u7684\u7279\u6027\u3002 \u5728\u6709\u4e9b\u6559\u7a0b\u91cc\u4f60\u4f1a\u770b\u89c1\u66f4\u73b0\u4ee3\u7684\u7279\u6027\uff0c\u5b83\u4eec\u540c\u6837\u4f1a\u4ee5\u8fd9\u79cd\u7ea2\u8272\u6ce8\u91ca\u65b9\u5f0f\u6807\u660e\u3002","title":"\u6838\u5fc3\u6a21\u5f0f\u4e0e\u7acb\u5373\u6e32\u67d3\u6a21\u5f0f"},{"location":"01%20Getting%20started/01%20OpenGL/#_2","text":"OpenGL\u7684\u4e00\u5927\u7279\u6027\u5c31\u662f\u5bf9\u6269\u5c55(Extension)\u7684\u652f\u6301\uff0c\u5f53\u4e00\u4e2a\u663e\u5361\u516c\u53f8\u63d0\u51fa\u4e00\u4e2a\u65b0\u7279\u6027\u6216\u8005\u6e32\u67d3\u4e0a\u7684\u5927\u4f18\u5316\uff0c\u901a\u5e38\u4f1a\u4ee5 \u6269\u5c55 \u7684\u65b9\u5f0f\u5728\u9a71\u52a8\u4e2d\u5b9e\u73b0\u3002\u5982\u679c\u4e00\u4e2a\u7a0b\u5e8f\u5728\u652f\u6301\u8fd9\u4e2a\u6269\u5c55\u7684\u663e\u5361\u4e0a\u8fd0\u884c\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u6269\u5c55\u63d0\u4f9b\u7684\u4e00\u4e9b\u66f4\u5148\u8fdb\u66f4\u6709\u6548\u7684\u56fe\u5f62\u529f\u80fd\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5f00\u53d1\u8005\u4e0d\u5fc5\u7b49\u5f85\u4e00\u4e2a\u65b0\u7684OpenGL\u89c4\u8303\u9762\u4e16\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u65b0\u7684\u6e32\u67d3\u7279\u6027\u4e86\uff0c\u53ea\u9700\u8981\u7b80\u5355\u5730\u68c0\u67e5\u4e00\u4e0b\u663e\u5361\u662f\u5426\u652f\u6301\u6b64\u6269\u5c55\u3002\u901a\u5e38\uff0c\u5f53\u4e00\u4e2a\u6269\u5c55\u975e\u5e38\u6d41\u884c\u6216\u8005\u975e\u5e38\u6709\u7528\u7684\u65f6\u5019\uff0c\u5b83\u5c06\u6700\u7ec8\u6210\u4e3a\u672a\u6765\u7684OpenGL\u89c4\u8303\u7684\u4e00\u90e8\u5206\u3002 \u4f7f\u7528\u6269\u5c55\u7684\u4ee3\u7801\u5927\u591a\u770b\u4e0a\u53bb\u5982\u4e0b\uff1a if(GL_ARB_extension_name) { // \u4f7f\u7528\u786c\u4ef6\u652f\u6301\u7684\u5168\u65b0\u7684\u73b0\u4ee3\u7279\u6027 } else { // \u4e0d\u652f\u6301\u6b64\u6269\u5c55: \u7528\u65e7\u7684\u65b9\u5f0f\u53bb\u505a } \u4f7f\u7528OpenGL3.3\u65f6\uff0c\u6211\u4eec\u5f88\u5c11\u9700\u8981\u4f7f\u7528\u6269\u5c55\u6765\u5b8c\u6210\u5927\u591a\u6570\u529f\u80fd\uff0c\u5f53\u9700\u8981\u7684\u65f6\u5019\uff0c\u672c\u6559\u7a0b\u5c06\u63d0\u4f9b\u9002\u5f53\u7684\u6307\u793a\u3002","title":"\u6269\u5c55"},{"location":"01%20Getting%20started/01%20OpenGL/#_3","text":"OpenGL\u81ea\u8eab\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u72b6\u6001\u673a(State Machine)\uff1a\u4e00\u7cfb\u5217\u7684\u53d8\u91cf\u63cf\u8ff0OpenGL\u6b64\u523b\u5e94\u5f53\u5982\u4f55\u8fd0\u884c\u3002OpenGL\u7684\u72b6\u6001\u901a\u5e38\u88ab\u79f0\u4e3aOpenGL \u4e0a\u4e0b\u6587 (Context)\u3002\u6211\u4eec\u901a\u5e38\u4f7f\u7528\u5982\u4e0b\u9014\u5f84\u53bb\u66f4\u6539OpenGL\u72b6\u6001\uff1a\u8bbe\u7f6e\u9009\u9879\uff0c\u64cd\u4f5c\u7f13\u51b2\u3002\u6700\u540e\uff0c\u6211\u4eec\u4f7f\u7528\u5f53\u524dOpenGL\u4e0a\u4e0b\u6587\u6765\u6e32\u67d3\u3002 \u5047\u8bbe\u5f53\u6211\u4eec\u60f3\u544a\u8bc9OpenGL\u53bb\u753b\u7ebf\u6bb5\u800c\u4e0d\u662f\u4e09\u89d2\u5f62\u7684\u65f6\u5019\uff0c\u6211\u4eec\u901a\u8fc7\u6539\u53d8\u4e00\u4e9b\u4e0a\u4e0b\u6587\u53d8\u91cf\u6765\u6539\u53d8OpenGL\u72b6\u6001\uff0c\u4ece\u800c\u544a\u8bc9OpenGL\u5982\u4f55\u53bb\u7ed8\u56fe\u3002\u4e00\u65e6\u6211\u4eec\u6539\u53d8\u4e86OpenGL\u7684\u72b6\u6001\u4e3a\u7ed8\u5236\u7ebf\u6bb5\uff0c\u4e0b\u4e00\u4e2a\u7ed8\u5236\u547d\u4ee4\u5c31\u4f1a\u753b\u51fa\u7ebf\u6bb5\u800c\u4e0d\u662f\u4e09\u89d2\u5f62\u3002 \u5f53\u4f7f\u7528OpenGL\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u9047\u5230\u4e00\u4e9b \u72b6\u6001\u8bbe\u7f6e \u51fd\u6570(State-changing Function)\uff0c\u8fd9\u7c7b\u51fd\u6570\u5c06\u4f1a\u6539\u53d8\u4e0a\u4e0b\u6587\u3002\u4ee5\u53ca \u72b6\u6001\u4f7f\u7528 \u51fd\u6570(State-using Function)\uff0c\u8fd9\u7c7b\u51fd\u6570\u4f1a\u6839\u636e\u5f53\u524dOpenGL\u7684\u72b6\u6001\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c\u3002\u53ea\u8981\u4f60\u8bb0\u4f4fOpenGL\u672c\u8d28\u4e0a\u662f\u4e2a\u5927\u72b6\u6001\u673a\uff0c\u5c31\u80fd\u66f4\u5bb9\u6613\u7406\u89e3\u5b83\u7684\u5927\u90e8\u5206\u7279\u6027\u3002","title":"\u72b6\u6001\u673a"},{"location":"01%20Getting%20started/01%20OpenGL/#_4","text":"OpenGL\u5e93\u662f\u7528C\u8bed\u8a00\u5199\u7684\uff0c\u540c\u65f6\u4e5f\u652f\u6301\u591a\u79cd\u8bed\u8a00\u7684\u6d3e\u751f\uff0c\u4f46\u5176\u5185\u6838\u4ecd\u662f\u4e00\u4e2aC\u5e93\u3002\u7531\u4e8eC\u7684\u4e00\u4e9b\u8bed\u8a00\u7ed3\u6784\u4e0d\u6613\u88ab\u7ffb\u8bd1\u5230\u5176\u5b83\u7684\u9ad8\u7ea7\u8bed\u8a00\uff0c\u56e0\u6b64OpenGL\u5f00\u53d1\u7684\u65f6\u5019\u5f15\u5165\u4e86\u4e00\u4e9b\u62bd\u8c61\u5c42\u3002\u201c\u5bf9\u8c61(Object)\u201d\u5c31\u662f\u5176\u4e2d\u4e00\u4e2a\u3002 \u5728OpenGL\u4e2d\u4e00\u4e2a \u5bf9\u8c61 \u662f\u6307\u4e00\u4e9b\u9009\u9879\u7684\u96c6\u5408\uff0c\u5b83\u4ee3\u8868OpenGL\u72b6\u6001\u7684\u4e00\u4e2a\u5b50\u96c6\u3002\u6bd4\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u5bf9\u8c61\u6765\u4ee3\u8868\u7ed8\u56fe\u7a97\u53e3\u7684\u8bbe\u7f6e\uff0c\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u8bbe\u7f6e\u5b83\u7684\u5927\u5c0f\u3001\u652f\u6301\u7684\u989c\u8272\u4f4d\u6570\u7b49\u7b49\u3002\u53ef\u4ee5\u628a\u5bf9\u8c61\u770b\u505a\u4e00\u4e2aC\u98ce\u683c\u7684\u7ed3\u6784\u4f53(Struct)\uff1a struct object_name { float option1; int option2; char[] name; }; \u8bd1\u6ce8 \u5728\u66f4\u65b0\u524d\u7684\u6559\u7a0b\u4e2d\u4e00\u76f4\u4f7f\u7528\u7684\u90fd\u662fOpenGL\u7684\u57fa\u672c\u7c7b\u578b\uff0c\u4f46\u7531\u4e8e\u4f5c\u8005\u89c9\u5f97\u5728\u672c\u6559\u7a0b\u7cfb\u5217\u4e2d\u5e76\u6ca1\u6709\u4e00\u4e2a\u5fc5\u987b\u4f7f\u7528\u5b83\u4eec\u7684\u539f\u56e0\uff0c\u6240\u6709\u7684\u7c7b\u578b\u90fd\u6539\u4e3a\u4e86\u81ea\u5e26\u7c7b\u578b\u3002\u4f46\u662f\u8bf7\u4ecd\u7136\u8bb0\u4f4f\uff0c\u4f7f\u7528OpenGL\u7684\u7c7b\u578b\u7684\u597d\u5904\u662f\u4fdd\u8bc1\u4e86\u5728\u5404\u5e73\u53f0\u4e2d\u6bcf\u4e00\u79cd\u7c7b\u578b\u7684\u5927\u5c0f\u90fd\u662f\u7edf\u4e00\u7684\u3002\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u5b83\u7684\u5b9a\u5bbd\u7c7b\u578b(Fixed-width Type)\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002 \u5f53\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u901a\u5e38\u770b\u8d77\u6765\u50cf\u5982\u4e0b\u4e00\u6837\uff08\u628aOpenGL\u4e0a\u4e0b\u6587\u770b\u4f5c\u4e00\u4e2a\u5927\u7684\u7ed3\u6784\u4f53\uff09\uff1a // OpenGL\u7684\u72b6\u6001 struct OpenGL_Context { ... object* object_Window_Target; ... }; // \u521b\u5efa\u5bf9\u8c61 unsigned int objectId = 0; glGenObject(1, &objectId); // \u7ed1\u5b9a\u5bf9\u8c61\u81f3\u4e0a\u4e0b\u6587 glBindObject(GL_WINDOW_TARGET, objectId); // \u8bbe\u7f6e\u5f53\u524d\u7ed1\u5b9a\u5230 GL_WINDOW_TARGET \u7684\u5bf9\u8c61\u7684\u4e00\u4e9b\u9009\u9879 glSetObjectOption(GL_WINDOW_TARGET, GL_OPTION_WINDOW_WIDTH, 800); glSetObjectOption(GL_WINDOW_TARGET, GL_OPTION_WINDOW_HEIGHT, 600); // \u5c06\u4e0a\u4e0b\u6587\u5bf9\u8c61\u8bbe\u56de\u9ed8\u8ba4 glBindObject(GL_WINDOW_TARGET, 0); \u8fd9\u4e00\u5c0f\u6bb5\u4ee3\u7801\u5c55\u73b0\u4e86\u4f60\u4ee5\u540e\u4f7f\u7528OpenGL\u65f6\u5e38\u89c1\u7684\u5de5\u4f5c\u6d41\u3002\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u7136\u540e\u7528\u4e00\u4e2aid\u4fdd\u5b58\u5b83\u7684\u5f15\u7528\uff08\u5b9e\u9645\u6570\u636e\u88ab\u50a8\u5b58\u5728\u540e\u53f0\uff09\u3002\u7136\u540e\u6211\u4eec\u5c06\u5bf9\u8c61\u7ed1\u5b9a\u81f3\u4e0a\u4e0b\u6587\u7684\u76ee\u6807\u4f4d\u7f6e\uff08\u4f8b\u5b50\u4e2d\u7a97\u53e3\u5bf9\u8c61\u76ee\u6807\u7684\u4f4d\u7f6e\u88ab\u5b9a\u4e49\u6210 GL_WINDOW_TARGET \uff09\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u8bbe\u7f6e\u7a97\u53e3\u7684\u9009\u9879\u3002\u6700\u540e\u6211\u4eec\u5c06\u76ee\u6807\u4f4d\u7f6e\u7684\u5bf9\u8c61id\u8bbe\u56de0\uff0c\u89e3\u7ed1\u8fd9\u4e2a\u5bf9\u8c61\u3002\u8bbe\u7f6e\u7684\u9009\u9879\u5c06\u88ab\u4fdd\u5b58\u5728 objectId \u6240\u5f15\u7528\u7684\u5bf9\u8c61\u4e2d\uff0c\u4e00\u65e6\u6211\u4eec\u91cd\u65b0\u7ed1\u5b9a\u8fd9\u4e2a\u5bf9\u8c61\u5230 GL_WINDOW_TARGET \u4f4d\u7f6e\uff0c\u8fd9\u4e9b\u9009\u9879\u5c31\u4f1a\u91cd\u65b0\u751f\u6548\u3002 Attention \u76ee\u524d\u63d0\u4f9b\u7684\u793a\u4f8b\u4ee3\u7801\u53ea\u662fOpenGL\u5982\u4f55\u64cd\u4f5c\u7684\u4e00\u4e2a\u5927\u81f4\u63cf\u8ff0\uff0c\u901a\u8fc7\u9605\u8bfb\u4ee5\u540e\u7684\u6559\u7a0b\u4f60\u4f1a\u9047\u5230\u5f88\u591a\u5b9e\u9645\u7684\u4f8b\u5b50\u3002 \u4f7f\u7528\u5bf9\u8c61\u7684\u4e00\u4e2a\u597d\u5904\u662f\u5728\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u4e0d\u6b62\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5e76\u8bbe\u7f6e\u5b83\u4eec\u7684\u9009\u9879\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u53ef\u4ee5\u662f\u4e0d\u540c\u7684\u8bbe\u7f6e\u3002\u5728\u6211\u4eec\u6267\u884c\u4e00\u4e2a\u4f7f\u7528OpenGL\u72b6\u6001\u7684\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u7ed1\u5b9a\u542b\u6709\u9700\u8981\u7684\u8bbe\u7f6e\u7684\u5bf9\u8c61\u5373\u53ef\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u6709\u4e00\u4e9b\u4f5c\u4e3a3D\u6a21\u578b\u6570\u636e\uff08\u4e00\u680b\u623f\u5b50\u6216\u4e00\u4e2a\u4eba\u7269\uff09\u7684\u5bb9\u5668\u5bf9\u8c61\uff0c\u5728\u6211\u4eec\u60f3\u7ed8\u5236\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u6a21\u578b\u7684\u65f6\u5019\uff0c\u53ea\u9700\u7ed1\u5b9a\u4e00\u4e2a\u5305\u542b\u5bf9\u5e94\u6a21\u578b\u6570\u636e\u7684\u5bf9\u8c61\u5c31\u53ef\u4ee5\u4e86\uff08\u5f53\u7136\uff0c\u6211\u4eec\u9700\u8981\u5148\u521b\u5efa\u5e76\u8bbe\u7f6e\u5bf9\u8c61\u7684\u9009\u9879\uff09\u3002\u62e5\u6709\u6570\u4e2a\u8fd9\u6837\u7684\u5bf9\u8c61\u5141\u8bb8\u6211\u4eec\u6307\u5b9a\u591a\u4e2a\u6a21\u578b\uff0c\u5728\u60f3\u753b\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u5c06\u5bf9\u5e94\u7684\u5bf9\u8c61\u7ed1\u5b9a\u4e0a\u53bb\uff0c\u4fbf\u4e0d\u9700\u8981\u518d\u91cd\u590d\u8bbe\u7f6e\u9009\u9879\u4e86\u3002","title":"\u5bf9\u8c61"},{"location":"01%20Getting%20started/01%20OpenGL/#_5","text":"\u4f60\u73b0\u5728\u5df2\u7ecf\u77e5\u9053\u4e00\u4e9bOpenGL\u7684\u76f8\u5173\u77e5\u8bc6\u4e86\uff0cOpenGL\u89c4\u8303\u548c\u5e93\uff0cOpenGL\u5e55\u540e\u5927\u81f4\u7684\u8fd0\u4f5c\u6d41\u7a0b\uff0c\u4ee5\u53caOpenGL\u4f7f\u7528\u7684\u4e00\u4e9b\u4f20\u7edf\u6280\u5de7\u3002\u4e0d\u8981\u62c5\u5fc3\u4f60\u8fd8\u6ca1\u6709\u5b8c\u5168\u6d88\u5316\u5b83\u4eec\uff0c\u540e\u9762\u7684\u6559\u7a0b\u6211\u4eec\u4f1a\u4ed4\u7ec6\u5730\u8bb2\u89e3\u6bcf\u4e00\u4e2a\u6b65\u9aa4\uff0c\u4f60\u4f1a\u901a\u8fc7\u8db3\u591f\u7684\u4f8b\u5b50\u6765\u771f\u6b63\u638c\u63e1OpenGL\u3002\u5982\u679c\u4f60\u5df2\u7ecf\u505a\u597d\u4e86\u5f00\u59cb\u4e0b\u4e00\u6b65\u7684\u51c6\u5907\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 \u8fd9\u91cc \u5f00\u59cb\u521b\u5efaOpenGL\u4e0a\u4e0b\u6587\u4ee5\u53ca\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u7a97\u53e3\u4e86\u3002","title":"\u8ba9\u6211\u4eec\u5f00\u59cb\u5427"},{"location":"01%20Getting%20started/01%20OpenGL/#_6","text":"opengl.org \uff1aOpenGL\u5b98\u65b9\u7f51\u7ad9\u3002 OpenGL registry \uff1a\u5305\u542bOpenGL\u5404\u7248\u672c\u7684\u89c4\u8303\u548c\u6269\u5c55\u3002","title":"\u9644\u52a0\u8d44\u6e90"},{"location":"01%20Getting%20started/02%20Creating%20a%20window/","text":"\u521b\u5efa\u7a97\u53e3 \u539f\u6587 Creating a window \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 gjy_1992, Krasjet \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u8bd1\u6ce8 \u6ce8\u610f\uff0c\u7531\u4e8e\u4f5c\u8005\u5bf9\u6559\u7a0b\u505a\u51fa\u4e86\u66f4\u65b0\uff0c\u4e4b\u524d\u672c\u8282\u4f7f\u7528\u7684\u662fGLEW\u5e93\uff0c\u4f46\u73b0\u5728\u6539\u4e3a\u4e86\u4f7f\u7528GLAD\u5e93\uff0c\u5173\u4e8eGLEW\u914d\u7f6e\u7684\u90e8\u5206\u73b0\u5728\u5df2\u7ecf\u88ab\u4fee\u6539\uff0c\u4f46\u6211\u4ecd\u51b3\u5b9a\u5c06\u8fd9\u90e8\u5206\u6559\u7a0b\u4fdd\u7559\u8d77\u6765\uff0c\u653e\u5230\u4e00\u4e2a\u5386\u53f2\u5b58\u6863\u4e2d\uff0c\u5982\u679c\u6709\u9700\u8981\u7684\u8bdd\u53ef\u4ee5\u5230 \u8fd9\u91cc \u6765\u67e5\u770b\u3002 \u5728\u6211\u4eec\u753b\u51fa\u51fa\u8272\u7684\u6548\u679c\u4e4b\u524d\uff0c\u9996\u5148\u8981\u505a\u7684\u5c31\u662f\u521b\u5efa\u4e00\u4e2aOpenGL\u4e0a\u4e0b\u6587(Context)\u548c\u4e00\u4e2a\u7528\u4e8e\u663e\u793a\u7684\u7a97\u53e3\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u5728\u6bcf\u4e2a\u7cfb\u7edf\u4e0a\u90fd\u662f\u4e0d\u4e00\u6837\u7684\uff0cOpenGL\u6709\u610f\u5c06\u8fd9\u4e9b\u64cd\u4f5c\u62bd\u8c61(Abstract)\u51fa\u53bb\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u4e0d\u5f97\u4e0d\u81ea\u5df1\u5904\u7406\u521b\u5efa\u7a97\u53e3\uff0c\u5b9a\u4e49OpenGL\u4e0a\u4e0b\u6587\u4ee5\u53ca\u5904\u7406\u7528\u6237\u8f93\u5165\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u6709\u4e00\u4e9b\u5e93\u5df2\u7ecf\u63d0\u4f9b\u4e86\u6211\u4eec\u6240\u9700\u7684\u529f\u80fd\uff0c\u5176\u4e2d\u4e00\u90e8\u5206\u662f\u7279\u522b\u9488\u5bf9OpenGL\u7684\u3002\u8fd9\u4e9b\u5e93\u8282\u7701\u4e86\u6211\u4eec\u4e66\u5199\u64cd\u4f5c\u7cfb\u7edf\u76f8\u5173\u4ee3\u7801\u7684\u65f6\u95f4\uff0c\u63d0\u4f9b\u7ed9\u6211\u4eec\u4e00\u4e2a\u7a97\u53e3\u548c\u4e00\u4e2aOpenGL\u4e0a\u4e0b\u6587\u7528\u6765\u6e32\u67d3\u3002\u6700\u6d41\u884c\u7684\u51e0\u4e2a\u5e93\u6709GLUT\uff0cSDL\uff0cSFML\u548cGLFW\u3002\u5728\u6559\u7a0b\u91cc\u6211\u4eec\u5c06\u4f7f\u7528 GLFW \u3002\u4f60\u53ef\u4ee5\u968f\u610f\u9009\u7528\u5176\u4ed6\u7c7b\u4f3c\u7684\u5e93\uff0c\u5927\u591a\u6570\u5e93\u7684\u914d\u7f6e\u65b9\u6cd5\u548cGLFW\u5dee\u4e0d\u591a\u3002 GLFW GLFW\u662f\u4e00\u4e2a\u4e13\u95e8\u9488\u5bf9OpenGL\u7684C\u8bed\u8a00\u5e93\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6e32\u67d3\u7269\u4f53\u6240\u9700\u7684\u6700\u4f4e\u9650\u5ea6\u7684\u63a5\u53e3\u3002\u5b83\u5141\u8bb8\u7528\u6237\u521b\u5efaOpenGL\u4e0a\u4e0b\u6587\u3001\u5b9a\u4e49\u7a97\u53e3\u53c2\u6570\u4ee5\u53ca\u5904\u7406\u7528\u6237\u8f93\u5165\uff0c\u5bf9\u6211\u4eec\u6765\u8bf4\u8fd9\u5c31\u591f\u4e86\u3002 \u672c\u8282\u548c\u4e0b\u4e00\u8282\u7684\u76ee\u6807\u662f\u628aGLFW\u73af\u5883\u914d\u597d\u80fd\u4e14\u80fd\u591f\u8dd1\u8d77\u6765\uff0c\u5e76\u4fdd\u8bc1\u5b83\u6b63\u786e\u521b\u5efa\u4e86OpenGL\u4e0a\u4e0b\u6587\u5e76\u663e\u793a\u51fa\u4e00\u4e2a\u7b80\u5355\u7684\u7a97\u53e3\u6765\u8ba9\u6211\u4eec\u968f\u610f\u4f7f\u7528\u3002\u8fd9\u7bc7\u6559\u7a0b\u4f1a\u4e00\u6b65\u6b65\u6559\u4f60\u5982\u4f55\u83b7\u53d6\u3001\u7f16\u8bd1\u3001\u94fe\u63a5GLFW\u5e93\u3002\u6211\u4eec\u4f7f\u7528\u7684\u662fMicrosoft Visual Studio 2019 IDE\uff08\u64cd\u4f5c\u8fc7\u7a0b\u5728\u66f4\u65b0\u7684Visual Studio\u90fd\u662f\u76f8\u540c\u7684\uff09\u3002\u5982\u679c\u4f60\u7528\u7684\u4e0d\u662fVisual Studio\uff08\u6216\u8005\u7528\u7684\u662f\u5b83\u7684\u65e7\u7248\u672c\uff09\u8bf7\u4e0d\u8981\u62c5\u5fc3\uff0c\u5927\u591a\u6570IDE\u4e0a\u7684\u64cd\u4f5c\u90fd\u662f\u7c7b\u4f3c\u7684\u3002 \u6784\u5efaGLFW GLFW\u53ef\u4ee5\u4ece\u5b83\u5b98\u65b9\u7f51\u7ad9\u7684 \u4e0b\u8f7d\u9875 \u4e0a\u83b7\u53d6\u3002GLFW\u5df2\u63d0\u4f9b\u4e3aVisual Studio\uff082012\u52302019\u90fd\u6709\uff09\u9884\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u7248\u672c\u548c\u76f8\u5e94\u7684\u5934\u6587\u4ef6\uff0c\u4f46\u662f\u4e3a\u4e86\u5b8c\u6574\u6027\u6211\u4eec\u5c06\u4ece\u7f16\u8bd1\u6e90\u4ee3\u7801\u5f00\u59cb\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e0b\u8f7d \u6e90\u4ee3\u7801\u5305 \u3002 Attention \u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u91c7\u752864\u4f4d\u6784\u5efa\u6240\u6709\u7684\u5e93\u3002\u56e0\u6b64\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u9884\u7f16\u8bd1\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u8bf7\u786e\u4fdd\u4f60\u4e0b\u8f7d\u7684\u662f64\u4f4d\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 \u4e0b\u8f7d\u6e90\u7801\u5305\u4e4b\u540e\uff0c\u5c06\u5176\u89e3\u538b\u5e76\u6253\u5f00\u3002\u6211\u4eec\u53ea\u9700\u8981\u91cc\u9762\u7684\u8fd9\u4e9b\u5185\u5bb9\uff1a \u7f16\u8bd1\u751f\u6210\u7684\u5e93 include \u6587\u4ef6\u5939 \u4ece\u6e90\u4ee3\u7801\u7f16\u8bd1\u5e93\u53ef\u4ee5\u4fdd\u8bc1\u751f\u6210\u7684\u5e93\u5b8c\u5168\u9002\u5408\u4f60\u7684\u64cd\u4f5c\u7cfb\u7edf\u548cCPU\u7684\uff0c\u800c\u9884\u7f16\u8bd1\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5219\u5e76\u975e\u603b\u662f\u63d0\u4f9b\uff08\u6709\u65f6\u5019\uff0c\u5373\u4fbf\u63d0\u4f9b\u4e86\u9884\u7f16\u8bd1\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4e5f\u53ef\u80fd\u4e0d\u9002\u7528\u4e8e\u60a8\u7684\u7cfb\u7edf\uff09\u3002\u5f00\u653e\u6e90\u4ee3\u7801\u6240\u4ea7\u751f\u95ee\u9898\u5728\u4e8e\uff1a\u5e76\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u7528\u76f8\u540c\u7684IDE\u6216\u8005\u6784\u5efa\u7cfb\u7edf\u6765\u641e\u5f00\u53d1\uff0c\u56e0\u800c\u63d0\u4f9b\u7684\u9879\u76ee/\u89e3\u51b3\u65b9\u6848\u6587\u4ef6\u53ef\u80fd\u548c\u4e00\u4e9b\u4eba\u7684IDE\u4e0d\u517c\u5bb9\u3002\u6240\u4ee5\u4eba\u4eec\u5fc5\u987b\u4f7f\u7528\u7ed9\u5b9a\u7684.c/.cpp\u548c.h/.hpp\u6587\u4ef6\u6765\u81ea\u5df1\u5efa\u7acb\u9879\u76ee/\u89e3\u51b3\u65b9\u6848\uff0c\u8fd9\u662f\u4e00\u9879\u5f88\u67af\u71e5\u7684\u5de5\u4f5c\u3002\u4f46\u56e0\u6b64\u4e5f\u8bde\u751f\u4e86\u4e00\u4e2a\u53eb\u505aCMake\u7684\u5de5\u5177\u3002 CMake CMake\u662f\u4e00\u4e2a\u5de5\u7a0b\u6587\u4ef6\u751f\u6210\u5de5\u5177\u3002\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u9884\u5b9a\u4e49\u597d\u7684CMake\u811a\u672c\uff0c\u6839\u636e\u81ea\u5df1\u7684\u9009\u62e9\uff08\u50cf\u662fVisual Studio, Code::Blocks, Eclipse\uff09\u751f\u6210\u4e0d\u540cIDE\u7684\u5de5\u7a0b\u6587\u4ef6\u3002\u8fd9\u5141\u8bb8\u6211\u4eec\u4eceGLFW\u6e90\u7801\u521b\u5efa\u4e00\u4e2aVisual Studio 2019\u5de5\u7a0b\u6587\u4ef6\uff0c\u4e4b\u540e\u8fdb\u884c\u7f16\u8bd1\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4ece \u8fd9\u91cc \u4e0b\u8f7d\u5b89\u88c5CMake\u3002 \u5f53CMake\u5b89\u88c5\u6210\u529f\u540e\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u4ece\u547d\u4ee4\u884c\u6216\u8005GUI\u542f\u52a8CMake\uff0c\u7531\u4e8e\u6211\u4eec\u4e0d\u60f3\u8ba9\u4e8b\u60c5\u53d8\u5f97\u592a\u8fc7\u590d\u6742\uff0c\u6211\u4eec\u9009\u62e9\u7528GUI\u3002CMake\u9700\u8981\u4e00\u4e2a\u6e90\u4ee3\u7801\u76ee\u5f55\u548c\u4e00\u4e2a\u5b58\u653e\u7f16\u8bd1\u7ed3\u679c\u7684\u76ee\u6807\u6587\u4ef6\u76ee\u5f55\u3002\u6e90\u4ee3\u7801\u76ee\u5f55\u6211\u4eec\u9009\u62e9GLFW\u7684\u6e90\u4ee3\u7801\u7684\u6839\u76ee\u5f55\uff0c\u7136\u540e\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a build \u6587\u4ef6\u5939\uff0c\u9009\u4e2d\u4f5c\u4e3a\u76ee\u6807\u76ee\u5f55\u3002 \u5728\u8bbe\u7f6e\u5b8c\u6e90\u4ee3\u7801\u76ee\u5f55\u548c\u76ee\u6807\u76ee\u5f55\u4e4b\u540e\uff0c\u70b9\u51fb Configure(\u8bbe\u7f6e) \u6309\u94ae\uff0c\u8ba9CMake\u8bfb\u53d6\u8bbe\u7f6e\u548c\u6e90\u4ee3\u7801\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u9700\u8981\u9009\u62e9\u5de5\u7a0b\u7684\u751f\u6210\u5668\uff0c\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u7684\u662fVisual Studio 2019\uff0c\u6211\u4eec\u9009\u62e9 Visual Studio 16 \u9009\u9879\uff08\u56e0\u4e3aVisual Studio 2019\u7684\u5185\u90e8\u7248\u672c\u53f7\u662f16\uff09\u3002CMake\u4f1a\u663e\u793a\u53ef\u9009\u7684\u7f16\u8bd1\u9009\u9879\u7528\u6765\u914d\u7f6e\u6700\u7ec8\u751f\u6210\u7684\u5e93\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u5e76\u518d\u6b21\u70b9\u51fb Configure(\u8bbe\u7f6e) \u6309\u94ae\u4fdd\u5b58\u8bbe\u7f6e\u3002\u4fdd\u5b58\u4e4b\u540e\uff0c\u70b9\u51fb Generate(\u751f\u6210) \u6309\u94ae\uff0c\u751f\u6210\u7684\u5de5\u7a0b\u6587\u4ef6\u4f1a\u5728\u4f60\u7684 build \u6587\u4ef6\u5939\u4e2d\u3002 \u7f16\u8bd1 \u5728 build \u6587\u4ef6\u5939\u91cc\u53ef\u4ee5\u627e\u5230 GLFW.sln \u6587\u4ef6\uff0c\u7528Visual Studio 2019\u6253\u5f00\u3002\u56e0\u4e3aCMake\u5df2\u7ecf\u914d\u7f6e\u597d\u4e86\u9879\u76ee\uff0c\u5e76\u6309\u7167\u9ed8\u8ba4\u914d\u7f6e\u5c06\u5176\u7f16\u8bd1\u4e3a64\u4f4d\u7684\u5e93\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u70b9\u51fb Build Solution(\u751f\u6210\u89e3\u51b3\u65b9\u6848) \u6309\u94ae\uff0c\u7136\u540e\u5728 build/src/Debug \u6587\u4ef6\u5939\u5185\u5c31\u4f1a\u51fa\u73b0\u6211\u4eec\u7f16\u8bd1\u51fa\u7684\u5e93\u6587\u4ef6 glfw3.lib \u3002 \u5e93\u751f\u6210\u5b8c\u6bd5\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u8ba9IDE\u77e5\u9053\u5e93\u548c\u5934\u6587\u4ef6\u7684\u4f4d\u7f6e\u3002\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a \u627e\u5230IDE\u6216\u8005\u7f16\u8bd1\u5668\u7684 /lib \u548c /include \u6587\u4ef6\u5939\uff0c\u6dfb\u52a0GLFW\u7684 include \u6587\u4ef6\u5939\u91cc\u7684\u6587\u4ef6\u5230IDE\u7684 /include \u6587\u4ef6\u5939\u91cc\u53bb\u3002\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\uff0c\u5c06 glfw3.lib \u6dfb\u52a0\u5230 /lib \u6587\u4ef6\u5939\u91cc\u53bb\u3002\u867d\u7136\u8fd9\u6837\u80fd\u5de5\u4f5c\uff0c\u4f46\u8fd9\u4e0d\u662f\u63a8\u8350\u7684\u65b9\u5f0f\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f1a\u8ba9\u4f60\u5f88\u96be\u53bb\u7ba1\u7406\u5e93\u548cinclude\u6587\u4ef6\uff0c\u800c\u4e14\u91cd\u65b0\u5b89\u88c5IDE\u6216\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8fd9\u4e9b\u6587\u4ef6\u4e22\u5931\u3002 \u63a8\u8350\u7684\u65b9\u5f0f\u662f\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u76ee\u5f55\u5305\u542b\u6240\u6709\u7684\u7b2c\u4e09\u65b9\u5e93\u6587\u4ef6\u548c\u5934\u6587\u4ef6\uff0c\u5e76\u4e14\u5728\u4f60\u7684IDE\u6216\u7f16\u8bd1\u5668\u4e2d\u6307\u5b9a\u8fd9\u4e9b\u6587\u4ef6\u5939\u3002\u6211\u4e2a\u4eba\u4f1a\u4f7f\u7528\u4e00\u4e2a\u5355\u72ec\u7684\u6587\u4ef6\u5939\uff0c\u91cc\u9762\u5305\u542b Libs \u548c Include \u6587\u4ef6\u5939\uff0c\u5728\u8fd9\u91cc\u5b58\u653eOpenGL\u5de5\u7a0b\u7528\u5230\u7684\u6240\u6709\u7b2c\u4e09\u65b9\u5e93\u548c\u5934\u6587\u4ef6\u3002\u8fd9\u6837\u6211\u7684\u6240\u6709\u7b2c\u4e09\u65b9\u5e93\u90fd\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\uff08\u5e76\u4e14\u53ef\u4ee5\u5171\u4eab\u81f3\u591a\u53f0\u7535\u8111\uff09\u3002\u7136\u800c\u8fd9\u8981\u6c42\u4f60\u6bcf\u6b21\u65b0\u5efa\u4e00\u4e2a\u5de5\u7a0b\u65f6\u90fd\u9700\u8981\u544a\u8bc9IDE/\u7f16\u8bd1\u5668\u5728\u54ea\u80fd\u627e\u5230\u8fd9\u4e9b\u76ee\u5f55\u3002 \u5b8c\u6210\u4e0a\u9762\u6b65\u9aa4\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528GLFW\u521b\u5efa\u6211\u4eec\u7684\u7b2c\u4e00\u4e2aOpenGL\u5de5\u7a0b\u4e86\uff01 \u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u5de5\u7a0b \u9996\u5148\uff0c\u6253\u5f00Visual Studio\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u9879\u76ee\u3002\u5982\u679cVS\u63d0\u4f9b\u4e86\u591a\u4e2a\u9009\u9879\uff0c\u9009\u62e9Visual C++\uff0c\u7136\u540e\u9009\u62e9 Empty Project(\u7a7a\u9879\u76ee) \uff08\u522b\u5fd8\u4e86\u7ed9\u4f60\u7684\u9879\u76ee\u8d77\u4e00\u4e2a\u5408\u9002\u7684\u540d\u5b57\uff09\u3002\u7531\u4e8e\u6211\u4eec\u5c06\u572864\u4f4d\u6a21\u5f0f\u4e2d\u6267\u884c\u6240\u6709\u64cd\u4f5c\uff0c\u800c\u65b0\u9879\u76ee\u9ed8\u8ba4\u662f32\u4f4d\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06Debug\u65c1\u8fb9\u9876\u90e8\u7684\u4e0b\u62c9\u5217\u8868\u4ecex86\u66f4\u6539\u4e3ax64\uff1a \u73b0\u5728\u6211\u4eec\u7ec8\u4e8e\u6709\u4e00\u4e2a\u7a7a\u7684\u5de5\u4f5c\u7a7a\u95f4\u4e86\uff0c\u5f00\u59cb\u521b\u5efa\u6211\u4eec\u7b2c\u4e00\u4e2aOpenGL\u7a0b\u5e8f\u5427\uff01 \u94fe\u63a5 \u4e3a\u4e86\u4f7f\u6211\u4eec\u7684\u7a0b\u5e8f\u4f7f\u7528GLFW\uff0c\u6211\u4eec\u9700\u8981\u628aGLFW\u5e93 \u94fe\u63a5 (Link)\u8fdb\u5de5\u7a0b\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5728\u94fe\u63a5\u5668\u7684\u8bbe\u7f6e\u91cc\u6307\u5b9a\u6211\u4eec\u8981\u4f7f\u7528 glfw3.lib \u6765\u5b8c\u6210\uff0c\u4f46\u662f\u7531\u4e8e\u6211\u4eec\u5c06\u7b2c\u4e09\u65b9\u5e93\u653e\u5728\u53e6\u5916\u7684\u76ee\u5f55\u4e2d\uff0c\u6211\u4eec\u7684\u5de5\u7a0b\u8fd8\u4e0d\u77e5\u9053\u5728\u54ea\u5bfb\u627e\u8fd9\u4e2a\u6587\u4ef6\u3002\u4e8e\u662f\u6211\u4eec\u9996\u5148\u9700\u8981\u5c06\u6211\u4eec\u653e\u7b2c\u4e09\u65b9\u5e93\u7684\u76ee\u5f55\u6dfb\u52a0\u8fdb\u8bbe\u7f6e\u3002 \u8981\u6dfb\u52a0\u8fd9\u4e9b\u76ee\u5f55\uff08\u9700\u8981VS\u641c\u7d22\u5e93\u548cinclude\u6587\u4ef6\u7684\u5730\u65b9\uff09\uff0c\u6211\u4eec\u9996\u5148\u8fdb\u5165Project Properties(\u5de5\u7a0b\u5c5e\u6027\uff0c\u5728\u89e3\u51b3\u65b9\u6848\u7a97\u53e3\u91cc\u53f3\u952e\u9879\u76ee)\uff0c\u7136\u540e\u9009\u62e9 VC++ Directories(VC++ \u76ee\u5f55) \u9009\u9879\u5361\uff08\u5982\u4e0b\u56fe\uff09\u3002\u5728\u4e0b\u9762\u7684\u4e24\u680f\u6dfb\u52a0\u76ee\u5f55\uff1a \u8fd9\u91cc\u4f60\u53ef\u4ee5\u628a\u81ea\u5df1\u7684\u76ee\u5f55\u52a0\u8fdb\u53bb\uff0c\u8ba9\u5de5\u7a0b\u77e5\u9053\u5230\u54ea\u53bb\u641c\u7d22\u3002\u4f60\u9700\u8981\u624b\u52a8\u628a\u76ee\u5f55\u52a0\u5728\u540e\u9762\uff0c\u4e5f\u53ef\u4ee5\u70b9\u51fb\u9700\u8981\u7684\u4f4d\u7f6e\u5b57\u7b26\u4e32\uff0c\u9009\u62e9 \u9009\u9879\uff0c\u4e4b\u540e\u4f1a\u51fa\u73b0\u7c7b\u4f3c\u4e0b\u9762\u8fd9\u5e45\u56fe\u7684\u754c\u9762\uff0c\u56fe\u662f\u9009\u62e9 Include Directories(\u5305\u542b\u76ee\u5f55) \u65f6\u7684\u754c\u9762\uff1a \u8fd9\u91cc\u53ef\u4ee5\u6dfb\u52a0\u4efb\u610f\u591a\u4e2a\u76ee\u5f55\uff0cIDE\u4f1a\u4ece\u8fd9\u4e9b\u76ee\u5f55\u91cc\u5bfb\u627e\u5934\u6587\u4ef6\u3002\u6240\u4ee5\u53ea\u8981\u4f60\u5c06GLFW\u7684 Include \u6587\u4ef6\u5939\u52a0\u8fdb\u8def\u5f84\u4e2d\uff0c\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 <GLFW/..> \u6765\u5f15\u7528\u5934\u6587\u4ef6\u3002\u5e93\u6587\u4ef6\u5939\u4e5f\u662f\u4e00\u6837\u7684\u3002 \u73b0\u5728VS\u53ef\u4ee5\u627e\u5230\u6240\u9700\u7684\u6240\u6709\u6587\u4ef6\u4e86\u3002\u6700\u540e\u9700\u8981\u5728 Linker(\u94fe\u63a5\u5668) \u9009\u9879\u5361\u91cc\u7684 Input(\u8f93\u5165) \u9009\u9879\u5361\u91cc\u6dfb\u52a0 glfw3.lib \u8fd9\u4e2a\u6587\u4ef6\uff1a \u8981\u94fe\u63a5\u4e00\u4e2a\u5e93\u6211\u4eec\u5fc5\u987b\u544a\u8bc9\u94fe\u63a5\u5668\u5b83\u7684\u6587\u4ef6\u540d\u3002\u5e93\u540d\u5b57\u662f glfw3.lib \uff0c\u6211\u4eec\u628a\u5b83\u52a0\u5230 Additional Dependencies(\u9644\u52a0\u4f9d\u8d56\u9879) \u5b57\u6bb5\u4e2d(\u624b\u52a8\u6216\u8005\u4f7f\u7528 \u9009\u9879\u90fd\u53ef\u4ee5)\u3002\u8fd9\u6837GLFW\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u4f1a\u88ab\u94fe\u63a5\u8fdb\u6765\u4e86\u3002\u9664\u4e86GLFW\u4e4b\u5916\uff0c\u4f60\u8fd8\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u94fe\u63a5\u6761\u76ee\u94fe\u63a5\u5230OpenGL\u7684\u5e93\uff0c\u4f46\u662f\u8fd9\u4e2a\u5e93\u53ef\u80fd\u56e0\u4e3a\u7cfb\u7edf\u7684\u4e0d\u540c\u800c\u6709\u4e00\u4e9b\u5dee\u522b\u3002 Windows\u4e0a\u7684OpenGL\u5e93 \u5982\u679c\u4f60\u662fWindows\u5e73\u53f0\uff0c opengl32.lib \u5df2\u7ecf\u5305\u542b\u5728Microsoft SDK\u91cc\u4e86\uff0c\u5b83\u5728Visual Studio\u5b89\u88c5\u7684\u65f6\u5019\u5c31\u9ed8\u8ba4\u5b89\u88c5\u4e86\u3002\u7531\u4e8e\u8fd9\u7bc7\u6559\u7a0b\u7528\u7684\u662fVS\u7f16\u8bd1\u5668\uff0c\u5e76\u4e14\u662f\u5728Windows\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u5c06 opengl32.lib \u6dfb\u52a0\u8fdb\u8fde\u63a5\u5668\u8bbe\u7f6e\u91cc\u5c31\u884c\u4e86\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cOpenGL\u5e9364\u4f4d\u7248\u672c\u7684\u6587\u4ef6\u540d\u4ecd\u7136\u662f opengl32.lib \uff08\u548c32\u4f4d\u7248\u672c\u4e00\u6837\uff09\uff0c\u867d\u7136\u5f88\u5947\u602a\u4f46\u786e\u5b9e\u5982\u6b64\u3002 Linux\u4e0a\u7684OpenGL\u5e93 \u5728Linux\u4e0b\u4f60\u9700\u8981\u94fe\u63a5 libGL.so \u5e93\u6587\u4ef6\uff0c\u8fd9\u9700\u8981\u6dfb\u52a0 -lGL \u5230\u4f60\u7684\u94fe\u63a5\u5668\u8bbe\u7f6e\u4e2d\u3002\u5982\u679c\u627e\u4e0d\u5230\u8fd9\u4e2a\u5e93\u4f60\u53ef\u80fd\u9700\u8981\u5b89\u88c5Mesa\uff0cNVidia\u6216AMD\u7684\u5f00\u53d1\u5305\uff0c\u8fd9\u90e8\u5206\u56e0\u5e73\u53f0\u800c\u5f02\uff08\u800c\u4e14\u6211\u4e5f\u4e0d\u719f\u6089Linux\uff09\u5c31\u4e0d\u4ed4\u7ec6\u8bb2\u89e3\u4e86\u3002 \u63a5\u4e0b\u6765\uff0c\u5982\u679c\u4f60\u5df2\u7ecf\u6dfb\u52a0GLFW\u548cOpenGL\u5e93\u5230\u8fde\u63a5\u5668\u8bbe\u7f6e\u4e2d\uff0c\u4f60\u53ef\u4ee5\u7528\u5982\u4e0b\u65b9\u5f0f\u6dfb\u52a0GLFW\u5934\u6587\u4ef6\uff1a #include <GLFW\\glfw3.h> Important \u5bf9\u4e8e\u7528GCC\u7f16\u8bd1\u7684Linux\u7528\u6237\u5efa\u8bae\u4f7f\u7528\u8fd9\u4e2a\u547d\u4ee4\u884c\u9009\u9879 -lglfw3 -lGL -lX11 -lpthread -lXrandr -lXi -ldl \u3002\u6ca1\u6709\u6b63\u786e\u94fe\u63a5\u76f8\u5e94\u7684\u5e93\u4f1a\u4ea7\u751f undefined reference (\u672a\u5b9a\u4e49\u7684\u5f15\u7528) \u8fd9\u4e2a\u9519\u8bef\u3002 GLFW\u7684\u5b89\u88c5\u4e0e\u914d\u7f6e\u5c31\u5230\u6b64\u4e3a\u6b62\u3002 GLAD \u5230\u8fd9\u91cc\u8fd8\u6ca1\u6709\u7ed3\u675f\uff0c\u6211\u4eec\u4ecd\u7136\u8fd8\u6709\u4e00\u4ef6\u4e8b\u8981\u505a\u3002\u56e0\u4e3aOpenGL\u53ea\u662f\u4e00\u4e2a\u6807\u51c6/\u89c4\u8303\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u662f\u7531\u9a71\u52a8\u5f00\u53d1\u5546\u9488\u5bf9\u7279\u5b9a\u663e\u5361\u5b9e\u73b0\u7684\u3002\u7531\u4e8eOpenGL\u9a71\u52a8\u7248\u672c\u4f17\u591a\uff0c\u5b83\u5927\u591a\u6570\u51fd\u6570\u7684\u4f4d\u7f6e\u90fd\u65e0\u6cd5\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\u4e0b\u6765\uff0c\u9700\u8981\u5728\u8fd0\u884c\u65f6\u67e5\u8be2\u3002\u6240\u4ee5\u4efb\u52a1\u5c31\u843d\u5728\u4e86\u5f00\u53d1\u8005\u8eab\u4e0a\uff0c\u5f00\u53d1\u8005\u9700\u8981\u5728\u8fd0\u884c\u65f6\u83b7\u53d6\u51fd\u6570\u5730\u5740\u5e76\u5c06\u5176\u4fdd\u5b58\u5728\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u4e2d\u4f9b\u4ee5\u540e\u4f7f\u7528\u3002\u53d6\u5f97\u5730\u5740\u7684\u65b9\u6cd5 \u56e0\u5e73\u53f0\u800c\u5f02 \uff0c\u5728Windows\u4e0a\u4f1a\u662f\u7c7b\u4f3c\u8fd9\u6837\uff1a // \u5b9a\u4e49\u51fd\u6570\u539f\u578b typedef void (*GL_GENBUFFERS) (GLsizei, GLuint*); // \u627e\u5230\u6b63\u786e\u7684\u51fd\u6570\u5e76\u8d4b\u503c\u7ed9\u51fd\u6570\u6307\u9488 GL_GENBUFFERS glGenBuffers = (GL_GENBUFFERS)wglGetProcAddress(\"glGenBuffers\"); // \u73b0\u5728\u51fd\u6570\u53ef\u4ee5\u88ab\u6b63\u5e38\u8c03\u7528\u4e86 GLuint buffer; glGenBuffers(1, &buffer); \u4f60\u53ef\u4ee5\u770b\u5230\u4ee3\u7801\u975e\u5e38\u590d\u6742\uff0c\u800c\u4e14\u5f88\u7e41\u7410\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6bcf\u4e2a\u53ef\u80fd\u4f7f\u7528\u7684\u51fd\u6570\u90fd\u8981\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6709\u4e9b\u5e93\u80fd\u7b80\u5316\u6b64\u8fc7\u7a0b\uff0c\u5176\u4e2d GLAD \u662f\u76ee\u524d\u6700\u65b0\uff0c\u4e5f\u662f\u6700\u6d41\u884c\u7684\u5e93\u3002 \u914d\u7f6eGLAD GLAD\u662f\u4e00\u4e2a \u5f00\u6e90 \u7684\u5e93\uff0c\u5b83\u80fd\u89e3\u51b3\u6211\u4eec\u4e0a\u9762\u63d0\u5230\u7684\u90a3\u4e2a\u7e41\u7410\u7684\u95ee\u9898\u3002GLAD\u7684\u914d\u7f6e\u4e0e\u5927\u591a\u6570\u7684\u5f00\u6e90\u5e93\u6709\u4e9b\u8bb8\u7684\u4e0d\u540c\uff0cGLAD\u4f7f\u7528\u4e86\u4e00\u4e2a \u5728\u7ebf\u670d\u52a1 \u3002\u5728\u8fd9\u91cc\u6211\u4eec\u80fd\u591f\u544a\u8bc9GLAD\u9700\u8981\u5b9a\u4e49\u7684OpenGL\u7248\u672c\uff0c\u5e76\u4e14\u6839\u636e\u8fd9\u4e2a\u7248\u672c\u52a0\u8f7d\u6240\u6709\u76f8\u5173\u7684OpenGL\u51fd\u6570\u3002 \u6253\u5f00GLAD\u7684 \u5728\u7ebf\u670d\u52a1 \uff0c\u5c06\u8bed\u8a00(Language)\u8bbe\u7f6e\u4e3a C/C++ \uff0c\u5728API\u9009\u9879\u4e2d\uff0c\u9009\u62e9 3.3 \u4ee5\u4e0a\u7684OpenGL(gl)\u7248\u672c\uff08\u6211\u4eec\u7684\u6559\u7a0b\u4e2d\u5c06\u4f7f\u75283.3\u7248\u672c\uff0c\u4f46\u66f4\u65b0\u7684\u7248\u672c\u4e5f\u80fd\u7528\uff09\u3002\u4e4b\u540e\u5c06\u6a21\u5f0f(Profile)\u8bbe\u7f6e\u4e3a Core \uff0c\u5e76\u4e14\u4fdd\u8bc1\u9009\u4e2d\u4e86 \u751f\u6210\u52a0\u8f7d\u5668 (Generate a loader)\u9009\u9879\u3002\u73b0\u5728\u53ef\u4ee5\u5148\uff08\u6682\u65f6\uff09\u5ffd\u7565\u6269\u5c55(Extensions)\u4e2d\u7684\u5185\u5bb9\u3002\u90fd\u9009\u62e9\u5b8c\u4e4b\u540e\uff0c\u70b9\u51fb \u751f\u6210 (Generate)\u6309\u94ae\u6765\u751f\u6210\u5e93\u6587\u4ef6\u3002 GLAD\u73b0\u5728\u5e94\u8be5\u63d0\u4f9b\u7ed9\u4f60\u4e86\u4e00\u4e2azip\u538b\u7f29\u6587\u4ef6\uff0c\u5305\u542b\u4e24\u4e2a\u5934\u6587\u4ef6\u76ee\u5f55\uff0c\u548c\u4e00\u4e2a glad.c \u6587\u4ef6\u3002\u5c06\u4e24\u4e2a\u5934\u6587\u4ef6\u76ee\u5f55\uff08 glad \u548c KHR \uff09\u590d\u5236\u5230\u4f60\u7684 Include \u6587\u4ef6\u5939\u4e2d\uff08\u6216\u8005\u589e\u52a0\u4e00\u4e2a\u989d\u5916\u7684\u9879\u76ee\u6307\u5411\u8fd9\u4e9b\u76ee\u5f55\uff09\uff0c\u5e76\u6dfb\u52a0 glad.c \u6587\u4ef6\u5230\u4f60\u7684\u5de5\u7a0b\u4e2d\u3002 \u7ecf\u8fc7\u524d\u9762\u7684\u8fd9\u4e9b\u6b65\u9aa4\u4e4b\u540e\uff0c\u4f60\u5c31\u5e94\u8be5\u53ef\u4ee5\u5c06\u4ee5\u4e0b\u7684\u6307\u4ee4\u52a0\u5230\u4f60\u7684\u6587\u4ef6\u9876\u90e8\u4e86\uff1a #include <glad/glad.h> \u70b9\u51fb\u7f16\u8bd1\u6309\u94ae\u5e94\u8be5\u4e0d\u4f1a\u7ed9\u4f60\u63d0\u793a\u4efb\u4f55\u7684\u9519\u8bef\uff0c\u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u5df2\u7ecf\u51c6\u5907\u597d\u7ee7\u7eed\u5b66\u4e60 \u4e0b\u4e00\u8282 \u53bb\u771f\u6b63\u4f7f\u7528GLFW\u548cGLAD\u6765\u8bbe\u7f6eOpenGL\u4e0a\u4e0b\u6587\u5e76\u521b\u5efa\u4e00\u4e2a\u7a97\u53e3\u4e86\u3002\u8bb0\u5f97\u786e\u4fdd\u4f60\u7684\u5934\u6587\u4ef6\u548c\u5e93\u6587\u4ef6\u7684\u76ee\u5f55\u8bbe\u7f6e\u6b63\u786e\uff0c\u4ee5\u53ca\u94fe\u63a5\u5668\u91cc\u5f15\u7528\u7684\u5e93\u6587\u4ef6\u540d\u6b63\u786e\u3002\u5982\u679c\u4ecd\u7136\u9047\u5230\u9519\u8bef\uff0c\u53ef\u4ee5\u5148\u770b\u4e00\u4e0b\u8bc4\u8bba\u6709\u6ca1\u6709\u4eba\u9047\u5230\u7c7b\u4f3c\u7684\u95ee\u9898\uff0c\u8bf7\u53c2\u8003\u989d\u5916\u8d44\u6e90\u4e2d\u7684\u4f8b\u5b50\u6216\u8005\u5728\u4e0b\u9762\u7684\u8bc4\u8bba\u533a\u63d0\u95ee\u3002 \u9644\u52a0\u8d44\u6e90 GLFW: Window Guide \uff1aGLFW\u5b98\u65b9\u7684\u914d\u7f6eGLFW\u7a97\u53e3\u7684\u6307\u5357\u3002 Building applications \uff1a\u63d0\u4f9b\u4e86\u5f88\u591a\u7f16\u8bd1\u6216\u94fe\u63a5\u76f8\u5173\u7684\u4fe1\u606f\u548c\u4e00\u5927\u5217\u9519\u8bef\u53ca\u5bf9\u5e94\u7684\u89e3\u51b3\u65b9\u6848\u3002 GLFW with Code::Blocks \uff1a\u4f7f\u7528Code::Blocks IDE\u7f16\u8bd1GLFW\u3002 Running CMake \uff1a\u7b80\u8981\u7684\u4ecb\u7ecd\u5982\u4f55\u5728Windows\u548cLinux\u4e0a\u4f7f\u7528CMake\u3002 Writing a build system under Linux \uff1aWouter Verholst\u5199\u7684\u4e00\u4e2aautotools\u7684\u6559\u7a0b\uff0c\u8bb2\u7684\u662f\u5982\u4f55\u5728Linux\u4e0a\u7f16\u5199\u6784\u5efa\u7cfb\u7edf\uff0c\u5c24\u5176\u662f\u9488\u5bf9\u8fd9\u4e9b\u6559\u7a0b\u3002 Polytonic/Glitter \uff1a\u4e00\u4e2a\u7b80\u5355\u7684\u6837\u677f\u9879\u76ee\uff0c\u5b83\u5df2\u7ecf\u63d0\u524d\u914d\u7f6e\u4e86\u6240\u6709\u76f8\u5173\u7684\u5e93\uff1b\u5982\u679c\u4f60\u60f3\u8981\u5f88\u65b9\u4fbf\u5730\u641e\u5230\u4e00\u4e2aLearnOpenGL\u6559\u7a0b\u7684\u8303\u4f8b\u5de5\u7a0b\uff0c\u8fd9\u4e5f\u662f\u5f88\u4e0d\u9519\u7684\u3002","title":"\u521b\u5efa\u7a97\u53e3"},{"location":"01%20Getting%20started/02%20Creating%20a%20window/#_1","text":"\u539f\u6587 Creating a window \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 gjy_1992, Krasjet \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u8bd1\u6ce8 \u6ce8\u610f\uff0c\u7531\u4e8e\u4f5c\u8005\u5bf9\u6559\u7a0b\u505a\u51fa\u4e86\u66f4\u65b0\uff0c\u4e4b\u524d\u672c\u8282\u4f7f\u7528\u7684\u662fGLEW\u5e93\uff0c\u4f46\u73b0\u5728\u6539\u4e3a\u4e86\u4f7f\u7528GLAD\u5e93\uff0c\u5173\u4e8eGLEW\u914d\u7f6e\u7684\u90e8\u5206\u73b0\u5728\u5df2\u7ecf\u88ab\u4fee\u6539\uff0c\u4f46\u6211\u4ecd\u51b3\u5b9a\u5c06\u8fd9\u90e8\u5206\u6559\u7a0b\u4fdd\u7559\u8d77\u6765\uff0c\u653e\u5230\u4e00\u4e2a\u5386\u53f2\u5b58\u6863\u4e2d\uff0c\u5982\u679c\u6709\u9700\u8981\u7684\u8bdd\u53ef\u4ee5\u5230 \u8fd9\u91cc \u6765\u67e5\u770b\u3002 \u5728\u6211\u4eec\u753b\u51fa\u51fa\u8272\u7684\u6548\u679c\u4e4b\u524d\uff0c\u9996\u5148\u8981\u505a\u7684\u5c31\u662f\u521b\u5efa\u4e00\u4e2aOpenGL\u4e0a\u4e0b\u6587(Context)\u548c\u4e00\u4e2a\u7528\u4e8e\u663e\u793a\u7684\u7a97\u53e3\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u5728\u6bcf\u4e2a\u7cfb\u7edf\u4e0a\u90fd\u662f\u4e0d\u4e00\u6837\u7684\uff0cOpenGL\u6709\u610f\u5c06\u8fd9\u4e9b\u64cd\u4f5c\u62bd\u8c61(Abstract)\u51fa\u53bb\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u4e0d\u5f97\u4e0d\u81ea\u5df1\u5904\u7406\u521b\u5efa\u7a97\u53e3\uff0c\u5b9a\u4e49OpenGL\u4e0a\u4e0b\u6587\u4ee5\u53ca\u5904\u7406\u7528\u6237\u8f93\u5165\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u6709\u4e00\u4e9b\u5e93\u5df2\u7ecf\u63d0\u4f9b\u4e86\u6211\u4eec\u6240\u9700\u7684\u529f\u80fd\uff0c\u5176\u4e2d\u4e00\u90e8\u5206\u662f\u7279\u522b\u9488\u5bf9OpenGL\u7684\u3002\u8fd9\u4e9b\u5e93\u8282\u7701\u4e86\u6211\u4eec\u4e66\u5199\u64cd\u4f5c\u7cfb\u7edf\u76f8\u5173\u4ee3\u7801\u7684\u65f6\u95f4\uff0c\u63d0\u4f9b\u7ed9\u6211\u4eec\u4e00\u4e2a\u7a97\u53e3\u548c\u4e00\u4e2aOpenGL\u4e0a\u4e0b\u6587\u7528\u6765\u6e32\u67d3\u3002\u6700\u6d41\u884c\u7684\u51e0\u4e2a\u5e93\u6709GLUT\uff0cSDL\uff0cSFML\u548cGLFW\u3002\u5728\u6559\u7a0b\u91cc\u6211\u4eec\u5c06\u4f7f\u7528 GLFW \u3002\u4f60\u53ef\u4ee5\u968f\u610f\u9009\u7528\u5176\u4ed6\u7c7b\u4f3c\u7684\u5e93\uff0c\u5927\u591a\u6570\u5e93\u7684\u914d\u7f6e\u65b9\u6cd5\u548cGLFW\u5dee\u4e0d\u591a\u3002","title":"\u521b\u5efa\u7a97\u53e3"},{"location":"01%20Getting%20started/02%20Creating%20a%20window/#glfw","text":"GLFW\u662f\u4e00\u4e2a\u4e13\u95e8\u9488\u5bf9OpenGL\u7684C\u8bed\u8a00\u5e93\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6e32\u67d3\u7269\u4f53\u6240\u9700\u7684\u6700\u4f4e\u9650\u5ea6\u7684\u63a5\u53e3\u3002\u5b83\u5141\u8bb8\u7528\u6237\u521b\u5efaOpenGL\u4e0a\u4e0b\u6587\u3001\u5b9a\u4e49\u7a97\u53e3\u53c2\u6570\u4ee5\u53ca\u5904\u7406\u7528\u6237\u8f93\u5165\uff0c\u5bf9\u6211\u4eec\u6765\u8bf4\u8fd9\u5c31\u591f\u4e86\u3002 \u672c\u8282\u548c\u4e0b\u4e00\u8282\u7684\u76ee\u6807\u662f\u628aGLFW\u73af\u5883\u914d\u597d\u80fd\u4e14\u80fd\u591f\u8dd1\u8d77\u6765\uff0c\u5e76\u4fdd\u8bc1\u5b83\u6b63\u786e\u521b\u5efa\u4e86OpenGL\u4e0a\u4e0b\u6587\u5e76\u663e\u793a\u51fa\u4e00\u4e2a\u7b80\u5355\u7684\u7a97\u53e3\u6765\u8ba9\u6211\u4eec\u968f\u610f\u4f7f\u7528\u3002\u8fd9\u7bc7\u6559\u7a0b\u4f1a\u4e00\u6b65\u6b65\u6559\u4f60\u5982\u4f55\u83b7\u53d6\u3001\u7f16\u8bd1\u3001\u94fe\u63a5GLFW\u5e93\u3002\u6211\u4eec\u4f7f\u7528\u7684\u662fMicrosoft Visual Studio 2019 IDE\uff08\u64cd\u4f5c\u8fc7\u7a0b\u5728\u66f4\u65b0\u7684Visual Studio\u90fd\u662f\u76f8\u540c\u7684\uff09\u3002\u5982\u679c\u4f60\u7528\u7684\u4e0d\u662fVisual Studio\uff08\u6216\u8005\u7528\u7684\u662f\u5b83\u7684\u65e7\u7248\u672c\uff09\u8bf7\u4e0d\u8981\u62c5\u5fc3\uff0c\u5927\u591a\u6570IDE\u4e0a\u7684\u64cd\u4f5c\u90fd\u662f\u7c7b\u4f3c\u7684\u3002","title":"GLFW"},{"location":"01%20Getting%20started/02%20Creating%20a%20window/#glfw_1","text":"GLFW\u53ef\u4ee5\u4ece\u5b83\u5b98\u65b9\u7f51\u7ad9\u7684 \u4e0b\u8f7d\u9875 \u4e0a\u83b7\u53d6\u3002GLFW\u5df2\u63d0\u4f9b\u4e3aVisual Studio\uff082012\u52302019\u90fd\u6709\uff09\u9884\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u7248\u672c\u548c\u76f8\u5e94\u7684\u5934\u6587\u4ef6\uff0c\u4f46\u662f\u4e3a\u4e86\u5b8c\u6574\u6027\u6211\u4eec\u5c06\u4ece\u7f16\u8bd1\u6e90\u4ee3\u7801\u5f00\u59cb\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e0b\u8f7d \u6e90\u4ee3\u7801\u5305 \u3002 Attention \u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u91c7\u752864\u4f4d\u6784\u5efa\u6240\u6709\u7684\u5e93\u3002\u56e0\u6b64\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u9884\u7f16\u8bd1\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u8bf7\u786e\u4fdd\u4f60\u4e0b\u8f7d\u7684\u662f64\u4f4d\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 \u4e0b\u8f7d\u6e90\u7801\u5305\u4e4b\u540e\uff0c\u5c06\u5176\u89e3\u538b\u5e76\u6253\u5f00\u3002\u6211\u4eec\u53ea\u9700\u8981\u91cc\u9762\u7684\u8fd9\u4e9b\u5185\u5bb9\uff1a \u7f16\u8bd1\u751f\u6210\u7684\u5e93 include \u6587\u4ef6\u5939 \u4ece\u6e90\u4ee3\u7801\u7f16\u8bd1\u5e93\u53ef\u4ee5\u4fdd\u8bc1\u751f\u6210\u7684\u5e93\u5b8c\u5168\u9002\u5408\u4f60\u7684\u64cd\u4f5c\u7cfb\u7edf\u548cCPU\u7684\uff0c\u800c\u9884\u7f16\u8bd1\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5219\u5e76\u975e\u603b\u662f\u63d0\u4f9b\uff08\u6709\u65f6\u5019\uff0c\u5373\u4fbf\u63d0\u4f9b\u4e86\u9884\u7f16\u8bd1\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4e5f\u53ef\u80fd\u4e0d\u9002\u7528\u4e8e\u60a8\u7684\u7cfb\u7edf\uff09\u3002\u5f00\u653e\u6e90\u4ee3\u7801\u6240\u4ea7\u751f\u95ee\u9898\u5728\u4e8e\uff1a\u5e76\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u7528\u76f8\u540c\u7684IDE\u6216\u8005\u6784\u5efa\u7cfb\u7edf\u6765\u641e\u5f00\u53d1\uff0c\u56e0\u800c\u63d0\u4f9b\u7684\u9879\u76ee/\u89e3\u51b3\u65b9\u6848\u6587\u4ef6\u53ef\u80fd\u548c\u4e00\u4e9b\u4eba\u7684IDE\u4e0d\u517c\u5bb9\u3002\u6240\u4ee5\u4eba\u4eec\u5fc5\u987b\u4f7f\u7528\u7ed9\u5b9a\u7684.c/.cpp\u548c.h/.hpp\u6587\u4ef6\u6765\u81ea\u5df1\u5efa\u7acb\u9879\u76ee/\u89e3\u51b3\u65b9\u6848\uff0c\u8fd9\u662f\u4e00\u9879\u5f88\u67af\u71e5\u7684\u5de5\u4f5c\u3002\u4f46\u56e0\u6b64\u4e5f\u8bde\u751f\u4e86\u4e00\u4e2a\u53eb\u505aCMake\u7684\u5de5\u5177\u3002","title":"\u6784\u5efaGLFW"},{"location":"01%20Getting%20started/02%20Creating%20a%20window/#cmake","text":"CMake\u662f\u4e00\u4e2a\u5de5\u7a0b\u6587\u4ef6\u751f\u6210\u5de5\u5177\u3002\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u9884\u5b9a\u4e49\u597d\u7684CMake\u811a\u672c\uff0c\u6839\u636e\u81ea\u5df1\u7684\u9009\u62e9\uff08\u50cf\u662fVisual Studio, Code::Blocks, Eclipse\uff09\u751f\u6210\u4e0d\u540cIDE\u7684\u5de5\u7a0b\u6587\u4ef6\u3002\u8fd9\u5141\u8bb8\u6211\u4eec\u4eceGLFW\u6e90\u7801\u521b\u5efa\u4e00\u4e2aVisual Studio 2019\u5de5\u7a0b\u6587\u4ef6\uff0c\u4e4b\u540e\u8fdb\u884c\u7f16\u8bd1\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4ece \u8fd9\u91cc \u4e0b\u8f7d\u5b89\u88c5CMake\u3002 \u5f53CMake\u5b89\u88c5\u6210\u529f\u540e\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u4ece\u547d\u4ee4\u884c\u6216\u8005GUI\u542f\u52a8CMake\uff0c\u7531\u4e8e\u6211\u4eec\u4e0d\u60f3\u8ba9\u4e8b\u60c5\u53d8\u5f97\u592a\u8fc7\u590d\u6742\uff0c\u6211\u4eec\u9009\u62e9\u7528GUI\u3002CMake\u9700\u8981\u4e00\u4e2a\u6e90\u4ee3\u7801\u76ee\u5f55\u548c\u4e00\u4e2a\u5b58\u653e\u7f16\u8bd1\u7ed3\u679c\u7684\u76ee\u6807\u6587\u4ef6\u76ee\u5f55\u3002\u6e90\u4ee3\u7801\u76ee\u5f55\u6211\u4eec\u9009\u62e9GLFW\u7684\u6e90\u4ee3\u7801\u7684\u6839\u76ee\u5f55\uff0c\u7136\u540e\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a build \u6587\u4ef6\u5939\uff0c\u9009\u4e2d\u4f5c\u4e3a\u76ee\u6807\u76ee\u5f55\u3002 \u5728\u8bbe\u7f6e\u5b8c\u6e90\u4ee3\u7801\u76ee\u5f55\u548c\u76ee\u6807\u76ee\u5f55\u4e4b\u540e\uff0c\u70b9\u51fb Configure(\u8bbe\u7f6e) \u6309\u94ae\uff0c\u8ba9CMake\u8bfb\u53d6\u8bbe\u7f6e\u548c\u6e90\u4ee3\u7801\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u9700\u8981\u9009\u62e9\u5de5\u7a0b\u7684\u751f\u6210\u5668\uff0c\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u7684\u662fVisual Studio 2019\uff0c\u6211\u4eec\u9009\u62e9 Visual Studio 16 \u9009\u9879\uff08\u56e0\u4e3aVisual Studio 2019\u7684\u5185\u90e8\u7248\u672c\u53f7\u662f16\uff09\u3002CMake\u4f1a\u663e\u793a\u53ef\u9009\u7684\u7f16\u8bd1\u9009\u9879\u7528\u6765\u914d\u7f6e\u6700\u7ec8\u751f\u6210\u7684\u5e93\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u5e76\u518d\u6b21\u70b9\u51fb Configure(\u8bbe\u7f6e) \u6309\u94ae\u4fdd\u5b58\u8bbe\u7f6e\u3002\u4fdd\u5b58\u4e4b\u540e\uff0c\u70b9\u51fb Generate(\u751f\u6210) \u6309\u94ae\uff0c\u751f\u6210\u7684\u5de5\u7a0b\u6587\u4ef6\u4f1a\u5728\u4f60\u7684 build \u6587\u4ef6\u5939\u4e2d\u3002","title":"CMake"},{"location":"01%20Getting%20started/02%20Creating%20a%20window/#_2","text":"\u5728 build \u6587\u4ef6\u5939\u91cc\u53ef\u4ee5\u627e\u5230 GLFW.sln \u6587\u4ef6\uff0c\u7528Visual Studio 2019\u6253\u5f00\u3002\u56e0\u4e3aCMake\u5df2\u7ecf\u914d\u7f6e\u597d\u4e86\u9879\u76ee\uff0c\u5e76\u6309\u7167\u9ed8\u8ba4\u914d\u7f6e\u5c06\u5176\u7f16\u8bd1\u4e3a64\u4f4d\u7684\u5e93\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u70b9\u51fb Build Solution(\u751f\u6210\u89e3\u51b3\u65b9\u6848) \u6309\u94ae\uff0c\u7136\u540e\u5728 build/src/Debug \u6587\u4ef6\u5939\u5185\u5c31\u4f1a\u51fa\u73b0\u6211\u4eec\u7f16\u8bd1\u51fa\u7684\u5e93\u6587\u4ef6 glfw3.lib \u3002 \u5e93\u751f\u6210\u5b8c\u6bd5\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u8ba9IDE\u77e5\u9053\u5e93\u548c\u5934\u6587\u4ef6\u7684\u4f4d\u7f6e\u3002\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a \u627e\u5230IDE\u6216\u8005\u7f16\u8bd1\u5668\u7684 /lib \u548c /include \u6587\u4ef6\u5939\uff0c\u6dfb\u52a0GLFW\u7684 include \u6587\u4ef6\u5939\u91cc\u7684\u6587\u4ef6\u5230IDE\u7684 /include \u6587\u4ef6\u5939\u91cc\u53bb\u3002\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\uff0c\u5c06 glfw3.lib \u6dfb\u52a0\u5230 /lib \u6587\u4ef6\u5939\u91cc\u53bb\u3002\u867d\u7136\u8fd9\u6837\u80fd\u5de5\u4f5c\uff0c\u4f46\u8fd9\u4e0d\u662f\u63a8\u8350\u7684\u65b9\u5f0f\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f1a\u8ba9\u4f60\u5f88\u96be\u53bb\u7ba1\u7406\u5e93\u548cinclude\u6587\u4ef6\uff0c\u800c\u4e14\u91cd\u65b0\u5b89\u88c5IDE\u6216\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8fd9\u4e9b\u6587\u4ef6\u4e22\u5931\u3002 \u63a8\u8350\u7684\u65b9\u5f0f\u662f\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u76ee\u5f55\u5305\u542b\u6240\u6709\u7684\u7b2c\u4e09\u65b9\u5e93\u6587\u4ef6\u548c\u5934\u6587\u4ef6\uff0c\u5e76\u4e14\u5728\u4f60\u7684IDE\u6216\u7f16\u8bd1\u5668\u4e2d\u6307\u5b9a\u8fd9\u4e9b\u6587\u4ef6\u5939\u3002\u6211\u4e2a\u4eba\u4f1a\u4f7f\u7528\u4e00\u4e2a\u5355\u72ec\u7684\u6587\u4ef6\u5939\uff0c\u91cc\u9762\u5305\u542b Libs \u548c Include \u6587\u4ef6\u5939\uff0c\u5728\u8fd9\u91cc\u5b58\u653eOpenGL\u5de5\u7a0b\u7528\u5230\u7684\u6240\u6709\u7b2c\u4e09\u65b9\u5e93\u548c\u5934\u6587\u4ef6\u3002\u8fd9\u6837\u6211\u7684\u6240\u6709\u7b2c\u4e09\u65b9\u5e93\u90fd\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\uff08\u5e76\u4e14\u53ef\u4ee5\u5171\u4eab\u81f3\u591a\u53f0\u7535\u8111\uff09\u3002\u7136\u800c\u8fd9\u8981\u6c42\u4f60\u6bcf\u6b21\u65b0\u5efa\u4e00\u4e2a\u5de5\u7a0b\u65f6\u90fd\u9700\u8981\u544a\u8bc9IDE/\u7f16\u8bd1\u5668\u5728\u54ea\u80fd\u627e\u5230\u8fd9\u4e9b\u76ee\u5f55\u3002 \u5b8c\u6210\u4e0a\u9762\u6b65\u9aa4\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528GLFW\u521b\u5efa\u6211\u4eec\u7684\u7b2c\u4e00\u4e2aOpenGL\u5de5\u7a0b\u4e86\uff01","title":"\u7f16\u8bd1"},{"location":"01%20Getting%20started/02%20Creating%20a%20window/#_3","text":"\u9996\u5148\uff0c\u6253\u5f00Visual Studio\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u9879\u76ee\u3002\u5982\u679cVS\u63d0\u4f9b\u4e86\u591a\u4e2a\u9009\u9879\uff0c\u9009\u62e9Visual C++\uff0c\u7136\u540e\u9009\u62e9 Empty Project(\u7a7a\u9879\u76ee) \uff08\u522b\u5fd8\u4e86\u7ed9\u4f60\u7684\u9879\u76ee\u8d77\u4e00\u4e2a\u5408\u9002\u7684\u540d\u5b57\uff09\u3002\u7531\u4e8e\u6211\u4eec\u5c06\u572864\u4f4d\u6a21\u5f0f\u4e2d\u6267\u884c\u6240\u6709\u64cd\u4f5c\uff0c\u800c\u65b0\u9879\u76ee\u9ed8\u8ba4\u662f32\u4f4d\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06Debug\u65c1\u8fb9\u9876\u90e8\u7684\u4e0b\u62c9\u5217\u8868\u4ecex86\u66f4\u6539\u4e3ax64\uff1a \u73b0\u5728\u6211\u4eec\u7ec8\u4e8e\u6709\u4e00\u4e2a\u7a7a\u7684\u5de5\u4f5c\u7a7a\u95f4\u4e86\uff0c\u5f00\u59cb\u521b\u5efa\u6211\u4eec\u7b2c\u4e00\u4e2aOpenGL\u7a0b\u5e8f\u5427\uff01","title":"\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u5de5\u7a0b"},{"location":"01%20Getting%20started/02%20Creating%20a%20window/#_4","text":"\u4e3a\u4e86\u4f7f\u6211\u4eec\u7684\u7a0b\u5e8f\u4f7f\u7528GLFW\uff0c\u6211\u4eec\u9700\u8981\u628aGLFW\u5e93 \u94fe\u63a5 (Link)\u8fdb\u5de5\u7a0b\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5728\u94fe\u63a5\u5668\u7684\u8bbe\u7f6e\u91cc\u6307\u5b9a\u6211\u4eec\u8981\u4f7f\u7528 glfw3.lib \u6765\u5b8c\u6210\uff0c\u4f46\u662f\u7531\u4e8e\u6211\u4eec\u5c06\u7b2c\u4e09\u65b9\u5e93\u653e\u5728\u53e6\u5916\u7684\u76ee\u5f55\u4e2d\uff0c\u6211\u4eec\u7684\u5de5\u7a0b\u8fd8\u4e0d\u77e5\u9053\u5728\u54ea\u5bfb\u627e\u8fd9\u4e2a\u6587\u4ef6\u3002\u4e8e\u662f\u6211\u4eec\u9996\u5148\u9700\u8981\u5c06\u6211\u4eec\u653e\u7b2c\u4e09\u65b9\u5e93\u7684\u76ee\u5f55\u6dfb\u52a0\u8fdb\u8bbe\u7f6e\u3002 \u8981\u6dfb\u52a0\u8fd9\u4e9b\u76ee\u5f55\uff08\u9700\u8981VS\u641c\u7d22\u5e93\u548cinclude\u6587\u4ef6\u7684\u5730\u65b9\uff09\uff0c\u6211\u4eec\u9996\u5148\u8fdb\u5165Project Properties(\u5de5\u7a0b\u5c5e\u6027\uff0c\u5728\u89e3\u51b3\u65b9\u6848\u7a97\u53e3\u91cc\u53f3\u952e\u9879\u76ee)\uff0c\u7136\u540e\u9009\u62e9 VC++ Directories(VC++ \u76ee\u5f55) \u9009\u9879\u5361\uff08\u5982\u4e0b\u56fe\uff09\u3002\u5728\u4e0b\u9762\u7684\u4e24\u680f\u6dfb\u52a0\u76ee\u5f55\uff1a \u8fd9\u91cc\u4f60\u53ef\u4ee5\u628a\u81ea\u5df1\u7684\u76ee\u5f55\u52a0\u8fdb\u53bb\uff0c\u8ba9\u5de5\u7a0b\u77e5\u9053\u5230\u54ea\u53bb\u641c\u7d22\u3002\u4f60\u9700\u8981\u624b\u52a8\u628a\u76ee\u5f55\u52a0\u5728\u540e\u9762\uff0c\u4e5f\u53ef\u4ee5\u70b9\u51fb\u9700\u8981\u7684\u4f4d\u7f6e\u5b57\u7b26\u4e32\uff0c\u9009\u62e9 \u9009\u9879\uff0c\u4e4b\u540e\u4f1a\u51fa\u73b0\u7c7b\u4f3c\u4e0b\u9762\u8fd9\u5e45\u56fe\u7684\u754c\u9762\uff0c\u56fe\u662f\u9009\u62e9 Include Directories(\u5305\u542b\u76ee\u5f55) \u65f6\u7684\u754c\u9762\uff1a \u8fd9\u91cc\u53ef\u4ee5\u6dfb\u52a0\u4efb\u610f\u591a\u4e2a\u76ee\u5f55\uff0cIDE\u4f1a\u4ece\u8fd9\u4e9b\u76ee\u5f55\u91cc\u5bfb\u627e\u5934\u6587\u4ef6\u3002\u6240\u4ee5\u53ea\u8981\u4f60\u5c06GLFW\u7684 Include \u6587\u4ef6\u5939\u52a0\u8fdb\u8def\u5f84\u4e2d\uff0c\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 <GLFW/..> \u6765\u5f15\u7528\u5934\u6587\u4ef6\u3002\u5e93\u6587\u4ef6\u5939\u4e5f\u662f\u4e00\u6837\u7684\u3002 \u73b0\u5728VS\u53ef\u4ee5\u627e\u5230\u6240\u9700\u7684\u6240\u6709\u6587\u4ef6\u4e86\u3002\u6700\u540e\u9700\u8981\u5728 Linker(\u94fe\u63a5\u5668) \u9009\u9879\u5361\u91cc\u7684 Input(\u8f93\u5165) \u9009\u9879\u5361\u91cc\u6dfb\u52a0 glfw3.lib \u8fd9\u4e2a\u6587\u4ef6\uff1a \u8981\u94fe\u63a5\u4e00\u4e2a\u5e93\u6211\u4eec\u5fc5\u987b\u544a\u8bc9\u94fe\u63a5\u5668\u5b83\u7684\u6587\u4ef6\u540d\u3002\u5e93\u540d\u5b57\u662f glfw3.lib \uff0c\u6211\u4eec\u628a\u5b83\u52a0\u5230 Additional Dependencies(\u9644\u52a0\u4f9d\u8d56\u9879) \u5b57\u6bb5\u4e2d(\u624b\u52a8\u6216\u8005\u4f7f\u7528 \u9009\u9879\u90fd\u53ef\u4ee5)\u3002\u8fd9\u6837GLFW\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u4f1a\u88ab\u94fe\u63a5\u8fdb\u6765\u4e86\u3002\u9664\u4e86GLFW\u4e4b\u5916\uff0c\u4f60\u8fd8\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u94fe\u63a5\u6761\u76ee\u94fe\u63a5\u5230OpenGL\u7684\u5e93\uff0c\u4f46\u662f\u8fd9\u4e2a\u5e93\u53ef\u80fd\u56e0\u4e3a\u7cfb\u7edf\u7684\u4e0d\u540c\u800c\u6709\u4e00\u4e9b\u5dee\u522b\u3002","title":"\u94fe\u63a5"},{"location":"01%20Getting%20started/02%20Creating%20a%20window/#windowsopengl","text":"\u5982\u679c\u4f60\u662fWindows\u5e73\u53f0\uff0c opengl32.lib \u5df2\u7ecf\u5305\u542b\u5728Microsoft SDK\u91cc\u4e86\uff0c\u5b83\u5728Visual Studio\u5b89\u88c5\u7684\u65f6\u5019\u5c31\u9ed8\u8ba4\u5b89\u88c5\u4e86\u3002\u7531\u4e8e\u8fd9\u7bc7\u6559\u7a0b\u7528\u7684\u662fVS\u7f16\u8bd1\u5668\uff0c\u5e76\u4e14\u662f\u5728Windows\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u5c06 opengl32.lib \u6dfb\u52a0\u8fdb\u8fde\u63a5\u5668\u8bbe\u7f6e\u91cc\u5c31\u884c\u4e86\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cOpenGL\u5e9364\u4f4d\u7248\u672c\u7684\u6587\u4ef6\u540d\u4ecd\u7136\u662f opengl32.lib \uff08\u548c32\u4f4d\u7248\u672c\u4e00\u6837\uff09\uff0c\u867d\u7136\u5f88\u5947\u602a\u4f46\u786e\u5b9e\u5982\u6b64\u3002","title":"Windows\u4e0a\u7684OpenGL\u5e93"},{"location":"01%20Getting%20started/02%20Creating%20a%20window/#linuxopengl","text":"\u5728Linux\u4e0b\u4f60\u9700\u8981\u94fe\u63a5 libGL.so \u5e93\u6587\u4ef6\uff0c\u8fd9\u9700\u8981\u6dfb\u52a0 -lGL \u5230\u4f60\u7684\u94fe\u63a5\u5668\u8bbe\u7f6e\u4e2d\u3002\u5982\u679c\u627e\u4e0d\u5230\u8fd9\u4e2a\u5e93\u4f60\u53ef\u80fd\u9700\u8981\u5b89\u88c5Mesa\uff0cNVidia\u6216AMD\u7684\u5f00\u53d1\u5305\uff0c\u8fd9\u90e8\u5206\u56e0\u5e73\u53f0\u800c\u5f02\uff08\u800c\u4e14\u6211\u4e5f\u4e0d\u719f\u6089Linux\uff09\u5c31\u4e0d\u4ed4\u7ec6\u8bb2\u89e3\u4e86\u3002 \u63a5\u4e0b\u6765\uff0c\u5982\u679c\u4f60\u5df2\u7ecf\u6dfb\u52a0GLFW\u548cOpenGL\u5e93\u5230\u8fde\u63a5\u5668\u8bbe\u7f6e\u4e2d\uff0c\u4f60\u53ef\u4ee5\u7528\u5982\u4e0b\u65b9\u5f0f\u6dfb\u52a0GLFW\u5934\u6587\u4ef6\uff1a #include <GLFW\\glfw3.h> Important \u5bf9\u4e8e\u7528GCC\u7f16\u8bd1\u7684Linux\u7528\u6237\u5efa\u8bae\u4f7f\u7528\u8fd9\u4e2a\u547d\u4ee4\u884c\u9009\u9879 -lglfw3 -lGL -lX11 -lpthread -lXrandr -lXi -ldl \u3002\u6ca1\u6709\u6b63\u786e\u94fe\u63a5\u76f8\u5e94\u7684\u5e93\u4f1a\u4ea7\u751f undefined reference (\u672a\u5b9a\u4e49\u7684\u5f15\u7528) \u8fd9\u4e2a\u9519\u8bef\u3002 GLFW\u7684\u5b89\u88c5\u4e0e\u914d\u7f6e\u5c31\u5230\u6b64\u4e3a\u6b62\u3002","title":"Linux\u4e0a\u7684OpenGL\u5e93"},{"location":"01%20Getting%20started/02%20Creating%20a%20window/#glad","text":"\u5230\u8fd9\u91cc\u8fd8\u6ca1\u6709\u7ed3\u675f\uff0c\u6211\u4eec\u4ecd\u7136\u8fd8\u6709\u4e00\u4ef6\u4e8b\u8981\u505a\u3002\u56e0\u4e3aOpenGL\u53ea\u662f\u4e00\u4e2a\u6807\u51c6/\u89c4\u8303\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u662f\u7531\u9a71\u52a8\u5f00\u53d1\u5546\u9488\u5bf9\u7279\u5b9a\u663e\u5361\u5b9e\u73b0\u7684\u3002\u7531\u4e8eOpenGL\u9a71\u52a8\u7248\u672c\u4f17\u591a\uff0c\u5b83\u5927\u591a\u6570\u51fd\u6570\u7684\u4f4d\u7f6e\u90fd\u65e0\u6cd5\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\u4e0b\u6765\uff0c\u9700\u8981\u5728\u8fd0\u884c\u65f6\u67e5\u8be2\u3002\u6240\u4ee5\u4efb\u52a1\u5c31\u843d\u5728\u4e86\u5f00\u53d1\u8005\u8eab\u4e0a\uff0c\u5f00\u53d1\u8005\u9700\u8981\u5728\u8fd0\u884c\u65f6\u83b7\u53d6\u51fd\u6570\u5730\u5740\u5e76\u5c06\u5176\u4fdd\u5b58\u5728\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u4e2d\u4f9b\u4ee5\u540e\u4f7f\u7528\u3002\u53d6\u5f97\u5730\u5740\u7684\u65b9\u6cd5 \u56e0\u5e73\u53f0\u800c\u5f02 \uff0c\u5728Windows\u4e0a\u4f1a\u662f\u7c7b\u4f3c\u8fd9\u6837\uff1a // \u5b9a\u4e49\u51fd\u6570\u539f\u578b typedef void (*GL_GENBUFFERS) (GLsizei, GLuint*); // \u627e\u5230\u6b63\u786e\u7684\u51fd\u6570\u5e76\u8d4b\u503c\u7ed9\u51fd\u6570\u6307\u9488 GL_GENBUFFERS glGenBuffers = (GL_GENBUFFERS)wglGetProcAddress(\"glGenBuffers\"); // \u73b0\u5728\u51fd\u6570\u53ef\u4ee5\u88ab\u6b63\u5e38\u8c03\u7528\u4e86 GLuint buffer; glGenBuffers(1, &buffer); \u4f60\u53ef\u4ee5\u770b\u5230\u4ee3\u7801\u975e\u5e38\u590d\u6742\uff0c\u800c\u4e14\u5f88\u7e41\u7410\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6bcf\u4e2a\u53ef\u80fd\u4f7f\u7528\u7684\u51fd\u6570\u90fd\u8981\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6709\u4e9b\u5e93\u80fd\u7b80\u5316\u6b64\u8fc7\u7a0b\uff0c\u5176\u4e2d GLAD \u662f\u76ee\u524d\u6700\u65b0\uff0c\u4e5f\u662f\u6700\u6d41\u884c\u7684\u5e93\u3002","title":"GLAD"},{"location":"01%20Getting%20started/02%20Creating%20a%20window/#glad_1","text":"GLAD\u662f\u4e00\u4e2a \u5f00\u6e90 \u7684\u5e93\uff0c\u5b83\u80fd\u89e3\u51b3\u6211\u4eec\u4e0a\u9762\u63d0\u5230\u7684\u90a3\u4e2a\u7e41\u7410\u7684\u95ee\u9898\u3002GLAD\u7684\u914d\u7f6e\u4e0e\u5927\u591a\u6570\u7684\u5f00\u6e90\u5e93\u6709\u4e9b\u8bb8\u7684\u4e0d\u540c\uff0cGLAD\u4f7f\u7528\u4e86\u4e00\u4e2a \u5728\u7ebf\u670d\u52a1 \u3002\u5728\u8fd9\u91cc\u6211\u4eec\u80fd\u591f\u544a\u8bc9GLAD\u9700\u8981\u5b9a\u4e49\u7684OpenGL\u7248\u672c\uff0c\u5e76\u4e14\u6839\u636e\u8fd9\u4e2a\u7248\u672c\u52a0\u8f7d\u6240\u6709\u76f8\u5173\u7684OpenGL\u51fd\u6570\u3002 \u6253\u5f00GLAD\u7684 \u5728\u7ebf\u670d\u52a1 \uff0c\u5c06\u8bed\u8a00(Language)\u8bbe\u7f6e\u4e3a C/C++ \uff0c\u5728API\u9009\u9879\u4e2d\uff0c\u9009\u62e9 3.3 \u4ee5\u4e0a\u7684OpenGL(gl)\u7248\u672c\uff08\u6211\u4eec\u7684\u6559\u7a0b\u4e2d\u5c06\u4f7f\u75283.3\u7248\u672c\uff0c\u4f46\u66f4\u65b0\u7684\u7248\u672c\u4e5f\u80fd\u7528\uff09\u3002\u4e4b\u540e\u5c06\u6a21\u5f0f(Profile)\u8bbe\u7f6e\u4e3a Core \uff0c\u5e76\u4e14\u4fdd\u8bc1\u9009\u4e2d\u4e86 \u751f\u6210\u52a0\u8f7d\u5668 (Generate a loader)\u9009\u9879\u3002\u73b0\u5728\u53ef\u4ee5\u5148\uff08\u6682\u65f6\uff09\u5ffd\u7565\u6269\u5c55(Extensions)\u4e2d\u7684\u5185\u5bb9\u3002\u90fd\u9009\u62e9\u5b8c\u4e4b\u540e\uff0c\u70b9\u51fb \u751f\u6210 (Generate)\u6309\u94ae\u6765\u751f\u6210\u5e93\u6587\u4ef6\u3002 GLAD\u73b0\u5728\u5e94\u8be5\u63d0\u4f9b\u7ed9\u4f60\u4e86\u4e00\u4e2azip\u538b\u7f29\u6587\u4ef6\uff0c\u5305\u542b\u4e24\u4e2a\u5934\u6587\u4ef6\u76ee\u5f55\uff0c\u548c\u4e00\u4e2a glad.c \u6587\u4ef6\u3002\u5c06\u4e24\u4e2a\u5934\u6587\u4ef6\u76ee\u5f55\uff08 glad \u548c KHR \uff09\u590d\u5236\u5230\u4f60\u7684 Include \u6587\u4ef6\u5939\u4e2d\uff08\u6216\u8005\u589e\u52a0\u4e00\u4e2a\u989d\u5916\u7684\u9879\u76ee\u6307\u5411\u8fd9\u4e9b\u76ee\u5f55\uff09\uff0c\u5e76\u6dfb\u52a0 glad.c \u6587\u4ef6\u5230\u4f60\u7684\u5de5\u7a0b\u4e2d\u3002 \u7ecf\u8fc7\u524d\u9762\u7684\u8fd9\u4e9b\u6b65\u9aa4\u4e4b\u540e\uff0c\u4f60\u5c31\u5e94\u8be5\u53ef\u4ee5\u5c06\u4ee5\u4e0b\u7684\u6307\u4ee4\u52a0\u5230\u4f60\u7684\u6587\u4ef6\u9876\u90e8\u4e86\uff1a #include <glad/glad.h> \u70b9\u51fb\u7f16\u8bd1\u6309\u94ae\u5e94\u8be5\u4e0d\u4f1a\u7ed9\u4f60\u63d0\u793a\u4efb\u4f55\u7684\u9519\u8bef\uff0c\u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u5df2\u7ecf\u51c6\u5907\u597d\u7ee7\u7eed\u5b66\u4e60 \u4e0b\u4e00\u8282 \u53bb\u771f\u6b63\u4f7f\u7528GLFW\u548cGLAD\u6765\u8bbe\u7f6eOpenGL\u4e0a\u4e0b\u6587\u5e76\u521b\u5efa\u4e00\u4e2a\u7a97\u53e3\u4e86\u3002\u8bb0\u5f97\u786e\u4fdd\u4f60\u7684\u5934\u6587\u4ef6\u548c\u5e93\u6587\u4ef6\u7684\u76ee\u5f55\u8bbe\u7f6e\u6b63\u786e\uff0c\u4ee5\u53ca\u94fe\u63a5\u5668\u91cc\u5f15\u7528\u7684\u5e93\u6587\u4ef6\u540d\u6b63\u786e\u3002\u5982\u679c\u4ecd\u7136\u9047\u5230\u9519\u8bef\uff0c\u53ef\u4ee5\u5148\u770b\u4e00\u4e0b\u8bc4\u8bba\u6709\u6ca1\u6709\u4eba\u9047\u5230\u7c7b\u4f3c\u7684\u95ee\u9898\uff0c\u8bf7\u53c2\u8003\u989d\u5916\u8d44\u6e90\u4e2d\u7684\u4f8b\u5b50\u6216\u8005\u5728\u4e0b\u9762\u7684\u8bc4\u8bba\u533a\u63d0\u95ee\u3002","title":"\u914d\u7f6eGLAD"},{"location":"01%20Getting%20started/02%20Creating%20a%20window/#_5","text":"GLFW: Window Guide \uff1aGLFW\u5b98\u65b9\u7684\u914d\u7f6eGLFW\u7a97\u53e3\u7684\u6307\u5357\u3002 Building applications \uff1a\u63d0\u4f9b\u4e86\u5f88\u591a\u7f16\u8bd1\u6216\u94fe\u63a5\u76f8\u5173\u7684\u4fe1\u606f\u548c\u4e00\u5927\u5217\u9519\u8bef\u53ca\u5bf9\u5e94\u7684\u89e3\u51b3\u65b9\u6848\u3002 GLFW with Code::Blocks \uff1a\u4f7f\u7528Code::Blocks IDE\u7f16\u8bd1GLFW\u3002 Running CMake \uff1a\u7b80\u8981\u7684\u4ecb\u7ecd\u5982\u4f55\u5728Windows\u548cLinux\u4e0a\u4f7f\u7528CMake\u3002 Writing a build system under Linux \uff1aWouter Verholst\u5199\u7684\u4e00\u4e2aautotools\u7684\u6559\u7a0b\uff0c\u8bb2\u7684\u662f\u5982\u4f55\u5728Linux\u4e0a\u7f16\u5199\u6784\u5efa\u7cfb\u7edf\uff0c\u5c24\u5176\u662f\u9488\u5bf9\u8fd9\u4e9b\u6559\u7a0b\u3002 Polytonic/Glitter \uff1a\u4e00\u4e2a\u7b80\u5355\u7684\u6837\u677f\u9879\u76ee\uff0c\u5b83\u5df2\u7ecf\u63d0\u524d\u914d\u7f6e\u4e86\u6240\u6709\u76f8\u5173\u7684\u5e93\uff1b\u5982\u679c\u4f60\u60f3\u8981\u5f88\u65b9\u4fbf\u5730\u641e\u5230\u4e00\u4e2aLearnOpenGL\u6559\u7a0b\u7684\u8303\u4f8b\u5de5\u7a0b\uff0c\u8fd9\u4e5f\u662f\u5f88\u4e0d\u9519\u7684\u3002","title":"\u9644\u52a0\u8d44\u6e90"},{"location":"01%20Getting%20started/03%20Hello%20Window/","text":"\u4f60\u597d\uff0c\u7a97\u53e3 \u539f\u6587 Hello Window \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Geequlim, Krasjet \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u8ba9\u6211\u4eec\u8bd5\u8bd5\u80fd\u4e0d\u80fd\u8ba9GLFW\u6b63\u5e38\u5de5\u4f5c\u3002\u9996\u5148\uff0c\u65b0\u5efa\u4e00\u4e2a .cpp \u6587\u4ef6\uff0c\u7136\u540e\u628a\u4e0b\u9762\u7684\u4ee3\u7801\u7c98\u8d34\u5230\u8be5\u6587\u4ef6\u7684\u6700\u524d\u9762\u3002 #include <glad/glad.h> #include <GLFW/glfw3.h> Attention \u8bf7\u786e\u8ba4\u662f\u5728\u5305\u542bGLFW\u7684\u5934\u6587\u4ef6\u4e4b\u524d\u5305\u542b\u4e86GLAD\u7684\u5934\u6587\u4ef6\u3002GLAD\u7684\u5934\u6587\u4ef6\u5305\u542b\u4e86\u6b63\u786e\u7684OpenGL\u5934\u6587\u4ef6\uff08\u4f8b\u5982 GL/gl.h \uff09\uff0c\u6240\u4ee5\u9700\u8981\u5728\u5176\u5b83\u4f9d\u8d56\u4e8eOpenGL\u7684\u5934\u6587\u4ef6\u4e4b\u524d\u5305\u542bGLAD\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa main \u51fd\u6570\uff0c\u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\u6211\u4eec\u5c06\u4f1a\u5b9e\u4f8b\u5316GLFW\u7a97\u53e3\uff1a int main() { glfwInit(); glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3); glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3); glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE); //glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE); return 0; } \u9996\u5148\uff0c\u6211\u4eec\u5728main\u51fd\u6570\u4e2d\u8c03\u7528 glfwInit \u51fd\u6570\u6765\u521d\u59cb\u5316GLFW\uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 glfwWindowHint \u51fd\u6570\u6765\u914d\u7f6eGLFW\u3002 glfwWindowHint \u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4ee3\u8868\u9009\u9879\u7684\u540d\u79f0\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u5f88\u591a\u4ee5 GLFW_ \u5f00\u5934\u7684\u679a\u4e3e\u503c\u4e2d\u9009\u62e9\uff1b\u7b2c\u4e8c\u4e2a\u53c2\u6570\u63a5\u53d7\u4e00\u4e2a\u6574\u578b\uff0c\u7528\u6765\u8bbe\u7f6e\u8fd9\u4e2a\u9009\u9879\u7684\u503c\u3002\u8be5\u51fd\u6570\u7684\u6240\u6709\u7684\u9009\u9879\u4ee5\u53ca\u5bf9\u5e94\u7684\u503c\u90fd\u53ef\u4ee5\u5728 GLFW\u2019s window handling \u8fd9\u7bc7\u6587\u6863\u4e2d\u627e\u5230\u3002\u5982\u679c\u4f60\u73b0\u5728\u7f16\u8bd1\u4f60\u7684cpp\u6587\u4ef6\u4f1a\u5f97\u5230\u5927\u91cf\u7684 undefined reference (\u672a\u5b9a\u4e49\u7684\u5f15\u7528)\u9519\u8bef\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u5e76\u672a\u987a\u5229\u5730\u94fe\u63a5GLFW\u5e93\u3002 \u7531\u4e8e\u672c\u7ad9\u7684\u6559\u7a0b\u90fd\u662f\u57fa\u4e8eOpenGL 3.3\u7248\u672c\u5c55\u5f00\u8ba8\u8bba\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u544a\u8bc9GLFW\u6211\u4eec\u8981\u4f7f\u7528\u7684OpenGL\u7248\u672c\u662f3.3\uff0c\u8fd9\u6837GLFW\u4f1a\u5728\u521b\u5efaOpenGL\u4e0a\u4e0b\u6587\u65f6\u505a\u51fa\u9002\u5f53\u7684\u8c03\u6574\u3002\u8fd9\u4e5f\u53ef\u4ee5\u786e\u4fdd\u7528\u6237\u5728\u6ca1\u6709\u9002\u5f53\u7684OpenGL\u7248\u672c\u652f\u6301\u7684\u60c5\u51b5\u4e0b\u65e0\u6cd5\u8fd0\u884c\u3002\u6211\u4eec\u5c06\u4e3b\u7248\u672c\u53f7(Major)\u548c\u6b21\u7248\u672c\u53f7(Minor)\u90fd\u8bbe\u4e3a3\u3002\u6211\u4eec\u540c\u6837\u660e\u786e\u544a\u8bc9GLFW\u6211\u4eec\u4f7f\u7528\u7684\u662f\u6838\u5fc3\u6a21\u5f0f(Core-profile)\u3002\u660e\u786e\u544a\u8bc9GLFW\u6211\u4eec\u9700\u8981\u4f7f\u7528\u6838\u5fc3\u6a21\u5f0f\u610f\u5473\u7740\u6211\u4eec\u53ea\u80fd\u4f7f\u7528OpenGL\u529f\u80fd\u7684\u4e00\u4e2a\u5b50\u96c6\uff08\u6ca1\u6709\u6211\u4eec\u5df2\u4e0d\u518d\u9700\u8981\u7684\u5411\u540e\u517c\u5bb9\u7279\u6027\uff09\u3002\u5982\u679c\u4f7f\u7528\u7684\u662fMac OS X\u7cfb\u7edf\uff0c\u4f60\u8fd8\u9700\u8981\u52a0\u4e0b\u9762\u8fd9\u884c\u4ee3\u7801\u5230\u4f60\u7684\u521d\u59cb\u5316\u4ee3\u7801\u4e2d\u8fd9\u4e9b\u914d\u7f6e\u624d\u80fd\u8d77\u4f5c\u7528\uff08\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u89e3\u9664\u6ce8\u91ca\uff09\uff1a glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE); Important \u8bf7\u786e\u8ba4\u60a8\u7684\u7cfb\u7edf\u652f\u6301OpenGL3.3\u6216\u66f4\u9ad8\u7248\u672c\uff0c\u5426\u5219\u6b64\u5e94\u7528\u6709\u53ef\u80fd\u4f1a\u5d29\u6e83\u6216\u8005\u51fa\u73b0\u4e0d\u53ef\u9884\u77e5\u7684\u9519\u8bef\u3002\u5982\u679c\u60f3\u8981\u67e5\u770bOpenGL\u7248\u672c\u7684\u8bdd\uff0c\u5728Linux\u4e0a\u8fd0\u884c glxinfo \uff0c\u6216\u8005\u5728Windows\u4e0a\u4f7f\u7528\u5176\u5b83\u7684\u5de5\u5177\uff08\u4f8b\u5982 OpenGL Extension Viewer \uff09\u3002\u5982\u679c\u4f60\u7684OpenGL\u7248\u672c\u4f4e\u4e8e3.3\uff0c\u68c0\u67e5\u4e00\u4e0b\u663e\u5361\u662f\u5426\u652f\u6301OpenGL 3.3+\uff08\u4e0d\u652f\u6301\u7684\u8bdd\u4f60\u7684\u663e\u5361\u771f\u7684\u592a\u8001\u4e86\uff09\uff0c\u5e76\u66f4\u65b0\u4f60\u7684\u9a71\u52a8\u7a0b\u5e8f\uff0c\u6709\u5fc5\u8981\u7684\u8bdd\u8bf7\u66f4\u65b0\u663e\u5361\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7a97\u53e3\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u7a97\u53e3\u5bf9\u8c61\u5b58\u653e\u4e86\u6240\u6709\u548c\u7a97\u53e3\u76f8\u5173\u7684\u6570\u636e\uff0c\u800c\u4e14\u4f1a\u88abGLFW\u7684\u5176\u4ed6\u51fd\u6570\u9891\u7e41\u5730\u7528\u5230\u3002 GLFWwindow* window = glfwCreateWindow(800, 600, \"LearnOpenGL\", NULL, NULL); if (window == NULL) { std::cout << \"Failed to create GLFW window\" << std::endl; glfwTerminate(); return -1; } glfwMakeContextCurrent(window); glfwCreateWindow \u51fd\u6570\u9700\u8981\u7a97\u53e3\u7684\u5bbd\u548c\u9ad8\u4f5c\u4e3a\u5b83\u7684\u524d\u4e24\u4e2a\u53c2\u6570\u3002\u7b2c\u4e09\u4e2a\u53c2\u6570\u8868\u793a\u8fd9\u4e2a\u7a97\u53e3\u7684\u540d\u79f0\uff08\u6807\u9898\uff09\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 \"LearnOpenGL\" \uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4f60\u559c\u6b22\u7684\u540d\u79f0\u3002\u6700\u540e\u4e24\u4e2a\u53c2\u6570\u6211\u4eec\u6682\u65f6\u5ffd\u7565\u3002\u8fd9\u4e2a\u51fd\u6570\u5c06\u4f1a\u8fd4\u56de\u4e00\u4e2a GLFWwindow \u5bf9\u8c61\uff0c\u6211\u4eec\u4f1a\u5728\u5176\u5b83\u7684GLFW\u64cd\u4f5c\u4e2d\u4f7f\u7528\u5230\u3002\u521b\u5efa\u5b8c\u7a97\u53e3\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u77e5GLFW\u5c06\u6211\u4eec\u7a97\u53e3\u7684\u4e0a\u4e0b\u6587\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7ebf\u7a0b\u7684\u4e3b\u4e0a\u4e0b\u6587\u4e86\u3002 GLAD \u5728\u4e4b\u524d\u7684\u6559\u7a0b\u4e2d\u5df2\u7ecf\u63d0\u5230\u8fc7\uff0cGLAD\u662f\u7528\u6765\u7ba1\u7406OpenGL\u7684\u51fd\u6570\u6307\u9488\u7684\uff0c\u6240\u4ee5\u5728\u8c03\u7528\u4efb\u4f55OpenGL\u7684\u51fd\u6570\u4e4b\u524d\u6211\u4eec\u9700\u8981\u521d\u59cb\u5316GLAD\u3002 if (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress)) { std::cout << \"Failed to initialize GLAD\" << std::endl; return -1; } \u6211\u4eec\u7ed9GLAD\u4f20\u5165\u4e86\u7528\u6765\u52a0\u8f7d\u7cfb\u7edf\u76f8\u5173\u7684OpenGL\u51fd\u6570\u6307\u9488\u5730\u5740\u7684\u51fd\u6570\u3002GLFW\u7ed9\u6211\u4eec\u7684\u662f glfwGetProcAddress \uff0c\u5b83\u6839\u636e\u6211\u4eec\u7f16\u8bd1\u7684\u7cfb\u7edf\u5b9a\u4e49\u4e86\u6b63\u786e\u7684\u51fd\u6570\u3002 \u89c6\u53e3 \u5728\u6211\u4eec\u5f00\u59cb\u6e32\u67d3\u4e4b\u524d\u8fd8\u6709\u4e00\u4ef6\u91cd\u8981\u7684\u4e8b\u60c5\u8981\u505a\uff0c\u6211\u4eec\u5fc5\u987b\u544a\u8bc9OpenGL\u6e32\u67d3\u7a97\u53e3\u7684\u5c3a\u5bf8\u5927\u5c0f\uff0c\u5373\u89c6\u53e3(Viewport)\uff0c\u8fd9\u6837OpenGL\u624d\u53ea\u80fd\u77e5\u9053\u600e\u6837\u6839\u636e\u7a97\u53e3\u5927\u5c0f\u663e\u793a\u6570\u636e\u548c\u5750\u6807\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 glViewport \u51fd\u6570\u6765\u8bbe\u7f6e\u89c6\u53e3\u7684 \u5c3a\u5bf8 (Dimension)\uff1a glViewport(0, 0, 800, 600); glViewport \u51fd\u6570\u524d\u4e24\u4e2a\u53c2\u6570\u63a7\u5236\u7a97\u53e3\u5de6\u4e0b\u89d2\u7684\u4f4d\u7f6e\u3002\u7b2c\u4e09\u4e2a\u548c\u7b2c\u56db\u4e2a\u53c2\u6570\u63a7\u5236\u6e32\u67d3\u7a97\u53e3\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff08\u50cf\u7d20\uff09\u3002 \u6211\u4eec\u5b9e\u9645\u4e0a\u4e5f\u53ef\u4ee5\u5c06\u89c6\u53e3\u7684\u7ef4\u5ea6\u8bbe\u7f6e\u4e3a\u6bd4GLFW\u7684\u7ef4\u5ea6\u5c0f\uff0c\u8fd9\u6837\u5b50\u4e4b\u540e\u6240\u6709\u7684OpenGL\u6e32\u67d3\u5c06\u4f1a\u5728\u4e00\u4e2a\u66f4\u5c0f\u7684\u7a97\u53e3\u4e2d\u663e\u793a\uff0c\u8fd9\u6837\u5b50\u7684\u8bdd\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u4e00\u4e9b\u5176\u5b83\u5143\u7d20\u663e\u793a\u5728OpenGL\u89c6\u53e3\u4e4b\u5916\u3002 Important OpenGL\u5e55\u540e\u4f7f\u7528 glViewport \u4e2d\u5b9a\u4e49\u7684\u4f4d\u7f6e\u548c\u5bbd\u9ad8\u8fdb\u884c2D\u5750\u6807\u7684\u8f6c\u6362\uff0c\u5c06OpenGL\u4e2d\u7684\u4f4d\u7f6e\u5750\u6807\u8f6c\u6362\u4e3a\u4f60\u7684\u5c4f\u5e55\u5750\u6807\u3002\u4f8b\u5982\uff0cOpenGL\u4e2d\u7684\u5750\u6807(-0.5, 0.5)\u6709\u53ef\u80fd\uff08\u6700\u7ec8\uff09\u88ab\u6620\u5c04\u4e3a\u5c4f\u5e55\u4e2d\u7684\u5750\u6807(200,450)\u3002\u6ce8\u610f\uff0c\u5904\u7406\u8fc7\u7684OpenGL\u5750\u6807\u8303\u56f4\u53ea\u4e3a-1\u52301\uff0c\u56e0\u6b64\u6211\u4eec\u4e8b\u5b9e\u4e0a\u5c06(-1\u52301)\u8303\u56f4\u5185\u7684\u5750\u6807\u6620\u5c04\u5230(0, 800)\u548c(0, 600)\u3002 \u7136\u800c\uff0c\u5f53\u7528\u6237\u6539\u53d8\u7a97\u53e3\u7684\u5927\u5c0f\u7684\u65f6\u5019\uff0c\u89c6\u53e3\u4e5f\u5e94\u8be5\u88ab\u8c03\u6574\u3002\u6211\u4eec\u53ef\u4ee5\u5bf9\u7a97\u53e3\u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\u51fd\u6570(Callback Function)\uff0c\u5b83\u4f1a\u5728\u6bcf\u6b21\u7a97\u53e3\u5927\u5c0f\u88ab\u8c03\u6574\u7684\u65f6\u5019\u88ab\u8c03\u7528\u3002\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a void framebuffer_size_callback(GLFWwindow* window, int width, int height); \u8fd9\u4e2a\u5e27\u7f13\u51b2\u5927\u5c0f\u51fd\u6570\u9700\u8981\u4e00\u4e2a GLFWwindow \u4f5c\u4e3a\u5b83\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u4ee5\u53ca\u4e24\u4e2a\u6574\u6570\u8868\u793a\u7a97\u53e3\u7684\u65b0\u7ef4\u5ea6\u3002\u6bcf\u5f53\u7a97\u53e3\u6539\u53d8\u5927\u5c0f\uff0cGLFW\u4f1a\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u5e76\u586b\u5145\u76f8\u5e94\u7684\u53c2\u6570\u4f9b\u4f60\u5904\u7406\u3002 void framebuffer_size_callback(GLFWwindow* window, int width, int height) { glViewport(0, 0, width, height); } \u6211\u4eec\u8fd8\u9700\u8981\u6ce8\u518c\u8fd9\u4e2a\u51fd\u6570\uff0c\u544a\u8bc9GLFW\u6211\u4eec\u5e0c\u671b\u6bcf\u5f53\u7a97\u53e3\u8c03\u6574\u5927\u5c0f\u7684\u65f6\u5019\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff1a glfwSetFramebufferSizeCallback(window, framebuffer_size_callback); \u5f53\u7a97\u53e3\u88ab\u7b2c\u4e00\u6b21\u663e\u793a\u7684\u65f6\u5019 framebuffer_size_callback \u4e5f\u4f1a\u88ab\u8c03\u7528\u3002\u5bf9\u4e8e\u89c6\u7f51\u819c(Retina)\u663e\u793a\u5c4f\uff0c width \u548c height \u90fd\u4f1a\u660e\u663e\u6bd4\u539f\u8f93\u5165\u503c\u66f4\u9ad8\u4e00\u70b9\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u6211\u4eec\u7684\u51fd\u6570\u6ce8\u518c\u5230\u5176\u5b83\u5f88\u591a\u7684\u56de\u8c03\u51fd\u6570\u4e2d\u3002\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u6765\u5904\u7406\u624b\u67c4\u8f93\u5165\u53d8\u5316\uff0c\u5904\u7406\u9519\u8bef\u6d88\u606f\u7b49\u3002\u6211\u4eec\u4f1a\u5728\u521b\u5efa\u7a97\u53e3\u4e4b\u540e\uff0c\u6e32\u67d3\u5faa\u73af\u521d\u59cb\u5316\u4e4b\u524d\u6ce8\u518c\u8fd9\u4e9b\u56de\u8c03\u51fd\u6570\u3002 \u51c6\u5907\u597d\u4f60\u7684\u5f15\u64ce \u6211\u4eec\u53ef\u4e0d\u5e0c\u671b\u53ea\u7ed8\u5236\u4e00\u4e2a\u56fe\u50cf\u4e4b\u540e\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u5c31\u7acb\u5373\u9000\u51fa\u5e76\u5173\u95ed\u7a97\u53e3\u3002\u6211\u4eec\u5e0c\u671b\u7a0b\u5e8f\u5728\u6211\u4eec\u4e3b\u52a8\u5173\u95ed\u5b83\u4e4b\u524d\u4e0d\u65ad\u7ed8\u5236\u56fe\u50cf\u5e76\u80fd\u591f\u63a5\u53d7\u7528\u6237\u8f93\u5165\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5728\u7a0b\u5e8f\u4e2d\u6dfb\u52a0\u4e00\u4e2awhile\u5faa\u73af\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u79f0\u4e4b\u4e3a \u6e32\u67d3\u5faa\u73af (Render Loop)\uff0c\u5b83\u80fd\u5728\u6211\u4eec\u8ba9GLFW\u9000\u51fa\u524d\u4e00\u76f4\u4fdd\u6301\u8fd0\u884c\u3002\u4e0b\u9762\u51e0\u884c\u7684\u4ee3\u7801\u5c31\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u6e32\u67d3\u5faa\u73af\uff1a while(!glfwWindowShouldClose(window)) { glfwSwapBuffers(window); glfwPollEvents(); } glfwWindowShouldClose \u51fd\u6570\u5728\u6211\u4eec\u6bcf\u6b21\u5faa\u73af\u7684\u5f00\u59cb\u524d\u68c0\u67e5\u4e00\u6b21GLFW\u662f\u5426\u88ab\u8981\u6c42\u9000\u51fa\uff0c\u5982\u679c\u662f\u7684\u8bdd\uff0c\u8be5\u51fd\u6570\u8fd4\u56de true \uff0c\u6e32\u67d3\u5faa\u73af\u5c06\u505c\u6b62\u8fd0\u884c\uff0c\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5173\u95ed\u5e94\u7528\u7a0b\u5e8f\u3002 glfwPollEvents \u51fd\u6570\u68c0\u67e5\u6709\u6ca1\u6709\u89e6\u53d1\u4ec0\u4e48\u4e8b\u4ef6\uff08\u6bd4\u5982\u952e\u76d8\u8f93\u5165\u3001\u9f20\u6807\u79fb\u52a8\u7b49\uff09\u3001\u66f4\u65b0\u7a97\u53e3\u72b6\u6001\uff0c\u5e76\u8c03\u7528\u5bf9\u5e94\u7684\u56de\u8c03\u51fd\u6570\uff08\u53ef\u4ee5\u901a\u8fc7\u56de\u8c03\u65b9\u6cd5\u624b\u52a8\u8bbe\u7f6e\uff09\u3002 glfwSwapBuffers \u51fd\u6570\u4f1a\u4ea4\u6362\u989c\u8272\u7f13\u51b2\uff08\u5b83\u662f\u4e00\u4e2a\u50a8\u5b58\u7740GLFW\u7a97\u53e3\u6bcf\u4e00\u4e2a\u50cf\u7d20\u989c\u8272\u503c\u7684\u5927\u7f13\u51b2\uff09\uff0c\u5b83\u5728\u8fd9\u4e00\u8fed\u4ee3\u4e2d\u88ab\u7528\u6765\u7ed8\u5236\uff0c\u5e76\u4e14\u5c06\u4f1a\u4f5c\u4e3a\u8f93\u51fa\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\u3002 Important \u53cc\u7f13\u51b2(Double Buffer) \u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u5355\u7f13\u51b2\u7ed8\u56fe\u65f6\u53ef\u80fd\u4f1a\u5b58\u5728\u56fe\u50cf\u95ea\u70c1\u7684\u95ee\u9898\u3002 \u8fd9\u662f\u56e0\u4e3a\u751f\u6210\u7684\u56fe\u50cf\u4e0d\u662f\u4e00\u4e0b\u5b50\u88ab\u7ed8\u5236\u51fa\u6765\u7684\uff0c\u800c\u662f\u6309\u7167\u4ece\u5de6\u5230\u53f3\uff0c\u7531\u4e0a\u800c\u4e0b\u9010\u50cf\u7d20\u5730\u7ed8\u5236\u800c\u6210\u7684\u3002\u6700\u7ec8\u56fe\u50cf\u4e0d\u662f\u5728\u77ac\u95f4\u663e\u793a\u7ed9\u7528\u6237\uff0c\u800c\u662f\u901a\u8fc7\u4e00\u6b65\u4e00\u6b65\u751f\u6210\u7684\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u6e32\u67d3\u7684\u7ed3\u679c\u5f88\u4e0d\u771f\u5b9e\u3002\u4e3a\u4e86\u89c4\u907f\u8fd9\u4e9b\u95ee\u9898\uff0c\u6211\u4eec\u5e94\u7528\u53cc\u7f13\u51b2\u6e32\u67d3\u7a97\u53e3\u5e94\u7528\u7a0b\u5e8f\u3002 \u524d \u7f13\u51b2\u4fdd\u5b58\u7740\u6700\u7ec8\u8f93\u51fa\u7684\u56fe\u50cf\uff0c\u5b83\u4f1a\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\uff1b\u800c\u6240\u6709\u7684\u7684\u6e32\u67d3\u6307\u4ee4\u90fd\u4f1a\u5728 \u540e \u7f13\u51b2\u4e0a\u7ed8\u5236\u3002\u5f53\u6240\u6709\u7684\u6e32\u67d3\u6307\u4ee4\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u6211\u4eec \u4ea4\u6362 (Swap)\u524d\u7f13\u51b2\u548c\u540e\u7f13\u51b2\uff0c\u8fd9\u6837\u56fe\u50cf\u5c31\u7acb\u5373\u5448\u663e\u51fa\u6765\uff0c\u4e4b\u524d\u63d0\u5230\u7684\u4e0d\u771f\u5b9e\u611f\u5c31\u6d88\u9664\u4e86\u3002 \u6700\u540e\u4e00\u4ef6\u4e8b \u5f53\u6e32\u67d3\u5faa\u73af\u7ed3\u675f\u540e\u6211\u4eec\u9700\u8981\u6b63\u786e\u91ca\u653e/\u5220\u9664\u4e4b\u524d\u7684\u5206\u914d\u7684\u6240\u6709\u8d44\u6e90\u3002\u6211\u4eec\u53ef\u4ee5\u5728 main \u51fd\u6570\u7684\u6700\u540e\u8c03\u7528 glfwTerminate \u51fd\u6570\u6765\u5b8c\u6210\u3002 glfwTerminate(); return 0; \u8fd9\u6837\u4fbf\u80fd\u6e05\u7406\u6240\u6709\u7684\u8d44\u6e90\u5e76\u6b63\u786e\u5730\u9000\u51fa\u5e94\u7528\u7a0b\u5e8f\u3002\u73b0\u5728\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u7f16\u8bd1\u5e76\u8fd0\u884c\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u4e86\uff0c\u5982\u679c\u6ca1\u505a\u9519\u7684\u8bdd\uff0c\u4f60\u5c06\u4f1a\u770b\u5230\u5982\u4e0b\u7684\u8f93\u51fa\uff1a \u5982\u679c\u4f60\u770b\u89c1\u4e86\u4e00\u4e2a\u975e\u5e38\u65e0\u804a\u7684\u9ed1\u8272\u7a97\u53e3\uff0c\u90a3\u4e48\u5c31\u5bf9\u4e86\uff01\u5982\u679c\u4f60\u6ca1\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u6216\u8005\u4f60\u4e0d\u77e5\u9053\u600e\u4e48\u628a\u6240\u6709\u4e1c\u897f\u653e\u5230\u4e00\u8d77\uff0c\u8bf7\u5230 \u8fd9\u91cc \u53c2\u8003\u6e90\u4ee3\u7801\u3002 \u5982\u679c\u7a0b\u5e8f\u7f16\u8bd1\u6709\u95ee\u9898\uff0c\u8bf7\u5148\u68c0\u67e5\u8fde\u63a5\u5668\u9009\u9879\u662f\u5426\u6b63\u786e\uff0cIDE\u4e2d\u662f\u5426\u5bfc\u5165\u4e86\u6b63\u786e\u7684\u76ee\u5f55\uff08\u524d\u9762\u6559\u7a0b\u89e3\u91ca\u8fc7\uff09\u3002\u5e76\u4e14\u8bf7\u786e\u8ba4\u4f60\u7684\u4ee3\u7801\u662f\u5426\u6b63\u786e\uff0c\u76f4\u63a5\u5bf9\u7167\u4e0a\u9762\u63d0\u4f9b\u7684\u6e90\u4ee3\u7801\u5c31\u884c\u4e86\u3002\u5982\u679c\u8fd8\u662f\u6709\u95ee\u9898\uff0c\u6b22\u8fce\u8bc4\u8bba\uff0c\u6211\u6216\u8005\u5176\u4ed6\u4eba\u53ef\u80fd\u4f1a\u5e2e\u52a9\u4f60\u7684\u3002 \u8f93\u5165 \u6211\u4eec\u540c\u6837\u4e5f\u5e0c\u671b\u80fd\u591f\u5728GLFW\u4e2d\u5b9e\u73b0\u4e00\u4e9b\u8f93\u5165\u63a7\u5236\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528GLFW\u7684\u51e0\u4e2a\u8f93\u5165\u51fd\u6570\u6765\u5b8c\u6210\u3002\u6211\u4eec\u5c06\u4f1a\u4f7f\u7528GLFW\u7684 glfwGetKey \u51fd\u6570\uff0c\u5b83\u9700\u8981\u4e00\u4e2a\u7a97\u53e3\u4ee5\u53ca\u4e00\u4e2a\u6309\u952e\u4f5c\u4e3a\u8f93\u5165\u3002\u8fd9\u4e2a\u51fd\u6570\u5c06\u4f1a\u8fd4\u56de\u8fd9\u4e2a\u6309\u952e\u662f\u5426\u6b63\u5728\u88ab\u6309\u4e0b\u3002\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a processInput \u51fd\u6570\u6765\u8ba9\u6240\u6709\u7684\u8f93\u5165\u4ee3\u7801\u4fdd\u6301\u6574\u6d01\u3002 void processInput(GLFWwindow *window) { if(glfwGetKey(window, GLFW_KEY_ESCAPE) == GLFW_PRESS) glfwSetWindowShouldClose(window, true); } \u8fd9\u91cc\u6211\u4eec\u68c0\u67e5\u7528\u6237\u662f\u5426\u6309\u4e0b\u4e86\u8fd4\u56de\u952e(Esc)\uff08\u5982\u679c\u6ca1\u6709\u6309\u4e0b\uff0c glfwGetKey \u5c06\u4f1a\u8fd4\u56de GLFW_RELEASE \u3002\u5982\u679c\u7528\u6237\u7684\u786e\u6309\u4e0b\u4e86\u8fd4\u56de\u952e\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4f7f\u7528 glfwSetwindowShouldClose \u628a WindowShouldClose \u5c5e\u6027\u8bbe\u7f6e\u4e3a true \u6765\u5173\u95edGLFW\u3002\u4e0b\u4e00\u6b21while\u5faa\u73af\u7684\u6761\u4ef6\u68c0\u6d4b\u5c06\u4f1a\u5931\u8d25\uff0c\u7a0b\u5e8f\u5c06\u5173\u95ed\u3002 \u6211\u4eec\u63a5\u4e0b\u6765\u5728\u6e32\u67d3\u5faa\u73af\u7684\u6bcf\u4e00\u4e2a\u8fed\u4ee3\u4e2d\u8c03\u7528 processInput \uff1a while (!glfwWindowShouldClose(window)) { processInput(window); glfwSwapBuffers(window); glfwPollEvents(); } \u8fd9\u5c31\u7ed9\u6211\u4eec\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u65b9\u5f0f\u6765\u68c0\u6d4b\u7279\u5b9a\u7684\u952e\u662f\u5426\u88ab\u6309\u4e0b\uff0c\u5e76\u5728\u6bcf\u4e00\u5e27\u505a\u51fa\u5904\u7406\u3002 \u6e32\u67d3 \u6211\u4eec\u8981\u628a\u6240\u6709\u7684\u6e32\u67d3(Rendering)\u64cd\u4f5c\u653e\u5230\u6e32\u67d3\u5faa\u73af\u4e2d\uff0c\u56e0\u4e3a\u6211\u4eec\u60f3\u8ba9\u8fd9\u4e9b\u6e32\u67d3\u6307\u4ee4\u5728\u6bcf\u6b21\u6e32\u67d3\u5faa\u73af\u8fed\u4ee3\u7684\u65f6\u5019\u90fd\u80fd\u88ab\u6267\u884c\u3002\u4ee3\u7801\u5c06\u4f1a\u662f\u8fd9\u6837\u7684\uff1a // \u6e32\u67d3\u5faa\u73af while(!glfwWindowShouldClose(window)) { // \u8f93\u5165 processInput(window); // \u6e32\u67d3\u6307\u4ee4 ... // \u68c0\u67e5\u5e76\u8c03\u7528\u4e8b\u4ef6\uff0c\u4ea4\u6362\u7f13\u51b2 glfwPollEvents(); glfwSwapBuffers(window); } \u4e3a\u4e86\u6d4b\u8bd5\u4e00\u5207\u90fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u989c\u8272\u6e05\u7a7a\u5c4f\u5e55\u3002\u5728\u6bcf\u4e2a\u65b0\u7684\u6e32\u67d3\u8fed\u4ee3\u5f00\u59cb\u7684\u65f6\u5019\u6211\u4eec\u603b\u662f\u5e0c\u671b\u6e05\u5c4f\uff0c\u5426\u5219\u6211\u4eec\u4ecd\u80fd\u770b\u89c1\u4e0a\u4e00\u6b21\u8fed\u4ee3\u7684\u6e32\u67d3\u7ed3\u679c\uff08\u8fd9\u53ef\u80fd\u662f\u4f60\u60f3\u8981\u7684\u6548\u679c\uff0c\u4f46\u901a\u5e38\u8fd9\u4e0d\u662f\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 glClear \u51fd\u6570\u6765\u6e05\u7a7a\u5c4f\u5e55\u7684\u989c\u8272\u7f13\u51b2\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a\u7f13\u51b2\u4f4d(Buffer Bit)\u6765\u6307\u5b9a\u8981\u6e05\u7a7a\u7684\u7f13\u51b2\uff0c\u53ef\u80fd\u7684\u7f13\u51b2\u4f4d\u6709 GL_COLOR_BUFFER_BIT \uff0c GL_DEPTH_BUFFER_BIT \u548c GL_STENCIL_BUFFER_BIT \u3002\u7531\u4e8e\u73b0\u5728\u6211\u4eec\u53ea\u5173\u5fc3\u989c\u8272\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u6e05\u7a7a\u989c\u8272\u7f13\u51b2\u3002 glClearColor(0.2f, 0.3f, 0.3f, 1.0f); glClear(GL_COLOR_BUFFER_BIT); \u6ce8\u610f\uff0c\u9664\u4e86 glClear \u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u8c03\u7528\u4e86 glClearColor \u6765\u8bbe\u7f6e\u6e05\u7a7a\u5c4f\u5e55\u6240\u7528\u7684\u989c\u8272\u3002\u5f53\u8c03\u7528 glClear \u51fd\u6570\uff0c\u6e05\u9664\u989c\u8272\u7f13\u51b2\u4e4b\u540e\uff0c\u6574\u4e2a\u989c\u8272\u7f13\u51b2\u90fd\u4f1a\u88ab\u586b\u5145\u4e3a glClearColor \u91cc\u6240\u8bbe\u7f6e\u7684\u989c\u8272\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5c4f\u5e55\u8bbe\u7f6e\u4e3a\u4e86\u7c7b\u4f3c\u9ed1\u677f\u7684\u6df1\u84dd\u7eff\u8272\u3002 Important \u4f60\u5e94\u8be5\u80fd\u591f\u56de\u5fc6\u8d77\u6765\u6211\u4eec\u5728 OpenGL \u8fd9\u8282\u6559\u7a0b\u7684\u5185\u5bb9\uff0c glClearColor \u51fd\u6570\u662f\u4e00\u4e2a \u72b6\u6001\u8bbe\u7f6e \u51fd\u6570\uff0c\u800c glClear \u51fd\u6570\u5219\u662f\u4e00\u4e2a \u72b6\u6001\u4f7f\u7528 \u7684\u51fd\u6570\uff0c\u5b83\u4f7f\u7528\u4e86\u5f53\u524d\u7684\u72b6\u6001\u6765\u83b7\u53d6\u5e94\u8be5\u6e05\u9664\u4e3a\u7684\u989c\u8272\u3002 \u8fd9\u4e2a\u7a0b\u5e8f\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u3002 \u597d\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u505a\u597d\u5f00\u59cb\u5728\u6e32\u67d3\u5faa\u73af\u4e2d\u6dfb\u52a0\u8bb8\u591a\u6e32\u67d3\u8c03\u7528\u7684\u51c6\u5907\u4e86\uff0c\u4f46\u8fd9\u662f \u4e0b\u4e00\u8282 \u6559\u7a0b\u4e86\uff0c\u8fd9\u4e00\u8282\u7684\u5185\u5bb9\u5df2\u7ecf\u592a\u591a\u4e86\u3002","title":"\u4f60\u597d\uff0c\u7a97\u53e3"},{"location":"01%20Getting%20started/03%20Hello%20Window/#_1","text":"\u539f\u6587 Hello Window \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Geequlim, Krasjet \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u8ba9\u6211\u4eec\u8bd5\u8bd5\u80fd\u4e0d\u80fd\u8ba9GLFW\u6b63\u5e38\u5de5\u4f5c\u3002\u9996\u5148\uff0c\u65b0\u5efa\u4e00\u4e2a .cpp \u6587\u4ef6\uff0c\u7136\u540e\u628a\u4e0b\u9762\u7684\u4ee3\u7801\u7c98\u8d34\u5230\u8be5\u6587\u4ef6\u7684\u6700\u524d\u9762\u3002 #include <glad/glad.h> #include <GLFW/glfw3.h> Attention \u8bf7\u786e\u8ba4\u662f\u5728\u5305\u542bGLFW\u7684\u5934\u6587\u4ef6\u4e4b\u524d\u5305\u542b\u4e86GLAD\u7684\u5934\u6587\u4ef6\u3002GLAD\u7684\u5934\u6587\u4ef6\u5305\u542b\u4e86\u6b63\u786e\u7684OpenGL\u5934\u6587\u4ef6\uff08\u4f8b\u5982 GL/gl.h \uff09\uff0c\u6240\u4ee5\u9700\u8981\u5728\u5176\u5b83\u4f9d\u8d56\u4e8eOpenGL\u7684\u5934\u6587\u4ef6\u4e4b\u524d\u5305\u542bGLAD\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa main \u51fd\u6570\uff0c\u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\u6211\u4eec\u5c06\u4f1a\u5b9e\u4f8b\u5316GLFW\u7a97\u53e3\uff1a int main() { glfwInit(); glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3); glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3); glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE); //glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE); return 0; } \u9996\u5148\uff0c\u6211\u4eec\u5728main\u51fd\u6570\u4e2d\u8c03\u7528 glfwInit \u51fd\u6570\u6765\u521d\u59cb\u5316GLFW\uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 glfwWindowHint \u51fd\u6570\u6765\u914d\u7f6eGLFW\u3002 glfwWindowHint \u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4ee3\u8868\u9009\u9879\u7684\u540d\u79f0\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u5f88\u591a\u4ee5 GLFW_ \u5f00\u5934\u7684\u679a\u4e3e\u503c\u4e2d\u9009\u62e9\uff1b\u7b2c\u4e8c\u4e2a\u53c2\u6570\u63a5\u53d7\u4e00\u4e2a\u6574\u578b\uff0c\u7528\u6765\u8bbe\u7f6e\u8fd9\u4e2a\u9009\u9879\u7684\u503c\u3002\u8be5\u51fd\u6570\u7684\u6240\u6709\u7684\u9009\u9879\u4ee5\u53ca\u5bf9\u5e94\u7684\u503c\u90fd\u53ef\u4ee5\u5728 GLFW\u2019s window handling \u8fd9\u7bc7\u6587\u6863\u4e2d\u627e\u5230\u3002\u5982\u679c\u4f60\u73b0\u5728\u7f16\u8bd1\u4f60\u7684cpp\u6587\u4ef6\u4f1a\u5f97\u5230\u5927\u91cf\u7684 undefined reference (\u672a\u5b9a\u4e49\u7684\u5f15\u7528)\u9519\u8bef\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u5e76\u672a\u987a\u5229\u5730\u94fe\u63a5GLFW\u5e93\u3002 \u7531\u4e8e\u672c\u7ad9\u7684\u6559\u7a0b\u90fd\u662f\u57fa\u4e8eOpenGL 3.3\u7248\u672c\u5c55\u5f00\u8ba8\u8bba\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u544a\u8bc9GLFW\u6211\u4eec\u8981\u4f7f\u7528\u7684OpenGL\u7248\u672c\u662f3.3\uff0c\u8fd9\u6837GLFW\u4f1a\u5728\u521b\u5efaOpenGL\u4e0a\u4e0b\u6587\u65f6\u505a\u51fa\u9002\u5f53\u7684\u8c03\u6574\u3002\u8fd9\u4e5f\u53ef\u4ee5\u786e\u4fdd\u7528\u6237\u5728\u6ca1\u6709\u9002\u5f53\u7684OpenGL\u7248\u672c\u652f\u6301\u7684\u60c5\u51b5\u4e0b\u65e0\u6cd5\u8fd0\u884c\u3002\u6211\u4eec\u5c06\u4e3b\u7248\u672c\u53f7(Major)\u548c\u6b21\u7248\u672c\u53f7(Minor)\u90fd\u8bbe\u4e3a3\u3002\u6211\u4eec\u540c\u6837\u660e\u786e\u544a\u8bc9GLFW\u6211\u4eec\u4f7f\u7528\u7684\u662f\u6838\u5fc3\u6a21\u5f0f(Core-profile)\u3002\u660e\u786e\u544a\u8bc9GLFW\u6211\u4eec\u9700\u8981\u4f7f\u7528\u6838\u5fc3\u6a21\u5f0f\u610f\u5473\u7740\u6211\u4eec\u53ea\u80fd\u4f7f\u7528OpenGL\u529f\u80fd\u7684\u4e00\u4e2a\u5b50\u96c6\uff08\u6ca1\u6709\u6211\u4eec\u5df2\u4e0d\u518d\u9700\u8981\u7684\u5411\u540e\u517c\u5bb9\u7279\u6027\uff09\u3002\u5982\u679c\u4f7f\u7528\u7684\u662fMac OS X\u7cfb\u7edf\uff0c\u4f60\u8fd8\u9700\u8981\u52a0\u4e0b\u9762\u8fd9\u884c\u4ee3\u7801\u5230\u4f60\u7684\u521d\u59cb\u5316\u4ee3\u7801\u4e2d\u8fd9\u4e9b\u914d\u7f6e\u624d\u80fd\u8d77\u4f5c\u7528\uff08\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u89e3\u9664\u6ce8\u91ca\uff09\uff1a glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE); Important \u8bf7\u786e\u8ba4\u60a8\u7684\u7cfb\u7edf\u652f\u6301OpenGL3.3\u6216\u66f4\u9ad8\u7248\u672c\uff0c\u5426\u5219\u6b64\u5e94\u7528\u6709\u53ef\u80fd\u4f1a\u5d29\u6e83\u6216\u8005\u51fa\u73b0\u4e0d\u53ef\u9884\u77e5\u7684\u9519\u8bef\u3002\u5982\u679c\u60f3\u8981\u67e5\u770bOpenGL\u7248\u672c\u7684\u8bdd\uff0c\u5728Linux\u4e0a\u8fd0\u884c glxinfo \uff0c\u6216\u8005\u5728Windows\u4e0a\u4f7f\u7528\u5176\u5b83\u7684\u5de5\u5177\uff08\u4f8b\u5982 OpenGL Extension Viewer \uff09\u3002\u5982\u679c\u4f60\u7684OpenGL\u7248\u672c\u4f4e\u4e8e3.3\uff0c\u68c0\u67e5\u4e00\u4e0b\u663e\u5361\u662f\u5426\u652f\u6301OpenGL 3.3+\uff08\u4e0d\u652f\u6301\u7684\u8bdd\u4f60\u7684\u663e\u5361\u771f\u7684\u592a\u8001\u4e86\uff09\uff0c\u5e76\u66f4\u65b0\u4f60\u7684\u9a71\u52a8\u7a0b\u5e8f\uff0c\u6709\u5fc5\u8981\u7684\u8bdd\u8bf7\u66f4\u65b0\u663e\u5361\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7a97\u53e3\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u7a97\u53e3\u5bf9\u8c61\u5b58\u653e\u4e86\u6240\u6709\u548c\u7a97\u53e3\u76f8\u5173\u7684\u6570\u636e\uff0c\u800c\u4e14\u4f1a\u88abGLFW\u7684\u5176\u4ed6\u51fd\u6570\u9891\u7e41\u5730\u7528\u5230\u3002 GLFWwindow* window = glfwCreateWindow(800, 600, \"LearnOpenGL\", NULL, NULL); if (window == NULL) { std::cout << \"Failed to create GLFW window\" << std::endl; glfwTerminate(); return -1; } glfwMakeContextCurrent(window); glfwCreateWindow \u51fd\u6570\u9700\u8981\u7a97\u53e3\u7684\u5bbd\u548c\u9ad8\u4f5c\u4e3a\u5b83\u7684\u524d\u4e24\u4e2a\u53c2\u6570\u3002\u7b2c\u4e09\u4e2a\u53c2\u6570\u8868\u793a\u8fd9\u4e2a\u7a97\u53e3\u7684\u540d\u79f0\uff08\u6807\u9898\uff09\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 \"LearnOpenGL\" \uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4f60\u559c\u6b22\u7684\u540d\u79f0\u3002\u6700\u540e\u4e24\u4e2a\u53c2\u6570\u6211\u4eec\u6682\u65f6\u5ffd\u7565\u3002\u8fd9\u4e2a\u51fd\u6570\u5c06\u4f1a\u8fd4\u56de\u4e00\u4e2a GLFWwindow \u5bf9\u8c61\uff0c\u6211\u4eec\u4f1a\u5728\u5176\u5b83\u7684GLFW\u64cd\u4f5c\u4e2d\u4f7f\u7528\u5230\u3002\u521b\u5efa\u5b8c\u7a97\u53e3\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u77e5GLFW\u5c06\u6211\u4eec\u7a97\u53e3\u7684\u4e0a\u4e0b\u6587\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7ebf\u7a0b\u7684\u4e3b\u4e0a\u4e0b\u6587\u4e86\u3002","title":"\u4f60\u597d\uff0c\u7a97\u53e3"},{"location":"01%20Getting%20started/03%20Hello%20Window/#glad","text":"\u5728\u4e4b\u524d\u7684\u6559\u7a0b\u4e2d\u5df2\u7ecf\u63d0\u5230\u8fc7\uff0cGLAD\u662f\u7528\u6765\u7ba1\u7406OpenGL\u7684\u51fd\u6570\u6307\u9488\u7684\uff0c\u6240\u4ee5\u5728\u8c03\u7528\u4efb\u4f55OpenGL\u7684\u51fd\u6570\u4e4b\u524d\u6211\u4eec\u9700\u8981\u521d\u59cb\u5316GLAD\u3002 if (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress)) { std::cout << \"Failed to initialize GLAD\" << std::endl; return -1; } \u6211\u4eec\u7ed9GLAD\u4f20\u5165\u4e86\u7528\u6765\u52a0\u8f7d\u7cfb\u7edf\u76f8\u5173\u7684OpenGL\u51fd\u6570\u6307\u9488\u5730\u5740\u7684\u51fd\u6570\u3002GLFW\u7ed9\u6211\u4eec\u7684\u662f glfwGetProcAddress \uff0c\u5b83\u6839\u636e\u6211\u4eec\u7f16\u8bd1\u7684\u7cfb\u7edf\u5b9a\u4e49\u4e86\u6b63\u786e\u7684\u51fd\u6570\u3002","title":"GLAD"},{"location":"01%20Getting%20started/03%20Hello%20Window/#_2","text":"\u5728\u6211\u4eec\u5f00\u59cb\u6e32\u67d3\u4e4b\u524d\u8fd8\u6709\u4e00\u4ef6\u91cd\u8981\u7684\u4e8b\u60c5\u8981\u505a\uff0c\u6211\u4eec\u5fc5\u987b\u544a\u8bc9OpenGL\u6e32\u67d3\u7a97\u53e3\u7684\u5c3a\u5bf8\u5927\u5c0f\uff0c\u5373\u89c6\u53e3(Viewport)\uff0c\u8fd9\u6837OpenGL\u624d\u53ea\u80fd\u77e5\u9053\u600e\u6837\u6839\u636e\u7a97\u53e3\u5927\u5c0f\u663e\u793a\u6570\u636e\u548c\u5750\u6807\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 glViewport \u51fd\u6570\u6765\u8bbe\u7f6e\u89c6\u53e3\u7684 \u5c3a\u5bf8 (Dimension)\uff1a glViewport(0, 0, 800, 600); glViewport \u51fd\u6570\u524d\u4e24\u4e2a\u53c2\u6570\u63a7\u5236\u7a97\u53e3\u5de6\u4e0b\u89d2\u7684\u4f4d\u7f6e\u3002\u7b2c\u4e09\u4e2a\u548c\u7b2c\u56db\u4e2a\u53c2\u6570\u63a7\u5236\u6e32\u67d3\u7a97\u53e3\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff08\u50cf\u7d20\uff09\u3002 \u6211\u4eec\u5b9e\u9645\u4e0a\u4e5f\u53ef\u4ee5\u5c06\u89c6\u53e3\u7684\u7ef4\u5ea6\u8bbe\u7f6e\u4e3a\u6bd4GLFW\u7684\u7ef4\u5ea6\u5c0f\uff0c\u8fd9\u6837\u5b50\u4e4b\u540e\u6240\u6709\u7684OpenGL\u6e32\u67d3\u5c06\u4f1a\u5728\u4e00\u4e2a\u66f4\u5c0f\u7684\u7a97\u53e3\u4e2d\u663e\u793a\uff0c\u8fd9\u6837\u5b50\u7684\u8bdd\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u4e00\u4e9b\u5176\u5b83\u5143\u7d20\u663e\u793a\u5728OpenGL\u89c6\u53e3\u4e4b\u5916\u3002 Important OpenGL\u5e55\u540e\u4f7f\u7528 glViewport \u4e2d\u5b9a\u4e49\u7684\u4f4d\u7f6e\u548c\u5bbd\u9ad8\u8fdb\u884c2D\u5750\u6807\u7684\u8f6c\u6362\uff0c\u5c06OpenGL\u4e2d\u7684\u4f4d\u7f6e\u5750\u6807\u8f6c\u6362\u4e3a\u4f60\u7684\u5c4f\u5e55\u5750\u6807\u3002\u4f8b\u5982\uff0cOpenGL\u4e2d\u7684\u5750\u6807(-0.5, 0.5)\u6709\u53ef\u80fd\uff08\u6700\u7ec8\uff09\u88ab\u6620\u5c04\u4e3a\u5c4f\u5e55\u4e2d\u7684\u5750\u6807(200,450)\u3002\u6ce8\u610f\uff0c\u5904\u7406\u8fc7\u7684OpenGL\u5750\u6807\u8303\u56f4\u53ea\u4e3a-1\u52301\uff0c\u56e0\u6b64\u6211\u4eec\u4e8b\u5b9e\u4e0a\u5c06(-1\u52301)\u8303\u56f4\u5185\u7684\u5750\u6807\u6620\u5c04\u5230(0, 800)\u548c(0, 600)\u3002 \u7136\u800c\uff0c\u5f53\u7528\u6237\u6539\u53d8\u7a97\u53e3\u7684\u5927\u5c0f\u7684\u65f6\u5019\uff0c\u89c6\u53e3\u4e5f\u5e94\u8be5\u88ab\u8c03\u6574\u3002\u6211\u4eec\u53ef\u4ee5\u5bf9\u7a97\u53e3\u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\u51fd\u6570(Callback Function)\uff0c\u5b83\u4f1a\u5728\u6bcf\u6b21\u7a97\u53e3\u5927\u5c0f\u88ab\u8c03\u6574\u7684\u65f6\u5019\u88ab\u8c03\u7528\u3002\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a void framebuffer_size_callback(GLFWwindow* window, int width, int height); \u8fd9\u4e2a\u5e27\u7f13\u51b2\u5927\u5c0f\u51fd\u6570\u9700\u8981\u4e00\u4e2a GLFWwindow \u4f5c\u4e3a\u5b83\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u4ee5\u53ca\u4e24\u4e2a\u6574\u6570\u8868\u793a\u7a97\u53e3\u7684\u65b0\u7ef4\u5ea6\u3002\u6bcf\u5f53\u7a97\u53e3\u6539\u53d8\u5927\u5c0f\uff0cGLFW\u4f1a\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u5e76\u586b\u5145\u76f8\u5e94\u7684\u53c2\u6570\u4f9b\u4f60\u5904\u7406\u3002 void framebuffer_size_callback(GLFWwindow* window, int width, int height) { glViewport(0, 0, width, height); } \u6211\u4eec\u8fd8\u9700\u8981\u6ce8\u518c\u8fd9\u4e2a\u51fd\u6570\uff0c\u544a\u8bc9GLFW\u6211\u4eec\u5e0c\u671b\u6bcf\u5f53\u7a97\u53e3\u8c03\u6574\u5927\u5c0f\u7684\u65f6\u5019\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff1a glfwSetFramebufferSizeCallback(window, framebuffer_size_callback); \u5f53\u7a97\u53e3\u88ab\u7b2c\u4e00\u6b21\u663e\u793a\u7684\u65f6\u5019 framebuffer_size_callback \u4e5f\u4f1a\u88ab\u8c03\u7528\u3002\u5bf9\u4e8e\u89c6\u7f51\u819c(Retina)\u663e\u793a\u5c4f\uff0c width \u548c height \u90fd\u4f1a\u660e\u663e\u6bd4\u539f\u8f93\u5165\u503c\u66f4\u9ad8\u4e00\u70b9\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u6211\u4eec\u7684\u51fd\u6570\u6ce8\u518c\u5230\u5176\u5b83\u5f88\u591a\u7684\u56de\u8c03\u51fd\u6570\u4e2d\u3002\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u6765\u5904\u7406\u624b\u67c4\u8f93\u5165\u53d8\u5316\uff0c\u5904\u7406\u9519\u8bef\u6d88\u606f\u7b49\u3002\u6211\u4eec\u4f1a\u5728\u521b\u5efa\u7a97\u53e3\u4e4b\u540e\uff0c\u6e32\u67d3\u5faa\u73af\u521d\u59cb\u5316\u4e4b\u524d\u6ce8\u518c\u8fd9\u4e9b\u56de\u8c03\u51fd\u6570\u3002","title":"\u89c6\u53e3"},{"location":"01%20Getting%20started/03%20Hello%20Window/#_3","text":"\u6211\u4eec\u53ef\u4e0d\u5e0c\u671b\u53ea\u7ed8\u5236\u4e00\u4e2a\u56fe\u50cf\u4e4b\u540e\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u5c31\u7acb\u5373\u9000\u51fa\u5e76\u5173\u95ed\u7a97\u53e3\u3002\u6211\u4eec\u5e0c\u671b\u7a0b\u5e8f\u5728\u6211\u4eec\u4e3b\u52a8\u5173\u95ed\u5b83\u4e4b\u524d\u4e0d\u65ad\u7ed8\u5236\u56fe\u50cf\u5e76\u80fd\u591f\u63a5\u53d7\u7528\u6237\u8f93\u5165\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5728\u7a0b\u5e8f\u4e2d\u6dfb\u52a0\u4e00\u4e2awhile\u5faa\u73af\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u79f0\u4e4b\u4e3a \u6e32\u67d3\u5faa\u73af (Render Loop)\uff0c\u5b83\u80fd\u5728\u6211\u4eec\u8ba9GLFW\u9000\u51fa\u524d\u4e00\u76f4\u4fdd\u6301\u8fd0\u884c\u3002\u4e0b\u9762\u51e0\u884c\u7684\u4ee3\u7801\u5c31\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u6e32\u67d3\u5faa\u73af\uff1a while(!glfwWindowShouldClose(window)) { glfwSwapBuffers(window); glfwPollEvents(); } glfwWindowShouldClose \u51fd\u6570\u5728\u6211\u4eec\u6bcf\u6b21\u5faa\u73af\u7684\u5f00\u59cb\u524d\u68c0\u67e5\u4e00\u6b21GLFW\u662f\u5426\u88ab\u8981\u6c42\u9000\u51fa\uff0c\u5982\u679c\u662f\u7684\u8bdd\uff0c\u8be5\u51fd\u6570\u8fd4\u56de true \uff0c\u6e32\u67d3\u5faa\u73af\u5c06\u505c\u6b62\u8fd0\u884c\uff0c\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5173\u95ed\u5e94\u7528\u7a0b\u5e8f\u3002 glfwPollEvents \u51fd\u6570\u68c0\u67e5\u6709\u6ca1\u6709\u89e6\u53d1\u4ec0\u4e48\u4e8b\u4ef6\uff08\u6bd4\u5982\u952e\u76d8\u8f93\u5165\u3001\u9f20\u6807\u79fb\u52a8\u7b49\uff09\u3001\u66f4\u65b0\u7a97\u53e3\u72b6\u6001\uff0c\u5e76\u8c03\u7528\u5bf9\u5e94\u7684\u56de\u8c03\u51fd\u6570\uff08\u53ef\u4ee5\u901a\u8fc7\u56de\u8c03\u65b9\u6cd5\u624b\u52a8\u8bbe\u7f6e\uff09\u3002 glfwSwapBuffers \u51fd\u6570\u4f1a\u4ea4\u6362\u989c\u8272\u7f13\u51b2\uff08\u5b83\u662f\u4e00\u4e2a\u50a8\u5b58\u7740GLFW\u7a97\u53e3\u6bcf\u4e00\u4e2a\u50cf\u7d20\u989c\u8272\u503c\u7684\u5927\u7f13\u51b2\uff09\uff0c\u5b83\u5728\u8fd9\u4e00\u8fed\u4ee3\u4e2d\u88ab\u7528\u6765\u7ed8\u5236\uff0c\u5e76\u4e14\u5c06\u4f1a\u4f5c\u4e3a\u8f93\u51fa\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\u3002 Important \u53cc\u7f13\u51b2(Double Buffer) \u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u5355\u7f13\u51b2\u7ed8\u56fe\u65f6\u53ef\u80fd\u4f1a\u5b58\u5728\u56fe\u50cf\u95ea\u70c1\u7684\u95ee\u9898\u3002 \u8fd9\u662f\u56e0\u4e3a\u751f\u6210\u7684\u56fe\u50cf\u4e0d\u662f\u4e00\u4e0b\u5b50\u88ab\u7ed8\u5236\u51fa\u6765\u7684\uff0c\u800c\u662f\u6309\u7167\u4ece\u5de6\u5230\u53f3\uff0c\u7531\u4e0a\u800c\u4e0b\u9010\u50cf\u7d20\u5730\u7ed8\u5236\u800c\u6210\u7684\u3002\u6700\u7ec8\u56fe\u50cf\u4e0d\u662f\u5728\u77ac\u95f4\u663e\u793a\u7ed9\u7528\u6237\uff0c\u800c\u662f\u901a\u8fc7\u4e00\u6b65\u4e00\u6b65\u751f\u6210\u7684\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u6e32\u67d3\u7684\u7ed3\u679c\u5f88\u4e0d\u771f\u5b9e\u3002\u4e3a\u4e86\u89c4\u907f\u8fd9\u4e9b\u95ee\u9898\uff0c\u6211\u4eec\u5e94\u7528\u53cc\u7f13\u51b2\u6e32\u67d3\u7a97\u53e3\u5e94\u7528\u7a0b\u5e8f\u3002 \u524d \u7f13\u51b2\u4fdd\u5b58\u7740\u6700\u7ec8\u8f93\u51fa\u7684\u56fe\u50cf\uff0c\u5b83\u4f1a\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\uff1b\u800c\u6240\u6709\u7684\u7684\u6e32\u67d3\u6307\u4ee4\u90fd\u4f1a\u5728 \u540e \u7f13\u51b2\u4e0a\u7ed8\u5236\u3002\u5f53\u6240\u6709\u7684\u6e32\u67d3\u6307\u4ee4\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u6211\u4eec \u4ea4\u6362 (Swap)\u524d\u7f13\u51b2\u548c\u540e\u7f13\u51b2\uff0c\u8fd9\u6837\u56fe\u50cf\u5c31\u7acb\u5373\u5448\u663e\u51fa\u6765\uff0c\u4e4b\u524d\u63d0\u5230\u7684\u4e0d\u771f\u5b9e\u611f\u5c31\u6d88\u9664\u4e86\u3002","title":"\u51c6\u5907\u597d\u4f60\u7684\u5f15\u64ce"},{"location":"01%20Getting%20started/03%20Hello%20Window/#_4","text":"\u5f53\u6e32\u67d3\u5faa\u73af\u7ed3\u675f\u540e\u6211\u4eec\u9700\u8981\u6b63\u786e\u91ca\u653e/\u5220\u9664\u4e4b\u524d\u7684\u5206\u914d\u7684\u6240\u6709\u8d44\u6e90\u3002\u6211\u4eec\u53ef\u4ee5\u5728 main \u51fd\u6570\u7684\u6700\u540e\u8c03\u7528 glfwTerminate \u51fd\u6570\u6765\u5b8c\u6210\u3002 glfwTerminate(); return 0; \u8fd9\u6837\u4fbf\u80fd\u6e05\u7406\u6240\u6709\u7684\u8d44\u6e90\u5e76\u6b63\u786e\u5730\u9000\u51fa\u5e94\u7528\u7a0b\u5e8f\u3002\u73b0\u5728\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u7f16\u8bd1\u5e76\u8fd0\u884c\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u4e86\uff0c\u5982\u679c\u6ca1\u505a\u9519\u7684\u8bdd\uff0c\u4f60\u5c06\u4f1a\u770b\u5230\u5982\u4e0b\u7684\u8f93\u51fa\uff1a \u5982\u679c\u4f60\u770b\u89c1\u4e86\u4e00\u4e2a\u975e\u5e38\u65e0\u804a\u7684\u9ed1\u8272\u7a97\u53e3\uff0c\u90a3\u4e48\u5c31\u5bf9\u4e86\uff01\u5982\u679c\u4f60\u6ca1\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u6216\u8005\u4f60\u4e0d\u77e5\u9053\u600e\u4e48\u628a\u6240\u6709\u4e1c\u897f\u653e\u5230\u4e00\u8d77\uff0c\u8bf7\u5230 \u8fd9\u91cc \u53c2\u8003\u6e90\u4ee3\u7801\u3002 \u5982\u679c\u7a0b\u5e8f\u7f16\u8bd1\u6709\u95ee\u9898\uff0c\u8bf7\u5148\u68c0\u67e5\u8fde\u63a5\u5668\u9009\u9879\u662f\u5426\u6b63\u786e\uff0cIDE\u4e2d\u662f\u5426\u5bfc\u5165\u4e86\u6b63\u786e\u7684\u76ee\u5f55\uff08\u524d\u9762\u6559\u7a0b\u89e3\u91ca\u8fc7\uff09\u3002\u5e76\u4e14\u8bf7\u786e\u8ba4\u4f60\u7684\u4ee3\u7801\u662f\u5426\u6b63\u786e\uff0c\u76f4\u63a5\u5bf9\u7167\u4e0a\u9762\u63d0\u4f9b\u7684\u6e90\u4ee3\u7801\u5c31\u884c\u4e86\u3002\u5982\u679c\u8fd8\u662f\u6709\u95ee\u9898\uff0c\u6b22\u8fce\u8bc4\u8bba\uff0c\u6211\u6216\u8005\u5176\u4ed6\u4eba\u53ef\u80fd\u4f1a\u5e2e\u52a9\u4f60\u7684\u3002","title":"\u6700\u540e\u4e00\u4ef6\u4e8b"},{"location":"01%20Getting%20started/03%20Hello%20Window/#_5","text":"\u6211\u4eec\u540c\u6837\u4e5f\u5e0c\u671b\u80fd\u591f\u5728GLFW\u4e2d\u5b9e\u73b0\u4e00\u4e9b\u8f93\u5165\u63a7\u5236\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528GLFW\u7684\u51e0\u4e2a\u8f93\u5165\u51fd\u6570\u6765\u5b8c\u6210\u3002\u6211\u4eec\u5c06\u4f1a\u4f7f\u7528GLFW\u7684 glfwGetKey \u51fd\u6570\uff0c\u5b83\u9700\u8981\u4e00\u4e2a\u7a97\u53e3\u4ee5\u53ca\u4e00\u4e2a\u6309\u952e\u4f5c\u4e3a\u8f93\u5165\u3002\u8fd9\u4e2a\u51fd\u6570\u5c06\u4f1a\u8fd4\u56de\u8fd9\u4e2a\u6309\u952e\u662f\u5426\u6b63\u5728\u88ab\u6309\u4e0b\u3002\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a processInput \u51fd\u6570\u6765\u8ba9\u6240\u6709\u7684\u8f93\u5165\u4ee3\u7801\u4fdd\u6301\u6574\u6d01\u3002 void processInput(GLFWwindow *window) { if(glfwGetKey(window, GLFW_KEY_ESCAPE) == GLFW_PRESS) glfwSetWindowShouldClose(window, true); } \u8fd9\u91cc\u6211\u4eec\u68c0\u67e5\u7528\u6237\u662f\u5426\u6309\u4e0b\u4e86\u8fd4\u56de\u952e(Esc)\uff08\u5982\u679c\u6ca1\u6709\u6309\u4e0b\uff0c glfwGetKey \u5c06\u4f1a\u8fd4\u56de GLFW_RELEASE \u3002\u5982\u679c\u7528\u6237\u7684\u786e\u6309\u4e0b\u4e86\u8fd4\u56de\u952e\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4f7f\u7528 glfwSetwindowShouldClose \u628a WindowShouldClose \u5c5e\u6027\u8bbe\u7f6e\u4e3a true \u6765\u5173\u95edGLFW\u3002\u4e0b\u4e00\u6b21while\u5faa\u73af\u7684\u6761\u4ef6\u68c0\u6d4b\u5c06\u4f1a\u5931\u8d25\uff0c\u7a0b\u5e8f\u5c06\u5173\u95ed\u3002 \u6211\u4eec\u63a5\u4e0b\u6765\u5728\u6e32\u67d3\u5faa\u73af\u7684\u6bcf\u4e00\u4e2a\u8fed\u4ee3\u4e2d\u8c03\u7528 processInput \uff1a while (!glfwWindowShouldClose(window)) { processInput(window); glfwSwapBuffers(window); glfwPollEvents(); } \u8fd9\u5c31\u7ed9\u6211\u4eec\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u65b9\u5f0f\u6765\u68c0\u6d4b\u7279\u5b9a\u7684\u952e\u662f\u5426\u88ab\u6309\u4e0b\uff0c\u5e76\u5728\u6bcf\u4e00\u5e27\u505a\u51fa\u5904\u7406\u3002","title":"\u8f93\u5165"},{"location":"01%20Getting%20started/03%20Hello%20Window/#_6","text":"\u6211\u4eec\u8981\u628a\u6240\u6709\u7684\u6e32\u67d3(Rendering)\u64cd\u4f5c\u653e\u5230\u6e32\u67d3\u5faa\u73af\u4e2d\uff0c\u56e0\u4e3a\u6211\u4eec\u60f3\u8ba9\u8fd9\u4e9b\u6e32\u67d3\u6307\u4ee4\u5728\u6bcf\u6b21\u6e32\u67d3\u5faa\u73af\u8fed\u4ee3\u7684\u65f6\u5019\u90fd\u80fd\u88ab\u6267\u884c\u3002\u4ee3\u7801\u5c06\u4f1a\u662f\u8fd9\u6837\u7684\uff1a // \u6e32\u67d3\u5faa\u73af while(!glfwWindowShouldClose(window)) { // \u8f93\u5165 processInput(window); // \u6e32\u67d3\u6307\u4ee4 ... // \u68c0\u67e5\u5e76\u8c03\u7528\u4e8b\u4ef6\uff0c\u4ea4\u6362\u7f13\u51b2 glfwPollEvents(); glfwSwapBuffers(window); } \u4e3a\u4e86\u6d4b\u8bd5\u4e00\u5207\u90fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u989c\u8272\u6e05\u7a7a\u5c4f\u5e55\u3002\u5728\u6bcf\u4e2a\u65b0\u7684\u6e32\u67d3\u8fed\u4ee3\u5f00\u59cb\u7684\u65f6\u5019\u6211\u4eec\u603b\u662f\u5e0c\u671b\u6e05\u5c4f\uff0c\u5426\u5219\u6211\u4eec\u4ecd\u80fd\u770b\u89c1\u4e0a\u4e00\u6b21\u8fed\u4ee3\u7684\u6e32\u67d3\u7ed3\u679c\uff08\u8fd9\u53ef\u80fd\u662f\u4f60\u60f3\u8981\u7684\u6548\u679c\uff0c\u4f46\u901a\u5e38\u8fd9\u4e0d\u662f\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 glClear \u51fd\u6570\u6765\u6e05\u7a7a\u5c4f\u5e55\u7684\u989c\u8272\u7f13\u51b2\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a\u7f13\u51b2\u4f4d(Buffer Bit)\u6765\u6307\u5b9a\u8981\u6e05\u7a7a\u7684\u7f13\u51b2\uff0c\u53ef\u80fd\u7684\u7f13\u51b2\u4f4d\u6709 GL_COLOR_BUFFER_BIT \uff0c GL_DEPTH_BUFFER_BIT \u548c GL_STENCIL_BUFFER_BIT \u3002\u7531\u4e8e\u73b0\u5728\u6211\u4eec\u53ea\u5173\u5fc3\u989c\u8272\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u6e05\u7a7a\u989c\u8272\u7f13\u51b2\u3002 glClearColor(0.2f, 0.3f, 0.3f, 1.0f); glClear(GL_COLOR_BUFFER_BIT); \u6ce8\u610f\uff0c\u9664\u4e86 glClear \u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u8c03\u7528\u4e86 glClearColor \u6765\u8bbe\u7f6e\u6e05\u7a7a\u5c4f\u5e55\u6240\u7528\u7684\u989c\u8272\u3002\u5f53\u8c03\u7528 glClear \u51fd\u6570\uff0c\u6e05\u9664\u989c\u8272\u7f13\u51b2\u4e4b\u540e\uff0c\u6574\u4e2a\u989c\u8272\u7f13\u51b2\u90fd\u4f1a\u88ab\u586b\u5145\u4e3a glClearColor \u91cc\u6240\u8bbe\u7f6e\u7684\u989c\u8272\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5c4f\u5e55\u8bbe\u7f6e\u4e3a\u4e86\u7c7b\u4f3c\u9ed1\u677f\u7684\u6df1\u84dd\u7eff\u8272\u3002 Important \u4f60\u5e94\u8be5\u80fd\u591f\u56de\u5fc6\u8d77\u6765\u6211\u4eec\u5728 OpenGL \u8fd9\u8282\u6559\u7a0b\u7684\u5185\u5bb9\uff0c glClearColor \u51fd\u6570\u662f\u4e00\u4e2a \u72b6\u6001\u8bbe\u7f6e \u51fd\u6570\uff0c\u800c glClear \u51fd\u6570\u5219\u662f\u4e00\u4e2a \u72b6\u6001\u4f7f\u7528 \u7684\u51fd\u6570\uff0c\u5b83\u4f7f\u7528\u4e86\u5f53\u524d\u7684\u72b6\u6001\u6765\u83b7\u53d6\u5e94\u8be5\u6e05\u9664\u4e3a\u7684\u989c\u8272\u3002 \u8fd9\u4e2a\u7a0b\u5e8f\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u3002 \u597d\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u505a\u597d\u5f00\u59cb\u5728\u6e32\u67d3\u5faa\u73af\u4e2d\u6dfb\u52a0\u8bb8\u591a\u6e32\u67d3\u8c03\u7528\u7684\u51c6\u5907\u4e86\uff0c\u4f46\u8fd9\u662f \u4e0b\u4e00\u8282 \u6559\u7a0b\u4e86\uff0c\u8fd9\u4e00\u8282\u7684\u5185\u5bb9\u5df2\u7ecf\u592a\u591a\u4e86\u3002","title":"\u6e32\u67d3"},{"location":"01%20Getting%20started/04%20Hello%20Triangle/","text":"\u4f60\u597d\uff0c\u4e09\u89d2\u5f62 \u539f\u6587 Hello Triangle \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django , Krasjet, Geequlim \u6821\u5bf9 Kang Lin kl222@126.com , AoZhang \u8bd1\u6ce8 \u5728\u5b66\u4e60\u6b64\u8282\u4e4b\u524d\uff0c\u5efa\u8bae\u5c06\u8fd9\u4e09\u4e2a\u5355\u8bcd\u5148\u8bb0\u4e0b\u6765\uff1a \u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff1aVertex Array Object\uff0cVAO \u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff1aVertex Buffer Object\uff0cVBO \u5143\u7d20\u7f13\u51b2\u5bf9\u8c61\uff1aElement Buffer Object\uff0cEBO \u6216 \u7d22\u5f15\u7f13\u51b2\u5bf9\u8c61 Index Buffer Object\uff0cIBO \u5f53\u6307\u4ee3\u8fd9\u4e09\u4e2a\u4e1c\u897f\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u4f7f\u7528\u7684\u662f\u5168\u79f0\uff0c\u4e5f\u53ef\u80fd\u7528\u7684\u662f\u82f1\u6587\u7f29\u5199\uff0c\u7ffb\u8bd1\u7684\u65f6\u5019\u548c\u539f\u6587\u4fdd\u6301\u7684\u4e00\u81f4\u3002\u7531\u4e8e\u6ca1\u6709\u82f1\u6587\u90a3\u6837\u7684\u5206\u8bcd\u95f4\u9694\uff0c\u4e2d\u6587\u5168\u79f0\u7684\u90e8\u5206\u53ef\u80fd\u4e0d\u592a\u5bb9\u6613\u6ce8\u610f\u3002\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u7f29\u5199\u548c\u4e2d\u6587\u5168\u79f0\u6307\u4ee3\u7684\u662f\u4e00\u4e2a\u4e1c\u897f\u3002 \u5728OpenGL\u4e2d\uff0c\u4efb\u4f55\u4e8b\u7269\u90fd\u57283D\u7a7a\u95f4\u4e2d\uff0c\u800c\u5c4f\u5e55\u548c\u7a97\u53e3\u5374\u662f2D\u50cf\u7d20\u6570\u7ec4\uff0c\u8fd9\u5bfc\u81f4OpenGL\u7684\u5927\u90e8\u5206\u5de5\u4f5c\u90fd\u662f\u5173\u4e8e\u628a3D\u5750\u6807\u8f6c\u53d8\u4e3a\u9002\u5e94\u4f60\u5c4f\u5e55\u76842D\u50cf\u7d20\u30023D\u5750\u6807\u8f6c\u4e3a2D\u5750\u6807\u7684\u5904\u7406\u8fc7\u7a0b\u662f\u7531OpenGL\u7684 \u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf \uff08Graphics Pipeline\uff0c\u5927\u591a\u8bd1\u4e3a\u7ba1\u7ebf\uff0c\u5b9e\u9645\u4e0a\u6307\u7684\u662f\u4e00\u5806\u539f\u59cb\u56fe\u5f62\u6570\u636e\u9014\u7ecf\u4e00\u4e2a\u8f93\u9001\u7ba1\u9053\uff0c\u671f\u95f4\u7ecf\u8fc7\u5404\u79cd\u53d8\u5316\u5904\u7406\u6700\u7ec8\u51fa\u73b0\u5728\u5c4f\u5e55\u7684\u8fc7\u7a0b\uff09\u7ba1\u7406\u7684\u3002\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u53ef\u4ee5\u88ab\u5212\u5206\u4e3a\u4e24\u4e2a\u4e3b\u8981\u90e8\u5206\uff1a\u7b2c\u4e00\u90e8\u5206\u628a\u4f60\u76843D\u5750\u6807\u8f6c\u6362\u4e3a2D\u5750\u6807\uff0c\u7b2c\u4e8c\u90e8\u5206\u662f\u628a2D\u5750\u6807\u8f6c\u53d8\u4e3a\u5b9e\u9645\u7684\u6709\u989c\u8272\u7684\u50cf\u7d20\u3002\u8fd9\u4e2a\u6559\u7a0b\u91cc\uff0c\u6211\u4eec\u4f1a\u7b80\u5355\u5730\u8ba8\u8bba\u4e00\u4e0b\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\uff0c\u4ee5\u53ca\u5982\u4f55\u5229\u7528\u5b83\u521b\u5efa\u4e00\u4e9b\u6f02\u4eae\u7684\u50cf\u7d20\u3002 Important 2D\u5750\u6807\u548c\u50cf\u7d20\u4e5f\u662f\u4e0d\u540c\u7684\uff0c2D\u5750\u6807\u7cbe\u786e\u8868\u793a\u4e00\u4e2a\u70b9\u57282D\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\uff0c\u800c2D\u50cf\u7d20\u662f\u8fd9\u4e2a\u70b9\u7684\u8fd1\u4f3c\u503c\uff0c2D\u50cf\u7d20\u53d7\u5230\u4f60\u7684\u5c4f\u5e55/\u7a97\u53e3\u5206\u8fa8\u7387\u7684\u9650\u5236\u3002 \u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u63a5\u53d7\u4e00\u7ec43D\u5750\u6807\uff0c\u7136\u540e\u628a\u5b83\u4eec\u8f6c\u53d8\u4e3a\u4f60\u5c4f\u5e55\u4e0a\u7684\u6709\u82722D\u50cf\u7d20\u8f93\u51fa\u3002\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u53ef\u4ee5\u88ab\u5212\u5206\u4e3a\u51e0\u4e2a\u9636\u6bb5\uff0c\u6bcf\u4e2a\u9636\u6bb5\u5c06\u4f1a\u628a\u524d\u4e00\u4e2a\u9636\u6bb5\u7684\u8f93\u51fa\u4f5c\u4e3a\u8f93\u5165\u3002\u6240\u6709\u8fd9\u4e9b\u9636\u6bb5\u90fd\u662f\u9ad8\u5ea6\u4e13\u95e8\u5316\u7684\uff08\u5b83\u4eec\u90fd\u6709\u4e00\u4e2a\u7279\u5b9a\u7684\u51fd\u6570\uff09\uff0c\u5e76\u4e14\u5f88\u5bb9\u6613\u5e76\u884c\u6267\u884c\u3002\u6b63\u662f\u7531\u4e8e\u5b83\u4eec\u5177\u6709\u5e76\u884c\u6267\u884c\u7684\u7279\u6027\uff0c\u5f53\u4eca\u5927\u591a\u6570\u663e\u5361\u90fd\u6709\u6210\u5343\u4e0a\u4e07\u7684\u5c0f\u5904\u7406\u6838\u5fc3\uff0c\u5b83\u4eec\u5728GPU\u4e0a\u4e3a\u6bcf\u4e00\u4e2a\uff08\u6e32\u67d3\u7ba1\u7ebf\uff09\u9636\u6bb5\u8fd0\u884c\u5404\u81ea\u7684\u5c0f\u7a0b\u5e8f\uff0c\u4ece\u800c\u5728\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u4e2d\u5feb\u901f\u5904\u7406\u4f60\u7684\u6570\u636e\u3002\u8fd9\u4e9b\u5c0f\u7a0b\u5e8f\u53eb\u505a \u7740\u8272\u5668 (Shader)\u3002 \u6709\u4e9b\u7740\u8272\u5668\u53ef\u4ee5\u7531\u5f00\u53d1\u8005\u914d\u7f6e\uff0c\u56e0\u4e3a\u5141\u8bb8\u7528\u81ea\u5df1\u5199\u7684\u7740\u8272\u5668\u6765\u4ee3\u66ff\u9ed8\u8ba4\u7684\uff0c\u6240\u4ee5\u80fd\u591f\u66f4\u7ec6\u81f4\u5730\u63a7\u5236\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u4e2d\u7684\u7279\u5b9a\u90e8\u5206\u4e86\u3002\u56e0\u4e3a\u5b83\u4eec\u8fd0\u884c\u5728GPU\u4e0a\uff0c\u6240\u4ee5\u8282\u7701\u4e86\u5b9d\u8d35\u7684CPU\u65f6\u95f4\u3002OpenGL\u7740\u8272\u5668\u662f\u7528 OpenGL\u7740\u8272\u5668\u8bed\u8a00 (OpenGL Shading Language, GLSL )\u5199\u6210\u7684\uff0c\u5728\u4e0b\u4e00\u8282\u4e2d\u6211\u4eec\u518d\u82b1\u66f4\u591a\u65f6\u95f4\u7814\u7a76\u5b83\u3002 \u4e0b\u9762\uff0c\u4f60\u4f1a\u770b\u5230\u4e00\u4e2a\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u7684\u6bcf\u4e2a\u9636\u6bb5\u7684\u62bd\u8c61\u5c55\u793a\u3002\u8981\u6ce8\u610f\u84dd\u8272\u90e8\u5206\u4ee3\u8868\u7684\u662f\u6211\u4eec\u53ef\u4ee5\u6ce8\u5165\u81ea\u5b9a\u4e49\u7684\u7740\u8272\u5668\u7684\u90e8\u5206\u3002 \u5982\u4f60\u6240\u89c1\uff0c\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u5305\u542b\u5f88\u591a\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u90fd\u5c06\u5728\u8f6c\u6362\u9876\u70b9\u6570\u636e\u5230\u6700\u7ec8\u50cf\u7d20\u8fd9\u4e00\u8fc7\u7a0b\u4e2d\u5904\u7406\u5404\u81ea\u7279\u5b9a\u7684\u9636\u6bb5\u3002\u6211\u4eec\u4f1a\u6982\u62ec\u6027\u5730\u89e3\u91ca\u4e00\u4e0b\u6e32\u67d3\u7ba1\u7ebf\u7684\u6bcf\u4e2a\u90e8\u5206\uff0c\u8ba9\u4f60\u5bf9\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u7684\u5de5\u4f5c\u65b9\u5f0f\u6709\u4e2a\u5927\u6982\u4e86\u89e3\u3002 \u9996\u5148\uff0c\u6211\u4eec\u4ee5\u6570\u7ec4\u7684\u5f62\u5f0f\u4f20\u90123\u4e2a3D\u5750\u6807\u4f5c\u4e3a\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u7684\u8f93\u5165\uff0c\u7528\u6765\u8868\u793a\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u8fd9\u4e2a\u6570\u7ec4\u53eb\u505a\u9876\u70b9\u6570\u636e(Vertex Data)\uff1b\u9876\u70b9\u6570\u636e\u662f\u4e00\u7cfb\u5217\u9876\u70b9\u7684\u96c6\u5408\u3002\u4e00\u4e2a \u9876\u70b9 (Vertex)\u662f\u4e00\u4e2a3D\u5750\u6807\u7684\u6570\u636e\u7684\u96c6\u5408\u3002\u800c\u8fd9\u6837\u4e00\u4e2a\u9876\u70b9\u7684\u6570\u636e\u662f\u7528 \u9876\u70b9\u5c5e\u6027 (Vertex Attribute)\u8868\u793a\u7684\uff0c\u5b83\u53ef\u4ee5\u5305\u542b\u4efb\u4f55\u6211\u4eec\u60f3\u7528\u7684\u6570\u636e\uff0c\u4f46\u662f\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u8fd8\u662f\u5047\u5b9a\u6bcf\u4e2a\u9876\u70b9\u53ea\u7531\u4e00\u4e2a3D\u4f4d\u7f6e(\u8bd1\u6ce81)\u548c\u4e00\u4e9b\u989c\u8272\u503c\u7ec4\u6210\u7684\u5427\u3002 \u8bd1\u6ce81 \u5f53\u6211\u4eec\u8c08\u8bba\u4e00\u4e2a\u201c\u4f4d\u7f6e\u201d\u7684\u65f6\u5019\uff0c\u5b83\u4ee3\u8868\u5728\u4e00\u4e2a\u201c\u7a7a\u95f4\u201d\u4e2d\u6240\u5904\u5730\u70b9\u7684\u8fd9\u4e2a\u7279\u6b8a\u5c5e\u6027\uff1b\u540c\u65f6\u201c\u7a7a\u95f4\u201d\u4ee3\u8868\u7740\u4efb\u4f55\u4e00\u79cd\u5750\u6807\u7cfb\uff0c\u6bd4\u5982x\u3001y\u3001z\u4e09\u7ef4\u5750\u6807\u7cfb\uff0cx\u3001y\u4e8c\u7ef4\u5750\u6807\u7cfb\uff0c\u6216\u8005\u4e00\u6761\u76f4\u7ebf\u4e0a\u7684x\u548cy\u7684\u7ebf\u6027\u5173\u7cfb\uff0c\u53ea\u4e0d\u8fc7\u4e8c\u7ef4\u5750\u6807\u7cfb\u662f\u4e00\u4e2a\u6241\u6241\u7684\u5e73\u9762\u7a7a\u95f4\uff0c\u800c\u4e00\u6761\u76f4\u7ebf\u662f\u4e00\u4e2a\u5f88\u7626\u7684\u957f\u957f\u7684\u7a7a\u95f4\u3002 Important \u4e3a\u4e86\u8ba9OpenGL\u77e5\u9053\u6211\u4eec\u7684\u5750\u6807\u548c\u989c\u8272\u503c\u6784\u6210\u7684\u5230\u5e95\u662f\u4ec0\u4e48\uff0cOpenGL\u9700\u8981\u4f60\u53bb\u6307\u5b9a\u8fd9\u4e9b\u6570\u636e\u6240\u8868\u793a\u7684\u6e32\u67d3\u7c7b\u578b\u3002\u6211\u4eec\u662f\u5e0c\u671b\u628a\u8fd9\u4e9b\u6570\u636e\u6e32\u67d3\u6210\u4e00\u7cfb\u5217\u7684\u70b9\uff1f\u4e00\u7cfb\u5217\u7684\u4e09\u89d2\u5f62\uff1f\u8fd8\u662f\u4ec5\u4ec5\u662f\u4e00\u4e2a\u957f\u957f\u7684\u7ebf\uff1f\u505a\u51fa\u7684\u8fd9\u4e9b\u63d0\u793a\u53eb\u505a \u56fe\u5143 (Primitive)\uff0c\u4efb\u4f55\u4e00\u4e2a\u7ed8\u5236\u6307\u4ee4\u7684\u8c03\u7528\u90fd\u5c06\u628a\u56fe\u5143\u4f20\u9012\u7ed9OpenGL\u3002\u8fd9\u662f\u5176\u4e2d\u7684\u51e0\u4e2a\uff1a GL_POINTS \u3001 GL_TRIANGLES \u3001 GL_LINE_STRIP \u3002 \u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u7684\u7b2c\u4e00\u4e2a\u90e8\u5206\u662f \u9876\u70b9\u7740\u8272\u5668 (Vertex Shader)\uff0c\u5b83\u628a\u4e00\u4e2a\u5355\u72ec\u7684\u9876\u70b9\u4f5c\u4e3a\u8f93\u5165\u3002\u9876\u70b9\u7740\u8272\u5668\u4e3b\u8981\u7684\u76ee\u7684\u662f\u628a3D\u5750\u6807\u8f6c\u4e3a\u53e6\u4e00\u79cd3D\u5750\u6807\uff08\u540e\u9762\u4f1a\u89e3\u91ca\uff09\uff0c\u540c\u65f6\u9876\u70b9\u7740\u8272\u5668\u5141\u8bb8\u6211\u4eec\u5bf9\u9876\u70b9\u5c5e\u6027\u8fdb\u884c\u4e00\u4e9b\u57fa\u672c\u5904\u7406\u3002 \u9876\u70b9\u7740\u8272\u5668\u9636\u6bb5\u7684\u8f93\u51fa\u53ef\u4ee5\u9009\u62e9\u6027\u5730\u4f20\u9012\u7ed9 \u51e0\u4f55\u7740\u8272\u5668 (Geometry Shader)\u3002\u51e0\u4f55\u7740\u8272\u5668\u5c06\u4e00\u7ec4\u9876\u70b9\u4f5c\u4e3a\u8f93\u5165\uff0c\u8fd9\u4e9b\u9876\u70b9\u5f62\u6210\u56fe\u5143\uff0c\u5e76\u4e14\u80fd\u591f\u901a\u8fc7\u53d1\u51fa\u65b0\u7684\u9876\u70b9\u6765\u5f62\u6210\u65b0\u7684(\u6216\u5176\u4ed6)\u56fe\u5143\u6765\u751f\u6210\u5176\u4ed6\u5f62\u72b6\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5b83\u4ece\u7ed9\u5b9a\u7684\u5f62\u72b6\u4e2d\u751f\u6210\u7b2c\u4e8c\u4e2a\u4e09\u89d2\u5f62\u3002 \u56fe\u5143\u88c5\u914d (Primitive Assembly)\u9636\u6bb5\u5c06\u9876\u70b9\u7740\u8272\u5668\uff08\u6216\u51e0\u4f55\u7740\u8272\u5668\uff09\u8f93\u51fa\u7684\u6240\u6709\u9876\u70b9\u4f5c\u4e3a\u8f93\u5165\uff08\u5982\u679c\u662f GL_POINTS \uff0c\u90a3\u4e48\u5c31\u662f\u4e00\u4e2a\u9876\u70b9\uff09\uff0c\u5e76\u5c06\u6240\u6709\u7684\u70b9\u88c5\u914d\u6210\u6307\u5b9a\u56fe\u5143\u7684\u5f62\u72b6\uff1b\u672c\u8282\u4f8b\u5b50\u4e2d\u662f\u4e24\u4e2a\u4e09\u89d2\u5f62\u3002 \u56fe\u5143\u88c5\u914d\u9636\u6bb5\u7684\u8f93\u51fa\u4f1a\u88ab\u4f20\u5165 \u5149\u6805\u5316\u9636\u6bb5 (Rasterization Stage)\uff0c\u8fd9\u91cc\u5b83\u4f1a\u628a\u56fe\u5143\u6620\u5c04\u4e3a\u6700\u7ec8\u5c4f\u5e55\u4e0a\u76f8\u5e94\u7684\u50cf\u7d20\uff0c\u751f\u6210\u4f9b\u7247\u6bb5\u7740\u8272\u5668(Fragment Shader)\u4f7f\u7528\u7684\u7247\u6bb5(Fragment)\u3002\u5728\u7247\u6bb5\u7740\u8272\u5668\u8fd0\u884c\u4e4b\u524d\u4f1a\u6267\u884c \u88c1\u5207 (Clipping)\u3002\u88c1\u5207\u4f1a\u4e22\u5f03\u8d85\u51fa\u4f60\u7684\u89c6\u56fe\u4ee5\u5916\u7684\u6240\u6709\u50cf\u7d20\uff0c\u7528\u6765\u63d0\u5347\u6267\u884c\u6548\u7387\u3002 Important OpenGL\u4e2d\u7684\u4e00\u4e2a\u7247\u6bb5\u662fOpenGL\u6e32\u67d3\u4e00\u4e2a\u50cf\u7d20\u6240\u9700\u7684\u6240\u6709\u6570\u636e\u3002 \u7247\u6bb5\u7740\u8272\u5668 \u7684\u4e3b\u8981\u76ee\u7684\u662f\u8ba1\u7b97\u4e00\u4e2a\u50cf\u7d20\u7684\u6700\u7ec8\u989c\u8272\uff0c\u8fd9\u4e5f\u662f\u6240\u6709OpenGL\u9ad8\u7ea7\u6548\u679c\u4ea7\u751f\u7684\u5730\u65b9\u3002\u901a\u5e38\uff0c\u7247\u6bb5\u7740\u8272\u5668\u5305\u542b3D\u573a\u666f\u7684\u6570\u636e\uff08\u6bd4\u5982\u5149\u7167\u3001\u9634\u5f71\u3001\u5149\u7684\u989c\u8272\u7b49\u7b49\uff09\uff0c\u8fd9\u4e9b\u6570\u636e\u53ef\u4ee5\u88ab\u7528\u6765\u8ba1\u7b97\u6700\u7ec8\u50cf\u7d20\u7684\u989c\u8272\u3002 \u5728\u6240\u6709\u5bf9\u5e94\u989c\u8272\u503c\u786e\u5b9a\u4ee5\u540e\uff0c\u6700\u7ec8\u7684\u5bf9\u8c61\u5c06\u4f1a\u88ab\u4f20\u5230\u6700\u540e\u4e00\u4e2a\u9636\u6bb5\uff0c\u6211\u4eec\u53eb\u505a Alpha\u6d4b\u8bd5 \u548c \u6df7\u5408 (Blending)\u9636\u6bb5\u3002\u8fd9\u4e2a\u9636\u6bb5\u68c0\u6d4b\u7247\u6bb5\u7684\u5bf9\u5e94\u7684\u6df1\u5ea6\uff08\u548c\u6a21\u677f(Stencil)\uff09\u503c\uff08\u540e\u9762\u4f1a\u8bb2\uff09\uff0c\u7528\u5b83\u4eec\u6765\u5224\u65ad\u8fd9\u4e2a\u50cf\u7d20\u662f\u5176\u5b83\u7269\u4f53\u7684\u524d\u9762\u8fd8\u662f\u540e\u9762\uff0c\u51b3\u5b9a\u662f\u5426\u5e94\u8be5\u4e22\u5f03\u3002\u8fd9\u4e2a\u9636\u6bb5\u4e5f\u4f1a\u68c0\u67e5 alpha \u503c\uff08alpha\u503c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7269\u4f53\u7684\u900f\u660e\u5ea6\uff09\u5e76\u5bf9\u7269\u4f53\u8fdb\u884c \u6df7\u5408 (Blend)\u3002\u6240\u4ee5\uff0c\u5373\u4f7f\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u8ba1\u7b97\u51fa\u6765\u4e86\u4e00\u4e2a\u50cf\u7d20\u8f93\u51fa\u7684\u989c\u8272\uff0c\u5728\u6e32\u67d3\u591a\u4e2a\u4e09\u89d2\u5f62\u7684\u65f6\u5019\u6700\u540e\u7684\u50cf\u7d20\u989c\u8272\u4e5f\u53ef\u80fd\u5b8c\u5168\u4e0d\u540c\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u975e\u5e38\u590d\u6742\uff0c\u5b83\u5305\u542b\u5f88\u591a\u53ef\u914d\u7f6e\u7684\u90e8\u5206\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u573a\u5408\uff0c\u6211\u4eec\u53ea\u9700\u8981\u914d\u7f6e\u9876\u70b9\u548c\u7247\u6bb5\u7740\u8272\u5668\u5c31\u884c\u4e86\u3002\u51e0\u4f55\u7740\u8272\u5668\u662f\u53ef\u9009\u7684\uff0c\u901a\u5e38\u4f7f\u7528\u5b83\u9ed8\u8ba4\u7684\u7740\u8272\u5668\u5c31\u884c\u4e86\u3002 \u5728\u73b0\u4ee3OpenGL\u4e2d\uff0c\u6211\u4eec \u5fc5\u987b \u5b9a\u4e49\u81f3\u5c11\u4e00\u4e2a\u9876\u70b9\u7740\u8272\u5668\u548c\u4e00\u4e2a\u7247\u6bb5\u7740\u8272\u5668\uff08\u56e0\u4e3aGPU\u4e2d\u6ca1\u6709\u9ed8\u8ba4\u7684\u9876\u70b9/\u7247\u6bb5\u7740\u8272\u5668\uff09\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u521a\u5f00\u59cb\u5b66\u4e60\u73b0\u4ee3OpenGL\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u975e\u5e38\u56f0\u96be\uff0c\u56e0\u4e3a\u5728\u4f60\u80fd\u591f\u6e32\u67d3\u81ea\u5df1\u7684\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u4e4b\u524d\u5df2\u7ecf\u9700\u8981\u4e86\u89e3\u4e00\u5927\u5806\u77e5\u8bc6\u4e86\u3002\u5728\u672c\u8282\u7ed3\u675f\u4f60\u6700\u7ec8\u6e32\u67d3\u51fa\u4f60\u7684\u4e09\u89d2\u5f62\u7684\u65f6\u5019\uff0c\u4f60\u4e5f\u4f1a\u4e86\u89e3\u5230\u975e\u5e38\u591a\u7684\u56fe\u5f62\u7f16\u7a0b\u77e5\u8bc6\u3002 \u9876\u70b9\u8f93\u5165 \u5f00\u59cb\u7ed8\u5236\u56fe\u5f62\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u7ed9OpenGL\u8f93\u5165\u4e00\u4e9b\u9876\u70b9\u6570\u636e\u3002OpenGL\u662f\u4e00\u4e2a3D\u56fe\u5f62\u5e93\uff0c\u6240\u4ee5\u5728OpenGL\u4e2d\u6211\u4eec\u6307\u5b9a\u7684\u6240\u6709\u5750\u6807\u90fd\u662f3D\u5750\u6807\uff08x\u3001y\u548cz\uff09\u3002OpenGL\u4e0d\u662f\u7b80\u5355\u5730\u628a \u6240\u6709\u7684 3D\u5750\u6807\u53d8\u6362\u4e3a\u5c4f\u5e55\u4e0a\u76842D\u50cf\u7d20\uff1bOpenGL\u4ec5\u5f533D\u5750\u6807\u57283\u4e2a\u8f74\uff08x\u3001y\u548cz\uff09\u4e0a-1.0\u52301.0\u7684\u8303\u56f4\u5185\u65f6\u624d\u5904\u7406\u5b83\u3002\u6240\u6709\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\u7684\u5750\u6807\u53eb\u505a \u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807 (Normalized Device Coordinates)\uff0c\u6b64\u8303\u56f4\u5185\u7684\u5750\u6807\u6700\u7ec8\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\uff08\u5728\u8fd9\u4e2a\u8303\u56f4\u4ee5\u5916\u7684\u5750\u6807\u5219\u4e0d\u4f1a\u663e\u793a\uff09\u3002 \u7531\u4e8e\u6211\u4eec\u5e0c\u671b\u6e32\u67d3\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u6211\u4eec\u4e00\u5171\u8981\u6307\u5b9a\u4e09\u4e2a\u9876\u70b9\uff0c\u6bcf\u4e2a\u9876\u70b9\u90fd\u6709\u4e00\u4e2a3D\u4f4d\u7f6e\u3002\u6211\u4eec\u4f1a\u5c06\u5b83\u4eec\u4ee5\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7684\u5f62\u5f0f\uff08OpenGL\u7684\u53ef\u89c1\u533a\u57df\uff09\u5b9a\u4e49\u4e3a\u4e00\u4e2a float \u6570\u7ec4\u3002 float vertices[] = { -0.5f, -0.5f, 0.0f, 0.5f, -0.5f, 0.0f, 0.0f, 0.5f, 0.0f }; \u7531\u4e8eOpenGL\u662f\u57283D\u7a7a\u95f4\u4e2d\u5de5\u4f5c\u7684\uff0c\u800c\u6211\u4eec\u6e32\u67d3\u7684\u662f\u4e00\u4e2a2D\u4e09\u89d2\u5f62\uff0c\u6211\u4eec\u5c06\u5b83\u9876\u70b9\u7684z\u5750\u6807\u8bbe\u7f6e\u4e3a0.0\u3002\u8fd9\u6837\u5b50\u7684\u8bdd\u4e09\u89d2\u5f62\u6bcf\u4e00\u70b9\u7684 \u6df1\u5ea6 (Depth\uff0c\u8bd1\u6ce82)\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4ece\u800c\u4f7f\u5b83\u770b\u4e0a\u53bb\u50cf\u662f2D\u7684\u3002 \u8bd1\u6ce82 \u901a\u5e38\u6df1\u5ea6\u53ef\u4ee5\u7406\u89e3\u4e3az\u5750\u6807\uff0c\u5b83\u4ee3\u8868\u4e00\u4e2a\u50cf\u7d20\u5728\u7a7a\u95f4\u4e2d\u548c\u4f60\u7684\u8ddd\u79bb\uff0c\u5982\u679c\u79bb\u4f60\u8fdc\u5c31\u53ef\u80fd\u88ab\u522b\u7684\u50cf\u7d20\u906e\u6321\uff0c\u4f60\u5c31\u770b\u4e0d\u5230\u5b83\u4e86\uff0c\u5b83\u4f1a\u88ab\u4e22\u5f03\uff0c\u4ee5\u8282\u7701\u8d44\u6e90\u3002 Important \u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807(Normalized Device Coordinates, NDC) \u4e00\u65e6\u4f60\u7684\u9876\u70b9\u5750\u6807\u5df2\u7ecf\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5904\u7406\u8fc7\uff0c\u5b83\u4eec\u5c31\u5e94\u8be5\u662f \u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807 \u4e86\uff0c\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u662f\u4e00\u4e2ax\u3001y\u548cz\u503c\u5728-1.0\u52301.0\u7684\u4e00\u5c0f\u6bb5\u7a7a\u95f4\u3002\u4efb\u4f55\u843d\u5728\u8303\u56f4\u5916\u7684\u5750\u6807\u90fd\u4f1a\u88ab\u4e22\u5f03/\u88c1\u526a\uff0c\u4e0d\u4f1a\u663e\u793a\u5728\u4f60\u7684\u5c4f\u5e55\u4e0a\u3002\u4e0b\u9762\u4f60\u4f1a\u770b\u5230\u6211\u4eec\u5b9a\u4e49\u7684\u5728\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u4e2d\u7684\u4e09\u89d2\u5f62(\u5ffd\u7565z\u8f74)\uff1a \u4e0e\u901a\u5e38\u7684\u5c4f\u5e55\u5750\u6807\u4e0d\u540c\uff0cy\u8f74\u6b63\u65b9\u5411\u4e3a\u5411\u4e0a\uff0c(0, 0)\u5750\u6807\u662f\u8fd9\u4e2a\u56fe\u50cf\u7684\u4e2d\u5fc3\uff0c\u800c\u4e0d\u662f\u5de6\u4e0a\u89d2\u3002\u6700\u7ec8\u4f60\u5e0c\u671b\u6240\u6709(\u53d8\u6362\u8fc7\u7684)\u5750\u6807\u90fd\u5728\u8fd9\u4e2a\u5750\u6807\u7a7a\u95f4\u4e2d\uff0c\u5426\u5219\u5b83\u4eec\u5c31\u4e0d\u53ef\u89c1\u4e86\u3002 \u901a\u8fc7\u4f7f\u7528\u7531 glViewport \u51fd\u6570\u63d0\u4f9b\u7684\u6570\u636e\uff0c\u8fdb\u884c \u89c6\u53e3\u53d8\u6362 (Viewport Transform)\uff0c \u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807 (Normalized Device Coordinates)\u4f1a\u53d8\u6362\u4e3a \u5c4f\u5e55\u7a7a\u95f4\u5750\u6807 (Screen-space Coordinates)\u3002\u6240\u5f97\u7684\u5c4f\u5e55\u7a7a\u95f4\u5750\u6807\u53c8\u4f1a\u88ab\u53d8\u6362\u4e3a\u7247\u6bb5\u8f93\u5165\u5230\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u3002 \u5b9a\u4e49\u8fd9\u6837\u7684\u9876\u70b9\u6570\u636e\u4ee5\u540e\uff0c\u6211\u4eec\u4f1a\u628a\u5b83\u4f5c\u4e3a\u8f93\u5165\u53d1\u9001\u7ed9\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u7684\u7b2c\u4e00\u4e2a\u5904\u7406\u9636\u6bb5\uff1a\u9876\u70b9\u7740\u8272\u5668\u3002\u5b83\u4f1a\u5728GPU\u4e0a\u521b\u5efa\u5185\u5b58\u7528\u4e8e\u50a8\u5b58\u6211\u4eec\u7684\u9876\u70b9\u6570\u636e\uff0c\u8fd8\u8981\u914d\u7f6eOpenGL\u5982\u4f55\u89e3\u91ca\u8fd9\u4e9b\u5185\u5b58\uff0c\u5e76\u4e14\u6307\u5b9a\u5176\u5982\u4f55\u53d1\u9001\u7ed9\u663e\u5361\u3002\u9876\u70b9\u7740\u8272\u5668\u63a5\u7740\u4f1a\u5904\u7406\u6211\u4eec\u5728\u5185\u5b58\u4e2d\u6307\u5b9a\u6570\u91cf\u7684\u9876\u70b9\u3002 \u6211\u4eec\u901a\u8fc7 \u9876\u70b9\u7f13\u51b2\u5bf9\u8c61 (Vertex Buffer Objects, VBO)\u7ba1\u7406\u8fd9\u4e2a\u5185\u5b58\uff0c\u5b83\u4f1a\u5728GPU\u5185\u5b58\uff08\u901a\u5e38\u88ab\u79f0\u4e3a\u663e\u5b58\uff09\u4e2d\u50a8\u5b58\u5927\u91cf\u9876\u70b9\u3002\u4f7f\u7528\u8fd9\u4e9b\u7f13\u51b2\u5bf9\u8c61\u7684\u597d\u5904\u662f\u6211\u4eec\u53ef\u4ee5\u4e00\u6b21\u6027\u7684\u53d1\u9001\u4e00\u5927\u6279\u6570\u636e\u5230\u663e\u5361\u4e0a\uff0c\u800c\u4e0d\u662f\u6bcf\u4e2a\u9876\u70b9\u53d1\u9001\u4e00\u6b21\u3002\u4eceCPU\u628a\u6570\u636e\u53d1\u9001\u5230\u663e\u5361\u76f8\u5bf9\u8f83\u6162\uff0c\u6240\u4ee5\u53ea\u8981\u53ef\u80fd\u6211\u4eec\u90fd\u8981\u5c1d\u8bd5\u5c3d\u91cf\u4e00\u6b21\u6027\u53d1\u9001\u5c3d\u53ef\u80fd\u591a\u7684\u6570\u636e\u3002\u5f53\u6570\u636e\u53d1\u9001\u81f3\u663e\u5361\u7684\u5185\u5b58\u4e2d\u540e\uff0c\u9876\u70b9\u7740\u8272\u5668\u51e0\u4e4e\u80fd\u7acb\u5373\u8bbf\u95ee\u9876\u70b9\uff0c\u8fd9\u662f\u4e2a\u975e\u5e38\u5feb\u7684\u8fc7\u7a0b\u3002 \u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u662f\u6211\u4eec\u5728 OpenGL \u6559\u7a0b\u4e2d\u7b2c\u4e00\u4e2a\u51fa\u73b0\u7684OpenGL\u5bf9\u8c61\u3002\u5c31\u50cfOpenGL\u4e2d\u7684\u5176\u5b83\u5bf9\u8c61\u4e00\u6837\uff0c\u8fd9\u4e2a\u7f13\u51b2\u6709\u4e00\u4e2a\u72ec\u4e00\u65e0\u4e8c\u7684ID\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 glGenBuffers \u51fd\u6570\u751f\u6210\u4e00\u4e2a\u5e26\u6709\u7f13\u51b2ID\u7684VBO\u5bf9\u8c61\uff1a unsigned int VBO; glGenBuffers(1, &VBO); OpenGL\u6709\u5f88\u591a\u7f13\u51b2\u5bf9\u8c61\u7c7b\u578b\uff0c\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u7684\u7f13\u51b2\u7c7b\u578b\u662f GL_ARRAY_BUFFER \u3002OpenGL\u5141\u8bb8\u6211\u4eec\u540c\u65f6\u7ed1\u5b9a\u591a\u4e2a\u7f13\u51b2\uff0c\u53ea\u8981\u5b83\u4eec\u662f\u4e0d\u540c\u7684\u7f13\u51b2\u7c7b\u578b\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 glBindBuffer \u51fd\u6570\u628a\u65b0\u521b\u5efa\u7684\u7f13\u51b2\u7ed1\u5b9a\u5230 GL_ARRAY_BUFFER \u76ee\u6807\u4e0a\uff1a glBindBuffer(GL_ARRAY_BUFFER, VBO); \u4ece\u8fd9\u4e00\u523b\u8d77\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u4efb\u4f55\uff08\u5728 GL_ARRAY_BUFFER \u76ee\u6807\u4e0a\u7684\uff09\u7f13\u51b2\u8c03\u7528\u90fd\u4f1a\u7528\u6765\u914d\u7f6e\u5f53\u524d\u7ed1\u5b9a\u7684\u7f13\u51b2( VBO )\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u8c03\u7528 glBufferData \u51fd\u6570\uff0c\u5b83\u4f1a\u628a\u4e4b\u524d\u5b9a\u4e49\u7684\u9876\u70b9\u6570\u636e\u590d\u5236\u5230\u7f13\u51b2\u7684\u5185\u5b58\u4e2d\uff1a glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW); glBufferData \u662f\u4e00\u4e2a\u4e13\u95e8\u7528\u6765\u628a\u7528\u6237\u5b9a\u4e49\u7684\u6570\u636e\u590d\u5236\u5230\u5f53\u524d\u7ed1\u5b9a\u7f13\u51b2\u7684\u51fd\u6570\u3002\u5b83\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u76ee\u6807\u7f13\u51b2\u7684\u7c7b\u578b\uff1a\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u5f53\u524d\u7ed1\u5b9a\u5230 GL_ARRAY_BUFFER \u76ee\u6807\u4e0a\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u4f20\u8f93\u6570\u636e\u7684\u5927\u5c0f(\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d)\uff1b\u7528\u4e00\u4e2a\u7b80\u5355\u7684 sizeof \u8ba1\u7b97\u51fa\u9876\u70b9\u6570\u636e\u5927\u5c0f\u5c31\u884c\u3002\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u6211\u4eec\u5e0c\u671b\u53d1\u9001\u7684\u5b9e\u9645\u6570\u636e\u3002 \u7b2c\u56db\u4e2a\u53c2\u6570\u6307\u5b9a\u4e86\u6211\u4eec\u5e0c\u671b\u663e\u5361\u5982\u4f55\u7ba1\u7406\u7ed9\u5b9a\u7684\u6570\u636e\u3002\u5b83\u6709\u4e09\u79cd\u5f62\u5f0f\uff1a GL_STATIC_DRAW \uff1a\u6570\u636e\u4e0d\u4f1a\u6216\u51e0\u4e4e\u4e0d\u4f1a\u6539\u53d8\u3002 GL_DYNAMIC_DRAW \uff1a\u6570\u636e\u4f1a\u88ab\u6539\u53d8\u5f88\u591a\u3002 GL_STREAM_DRAW \uff1a\u6570\u636e\u6bcf\u6b21\u7ed8\u5236\u65f6\u90fd\u4f1a\u6539\u53d8\u3002 \u4e09\u89d2\u5f62\u7684\u4f4d\u7f6e\u6570\u636e\u4e0d\u4f1a\u6539\u53d8\uff0c\u6bcf\u6b21\u6e32\u67d3\u8c03\u7528\u65f6\u90fd\u4fdd\u6301\u539f\u6837\uff0c\u6240\u4ee5\u5b83\u7684\u4f7f\u7528\u7c7b\u578b\u6700\u597d\u662f GL_STATIC_DRAW \u3002\u5982\u679c\uff0c\u6bd4\u5982\u8bf4\u4e00\u4e2a\u7f13\u51b2\u4e2d\u7684\u6570\u636e\u5c06\u9891\u7e41\u88ab\u6539\u53d8\uff0c\u90a3\u4e48\u4f7f\u7528\u7684\u7c7b\u578b\u5c31\u662f GL_DYNAMIC_DRAW \u6216 GL_STREAM_DRAW \uff0c\u8fd9\u6837\u5c31\u80fd\u786e\u4fdd\u663e\u5361\u628a\u6570\u636e\u653e\u5728\u80fd\u591f\u9ad8\u901f\u5199\u5165\u7684\u5185\u5b58\u90e8\u5206\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u628a\u9876\u70b9\u6570\u636e\u50a8\u5b58\u5728\u663e\u5361\u7684\u5185\u5b58\u4e2d\uff0c\u7528 VBO \u8fd9\u4e2a\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u7ba1\u7406\u3002\u4e0b\u9762\u6211\u4eec\u4f1a\u521b\u5efa\u4e00\u4e2a\u9876\u70b9\u7740\u8272\u5668\u548c\u7247\u6bb5\u7740\u8272\u5668\u6765\u771f\u6b63\u5904\u7406\u8fd9\u4e9b\u6570\u636e\u3002\u73b0\u5728\u6211\u4eec\u5f00\u59cb\u7740\u624b\u521b\u5efa\u5b83\u4eec\u5427\u3002 \u9876\u70b9\u7740\u8272\u5668 \u9876\u70b9\u7740\u8272\u5668(Vertex Shader)\u662f\u51e0\u4e2a\u53ef\u7f16\u7a0b\u7740\u8272\u5668\u4e2d\u7684\u4e00\u4e2a\u3002\u5982\u679c\u6211\u4eec\u6253\u7b97\u505a\u6e32\u67d3\u7684\u8bdd\uff0c\u73b0\u4ee3OpenGL\u9700\u8981\u6211\u4eec\u81f3\u5c11\u8bbe\u7f6e\u4e00\u4e2a\u9876\u70b9\u548c\u4e00\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u3002\u6211\u4eec\u4f1a\u7b80\u8981\u4ecb\u7ecd\u4e00\u4e0b\u7740\u8272\u5668\u4ee5\u53ca\u914d\u7f6e\u4e24\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u7740\u8272\u5668\u6765\u7ed8\u5236\u6211\u4eec\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u3002\u4e0b\u4e00\u8282\u4e2d\u6211\u4eec\u4f1a\u66f4\u8be6\u7ec6\u7684\u8ba8\u8bba\u7740\u8272\u5668\u3002 \u6211\u4eec\u9700\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u7528\u7740\u8272\u5668\u8bed\u8a00GLSL(OpenGL Shading Language)\u7f16\u5199\u9876\u70b9\u7740\u8272\u5668\uff0c\u7136\u540e\u7f16\u8bd1\u8fd9\u4e2a\u7740\u8272\u5668\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u5b83\u4e86\u3002\u4e0b\u9762\u4f60\u4f1a\u770b\u5230\u4e00\u4e2a\u975e\u5e38\u57fa\u7840\u7684GLSL\u9876\u70b9\u7740\u8272\u5668\u7684\u6e90\u4ee3\u7801\uff1a #version 330 core layout (location = 0) in vec3 aPos; void main() { gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0); } \u53ef\u4ee5\u770b\u5230\uff0cGLSL\u770b\u8d77\u6765\u5f88\u50cfC\u8bed\u8a00\u3002\u6bcf\u4e2a\u7740\u8272\u5668\u90fd\u8d77\u59cb\u4e8e\u4e00\u4e2a\u7248\u672c\u58f0\u660e\u3002OpenGL 3.3\u4ee5\u53ca\u548c\u66f4\u9ad8\u7248\u672c\u4e2d\uff0cGLSL\u7248\u672c\u53f7\u548cOpenGL\u7684\u7248\u672c\u662f\u5339\u914d\u7684\uff08\u6bd4\u5982\u8bf4GLSL 420\u7248\u672c\u5bf9\u5e94\u4e8eOpenGL 4.2\uff09\u3002\u6211\u4eec\u540c\u6837\u660e\u786e\u8868\u793a\u6211\u4eec\u4f1a\u4f7f\u7528\u6838\u5fc3\u6a21\u5f0f\u3002 \u4e0b\u4e00\u6b65\uff0c\u4f7f\u7528 in \u5173\u952e\u5b57\uff0c\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u58f0\u660e\u6240\u6709\u7684\u8f93\u5165\u9876\u70b9\u5c5e\u6027(Input Vertex Attribute)\u3002\u73b0\u5728\u6211\u4eec\u53ea\u5173\u5fc3\u4f4d\u7f6e(Position)\u6570\u636e\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\u3002GLSL\u6709\u4e00\u4e2a\u5411\u91cf\u6570\u636e\u7c7b\u578b\uff0c\u5b83\u5305\u542b1\u52304\u4e2a float \u5206\u91cf\uff0c\u5305\u542b\u7684\u6570\u91cf\u53ef\u4ee5\u4ece\u5b83\u7684\u540e\u7f00\u6570\u5b57\u770b\u51fa\u6765\u3002\u7531\u4e8e\u6bcf\u4e2a\u9876\u70b9\u90fd\u6709\u4e00\u4e2a3D\u5750\u6807\uff0c\u6211\u4eec\u5c31\u521b\u5efa\u4e00\u4e2a vec3 \u8f93\u5165\u53d8\u91cf aPos \u3002\u6211\u4eec\u540c\u6837\u4e5f\u901a\u8fc7 layout (location = 0) \u8bbe\u5b9a\u4e86\u8f93\u5165\u53d8\u91cf\u7684\u4f4d\u7f6e\u503c(Location)\u4f60\u540e\u9762\u4f1a\u770b\u5230\u4e3a\u4ec0\u4e48\u6211\u4eec\u4f1a\u9700\u8981\u8fd9\u4e2a\u4f4d\u7f6e\u503c\u3002 Important \u5411\u91cf(Vector) \u5728\u56fe\u5f62\u7f16\u7a0b\u4e2d\u6211\u4eec\u7ecf\u5e38\u4f1a\u4f7f\u7528\u5411\u91cf\u8fd9\u4e2a\u6570\u5b66\u6982\u5ff5\uff0c\u56e0\u4e3a\u5b83\u7b80\u660e\u5730\u8868\u8fbe\u4e86\u4efb\u610f\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\uff0c\u5e76\u4e14\u5b83\u6709\u975e\u5e38\u6709\u7528\u7684\u6570\u5b66\u5c5e\u6027\u3002\u5728GLSL\u4e2d\u4e00\u4e2a\u5411\u91cf\u6709\u6700\u591a4\u4e2a\u5206\u91cf\uff0c\u6bcf\u4e2a\u5206\u91cf\u503c\u90fd\u4ee3\u8868\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u5750\u6807\uff0c\u5b83\u4eec\u53ef\u4ee5\u901a\u8fc7 vec.x \u3001 vec.y \u3001 vec.z \u548c vec.w \u6765\u83b7\u53d6\u3002\u6ce8\u610f vec.w \u5206\u91cf\u4e0d\u662f\u7528\u4f5c\u8868\u8fbe\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\u7684\uff08\u6211\u4eec\u5904\u7406\u7684\u662f3D\u4e0d\u662f4D\uff09\uff0c\u800c\u662f\u7528\u5728\u6240\u8c13\u900f\u89c6\u9664\u6cd5(Perspective Division)\u4e0a\u3002\u6211\u4eec\u4f1a\u5728\u540e\u9762\u7684\u6559\u7a0b\u4e2d\u66f4\u8be6\u7ec6\u5730\u8ba8\u8bba\u5411\u91cf\u3002 \u4e3a\u4e86\u8bbe\u7f6e\u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u51fa\uff0c\u6211\u4eec\u5fc5\u987b\u628a\u4f4d\u7f6e\u6570\u636e\u8d4b\u503c\u7ed9\u9884\u5b9a\u4e49\u7684 gl_Position \u53d8\u91cf\uff0c\u5b83\u5728\u5e55\u540e\u662f vec4 \u7c7b\u578b\u7684\u3002\u5728 main \u51fd\u6570\u7684\u6700\u540e\uff0c\u6211\u4eec\u5c06 gl_Position \u8bbe\u7f6e\u7684\u503c\u4f1a\u6210\u4e3a\u8be5\u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u51fa\u3002\u7531\u4e8e\u6211\u4eec\u7684\u8f93\u5165\u662f\u4e00\u4e2a3\u5206\u91cf\u7684\u5411\u91cf\uff0c\u6211\u4eec\u5fc5\u987b\u628a\u5b83\u8f6c\u6362\u4e3a4\u5206\u91cf\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u628a vec3 \u7684\u6570\u636e\u4f5c\u4e3a vec4 \u6784\u9020\u5668\u7684\u53c2\u6570\uff0c\u540c\u65f6\u628a w \u5206\u91cf\u8bbe\u7f6e\u4e3a 1.0f \uff08\u6211\u4eec\u4f1a\u5728\u540e\u9762\u89e3\u91ca\u4e3a\u4ec0\u4e48\uff09\u6765\u5b8c\u6210\u8fd9\u4e00\u4efb\u52a1\u3002 \u5f53\u524d\u8fd9\u4e2a\u9876\u70b9\u7740\u8272\u5668\u53ef\u80fd\u662f\u6211\u4eec\u80fd\u60f3\u5230\u7684\u6700\u7b80\u5355\u7684\u9876\u70b9\u7740\u8272\u5668\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u5bf9\u8f93\u5165\u6570\u636e\u4ec0\u4e48\u90fd\u6ca1\u6709\u5904\u7406\u5c31\u628a\u5b83\u4f20\u5230\u7740\u8272\u5668\u7684\u8f93\u51fa\u4e86\u3002\u5728\u771f\u5b9e\u7684\u7a0b\u5e8f\u91cc\u8f93\u5165\u6570\u636e\u901a\u5e38\u90fd\u4e0d\u662f\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\uff0c\u6240\u4ee5\u6211\u4eec\u9996\u5148\u5fc5\u987b\u5148\u628a\u5b83\u4eec\u8f6c\u6362\u81f3OpenGL\u7684\u53ef\u89c6\u533a\u57df\u5185\u3002 \u7f16\u8bd1\u7740\u8272\u5668 \u73b0\u5728\uff0c\u6211\u4eec\u6682\u65f6\u5c06\u9876\u70b9\u7740\u8272\u5668\u7684\u6e90\u4ee3\u7801\u786c\u7f16\u7801\u5728\u4ee3\u7801\u6587\u4ef6\u9876\u90e8\u7684C\u98ce\u683c\u5b57\u7b26\u4e32\u4e2d\uff1a const char *vertexShaderSource = \"#version 330 core\\n\" \"layout (location = 0) in vec3 aPos;\\n\" \"void main()\\n\" \"{\\n\" \" gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0);\\n\" \"}\\0\"; \u4e3a\u4e86\u80fd\u591f\u8ba9OpenGL\u4f7f\u7528\u5b83\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u7f16\u8bd1\u5b83\u7684\u6e90\u4ee3\u7801\u3002 \u6211\u4eec\u9996\u5148\u8981\u505a\u7684\u662f\u521b\u5efa\u4e00\u4e2a\u7740\u8272\u5668\u5bf9\u8c61\uff0c\u6ce8\u610f\u8fd8\u662f\u7528ID\u6765\u5f15\u7528\u7684\u3002\u6240\u4ee5\u6211\u4eec\u50a8\u5b58\u8fd9\u4e2a\u9876\u70b9\u7740\u8272\u5668\u4e3a unsigned int \uff0c\u7136\u540e\u7528 glCreateShader \u521b\u5efa\u8fd9\u4e2a\u7740\u8272\u5668\uff1a unsigned int vertexShader; vertexShader = glCreateShader(GL_VERTEX_SHADER); \u6211\u4eec\u628a\u9700\u8981\u521b\u5efa\u7684\u7740\u8272\u5668\u7c7b\u578b\u4ee5\u53c2\u6570\u5f62\u5f0f\u63d0\u4f9b\u7ed9 glCreateShader \u3002\u7531\u4e8e\u6211\u4eec\u6b63\u5728\u521b\u5efa\u4e00\u4e2a\u9876\u70b9\u7740\u8272\u5668\uff0c\u4f20\u9012\u7684\u53c2\u6570\u662f GL_VERTEX_SHADER \u3002 \u4e0b\u4e00\u6b65\u6211\u4eec\u628a\u8fd9\u4e2a\u7740\u8272\u5668\u6e90\u7801\u9644\u52a0\u5230\u7740\u8272\u5668\u5bf9\u8c61\u4e0a\uff0c\u7136\u540e\u7f16\u8bd1\u5b83\uff1a glShaderSource(vertexShader, 1, &vertexShaderSource, NULL); glCompileShader(vertexShader); glShaderSource \u51fd\u6570\u628a\u8981\u7f16\u8bd1\u7684\u7740\u8272\u5668\u5bf9\u8c61\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002\u7b2c\u4e8c\u53c2\u6570\u6307\u5b9a\u4e86\u4f20\u9012\u7684\u6e90\u7801\u5b57\u7b26\u4e32\u6570\u91cf\uff0c\u8fd9\u91cc\u53ea\u6709\u4e00\u4e2a\u3002\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u9876\u70b9\u7740\u8272\u5668\u771f\u6b63\u7684\u6e90\u7801\uff0c\u7b2c\u56db\u4e2a\u53c2\u6570\u6211\u4eec\u5148\u8bbe\u7f6e\u4e3a NULL \u3002 Important \u4f60\u53ef\u80fd\u4f1a\u5e0c\u671b\u68c0\u6d4b\u5728\u8c03\u7528 glCompileShader \u540e\u7f16\u8bd1\u662f\u5426\u6210\u529f\u4e86\uff0c\u5982\u679c\u6ca1\u6210\u529f\u7684\u8bdd\uff0c\u4f60\u8fd8\u4f1a\u5e0c\u671b\u77e5\u9053\u9519\u8bef\u662f\u4ec0\u4e48\uff0c\u8fd9\u6837\u4f60\u624d\u80fd\u4fee\u590d\u5b83\u4eec\u3002\u68c0\u6d4b\u7f16\u8bd1\u65f6\u9519\u8bef\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u6765\u5b9e\u73b0\uff1a int success; char infoLog[512]; glGetShaderiv(vertexShader, GL_COMPILE_STATUS, &success); \u9996\u5148\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\u6765\u8868\u793a\u662f\u5426\u6210\u529f\u7f16\u8bd1\uff0c\u8fd8\u5b9a\u4e49\u4e86\u4e00\u4e2a\u50a8\u5b58\u9519\u8bef\u6d88\u606f\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u7684\u5bb9\u5668\u3002\u7136\u540e\u6211\u4eec\u7528 glGetShaderiv \u68c0\u67e5\u662f\u5426\u7f16\u8bd1\u6210\u529f\u3002\u5982\u679c\u7f16\u8bd1\u5931\u8d25\uff0c\u6211\u4eec\u4f1a\u7528 glGetShaderInfoLog \u83b7\u53d6\u9519\u8bef\u6d88\u606f\uff0c\u7136\u540e\u6253\u5370\u5b83\u3002 if(!success) { glGetShaderInfoLog(vertexShader, 512, NULL, infoLog); std::cout << \"ERROR::SHADER::VERTEX::COMPILATION_FAILED\\n\" << infoLog << std::endl; } \u5982\u679c\u7f16\u8bd1\u7684\u65f6\u5019\u6ca1\u6709\u68c0\u6d4b\u5230\u4efb\u4f55\u9519\u8bef\uff0c\u9876\u70b9\u7740\u8272\u5668\u5c31\u88ab\u7f16\u8bd1\u6210\u529f\u4e86\u3002 \u7247\u6bb5\u7740\u8272\u5668 \u7247\u6bb5\u7740\u8272\u5668(Fragment Shader)\u662f\u7b2c\u4e8c\u4e2a\u4e5f\u662f\u6700\u540e\u4e00\u4e2a\u6211\u4eec\u6253\u7b97\u521b\u5efa\u7684\u7528\u4e8e\u6e32\u67d3\u4e09\u89d2\u5f62\u7684\u7740\u8272\u5668\u3002\u7247\u6bb5\u7740\u8272\u5668\u6240\u505a\u7684\u662f\u8ba1\u7b97\u50cf\u7d20\u6700\u540e\u7684\u989c\u8272\u8f93\u51fa\u3002\u4e3a\u4e86\u8ba9\u4e8b\u60c5\u66f4\u7b80\u5355\uff0c\u6211\u4eec\u7684\u7247\u6bb5\u7740\u8272\u5668\u5c06\u4f1a\u4e00\u76f4\u8f93\u51fa\u6a58\u9ec4\u8272\u3002 Important \u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u4e2d\u989c\u8272\u88ab\u8868\u793a\u4e3a\u67094\u4e2a\u5143\u7d20\u7684\u6570\u7ec4\uff1a\u7ea2\u8272\u3001\u7eff\u8272\u3001\u84dd\u8272\u548calpha(\u900f\u660e\u5ea6)\u5206\u91cf\uff0c\u901a\u5e38\u7f29\u5199\u4e3aRGBA\u3002\u5f53\u5728OpenGL\u6216GLSL\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u989c\u8272\u7684\u65f6\u5019\uff0c\u6211\u4eec\u628a\u989c\u8272\u6bcf\u4e2a\u5206\u91cf\u7684\u5f3a\u5ea6\u8bbe\u7f6e\u57280.0\u52301.0\u4e4b\u95f4\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u8bbe\u7f6e\u7ea2\u4e3a1.0f\uff0c\u7eff\u4e3a1.0f\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e24\u4e2a\u989c\u8272\u7684\u6df7\u5408\u8272\uff0c\u5373\u9ec4\u8272\u3002\u8fd9\u4e09\u79cd\u989c\u8272\u5206\u91cf\u7684\u4e0d\u540c\u8c03\u914d\u53ef\u4ee5\u751f\u6210\u8d85\u8fc71600\u4e07\u79cd\u4e0d\u540c\u7684\u989c\u8272\uff01 #version 330 core out vec4 FragColor; void main() { FragColor = vec4(1.0f, 0.5f, 0.2f, 1.0f); } \u7247\u6bb5\u7740\u8272\u5668\u53ea\u9700\u8981\u4e00\u4e2a\u8f93\u51fa\u53d8\u91cf\uff0c\u8fd9\u4e2a\u53d8\u91cf\u662f\u4e00\u4e2a4\u5206\u91cf\u5411\u91cf\uff0c\u5b83\u8868\u793a\u7684\u662f\u6700\u7ec8\u7684\u8f93\u51fa\u989c\u8272\uff0c\u6211\u4eec\u5e94\u8be5\u81ea\u5df1\u5c06\u5176\u8ba1\u7b97\u51fa\u6765\u3002\u58f0\u660e\u8f93\u51fa\u53d8\u91cf\u53ef\u4ee5\u4f7f\u7528 out \u5173\u952e\u5b57\uff0c\u8fd9\u91cc\u6211\u4eec\u547d\u540d\u4e3a FragColor \u3002\u4e0b\u9762\uff0c\u6211\u4eec\u5c06\u4e00\u4e2aAlpha\u503c\u4e3a1.0(1.0\u4ee3\u8868\u5b8c\u5168\u4e0d\u900f\u660e)\u7684\u6a58\u9ec4\u8272\u7684 vec4 \u8d4b\u503c\u7ed9\u989c\u8272\u8f93\u51fa\u3002 \u7f16\u8bd1\u7247\u6bb5\u7740\u8272\u5668\u7684\u8fc7\u7a0b\u4e0e\u9876\u70b9\u7740\u8272\u5668\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u6211\u4eec\u4f7f\u7528 GL_FRAGMENT_SHADER \u5e38\u91cf\u4f5c\u4e3a\u7740\u8272\u5668\u7c7b\u578b\uff1a unsigned int fragmentShader; fragmentShader = glCreateShader(GL_FRAGMENT_SHADER); glShaderSource(fragmentShader, 1, &fragmentShaderSource, NULL); glCompileShader(fragmentShader); \u4e24\u4e2a\u7740\u8272\u5668\u73b0\u5728\u90fd\u7f16\u8bd1\u4e86\uff0c\u5269\u4e0b\u7684\u4e8b\u60c5\u662f\u628a\u4e24\u4e2a\u7740\u8272\u5668\u5bf9\u8c61\u94fe\u63a5\u5230\u4e00\u4e2a\u7528\u6765\u6e32\u67d3\u7684 \u7740\u8272\u5668\u7a0b\u5e8f (Shader Program)\u4e2d\u3002 \u7740\u8272\u5668\u7a0b\u5e8f \u7740\u8272\u5668\u7a0b\u5e8f\u5bf9\u8c61(Shader Program Object)\u662f\u591a\u4e2a\u7740\u8272\u5668\u5408\u5e76\u4e4b\u540e\u5e76\u6700\u7ec8\u94fe\u63a5\u5b8c\u6210\u7684\u7248\u672c\u3002\u5982\u679c\u8981\u4f7f\u7528\u521a\u624d\u7f16\u8bd1\u7684\u7740\u8272\u5668\u6211\u4eec\u5fc5\u987b\u628a\u5b83\u4eec \u94fe\u63a5 (Link)\u4e3a\u4e00\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\u5bf9\u8c61\uff0c\u7136\u540e\u5728\u6e32\u67d3\u5bf9\u8c61\u7684\u65f6\u5019\u6fc0\u6d3b\u8fd9\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\u3002\u5df2\u6fc0\u6d3b\u7740\u8272\u5668\u7a0b\u5e8f\u7684\u7740\u8272\u5668\u5c06\u5728\u6211\u4eec\u53d1\u9001\u6e32\u67d3\u8c03\u7528\u7684\u65f6\u5019\u88ab\u4f7f\u7528\u3002 \u5f53\u94fe\u63a5\u7740\u8272\u5668\u81f3\u4e00\u4e2a\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u5b83\u4f1a\u628a\u6bcf\u4e2a\u7740\u8272\u5668\u7684\u8f93\u51fa\u94fe\u63a5\u5230\u4e0b\u4e2a\u7740\u8272\u5668\u7684\u8f93\u5165\u3002\u5f53\u8f93\u51fa\u548c\u8f93\u5165\u4e0d\u5339\u914d\u7684\u65f6\u5019\uff0c\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u8fde\u63a5\u9519\u8bef\u3002 \u521b\u5efa\u4e00\u4e2a\u7a0b\u5e8f\u5bf9\u8c61\u5f88\u7b80\u5355\uff1a unsigned int shaderProgram; shaderProgram = glCreateProgram(); glCreateProgram \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5e76\u8fd4\u56de\u65b0\u521b\u5efa\u7a0b\u5e8f\u5bf9\u8c61\u7684ID\u5f15\u7528\u3002\u73b0\u5728\u6211\u4eec\u9700\u8981\u628a\u4e4b\u524d\u7f16\u8bd1\u7684\u7740\u8272\u5668\u9644\u52a0\u5230\u7a0b\u5e8f\u5bf9\u8c61\u4e0a\uff0c\u7136\u540e\u7528 glLinkProgram \u94fe\u63a5\u5b83\u4eec\uff1a glAttachShader(shaderProgram, vertexShader); glAttachShader(shaderProgram, fragmentShader); glLinkProgram(shaderProgram); \u4ee3\u7801\u5e94\u8be5\u5f88\u6e05\u695a\uff0c\u6211\u4eec\u628a\u7740\u8272\u5668\u9644\u52a0\u5230\u4e86\u7a0b\u5e8f\u4e0a\uff0c\u7136\u540e\u7528 glLinkProgram \u94fe\u63a5\u3002 Important \u5c31\u50cf\u7740\u8272\u5668\u7684\u7f16\u8bd1\u4e00\u6837\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u68c0\u6d4b\u94fe\u63a5\u7740\u8272\u5668\u7a0b\u5e8f\u662f\u5426\u5931\u8d25\uff0c\u5e76\u83b7\u53d6\u76f8\u5e94\u7684\u65e5\u5fd7\u3002\u4e0e\u4e0a\u9762\u4e0d\u540c\uff0c\u6211\u4eec\u4e0d\u4f1a\u8c03\u7528 glGetShaderiv \u548c glGetShaderInfoLog \uff0c\u73b0\u5728\u6211\u4eec\u4f7f\u7528\uff1a glGetProgramiv(shaderProgram, GL_LINK_STATUS, &success); if(!success) { glGetProgramInfoLog(shaderProgram, 512, NULL, infoLog); ... } \u5f97\u5230\u7684\u7ed3\u679c\u5c31\u662f\u4e00\u4e2a\u7a0b\u5e8f\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u8c03\u7528 glUseProgram \u51fd\u6570\uff0c\u7528\u521a\u521b\u5efa\u7684\u7a0b\u5e8f\u5bf9\u8c61\u4f5c\u4e3a\u5b83\u7684\u53c2\u6570\uff0c\u4ee5\u6fc0\u6d3b\u8fd9\u4e2a\u7a0b\u5e8f\u5bf9\u8c61\uff1a glUseProgram(shaderProgram); \u5728 glUseProgram \u51fd\u6570\u8c03\u7528\u4e4b\u540e\uff0c\u6bcf\u4e2a\u7740\u8272\u5668\u8c03\u7528\u548c\u6e32\u67d3\u8c03\u7528\u90fd\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u7a0b\u5e8f\u5bf9\u8c61\uff08\u4e5f\u5c31\u662f\u4e4b\u524d\u5199\u7684\u7740\u8272\u5668)\u4e86\u3002 \u5bf9\u4e86\uff0c\u5728\u628a\u7740\u8272\u5668\u5bf9\u8c61\u94fe\u63a5\u5230\u7a0b\u5e8f\u5bf9\u8c61\u4ee5\u540e\uff0c\u8bb0\u5f97\u5220\u9664\u7740\u8272\u5668\u5bf9\u8c61\uff0c\u6211\u4eec\u4e0d\u518d\u9700\u8981\u5b83\u4eec\u4e86\uff1a glDeleteShader(vertexShader); glDeleteShader(fragmentShader); \u73b0\u5728\uff0c\u6211\u4eec\u5df2\u7ecf\u628a\u8f93\u5165\u9876\u70b9\u6570\u636e\u53d1\u9001\u7ed9\u4e86GPU\uff0c\u5e76\u6307\u793a\u4e86GPU\u5982\u4f55\u5728\u9876\u70b9\u548c\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u5904\u7406\u5b83\u3002\u5c31\u5feb\u8981\u5b8c\u6210\u4e86\uff0c\u4f46\u8fd8\u6ca1\u7ed3\u675f\uff0cOpenGL\u8fd8\u4e0d\u77e5\u9053\u5b83\u8be5\u5982\u4f55\u89e3\u91ca\u5185\u5b58\u4e2d\u7684\u9876\u70b9\u6570\u636e\uff0c\u4ee5\u53ca\u5b83\u8be5\u5982\u4f55\u5c06\u9876\u70b9\u6570\u636e\u94fe\u63a5\u5230\u9876\u70b9\u7740\u8272\u5668\u7684\u5c5e\u6027\u4e0a\u3002\u6211\u4eec\u9700\u8981\u544a\u8bc9OpenGL\u600e\u4e48\u505a\u3002 \u94fe\u63a5\u9876\u70b9\u5c5e\u6027 \u9876\u70b9\u7740\u8272\u5668\u5141\u8bb8\u6211\u4eec\u6307\u5b9a\u4efb\u4f55\u4ee5\u9876\u70b9\u5c5e\u6027\u4e3a\u5f62\u5f0f\u7684\u8f93\u5165\u3002\u8fd9\u4f7f\u5176\u5177\u6709\u5f88\u5f3a\u7684\u7075\u6d3b\u6027\u7684\u540c\u65f6\uff0c\u5b83\u8fd8\u7684\u786e\u610f\u5473\u7740\u6211\u4eec\u5fc5\u987b\u624b\u52a8\u6307\u5b9a\u8f93\u5165\u6570\u636e\u7684\u54ea\u4e00\u4e2a\u90e8\u5206\u5bf9\u5e94\u9876\u70b9\u7740\u8272\u5668\u7684\u54ea\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u6e32\u67d3\u524d\u6307\u5b9aOpenGL\u8be5\u5982\u4f55\u89e3\u91ca\u9876\u70b9\u6570\u636e\u3002 \u6211\u4eec\u7684\u9876\u70b9\u7f13\u51b2\u6570\u636e\u4f1a\u88ab\u89e3\u6790\u4e3a\u4e0b\u9762\u8fd9\u6837\u5b50\uff1a \u4f4d\u7f6e\u6570\u636e\u88ab\u50a8\u5b58\u4e3a32\u4f4d\uff084\u5b57\u8282\uff09\u6d6e\u70b9\u503c\u3002 \u6bcf\u4e2a\u4f4d\u7f6e\u5305\u542b3\u4e2a\u8fd9\u6837\u7684\u503c\u3002 \u5728\u8fd93\u4e2a\u503c\u4e4b\u95f4\u6ca1\u6709\u7a7a\u9699\uff08\u6216\u5176\u4ed6\u503c\uff09\u3002\u8fd9\u51e0\u4e2a\u503c\u5728\u6570\u7ec4\u4e2d \u7d27\u5bc6\u6392\u5217 (Tightly Packed)\u3002 \u6570\u636e\u4e2d\u7b2c\u4e00\u4e2a\u503c\u5728\u7f13\u51b2\u5f00\u59cb\u7684\u4f4d\u7f6e\u3002 \u6709\u4e86\u8fd9\u4e9b\u4fe1\u606f\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 glVertexAttribPointer \u51fd\u6570\u544a\u8bc9OpenGL\u8be5\u5982\u4f55\u89e3\u6790\u9876\u70b9\u6570\u636e\uff08\u5e94\u7528\u5230\u9010\u4e2a\u9876\u70b9\u5c5e\u6027\u4e0a\uff09\u4e86\uff1a glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0); glEnableVertexAttribArray(0); glVertexAttribPointer \u51fd\u6570\u7684\u53c2\u6570\u975e\u5e38\u591a\uff0c\u6240\u4ee5\u6211\u4f1a\u9010\u4e00\u4ecb\u7ecd\u5b83\u4eec\uff1a \u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u6211\u4eec\u8981\u914d\u7f6e\u7684\u9876\u70b9\u5c5e\u6027\u3002\u8fd8\u8bb0\u5f97\u6211\u4eec\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u4f7f\u7528 layout(location = 0) \u5b9a\u4e49\u4e86 position \u9876\u70b9\u5c5e\u6027\u7684\u4f4d\u7f6e\u503c(Location)\u5417\uff1f\u5b83\u53ef\u4ee5\u628a\u9876\u70b9\u5c5e\u6027\u7684\u4f4d\u7f6e\u503c\u8bbe\u7f6e\u4e3a 0 \u3002\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u628a\u6570\u636e\u4f20\u9012\u5230\u8fd9\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\u4e2d\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u4f20\u5165 0 \u3002 \u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u9876\u70b9\u5c5e\u6027\u7684\u5927\u5c0f\u3002\u9876\u70b9\u5c5e\u6027\u662f\u4e00\u4e2a vec3 \uff0c\u5b83\u75313\u4e2a\u503c\u7ec4\u6210\uff0c\u6240\u4ee5\u5927\u5c0f\u662f3\u3002 \u7b2c\u4e09\u4e2a\u53c2\u6570\u6307\u5b9a\u6570\u636e\u7684\u7c7b\u578b\uff0c\u8fd9\u91cc\u662f GL_FLOAT (GLSL\u4e2d vec* \u90fd\u662f\u7531\u6d6e\u70b9\u6570\u503c\u7ec4\u6210\u7684)\u3002 \u4e0b\u4e2a\u53c2\u6570\u5b9a\u4e49\u6211\u4eec\u662f\u5426\u5e0c\u671b\u6570\u636e\u88ab\u6807\u51c6\u5316(Normalize)\u3002\u5982\u679c\u6211\u4eec\u8bbe\u7f6e\u4e3a GL_TRUE \uff0c\u6240\u6709\u6570\u636e\u90fd\u4f1a\u88ab\u6620\u5c04\u52300\uff08\u5bf9\u4e8e\u6709\u7b26\u53f7\u578bsigned\u6570\u636e\u662f-1\uff09\u52301\u4e4b\u95f4\u3002\u6211\u4eec\u628a\u5b83\u8bbe\u7f6e\u4e3a GL_FALSE \u3002 \u7b2c\u4e94\u4e2a\u53c2\u6570\u53eb\u505a \u6b65\u957f (Stride)\uff0c\u5b83\u544a\u8bc9\u6211\u4eec\u5728\u8fde\u7eed\u7684\u9876\u70b9\u5c5e\u6027\u7ec4\u4e4b\u95f4\u7684\u95f4\u9694\u3002\u7531\u4e8e\u4e0b\u4e2a\u7ec4\u4f4d\u7f6e\u6570\u636e\u57283\u4e2a float \u4e4b\u540e\uff0c\u6211\u4eec\u628a\u6b65\u957f\u8bbe\u7f6e\u4e3a 3 * sizeof(float) \u3002\u8981\u6ce8\u610f\u7684\u662f\u7531\u4e8e\u6211\u4eec\u77e5\u9053\u8fd9\u4e2a\u6570\u7ec4\u662f\u7d27\u5bc6\u6392\u5217\u7684\uff08\u5728\u4e24\u4e2a\u9876\u70b9\u5c5e\u6027\u4e4b\u95f4\u6ca1\u6709\u7a7a\u9699\uff09\u6211\u4eec\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u4e3a0\u6765\u8ba9OpenGL\u51b3\u5b9a\u5177\u4f53\u6b65\u957f\u662f\u591a\u5c11\uff08\u53ea\u6709\u5f53\u6570\u503c\u662f\u7d27\u5bc6\u6392\u5217\u65f6\u624d\u53ef\u7528\uff09\u3002\u4e00\u65e6\u6211\u4eec\u6709\u66f4\u591a\u7684\u9876\u70b9\u5c5e\u6027\uff0c\u6211\u4eec\u5c31\u5fc5\u987b\u66f4\u5c0f\u5fc3\u5730\u5b9a\u4e49\u6bcf\u4e2a\u9876\u70b9\u5c5e\u6027\u4e4b\u95f4\u7684\u95f4\u9694\uff0c\u6211\u4eec\u5728\u540e\u9762\u4f1a\u770b\u5230\u66f4\u591a\u7684\u4f8b\u5b50\uff08\u8bd1\u6ce8: \u8fd9\u4e2a\u53c2\u6570\u7684\u610f\u601d\u7b80\u5355\u8bf4\u5c31\u662f\u4ece\u8fd9\u4e2a\u5c5e\u6027\u7b2c\u4e8c\u6b21\u51fa\u73b0\u7684\u5730\u65b9\u5230\u6574\u4e2a\u6570\u7ec40\u4f4d\u7f6e\u4e4b\u95f4\u6709\u591a\u5c11\u5b57\u8282\uff09\u3002 \u6700\u540e\u4e00\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\u662f void* \uff0c\u6240\u4ee5\u9700\u8981\u6211\u4eec\u8fdb\u884c\u8fd9\u4e2a\u5947\u602a\u7684\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u3002\u5b83\u8868\u793a\u4f4d\u7f6e\u6570\u636e\u5728\u7f13\u51b2\u4e2d\u8d77\u59cb\u4f4d\u7f6e\u7684 \u504f\u79fb\u91cf (Offset)\u3002\u7531\u4e8e\u4f4d\u7f6e\u6570\u636e\u5728\u6570\u7ec4\u7684\u5f00\u5934\uff0c\u6240\u4ee5\u8fd9\u91cc\u662f0\u3002\u6211\u4eec\u4f1a\u5728\u540e\u9762\u8be6\u7ec6\u89e3\u91ca\u8fd9\u4e2a\u53c2\u6570\u3002 Important \u6bcf\u4e2a\u9876\u70b9\u5c5e\u6027\u4ece\u4e00\u4e2aVBO\u7ba1\u7406\u7684\u5185\u5b58\u4e2d\u83b7\u5f97\u5b83\u7684\u6570\u636e\uff0c\u800c\u5177\u4f53\u662f\u4ece\u54ea\u4e2aVBO\uff08\u7a0b\u5e8f\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2aVBO\uff09\u83b7\u53d6\u5219\u662f\u901a\u8fc7\u5728\u8c03\u7528 glVertexAttribPointer \u65f6\u7ed1\u5b9a\u5230 GL_ARRAY_BUFFER \u7684VBO\u51b3\u5b9a\u7684\u3002\u7531\u4e8e\u5728\u8c03\u7528 glVertexAttribPointer \u4e4b\u524d\u7ed1\u5b9a\u7684\u662f\u5148\u524d\u5b9a\u4e49\u7684 VBO \u5bf9\u8c61\uff0c\u9876\u70b9\u5c5e\u6027 0 \u73b0\u5728\u4f1a\u94fe\u63a5\u5230\u5b83\u7684\u9876\u70b9\u6570\u636e\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5b9a\u4e49\u4e86OpenGL\u8be5\u5982\u4f55\u89e3\u91ca\u9876\u70b9\u6570\u636e\uff0c\u6211\u4eec\u73b0\u5728\u5e94\u8be5\u4f7f\u7528 glEnableVertexAttribArray \uff0c\u4ee5\u9876\u70b9\u5c5e\u6027\u4f4d\u7f6e\u503c\u4f5c\u4e3a\u53c2\u6570\uff0c\u542f\u7528\u9876\u70b9\u5c5e\u6027\uff1b\u9876\u70b9\u5c5e\u6027\u9ed8\u8ba4\u662f\u7981\u7528\u7684\u3002\u81ea\u6b64\uff0c\u6240\u6709\u4e1c\u897f\u90fd\u5df2\u7ecf\u8bbe\u7f6e\u597d\u4e86\uff1a\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u5c06\u9876\u70b9\u6570\u636e\u521d\u59cb\u5316\u81f3\u7f13\u51b2\u4e2d\uff0c\u5efa\u7acb\u4e86\u4e00\u4e2a\u9876\u70b9\u548c\u4e00\u4e2a\u7247\u6bb5\u7740\u8272\u5668\uff0c\u5e76\u544a\u8bc9\u4e86OpenGL\u5982\u4f55\u628a\u9876\u70b9\u6570\u636e\u94fe\u63a5\u5230\u9876\u70b9\u7740\u8272\u5668\u7684\u9876\u70b9\u5c5e\u6027\u4e0a\u3002\u5728OpenGL\u4e2d\u7ed8\u5236\u4e00\u4e2a\u7269\u4f53\uff0c\u4ee3\u7801\u4f1a\u50cf\u662f\u8fd9\u6837\uff1a // 0. \u590d\u5236\u9876\u70b9\u6570\u7ec4\u5230\u7f13\u51b2\u4e2d\u4f9bOpenGL\u4f7f\u7528 glBindBuffer(GL_ARRAY_BUFFER, VBO); glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW); // 1. \u8bbe\u7f6e\u9876\u70b9\u5c5e\u6027\u6307\u9488 glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0); glEnableVertexAttribArray(0); // 2. \u5f53\u6211\u4eec\u6e32\u67d3\u4e00\u4e2a\u7269\u4f53\u65f6\u8981\u4f7f\u7528\u7740\u8272\u5668\u7a0b\u5e8f glUseProgram(shaderProgram); // 3. \u7ed8\u5236\u7269\u4f53 someOpenGLFunctionThatDrawsOurTriangle(); \u6bcf\u5f53\u6211\u4eec\u7ed8\u5236\u4e00\u4e2a\u7269\u4f53\u7684\u65f6\u5019\u90fd\u5fc5\u987b\u91cd\u590d\u8fd9\u4e00\u8fc7\u7a0b\u3002\u8fd9\u770b\u8d77\u6765\u53ef\u80fd\u4e0d\u591a\uff0c\u4f46\u662f\u5982\u679c\u6709\u8d85\u8fc75\u4e2a\u9876\u70b9\u5c5e\u6027\uff0c\u4e0a\u767e\u4e2a\u4e0d\u540c\u7269\u4f53\u5462\uff08\u8fd9\u5176\u5b9e\u5e76\u4e0d\u7f55\u89c1\uff09\u3002\u7ed1\u5b9a\u6b63\u786e\u7684\u7f13\u51b2\u5bf9\u8c61\uff0c\u4e3a\u6bcf\u4e2a\u7269\u4f53\u914d\u7f6e\u6240\u6709\u9876\u70b9\u5c5e\u6027\u5f88\u5feb\u5c31\u53d8\u6210\u4e00\u4ef6\u9ebb\u70e6\u4e8b\u3002\u6709\u6ca1\u6709\u4e00\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u6211\u4eec\u628a\u6240\u6709\u8fd9\u4e9b\u72b6\u6001\u914d\u7f6e\u50a8\u5b58\u5728\u4e00\u4e2a\u5bf9\u8c61\u4e2d\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u7ed1\u5b9a\u8fd9\u4e2a\u5bf9\u8c61\u6765\u6062\u590d\u72b6\u6001\u5462\uff1f \u9876\u70b9\u6570\u7ec4\u5bf9\u8c61 \u9876\u70b9\u6570\u7ec4\u5bf9\u8c61 (Vertex Array Object, VAO )\u53ef\u4ee5\u50cf\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u90a3\u6837\u88ab\u7ed1\u5b9a\uff0c\u4efb\u4f55\u968f\u540e\u7684\u9876\u70b9\u5c5e\u6027\u8c03\u7528\u90fd\u4f1a\u50a8\u5b58\u5728\u8fd9\u4e2aVAO\u4e2d\u3002\u8fd9\u6837\u7684\u597d\u5904\u5c31\u662f\uff0c\u5f53\u914d\u7f6e\u9876\u70b9\u5c5e\u6027\u6307\u9488\u65f6\uff0c\u4f60\u53ea\u9700\u8981\u5c06\u90a3\u4e9b\u8c03\u7528\u6267\u884c\u4e00\u6b21\uff0c\u4e4b\u540e\u518d\u7ed8\u5236\u7269\u4f53\u7684\u65f6\u5019\u53ea\u9700\u8981\u7ed1\u5b9a\u76f8\u5e94\u7684VAO\u5c31\u884c\u4e86\u3002\u8fd9\u4f7f\u5728\u4e0d\u540c\u9876\u70b9\u6570\u636e\u548c\u5c5e\u6027\u914d\u7f6e\u4e4b\u95f4\u5207\u6362\u53d8\u5f97\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u7ed1\u5b9a\u4e0d\u540c\u7684VAO\u5c31\u884c\u4e86\u3002\u521a\u521a\u8bbe\u7f6e\u7684\u6240\u6709\u72b6\u6001\u90fd\u5c06\u5b58\u50a8\u5728VAO\u4e2d Attention OpenGL\u7684\u6838\u5fc3\u6a21\u5f0f \u8981\u6c42 \u6211\u4eec\u4f7f\u7528VAO\uff0c\u6240\u4ee5\u5b83\u77e5\u9053\u8be5\u5982\u4f55\u5904\u7406\u6211\u4eec\u7684\u9876\u70b9\u8f93\u5165\u3002\u5982\u679c\u6211\u4eec\u7ed1\u5b9aVAO\u5931\u8d25\uff0cOpenGL\u4f1a\u62d2\u7edd\u7ed8\u5236\u4efb\u4f55\u4e1c\u897f\u3002 \u4e00\u4e2a\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\u4f1a\u50a8\u5b58\u4ee5\u4e0b\u8fd9\u4e9b\u5185\u5bb9\uff1a glEnableVertexAttribArray \u548c glDisableVertexAttribArray \u7684\u8c03\u7528\u3002 \u901a\u8fc7 glVertexAttribPointer \u8bbe\u7f6e\u7684\u9876\u70b9\u5c5e\u6027\u914d\u7f6e\u3002 \u901a\u8fc7 glVertexAttribPointer \u8c03\u7528\u4e0e\u9876\u70b9\u5c5e\u6027\u5173\u8054\u7684\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u3002 \u521b\u5efa\u4e00\u4e2aVAO\u548c\u521b\u5efa\u4e00\u4e2aVBO\u5f88\u7c7b\u4f3c\uff1a unsigned int VAO; glGenVertexArrays(1, &VAO); \u8981\u60f3\u4f7f\u7528VAO\uff0c\u8981\u505a\u7684\u53ea\u662f\u4f7f\u7528 glBindVertexArray \u7ed1\u5b9aVAO\u3002\u4ece\u7ed1\u5b9a\u4e4b\u540e\u8d77\uff0c\u6211\u4eec\u5e94\u8be5\u7ed1\u5b9a\u548c\u914d\u7f6e\u5bf9\u5e94\u7684VBO\u548c\u5c5e\u6027\u6307\u9488\uff0c\u4e4b\u540e\u89e3\u7ed1VAO\u4f9b\u4e4b\u540e\u4f7f\u7528\u3002\u5f53\u6211\u4eec\u6253\u7b97\u7ed8\u5236\u4e00\u4e2a\u7269\u4f53\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u8981\u5728\u7ed8\u5236\u7269\u4f53\u524d\u7b80\u5355\u5730\u628aVAO\u7ed1\u5b9a\u5230\u5e0c\u671b\u4f7f\u7528\u7684\u8bbe\u5b9a\u4e0a\u5c31\u884c\u4e86\u3002\u8fd9\u6bb5\u4ee3\u7801\u5e94\u8be5\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a // ..:: \u521d\u59cb\u5316\u4ee3\u7801\uff08\u53ea\u8fd0\u884c\u4e00\u6b21 (\u9664\u975e\u4f60\u7684\u7269\u4f53\u9891\u7e41\u6539\u53d8)\uff09 :: .. // 1. \u7ed1\u5b9aVAO glBindVertexArray(VAO); // 2. \u628a\u9876\u70b9\u6570\u7ec4\u590d\u5236\u5230\u7f13\u51b2\u4e2d\u4f9bOpenGL\u4f7f\u7528 glBindBuffer(GL_ARRAY_BUFFER, VBO); glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW); // 3. \u8bbe\u7f6e\u9876\u70b9\u5c5e\u6027\u6307\u9488 glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0); glEnableVertexAttribArray(0); [...] // ..:: \u7ed8\u5236\u4ee3\u7801\uff08\u6e32\u67d3\u5faa\u73af\u4e2d\uff09 :: .. // 4. \u7ed8\u5236\u7269\u4f53 glUseProgram(shaderProgram); glBindVertexArray(VAO); someOpenGLFunctionThatDrawsOurTriangle(); \u5c31\u8fd9\u4e48\u591a\u4e86\uff01\u524d\u9762\u505a\u7684\u4e00\u5207\u90fd\u662f\u7b49\u5f85\u8fd9\u4e00\u523b\uff0c\u4e00\u4e2a\u50a8\u5b58\u4e86\u6211\u4eec\u9876\u70b9\u5c5e\u6027\u914d\u7f6e\u548c\u5e94\u4f7f\u7528\u7684VBO\u7684\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\u3002\u4e00\u822c\u5f53\u4f60\u6253\u7b97\u7ed8\u5236\u591a\u4e2a\u7269\u4f53\u65f6\uff0c\u4f60\u9996\u5148\u8981\u751f\u6210/\u914d\u7f6e\u6240\u6709\u7684VAO\uff08\u548c\u5fc5\u987b\u7684VBO\u53ca\u5c5e\u6027\u6307\u9488)\uff0c\u7136\u540e\u50a8\u5b58\u5b83\u4eec\u4f9b\u540e\u9762\u4f7f\u7528\u3002\u5f53\u6211\u4eec\u6253\u7b97\u7ed8\u5236\u7269\u4f53\u7684\u65f6\u5019\u5c31\u62ff\u51fa\u76f8\u5e94\u7684VAO\uff0c\u7ed1\u5b9a\u5b83\uff0c\u7ed8\u5236\u5b8c\u7269\u4f53\u540e\uff0c\u518d\u89e3\u7ed1VAO\u3002 \u6211\u4eec\u4e00\u76f4\u671f\u5f85\u7684\u4e09\u89d2\u5f62 \u8981\u60f3\u7ed8\u5236\u6211\u4eec\u60f3\u8981\u7684\u7269\u4f53\uff0cOpenGL\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86 glDrawArrays \u51fd\u6570\uff0c\u5b83\u4f7f\u7528\u5f53\u524d\u6fc0\u6d3b\u7684\u7740\u8272\u5668\uff0c\u4e4b\u524d\u5b9a\u4e49\u7684\u9876\u70b9\u5c5e\u6027\u914d\u7f6e\uff0c\u548cVBO\u7684\u9876\u70b9\u6570\u636e\uff08\u901a\u8fc7VAO\u95f4\u63a5\u7ed1\u5b9a\uff09\u6765\u7ed8\u5236\u56fe\u5143\u3002 glUseProgram(shaderProgram); glBindVertexArray(VAO); glDrawArrays(GL_TRIANGLES, 0, 3); glDrawArrays \u51fd\u6570\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u6211\u4eec\u6253\u7b97\u7ed8\u5236\u7684OpenGL\u56fe\u5143\u7684\u7c7b\u578b\u3002\u7531\u4e8e\u6211\u4eec\u5728\u4e00\u5f00\u59cb\u65f6\u8bf4\u8fc7\uff0c\u6211\u4eec\u5e0c\u671b\u7ed8\u5236\u7684\u662f\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u8fd9\u91cc\u4f20\u9012 GL_TRIANGLES \u7ed9\u5b83\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u4e86\u9876\u70b9\u6570\u7ec4\u7684\u8d77\u59cb\u7d22\u5f15\uff0c\u6211\u4eec\u8fd9\u91cc\u586b 0 \u3002\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u6211\u4eec\u6253\u7b97\u7ed8\u5236\u591a\u5c11\u4e2a\u9876\u70b9\uff0c\u8fd9\u91cc\u662f 3 \uff08\u6211\u4eec\u53ea\u4ece\u6211\u4eec\u7684\u6570\u636e\u4e2d\u6e32\u67d3\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u5b83\u53ea\u67093\u4e2a\u9876\u70b9\u957f\uff09\u3002 \u73b0\u5728\u5c1d\u8bd5\u7f16\u8bd1\u4ee3\u7801\uff0c\u5982\u679c\u5f39\u51fa\u4e86\u4efb\u4f55\u9519\u8bef\uff0c\u56de\u5934\u68c0\u67e5\u4f60\u7684\u4ee3\u7801\u3002\u5982\u679c\u4f60\u7f16\u8bd1\u901a\u8fc7\u4e86\uff0c\u4f60\u5e94\u8be5\u770b\u5230\u4e0b\u9762\u7684\u7ed3\u679c\uff1a \u5b8c\u6574\u7684\u7a0b\u5e8f\u6e90\u7801\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u3002 \u5982\u679c\u4f60\u7684\u8f93\u51fa\u548c\u8fd9\u4e2a\u770b\u8d77\u6765\u4e0d\u4e00\u6837\uff0c\u4f60\u53ef\u80fd\u505a\u9519\u4e86\u4ec0\u4e48\u3002\u53bb\u67e5\u770b\u4e00\u4e0b\u6e90\u7801\uff0c\u68c0\u67e5\u4f60\u662f\u5426\u9057\u6f0f\u4e86\u4ec0\u4e48\u4e1c\u897f\uff0c\u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u5728\u8bc4\u8bba\u533a\u63d0\u95ee\u3002 \u5143\u7d20\u7f13\u51b2\u5bf9\u8c61 \u5728\u6e32\u67d3\u9876\u70b9\u8fd9\u4e00\u8bdd\u9898\u4e0a\u6211\u4eec\u8fd8\u6709\u6700\u540e\u4e00\u4e2a\u9700\u8981\u8ba8\u8bba\u7684\u4e1c\u897f\u2014\u2014\u5143\u7d20\u7f13\u51b2\u5bf9\u8c61(Element Buffer Object\uff0cEBO)\uff0c\u4e5f\u53eb\u7d22\u5f15\u7f13\u51b2\u5bf9\u8c61(Index Buffer Object\uff0cIBO)\u3002\u8981\u89e3\u91ca\u5143\u7d20\u7f13\u51b2\u5bf9\u8c61\u7684\u5de5\u4f5c\u65b9\u5f0f\u6700\u597d\u8fd8\u662f\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u5047\u8bbe\u6211\u4eec\u4e0d\u518d\u7ed8\u5236\u4e00\u4e2a\u4e09\u89d2\u5f62\u800c\u662f\u7ed8\u5236\u4e00\u4e2a\u77e9\u5f62\u3002\u6211\u4eec\u53ef\u4ee5\u7ed8\u5236\u4e24\u4e2a\u4e09\u89d2\u5f62\u6765\u7ec4\u6210\u4e00\u4e2a\u77e9\u5f62\uff08OpenGL\u4e3b\u8981\u5904\u7406\u4e09\u89d2\u5f62\uff09\u3002\u8fd9\u4f1a\u751f\u6210\u4e0b\u9762\u7684\u9876\u70b9\u7684\u96c6\u5408\uff1a float vertices[] = { // \u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62 0.5f, 0.5f, 0.0f, // \u53f3\u4e0a\u89d2 0.5f, -0.5f, 0.0f, // \u53f3\u4e0b\u89d2 -0.5f, 0.5f, 0.0f, // \u5de6\u4e0a\u89d2 // \u7b2c\u4e8c\u4e2a\u4e09\u89d2\u5f62 0.5f, -0.5f, 0.0f, // \u53f3\u4e0b\u89d2 -0.5f, -0.5f, 0.0f, // \u5de6\u4e0b\u89d2 -0.5f, 0.5f, 0.0f // \u5de6\u4e0a\u89d2 }; \u53ef\u4ee5\u770b\u5230\uff0c\u6709\u51e0\u4e2a\u9876\u70b9\u53e0\u52a0\u4e86\u3002\u6211\u4eec\u6307\u5b9a\u4e86 \u53f3\u4e0b\u89d2 \u548c \u5de6\u4e0a\u89d2 \u4e24\u6b21\uff01\u4e00\u4e2a\u77e9\u5f62\u53ea\u67094\u4e2a\u800c\u4e0d\u662f6\u4e2a\u9876\u70b9\uff0c\u8fd9\u6837\u5c31\u4ea7\u751f50%\u7684\u989d\u5916\u5f00\u9500\u3002\u5f53\u6211\u4eec\u6709\u5305\u62ec\u4e0a\u5343\u4e2a\u4e09\u89d2\u5f62\u7684\u6a21\u578b\u4e4b\u540e\u8fd9\u4e2a\u95ee\u9898\u4f1a\u66f4\u7cdf\u7cd5\uff0c\u8fd9\u4f1a\u4ea7\u751f\u4e00\u5927\u5806\u6d6a\u8d39\u3002\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\u662f\u53ea\u50a8\u5b58\u4e0d\u540c\u7684\u9876\u70b9\uff0c\u5e76\u8bbe\u5b9a\u7ed8\u5236\u8fd9\u4e9b\u9876\u70b9\u7684\u987a\u5e8f\u3002\u8fd9\u6837\u5b50\u6211\u4eec\u53ea\u8981\u50a8\u5b584\u4e2a\u9876\u70b9\u5c31\u80fd\u7ed8\u5236\u77e9\u5f62\u4e86\uff0c\u4e4b\u540e\u53ea\u8981\u6307\u5b9a\u7ed8\u5236\u7684\u987a\u5e8f\u5c31\u884c\u4e86\u3002\u5982\u679cOpenGL\u63d0\u4f9b\u8fd9\u4e2a\u529f\u80fd\u5c31\u597d\u4e86\uff0c\u5bf9\u5427\uff1f \u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0c\u5143\u7d20\u7f13\u51b2\u533a\u5bf9\u8c61\u7684\u5de5\u4f5c\u65b9\u5f0f\u6b63\u662f\u5982\u6b64\u3002 EBO\u662f\u4e00\u4e2a\u7f13\u51b2\u533a\uff0c\u5c31\u50cf\u4e00\u4e2a\u9876\u70b9\u7f13\u51b2\u533a\u5bf9\u8c61\u4e00\u6837\uff0c\u5b83\u5b58\u50a8 OpenGL \u7528\u6765\u51b3\u5b9a\u8981\u7ed8\u5236\u54ea\u4e9b\u9876\u70b9\u7684\u7d22\u5f15\u3002\u8fd9\u79cd\u6240\u8c13\u7684 \u7d22\u5f15\u7ed8\u5236 (Indexed Drawing)\u6b63\u662f\u6211\u4eec\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u3002\u9996\u5148\uff0c\u6211\u4eec\u5148\u8981\u5b9a\u4e49\uff08\u4e0d\u91cd\u590d\u7684\uff09\u9876\u70b9\uff0c\u548c\u7ed8\u5236\u51fa\u77e9\u5f62\u6240\u9700\u7684\u7d22\u5f15\uff1a float vertices[] = { 0.5f, 0.5f, 0.0f, // \u53f3\u4e0a\u89d2 0.5f, -0.5f, 0.0f, // \u53f3\u4e0b\u89d2 -0.5f, -0.5f, 0.0f, // \u5de6\u4e0b\u89d2 -0.5f, 0.5f, 0.0f // \u5de6\u4e0a\u89d2 }; unsigned int indices[] = { // \u6ce8\u610f\u7d22\u5f15\u4ece0\u5f00\u59cb! // \u6b64\u4f8b\u7684\u7d22\u5f15(0,1,2,3)\u5c31\u662f\u9876\u70b9\u6570\u7ec4vertices\u7684\u4e0b\u6807\uff0c // \u8fd9\u6837\u53ef\u4ee5\u7531\u4e0b\u6807\u4ee3\u8868\u9876\u70b9\u7ec4\u5408\u6210\u77e9\u5f62 0, 1, 3, // \u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62 1, 2, 3 // \u7b2c\u4e8c\u4e2a\u4e09\u89d2\u5f62 }; \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u5f53\u4f7f\u7528\u7d22\u5f15\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u5b9a\u4e49\u4e864\u4e2a\u9876\u70b9\uff0c\u800c\u4e0d\u662f6\u4e2a\u3002\u4e0b\u4e00\u6b65\u6211\u4eec\u9700\u8981\u521b\u5efa\u5143\u7d20\u7f13\u51b2\u5bf9\u8c61\uff1a unsigned int EBO; glGenBuffers(1, &EBO); \u4e0eVBO\u7c7b\u4f3c\uff0c\u6211\u4eec\u5148\u7ed1\u5b9aEBO\u7136\u540e\u7528 glBufferData \u628a\u7d22\u5f15\u590d\u5236\u5230\u7f13\u51b2\u91cc\u3002\u540c\u6837\uff0c\u548cVBO\u7c7b\u4f3c\uff0c\u6211\u4eec\u4f1a\u628a\u8fd9\u4e9b\u51fd\u6570\u8c03\u7528\u653e\u5728\u7ed1\u5b9a\u548c\u89e3\u7ed1\u51fd\u6570\u8c03\u7528\u4e4b\u95f4\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u6b21\u6211\u4eec\u628a\u7f13\u51b2\u7684\u7c7b\u578b\u5b9a\u4e49\u4e3a GL_ELEMENT_ARRAY_BUFFER \u3002 glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO); glBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(indices), indices, GL_STATIC_DRAW); \u6ce8\u610f\uff1a\u6211\u4eec\u4f20\u9012\u4e86 GL_ELEMENT_ARRAY_BUFFER \u5f53\u4f5c\u7f13\u51b2\u76ee\u6807\u3002\u6700\u540e\u4e00\u4ef6\u8981\u505a\u7684\u4e8b\u662f\u7528 glDrawElements \u6765\u66ff\u6362 glDrawArrays \u51fd\u6570\uff0c\u8868\u793a\u6211\u4eec\u8981\u4ece\u7d22\u5f15\u7f13\u51b2\u533a\u6e32\u67d3\u4e09\u89d2\u5f62\u3002\u4f7f\u7528 glDrawElements \u65f6\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u5f53\u524d\u7ed1\u5b9a\u7684\u7d22\u5f15\u7f13\u51b2\u5bf9\u8c61\u4e2d\u7684\u7d22\u5f15\u8fdb\u884c\u7ed8\u5236\uff1a glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO); glDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_INT, 0); \u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u4e86\u6211\u4eec\u7ed8\u5236\u7684\u6a21\u5f0f\uff0c\u8fd9\u4e2a\u548c glDrawArrays \u7684\u4e00\u6837\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u6211\u4eec\u6253\u7b97\u7ed8\u5236\u9876\u70b9\u7684\u4e2a\u6570\uff0c\u8fd9\u91cc\u586b6\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u4e00\u5171\u9700\u8981\u7ed8\u52366\u4e2a\u9876\u70b9\u3002\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u7d22\u5f15\u7684\u7c7b\u578b\uff0c\u8fd9\u91cc\u662f GL_UNSIGNED_INT \u3002\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u91cc\u6211\u4eec\u53ef\u4ee5\u6307\u5b9aEBO\u4e2d\u7684\u504f\u79fb\u91cf\uff08\u6216\u8005\u4f20\u9012\u4e00\u4e2a\u7d22\u5f15\u6570\u7ec4\uff0c\u4f46\u662f\u8fd9\u662f\u5f53\u4f60\u4e0d\u5728\u4f7f\u7528\u7d22\u5f15\u7f13\u51b2\u5bf9\u8c61\u7684\u65f6\u5019\uff09\uff0c\u4f46\u662f\u6211\u4eec\u4f1a\u5728\u8fd9\u91cc\u586b\u51990\u3002 glDrawElements \u51fd\u6570\u4ece\u5f53\u524d\u7ed1\u5b9a\u5230 GL_ELEMENT_ARRAY_BUFFER \u76ee\u6807\u7684EBO\u4e2d\u83b7\u53d6\u5176\u7d22\u5f15\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u6bcf\u6b21\u60f3\u8981\u4f7f\u7528\u7d22\u5f15\u6e32\u67d3\u5bf9\u8c61\u65f6\u90fd\u5fc5\u987b\u7ed1\u5b9a\u76f8\u5e94\u7684EBO\uff0c\u8fd9\u53c8\u6709\u70b9\u9ebb\u70e6\u3002\u78b0\u5de7\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\u4e5f\u8ddf\u8e2a\u5143\u7d20\u7f13\u51b2\u533a\u5bf9\u8c61\u7ed1\u5b9a\u3002\u5728\u7ed1\u5b9aVAO\u65f6\uff0c\u7ed1\u5b9a\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7f13\u51b2\u533a\u5bf9\u8c61\u5b58\u50a8\u4e3aVAO\u7684\u5143\u7d20\u7f13\u51b2\u533a\u5bf9\u8c61\u3002\u7136\u540e\uff0c\u7ed1\u5b9a\u5230VAO\u4e5f\u4f1a\u81ea\u52a8\u7ed1\u5b9a\u8be5EBO\u3002 Attention \u5f53\u76ee\u6807\u662f GL_ELEMENT_ARRAY_BUFFER \u7684\u65f6\u5019\uff0cVAO\u4f1a\u50a8\u5b58 glBindBuffer \u7684\u51fd\u6570\u8c03\u7528\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u5b83\u4e5f\u4f1a\u50a8\u5b58\u89e3\u7ed1\u8c03\u7528\uff0c\u6240\u4ee5\u786e\u4fdd\u4f60\u6ca1\u6709\u5728\u89e3\u7ed1VAO\u4e4b\u524d\u89e3\u7ed1\u7d22\u5f15\u6570\u7ec4\u7f13\u51b2\uff0c\u5426\u5219\u5b83\u5c31\u6ca1\u6709\u8fd9\u4e2aEBO\u914d\u7f6e\u4e86\u3002 \u6700\u540e\u7684\u521d\u59cb\u5316\u548c\u7ed8\u5236\u4ee3\u7801\u73b0\u5728\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a // ..:: \u521d\u59cb\u5316\u4ee3\u7801 :: .. // 1. \u7ed1\u5b9a\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61 glBindVertexArray(VAO); // 2. \u628a\u6211\u4eec\u7684\u9876\u70b9\u6570\u7ec4\u590d\u5236\u5230\u4e00\u4e2a\u9876\u70b9\u7f13\u51b2\u4e2d\uff0c\u4f9bOpenGL\u4f7f\u7528 glBindBuffer(GL_ARRAY_BUFFER, VBO); glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW); // 3. \u590d\u5236\u6211\u4eec\u7684\u7d22\u5f15\u6570\u7ec4\u5230\u4e00\u4e2a\u7d22\u5f15\u7f13\u51b2\u4e2d\uff0c\u4f9bOpenGL\u4f7f\u7528 glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO); glBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(indices), indices, GL_STATIC_DRAW); // 4. \u8bbe\u5b9a\u9876\u70b9\u5c5e\u6027\u6307\u9488 glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0); glEnableVertexAttribArray(0); [...] // ..:: \u7ed8\u5236\u4ee3\u7801\uff08\u6e32\u67d3\u5faa\u73af\u4e2d\uff09 :: .. glUseProgram(shaderProgram); glBindVertexArray(VAO); glDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_INT, 0); glBindVertexArray(0); \u8fd0\u884c\u7a0b\u5e8f\u4f1a\u83b7\u5f97\u4e0b\u9762\u8fd9\u6837\u7684\u56fe\u7247\u7684\u7ed3\u679c\u3002\u5de6\u4fa7\u56fe\u7247\u770b\u5e94\u8be5\u8d77\u6765\u5f88\u719f\u6089\uff0c\u800c\u53f3\u4fa7\u7684\u5219\u662f\u4f7f\u7528 \u7ebf\u6846\u6a21\u5f0f (Wireframe Mode)\u7ed8\u5236\u7684\u3002\u7ebf\u6846\u77e9\u5f62\u53ef\u4ee5\u663e\u793a\u51fa\u77e9\u5f62\u7684\u786e\u662f\u7531\u4e24\u4e2a\u4e09\u89d2\u5f62\u7ec4\u6210\u7684\u3002 Important \u7ebf\u6846\u6a21\u5f0f(Wireframe Mode) \u8981\u60f3\u7528\u7ebf\u6846\u6a21\u5f0f\u7ed8\u5236\u4f60\u7684\u4e09\u89d2\u5f62\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 glPolygonMode(GL_FRONT_AND_BACK, GL_LINE) \u51fd\u6570\u914d\u7f6eOpenGL\u5982\u4f55\u7ed8\u5236\u56fe\u5143\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u8868\u793a\u6211\u4eec\u6253\u7b97\u5c06\u5176\u5e94\u7528\u5230\u6240\u6709\u7684\u4e09\u89d2\u5f62\u7684\u6b63\u9762\u548c\u80cc\u9762\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u544a\u8bc9\u6211\u4eec\u7528\u7ebf\u6765\u7ed8\u5236\u3002\u4e4b\u540e\u7684\u7ed8\u5236\u8c03\u7528\u4f1a\u4e00\u76f4\u4ee5\u7ebf\u6846\u6a21\u5f0f\u7ed8\u5236\u4e09\u89d2\u5f62\uff0c\u76f4\u5230\u6211\u4eec\u7528 glPolygonMode(GL_FRONT_AND_BACK, GL_FILL) \u5c06\u5176\u8bbe\u7f6e\u56de\u9ed8\u8ba4\u6a21\u5f0f\u3002 \u5982\u679c\u4f60\u9047\u5230\u4efb\u4f55\u9519\u8bef\uff0c\u56de\u5934\u68c0\u67e5\u4ee3\u7801\uff0c\u770b\u770b\u662f\u5426\u9057\u6f0f\u4e86\u4ec0\u4e48\u3002\u540c\u65f6\uff0c\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5168\u90e8\u6e90\u7801\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5728\u8bc4\u8bba\u533a\u81ea\u7531\u63d0\u95ee\u3002 \u5982\u679c\u4f60\u50cf\u6211\u8fd9\u6837\u6210\u529f\u7ed8\u5236\u51fa\u4e86\u8fd9\u4e2a\u4e09\u89d2\u5f62\u6216\u77e9\u5f62\uff0c\u90a3\u4e48\u606d\u559c\u4f60\uff0c\u4f60\u6210\u529f\u5730\u901a\u8fc7\u4e86\u73b0\u4ee3OpenGL\u6700\u96be\u90e8\u5206\u4e4b\u4e00\uff1a\u7ed8\u5236\u4f60\u81ea\u5df1\u7684\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u3002\u8fd9\u90e8\u5206\u5f88\u96be\uff0c\u56e0\u4e3a\u5728\u53ef\u4ee5\u7ed8\u5236\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u4e4b\u524d\u4f60\u9700\u8981\u4e86\u89e3\u5f88\u591a\u77e5\u8bc6\u3002\u5e78\u8fd0\u7684\u662f\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u8d8a\u8fc7\u4e86\u8fd9\u4e2a\u969c\u788d\uff0c\u63a5\u4e0b\u6765\u7684\u6559\u7a0b\u4f1a\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\u4e00\u4e9b\u3002 \u9644\u52a0\u8d44\u6e90 antongerdelan.net/hellotriangle \uff1aAnton Gerdelan\u7684\u6e32\u67d3\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u6559\u7a0b\u3002 open.gl/drawing \uff1aAlexander Overvoorde\u7684\u6e32\u67d3\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u6559\u7a0b\u3002 antongerdelan.net/vertexbuffers \uff1a\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u7684\u4e00\u4e9b\u6df1\u5165\u63a2\u8ba8\u3002 \u8c03\u8bd5 \uff1a\u8fd9\u4e2a\u6559\u7a0b\u4e2d\u6d89\u53ca\u5230\u4e86\u5f88\u591a\u6b65\u9aa4\uff0c\u5982\u679c\u4f60\u5728\u54ea\u5361\u4f4f\u4e86\uff0c\u9605\u8bfb\u4e00\u70b9\u8c03\u8bd5\u7684\u6559\u7a0b\u662f\u975e\u5e38\u503c\u5f97\u7684\uff08\u53ea\u9700\u8981\u9605\u8bfb\u5230\u8c03\u8bd5\u8f93\u51fa\u90e8\u5206\uff09\u3002 \u7ec3\u4e60 \u4e3a\u4e86\u66f4\u597d\u7684\u638c\u63e1\u4e0a\u8ff0\u6982\u5ff5\uff0c\u6211\u51c6\u5907\u4e86\u4e00\u4e9b\u7ec3\u4e60\u3002\u5efa\u8bae\u5728\u7ee7\u7eed\u4e0b\u4e00\u8282\u7684\u5b66\u4e60\u4e4b\u524d\u5148\u505a\u5b8c\u8fd9\u4e9b\u7ec3\u4e60\uff0c\u786e\u4fdd\u4f60\u5bf9\u8fd9\u4e9b\u77e5\u8bc6\u6709\u6bd4\u8f83\u597d\u7684\u7406\u89e3\u3002 \u6dfb\u52a0\u66f4\u591a\u9876\u70b9\u5230\u6570\u636e\u4e2d\uff0c\u4f7f\u7528 glDrawArrays \uff0c\u5c1d\u8bd5\u7ed8\u5236\u4e24\u4e2a\u5f7c\u6b64\u76f8\u8fde\u7684\u4e09\u89d2\u5f62\uff1a \u53c2\u8003\u89e3\u7b54 \u521b\u5efa\u76f8\u540c\u7684\u4e24\u4e2a\u4e09\u89d2\u5f62\uff0c\u4f46\u5bf9\u5b83\u4eec\u7684\u6570\u636e\u4f7f\u7528\u4e0d\u540c\u7684VAO\u548cVBO\uff1a \u53c2\u8003\u89e3\u7b54 \u521b\u5efa\u4e24\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\uff0c\u7b2c\u4e8c\u4e2a\u7a0b\u5e8f\u4f7f\u7528\u4e00\u4e2a\u4e0d\u540c\u7684\u7247\u6bb5\u7740\u8272\u5668\uff0c\u8f93\u51fa\u9ec4\u8272\uff1b\u518d\u6b21\u7ed8\u5236\u8fd9\u4e24\u4e2a\u4e09\u89d2\u5f62\uff0c\u8ba9\u5176\u4e2d\u4e00\u4e2a\u8f93\u51fa\u4e3a\u9ec4\u8272\uff1a \u53c2\u8003\u89e3\u7b54","title":"\u4f60\u597d\uff0c\u4e09\u89d2\u5f62"},{"location":"01%20Getting%20started/04%20Hello%20Triangle/#_1","text":"\u539f\u6587 Hello Triangle \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django , Krasjet, Geequlim \u6821\u5bf9 Kang Lin kl222@126.com , AoZhang \u8bd1\u6ce8 \u5728\u5b66\u4e60\u6b64\u8282\u4e4b\u524d\uff0c\u5efa\u8bae\u5c06\u8fd9\u4e09\u4e2a\u5355\u8bcd\u5148\u8bb0\u4e0b\u6765\uff1a \u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff1aVertex Array Object\uff0cVAO \u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff1aVertex Buffer Object\uff0cVBO \u5143\u7d20\u7f13\u51b2\u5bf9\u8c61\uff1aElement Buffer Object\uff0cEBO \u6216 \u7d22\u5f15\u7f13\u51b2\u5bf9\u8c61 Index Buffer Object\uff0cIBO \u5f53\u6307\u4ee3\u8fd9\u4e09\u4e2a\u4e1c\u897f\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u4f7f\u7528\u7684\u662f\u5168\u79f0\uff0c\u4e5f\u53ef\u80fd\u7528\u7684\u662f\u82f1\u6587\u7f29\u5199\uff0c\u7ffb\u8bd1\u7684\u65f6\u5019\u548c\u539f\u6587\u4fdd\u6301\u7684\u4e00\u81f4\u3002\u7531\u4e8e\u6ca1\u6709\u82f1\u6587\u90a3\u6837\u7684\u5206\u8bcd\u95f4\u9694\uff0c\u4e2d\u6587\u5168\u79f0\u7684\u90e8\u5206\u53ef\u80fd\u4e0d\u592a\u5bb9\u6613\u6ce8\u610f\u3002\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u7f29\u5199\u548c\u4e2d\u6587\u5168\u79f0\u6307\u4ee3\u7684\u662f\u4e00\u4e2a\u4e1c\u897f\u3002 \u5728OpenGL\u4e2d\uff0c\u4efb\u4f55\u4e8b\u7269\u90fd\u57283D\u7a7a\u95f4\u4e2d\uff0c\u800c\u5c4f\u5e55\u548c\u7a97\u53e3\u5374\u662f2D\u50cf\u7d20\u6570\u7ec4\uff0c\u8fd9\u5bfc\u81f4OpenGL\u7684\u5927\u90e8\u5206\u5de5\u4f5c\u90fd\u662f\u5173\u4e8e\u628a3D\u5750\u6807\u8f6c\u53d8\u4e3a\u9002\u5e94\u4f60\u5c4f\u5e55\u76842D\u50cf\u7d20\u30023D\u5750\u6807\u8f6c\u4e3a2D\u5750\u6807\u7684\u5904\u7406\u8fc7\u7a0b\u662f\u7531OpenGL\u7684 \u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf \uff08Graphics Pipeline\uff0c\u5927\u591a\u8bd1\u4e3a\u7ba1\u7ebf\uff0c\u5b9e\u9645\u4e0a\u6307\u7684\u662f\u4e00\u5806\u539f\u59cb\u56fe\u5f62\u6570\u636e\u9014\u7ecf\u4e00\u4e2a\u8f93\u9001\u7ba1\u9053\uff0c\u671f\u95f4\u7ecf\u8fc7\u5404\u79cd\u53d8\u5316\u5904\u7406\u6700\u7ec8\u51fa\u73b0\u5728\u5c4f\u5e55\u7684\u8fc7\u7a0b\uff09\u7ba1\u7406\u7684\u3002\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u53ef\u4ee5\u88ab\u5212\u5206\u4e3a\u4e24\u4e2a\u4e3b\u8981\u90e8\u5206\uff1a\u7b2c\u4e00\u90e8\u5206\u628a\u4f60\u76843D\u5750\u6807\u8f6c\u6362\u4e3a2D\u5750\u6807\uff0c\u7b2c\u4e8c\u90e8\u5206\u662f\u628a2D\u5750\u6807\u8f6c\u53d8\u4e3a\u5b9e\u9645\u7684\u6709\u989c\u8272\u7684\u50cf\u7d20\u3002\u8fd9\u4e2a\u6559\u7a0b\u91cc\uff0c\u6211\u4eec\u4f1a\u7b80\u5355\u5730\u8ba8\u8bba\u4e00\u4e0b\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\uff0c\u4ee5\u53ca\u5982\u4f55\u5229\u7528\u5b83\u521b\u5efa\u4e00\u4e9b\u6f02\u4eae\u7684\u50cf\u7d20\u3002 Important 2D\u5750\u6807\u548c\u50cf\u7d20\u4e5f\u662f\u4e0d\u540c\u7684\uff0c2D\u5750\u6807\u7cbe\u786e\u8868\u793a\u4e00\u4e2a\u70b9\u57282D\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\uff0c\u800c2D\u50cf\u7d20\u662f\u8fd9\u4e2a\u70b9\u7684\u8fd1\u4f3c\u503c\uff0c2D\u50cf\u7d20\u53d7\u5230\u4f60\u7684\u5c4f\u5e55/\u7a97\u53e3\u5206\u8fa8\u7387\u7684\u9650\u5236\u3002 \u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u63a5\u53d7\u4e00\u7ec43D\u5750\u6807\uff0c\u7136\u540e\u628a\u5b83\u4eec\u8f6c\u53d8\u4e3a\u4f60\u5c4f\u5e55\u4e0a\u7684\u6709\u82722D\u50cf\u7d20\u8f93\u51fa\u3002\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u53ef\u4ee5\u88ab\u5212\u5206\u4e3a\u51e0\u4e2a\u9636\u6bb5\uff0c\u6bcf\u4e2a\u9636\u6bb5\u5c06\u4f1a\u628a\u524d\u4e00\u4e2a\u9636\u6bb5\u7684\u8f93\u51fa\u4f5c\u4e3a\u8f93\u5165\u3002\u6240\u6709\u8fd9\u4e9b\u9636\u6bb5\u90fd\u662f\u9ad8\u5ea6\u4e13\u95e8\u5316\u7684\uff08\u5b83\u4eec\u90fd\u6709\u4e00\u4e2a\u7279\u5b9a\u7684\u51fd\u6570\uff09\uff0c\u5e76\u4e14\u5f88\u5bb9\u6613\u5e76\u884c\u6267\u884c\u3002\u6b63\u662f\u7531\u4e8e\u5b83\u4eec\u5177\u6709\u5e76\u884c\u6267\u884c\u7684\u7279\u6027\uff0c\u5f53\u4eca\u5927\u591a\u6570\u663e\u5361\u90fd\u6709\u6210\u5343\u4e0a\u4e07\u7684\u5c0f\u5904\u7406\u6838\u5fc3\uff0c\u5b83\u4eec\u5728GPU\u4e0a\u4e3a\u6bcf\u4e00\u4e2a\uff08\u6e32\u67d3\u7ba1\u7ebf\uff09\u9636\u6bb5\u8fd0\u884c\u5404\u81ea\u7684\u5c0f\u7a0b\u5e8f\uff0c\u4ece\u800c\u5728\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u4e2d\u5feb\u901f\u5904\u7406\u4f60\u7684\u6570\u636e\u3002\u8fd9\u4e9b\u5c0f\u7a0b\u5e8f\u53eb\u505a \u7740\u8272\u5668 (Shader)\u3002 \u6709\u4e9b\u7740\u8272\u5668\u53ef\u4ee5\u7531\u5f00\u53d1\u8005\u914d\u7f6e\uff0c\u56e0\u4e3a\u5141\u8bb8\u7528\u81ea\u5df1\u5199\u7684\u7740\u8272\u5668\u6765\u4ee3\u66ff\u9ed8\u8ba4\u7684\uff0c\u6240\u4ee5\u80fd\u591f\u66f4\u7ec6\u81f4\u5730\u63a7\u5236\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u4e2d\u7684\u7279\u5b9a\u90e8\u5206\u4e86\u3002\u56e0\u4e3a\u5b83\u4eec\u8fd0\u884c\u5728GPU\u4e0a\uff0c\u6240\u4ee5\u8282\u7701\u4e86\u5b9d\u8d35\u7684CPU\u65f6\u95f4\u3002OpenGL\u7740\u8272\u5668\u662f\u7528 OpenGL\u7740\u8272\u5668\u8bed\u8a00 (OpenGL Shading Language, GLSL )\u5199\u6210\u7684\uff0c\u5728\u4e0b\u4e00\u8282\u4e2d\u6211\u4eec\u518d\u82b1\u66f4\u591a\u65f6\u95f4\u7814\u7a76\u5b83\u3002 \u4e0b\u9762\uff0c\u4f60\u4f1a\u770b\u5230\u4e00\u4e2a\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u7684\u6bcf\u4e2a\u9636\u6bb5\u7684\u62bd\u8c61\u5c55\u793a\u3002\u8981\u6ce8\u610f\u84dd\u8272\u90e8\u5206\u4ee3\u8868\u7684\u662f\u6211\u4eec\u53ef\u4ee5\u6ce8\u5165\u81ea\u5b9a\u4e49\u7684\u7740\u8272\u5668\u7684\u90e8\u5206\u3002 \u5982\u4f60\u6240\u89c1\uff0c\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u5305\u542b\u5f88\u591a\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u90fd\u5c06\u5728\u8f6c\u6362\u9876\u70b9\u6570\u636e\u5230\u6700\u7ec8\u50cf\u7d20\u8fd9\u4e00\u8fc7\u7a0b\u4e2d\u5904\u7406\u5404\u81ea\u7279\u5b9a\u7684\u9636\u6bb5\u3002\u6211\u4eec\u4f1a\u6982\u62ec\u6027\u5730\u89e3\u91ca\u4e00\u4e0b\u6e32\u67d3\u7ba1\u7ebf\u7684\u6bcf\u4e2a\u90e8\u5206\uff0c\u8ba9\u4f60\u5bf9\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u7684\u5de5\u4f5c\u65b9\u5f0f\u6709\u4e2a\u5927\u6982\u4e86\u89e3\u3002 \u9996\u5148\uff0c\u6211\u4eec\u4ee5\u6570\u7ec4\u7684\u5f62\u5f0f\u4f20\u90123\u4e2a3D\u5750\u6807\u4f5c\u4e3a\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u7684\u8f93\u5165\uff0c\u7528\u6765\u8868\u793a\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u8fd9\u4e2a\u6570\u7ec4\u53eb\u505a\u9876\u70b9\u6570\u636e(Vertex Data)\uff1b\u9876\u70b9\u6570\u636e\u662f\u4e00\u7cfb\u5217\u9876\u70b9\u7684\u96c6\u5408\u3002\u4e00\u4e2a \u9876\u70b9 (Vertex)\u662f\u4e00\u4e2a3D\u5750\u6807\u7684\u6570\u636e\u7684\u96c6\u5408\u3002\u800c\u8fd9\u6837\u4e00\u4e2a\u9876\u70b9\u7684\u6570\u636e\u662f\u7528 \u9876\u70b9\u5c5e\u6027 (Vertex Attribute)\u8868\u793a\u7684\uff0c\u5b83\u53ef\u4ee5\u5305\u542b\u4efb\u4f55\u6211\u4eec\u60f3\u7528\u7684\u6570\u636e\uff0c\u4f46\u662f\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u8fd8\u662f\u5047\u5b9a\u6bcf\u4e2a\u9876\u70b9\u53ea\u7531\u4e00\u4e2a3D\u4f4d\u7f6e(\u8bd1\u6ce81)\u548c\u4e00\u4e9b\u989c\u8272\u503c\u7ec4\u6210\u7684\u5427\u3002 \u8bd1\u6ce81 \u5f53\u6211\u4eec\u8c08\u8bba\u4e00\u4e2a\u201c\u4f4d\u7f6e\u201d\u7684\u65f6\u5019\uff0c\u5b83\u4ee3\u8868\u5728\u4e00\u4e2a\u201c\u7a7a\u95f4\u201d\u4e2d\u6240\u5904\u5730\u70b9\u7684\u8fd9\u4e2a\u7279\u6b8a\u5c5e\u6027\uff1b\u540c\u65f6\u201c\u7a7a\u95f4\u201d\u4ee3\u8868\u7740\u4efb\u4f55\u4e00\u79cd\u5750\u6807\u7cfb\uff0c\u6bd4\u5982x\u3001y\u3001z\u4e09\u7ef4\u5750\u6807\u7cfb\uff0cx\u3001y\u4e8c\u7ef4\u5750\u6807\u7cfb\uff0c\u6216\u8005\u4e00\u6761\u76f4\u7ebf\u4e0a\u7684x\u548cy\u7684\u7ebf\u6027\u5173\u7cfb\uff0c\u53ea\u4e0d\u8fc7\u4e8c\u7ef4\u5750\u6807\u7cfb\u662f\u4e00\u4e2a\u6241\u6241\u7684\u5e73\u9762\u7a7a\u95f4\uff0c\u800c\u4e00\u6761\u76f4\u7ebf\u662f\u4e00\u4e2a\u5f88\u7626\u7684\u957f\u957f\u7684\u7a7a\u95f4\u3002 Important \u4e3a\u4e86\u8ba9OpenGL\u77e5\u9053\u6211\u4eec\u7684\u5750\u6807\u548c\u989c\u8272\u503c\u6784\u6210\u7684\u5230\u5e95\u662f\u4ec0\u4e48\uff0cOpenGL\u9700\u8981\u4f60\u53bb\u6307\u5b9a\u8fd9\u4e9b\u6570\u636e\u6240\u8868\u793a\u7684\u6e32\u67d3\u7c7b\u578b\u3002\u6211\u4eec\u662f\u5e0c\u671b\u628a\u8fd9\u4e9b\u6570\u636e\u6e32\u67d3\u6210\u4e00\u7cfb\u5217\u7684\u70b9\uff1f\u4e00\u7cfb\u5217\u7684\u4e09\u89d2\u5f62\uff1f\u8fd8\u662f\u4ec5\u4ec5\u662f\u4e00\u4e2a\u957f\u957f\u7684\u7ebf\uff1f\u505a\u51fa\u7684\u8fd9\u4e9b\u63d0\u793a\u53eb\u505a \u56fe\u5143 (Primitive)\uff0c\u4efb\u4f55\u4e00\u4e2a\u7ed8\u5236\u6307\u4ee4\u7684\u8c03\u7528\u90fd\u5c06\u628a\u56fe\u5143\u4f20\u9012\u7ed9OpenGL\u3002\u8fd9\u662f\u5176\u4e2d\u7684\u51e0\u4e2a\uff1a GL_POINTS \u3001 GL_TRIANGLES \u3001 GL_LINE_STRIP \u3002 \u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u7684\u7b2c\u4e00\u4e2a\u90e8\u5206\u662f \u9876\u70b9\u7740\u8272\u5668 (Vertex Shader)\uff0c\u5b83\u628a\u4e00\u4e2a\u5355\u72ec\u7684\u9876\u70b9\u4f5c\u4e3a\u8f93\u5165\u3002\u9876\u70b9\u7740\u8272\u5668\u4e3b\u8981\u7684\u76ee\u7684\u662f\u628a3D\u5750\u6807\u8f6c\u4e3a\u53e6\u4e00\u79cd3D\u5750\u6807\uff08\u540e\u9762\u4f1a\u89e3\u91ca\uff09\uff0c\u540c\u65f6\u9876\u70b9\u7740\u8272\u5668\u5141\u8bb8\u6211\u4eec\u5bf9\u9876\u70b9\u5c5e\u6027\u8fdb\u884c\u4e00\u4e9b\u57fa\u672c\u5904\u7406\u3002 \u9876\u70b9\u7740\u8272\u5668\u9636\u6bb5\u7684\u8f93\u51fa\u53ef\u4ee5\u9009\u62e9\u6027\u5730\u4f20\u9012\u7ed9 \u51e0\u4f55\u7740\u8272\u5668 (Geometry Shader)\u3002\u51e0\u4f55\u7740\u8272\u5668\u5c06\u4e00\u7ec4\u9876\u70b9\u4f5c\u4e3a\u8f93\u5165\uff0c\u8fd9\u4e9b\u9876\u70b9\u5f62\u6210\u56fe\u5143\uff0c\u5e76\u4e14\u80fd\u591f\u901a\u8fc7\u53d1\u51fa\u65b0\u7684\u9876\u70b9\u6765\u5f62\u6210\u65b0\u7684(\u6216\u5176\u4ed6)\u56fe\u5143\u6765\u751f\u6210\u5176\u4ed6\u5f62\u72b6\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5b83\u4ece\u7ed9\u5b9a\u7684\u5f62\u72b6\u4e2d\u751f\u6210\u7b2c\u4e8c\u4e2a\u4e09\u89d2\u5f62\u3002 \u56fe\u5143\u88c5\u914d (Primitive Assembly)\u9636\u6bb5\u5c06\u9876\u70b9\u7740\u8272\u5668\uff08\u6216\u51e0\u4f55\u7740\u8272\u5668\uff09\u8f93\u51fa\u7684\u6240\u6709\u9876\u70b9\u4f5c\u4e3a\u8f93\u5165\uff08\u5982\u679c\u662f GL_POINTS \uff0c\u90a3\u4e48\u5c31\u662f\u4e00\u4e2a\u9876\u70b9\uff09\uff0c\u5e76\u5c06\u6240\u6709\u7684\u70b9\u88c5\u914d\u6210\u6307\u5b9a\u56fe\u5143\u7684\u5f62\u72b6\uff1b\u672c\u8282\u4f8b\u5b50\u4e2d\u662f\u4e24\u4e2a\u4e09\u89d2\u5f62\u3002 \u56fe\u5143\u88c5\u914d\u9636\u6bb5\u7684\u8f93\u51fa\u4f1a\u88ab\u4f20\u5165 \u5149\u6805\u5316\u9636\u6bb5 (Rasterization Stage)\uff0c\u8fd9\u91cc\u5b83\u4f1a\u628a\u56fe\u5143\u6620\u5c04\u4e3a\u6700\u7ec8\u5c4f\u5e55\u4e0a\u76f8\u5e94\u7684\u50cf\u7d20\uff0c\u751f\u6210\u4f9b\u7247\u6bb5\u7740\u8272\u5668(Fragment Shader)\u4f7f\u7528\u7684\u7247\u6bb5(Fragment)\u3002\u5728\u7247\u6bb5\u7740\u8272\u5668\u8fd0\u884c\u4e4b\u524d\u4f1a\u6267\u884c \u88c1\u5207 (Clipping)\u3002\u88c1\u5207\u4f1a\u4e22\u5f03\u8d85\u51fa\u4f60\u7684\u89c6\u56fe\u4ee5\u5916\u7684\u6240\u6709\u50cf\u7d20\uff0c\u7528\u6765\u63d0\u5347\u6267\u884c\u6548\u7387\u3002 Important OpenGL\u4e2d\u7684\u4e00\u4e2a\u7247\u6bb5\u662fOpenGL\u6e32\u67d3\u4e00\u4e2a\u50cf\u7d20\u6240\u9700\u7684\u6240\u6709\u6570\u636e\u3002 \u7247\u6bb5\u7740\u8272\u5668 \u7684\u4e3b\u8981\u76ee\u7684\u662f\u8ba1\u7b97\u4e00\u4e2a\u50cf\u7d20\u7684\u6700\u7ec8\u989c\u8272\uff0c\u8fd9\u4e5f\u662f\u6240\u6709OpenGL\u9ad8\u7ea7\u6548\u679c\u4ea7\u751f\u7684\u5730\u65b9\u3002\u901a\u5e38\uff0c\u7247\u6bb5\u7740\u8272\u5668\u5305\u542b3D\u573a\u666f\u7684\u6570\u636e\uff08\u6bd4\u5982\u5149\u7167\u3001\u9634\u5f71\u3001\u5149\u7684\u989c\u8272\u7b49\u7b49\uff09\uff0c\u8fd9\u4e9b\u6570\u636e\u53ef\u4ee5\u88ab\u7528\u6765\u8ba1\u7b97\u6700\u7ec8\u50cf\u7d20\u7684\u989c\u8272\u3002 \u5728\u6240\u6709\u5bf9\u5e94\u989c\u8272\u503c\u786e\u5b9a\u4ee5\u540e\uff0c\u6700\u7ec8\u7684\u5bf9\u8c61\u5c06\u4f1a\u88ab\u4f20\u5230\u6700\u540e\u4e00\u4e2a\u9636\u6bb5\uff0c\u6211\u4eec\u53eb\u505a Alpha\u6d4b\u8bd5 \u548c \u6df7\u5408 (Blending)\u9636\u6bb5\u3002\u8fd9\u4e2a\u9636\u6bb5\u68c0\u6d4b\u7247\u6bb5\u7684\u5bf9\u5e94\u7684\u6df1\u5ea6\uff08\u548c\u6a21\u677f(Stencil)\uff09\u503c\uff08\u540e\u9762\u4f1a\u8bb2\uff09\uff0c\u7528\u5b83\u4eec\u6765\u5224\u65ad\u8fd9\u4e2a\u50cf\u7d20\u662f\u5176\u5b83\u7269\u4f53\u7684\u524d\u9762\u8fd8\u662f\u540e\u9762\uff0c\u51b3\u5b9a\u662f\u5426\u5e94\u8be5\u4e22\u5f03\u3002\u8fd9\u4e2a\u9636\u6bb5\u4e5f\u4f1a\u68c0\u67e5 alpha \u503c\uff08alpha\u503c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7269\u4f53\u7684\u900f\u660e\u5ea6\uff09\u5e76\u5bf9\u7269\u4f53\u8fdb\u884c \u6df7\u5408 (Blend)\u3002\u6240\u4ee5\uff0c\u5373\u4f7f\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u8ba1\u7b97\u51fa\u6765\u4e86\u4e00\u4e2a\u50cf\u7d20\u8f93\u51fa\u7684\u989c\u8272\uff0c\u5728\u6e32\u67d3\u591a\u4e2a\u4e09\u89d2\u5f62\u7684\u65f6\u5019\u6700\u540e\u7684\u50cf\u7d20\u989c\u8272\u4e5f\u53ef\u80fd\u5b8c\u5168\u4e0d\u540c\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u975e\u5e38\u590d\u6742\uff0c\u5b83\u5305\u542b\u5f88\u591a\u53ef\u914d\u7f6e\u7684\u90e8\u5206\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u573a\u5408\uff0c\u6211\u4eec\u53ea\u9700\u8981\u914d\u7f6e\u9876\u70b9\u548c\u7247\u6bb5\u7740\u8272\u5668\u5c31\u884c\u4e86\u3002\u51e0\u4f55\u7740\u8272\u5668\u662f\u53ef\u9009\u7684\uff0c\u901a\u5e38\u4f7f\u7528\u5b83\u9ed8\u8ba4\u7684\u7740\u8272\u5668\u5c31\u884c\u4e86\u3002 \u5728\u73b0\u4ee3OpenGL\u4e2d\uff0c\u6211\u4eec \u5fc5\u987b \u5b9a\u4e49\u81f3\u5c11\u4e00\u4e2a\u9876\u70b9\u7740\u8272\u5668\u548c\u4e00\u4e2a\u7247\u6bb5\u7740\u8272\u5668\uff08\u56e0\u4e3aGPU\u4e2d\u6ca1\u6709\u9ed8\u8ba4\u7684\u9876\u70b9/\u7247\u6bb5\u7740\u8272\u5668\uff09\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u521a\u5f00\u59cb\u5b66\u4e60\u73b0\u4ee3OpenGL\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u975e\u5e38\u56f0\u96be\uff0c\u56e0\u4e3a\u5728\u4f60\u80fd\u591f\u6e32\u67d3\u81ea\u5df1\u7684\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u4e4b\u524d\u5df2\u7ecf\u9700\u8981\u4e86\u89e3\u4e00\u5927\u5806\u77e5\u8bc6\u4e86\u3002\u5728\u672c\u8282\u7ed3\u675f\u4f60\u6700\u7ec8\u6e32\u67d3\u51fa\u4f60\u7684\u4e09\u89d2\u5f62\u7684\u65f6\u5019\uff0c\u4f60\u4e5f\u4f1a\u4e86\u89e3\u5230\u975e\u5e38\u591a\u7684\u56fe\u5f62\u7f16\u7a0b\u77e5\u8bc6\u3002","title":"\u4f60\u597d\uff0c\u4e09\u89d2\u5f62"},{"location":"01%20Getting%20started/04%20Hello%20Triangle/#_2","text":"\u5f00\u59cb\u7ed8\u5236\u56fe\u5f62\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u7ed9OpenGL\u8f93\u5165\u4e00\u4e9b\u9876\u70b9\u6570\u636e\u3002OpenGL\u662f\u4e00\u4e2a3D\u56fe\u5f62\u5e93\uff0c\u6240\u4ee5\u5728OpenGL\u4e2d\u6211\u4eec\u6307\u5b9a\u7684\u6240\u6709\u5750\u6807\u90fd\u662f3D\u5750\u6807\uff08x\u3001y\u548cz\uff09\u3002OpenGL\u4e0d\u662f\u7b80\u5355\u5730\u628a \u6240\u6709\u7684 3D\u5750\u6807\u53d8\u6362\u4e3a\u5c4f\u5e55\u4e0a\u76842D\u50cf\u7d20\uff1bOpenGL\u4ec5\u5f533D\u5750\u6807\u57283\u4e2a\u8f74\uff08x\u3001y\u548cz\uff09\u4e0a-1.0\u52301.0\u7684\u8303\u56f4\u5185\u65f6\u624d\u5904\u7406\u5b83\u3002\u6240\u6709\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\u7684\u5750\u6807\u53eb\u505a \u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807 (Normalized Device Coordinates)\uff0c\u6b64\u8303\u56f4\u5185\u7684\u5750\u6807\u6700\u7ec8\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\uff08\u5728\u8fd9\u4e2a\u8303\u56f4\u4ee5\u5916\u7684\u5750\u6807\u5219\u4e0d\u4f1a\u663e\u793a\uff09\u3002 \u7531\u4e8e\u6211\u4eec\u5e0c\u671b\u6e32\u67d3\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u6211\u4eec\u4e00\u5171\u8981\u6307\u5b9a\u4e09\u4e2a\u9876\u70b9\uff0c\u6bcf\u4e2a\u9876\u70b9\u90fd\u6709\u4e00\u4e2a3D\u4f4d\u7f6e\u3002\u6211\u4eec\u4f1a\u5c06\u5b83\u4eec\u4ee5\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7684\u5f62\u5f0f\uff08OpenGL\u7684\u53ef\u89c1\u533a\u57df\uff09\u5b9a\u4e49\u4e3a\u4e00\u4e2a float \u6570\u7ec4\u3002 float vertices[] = { -0.5f, -0.5f, 0.0f, 0.5f, -0.5f, 0.0f, 0.0f, 0.5f, 0.0f }; \u7531\u4e8eOpenGL\u662f\u57283D\u7a7a\u95f4\u4e2d\u5de5\u4f5c\u7684\uff0c\u800c\u6211\u4eec\u6e32\u67d3\u7684\u662f\u4e00\u4e2a2D\u4e09\u89d2\u5f62\uff0c\u6211\u4eec\u5c06\u5b83\u9876\u70b9\u7684z\u5750\u6807\u8bbe\u7f6e\u4e3a0.0\u3002\u8fd9\u6837\u5b50\u7684\u8bdd\u4e09\u89d2\u5f62\u6bcf\u4e00\u70b9\u7684 \u6df1\u5ea6 (Depth\uff0c\u8bd1\u6ce82)\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4ece\u800c\u4f7f\u5b83\u770b\u4e0a\u53bb\u50cf\u662f2D\u7684\u3002 \u8bd1\u6ce82 \u901a\u5e38\u6df1\u5ea6\u53ef\u4ee5\u7406\u89e3\u4e3az\u5750\u6807\uff0c\u5b83\u4ee3\u8868\u4e00\u4e2a\u50cf\u7d20\u5728\u7a7a\u95f4\u4e2d\u548c\u4f60\u7684\u8ddd\u79bb\uff0c\u5982\u679c\u79bb\u4f60\u8fdc\u5c31\u53ef\u80fd\u88ab\u522b\u7684\u50cf\u7d20\u906e\u6321\uff0c\u4f60\u5c31\u770b\u4e0d\u5230\u5b83\u4e86\uff0c\u5b83\u4f1a\u88ab\u4e22\u5f03\uff0c\u4ee5\u8282\u7701\u8d44\u6e90\u3002 Important \u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807(Normalized Device Coordinates, NDC) \u4e00\u65e6\u4f60\u7684\u9876\u70b9\u5750\u6807\u5df2\u7ecf\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5904\u7406\u8fc7\uff0c\u5b83\u4eec\u5c31\u5e94\u8be5\u662f \u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807 \u4e86\uff0c\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u662f\u4e00\u4e2ax\u3001y\u548cz\u503c\u5728-1.0\u52301.0\u7684\u4e00\u5c0f\u6bb5\u7a7a\u95f4\u3002\u4efb\u4f55\u843d\u5728\u8303\u56f4\u5916\u7684\u5750\u6807\u90fd\u4f1a\u88ab\u4e22\u5f03/\u88c1\u526a\uff0c\u4e0d\u4f1a\u663e\u793a\u5728\u4f60\u7684\u5c4f\u5e55\u4e0a\u3002\u4e0b\u9762\u4f60\u4f1a\u770b\u5230\u6211\u4eec\u5b9a\u4e49\u7684\u5728\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u4e2d\u7684\u4e09\u89d2\u5f62(\u5ffd\u7565z\u8f74)\uff1a \u4e0e\u901a\u5e38\u7684\u5c4f\u5e55\u5750\u6807\u4e0d\u540c\uff0cy\u8f74\u6b63\u65b9\u5411\u4e3a\u5411\u4e0a\uff0c(0, 0)\u5750\u6807\u662f\u8fd9\u4e2a\u56fe\u50cf\u7684\u4e2d\u5fc3\uff0c\u800c\u4e0d\u662f\u5de6\u4e0a\u89d2\u3002\u6700\u7ec8\u4f60\u5e0c\u671b\u6240\u6709(\u53d8\u6362\u8fc7\u7684)\u5750\u6807\u90fd\u5728\u8fd9\u4e2a\u5750\u6807\u7a7a\u95f4\u4e2d\uff0c\u5426\u5219\u5b83\u4eec\u5c31\u4e0d\u53ef\u89c1\u4e86\u3002 \u901a\u8fc7\u4f7f\u7528\u7531 glViewport \u51fd\u6570\u63d0\u4f9b\u7684\u6570\u636e\uff0c\u8fdb\u884c \u89c6\u53e3\u53d8\u6362 (Viewport Transform)\uff0c \u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807 (Normalized Device Coordinates)\u4f1a\u53d8\u6362\u4e3a \u5c4f\u5e55\u7a7a\u95f4\u5750\u6807 (Screen-space Coordinates)\u3002\u6240\u5f97\u7684\u5c4f\u5e55\u7a7a\u95f4\u5750\u6807\u53c8\u4f1a\u88ab\u53d8\u6362\u4e3a\u7247\u6bb5\u8f93\u5165\u5230\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u3002 \u5b9a\u4e49\u8fd9\u6837\u7684\u9876\u70b9\u6570\u636e\u4ee5\u540e\uff0c\u6211\u4eec\u4f1a\u628a\u5b83\u4f5c\u4e3a\u8f93\u5165\u53d1\u9001\u7ed9\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u7684\u7b2c\u4e00\u4e2a\u5904\u7406\u9636\u6bb5\uff1a\u9876\u70b9\u7740\u8272\u5668\u3002\u5b83\u4f1a\u5728GPU\u4e0a\u521b\u5efa\u5185\u5b58\u7528\u4e8e\u50a8\u5b58\u6211\u4eec\u7684\u9876\u70b9\u6570\u636e\uff0c\u8fd8\u8981\u914d\u7f6eOpenGL\u5982\u4f55\u89e3\u91ca\u8fd9\u4e9b\u5185\u5b58\uff0c\u5e76\u4e14\u6307\u5b9a\u5176\u5982\u4f55\u53d1\u9001\u7ed9\u663e\u5361\u3002\u9876\u70b9\u7740\u8272\u5668\u63a5\u7740\u4f1a\u5904\u7406\u6211\u4eec\u5728\u5185\u5b58\u4e2d\u6307\u5b9a\u6570\u91cf\u7684\u9876\u70b9\u3002 \u6211\u4eec\u901a\u8fc7 \u9876\u70b9\u7f13\u51b2\u5bf9\u8c61 (Vertex Buffer Objects, VBO)\u7ba1\u7406\u8fd9\u4e2a\u5185\u5b58\uff0c\u5b83\u4f1a\u5728GPU\u5185\u5b58\uff08\u901a\u5e38\u88ab\u79f0\u4e3a\u663e\u5b58\uff09\u4e2d\u50a8\u5b58\u5927\u91cf\u9876\u70b9\u3002\u4f7f\u7528\u8fd9\u4e9b\u7f13\u51b2\u5bf9\u8c61\u7684\u597d\u5904\u662f\u6211\u4eec\u53ef\u4ee5\u4e00\u6b21\u6027\u7684\u53d1\u9001\u4e00\u5927\u6279\u6570\u636e\u5230\u663e\u5361\u4e0a\uff0c\u800c\u4e0d\u662f\u6bcf\u4e2a\u9876\u70b9\u53d1\u9001\u4e00\u6b21\u3002\u4eceCPU\u628a\u6570\u636e\u53d1\u9001\u5230\u663e\u5361\u76f8\u5bf9\u8f83\u6162\uff0c\u6240\u4ee5\u53ea\u8981\u53ef\u80fd\u6211\u4eec\u90fd\u8981\u5c1d\u8bd5\u5c3d\u91cf\u4e00\u6b21\u6027\u53d1\u9001\u5c3d\u53ef\u80fd\u591a\u7684\u6570\u636e\u3002\u5f53\u6570\u636e\u53d1\u9001\u81f3\u663e\u5361\u7684\u5185\u5b58\u4e2d\u540e\uff0c\u9876\u70b9\u7740\u8272\u5668\u51e0\u4e4e\u80fd\u7acb\u5373\u8bbf\u95ee\u9876\u70b9\uff0c\u8fd9\u662f\u4e2a\u975e\u5e38\u5feb\u7684\u8fc7\u7a0b\u3002 \u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u662f\u6211\u4eec\u5728 OpenGL \u6559\u7a0b\u4e2d\u7b2c\u4e00\u4e2a\u51fa\u73b0\u7684OpenGL\u5bf9\u8c61\u3002\u5c31\u50cfOpenGL\u4e2d\u7684\u5176\u5b83\u5bf9\u8c61\u4e00\u6837\uff0c\u8fd9\u4e2a\u7f13\u51b2\u6709\u4e00\u4e2a\u72ec\u4e00\u65e0\u4e8c\u7684ID\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 glGenBuffers \u51fd\u6570\u751f\u6210\u4e00\u4e2a\u5e26\u6709\u7f13\u51b2ID\u7684VBO\u5bf9\u8c61\uff1a unsigned int VBO; glGenBuffers(1, &VBO); OpenGL\u6709\u5f88\u591a\u7f13\u51b2\u5bf9\u8c61\u7c7b\u578b\uff0c\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u7684\u7f13\u51b2\u7c7b\u578b\u662f GL_ARRAY_BUFFER \u3002OpenGL\u5141\u8bb8\u6211\u4eec\u540c\u65f6\u7ed1\u5b9a\u591a\u4e2a\u7f13\u51b2\uff0c\u53ea\u8981\u5b83\u4eec\u662f\u4e0d\u540c\u7684\u7f13\u51b2\u7c7b\u578b\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 glBindBuffer \u51fd\u6570\u628a\u65b0\u521b\u5efa\u7684\u7f13\u51b2\u7ed1\u5b9a\u5230 GL_ARRAY_BUFFER \u76ee\u6807\u4e0a\uff1a glBindBuffer(GL_ARRAY_BUFFER, VBO); \u4ece\u8fd9\u4e00\u523b\u8d77\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u4efb\u4f55\uff08\u5728 GL_ARRAY_BUFFER \u76ee\u6807\u4e0a\u7684\uff09\u7f13\u51b2\u8c03\u7528\u90fd\u4f1a\u7528\u6765\u914d\u7f6e\u5f53\u524d\u7ed1\u5b9a\u7684\u7f13\u51b2( VBO )\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u8c03\u7528 glBufferData \u51fd\u6570\uff0c\u5b83\u4f1a\u628a\u4e4b\u524d\u5b9a\u4e49\u7684\u9876\u70b9\u6570\u636e\u590d\u5236\u5230\u7f13\u51b2\u7684\u5185\u5b58\u4e2d\uff1a glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW); glBufferData \u662f\u4e00\u4e2a\u4e13\u95e8\u7528\u6765\u628a\u7528\u6237\u5b9a\u4e49\u7684\u6570\u636e\u590d\u5236\u5230\u5f53\u524d\u7ed1\u5b9a\u7f13\u51b2\u7684\u51fd\u6570\u3002\u5b83\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u76ee\u6807\u7f13\u51b2\u7684\u7c7b\u578b\uff1a\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u5f53\u524d\u7ed1\u5b9a\u5230 GL_ARRAY_BUFFER \u76ee\u6807\u4e0a\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u4f20\u8f93\u6570\u636e\u7684\u5927\u5c0f(\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d)\uff1b\u7528\u4e00\u4e2a\u7b80\u5355\u7684 sizeof \u8ba1\u7b97\u51fa\u9876\u70b9\u6570\u636e\u5927\u5c0f\u5c31\u884c\u3002\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u6211\u4eec\u5e0c\u671b\u53d1\u9001\u7684\u5b9e\u9645\u6570\u636e\u3002 \u7b2c\u56db\u4e2a\u53c2\u6570\u6307\u5b9a\u4e86\u6211\u4eec\u5e0c\u671b\u663e\u5361\u5982\u4f55\u7ba1\u7406\u7ed9\u5b9a\u7684\u6570\u636e\u3002\u5b83\u6709\u4e09\u79cd\u5f62\u5f0f\uff1a GL_STATIC_DRAW \uff1a\u6570\u636e\u4e0d\u4f1a\u6216\u51e0\u4e4e\u4e0d\u4f1a\u6539\u53d8\u3002 GL_DYNAMIC_DRAW \uff1a\u6570\u636e\u4f1a\u88ab\u6539\u53d8\u5f88\u591a\u3002 GL_STREAM_DRAW \uff1a\u6570\u636e\u6bcf\u6b21\u7ed8\u5236\u65f6\u90fd\u4f1a\u6539\u53d8\u3002 \u4e09\u89d2\u5f62\u7684\u4f4d\u7f6e\u6570\u636e\u4e0d\u4f1a\u6539\u53d8\uff0c\u6bcf\u6b21\u6e32\u67d3\u8c03\u7528\u65f6\u90fd\u4fdd\u6301\u539f\u6837\uff0c\u6240\u4ee5\u5b83\u7684\u4f7f\u7528\u7c7b\u578b\u6700\u597d\u662f GL_STATIC_DRAW \u3002\u5982\u679c\uff0c\u6bd4\u5982\u8bf4\u4e00\u4e2a\u7f13\u51b2\u4e2d\u7684\u6570\u636e\u5c06\u9891\u7e41\u88ab\u6539\u53d8\uff0c\u90a3\u4e48\u4f7f\u7528\u7684\u7c7b\u578b\u5c31\u662f GL_DYNAMIC_DRAW \u6216 GL_STREAM_DRAW \uff0c\u8fd9\u6837\u5c31\u80fd\u786e\u4fdd\u663e\u5361\u628a\u6570\u636e\u653e\u5728\u80fd\u591f\u9ad8\u901f\u5199\u5165\u7684\u5185\u5b58\u90e8\u5206\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u628a\u9876\u70b9\u6570\u636e\u50a8\u5b58\u5728\u663e\u5361\u7684\u5185\u5b58\u4e2d\uff0c\u7528 VBO \u8fd9\u4e2a\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u7ba1\u7406\u3002\u4e0b\u9762\u6211\u4eec\u4f1a\u521b\u5efa\u4e00\u4e2a\u9876\u70b9\u7740\u8272\u5668\u548c\u7247\u6bb5\u7740\u8272\u5668\u6765\u771f\u6b63\u5904\u7406\u8fd9\u4e9b\u6570\u636e\u3002\u73b0\u5728\u6211\u4eec\u5f00\u59cb\u7740\u624b\u521b\u5efa\u5b83\u4eec\u5427\u3002","title":"\u9876\u70b9\u8f93\u5165"},{"location":"01%20Getting%20started/04%20Hello%20Triangle/#_3","text":"\u9876\u70b9\u7740\u8272\u5668(Vertex Shader)\u662f\u51e0\u4e2a\u53ef\u7f16\u7a0b\u7740\u8272\u5668\u4e2d\u7684\u4e00\u4e2a\u3002\u5982\u679c\u6211\u4eec\u6253\u7b97\u505a\u6e32\u67d3\u7684\u8bdd\uff0c\u73b0\u4ee3OpenGL\u9700\u8981\u6211\u4eec\u81f3\u5c11\u8bbe\u7f6e\u4e00\u4e2a\u9876\u70b9\u548c\u4e00\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u3002\u6211\u4eec\u4f1a\u7b80\u8981\u4ecb\u7ecd\u4e00\u4e0b\u7740\u8272\u5668\u4ee5\u53ca\u914d\u7f6e\u4e24\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u7740\u8272\u5668\u6765\u7ed8\u5236\u6211\u4eec\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u3002\u4e0b\u4e00\u8282\u4e2d\u6211\u4eec\u4f1a\u66f4\u8be6\u7ec6\u7684\u8ba8\u8bba\u7740\u8272\u5668\u3002 \u6211\u4eec\u9700\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u7528\u7740\u8272\u5668\u8bed\u8a00GLSL(OpenGL Shading Language)\u7f16\u5199\u9876\u70b9\u7740\u8272\u5668\uff0c\u7136\u540e\u7f16\u8bd1\u8fd9\u4e2a\u7740\u8272\u5668\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u5b83\u4e86\u3002\u4e0b\u9762\u4f60\u4f1a\u770b\u5230\u4e00\u4e2a\u975e\u5e38\u57fa\u7840\u7684GLSL\u9876\u70b9\u7740\u8272\u5668\u7684\u6e90\u4ee3\u7801\uff1a #version 330 core layout (location = 0) in vec3 aPos; void main() { gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0); } \u53ef\u4ee5\u770b\u5230\uff0cGLSL\u770b\u8d77\u6765\u5f88\u50cfC\u8bed\u8a00\u3002\u6bcf\u4e2a\u7740\u8272\u5668\u90fd\u8d77\u59cb\u4e8e\u4e00\u4e2a\u7248\u672c\u58f0\u660e\u3002OpenGL 3.3\u4ee5\u53ca\u548c\u66f4\u9ad8\u7248\u672c\u4e2d\uff0cGLSL\u7248\u672c\u53f7\u548cOpenGL\u7684\u7248\u672c\u662f\u5339\u914d\u7684\uff08\u6bd4\u5982\u8bf4GLSL 420\u7248\u672c\u5bf9\u5e94\u4e8eOpenGL 4.2\uff09\u3002\u6211\u4eec\u540c\u6837\u660e\u786e\u8868\u793a\u6211\u4eec\u4f1a\u4f7f\u7528\u6838\u5fc3\u6a21\u5f0f\u3002 \u4e0b\u4e00\u6b65\uff0c\u4f7f\u7528 in \u5173\u952e\u5b57\uff0c\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u58f0\u660e\u6240\u6709\u7684\u8f93\u5165\u9876\u70b9\u5c5e\u6027(Input Vertex Attribute)\u3002\u73b0\u5728\u6211\u4eec\u53ea\u5173\u5fc3\u4f4d\u7f6e(Position)\u6570\u636e\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\u3002GLSL\u6709\u4e00\u4e2a\u5411\u91cf\u6570\u636e\u7c7b\u578b\uff0c\u5b83\u5305\u542b1\u52304\u4e2a float \u5206\u91cf\uff0c\u5305\u542b\u7684\u6570\u91cf\u53ef\u4ee5\u4ece\u5b83\u7684\u540e\u7f00\u6570\u5b57\u770b\u51fa\u6765\u3002\u7531\u4e8e\u6bcf\u4e2a\u9876\u70b9\u90fd\u6709\u4e00\u4e2a3D\u5750\u6807\uff0c\u6211\u4eec\u5c31\u521b\u5efa\u4e00\u4e2a vec3 \u8f93\u5165\u53d8\u91cf aPos \u3002\u6211\u4eec\u540c\u6837\u4e5f\u901a\u8fc7 layout (location = 0) \u8bbe\u5b9a\u4e86\u8f93\u5165\u53d8\u91cf\u7684\u4f4d\u7f6e\u503c(Location)\u4f60\u540e\u9762\u4f1a\u770b\u5230\u4e3a\u4ec0\u4e48\u6211\u4eec\u4f1a\u9700\u8981\u8fd9\u4e2a\u4f4d\u7f6e\u503c\u3002 Important \u5411\u91cf(Vector) \u5728\u56fe\u5f62\u7f16\u7a0b\u4e2d\u6211\u4eec\u7ecf\u5e38\u4f1a\u4f7f\u7528\u5411\u91cf\u8fd9\u4e2a\u6570\u5b66\u6982\u5ff5\uff0c\u56e0\u4e3a\u5b83\u7b80\u660e\u5730\u8868\u8fbe\u4e86\u4efb\u610f\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\uff0c\u5e76\u4e14\u5b83\u6709\u975e\u5e38\u6709\u7528\u7684\u6570\u5b66\u5c5e\u6027\u3002\u5728GLSL\u4e2d\u4e00\u4e2a\u5411\u91cf\u6709\u6700\u591a4\u4e2a\u5206\u91cf\uff0c\u6bcf\u4e2a\u5206\u91cf\u503c\u90fd\u4ee3\u8868\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u5750\u6807\uff0c\u5b83\u4eec\u53ef\u4ee5\u901a\u8fc7 vec.x \u3001 vec.y \u3001 vec.z \u548c vec.w \u6765\u83b7\u53d6\u3002\u6ce8\u610f vec.w \u5206\u91cf\u4e0d\u662f\u7528\u4f5c\u8868\u8fbe\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\u7684\uff08\u6211\u4eec\u5904\u7406\u7684\u662f3D\u4e0d\u662f4D\uff09\uff0c\u800c\u662f\u7528\u5728\u6240\u8c13\u900f\u89c6\u9664\u6cd5(Perspective Division)\u4e0a\u3002\u6211\u4eec\u4f1a\u5728\u540e\u9762\u7684\u6559\u7a0b\u4e2d\u66f4\u8be6\u7ec6\u5730\u8ba8\u8bba\u5411\u91cf\u3002 \u4e3a\u4e86\u8bbe\u7f6e\u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u51fa\uff0c\u6211\u4eec\u5fc5\u987b\u628a\u4f4d\u7f6e\u6570\u636e\u8d4b\u503c\u7ed9\u9884\u5b9a\u4e49\u7684 gl_Position \u53d8\u91cf\uff0c\u5b83\u5728\u5e55\u540e\u662f vec4 \u7c7b\u578b\u7684\u3002\u5728 main \u51fd\u6570\u7684\u6700\u540e\uff0c\u6211\u4eec\u5c06 gl_Position \u8bbe\u7f6e\u7684\u503c\u4f1a\u6210\u4e3a\u8be5\u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u51fa\u3002\u7531\u4e8e\u6211\u4eec\u7684\u8f93\u5165\u662f\u4e00\u4e2a3\u5206\u91cf\u7684\u5411\u91cf\uff0c\u6211\u4eec\u5fc5\u987b\u628a\u5b83\u8f6c\u6362\u4e3a4\u5206\u91cf\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u628a vec3 \u7684\u6570\u636e\u4f5c\u4e3a vec4 \u6784\u9020\u5668\u7684\u53c2\u6570\uff0c\u540c\u65f6\u628a w \u5206\u91cf\u8bbe\u7f6e\u4e3a 1.0f \uff08\u6211\u4eec\u4f1a\u5728\u540e\u9762\u89e3\u91ca\u4e3a\u4ec0\u4e48\uff09\u6765\u5b8c\u6210\u8fd9\u4e00\u4efb\u52a1\u3002 \u5f53\u524d\u8fd9\u4e2a\u9876\u70b9\u7740\u8272\u5668\u53ef\u80fd\u662f\u6211\u4eec\u80fd\u60f3\u5230\u7684\u6700\u7b80\u5355\u7684\u9876\u70b9\u7740\u8272\u5668\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u5bf9\u8f93\u5165\u6570\u636e\u4ec0\u4e48\u90fd\u6ca1\u6709\u5904\u7406\u5c31\u628a\u5b83\u4f20\u5230\u7740\u8272\u5668\u7684\u8f93\u51fa\u4e86\u3002\u5728\u771f\u5b9e\u7684\u7a0b\u5e8f\u91cc\u8f93\u5165\u6570\u636e\u901a\u5e38\u90fd\u4e0d\u662f\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\uff0c\u6240\u4ee5\u6211\u4eec\u9996\u5148\u5fc5\u987b\u5148\u628a\u5b83\u4eec\u8f6c\u6362\u81f3OpenGL\u7684\u53ef\u89c6\u533a\u57df\u5185\u3002","title":"\u9876\u70b9\u7740\u8272\u5668"},{"location":"01%20Getting%20started/04%20Hello%20Triangle/#_4","text":"\u73b0\u5728\uff0c\u6211\u4eec\u6682\u65f6\u5c06\u9876\u70b9\u7740\u8272\u5668\u7684\u6e90\u4ee3\u7801\u786c\u7f16\u7801\u5728\u4ee3\u7801\u6587\u4ef6\u9876\u90e8\u7684C\u98ce\u683c\u5b57\u7b26\u4e32\u4e2d\uff1a const char *vertexShaderSource = \"#version 330 core\\n\" \"layout (location = 0) in vec3 aPos;\\n\" \"void main()\\n\" \"{\\n\" \" gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0);\\n\" \"}\\0\"; \u4e3a\u4e86\u80fd\u591f\u8ba9OpenGL\u4f7f\u7528\u5b83\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u7f16\u8bd1\u5b83\u7684\u6e90\u4ee3\u7801\u3002 \u6211\u4eec\u9996\u5148\u8981\u505a\u7684\u662f\u521b\u5efa\u4e00\u4e2a\u7740\u8272\u5668\u5bf9\u8c61\uff0c\u6ce8\u610f\u8fd8\u662f\u7528ID\u6765\u5f15\u7528\u7684\u3002\u6240\u4ee5\u6211\u4eec\u50a8\u5b58\u8fd9\u4e2a\u9876\u70b9\u7740\u8272\u5668\u4e3a unsigned int \uff0c\u7136\u540e\u7528 glCreateShader \u521b\u5efa\u8fd9\u4e2a\u7740\u8272\u5668\uff1a unsigned int vertexShader; vertexShader = glCreateShader(GL_VERTEX_SHADER); \u6211\u4eec\u628a\u9700\u8981\u521b\u5efa\u7684\u7740\u8272\u5668\u7c7b\u578b\u4ee5\u53c2\u6570\u5f62\u5f0f\u63d0\u4f9b\u7ed9 glCreateShader \u3002\u7531\u4e8e\u6211\u4eec\u6b63\u5728\u521b\u5efa\u4e00\u4e2a\u9876\u70b9\u7740\u8272\u5668\uff0c\u4f20\u9012\u7684\u53c2\u6570\u662f GL_VERTEX_SHADER \u3002 \u4e0b\u4e00\u6b65\u6211\u4eec\u628a\u8fd9\u4e2a\u7740\u8272\u5668\u6e90\u7801\u9644\u52a0\u5230\u7740\u8272\u5668\u5bf9\u8c61\u4e0a\uff0c\u7136\u540e\u7f16\u8bd1\u5b83\uff1a glShaderSource(vertexShader, 1, &vertexShaderSource, NULL); glCompileShader(vertexShader); glShaderSource \u51fd\u6570\u628a\u8981\u7f16\u8bd1\u7684\u7740\u8272\u5668\u5bf9\u8c61\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002\u7b2c\u4e8c\u53c2\u6570\u6307\u5b9a\u4e86\u4f20\u9012\u7684\u6e90\u7801\u5b57\u7b26\u4e32\u6570\u91cf\uff0c\u8fd9\u91cc\u53ea\u6709\u4e00\u4e2a\u3002\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u9876\u70b9\u7740\u8272\u5668\u771f\u6b63\u7684\u6e90\u7801\uff0c\u7b2c\u56db\u4e2a\u53c2\u6570\u6211\u4eec\u5148\u8bbe\u7f6e\u4e3a NULL \u3002 Important \u4f60\u53ef\u80fd\u4f1a\u5e0c\u671b\u68c0\u6d4b\u5728\u8c03\u7528 glCompileShader \u540e\u7f16\u8bd1\u662f\u5426\u6210\u529f\u4e86\uff0c\u5982\u679c\u6ca1\u6210\u529f\u7684\u8bdd\uff0c\u4f60\u8fd8\u4f1a\u5e0c\u671b\u77e5\u9053\u9519\u8bef\u662f\u4ec0\u4e48\uff0c\u8fd9\u6837\u4f60\u624d\u80fd\u4fee\u590d\u5b83\u4eec\u3002\u68c0\u6d4b\u7f16\u8bd1\u65f6\u9519\u8bef\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u6765\u5b9e\u73b0\uff1a int success; char infoLog[512]; glGetShaderiv(vertexShader, GL_COMPILE_STATUS, &success); \u9996\u5148\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\u6765\u8868\u793a\u662f\u5426\u6210\u529f\u7f16\u8bd1\uff0c\u8fd8\u5b9a\u4e49\u4e86\u4e00\u4e2a\u50a8\u5b58\u9519\u8bef\u6d88\u606f\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u7684\u5bb9\u5668\u3002\u7136\u540e\u6211\u4eec\u7528 glGetShaderiv \u68c0\u67e5\u662f\u5426\u7f16\u8bd1\u6210\u529f\u3002\u5982\u679c\u7f16\u8bd1\u5931\u8d25\uff0c\u6211\u4eec\u4f1a\u7528 glGetShaderInfoLog \u83b7\u53d6\u9519\u8bef\u6d88\u606f\uff0c\u7136\u540e\u6253\u5370\u5b83\u3002 if(!success) { glGetShaderInfoLog(vertexShader, 512, NULL, infoLog); std::cout << \"ERROR::SHADER::VERTEX::COMPILATION_FAILED\\n\" << infoLog << std::endl; } \u5982\u679c\u7f16\u8bd1\u7684\u65f6\u5019\u6ca1\u6709\u68c0\u6d4b\u5230\u4efb\u4f55\u9519\u8bef\uff0c\u9876\u70b9\u7740\u8272\u5668\u5c31\u88ab\u7f16\u8bd1\u6210\u529f\u4e86\u3002","title":"\u7f16\u8bd1\u7740\u8272\u5668"},{"location":"01%20Getting%20started/04%20Hello%20Triangle/#_5","text":"\u7247\u6bb5\u7740\u8272\u5668(Fragment Shader)\u662f\u7b2c\u4e8c\u4e2a\u4e5f\u662f\u6700\u540e\u4e00\u4e2a\u6211\u4eec\u6253\u7b97\u521b\u5efa\u7684\u7528\u4e8e\u6e32\u67d3\u4e09\u89d2\u5f62\u7684\u7740\u8272\u5668\u3002\u7247\u6bb5\u7740\u8272\u5668\u6240\u505a\u7684\u662f\u8ba1\u7b97\u50cf\u7d20\u6700\u540e\u7684\u989c\u8272\u8f93\u51fa\u3002\u4e3a\u4e86\u8ba9\u4e8b\u60c5\u66f4\u7b80\u5355\uff0c\u6211\u4eec\u7684\u7247\u6bb5\u7740\u8272\u5668\u5c06\u4f1a\u4e00\u76f4\u8f93\u51fa\u6a58\u9ec4\u8272\u3002 Important \u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u4e2d\u989c\u8272\u88ab\u8868\u793a\u4e3a\u67094\u4e2a\u5143\u7d20\u7684\u6570\u7ec4\uff1a\u7ea2\u8272\u3001\u7eff\u8272\u3001\u84dd\u8272\u548calpha(\u900f\u660e\u5ea6)\u5206\u91cf\uff0c\u901a\u5e38\u7f29\u5199\u4e3aRGBA\u3002\u5f53\u5728OpenGL\u6216GLSL\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u989c\u8272\u7684\u65f6\u5019\uff0c\u6211\u4eec\u628a\u989c\u8272\u6bcf\u4e2a\u5206\u91cf\u7684\u5f3a\u5ea6\u8bbe\u7f6e\u57280.0\u52301.0\u4e4b\u95f4\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u8bbe\u7f6e\u7ea2\u4e3a1.0f\uff0c\u7eff\u4e3a1.0f\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e24\u4e2a\u989c\u8272\u7684\u6df7\u5408\u8272\uff0c\u5373\u9ec4\u8272\u3002\u8fd9\u4e09\u79cd\u989c\u8272\u5206\u91cf\u7684\u4e0d\u540c\u8c03\u914d\u53ef\u4ee5\u751f\u6210\u8d85\u8fc71600\u4e07\u79cd\u4e0d\u540c\u7684\u989c\u8272\uff01 #version 330 core out vec4 FragColor; void main() { FragColor = vec4(1.0f, 0.5f, 0.2f, 1.0f); } \u7247\u6bb5\u7740\u8272\u5668\u53ea\u9700\u8981\u4e00\u4e2a\u8f93\u51fa\u53d8\u91cf\uff0c\u8fd9\u4e2a\u53d8\u91cf\u662f\u4e00\u4e2a4\u5206\u91cf\u5411\u91cf\uff0c\u5b83\u8868\u793a\u7684\u662f\u6700\u7ec8\u7684\u8f93\u51fa\u989c\u8272\uff0c\u6211\u4eec\u5e94\u8be5\u81ea\u5df1\u5c06\u5176\u8ba1\u7b97\u51fa\u6765\u3002\u58f0\u660e\u8f93\u51fa\u53d8\u91cf\u53ef\u4ee5\u4f7f\u7528 out \u5173\u952e\u5b57\uff0c\u8fd9\u91cc\u6211\u4eec\u547d\u540d\u4e3a FragColor \u3002\u4e0b\u9762\uff0c\u6211\u4eec\u5c06\u4e00\u4e2aAlpha\u503c\u4e3a1.0(1.0\u4ee3\u8868\u5b8c\u5168\u4e0d\u900f\u660e)\u7684\u6a58\u9ec4\u8272\u7684 vec4 \u8d4b\u503c\u7ed9\u989c\u8272\u8f93\u51fa\u3002 \u7f16\u8bd1\u7247\u6bb5\u7740\u8272\u5668\u7684\u8fc7\u7a0b\u4e0e\u9876\u70b9\u7740\u8272\u5668\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u6211\u4eec\u4f7f\u7528 GL_FRAGMENT_SHADER \u5e38\u91cf\u4f5c\u4e3a\u7740\u8272\u5668\u7c7b\u578b\uff1a unsigned int fragmentShader; fragmentShader = glCreateShader(GL_FRAGMENT_SHADER); glShaderSource(fragmentShader, 1, &fragmentShaderSource, NULL); glCompileShader(fragmentShader); \u4e24\u4e2a\u7740\u8272\u5668\u73b0\u5728\u90fd\u7f16\u8bd1\u4e86\uff0c\u5269\u4e0b\u7684\u4e8b\u60c5\u662f\u628a\u4e24\u4e2a\u7740\u8272\u5668\u5bf9\u8c61\u94fe\u63a5\u5230\u4e00\u4e2a\u7528\u6765\u6e32\u67d3\u7684 \u7740\u8272\u5668\u7a0b\u5e8f (Shader Program)\u4e2d\u3002","title":"\u7247\u6bb5\u7740\u8272\u5668"},{"location":"01%20Getting%20started/04%20Hello%20Triangle/#_6","text":"\u7740\u8272\u5668\u7a0b\u5e8f\u5bf9\u8c61(Shader Program Object)\u662f\u591a\u4e2a\u7740\u8272\u5668\u5408\u5e76\u4e4b\u540e\u5e76\u6700\u7ec8\u94fe\u63a5\u5b8c\u6210\u7684\u7248\u672c\u3002\u5982\u679c\u8981\u4f7f\u7528\u521a\u624d\u7f16\u8bd1\u7684\u7740\u8272\u5668\u6211\u4eec\u5fc5\u987b\u628a\u5b83\u4eec \u94fe\u63a5 (Link)\u4e3a\u4e00\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\u5bf9\u8c61\uff0c\u7136\u540e\u5728\u6e32\u67d3\u5bf9\u8c61\u7684\u65f6\u5019\u6fc0\u6d3b\u8fd9\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\u3002\u5df2\u6fc0\u6d3b\u7740\u8272\u5668\u7a0b\u5e8f\u7684\u7740\u8272\u5668\u5c06\u5728\u6211\u4eec\u53d1\u9001\u6e32\u67d3\u8c03\u7528\u7684\u65f6\u5019\u88ab\u4f7f\u7528\u3002 \u5f53\u94fe\u63a5\u7740\u8272\u5668\u81f3\u4e00\u4e2a\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u5b83\u4f1a\u628a\u6bcf\u4e2a\u7740\u8272\u5668\u7684\u8f93\u51fa\u94fe\u63a5\u5230\u4e0b\u4e2a\u7740\u8272\u5668\u7684\u8f93\u5165\u3002\u5f53\u8f93\u51fa\u548c\u8f93\u5165\u4e0d\u5339\u914d\u7684\u65f6\u5019\uff0c\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u8fde\u63a5\u9519\u8bef\u3002 \u521b\u5efa\u4e00\u4e2a\u7a0b\u5e8f\u5bf9\u8c61\u5f88\u7b80\u5355\uff1a unsigned int shaderProgram; shaderProgram = glCreateProgram(); glCreateProgram \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5e76\u8fd4\u56de\u65b0\u521b\u5efa\u7a0b\u5e8f\u5bf9\u8c61\u7684ID\u5f15\u7528\u3002\u73b0\u5728\u6211\u4eec\u9700\u8981\u628a\u4e4b\u524d\u7f16\u8bd1\u7684\u7740\u8272\u5668\u9644\u52a0\u5230\u7a0b\u5e8f\u5bf9\u8c61\u4e0a\uff0c\u7136\u540e\u7528 glLinkProgram \u94fe\u63a5\u5b83\u4eec\uff1a glAttachShader(shaderProgram, vertexShader); glAttachShader(shaderProgram, fragmentShader); glLinkProgram(shaderProgram); \u4ee3\u7801\u5e94\u8be5\u5f88\u6e05\u695a\uff0c\u6211\u4eec\u628a\u7740\u8272\u5668\u9644\u52a0\u5230\u4e86\u7a0b\u5e8f\u4e0a\uff0c\u7136\u540e\u7528 glLinkProgram \u94fe\u63a5\u3002 Important \u5c31\u50cf\u7740\u8272\u5668\u7684\u7f16\u8bd1\u4e00\u6837\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u68c0\u6d4b\u94fe\u63a5\u7740\u8272\u5668\u7a0b\u5e8f\u662f\u5426\u5931\u8d25\uff0c\u5e76\u83b7\u53d6\u76f8\u5e94\u7684\u65e5\u5fd7\u3002\u4e0e\u4e0a\u9762\u4e0d\u540c\uff0c\u6211\u4eec\u4e0d\u4f1a\u8c03\u7528 glGetShaderiv \u548c glGetShaderInfoLog \uff0c\u73b0\u5728\u6211\u4eec\u4f7f\u7528\uff1a glGetProgramiv(shaderProgram, GL_LINK_STATUS, &success); if(!success) { glGetProgramInfoLog(shaderProgram, 512, NULL, infoLog); ... } \u5f97\u5230\u7684\u7ed3\u679c\u5c31\u662f\u4e00\u4e2a\u7a0b\u5e8f\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u8c03\u7528 glUseProgram \u51fd\u6570\uff0c\u7528\u521a\u521b\u5efa\u7684\u7a0b\u5e8f\u5bf9\u8c61\u4f5c\u4e3a\u5b83\u7684\u53c2\u6570\uff0c\u4ee5\u6fc0\u6d3b\u8fd9\u4e2a\u7a0b\u5e8f\u5bf9\u8c61\uff1a glUseProgram(shaderProgram); \u5728 glUseProgram \u51fd\u6570\u8c03\u7528\u4e4b\u540e\uff0c\u6bcf\u4e2a\u7740\u8272\u5668\u8c03\u7528\u548c\u6e32\u67d3\u8c03\u7528\u90fd\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u7a0b\u5e8f\u5bf9\u8c61\uff08\u4e5f\u5c31\u662f\u4e4b\u524d\u5199\u7684\u7740\u8272\u5668)\u4e86\u3002 \u5bf9\u4e86\uff0c\u5728\u628a\u7740\u8272\u5668\u5bf9\u8c61\u94fe\u63a5\u5230\u7a0b\u5e8f\u5bf9\u8c61\u4ee5\u540e\uff0c\u8bb0\u5f97\u5220\u9664\u7740\u8272\u5668\u5bf9\u8c61\uff0c\u6211\u4eec\u4e0d\u518d\u9700\u8981\u5b83\u4eec\u4e86\uff1a glDeleteShader(vertexShader); glDeleteShader(fragmentShader); \u73b0\u5728\uff0c\u6211\u4eec\u5df2\u7ecf\u628a\u8f93\u5165\u9876\u70b9\u6570\u636e\u53d1\u9001\u7ed9\u4e86GPU\uff0c\u5e76\u6307\u793a\u4e86GPU\u5982\u4f55\u5728\u9876\u70b9\u548c\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u5904\u7406\u5b83\u3002\u5c31\u5feb\u8981\u5b8c\u6210\u4e86\uff0c\u4f46\u8fd8\u6ca1\u7ed3\u675f\uff0cOpenGL\u8fd8\u4e0d\u77e5\u9053\u5b83\u8be5\u5982\u4f55\u89e3\u91ca\u5185\u5b58\u4e2d\u7684\u9876\u70b9\u6570\u636e\uff0c\u4ee5\u53ca\u5b83\u8be5\u5982\u4f55\u5c06\u9876\u70b9\u6570\u636e\u94fe\u63a5\u5230\u9876\u70b9\u7740\u8272\u5668\u7684\u5c5e\u6027\u4e0a\u3002\u6211\u4eec\u9700\u8981\u544a\u8bc9OpenGL\u600e\u4e48\u505a\u3002","title":"\u7740\u8272\u5668\u7a0b\u5e8f"},{"location":"01%20Getting%20started/04%20Hello%20Triangle/#_7","text":"\u9876\u70b9\u7740\u8272\u5668\u5141\u8bb8\u6211\u4eec\u6307\u5b9a\u4efb\u4f55\u4ee5\u9876\u70b9\u5c5e\u6027\u4e3a\u5f62\u5f0f\u7684\u8f93\u5165\u3002\u8fd9\u4f7f\u5176\u5177\u6709\u5f88\u5f3a\u7684\u7075\u6d3b\u6027\u7684\u540c\u65f6\uff0c\u5b83\u8fd8\u7684\u786e\u610f\u5473\u7740\u6211\u4eec\u5fc5\u987b\u624b\u52a8\u6307\u5b9a\u8f93\u5165\u6570\u636e\u7684\u54ea\u4e00\u4e2a\u90e8\u5206\u5bf9\u5e94\u9876\u70b9\u7740\u8272\u5668\u7684\u54ea\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u6e32\u67d3\u524d\u6307\u5b9aOpenGL\u8be5\u5982\u4f55\u89e3\u91ca\u9876\u70b9\u6570\u636e\u3002 \u6211\u4eec\u7684\u9876\u70b9\u7f13\u51b2\u6570\u636e\u4f1a\u88ab\u89e3\u6790\u4e3a\u4e0b\u9762\u8fd9\u6837\u5b50\uff1a \u4f4d\u7f6e\u6570\u636e\u88ab\u50a8\u5b58\u4e3a32\u4f4d\uff084\u5b57\u8282\uff09\u6d6e\u70b9\u503c\u3002 \u6bcf\u4e2a\u4f4d\u7f6e\u5305\u542b3\u4e2a\u8fd9\u6837\u7684\u503c\u3002 \u5728\u8fd93\u4e2a\u503c\u4e4b\u95f4\u6ca1\u6709\u7a7a\u9699\uff08\u6216\u5176\u4ed6\u503c\uff09\u3002\u8fd9\u51e0\u4e2a\u503c\u5728\u6570\u7ec4\u4e2d \u7d27\u5bc6\u6392\u5217 (Tightly Packed)\u3002 \u6570\u636e\u4e2d\u7b2c\u4e00\u4e2a\u503c\u5728\u7f13\u51b2\u5f00\u59cb\u7684\u4f4d\u7f6e\u3002 \u6709\u4e86\u8fd9\u4e9b\u4fe1\u606f\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 glVertexAttribPointer \u51fd\u6570\u544a\u8bc9OpenGL\u8be5\u5982\u4f55\u89e3\u6790\u9876\u70b9\u6570\u636e\uff08\u5e94\u7528\u5230\u9010\u4e2a\u9876\u70b9\u5c5e\u6027\u4e0a\uff09\u4e86\uff1a glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0); glEnableVertexAttribArray(0); glVertexAttribPointer \u51fd\u6570\u7684\u53c2\u6570\u975e\u5e38\u591a\uff0c\u6240\u4ee5\u6211\u4f1a\u9010\u4e00\u4ecb\u7ecd\u5b83\u4eec\uff1a \u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u6211\u4eec\u8981\u914d\u7f6e\u7684\u9876\u70b9\u5c5e\u6027\u3002\u8fd8\u8bb0\u5f97\u6211\u4eec\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u4f7f\u7528 layout(location = 0) \u5b9a\u4e49\u4e86 position \u9876\u70b9\u5c5e\u6027\u7684\u4f4d\u7f6e\u503c(Location)\u5417\uff1f\u5b83\u53ef\u4ee5\u628a\u9876\u70b9\u5c5e\u6027\u7684\u4f4d\u7f6e\u503c\u8bbe\u7f6e\u4e3a 0 \u3002\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u628a\u6570\u636e\u4f20\u9012\u5230\u8fd9\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\u4e2d\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u4f20\u5165 0 \u3002 \u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u9876\u70b9\u5c5e\u6027\u7684\u5927\u5c0f\u3002\u9876\u70b9\u5c5e\u6027\u662f\u4e00\u4e2a vec3 \uff0c\u5b83\u75313\u4e2a\u503c\u7ec4\u6210\uff0c\u6240\u4ee5\u5927\u5c0f\u662f3\u3002 \u7b2c\u4e09\u4e2a\u53c2\u6570\u6307\u5b9a\u6570\u636e\u7684\u7c7b\u578b\uff0c\u8fd9\u91cc\u662f GL_FLOAT (GLSL\u4e2d vec* \u90fd\u662f\u7531\u6d6e\u70b9\u6570\u503c\u7ec4\u6210\u7684)\u3002 \u4e0b\u4e2a\u53c2\u6570\u5b9a\u4e49\u6211\u4eec\u662f\u5426\u5e0c\u671b\u6570\u636e\u88ab\u6807\u51c6\u5316(Normalize)\u3002\u5982\u679c\u6211\u4eec\u8bbe\u7f6e\u4e3a GL_TRUE \uff0c\u6240\u6709\u6570\u636e\u90fd\u4f1a\u88ab\u6620\u5c04\u52300\uff08\u5bf9\u4e8e\u6709\u7b26\u53f7\u578bsigned\u6570\u636e\u662f-1\uff09\u52301\u4e4b\u95f4\u3002\u6211\u4eec\u628a\u5b83\u8bbe\u7f6e\u4e3a GL_FALSE \u3002 \u7b2c\u4e94\u4e2a\u53c2\u6570\u53eb\u505a \u6b65\u957f (Stride)\uff0c\u5b83\u544a\u8bc9\u6211\u4eec\u5728\u8fde\u7eed\u7684\u9876\u70b9\u5c5e\u6027\u7ec4\u4e4b\u95f4\u7684\u95f4\u9694\u3002\u7531\u4e8e\u4e0b\u4e2a\u7ec4\u4f4d\u7f6e\u6570\u636e\u57283\u4e2a float \u4e4b\u540e\uff0c\u6211\u4eec\u628a\u6b65\u957f\u8bbe\u7f6e\u4e3a 3 * sizeof(float) \u3002\u8981\u6ce8\u610f\u7684\u662f\u7531\u4e8e\u6211\u4eec\u77e5\u9053\u8fd9\u4e2a\u6570\u7ec4\u662f\u7d27\u5bc6\u6392\u5217\u7684\uff08\u5728\u4e24\u4e2a\u9876\u70b9\u5c5e\u6027\u4e4b\u95f4\u6ca1\u6709\u7a7a\u9699\uff09\u6211\u4eec\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u4e3a0\u6765\u8ba9OpenGL\u51b3\u5b9a\u5177\u4f53\u6b65\u957f\u662f\u591a\u5c11\uff08\u53ea\u6709\u5f53\u6570\u503c\u662f\u7d27\u5bc6\u6392\u5217\u65f6\u624d\u53ef\u7528\uff09\u3002\u4e00\u65e6\u6211\u4eec\u6709\u66f4\u591a\u7684\u9876\u70b9\u5c5e\u6027\uff0c\u6211\u4eec\u5c31\u5fc5\u987b\u66f4\u5c0f\u5fc3\u5730\u5b9a\u4e49\u6bcf\u4e2a\u9876\u70b9\u5c5e\u6027\u4e4b\u95f4\u7684\u95f4\u9694\uff0c\u6211\u4eec\u5728\u540e\u9762\u4f1a\u770b\u5230\u66f4\u591a\u7684\u4f8b\u5b50\uff08\u8bd1\u6ce8: \u8fd9\u4e2a\u53c2\u6570\u7684\u610f\u601d\u7b80\u5355\u8bf4\u5c31\u662f\u4ece\u8fd9\u4e2a\u5c5e\u6027\u7b2c\u4e8c\u6b21\u51fa\u73b0\u7684\u5730\u65b9\u5230\u6574\u4e2a\u6570\u7ec40\u4f4d\u7f6e\u4e4b\u95f4\u6709\u591a\u5c11\u5b57\u8282\uff09\u3002 \u6700\u540e\u4e00\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\u662f void* \uff0c\u6240\u4ee5\u9700\u8981\u6211\u4eec\u8fdb\u884c\u8fd9\u4e2a\u5947\u602a\u7684\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u3002\u5b83\u8868\u793a\u4f4d\u7f6e\u6570\u636e\u5728\u7f13\u51b2\u4e2d\u8d77\u59cb\u4f4d\u7f6e\u7684 \u504f\u79fb\u91cf (Offset)\u3002\u7531\u4e8e\u4f4d\u7f6e\u6570\u636e\u5728\u6570\u7ec4\u7684\u5f00\u5934\uff0c\u6240\u4ee5\u8fd9\u91cc\u662f0\u3002\u6211\u4eec\u4f1a\u5728\u540e\u9762\u8be6\u7ec6\u89e3\u91ca\u8fd9\u4e2a\u53c2\u6570\u3002 Important \u6bcf\u4e2a\u9876\u70b9\u5c5e\u6027\u4ece\u4e00\u4e2aVBO\u7ba1\u7406\u7684\u5185\u5b58\u4e2d\u83b7\u5f97\u5b83\u7684\u6570\u636e\uff0c\u800c\u5177\u4f53\u662f\u4ece\u54ea\u4e2aVBO\uff08\u7a0b\u5e8f\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2aVBO\uff09\u83b7\u53d6\u5219\u662f\u901a\u8fc7\u5728\u8c03\u7528 glVertexAttribPointer \u65f6\u7ed1\u5b9a\u5230 GL_ARRAY_BUFFER \u7684VBO\u51b3\u5b9a\u7684\u3002\u7531\u4e8e\u5728\u8c03\u7528 glVertexAttribPointer \u4e4b\u524d\u7ed1\u5b9a\u7684\u662f\u5148\u524d\u5b9a\u4e49\u7684 VBO \u5bf9\u8c61\uff0c\u9876\u70b9\u5c5e\u6027 0 \u73b0\u5728\u4f1a\u94fe\u63a5\u5230\u5b83\u7684\u9876\u70b9\u6570\u636e\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5b9a\u4e49\u4e86OpenGL\u8be5\u5982\u4f55\u89e3\u91ca\u9876\u70b9\u6570\u636e\uff0c\u6211\u4eec\u73b0\u5728\u5e94\u8be5\u4f7f\u7528 glEnableVertexAttribArray \uff0c\u4ee5\u9876\u70b9\u5c5e\u6027\u4f4d\u7f6e\u503c\u4f5c\u4e3a\u53c2\u6570\uff0c\u542f\u7528\u9876\u70b9\u5c5e\u6027\uff1b\u9876\u70b9\u5c5e\u6027\u9ed8\u8ba4\u662f\u7981\u7528\u7684\u3002\u81ea\u6b64\uff0c\u6240\u6709\u4e1c\u897f\u90fd\u5df2\u7ecf\u8bbe\u7f6e\u597d\u4e86\uff1a\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u5c06\u9876\u70b9\u6570\u636e\u521d\u59cb\u5316\u81f3\u7f13\u51b2\u4e2d\uff0c\u5efa\u7acb\u4e86\u4e00\u4e2a\u9876\u70b9\u548c\u4e00\u4e2a\u7247\u6bb5\u7740\u8272\u5668\uff0c\u5e76\u544a\u8bc9\u4e86OpenGL\u5982\u4f55\u628a\u9876\u70b9\u6570\u636e\u94fe\u63a5\u5230\u9876\u70b9\u7740\u8272\u5668\u7684\u9876\u70b9\u5c5e\u6027\u4e0a\u3002\u5728OpenGL\u4e2d\u7ed8\u5236\u4e00\u4e2a\u7269\u4f53\uff0c\u4ee3\u7801\u4f1a\u50cf\u662f\u8fd9\u6837\uff1a // 0. \u590d\u5236\u9876\u70b9\u6570\u7ec4\u5230\u7f13\u51b2\u4e2d\u4f9bOpenGL\u4f7f\u7528 glBindBuffer(GL_ARRAY_BUFFER, VBO); glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW); // 1. \u8bbe\u7f6e\u9876\u70b9\u5c5e\u6027\u6307\u9488 glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0); glEnableVertexAttribArray(0); // 2. \u5f53\u6211\u4eec\u6e32\u67d3\u4e00\u4e2a\u7269\u4f53\u65f6\u8981\u4f7f\u7528\u7740\u8272\u5668\u7a0b\u5e8f glUseProgram(shaderProgram); // 3. \u7ed8\u5236\u7269\u4f53 someOpenGLFunctionThatDrawsOurTriangle(); \u6bcf\u5f53\u6211\u4eec\u7ed8\u5236\u4e00\u4e2a\u7269\u4f53\u7684\u65f6\u5019\u90fd\u5fc5\u987b\u91cd\u590d\u8fd9\u4e00\u8fc7\u7a0b\u3002\u8fd9\u770b\u8d77\u6765\u53ef\u80fd\u4e0d\u591a\uff0c\u4f46\u662f\u5982\u679c\u6709\u8d85\u8fc75\u4e2a\u9876\u70b9\u5c5e\u6027\uff0c\u4e0a\u767e\u4e2a\u4e0d\u540c\u7269\u4f53\u5462\uff08\u8fd9\u5176\u5b9e\u5e76\u4e0d\u7f55\u89c1\uff09\u3002\u7ed1\u5b9a\u6b63\u786e\u7684\u7f13\u51b2\u5bf9\u8c61\uff0c\u4e3a\u6bcf\u4e2a\u7269\u4f53\u914d\u7f6e\u6240\u6709\u9876\u70b9\u5c5e\u6027\u5f88\u5feb\u5c31\u53d8\u6210\u4e00\u4ef6\u9ebb\u70e6\u4e8b\u3002\u6709\u6ca1\u6709\u4e00\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u6211\u4eec\u628a\u6240\u6709\u8fd9\u4e9b\u72b6\u6001\u914d\u7f6e\u50a8\u5b58\u5728\u4e00\u4e2a\u5bf9\u8c61\u4e2d\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u7ed1\u5b9a\u8fd9\u4e2a\u5bf9\u8c61\u6765\u6062\u590d\u72b6\u6001\u5462\uff1f","title":"\u94fe\u63a5\u9876\u70b9\u5c5e\u6027"},{"location":"01%20Getting%20started/04%20Hello%20Triangle/#_8","text":"\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61 (Vertex Array Object, VAO )\u53ef\u4ee5\u50cf\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u90a3\u6837\u88ab\u7ed1\u5b9a\uff0c\u4efb\u4f55\u968f\u540e\u7684\u9876\u70b9\u5c5e\u6027\u8c03\u7528\u90fd\u4f1a\u50a8\u5b58\u5728\u8fd9\u4e2aVAO\u4e2d\u3002\u8fd9\u6837\u7684\u597d\u5904\u5c31\u662f\uff0c\u5f53\u914d\u7f6e\u9876\u70b9\u5c5e\u6027\u6307\u9488\u65f6\uff0c\u4f60\u53ea\u9700\u8981\u5c06\u90a3\u4e9b\u8c03\u7528\u6267\u884c\u4e00\u6b21\uff0c\u4e4b\u540e\u518d\u7ed8\u5236\u7269\u4f53\u7684\u65f6\u5019\u53ea\u9700\u8981\u7ed1\u5b9a\u76f8\u5e94\u7684VAO\u5c31\u884c\u4e86\u3002\u8fd9\u4f7f\u5728\u4e0d\u540c\u9876\u70b9\u6570\u636e\u548c\u5c5e\u6027\u914d\u7f6e\u4e4b\u95f4\u5207\u6362\u53d8\u5f97\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u7ed1\u5b9a\u4e0d\u540c\u7684VAO\u5c31\u884c\u4e86\u3002\u521a\u521a\u8bbe\u7f6e\u7684\u6240\u6709\u72b6\u6001\u90fd\u5c06\u5b58\u50a8\u5728VAO\u4e2d Attention OpenGL\u7684\u6838\u5fc3\u6a21\u5f0f \u8981\u6c42 \u6211\u4eec\u4f7f\u7528VAO\uff0c\u6240\u4ee5\u5b83\u77e5\u9053\u8be5\u5982\u4f55\u5904\u7406\u6211\u4eec\u7684\u9876\u70b9\u8f93\u5165\u3002\u5982\u679c\u6211\u4eec\u7ed1\u5b9aVAO\u5931\u8d25\uff0cOpenGL\u4f1a\u62d2\u7edd\u7ed8\u5236\u4efb\u4f55\u4e1c\u897f\u3002 \u4e00\u4e2a\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\u4f1a\u50a8\u5b58\u4ee5\u4e0b\u8fd9\u4e9b\u5185\u5bb9\uff1a glEnableVertexAttribArray \u548c glDisableVertexAttribArray \u7684\u8c03\u7528\u3002 \u901a\u8fc7 glVertexAttribPointer \u8bbe\u7f6e\u7684\u9876\u70b9\u5c5e\u6027\u914d\u7f6e\u3002 \u901a\u8fc7 glVertexAttribPointer \u8c03\u7528\u4e0e\u9876\u70b9\u5c5e\u6027\u5173\u8054\u7684\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u3002 \u521b\u5efa\u4e00\u4e2aVAO\u548c\u521b\u5efa\u4e00\u4e2aVBO\u5f88\u7c7b\u4f3c\uff1a unsigned int VAO; glGenVertexArrays(1, &VAO); \u8981\u60f3\u4f7f\u7528VAO\uff0c\u8981\u505a\u7684\u53ea\u662f\u4f7f\u7528 glBindVertexArray \u7ed1\u5b9aVAO\u3002\u4ece\u7ed1\u5b9a\u4e4b\u540e\u8d77\uff0c\u6211\u4eec\u5e94\u8be5\u7ed1\u5b9a\u548c\u914d\u7f6e\u5bf9\u5e94\u7684VBO\u548c\u5c5e\u6027\u6307\u9488\uff0c\u4e4b\u540e\u89e3\u7ed1VAO\u4f9b\u4e4b\u540e\u4f7f\u7528\u3002\u5f53\u6211\u4eec\u6253\u7b97\u7ed8\u5236\u4e00\u4e2a\u7269\u4f53\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u8981\u5728\u7ed8\u5236\u7269\u4f53\u524d\u7b80\u5355\u5730\u628aVAO\u7ed1\u5b9a\u5230\u5e0c\u671b\u4f7f\u7528\u7684\u8bbe\u5b9a\u4e0a\u5c31\u884c\u4e86\u3002\u8fd9\u6bb5\u4ee3\u7801\u5e94\u8be5\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a // ..:: \u521d\u59cb\u5316\u4ee3\u7801\uff08\u53ea\u8fd0\u884c\u4e00\u6b21 (\u9664\u975e\u4f60\u7684\u7269\u4f53\u9891\u7e41\u6539\u53d8)\uff09 :: .. // 1. \u7ed1\u5b9aVAO glBindVertexArray(VAO); // 2. \u628a\u9876\u70b9\u6570\u7ec4\u590d\u5236\u5230\u7f13\u51b2\u4e2d\u4f9bOpenGL\u4f7f\u7528 glBindBuffer(GL_ARRAY_BUFFER, VBO); glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW); // 3. \u8bbe\u7f6e\u9876\u70b9\u5c5e\u6027\u6307\u9488 glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0); glEnableVertexAttribArray(0); [...] // ..:: \u7ed8\u5236\u4ee3\u7801\uff08\u6e32\u67d3\u5faa\u73af\u4e2d\uff09 :: .. // 4. \u7ed8\u5236\u7269\u4f53 glUseProgram(shaderProgram); glBindVertexArray(VAO); someOpenGLFunctionThatDrawsOurTriangle(); \u5c31\u8fd9\u4e48\u591a\u4e86\uff01\u524d\u9762\u505a\u7684\u4e00\u5207\u90fd\u662f\u7b49\u5f85\u8fd9\u4e00\u523b\uff0c\u4e00\u4e2a\u50a8\u5b58\u4e86\u6211\u4eec\u9876\u70b9\u5c5e\u6027\u914d\u7f6e\u548c\u5e94\u4f7f\u7528\u7684VBO\u7684\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\u3002\u4e00\u822c\u5f53\u4f60\u6253\u7b97\u7ed8\u5236\u591a\u4e2a\u7269\u4f53\u65f6\uff0c\u4f60\u9996\u5148\u8981\u751f\u6210/\u914d\u7f6e\u6240\u6709\u7684VAO\uff08\u548c\u5fc5\u987b\u7684VBO\u53ca\u5c5e\u6027\u6307\u9488)\uff0c\u7136\u540e\u50a8\u5b58\u5b83\u4eec\u4f9b\u540e\u9762\u4f7f\u7528\u3002\u5f53\u6211\u4eec\u6253\u7b97\u7ed8\u5236\u7269\u4f53\u7684\u65f6\u5019\u5c31\u62ff\u51fa\u76f8\u5e94\u7684VAO\uff0c\u7ed1\u5b9a\u5b83\uff0c\u7ed8\u5236\u5b8c\u7269\u4f53\u540e\uff0c\u518d\u89e3\u7ed1VAO\u3002","title":"\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61"},{"location":"01%20Getting%20started/04%20Hello%20Triangle/#_9","text":"\u8981\u60f3\u7ed8\u5236\u6211\u4eec\u60f3\u8981\u7684\u7269\u4f53\uff0cOpenGL\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86 glDrawArrays \u51fd\u6570\uff0c\u5b83\u4f7f\u7528\u5f53\u524d\u6fc0\u6d3b\u7684\u7740\u8272\u5668\uff0c\u4e4b\u524d\u5b9a\u4e49\u7684\u9876\u70b9\u5c5e\u6027\u914d\u7f6e\uff0c\u548cVBO\u7684\u9876\u70b9\u6570\u636e\uff08\u901a\u8fc7VAO\u95f4\u63a5\u7ed1\u5b9a\uff09\u6765\u7ed8\u5236\u56fe\u5143\u3002 glUseProgram(shaderProgram); glBindVertexArray(VAO); glDrawArrays(GL_TRIANGLES, 0, 3); glDrawArrays \u51fd\u6570\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u6211\u4eec\u6253\u7b97\u7ed8\u5236\u7684OpenGL\u56fe\u5143\u7684\u7c7b\u578b\u3002\u7531\u4e8e\u6211\u4eec\u5728\u4e00\u5f00\u59cb\u65f6\u8bf4\u8fc7\uff0c\u6211\u4eec\u5e0c\u671b\u7ed8\u5236\u7684\u662f\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u8fd9\u91cc\u4f20\u9012 GL_TRIANGLES \u7ed9\u5b83\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u4e86\u9876\u70b9\u6570\u7ec4\u7684\u8d77\u59cb\u7d22\u5f15\uff0c\u6211\u4eec\u8fd9\u91cc\u586b 0 \u3002\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u6211\u4eec\u6253\u7b97\u7ed8\u5236\u591a\u5c11\u4e2a\u9876\u70b9\uff0c\u8fd9\u91cc\u662f 3 \uff08\u6211\u4eec\u53ea\u4ece\u6211\u4eec\u7684\u6570\u636e\u4e2d\u6e32\u67d3\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u5b83\u53ea\u67093\u4e2a\u9876\u70b9\u957f\uff09\u3002 \u73b0\u5728\u5c1d\u8bd5\u7f16\u8bd1\u4ee3\u7801\uff0c\u5982\u679c\u5f39\u51fa\u4e86\u4efb\u4f55\u9519\u8bef\uff0c\u56de\u5934\u68c0\u67e5\u4f60\u7684\u4ee3\u7801\u3002\u5982\u679c\u4f60\u7f16\u8bd1\u901a\u8fc7\u4e86\uff0c\u4f60\u5e94\u8be5\u770b\u5230\u4e0b\u9762\u7684\u7ed3\u679c\uff1a \u5b8c\u6574\u7684\u7a0b\u5e8f\u6e90\u7801\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u3002 \u5982\u679c\u4f60\u7684\u8f93\u51fa\u548c\u8fd9\u4e2a\u770b\u8d77\u6765\u4e0d\u4e00\u6837\uff0c\u4f60\u53ef\u80fd\u505a\u9519\u4e86\u4ec0\u4e48\u3002\u53bb\u67e5\u770b\u4e00\u4e0b\u6e90\u7801\uff0c\u68c0\u67e5\u4f60\u662f\u5426\u9057\u6f0f\u4e86\u4ec0\u4e48\u4e1c\u897f\uff0c\u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u5728\u8bc4\u8bba\u533a\u63d0\u95ee\u3002","title":"\u6211\u4eec\u4e00\u76f4\u671f\u5f85\u7684\u4e09\u89d2\u5f62"},{"location":"01%20Getting%20started/04%20Hello%20Triangle/#_10","text":"\u5728\u6e32\u67d3\u9876\u70b9\u8fd9\u4e00\u8bdd\u9898\u4e0a\u6211\u4eec\u8fd8\u6709\u6700\u540e\u4e00\u4e2a\u9700\u8981\u8ba8\u8bba\u7684\u4e1c\u897f\u2014\u2014\u5143\u7d20\u7f13\u51b2\u5bf9\u8c61(Element Buffer Object\uff0cEBO)\uff0c\u4e5f\u53eb\u7d22\u5f15\u7f13\u51b2\u5bf9\u8c61(Index Buffer Object\uff0cIBO)\u3002\u8981\u89e3\u91ca\u5143\u7d20\u7f13\u51b2\u5bf9\u8c61\u7684\u5de5\u4f5c\u65b9\u5f0f\u6700\u597d\u8fd8\u662f\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u5047\u8bbe\u6211\u4eec\u4e0d\u518d\u7ed8\u5236\u4e00\u4e2a\u4e09\u89d2\u5f62\u800c\u662f\u7ed8\u5236\u4e00\u4e2a\u77e9\u5f62\u3002\u6211\u4eec\u53ef\u4ee5\u7ed8\u5236\u4e24\u4e2a\u4e09\u89d2\u5f62\u6765\u7ec4\u6210\u4e00\u4e2a\u77e9\u5f62\uff08OpenGL\u4e3b\u8981\u5904\u7406\u4e09\u89d2\u5f62\uff09\u3002\u8fd9\u4f1a\u751f\u6210\u4e0b\u9762\u7684\u9876\u70b9\u7684\u96c6\u5408\uff1a float vertices[] = { // \u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62 0.5f, 0.5f, 0.0f, // \u53f3\u4e0a\u89d2 0.5f, -0.5f, 0.0f, // \u53f3\u4e0b\u89d2 -0.5f, 0.5f, 0.0f, // \u5de6\u4e0a\u89d2 // \u7b2c\u4e8c\u4e2a\u4e09\u89d2\u5f62 0.5f, -0.5f, 0.0f, // \u53f3\u4e0b\u89d2 -0.5f, -0.5f, 0.0f, // \u5de6\u4e0b\u89d2 -0.5f, 0.5f, 0.0f // \u5de6\u4e0a\u89d2 }; \u53ef\u4ee5\u770b\u5230\uff0c\u6709\u51e0\u4e2a\u9876\u70b9\u53e0\u52a0\u4e86\u3002\u6211\u4eec\u6307\u5b9a\u4e86 \u53f3\u4e0b\u89d2 \u548c \u5de6\u4e0a\u89d2 \u4e24\u6b21\uff01\u4e00\u4e2a\u77e9\u5f62\u53ea\u67094\u4e2a\u800c\u4e0d\u662f6\u4e2a\u9876\u70b9\uff0c\u8fd9\u6837\u5c31\u4ea7\u751f50%\u7684\u989d\u5916\u5f00\u9500\u3002\u5f53\u6211\u4eec\u6709\u5305\u62ec\u4e0a\u5343\u4e2a\u4e09\u89d2\u5f62\u7684\u6a21\u578b\u4e4b\u540e\u8fd9\u4e2a\u95ee\u9898\u4f1a\u66f4\u7cdf\u7cd5\uff0c\u8fd9\u4f1a\u4ea7\u751f\u4e00\u5927\u5806\u6d6a\u8d39\u3002\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\u662f\u53ea\u50a8\u5b58\u4e0d\u540c\u7684\u9876\u70b9\uff0c\u5e76\u8bbe\u5b9a\u7ed8\u5236\u8fd9\u4e9b\u9876\u70b9\u7684\u987a\u5e8f\u3002\u8fd9\u6837\u5b50\u6211\u4eec\u53ea\u8981\u50a8\u5b584\u4e2a\u9876\u70b9\u5c31\u80fd\u7ed8\u5236\u77e9\u5f62\u4e86\uff0c\u4e4b\u540e\u53ea\u8981\u6307\u5b9a\u7ed8\u5236\u7684\u987a\u5e8f\u5c31\u884c\u4e86\u3002\u5982\u679cOpenGL\u63d0\u4f9b\u8fd9\u4e2a\u529f\u80fd\u5c31\u597d\u4e86\uff0c\u5bf9\u5427\uff1f \u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0c\u5143\u7d20\u7f13\u51b2\u533a\u5bf9\u8c61\u7684\u5de5\u4f5c\u65b9\u5f0f\u6b63\u662f\u5982\u6b64\u3002 EBO\u662f\u4e00\u4e2a\u7f13\u51b2\u533a\uff0c\u5c31\u50cf\u4e00\u4e2a\u9876\u70b9\u7f13\u51b2\u533a\u5bf9\u8c61\u4e00\u6837\uff0c\u5b83\u5b58\u50a8 OpenGL \u7528\u6765\u51b3\u5b9a\u8981\u7ed8\u5236\u54ea\u4e9b\u9876\u70b9\u7684\u7d22\u5f15\u3002\u8fd9\u79cd\u6240\u8c13\u7684 \u7d22\u5f15\u7ed8\u5236 (Indexed Drawing)\u6b63\u662f\u6211\u4eec\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u3002\u9996\u5148\uff0c\u6211\u4eec\u5148\u8981\u5b9a\u4e49\uff08\u4e0d\u91cd\u590d\u7684\uff09\u9876\u70b9\uff0c\u548c\u7ed8\u5236\u51fa\u77e9\u5f62\u6240\u9700\u7684\u7d22\u5f15\uff1a float vertices[] = { 0.5f, 0.5f, 0.0f, // \u53f3\u4e0a\u89d2 0.5f, -0.5f, 0.0f, // \u53f3\u4e0b\u89d2 -0.5f, -0.5f, 0.0f, // \u5de6\u4e0b\u89d2 -0.5f, 0.5f, 0.0f // \u5de6\u4e0a\u89d2 }; unsigned int indices[] = { // \u6ce8\u610f\u7d22\u5f15\u4ece0\u5f00\u59cb! // \u6b64\u4f8b\u7684\u7d22\u5f15(0,1,2,3)\u5c31\u662f\u9876\u70b9\u6570\u7ec4vertices\u7684\u4e0b\u6807\uff0c // \u8fd9\u6837\u53ef\u4ee5\u7531\u4e0b\u6807\u4ee3\u8868\u9876\u70b9\u7ec4\u5408\u6210\u77e9\u5f62 0, 1, 3, // \u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62 1, 2, 3 // \u7b2c\u4e8c\u4e2a\u4e09\u89d2\u5f62 }; \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u5f53\u4f7f\u7528\u7d22\u5f15\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u5b9a\u4e49\u4e864\u4e2a\u9876\u70b9\uff0c\u800c\u4e0d\u662f6\u4e2a\u3002\u4e0b\u4e00\u6b65\u6211\u4eec\u9700\u8981\u521b\u5efa\u5143\u7d20\u7f13\u51b2\u5bf9\u8c61\uff1a unsigned int EBO; glGenBuffers(1, &EBO); \u4e0eVBO\u7c7b\u4f3c\uff0c\u6211\u4eec\u5148\u7ed1\u5b9aEBO\u7136\u540e\u7528 glBufferData \u628a\u7d22\u5f15\u590d\u5236\u5230\u7f13\u51b2\u91cc\u3002\u540c\u6837\uff0c\u548cVBO\u7c7b\u4f3c\uff0c\u6211\u4eec\u4f1a\u628a\u8fd9\u4e9b\u51fd\u6570\u8c03\u7528\u653e\u5728\u7ed1\u5b9a\u548c\u89e3\u7ed1\u51fd\u6570\u8c03\u7528\u4e4b\u95f4\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u6b21\u6211\u4eec\u628a\u7f13\u51b2\u7684\u7c7b\u578b\u5b9a\u4e49\u4e3a GL_ELEMENT_ARRAY_BUFFER \u3002 glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO); glBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(indices), indices, GL_STATIC_DRAW); \u6ce8\u610f\uff1a\u6211\u4eec\u4f20\u9012\u4e86 GL_ELEMENT_ARRAY_BUFFER \u5f53\u4f5c\u7f13\u51b2\u76ee\u6807\u3002\u6700\u540e\u4e00\u4ef6\u8981\u505a\u7684\u4e8b\u662f\u7528 glDrawElements \u6765\u66ff\u6362 glDrawArrays \u51fd\u6570\uff0c\u8868\u793a\u6211\u4eec\u8981\u4ece\u7d22\u5f15\u7f13\u51b2\u533a\u6e32\u67d3\u4e09\u89d2\u5f62\u3002\u4f7f\u7528 glDrawElements \u65f6\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u5f53\u524d\u7ed1\u5b9a\u7684\u7d22\u5f15\u7f13\u51b2\u5bf9\u8c61\u4e2d\u7684\u7d22\u5f15\u8fdb\u884c\u7ed8\u5236\uff1a glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO); glDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_INT, 0); \u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u4e86\u6211\u4eec\u7ed8\u5236\u7684\u6a21\u5f0f\uff0c\u8fd9\u4e2a\u548c glDrawArrays \u7684\u4e00\u6837\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u6211\u4eec\u6253\u7b97\u7ed8\u5236\u9876\u70b9\u7684\u4e2a\u6570\uff0c\u8fd9\u91cc\u586b6\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u4e00\u5171\u9700\u8981\u7ed8\u52366\u4e2a\u9876\u70b9\u3002\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u7d22\u5f15\u7684\u7c7b\u578b\uff0c\u8fd9\u91cc\u662f GL_UNSIGNED_INT \u3002\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u91cc\u6211\u4eec\u53ef\u4ee5\u6307\u5b9aEBO\u4e2d\u7684\u504f\u79fb\u91cf\uff08\u6216\u8005\u4f20\u9012\u4e00\u4e2a\u7d22\u5f15\u6570\u7ec4\uff0c\u4f46\u662f\u8fd9\u662f\u5f53\u4f60\u4e0d\u5728\u4f7f\u7528\u7d22\u5f15\u7f13\u51b2\u5bf9\u8c61\u7684\u65f6\u5019\uff09\uff0c\u4f46\u662f\u6211\u4eec\u4f1a\u5728\u8fd9\u91cc\u586b\u51990\u3002 glDrawElements \u51fd\u6570\u4ece\u5f53\u524d\u7ed1\u5b9a\u5230 GL_ELEMENT_ARRAY_BUFFER \u76ee\u6807\u7684EBO\u4e2d\u83b7\u53d6\u5176\u7d22\u5f15\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u6bcf\u6b21\u60f3\u8981\u4f7f\u7528\u7d22\u5f15\u6e32\u67d3\u5bf9\u8c61\u65f6\u90fd\u5fc5\u987b\u7ed1\u5b9a\u76f8\u5e94\u7684EBO\uff0c\u8fd9\u53c8\u6709\u70b9\u9ebb\u70e6\u3002\u78b0\u5de7\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\u4e5f\u8ddf\u8e2a\u5143\u7d20\u7f13\u51b2\u533a\u5bf9\u8c61\u7ed1\u5b9a\u3002\u5728\u7ed1\u5b9aVAO\u65f6\uff0c\u7ed1\u5b9a\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7f13\u51b2\u533a\u5bf9\u8c61\u5b58\u50a8\u4e3aVAO\u7684\u5143\u7d20\u7f13\u51b2\u533a\u5bf9\u8c61\u3002\u7136\u540e\uff0c\u7ed1\u5b9a\u5230VAO\u4e5f\u4f1a\u81ea\u52a8\u7ed1\u5b9a\u8be5EBO\u3002 Attention \u5f53\u76ee\u6807\u662f GL_ELEMENT_ARRAY_BUFFER \u7684\u65f6\u5019\uff0cVAO\u4f1a\u50a8\u5b58 glBindBuffer \u7684\u51fd\u6570\u8c03\u7528\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u5b83\u4e5f\u4f1a\u50a8\u5b58\u89e3\u7ed1\u8c03\u7528\uff0c\u6240\u4ee5\u786e\u4fdd\u4f60\u6ca1\u6709\u5728\u89e3\u7ed1VAO\u4e4b\u524d\u89e3\u7ed1\u7d22\u5f15\u6570\u7ec4\u7f13\u51b2\uff0c\u5426\u5219\u5b83\u5c31\u6ca1\u6709\u8fd9\u4e2aEBO\u914d\u7f6e\u4e86\u3002 \u6700\u540e\u7684\u521d\u59cb\u5316\u548c\u7ed8\u5236\u4ee3\u7801\u73b0\u5728\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a // ..:: \u521d\u59cb\u5316\u4ee3\u7801 :: .. // 1. \u7ed1\u5b9a\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61 glBindVertexArray(VAO); // 2. \u628a\u6211\u4eec\u7684\u9876\u70b9\u6570\u7ec4\u590d\u5236\u5230\u4e00\u4e2a\u9876\u70b9\u7f13\u51b2\u4e2d\uff0c\u4f9bOpenGL\u4f7f\u7528 glBindBuffer(GL_ARRAY_BUFFER, VBO); glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW); // 3. \u590d\u5236\u6211\u4eec\u7684\u7d22\u5f15\u6570\u7ec4\u5230\u4e00\u4e2a\u7d22\u5f15\u7f13\u51b2\u4e2d\uff0c\u4f9bOpenGL\u4f7f\u7528 glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO); glBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(indices), indices, GL_STATIC_DRAW); // 4. \u8bbe\u5b9a\u9876\u70b9\u5c5e\u6027\u6307\u9488 glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0); glEnableVertexAttribArray(0); [...] // ..:: \u7ed8\u5236\u4ee3\u7801\uff08\u6e32\u67d3\u5faa\u73af\u4e2d\uff09 :: .. glUseProgram(shaderProgram); glBindVertexArray(VAO); glDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_INT, 0); glBindVertexArray(0); \u8fd0\u884c\u7a0b\u5e8f\u4f1a\u83b7\u5f97\u4e0b\u9762\u8fd9\u6837\u7684\u56fe\u7247\u7684\u7ed3\u679c\u3002\u5de6\u4fa7\u56fe\u7247\u770b\u5e94\u8be5\u8d77\u6765\u5f88\u719f\u6089\uff0c\u800c\u53f3\u4fa7\u7684\u5219\u662f\u4f7f\u7528 \u7ebf\u6846\u6a21\u5f0f (Wireframe Mode)\u7ed8\u5236\u7684\u3002\u7ebf\u6846\u77e9\u5f62\u53ef\u4ee5\u663e\u793a\u51fa\u77e9\u5f62\u7684\u786e\u662f\u7531\u4e24\u4e2a\u4e09\u89d2\u5f62\u7ec4\u6210\u7684\u3002 Important \u7ebf\u6846\u6a21\u5f0f(Wireframe Mode) \u8981\u60f3\u7528\u7ebf\u6846\u6a21\u5f0f\u7ed8\u5236\u4f60\u7684\u4e09\u89d2\u5f62\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 glPolygonMode(GL_FRONT_AND_BACK, GL_LINE) \u51fd\u6570\u914d\u7f6eOpenGL\u5982\u4f55\u7ed8\u5236\u56fe\u5143\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u8868\u793a\u6211\u4eec\u6253\u7b97\u5c06\u5176\u5e94\u7528\u5230\u6240\u6709\u7684\u4e09\u89d2\u5f62\u7684\u6b63\u9762\u548c\u80cc\u9762\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u544a\u8bc9\u6211\u4eec\u7528\u7ebf\u6765\u7ed8\u5236\u3002\u4e4b\u540e\u7684\u7ed8\u5236\u8c03\u7528\u4f1a\u4e00\u76f4\u4ee5\u7ebf\u6846\u6a21\u5f0f\u7ed8\u5236\u4e09\u89d2\u5f62\uff0c\u76f4\u5230\u6211\u4eec\u7528 glPolygonMode(GL_FRONT_AND_BACK, GL_FILL) \u5c06\u5176\u8bbe\u7f6e\u56de\u9ed8\u8ba4\u6a21\u5f0f\u3002 \u5982\u679c\u4f60\u9047\u5230\u4efb\u4f55\u9519\u8bef\uff0c\u56de\u5934\u68c0\u67e5\u4ee3\u7801\uff0c\u770b\u770b\u662f\u5426\u9057\u6f0f\u4e86\u4ec0\u4e48\u3002\u540c\u65f6\uff0c\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5168\u90e8\u6e90\u7801\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5728\u8bc4\u8bba\u533a\u81ea\u7531\u63d0\u95ee\u3002 \u5982\u679c\u4f60\u50cf\u6211\u8fd9\u6837\u6210\u529f\u7ed8\u5236\u51fa\u4e86\u8fd9\u4e2a\u4e09\u89d2\u5f62\u6216\u77e9\u5f62\uff0c\u90a3\u4e48\u606d\u559c\u4f60\uff0c\u4f60\u6210\u529f\u5730\u901a\u8fc7\u4e86\u73b0\u4ee3OpenGL\u6700\u96be\u90e8\u5206\u4e4b\u4e00\uff1a\u7ed8\u5236\u4f60\u81ea\u5df1\u7684\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u3002\u8fd9\u90e8\u5206\u5f88\u96be\uff0c\u56e0\u4e3a\u5728\u53ef\u4ee5\u7ed8\u5236\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u4e4b\u524d\u4f60\u9700\u8981\u4e86\u89e3\u5f88\u591a\u77e5\u8bc6\u3002\u5e78\u8fd0\u7684\u662f\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u8d8a\u8fc7\u4e86\u8fd9\u4e2a\u969c\u788d\uff0c\u63a5\u4e0b\u6765\u7684\u6559\u7a0b\u4f1a\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\u4e00\u4e9b\u3002","title":"\u5143\u7d20\u7f13\u51b2\u5bf9\u8c61"},{"location":"01%20Getting%20started/04%20Hello%20Triangle/#_11","text":"antongerdelan.net/hellotriangle \uff1aAnton Gerdelan\u7684\u6e32\u67d3\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u6559\u7a0b\u3002 open.gl/drawing \uff1aAlexander Overvoorde\u7684\u6e32\u67d3\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u6559\u7a0b\u3002 antongerdelan.net/vertexbuffers \uff1a\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u7684\u4e00\u4e9b\u6df1\u5165\u63a2\u8ba8\u3002 \u8c03\u8bd5 \uff1a\u8fd9\u4e2a\u6559\u7a0b\u4e2d\u6d89\u53ca\u5230\u4e86\u5f88\u591a\u6b65\u9aa4\uff0c\u5982\u679c\u4f60\u5728\u54ea\u5361\u4f4f\u4e86\uff0c\u9605\u8bfb\u4e00\u70b9\u8c03\u8bd5\u7684\u6559\u7a0b\u662f\u975e\u5e38\u503c\u5f97\u7684\uff08\u53ea\u9700\u8981\u9605\u8bfb\u5230\u8c03\u8bd5\u8f93\u51fa\u90e8\u5206\uff09\u3002","title":"\u9644\u52a0\u8d44\u6e90"},{"location":"01%20Getting%20started/04%20Hello%20Triangle/#_12","text":"\u4e3a\u4e86\u66f4\u597d\u7684\u638c\u63e1\u4e0a\u8ff0\u6982\u5ff5\uff0c\u6211\u51c6\u5907\u4e86\u4e00\u4e9b\u7ec3\u4e60\u3002\u5efa\u8bae\u5728\u7ee7\u7eed\u4e0b\u4e00\u8282\u7684\u5b66\u4e60\u4e4b\u524d\u5148\u505a\u5b8c\u8fd9\u4e9b\u7ec3\u4e60\uff0c\u786e\u4fdd\u4f60\u5bf9\u8fd9\u4e9b\u77e5\u8bc6\u6709\u6bd4\u8f83\u597d\u7684\u7406\u89e3\u3002 \u6dfb\u52a0\u66f4\u591a\u9876\u70b9\u5230\u6570\u636e\u4e2d\uff0c\u4f7f\u7528 glDrawArrays \uff0c\u5c1d\u8bd5\u7ed8\u5236\u4e24\u4e2a\u5f7c\u6b64\u76f8\u8fde\u7684\u4e09\u89d2\u5f62\uff1a \u53c2\u8003\u89e3\u7b54 \u521b\u5efa\u76f8\u540c\u7684\u4e24\u4e2a\u4e09\u89d2\u5f62\uff0c\u4f46\u5bf9\u5b83\u4eec\u7684\u6570\u636e\u4f7f\u7528\u4e0d\u540c\u7684VAO\u548cVBO\uff1a \u53c2\u8003\u89e3\u7b54 \u521b\u5efa\u4e24\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\uff0c\u7b2c\u4e8c\u4e2a\u7a0b\u5e8f\u4f7f\u7528\u4e00\u4e2a\u4e0d\u540c\u7684\u7247\u6bb5\u7740\u8272\u5668\uff0c\u8f93\u51fa\u9ec4\u8272\uff1b\u518d\u6b21\u7ed8\u5236\u8fd9\u4e24\u4e2a\u4e09\u89d2\u5f62\uff0c\u8ba9\u5176\u4e2d\u4e00\u4e2a\u8f93\u51fa\u4e3a\u9ec4\u8272\uff1a \u53c2\u8003\u89e3\u7b54","title":"\u7ec3\u4e60"},{"location":"01%20Getting%20started/05%20Shaders/","text":"\u7740\u8272\u5668 \u539f\u6587 Shaders \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django , Krasjet, Geequlim \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u5728 Hello Triangle \u6559\u7a0b\u4e2d\u63d0\u5230\uff0c\u7740\u8272\u5668(Shader)\u662f\u8fd0\u884c\u5728GPU\u4e0a\u7684\u5c0f\u7a0b\u5e8f\u3002\u8fd9\u4e9b\u5c0f\u7a0b\u5e8f\u4e3a\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u7684\u67d0\u4e2a\u7279\u5b9a\u90e8\u5206\u800c\u8fd0\u884c\u3002\u4ece\u57fa\u672c\u610f\u4e49\u4e0a\u6765\u8bf4\uff0c\u7740\u8272\u5668\u53ea\u662f\u4e00\u79cd\u628a\u8f93\u5165\u8f6c\u5316\u4e3a\u8f93\u51fa\u7684\u7a0b\u5e8f\u3002\u7740\u8272\u5668\u4e5f\u662f\u4e00\u79cd\u975e\u5e38\u72ec\u7acb\u7684\u7a0b\u5e8f\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e4b\u95f4\u4e0d\u80fd\u76f8\u4e92\u901a\u4fe1\uff1b\u5b83\u4eec\u4e4b\u95f4\u552f\u4e00\u7684\u6c9f\u901a\u53ea\u6709\u901a\u8fc7\u8f93\u5165\u548c\u8f93\u51fa\u3002 \u524d\u9762\u7684\u6559\u7a0b\u91cc\u6211\u4eec\u7b80\u8981\u5730\u89e6\u53ca\u4e86\u4e00\u70b9\u7740\u8272\u5668\u7684\u76ae\u6bdb\uff0c\u5e76\u4e86\u89e3\u4e86\u5982\u4f55\u6070\u5f53\u5730\u4f7f\u7528\u5b83\u4eec\u3002\u73b0\u5728\u6211\u4eec\u4f1a\u7528\u4e00\u79cd\u66f4\u52a0\u5e7f\u6cdb\u7684\u5f62\u5f0f\u8be6\u7ec6\u89e3\u91ca\u7740\u8272\u5668\uff0c\u7279\u522b\u662fOpenGL\u7740\u8272\u5668\u8bed\u8a00(GLSL)\u3002 GLSL \u7740\u8272\u5668\u662f\u4f7f\u7528\u4e00\u79cd\u53ebGLSL\u7684\u7c7bC\u8bed\u8a00\u5199\u6210\u7684\u3002GLSL\u662f\u4e3a\u56fe\u5f62\u8ba1\u7b97\u91cf\u8eab\u5b9a\u5236\u7684\uff0c\u5b83\u5305\u542b\u4e00\u4e9b\u9488\u5bf9\u5411\u91cf\u548c\u77e9\u9635\u64cd\u4f5c\u7684\u6709\u7528\u7279\u6027\u3002 \u7740\u8272\u5668\u7684\u5f00\u5934\u603b\u662f\u8981\u58f0\u660e\u7248\u672c\uff0c\u63a5\u7740\u662f\u8f93\u5165\u548c\u8f93\u51fa\u53d8\u91cf\u3001uniform\u548c main \u51fd\u6570\u3002\u6bcf\u4e2a\u7740\u8272\u5668\u7684\u5165\u53e3\u70b9\u90fd\u662f main \u51fd\u6570\uff0c\u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\u6211\u4eec\u5904\u7406\u6240\u6709\u7684\u8f93\u5165\u53d8\u91cf\uff0c\u5e76\u5c06\u7ed3\u679c\u8f93\u51fa\u5230\u8f93\u51fa\u53d8\u91cf\u4e2d\u3002\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u4ec0\u4e48\u662funiform\u4e5f\u4e0d\u7528\u62c5\u5fc3\uff0c\u6211\u4eec\u540e\u9762\u4f1a\u8fdb\u884c\u8bb2\u89e3\u3002 \u4e00\u4e2a\u5178\u578b\u7684\u7740\u8272\u5668\u6709\u4e0b\u9762\u7684\u7ed3\u6784\uff1a #version version_number in type in_variable_name; in type in_variable_name; out type out_variable_name; uniform type uniform_name; void main() { // \u5904\u7406\u8f93\u5165\u5e76\u8fdb\u884c\u4e00\u4e9b\u56fe\u5f62\u64cd\u4f5c ... // \u8f93\u51fa\u5904\u7406\u8fc7\u7684\u7ed3\u679c\u5230\u8f93\u51fa\u53d8\u91cf out_variable_name = weird_stuff_we_processed; } \u5f53\u6211\u4eec\u7279\u522b\u8c08\u8bba\u5230\u9876\u70b9\u7740\u8272\u5668\u7684\u65f6\u5019\uff0c\u6bcf\u4e2a\u8f93\u5165\u53d8\u91cf\u4e5f\u53eb \u9876\u70b9\u5c5e\u6027 (Vertex Attribute)\u3002\u6211\u4eec\u80fd\u58f0\u660e\u7684\u9876\u70b9\u5c5e\u6027\u662f\u6709\u4e0a\u9650\u7684\uff0c\u5b83\u4e00\u822c\u7531\u786c\u4ef6\u6765\u51b3\u5b9a\u3002OpenGL\u786e\u4fdd\u81f3\u5c11\u670916\u4e2a\u5305\u542b4\u5206\u91cf\u7684\u9876\u70b9\u5c5e\u6027\u53ef\u7528\uff0c\u4f46\u662f\u6709\u4e9b\u786c\u4ef6\u6216\u8bb8\u5141\u8bb8\u66f4\u591a\u7684\u9876\u70b9\u5c5e\u6027\uff0c\u4f60\u53ef\u4ee5\u67e5\u8be2 GL_MAX_VERTEX_ATTRIBS \u6765\u83b7\u53d6\u5177\u4f53\u7684\u4e0a\u9650\uff1a int nrAttributes; glGetIntegerv(GL_MAX_VERTEX_ATTRIBS, &nrAttributes); std::cout << \"Maximum nr of vertex attributes supported: \" << nrAttributes << std::endl; \u901a\u5e38\u60c5\u51b5\u4e0b\u5b83\u81f3\u5c11\u4f1a\u8fd4\u56de16\u4e2a\uff0c\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u662f\u591f\u7528\u4e86\u3002 \u6570\u636e\u7c7b\u578b \u548c\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u4e00\u6837\uff0cGLSL\u6709\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u6765\u6307\u5b9a\u53d8\u91cf\u7684\u79cd\u7c7b\u3002GLSL\u4e2d\u5305\u542bC\u7b49\u5176\u5b83\u8bed\u8a00\u5927\u90e8\u5206\u7684\u9ed8\u8ba4\u57fa\u7840\u6570\u636e\u7c7b\u578b\uff1a int \u3001 float \u3001 double \u3001 uint \u548c bool \u3002GLSL\u4e5f\u6709\u4e24\u79cd\u5bb9\u5668\u7c7b\u578b\uff0c\u5b83\u4eec\u4f1a\u5728\u8fd9\u4e2a\u6559\u7a0b\u4e2d\u4f7f\u7528\u5f88\u591a\uff0c\u5206\u522b\u662f\u5411\u91cf(Vector)\u548c\u77e9\u9635(Matrix)\uff0c\u5176\u4e2d\u77e9\u9635\u6211\u4eec\u4f1a\u5728\u4e4b\u540e\u7684\u6559\u7a0b\u91cc\u518d\u8ba8\u8bba\u3002 \u5411\u91cf GLSL\u4e2d\u7684\u5411\u91cf\u662f\u4e00\u4e2a\u53ef\u4ee5\u5305\u542b\u67092\u30013\u6216\u80054\u4e2a\u5206\u91cf\u7684\u5bb9\u5668\uff0c\u5206\u91cf\u7684\u7c7b\u578b\u53ef\u4ee5\u662f\u524d\u9762\u9ed8\u8ba4\u57fa\u7840\u7c7b\u578b\u7684\u4efb\u610f\u4e00\u4e2a\u3002\u5b83\u4eec\u53ef\u4ee5\u662f\u4e0b\u9762\u7684\u5f62\u5f0f\uff08 n \u4ee3\u8868\u5206\u91cf\u7684\u6570\u91cf\uff09\uff1a \u7c7b\u578b \u542b\u4e49 vecn \u5305\u542b n \u4e2afloat\u5206\u91cf\u7684\u9ed8\u8ba4\u5411\u91cf bvecn \u5305\u542b n \u4e2abool\u5206\u91cf\u7684\u5411\u91cf ivecn \u5305\u542b n \u4e2aint\u5206\u91cf\u7684\u5411\u91cf uvecn \u5305\u542b n \u4e2aunsigned int\u5206\u91cf\u7684\u5411\u91cf dvecn \u5305\u542b n \u4e2adouble\u5206\u91cf\u7684\u5411\u91cf \u5927\u591a\u6570\u65f6\u5019\u6211\u4eec\u4f7f\u7528 vecn \uff0c\u56e0\u4e3afloat\u8db3\u591f\u6ee1\u8db3\u5927\u591a\u6570\u8981\u6c42\u4e86\u3002 \u4e00\u4e2a\u5411\u91cf\u7684\u5206\u91cf\u53ef\u4ee5\u901a\u8fc7 vec.x \u8fd9\u79cd\u65b9\u5f0f\u83b7\u53d6\uff0c\u8fd9\u91cc x \u662f\u6307\u8fd9\u4e2a\u5411\u91cf\u7684\u7b2c\u4e00\u4e2a\u5206\u91cf\u3002\u4f60\u53ef\u4ee5\u5206\u522b\u4f7f\u7528 .x \u3001 .y \u3001 .z \u548c .w \u6765\u83b7\u53d6\u5b83\u4eec\u7684\u7b2c1\u30012\u30013\u30014\u4e2a\u5206\u91cf\u3002GLSL\u4e5f\u5141\u8bb8\u4f60\u5bf9\u989c\u8272\u4f7f\u7528 rgba \uff0c\u6216\u662f\u5bf9\u7eb9\u7406\u5750\u6807\u4f7f\u7528 stpq \u8bbf\u95ee\u76f8\u540c\u7684\u5206\u91cf\u3002 \u5411\u91cf\u8fd9\u4e00\u6570\u636e\u7c7b\u578b\u4e5f\u5141\u8bb8\u4e00\u4e9b\u6709\u8da3\u800c\u7075\u6d3b\u7684\u5206\u91cf\u9009\u62e9\u65b9\u5f0f\uff0c\u53eb\u505a \u91cd\u7ec4 (Swizzling)\u3002\u91cd\u7ec4\u5141\u8bb8\u8fd9\u6837\u7684\u8bed\u6cd5\uff1a vec2 someVec; vec4 differentVec = someVec.xyxx; vec3 anotherVec = differentVec.zyw; vec4 otherVec = someVec.xxxx + anotherVec.yxzy; \u4f60\u53ef\u4ee5\u4f7f\u7528\u4e0a\u97624\u4e2a\u5b57\u6bcd\u4efb\u610f\u7ec4\u5408\u6765\u521b\u5efa\u4e00\u4e2a\u548c\u539f\u6765\u5411\u91cf\u4e00\u6837\u957f\u7684\uff08\u540c\u7c7b\u578b\uff09\u65b0\u5411\u91cf\uff0c\u53ea\u8981\u539f\u6765\u5411\u91cf\u6709\u90a3\u4e9b\u5206\u91cf\u5373\u53ef\uff1b\u7136\u800c\uff0c\u4f60\u4e0d\u5141\u8bb8\u5728\u4e00\u4e2a vec2 \u5411\u91cf\u4e2d\u53bb\u83b7\u53d6 .z \u5143\u7d20\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u628a\u4e00\u4e2a\u5411\u91cf\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\u4f20\u7ed9\u4e0d\u540c\u7684\u5411\u91cf\u6784\u9020\u51fd\u6570\uff0c\u4ee5\u51cf\u5c11\u9700\u6c42\u53c2\u6570\u7684\u6570\u91cf\uff1a vec2 vect = vec2(0.5, 0.7); vec4 result = vec4(vect, 0.0, 0.0); vec4 otherResult = vec4(result.xyz, 1.0); \u5411\u91cf\u662f\u4e00\u79cd\u7075\u6d3b\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u7528\u5728\u5404\u79cd\u8f93\u5165\u548c\u8f93\u51fa\u4e0a\u3002\u5b66\u5b8c\u6559\u7a0b\u4f60\u4f1a\u770b\u5230\u5f88\u591a\u65b0\u9896\u7684\u7ba1\u7406\u5411\u91cf\u7684\u4f8b\u5b50\u3002 \u8f93\u5165\u4e0e\u8f93\u51fa \u867d\u7136\u7740\u8272\u5668\u662f\u5404\u81ea\u72ec\u7acb\u7684\u5c0f\u7a0b\u5e8f\uff0c\u4f46\u662f\u5b83\u4eec\u90fd\u662f\u4e00\u4e2a\u6574\u4f53\u7684\u4e00\u90e8\u5206\uff0c\u51fa\u4e8e\u8fd9\u6837\u7684\u539f\u56e0\uff0c\u6211\u4eec\u5e0c\u671b\u6bcf\u4e2a\u7740\u8272\u5668\u90fd\u6709\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u8fd9\u6837\u624d\u80fd\u8fdb\u884c\u6570\u636e\u4ea4\u6d41\u548c\u4f20\u9012\u3002GLSL\u5b9a\u4e49\u4e86 in \u548c out \u5173\u952e\u5b57\u4e13\u95e8\u6765\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u7684\u3002\u6bcf\u4e2a\u7740\u8272\u5668\u4f7f\u7528\u8fd9\u4e24\u4e2a\u5173\u952e\u5b57\u8bbe\u5b9a\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u53ea\u8981\u4e00\u4e2a\u8f93\u51fa\u53d8\u91cf\u4e0e\u4e0b\u4e00\u4e2a\u7740\u8272\u5668\u9636\u6bb5\u7684\u8f93\u5165\u5339\u914d\uff0c\u5b83\u5c31\u4f1a\u4f20\u9012\u4e0b\u53bb\u3002\u4f46\u5728\u9876\u70b9\u548c\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u4f1a\u6709\u70b9\u4e0d\u540c\u3002 \u9876\u70b9\u7740\u8272\u5668\u5e94\u8be5\u63a5\u6536\u7684\u662f\u4e00\u79cd\u7279\u6b8a\u5f62\u5f0f\u7684\u8f93\u5165\uff0c\u5426\u5219\u5c31\u4f1a\u6548\u7387\u4f4e\u4e0b\u3002\u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u5165\u7279\u6b8a\u5728\uff0c\u5b83\u4ece\u9876\u70b9\u6570\u636e\u4e2d\u76f4\u63a5\u63a5\u6536\u8f93\u5165\u3002\u4e3a\u4e86\u5b9a\u4e49\u9876\u70b9\u6570\u636e\u8be5\u5982\u4f55\u7ba1\u7406\uff0c\u6211\u4eec\u4f7f\u7528 location \u8fd9\u4e00\u5143\u6570\u636e\u6307\u5b9a\u8f93\u5165\u53d8\u91cf\uff0c\u8fd9\u6837\u6211\u4eec\u624d\u53ef\u4ee5\u5728CPU\u4e0a\u914d\u7f6e\u9876\u70b9\u5c5e\u6027\u3002\u6211\u4eec\u5df2\u7ecf\u5728\u524d\u9762\u7684\u6559\u7a0b\u770b\u8fc7\u8fd9\u4e2a\u4e86\uff0c layout (location = 0) \u3002\u9876\u70b9\u7740\u8272\u5668\u9700\u8981\u4e3a\u5b83\u7684\u8f93\u5165\u63d0\u4f9b\u4e00\u4e2a\u989d\u5916\u7684 layout \u6807\u8bc6\uff0c\u8fd9\u6837\u6211\u4eec\u624d\u80fd\u628a\u5b83\u94fe\u63a5\u5230\u9876\u70b9\u6570\u636e\u3002 Important \u4f60\u4e5f\u53ef\u4ee5\u5ffd\u7565 layout (location = 0) \u6807\u8bc6\u7b26\uff0c\u901a\u8fc7\u5728OpenGL\u4ee3\u7801\u4e2d\u4f7f\u7528 glGetAttribLocation \u67e5\u8be2\u5c5e\u6027\u4f4d\u7f6e\u503c(Location)\uff0c\u4f46\u662f\u6211\u66f4\u559c\u6b22\u5728\u7740\u8272\u5668\u4e2d\u8bbe\u7f6e\u5b83\u4eec\uff0c\u8fd9\u6837\u4f1a\u66f4\u5bb9\u6613\u7406\u89e3\u800c\u4e14\u8282\u7701\u4f60\uff08\u548cOpenGL\uff09\u7684\u5de5\u4f5c\u91cf\u3002 \u53e6\u4e00\u4e2a\u4f8b\u5916\u662f\u7247\u6bb5\u7740\u8272\u5668\uff0c\u5b83\u9700\u8981\u4e00\u4e2a vec4 \u989c\u8272\u8f93\u51fa\u53d8\u91cf\uff0c\u56e0\u4e3a\u7247\u6bb5\u7740\u8272\u5668\u9700\u8981\u751f\u6210\u4e00\u4e2a\u6700\u7ec8\u8f93\u51fa\u7684\u989c\u8272\u3002\u5982\u679c\u4f60\u5728\u7247\u6bb5\u7740\u8272\u5668\u6ca1\u6709\u5b9a\u4e49\u8f93\u51fa\u989c\u8272\uff0cOpenGL\u4f1a\u628a\u4f60\u7684\u7269\u4f53\u6e32\u67d3\u4e3a\u9ed1\u8272\uff08\u6216\u767d\u8272\uff09\u3002 \u6240\u4ee5\uff0c\u5982\u679c\u6211\u4eec\u6253\u7b97\u4ece\u4e00\u4e2a\u7740\u8272\u5668\u5411\u53e6\u4e00\u4e2a\u7740\u8272\u5668\u53d1\u9001\u6570\u636e\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u53d1\u9001\u65b9\u7740\u8272\u5668\u4e2d\u58f0\u660e\u4e00\u4e2a\u8f93\u51fa\uff0c\u5728\u63a5\u6536\u65b9\u7740\u8272\u5668\u4e2d\u58f0\u660e\u4e00\u4e2a\u7c7b\u4f3c\u7684\u8f93\u5165\u3002\u5f53\u7c7b\u578b\u548c\u540d\u5b57\u90fd\u4e00\u6837\u7684\u65f6\u5019\uff0cOpenGL\u5c31\u4f1a\u628a\u4e24\u4e2a\u53d8\u91cf\u94fe\u63a5\u5230\u4e00\u8d77\uff0c\u5b83\u4eec\u4e4b\u95f4\u5c31\u80fd\u53d1\u9001\u6570\u636e\u4e86\uff08\u8fd9\u662f\u5728\u94fe\u63a5\u7a0b\u5e8f\u5bf9\u8c61\u65f6\u5b8c\u6210\u7684\uff09\u3002\u4e3a\u4e86\u5c55\u793a\u8fd9\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u6211\u4eec\u4f1a\u7a0d\u5fae\u6539\u52a8\u4e00\u4e0b\u4e4b\u524d\u6559\u7a0b\u91cc\u7684\u90a3\u4e2a\u7740\u8272\u5668\uff0c\u8ba9\u9876\u70b9\u7740\u8272\u5668\u4e3a\u7247\u6bb5\u7740\u8272\u5668\u51b3\u5b9a\u989c\u8272\u3002 \u9876\u70b9\u7740\u8272\u5668 #version 330 core layout (location = 0) in vec3 aPos; // \u4f4d\u7f6e\u53d8\u91cf\u7684\u5c5e\u6027\u4f4d\u7f6e\u503c\u4e3a0 out vec4 vertexColor; // \u4e3a\u7247\u6bb5\u7740\u8272\u5668\u6307\u5b9a\u4e00\u4e2a\u989c\u8272\u8f93\u51fa void main() { gl_Position = vec4(aPos, 1.0); // \u6ce8\u610f\u6211\u4eec\u5982\u4f55\u628a\u4e00\u4e2avec3\u4f5c\u4e3avec4\u7684\u6784\u9020\u5668\u7684\u53c2\u6570 vertexColor = vec4(0.5, 0.0, 0.0, 1.0); // \u628a\u8f93\u51fa\u53d8\u91cf\u8bbe\u7f6e\u4e3a\u6697\u7ea2\u8272 } \u7247\u6bb5\u7740\u8272\u5668 #version 330 core out vec4 FragColor; in vec4 vertexColor; // \u4ece\u9876\u70b9\u7740\u8272\u5668\u4f20\u6765\u7684\u8f93\u5165\u53d8\u91cf\uff08\u540d\u79f0\u76f8\u540c\u3001\u7c7b\u578b\u76f8\u540c\uff09 void main() { FragColor = vertexColor; } \u4f60\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u58f0\u660e\u4e86\u4e00\u4e2a vertexColor \u53d8\u91cf\u4f5c\u4e3a vec4 \u8f93\u51fa\uff0c\u5e76\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u58f0\u660e\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u7684 vertexColor \u3002\u7531\u4e8e\u5b83\u4eec\u540d\u5b57\u76f8\u540c\u4e14\u7c7b\u578b\u76f8\u540c\uff0c\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u7684 vertexColor \u5c31\u548c\u9876\u70b9\u7740\u8272\u5668\u4e2d\u7684 vertexColor \u94fe\u63a5\u4e86\u3002\u7531\u4e8e\u6211\u4eec\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5c06\u989c\u8272\u8bbe\u7f6e\u4e3a\u6df1\u7ea2\u8272\uff0c\u6700\u7ec8\u7684\u7247\u6bb5\u4e5f\u662f\u6df1\u7ea2\u8272\u7684\u3002\u4e0b\u9762\u7684\u56fe\u7247\u5c55\u793a\u4e86\u8f93\u51fa\u7ed3\u679c\uff1a \u5b8c\u6210\u4e86\uff01\u6211\u4eec\u6210\u529f\u5730\u4ece\u9876\u70b9\u7740\u8272\u5668\u5411\u7247\u6bb5\u7740\u8272\u5668\u53d1\u9001\u6570\u636e\u3002\u8ba9\u6211\u4eec\u66f4\u4e0a\u4e00\u5c42\u697c\uff0c\u770b\u770b\u80fd\u5426\u4ece\u5e94\u7528\u7a0b\u5e8f\u4e2d\u76f4\u63a5\u7ed9\u7247\u6bb5\u7740\u8272\u5668\u53d1\u9001\u4e00\u4e2a\u989c\u8272\uff01 Uniform Uniform \u662f\u53e6\u4e00\u79cd\u4ece\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u5728 CPU \u4e0a\u4f20\u9012\u6570\u636e\u5230 GPU \u4e0a\u7684\u7740\u8272\u5668\u7684\u65b9\u5f0f\uff0c\u4f46uniform\u548c\u9876\u70b9\u5c5e\u6027\u6709\u4e9b\u4e0d\u540c\u3002\u9996\u5148\uff0cuniform\u662f \u5168\u5c40\u7684 (Global)\u3002\u5168\u5c40\u610f\u5473\u7740uniform\u53d8\u91cf\u5fc5\u987b\u5728\u6bcf\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\u5bf9\u8c61\u4e2d\u90fd\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u800c\u4e14\u5b83\u53ef\u4ee5\u88ab\u7740\u8272\u5668\u7a0b\u5e8f\u7684\u4efb\u610f\u7740\u8272\u5668\u5728\u4efb\u610f\u9636\u6bb5\u8bbf\u95ee\u3002\u7b2c\u4e8c\uff0c\u65e0\u8bba\u4f60\u628auniform\u503c\u8bbe\u7f6e\u6210\u4ec0\u4e48\uff0cuniform\u4f1a\u4e00\u76f4\u4fdd\u5b58\u5b83\u4eec\u7684\u6570\u636e\uff0c\u76f4\u5230\u5b83\u4eec\u88ab\u91cd\u7f6e\u6216\u66f4\u65b0\u3002 \u8981\u5728 GLSL \u4e2d\u58f0\u660e uniform\uff0c\u6211\u4eec\u53ea\u9700\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528 uniform \u5173\u952e\u5b57\uff0c\u5e76\u5e26\u4e0a\u7c7b\u578b\u548c\u540d\u79f0\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u65b0\u58f0\u660e\u7684 uniform\u3002\u6211\u4eec\u6765\u770b\u770b\u8fd9\u6b21\u662f\u5426\u80fd\u901a\u8fc7uniform\u8bbe\u7f6e\u4e09\u89d2\u5f62\u7684\u989c\u8272\uff1a #version 330 core out vec4 FragColor; uniform vec4 ourColor; // \u5728OpenGL\u7a0b\u5e8f\u4ee3\u7801\u4e2d\u8bbe\u5b9a\u8fd9\u4e2a\u53d8\u91cf void main() { FragColor = ourColor; } \u6211\u4eec\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u58f0\u660e\u4e86\u4e00\u4e2auniform vec4 \u7684 ourColor \uff0c\u5e76\u628a\u7247\u6bb5\u7740\u8272\u5668\u7684\u8f93\u51fa\u989c\u8272\u8bbe\u7f6e\u4e3auniform\u503c\u7684\u5185\u5bb9\u3002\u56e0\u4e3auniform\u662f\u5168\u5c40\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4efb\u4f55\u7740\u8272\u5668\u4e2d\u5b9a\u4e49\u5b83\u4eec\uff0c\u800c\u65e0\u9700\u901a\u8fc7\u9876\u70b9\u7740\u8272\u5668\u4f5c\u4e3a\u4e2d\u4ecb\u3002\u9876\u70b9\u7740\u8272\u5668\u4e2d\u4e0d\u9700\u8981\u8fd9\u4e2auniform\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u7528\u5728\u90a3\u91cc\u5b9a\u4e49\u5b83\u3002 Attention \u5982\u679c\u4f60\u58f0\u660e\u4e86\u4e00\u4e2auniform\u5374\u5728GLSL\u4ee3\u7801\u4e2d\u6ca1\u7528\u8fc7\uff0c\u7f16\u8bd1\u5668\u4f1a\u9759\u9ed8\u79fb\u9664\u8fd9\u4e2a\u53d8\u91cf\uff0c\u5bfc\u81f4\u6700\u540e\u7f16\u8bd1\u51fa\u7684\u7248\u672c\u4e2d\u5e76\u4e0d\u4f1a\u5305\u542b\u5b83\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u51e0\u4e2a\u975e\u5e38\u9ebb\u70e6\u7684\u9519\u8bef\uff0c\u8bb0\u4f4f\u8fd9\u70b9\uff01 \u8fd9\u4e2auniform\u73b0\u5728\u8fd8\u662f\u7a7a\u7684\uff1b\u6211\u4eec\u8fd8\u6ca1\u6709\u7ed9\u5b83\u6dfb\u52a0\u4efb\u4f55\u6570\u636e\uff0c\u6240\u4ee5\u4e0b\u9762\u6211\u4eec\u5c31\u505a\u8fd9\u4ef6\u4e8b\u3002\u6211\u4eec\u9996\u5148\u9700\u8981\u627e\u5230\u7740\u8272\u5668\u4e2duniform\u5c5e\u6027\u7684\u7d22\u5f15/\u4f4d\u7f6e\u503c\u3002\u5f53\u6211\u4eec\u5f97\u5230uniform\u7684\u7d22\u5f15/\u4f4d\u7f6e\u503c\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u66f4\u65b0\u5b83\u7684\u503c\u4e86\u3002\u8fd9\u6b21\u6211\u4eec\u4e0d\u53bb\u7ed9\u50cf\u7d20\u4f20\u9012\u5355\u72ec\u4e00\u4e2a\u989c\u8272\uff0c\u800c\u662f\u8ba9\u5b83\u968f\u7740\u65f6\u95f4\u6539\u53d8\u989c\u8272\uff1a float timeValue = glfwGetTime(); float greenValue = (sin(timeValue) / 2.0f) + 0.5f; int vertexColorLocation = glGetUniformLocation(shaderProgram, \"ourColor\"); glUseProgram(shaderProgram); glUniform4f(vertexColorLocation, 0.0f, greenValue, 0.0f, 1.0f); \u9996\u5148\u6211\u4eec\u901a\u8fc7 glfwGetTime() \u83b7\u53d6\u8fd0\u884c\u7684\u79d2\u6570\u3002\u7136\u540e\u6211\u4eec\u4f7f\u7528 sin \u51fd\u6570\u8ba9\u989c\u8272\u57280.0\u52301.0\u4e4b\u95f4\u6539\u53d8\uff0c\u6700\u540e\u5c06\u7ed3\u679c\u50a8\u5b58\u5230 greenValue \u91cc\u3002 \u63a5\u7740\uff0c\u6211\u4eec\u7528 glGetUniformLocation \u67e5\u8be2uniform ourColor \u7684\u4f4d\u7f6e\u503c\u3002\u6211\u4eec\u4e3a\u67e5\u8be2\u51fd\u6570\u63d0\u4f9b\u7740\u8272\u5668\u7a0b\u5e8f\u548cuniform\u7684\u540d\u5b57\uff08\u8fd9\u662f\u6211\u4eec\u5e0c\u671b\u83b7\u5f97\u7684\u4f4d\u7f6e\u503c\u7684\u6765\u6e90\uff09\u3002\u5982\u679c glGetUniformLocation \u8fd4\u56de -1 \u5c31\u4ee3\u8868\u6ca1\u6709\u627e\u5230\u8fd9\u4e2a\u4f4d\u7f6e\u503c\u3002\u6700\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 glUniform4f \u51fd\u6570\u8bbe\u7f6euniform\u503c\u3002\u6ce8\u610f\uff0c\u67e5\u8be2uniform\u5730\u5740\u4e0d\u8981\u6c42\u4f60\u4e4b\u524d\u4f7f\u7528\u8fc7\u7740\u8272\u5668\u7a0b\u5e8f\uff0c\u4f46\u662f\u66f4\u65b0\u4e00\u4e2auniform\u4e4b\u524d\u4f60 \u5fc5\u987b \u5148\u4f7f\u7528\u7a0b\u5e8f\uff08\u8c03\u7528 glUseProgram )\uff0c\u56e0\u4e3a\u5b83\u662f\u5728\u5f53\u524d\u6fc0\u6d3b\u7684\u7740\u8272\u5668\u7a0b\u5e8f\u4e2d\u8bbe\u7f6euniform\u7684\u3002 Important \u56e0\u4e3aOpenGL\u5728\u5176\u6838\u5fc3\u662f\u4e00\u4e2aC\u5e93\uff0c\u6240\u4ee5\u5b83\u4e0d\u652f\u6301\u7c7b\u578b\u91cd\u8f7d\uff0c\u5728\u51fd\u6570\u53c2\u6570\u4e0d\u540c\u7684\u65f6\u5019\u5c31\u8981\u4e3a\u5176\u5b9a\u4e49\u65b0\u7684\u51fd\u6570\uff1b glUniform \u662f\u4e00\u4e2a\u5178\u578b\u4f8b\u5b50\u3002\u8fd9\u4e2a\u51fd\u6570\u6709\u4e00\u4e2a\u7279\u5b9a\u7684\u540e\u7f00\uff0c\u6807\u8bc6\u8bbe\u5b9a\u7684uniform\u7684\u7c7b\u578b\u3002\u53ef\u80fd\u7684\u540e\u7f00\u6709\uff1a \u540e\u7f00 \u542b\u4e49 f \u51fd\u6570\u9700\u8981\u4e00\u4e2afloat\u4f5c\u4e3a\u5b83\u7684\u503c i \u51fd\u6570\u9700\u8981\u4e00\u4e2aint\u4f5c\u4e3a\u5b83\u7684\u503c ui \u51fd\u6570\u9700\u8981\u4e00\u4e2aunsigned int\u4f5c\u4e3a\u5b83\u7684\u503c 3f \u51fd\u6570\u9700\u89813\u4e2afloat\u4f5c\u4e3a\u5b83\u7684\u503c fv \u51fd\u6570\u9700\u8981\u4e00\u4e2afloat\u5411\u91cf/\u6570\u7ec4\u4f5c\u4e3a\u5b83\u7684\u503c \u6bcf\u5f53\u4f60\u6253\u7b97\u914d\u7f6e\u4e00\u4e2aOpenGL\u7684\u9009\u9879\u65f6\u5c31\u53ef\u4ee5\u7b80\u5355\u5730\u6839\u636e\u8fd9\u4e9b\u89c4\u5219\u9009\u62e9\u9002\u5408\u4f60\u7684\u6570\u636e\u7c7b\u578b\u7684\u91cd\u8f7d\u51fd\u6570\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u91cc\uff0c\u6211\u4eec\u5e0c\u671b\u5206\u522b\u8bbe\u5b9auniform\u76844\u4e2afloat\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u901a\u8fc7 glUniform4f \u4f20\u9012\u6211\u4eec\u7684\u6570\u636e(\u6ce8\u610f\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 fv \u7248\u672c)\u3002 \u73b0\u5728\u4f60\u77e5\u9053\u5982\u4f55\u8bbe\u7f6euniform\u53d8\u91cf\u7684\u503c\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u6765\u6e32\u67d3\u4e86\u3002\u5982\u679c\u6211\u4eec\u6253\u7b97\u8ba9\u989c\u8272\u6162\u6162\u53d8\u5316\uff0c\u6211\u4eec\u5c31\u8981\u5728\u6e38\u620f\u5faa\u73af\u7684\u6bcf\u4e00\u6b21\u8fed\u4ee3\u4e2d\uff08\u6240\u4ee5\u4ed6\u4f1a\u9010\u5e27\u6539\u53d8\uff09\u66f4\u65b0\u8fd9\u4e2auniform\uff0c\u5426\u5219\u4e09\u89d2\u5f62\u5c31\u4e0d\u4f1a\u6539\u53d8\u989c\u8272\u3002\u4e0b\u9762\u6211\u4eec\u5c31\u8ba1\u7b97 greenValue \u7136\u540e\u6bcf\u4e2a\u6e32\u67d3\u8fed\u4ee3\u90fd\u66f4\u65b0\u8fd9\u4e2auniform\uff1a while(!glfwWindowShouldClose(window)) { // \u8f93\u5165 processInput(window); // \u6e32\u67d3 // \u6e05\u9664\u989c\u8272\u7f13\u51b2 glClearColor(0.2f, 0.3f, 0.3f, 1.0f); glClear(GL_COLOR_BUFFER_BIT); // \u8bb0\u5f97\u6fc0\u6d3b\u7740\u8272\u5668 glUseProgram(shaderProgram); // \u66f4\u65b0uniform\u989c\u8272 float timeValue = glfwGetTime(); float greenValue = sin(timeValue) / 2.0f + 0.5f; int vertexColorLocation = glGetUniformLocation(shaderProgram, \"ourColor\"); glUniform4f(vertexColorLocation, 0.0f, greenValue, 0.0f, 1.0f); // \u7ed8\u5236\u4e09\u89d2\u5f62 glBindVertexArray(VAO); glDrawArrays(GL_TRIANGLES, 0, 3); // \u4ea4\u6362\u7f13\u51b2\u5e76\u67e5\u8be2IO\u4e8b\u4ef6 glfwSwapBuffers(window); glfwPollEvents(); } \u8fd9\u91cc\u7684\u4ee3\u7801\u5bf9\u4e4b\u524d\u4ee3\u7801\u662f\u4e00\u6b21\u975e\u5e38\u76f4\u63a5\u7684\u4fee\u6539\u3002\u8fd9\u6b21\uff0c\u6211\u4eec\u5728\u6bcf\u6b21\u8fed\u4ee3\u7ed8\u5236\u4e09\u89d2\u5f62\u524d\u5148\u66f4\u65b0uniform\u503c\u3002\u5982\u679c\u4f60\u6b63\u786e\u66f4\u65b0\u4e86uniform\uff0c\u4f60\u4f1a\u770b\u5230\u4f60\u7684\u4e09\u89d2\u5f62\u9010\u6e10\u7531\u7eff\u53d8\u9ed1\u518d\u53d8\u56de\u7eff\u8272\u3002 \u5982\u679c\u4f60\u5728\u54ea\u513f\u5361\u4f4f\u4e86\uff0c\u53ef\u4ee5\u5230 \u8fd9\u91cc \u67e5\u770b\u6e90\u7801\u3002 \u53ef\u4ee5\u770b\u5230\uff0cuniform\u5bf9\u4e8e\u8bbe\u7f6e\u4e00\u4e2a\u5728\u6e32\u67d3\u8fed\u4ee3\u4e2d\u4f1a\u6539\u53d8\u7684\u5c5e\u6027\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u5de5\u5177\uff0c\u5b83\u4e5f\u662f\u4e00\u4e2a\u5728\u7a0b\u5e8f\u548c\u7740\u8272\u5668\u95f4\u6570\u636e\u4ea4\u4e92\u7684\u5f88\u597d\u5de5\u5177\uff0c\u4f46\u5047\u5982\u6211\u4eec\u6253\u7b97\u4e3a\u6bcf\u4e2a\u9876\u70b9\u8bbe\u7f6e\u4e00\u4e2a\u989c\u8272\u7684\u65f6\u5019\u8be5\u600e\u4e48\u529e\uff1f\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c31\u4e0d\u5f97\u4e0d\u58f0\u660e\u548c\u9876\u70b9\u6570\u76ee\u4e00\u6837\u591a\u7684uniform\u4e86\u3002\u5728\u8fd9\u4e00\u95ee\u9898\u4e0a\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5728\u9876\u70b9\u5c5e\u6027\u4e2d\u5305\u542b\u66f4\u591a\u7684\u6570\u636e\uff0c\u8fd9\u662f\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u505a\u7684\u4e8b\u60c5\u3002 \u66f4\u591a\u5c5e\u6027\uff01 \u5728\u524d\u9762\u7684\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u4e86\u89e3\u4e86\u5982\u4f55\u586b\u5145VBO\u3001\u914d\u7f6e\u9876\u70b9\u5c5e\u6027\u6307\u9488\u4ee5\u53ca\u5982\u4f55\u628a\u5b83\u4eec\u90fd\u50a8\u5b58\u5230\u4e00\u4e2aVAO\u91cc\u3002\u8fd9\u6b21\uff0c\u6211\u4eec\u540c\u6837\u6253\u7b97\u628a\u989c\u8272\u6570\u636e\u52a0\u8fdb\u9876\u70b9\u6570\u636e\u4e2d\u3002\u6211\u4eec\u5c06\u628a\u989c\u8272\u6570\u636e\u6dfb\u52a0\u4e3a3\u4e2afloat\u503c\u81f3 vertices \u6570\u7ec4\u3002\u6211\u4eec\u5c06\u628a\u4e09\u89d2\u5f62\u7684\u4e09\u4e2a\u89d2\u5206\u522b\u6307\u5b9a\u4e3a\u7ea2\u8272\u3001\u7eff\u8272\u548c\u84dd\u8272\uff1a float vertices[] = { // \u4f4d\u7f6e // \u989c\u8272 0.5f, -0.5f, 0.0f, 1.0f, 0.0f, 0.0f, // \u53f3\u4e0b -0.5f, -0.5f, 0.0f, 0.0f, 1.0f, 0.0f, // \u5de6\u4e0b 0.0f, 0.5f, 0.0f, 0.0f, 0.0f, 1.0f // \u9876\u90e8 }; \u7531\u4e8e\u73b0\u5728\u6709\u66f4\u591a\u7684\u6570\u636e\u8981\u53d1\u9001\u5230\u9876\u70b9\u7740\u8272\u5668\uff0c\u6211\u4eec\u6709\u5fc5\u8981\u53bb\u8c03\u6574\u4e00\u4e0b\u9876\u70b9\u7740\u8272\u5668\uff0c\u4f7f\u5b83\u80fd\u591f\u63a5\u6536\u989c\u8272\u503c\u4f5c\u4e3a\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\u8f93\u5165\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u6211\u4eec\u7528 layout \u6807\u8bc6\u7b26\u6765\u628a aColor \u5c5e\u6027\u7684\u4f4d\u7f6e\u503c\u8bbe\u7f6e\u4e3a1\uff1a #version 330 core layout (location = 0) in vec3 aPos; // \u4f4d\u7f6e\u53d8\u91cf\u7684\u5c5e\u6027\u4f4d\u7f6e\u503c\u4e3a 0 layout (location = 1) in vec3 aColor; // \u989c\u8272\u53d8\u91cf\u7684\u5c5e\u6027\u4f4d\u7f6e\u503c\u4e3a 1 out vec3 ourColor; // \u5411\u7247\u6bb5\u7740\u8272\u5668\u8f93\u51fa\u4e00\u4e2a\u989c\u8272 void main() { gl_Position = vec4(aPos, 1.0); ourColor = aColor; // \u5c06ourColor\u8bbe\u7f6e\u4e3a\u6211\u4eec\u4ece\u9876\u70b9\u6570\u636e\u90a3\u91cc\u5f97\u5230\u7684\u8f93\u5165\u989c\u8272 } \u7531\u4e8e\u6211\u4eec\u4e0d\u518d\u4f7f\u7528uniform\u6765\u4f20\u9012\u7247\u6bb5\u7684\u989c\u8272\u4e86\uff0c\u73b0\u5728\u4f7f\u7528 ourColor \u8f93\u51fa\u53d8\u91cf\uff0c\u6211\u4eec\u5fc5\u987b\u518d\u4fee\u6539\u4e00\u4e0b\u7247\u6bb5\u7740\u8272\u5668\uff1a #version 330 core out vec4 FragColor; in vec3 ourColor; void main() { FragColor = vec4(ourColor, 1.0); } \u56e0\u4e3a\u6211\u4eec\u6dfb\u52a0\u4e86\u53e6\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\uff0c\u5e76\u4e14\u66f4\u65b0\u4e86VBO\u7684\u5185\u5b58\uff0c\u6211\u4eec\u5c31\u5fc5\u987b\u91cd\u65b0\u914d\u7f6e\u9876\u70b9\u5c5e\u6027\u6307\u9488\u3002\u66f4\u65b0\u540e\u7684VBO\u5185\u5b58\u4e2d\u7684\u6570\u636e\u73b0\u5728\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a \u77e5\u9053\u4e86\u73b0\u5728\u4f7f\u7528\u7684\u5e03\u5c40\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 glVertexAttribPointer \u51fd\u6570\u66f4\u65b0\u9876\u70b9\u683c\u5f0f\uff0c // \u4f4d\u7f6e\u5c5e\u6027 glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 6 * sizeof(float), (void*)0); glEnableVertexAttribArray(0); // \u989c\u8272\u5c5e\u6027 glVertexAttribPointer(1, 3, GL_FLOAT, GL_FALSE, 6 * sizeof(float), (void*)(3* sizeof(float))); glEnableVertexAttribArray(1); glVertexAttribPointer \u51fd\u6570\u7684\u524d\u51e0\u4e2a\u53c2\u6570\u6bd4\u8f83\u660e\u4e86\u3002\u8fd9\u6b21\u6211\u4eec\u914d\u7f6e\u5c5e\u6027\u4f4d\u7f6e\u503c\u4e3a1\u7684\u9876\u70b9\u5c5e\u6027\u3002\u989c\u8272\u503c\u67093\u4e2afloat\u90a3\u4e48\u5927\uff0c\u6211\u4eec\u4e0d\u53bb\u6807\u51c6\u5316\u8fd9\u4e9b\u503c\u3002 \u7531\u4e8e\u6211\u4eec\u73b0\u5728\u6709\u4e86\u4e24\u4e2a\u9876\u70b9\u5c5e\u6027\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u91cd\u65b0\u8ba1\u7b97 \u6b65\u957f \u503c\u3002\u4e3a\u83b7\u5f97\u6570\u636e\u961f\u5217\u4e2d\u4e0b\u4e00\u4e2a\u5c5e\u6027\u503c\uff08\u6bd4\u5982\u4f4d\u7f6e\u5411\u91cf\u7684\u4e0b\u4e2a x \u5206\u91cf\uff09\u6211\u4eec\u5fc5\u987b\u5411\u53f3\u79fb\u52a86\u4e2afloat\uff0c\u5176\u4e2d3\u4e2a\u662f\u4f4d\u7f6e\u503c\uff0c\u53e6\u59163\u4e2a\u662f\u989c\u8272\u503c\u3002\u8fd9\u4f7f\u6211\u4eec\u7684\u6b65\u957f\u503c\u4e3a6\u4e58\u4ee5float\u7684\u5b57\u8282\u6570\uff08=24\u5b57\u8282\uff09\u3002 \u540c\u6837\uff0c\u8fd9\u6b21\u6211\u4eec\u5fc5\u987b\u6307\u5b9a\u4e00\u4e2a\u504f\u79fb\u91cf\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u9876\u70b9\u6765\u8bf4\uff0c\u4f4d\u7f6e\u9876\u70b9\u5c5e\u6027\u5728\u524d\uff0c\u6240\u4ee5\u5b83\u7684\u504f\u79fb\u91cf\u662f0\u3002\u989c\u8272\u5c5e\u6027\u7d27\u968f\u4f4d\u7f6e\u6570\u636e\u4e4b\u540e\uff0c\u6240\u4ee5\u504f\u79fb\u91cf\u5c31\u662f 3 * sizeof(float) \uff0c\u7528\u5b57\u8282\u6765\u8ba1\u7b97\u5c31\u662f12\u5b57\u8282\u3002 \u8fd0\u884c\u7a0b\u5e8f\u4f60\u5e94\u8be5\u4f1a\u770b\u5230\u5982\u4e0b\u7ed3\u679c\uff1a \u5982\u679c\u4f60\u5728\u54ea\u5361\u4f4f\u4e86\uff0c\u53ef\u4ee5\u5728 \u8fd9\u91cc \u67e5\u770b\u6e90\u7801\u3002 \u8fd9\u4e2a\u56fe\u7247\u53ef\u80fd\u4e0d\u662f\u4f60\u6240\u671f\u671b\u7684\u90a3\u79cd\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u63d0\u4f9b\u4e863\u4e2a\u989c\u8272\uff0c\u800c\u4e0d\u662f\u6211\u4eec\u73b0\u5728\u770b\u5230\u7684\u5927\u8c03\u8272\u677f\u3002\u8fd9\u662f\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u8fdb\u884c\u7684\u6240\u8c13 \u7247\u6bb5\u63d2\u503c (Fragment Interpolation)\u7684\u7ed3\u679c\u3002\u5f53\u6e32\u67d3\u4e00\u4e2a\u4e09\u89d2\u5f62\u65f6\uff0c\u5149\u6805\u5316(Rasterization)\u9636\u6bb5\u901a\u5e38\u4f1a\u9020\u6210\u6bd4\u539f\u6307\u5b9a\u9876\u70b9\u66f4\u591a\u7684\u7247\u6bb5\u3002\u5149\u6805\u4f1a\u6839\u636e\u6bcf\u4e2a\u7247\u6bb5\u5728\u4e09\u89d2\u5f62\u5f62\u72b6\u4e0a\u6240\u5904\u76f8\u5bf9\u4f4d\u7f6e\u51b3\u5b9a\u8fd9\u4e9b\u7247\u6bb5\u7684\u4f4d\u7f6e\u3002 \u57fa\u4e8e\u8fd9\u4e9b\u4f4d\u7f6e\uff0c\u5b83\u4f1a \u63d2\u503c (Interpolate)\u6240\u6709\u7247\u6bb5\u7740\u8272\u5668\u7684\u8f93\u5165\u53d8\u91cf\u3002\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u7ebf\u6bb5\uff0c\u4e0a\u9762\u7684\u7aef\u70b9\u662f\u7eff\u8272\u7684\uff0c\u4e0b\u9762\u7684\u7aef\u70b9\u662f\u84dd\u8272\u7684\u3002\u5982\u679c\u4e00\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u5728\u7ebf\u6bb5\u768470%\u7684\u4f4d\u7f6e\u8fd0\u884c\uff0c\u5b83\u7684\u989c\u8272\u8f93\u5165\u5c5e\u6027\u5c31\u4f1a\u662f\u4e00\u4e2a\u7eff\u8272\u548c\u84dd\u8272\u7684\u7ebf\u6027\u7ed3\u5408\uff1b\u66f4\u7cbe\u786e\u5730\u8bf4\u5c31\u662f30%\u84dd + 70%\u7eff\u3002 \u8fd9\u6b63\u662f\u5728\u8fd9\u4e2a\u4e09\u89d2\u5f62\u4e2d\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u6211\u4eec\u67093\u4e2a\u9876\u70b9\uff0c\u548c\u76f8\u5e94\u76843\u4e2a\u989c\u8272\uff0c\u4ece\u8fd9\u4e2a\u4e09\u89d2\u5f62\u7684\u50cf\u7d20\u6765\u770b\u5b83\u53ef\u80fd\u5305\u542b50000\u5de6\u53f3\u7684\u7247\u6bb5\uff0c\u7247\u6bb5\u7740\u8272\u5668\u4e3a\u8fd9\u4e9b\u50cf\u7d20\u8fdb\u884c\u63d2\u503c\u989c\u8272\u3002\u5982\u679c\u4f60\u4ed4\u7ec6\u770b\u8fd9\u4e9b\u989c\u8272\u5c31\u5e94\u8be5\u80fd\u660e\u767d\u4e86\uff1a\u7ea2\u9996\u5148\u53d8\u6210\u5230\u7d2b\u518d\u53d8\u4e3a\u84dd\u8272\u3002\u7247\u6bb5\u63d2\u503c\u4f1a\u88ab\u5e94\u7528\u5230\u7247\u6bb5\u7740\u8272\u5668\u7684\u6240\u6709\u8f93\u5165\u5c5e\u6027\u4e0a\u3002 \u6211\u4eec\u81ea\u5df1\u7684\u7740\u8272\u5668\u7c7b \u7f16\u5199\u3001\u7f16\u8bd1\u3001\u7ba1\u7406\u7740\u8272\u5668\u662f\u4ef6\u9ebb\u70e6\u4e8b\u3002\u5728\u7740\u8272\u5668\u4e3b\u9898\u7684\u6700\u540e\uff0c\u6211\u4eec\u4f1a\u5199\u4e00\u4e2a\u7c7b\u6765\u8ba9\u6211\u4eec\u7684\u751f\u6d3b\u8f7b\u677e\u4e00\u70b9\uff0c\u5b83\u53ef\u4ee5\u4ece\u786c\u76d8\u8bfb\u53d6\u7740\u8272\u5668\uff0c\u7136\u540e\u7f16\u8bd1\u5e76\u94fe\u63a5\u5b83\u4eec\uff0c\u5e76\u5bf9\u5b83\u4eec\u8fdb\u884c\u9519\u8bef\u68c0\u6d4b\uff0c\u8fd9\u5c31\u53d8\u5f97\u5f88\u597d\u7528\u4e86\u3002\u8fd9\u4e5f\u4f1a\u8ba9\u4f60\u4e86\u89e3\u8be5\u5982\u4f55\u5c01\u88c5\u76ee\u524d\u6240\u5b66\u7684\u77e5\u8bc6\u5230\u4e00\u4e2a\u62bd\u8c61\u5bf9\u8c61\u4e2d\u3002 \u6211\u4eec\u4f1a\u628a\u7740\u8272\u5668\u7c7b\u5168\u90e8\u653e\u5728\u5728\u5934\u6587\u4ef6\u91cc\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u5b66\u4e60\u7528\u9014\uff0c\u5f53\u7136\u4e5f\u65b9\u4fbf\u79fb\u690d\u3002\u6211\u4eec\u5148\u6765\u6dfb\u52a0\u5fc5\u8981\u7684include\uff0c\u5e76\u5b9a\u4e49\u7c7b\u7ed3\u6784\uff1a #ifndef SHADER_H #define SHADER_H #include <glad/glad.h>; // \u5305\u542bglad\u6765\u83b7\u53d6\u6240\u6709\u7684\u5fc5\u987bOpenGL\u5934\u6587\u4ef6 #include <string> #include <fstream> #include <sstream> #include <iostream> class Shader { public: // \u7a0b\u5e8fID unsigned int ID; // \u6784\u9020\u5668\u8bfb\u53d6\u5e76\u6784\u5efa\u7740\u8272\u5668 Shader(const char* vertexPath, const char* fragmentPath); // \u4f7f\u7528/\u6fc0\u6d3b\u7a0b\u5e8f void use(); // uniform\u5de5\u5177\u51fd\u6570 void setBool(const std::string &name, bool value) const; void setInt(const std::string &name, int value) const; void setFloat(const std::string &name, float value) const; }; #endif Important \u5728\u4e0a\u9762\uff0c\u6211\u4eec\u5728\u5934\u6587\u4ef6\u9876\u90e8\u4f7f\u7528\u4e86\u51e0\u4e2a \u9884\u5904\u7406\u6307\u4ee4 (Preprocessor Directives)\u3002\u8fd9\u4e9b\u9884\u5904\u7406\u6307\u4ee4\u4f1a\u544a\u77e5\u4f60\u7684\u7f16\u8bd1\u5668\u53ea\u5728\u5b83\u6ca1\u88ab\u5305\u542b\u8fc7\u7684\u60c5\u51b5\u4e0b\u624d\u5305\u542b\u548c\u7f16\u8bd1\u8fd9\u4e2a\u5934\u6587\u4ef6\uff0c\u5373\u4f7f\u591a\u4e2a\u6587\u4ef6\u90fd\u5305\u542b\u4e86\u8fd9\u4e2a\u7740\u8272\u5668\u5934\u6587\u4ef6\u3002\u5b83\u662f\u7528\u6765\u9632\u6b62\u94fe\u63a5\u51b2\u7a81\u7684\u3002 \u7740\u8272\u5668\u7c7b\u50a8\u5b58\u4e86\u7740\u8272\u5668\u7a0b\u5e8f\u7684ID\u3002\u5b83\u7684\u6784\u9020\u5668\u9700\u8981\u9876\u70b9\u548c\u7247\u6bb5\u7740\u8272\u5668\u6e90\u4ee3\u7801\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u6e90\u7801\u7684\u6587\u672c\u6587\u4ef6\u50a8\u5b58\u5728\u786c\u76d8\u4e0a\u4e86\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u4e3a\u4e86\u8ba9\u6211\u4eec\u7684\u751f\u6d3b\u66f4\u8f7b\u677e\u4e00\u70b9\uff0c\u8fd8\u52a0\u5165\u4e86\u4e00\u4e9b\u5de5\u5177\u51fd\u6570\uff1a use \u7528\u6765\u6fc0\u6d3b\u7740\u8272\u5668\u7a0b\u5e8f\uff0c\u6240\u6709\u7684 set\u2026 \u51fd\u6570\u80fd\u591f\u67e5\u8be2\u4e00\u4e2aunform\u7684\u4f4d\u7f6e\u503c\u5e76\u8bbe\u7f6e\u5b83\u7684\u503c\u3002 \u4ece\u6587\u4ef6\u8bfb\u53d6 \u6211\u4eec\u4f7f\u7528C++\u6587\u4ef6\u6d41\u8bfb\u53d6\u7740\u8272\u5668\u5185\u5bb9\uff0c\u50a8\u5b58\u5230\u51e0\u4e2a string \u5bf9\u8c61\u91cc\uff1a Shader(const char* vertexPath, const char* fragmentPath) { // 1. \u4ece\u6587\u4ef6\u8def\u5f84\u4e2d\u83b7\u53d6\u9876\u70b9/\u7247\u6bb5\u7740\u8272\u5668 std::string vertexCode; std::string fragmentCode; std::ifstream vShaderFile; std::ifstream fShaderFile; // \u4fdd\u8bc1ifstream\u5bf9\u8c61\u53ef\u4ee5\u629b\u51fa\u5f02\u5e38\uff1a vShaderFile.exceptions (std::ifstream::failbit | std::ifstream::badbit); fShaderFile.exceptions (std::ifstream::failbit | std::ifstream::badbit); try { // \u6253\u5f00\u6587\u4ef6 vShaderFile.open(vertexPath); fShaderFile.open(fragmentPath); std::stringstream vShaderStream, fShaderStream; // \u8bfb\u53d6\u6587\u4ef6\u7684\u7f13\u51b2\u5185\u5bb9\u5230\u6570\u636e\u6d41\u4e2d vShaderStream << vShaderFile.rdbuf(); fShaderStream << fShaderFile.rdbuf(); // \u5173\u95ed\u6587\u4ef6\u5904\u7406\u5668 vShaderFile.close(); fShaderFile.close(); // \u8f6c\u6362\u6570\u636e\u6d41\u5230string vertexCode = vShaderStream.str(); fragmentCode = fShaderStream.str(); } catch(std::ifstream::failure e) { std::cout << \"ERROR::SHADER::FILE_NOT_SUCCESFULLY_READ\" << std::endl; } const char* vShaderCode = vertexCode.c_str(); const char* fShaderCode = fragmentCode.c_str(); [...] \u4e0b\u4e00\u6b65\uff0c\u6211\u4eec\u9700\u8981\u7f16\u8bd1\u548c\u94fe\u63a5\u7740\u8272\u5668\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u4e5f\u5c06\u68c0\u67e5\u7f16\u8bd1/\u94fe\u63a5\u662f\u5426\u5931\u8d25\uff0c\u5982\u679c\u5931\u8d25\u5219\u6253\u5370\u7f16\u8bd1\u65f6\u9519\u8bef\uff0c\u8c03\u8bd5\u7684\u65f6\u5019\u8fd9\u4e9b\u9519\u8bef\u8f93\u51fa\u4f1a\u53ca\u5176\u91cd\u8981\uff08\u4f60\u603b\u4f1a\u9700\u8981\u8fd9\u4e9b\u9519\u8bef\u65e5\u5fd7\u7684\uff09\uff1a // 2. \u7f16\u8bd1\u7740\u8272\u5668 unsigned int vertex, fragment; int success; char infoLog[512]; // \u9876\u70b9\u7740\u8272\u5668 vertex = glCreateShader(GL_VERTEX_SHADER); glShaderSource(vertex, 1, &vShaderCode, NULL); glCompileShader(vertex); // \u6253\u5370\u7f16\u8bd1\u9519\u8bef\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09 glGetShaderiv(vertex, GL_COMPILE_STATUS, &success); if(!success) { glGetShaderInfoLog(vertex, 512, NULL, infoLog); std::cout << \"ERROR::SHADER::VERTEX::COMPILATION_FAILED\\n\" << infoLog << std::endl; }; // \u7247\u6bb5\u7740\u8272\u5668\u4e5f\u7c7b\u4f3c [...] // \u7740\u8272\u5668\u7a0b\u5e8f ID = glCreateProgram(); glAttachShader(ID, vertex); glAttachShader(ID, fragment); glLinkProgram(ID); // \u6253\u5370\u8fde\u63a5\u9519\u8bef\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09 glGetProgramiv(ID, GL_LINK_STATUS, &success); if(!success) { glGetProgramInfoLog(ID, 512, NULL, infoLog); std::cout << \"ERROR::SHADER::PROGRAM::LINKING_FAILED\\n\" << infoLog << std::endl; } // \u5220\u9664\u7740\u8272\u5668\uff0c\u5b83\u4eec\u5df2\u7ecf\u94fe\u63a5\u5230\u6211\u4eec\u7684\u7a0b\u5e8f\u4e2d\u4e86\uff0c\u5df2\u7ecf\u4e0d\u518d\u9700\u8981\u4e86 glDeleteShader(vertex); glDeleteShader(fragment); use \u51fd\u6570\u975e\u5e38\u7b80\u5355\uff1a void use() { glUseProgram(ID); } uniform\u7684setter\u51fd\u6570\u4e5f\u5f88\u7c7b\u4f3c\uff1a void setBool(const std::string &name, bool value) const { glUniform1i(glGetUniformLocation(ID, name.c_str()), (int)value); } void setInt(const std::string &name, int value) const { glUniform1i(glGetUniformLocation(ID, name.c_str()), value); } void setFloat(const std::string &name, float value) const { glUniform1f(glGetUniformLocation(ID, name.c_str()), value); } \u73b0\u5728\u6211\u4eec\u5c31\u5199\u5b8c\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684 \u7740\u8272\u5668\u7c7b \u3002\u4f7f\u7528\u8fd9\u4e2a\u7740\u8272\u5668\u7c7b\u5f88\u7b80\u5355\uff1b\u53ea\u8981\u521b\u5efa\u4e00\u4e2a\u7740\u8272\u5668\u5bf9\u8c61\uff0c\u4ece\u90a3\u4e00\u70b9\u5f00\u59cb\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528\u4e86\uff1a Shader ourShader(\"path/to/shaders/shader.vs\", \"path/to/shaders/shader.fs\"); ... while(...) { ourShader.use(); ourShader.setFloat(\"someUniform\", 1.0f); DrawStuff(); } \u6211\u4eec\u628a\u9876\u70b9\u548c\u7247\u6bb5\u7740\u8272\u5668\u50a8\u5b58\u4e3a\u4e24\u4e2a\u53eb\u505a shader.vs \u548c shader.fs \u7684\u6587\u4ef6\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u559c\u6b22\u7684\u540d\u5b57\u547d\u540d\u7740\u8272\u5668\u6587\u4ef6\uff1b\u6211\u81ea\u5df1\u89c9\u5f97\u7528 .vs \u548c .fs \u4f5c\u4e3a\u6269\u5c55\u540d\u5f88\u76f4\u89c2\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u4f7f\u7528 \u65b0\u7740\u8272\u5668\u7c7b \u7684\u6e90\u4ee3\u7801\u3002\u6ce8\u610f\u4f60\u53ef\u4ee5\u70b9\u51fb\u6e90\u7801\u4e2d\u7684\u7740\u8272\u5668\u6587\u4ef6\u8def\u5f84\u6765\u67e5\u770b\u6bcf\u4e00\u4e2a\u7740\u8272\u5668\u7684\u6e90\u4ee3\u7801\u3002 \u7ec3\u4e60 \u4fee\u6539\u9876\u70b9\u7740\u8272\u5668\u8ba9\u4e09\u89d2\u5f62\u4e0a\u4e0b\u98a0\u5012\uff1a \u53c2\u8003\u89e3\u7b54 \u4f7f\u7528uniform\u5b9a\u4e49\u4e00\u4e2a\u6c34\u5e73\u504f\u79fb\u91cf\uff0c\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u8fd9\u4e2a\u504f\u79fb\u91cf\u628a\u4e09\u89d2\u5f62\u79fb\u52a8\u5230\u5c4f\u5e55\u53f3\u4fa7\uff1a \u53c2\u8003\u89e3\u7b54 \u4f7f\u7528 out \u5173\u952e\u5b57\u628a\u9876\u70b9\u4f4d\u7f6e\u8f93\u51fa\u5230\u7247\u6bb5\u7740\u8272\u5668\uff0c\u5e76\u5c06\u7247\u6bb5\u7684\u989c\u8272\u8bbe\u7f6e\u4e3a\u4e0e\u9876\u70b9\u4f4d\u7f6e\u76f8\u7b49\uff08\u6765\u770b\u770b\u8fde\u9876\u70b9\u4f4d\u7f6e\u503c\u90fd\u5728\u4e09\u89d2\u5f62\u4e2d\u88ab\u63d2\u503c\u7684\u7ed3\u679c\uff09\u3002\u505a\u5b8c\u8fd9\u4e9b\u540e\uff0c\u5c1d\u8bd5\u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898\uff1a\u4e3a\u4ec0\u4e48\u5728\u4e09\u89d2\u5f62\u7684\u5de6\u4e0b\u89d2\u662f\u9ed1\u7684?\uff1a \u53c2\u8003\u89e3\u7b54","title":"\u7740\u8272\u5668"},{"location":"01%20Getting%20started/05%20Shaders/#_1","text":"\u539f\u6587 Shaders \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django , Krasjet, Geequlim \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u5728 Hello Triangle \u6559\u7a0b\u4e2d\u63d0\u5230\uff0c\u7740\u8272\u5668(Shader)\u662f\u8fd0\u884c\u5728GPU\u4e0a\u7684\u5c0f\u7a0b\u5e8f\u3002\u8fd9\u4e9b\u5c0f\u7a0b\u5e8f\u4e3a\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u7684\u67d0\u4e2a\u7279\u5b9a\u90e8\u5206\u800c\u8fd0\u884c\u3002\u4ece\u57fa\u672c\u610f\u4e49\u4e0a\u6765\u8bf4\uff0c\u7740\u8272\u5668\u53ea\u662f\u4e00\u79cd\u628a\u8f93\u5165\u8f6c\u5316\u4e3a\u8f93\u51fa\u7684\u7a0b\u5e8f\u3002\u7740\u8272\u5668\u4e5f\u662f\u4e00\u79cd\u975e\u5e38\u72ec\u7acb\u7684\u7a0b\u5e8f\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e4b\u95f4\u4e0d\u80fd\u76f8\u4e92\u901a\u4fe1\uff1b\u5b83\u4eec\u4e4b\u95f4\u552f\u4e00\u7684\u6c9f\u901a\u53ea\u6709\u901a\u8fc7\u8f93\u5165\u548c\u8f93\u51fa\u3002 \u524d\u9762\u7684\u6559\u7a0b\u91cc\u6211\u4eec\u7b80\u8981\u5730\u89e6\u53ca\u4e86\u4e00\u70b9\u7740\u8272\u5668\u7684\u76ae\u6bdb\uff0c\u5e76\u4e86\u89e3\u4e86\u5982\u4f55\u6070\u5f53\u5730\u4f7f\u7528\u5b83\u4eec\u3002\u73b0\u5728\u6211\u4eec\u4f1a\u7528\u4e00\u79cd\u66f4\u52a0\u5e7f\u6cdb\u7684\u5f62\u5f0f\u8be6\u7ec6\u89e3\u91ca\u7740\u8272\u5668\uff0c\u7279\u522b\u662fOpenGL\u7740\u8272\u5668\u8bed\u8a00(GLSL)\u3002","title":"\u7740\u8272\u5668"},{"location":"01%20Getting%20started/05%20Shaders/#glsl","text":"\u7740\u8272\u5668\u662f\u4f7f\u7528\u4e00\u79cd\u53ebGLSL\u7684\u7c7bC\u8bed\u8a00\u5199\u6210\u7684\u3002GLSL\u662f\u4e3a\u56fe\u5f62\u8ba1\u7b97\u91cf\u8eab\u5b9a\u5236\u7684\uff0c\u5b83\u5305\u542b\u4e00\u4e9b\u9488\u5bf9\u5411\u91cf\u548c\u77e9\u9635\u64cd\u4f5c\u7684\u6709\u7528\u7279\u6027\u3002 \u7740\u8272\u5668\u7684\u5f00\u5934\u603b\u662f\u8981\u58f0\u660e\u7248\u672c\uff0c\u63a5\u7740\u662f\u8f93\u5165\u548c\u8f93\u51fa\u53d8\u91cf\u3001uniform\u548c main \u51fd\u6570\u3002\u6bcf\u4e2a\u7740\u8272\u5668\u7684\u5165\u53e3\u70b9\u90fd\u662f main \u51fd\u6570\uff0c\u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\u6211\u4eec\u5904\u7406\u6240\u6709\u7684\u8f93\u5165\u53d8\u91cf\uff0c\u5e76\u5c06\u7ed3\u679c\u8f93\u51fa\u5230\u8f93\u51fa\u53d8\u91cf\u4e2d\u3002\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u4ec0\u4e48\u662funiform\u4e5f\u4e0d\u7528\u62c5\u5fc3\uff0c\u6211\u4eec\u540e\u9762\u4f1a\u8fdb\u884c\u8bb2\u89e3\u3002 \u4e00\u4e2a\u5178\u578b\u7684\u7740\u8272\u5668\u6709\u4e0b\u9762\u7684\u7ed3\u6784\uff1a #version version_number in type in_variable_name; in type in_variable_name; out type out_variable_name; uniform type uniform_name; void main() { // \u5904\u7406\u8f93\u5165\u5e76\u8fdb\u884c\u4e00\u4e9b\u56fe\u5f62\u64cd\u4f5c ... // \u8f93\u51fa\u5904\u7406\u8fc7\u7684\u7ed3\u679c\u5230\u8f93\u51fa\u53d8\u91cf out_variable_name = weird_stuff_we_processed; } \u5f53\u6211\u4eec\u7279\u522b\u8c08\u8bba\u5230\u9876\u70b9\u7740\u8272\u5668\u7684\u65f6\u5019\uff0c\u6bcf\u4e2a\u8f93\u5165\u53d8\u91cf\u4e5f\u53eb \u9876\u70b9\u5c5e\u6027 (Vertex Attribute)\u3002\u6211\u4eec\u80fd\u58f0\u660e\u7684\u9876\u70b9\u5c5e\u6027\u662f\u6709\u4e0a\u9650\u7684\uff0c\u5b83\u4e00\u822c\u7531\u786c\u4ef6\u6765\u51b3\u5b9a\u3002OpenGL\u786e\u4fdd\u81f3\u5c11\u670916\u4e2a\u5305\u542b4\u5206\u91cf\u7684\u9876\u70b9\u5c5e\u6027\u53ef\u7528\uff0c\u4f46\u662f\u6709\u4e9b\u786c\u4ef6\u6216\u8bb8\u5141\u8bb8\u66f4\u591a\u7684\u9876\u70b9\u5c5e\u6027\uff0c\u4f60\u53ef\u4ee5\u67e5\u8be2 GL_MAX_VERTEX_ATTRIBS \u6765\u83b7\u53d6\u5177\u4f53\u7684\u4e0a\u9650\uff1a int nrAttributes; glGetIntegerv(GL_MAX_VERTEX_ATTRIBS, &nrAttributes); std::cout << \"Maximum nr of vertex attributes supported: \" << nrAttributes << std::endl; \u901a\u5e38\u60c5\u51b5\u4e0b\u5b83\u81f3\u5c11\u4f1a\u8fd4\u56de16\u4e2a\uff0c\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u662f\u591f\u7528\u4e86\u3002","title":"GLSL"},{"location":"01%20Getting%20started/05%20Shaders/#_2","text":"\u548c\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u4e00\u6837\uff0cGLSL\u6709\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u6765\u6307\u5b9a\u53d8\u91cf\u7684\u79cd\u7c7b\u3002GLSL\u4e2d\u5305\u542bC\u7b49\u5176\u5b83\u8bed\u8a00\u5927\u90e8\u5206\u7684\u9ed8\u8ba4\u57fa\u7840\u6570\u636e\u7c7b\u578b\uff1a int \u3001 float \u3001 double \u3001 uint \u548c bool \u3002GLSL\u4e5f\u6709\u4e24\u79cd\u5bb9\u5668\u7c7b\u578b\uff0c\u5b83\u4eec\u4f1a\u5728\u8fd9\u4e2a\u6559\u7a0b\u4e2d\u4f7f\u7528\u5f88\u591a\uff0c\u5206\u522b\u662f\u5411\u91cf(Vector)\u548c\u77e9\u9635(Matrix)\uff0c\u5176\u4e2d\u77e9\u9635\u6211\u4eec\u4f1a\u5728\u4e4b\u540e\u7684\u6559\u7a0b\u91cc\u518d\u8ba8\u8bba\u3002","title":"\u6570\u636e\u7c7b\u578b"},{"location":"01%20Getting%20started/05%20Shaders/#_3","text":"GLSL\u4e2d\u7684\u5411\u91cf\u662f\u4e00\u4e2a\u53ef\u4ee5\u5305\u542b\u67092\u30013\u6216\u80054\u4e2a\u5206\u91cf\u7684\u5bb9\u5668\uff0c\u5206\u91cf\u7684\u7c7b\u578b\u53ef\u4ee5\u662f\u524d\u9762\u9ed8\u8ba4\u57fa\u7840\u7c7b\u578b\u7684\u4efb\u610f\u4e00\u4e2a\u3002\u5b83\u4eec\u53ef\u4ee5\u662f\u4e0b\u9762\u7684\u5f62\u5f0f\uff08 n \u4ee3\u8868\u5206\u91cf\u7684\u6570\u91cf\uff09\uff1a \u7c7b\u578b \u542b\u4e49 vecn \u5305\u542b n \u4e2afloat\u5206\u91cf\u7684\u9ed8\u8ba4\u5411\u91cf bvecn \u5305\u542b n \u4e2abool\u5206\u91cf\u7684\u5411\u91cf ivecn \u5305\u542b n \u4e2aint\u5206\u91cf\u7684\u5411\u91cf uvecn \u5305\u542b n \u4e2aunsigned int\u5206\u91cf\u7684\u5411\u91cf dvecn \u5305\u542b n \u4e2adouble\u5206\u91cf\u7684\u5411\u91cf \u5927\u591a\u6570\u65f6\u5019\u6211\u4eec\u4f7f\u7528 vecn \uff0c\u56e0\u4e3afloat\u8db3\u591f\u6ee1\u8db3\u5927\u591a\u6570\u8981\u6c42\u4e86\u3002 \u4e00\u4e2a\u5411\u91cf\u7684\u5206\u91cf\u53ef\u4ee5\u901a\u8fc7 vec.x \u8fd9\u79cd\u65b9\u5f0f\u83b7\u53d6\uff0c\u8fd9\u91cc x \u662f\u6307\u8fd9\u4e2a\u5411\u91cf\u7684\u7b2c\u4e00\u4e2a\u5206\u91cf\u3002\u4f60\u53ef\u4ee5\u5206\u522b\u4f7f\u7528 .x \u3001 .y \u3001 .z \u548c .w \u6765\u83b7\u53d6\u5b83\u4eec\u7684\u7b2c1\u30012\u30013\u30014\u4e2a\u5206\u91cf\u3002GLSL\u4e5f\u5141\u8bb8\u4f60\u5bf9\u989c\u8272\u4f7f\u7528 rgba \uff0c\u6216\u662f\u5bf9\u7eb9\u7406\u5750\u6807\u4f7f\u7528 stpq \u8bbf\u95ee\u76f8\u540c\u7684\u5206\u91cf\u3002 \u5411\u91cf\u8fd9\u4e00\u6570\u636e\u7c7b\u578b\u4e5f\u5141\u8bb8\u4e00\u4e9b\u6709\u8da3\u800c\u7075\u6d3b\u7684\u5206\u91cf\u9009\u62e9\u65b9\u5f0f\uff0c\u53eb\u505a \u91cd\u7ec4 (Swizzling)\u3002\u91cd\u7ec4\u5141\u8bb8\u8fd9\u6837\u7684\u8bed\u6cd5\uff1a vec2 someVec; vec4 differentVec = someVec.xyxx; vec3 anotherVec = differentVec.zyw; vec4 otherVec = someVec.xxxx + anotherVec.yxzy; \u4f60\u53ef\u4ee5\u4f7f\u7528\u4e0a\u97624\u4e2a\u5b57\u6bcd\u4efb\u610f\u7ec4\u5408\u6765\u521b\u5efa\u4e00\u4e2a\u548c\u539f\u6765\u5411\u91cf\u4e00\u6837\u957f\u7684\uff08\u540c\u7c7b\u578b\uff09\u65b0\u5411\u91cf\uff0c\u53ea\u8981\u539f\u6765\u5411\u91cf\u6709\u90a3\u4e9b\u5206\u91cf\u5373\u53ef\uff1b\u7136\u800c\uff0c\u4f60\u4e0d\u5141\u8bb8\u5728\u4e00\u4e2a vec2 \u5411\u91cf\u4e2d\u53bb\u83b7\u53d6 .z \u5143\u7d20\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u628a\u4e00\u4e2a\u5411\u91cf\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\u4f20\u7ed9\u4e0d\u540c\u7684\u5411\u91cf\u6784\u9020\u51fd\u6570\uff0c\u4ee5\u51cf\u5c11\u9700\u6c42\u53c2\u6570\u7684\u6570\u91cf\uff1a vec2 vect = vec2(0.5, 0.7); vec4 result = vec4(vect, 0.0, 0.0); vec4 otherResult = vec4(result.xyz, 1.0); \u5411\u91cf\u662f\u4e00\u79cd\u7075\u6d3b\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u7528\u5728\u5404\u79cd\u8f93\u5165\u548c\u8f93\u51fa\u4e0a\u3002\u5b66\u5b8c\u6559\u7a0b\u4f60\u4f1a\u770b\u5230\u5f88\u591a\u65b0\u9896\u7684\u7ba1\u7406\u5411\u91cf\u7684\u4f8b\u5b50\u3002","title":"\u5411\u91cf"},{"location":"01%20Getting%20started/05%20Shaders/#_4","text":"\u867d\u7136\u7740\u8272\u5668\u662f\u5404\u81ea\u72ec\u7acb\u7684\u5c0f\u7a0b\u5e8f\uff0c\u4f46\u662f\u5b83\u4eec\u90fd\u662f\u4e00\u4e2a\u6574\u4f53\u7684\u4e00\u90e8\u5206\uff0c\u51fa\u4e8e\u8fd9\u6837\u7684\u539f\u56e0\uff0c\u6211\u4eec\u5e0c\u671b\u6bcf\u4e2a\u7740\u8272\u5668\u90fd\u6709\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u8fd9\u6837\u624d\u80fd\u8fdb\u884c\u6570\u636e\u4ea4\u6d41\u548c\u4f20\u9012\u3002GLSL\u5b9a\u4e49\u4e86 in \u548c out \u5173\u952e\u5b57\u4e13\u95e8\u6765\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u7684\u3002\u6bcf\u4e2a\u7740\u8272\u5668\u4f7f\u7528\u8fd9\u4e24\u4e2a\u5173\u952e\u5b57\u8bbe\u5b9a\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u53ea\u8981\u4e00\u4e2a\u8f93\u51fa\u53d8\u91cf\u4e0e\u4e0b\u4e00\u4e2a\u7740\u8272\u5668\u9636\u6bb5\u7684\u8f93\u5165\u5339\u914d\uff0c\u5b83\u5c31\u4f1a\u4f20\u9012\u4e0b\u53bb\u3002\u4f46\u5728\u9876\u70b9\u548c\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u4f1a\u6709\u70b9\u4e0d\u540c\u3002 \u9876\u70b9\u7740\u8272\u5668\u5e94\u8be5\u63a5\u6536\u7684\u662f\u4e00\u79cd\u7279\u6b8a\u5f62\u5f0f\u7684\u8f93\u5165\uff0c\u5426\u5219\u5c31\u4f1a\u6548\u7387\u4f4e\u4e0b\u3002\u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u5165\u7279\u6b8a\u5728\uff0c\u5b83\u4ece\u9876\u70b9\u6570\u636e\u4e2d\u76f4\u63a5\u63a5\u6536\u8f93\u5165\u3002\u4e3a\u4e86\u5b9a\u4e49\u9876\u70b9\u6570\u636e\u8be5\u5982\u4f55\u7ba1\u7406\uff0c\u6211\u4eec\u4f7f\u7528 location \u8fd9\u4e00\u5143\u6570\u636e\u6307\u5b9a\u8f93\u5165\u53d8\u91cf\uff0c\u8fd9\u6837\u6211\u4eec\u624d\u53ef\u4ee5\u5728CPU\u4e0a\u914d\u7f6e\u9876\u70b9\u5c5e\u6027\u3002\u6211\u4eec\u5df2\u7ecf\u5728\u524d\u9762\u7684\u6559\u7a0b\u770b\u8fc7\u8fd9\u4e2a\u4e86\uff0c layout (location = 0) \u3002\u9876\u70b9\u7740\u8272\u5668\u9700\u8981\u4e3a\u5b83\u7684\u8f93\u5165\u63d0\u4f9b\u4e00\u4e2a\u989d\u5916\u7684 layout \u6807\u8bc6\uff0c\u8fd9\u6837\u6211\u4eec\u624d\u80fd\u628a\u5b83\u94fe\u63a5\u5230\u9876\u70b9\u6570\u636e\u3002 Important \u4f60\u4e5f\u53ef\u4ee5\u5ffd\u7565 layout (location = 0) \u6807\u8bc6\u7b26\uff0c\u901a\u8fc7\u5728OpenGL\u4ee3\u7801\u4e2d\u4f7f\u7528 glGetAttribLocation \u67e5\u8be2\u5c5e\u6027\u4f4d\u7f6e\u503c(Location)\uff0c\u4f46\u662f\u6211\u66f4\u559c\u6b22\u5728\u7740\u8272\u5668\u4e2d\u8bbe\u7f6e\u5b83\u4eec\uff0c\u8fd9\u6837\u4f1a\u66f4\u5bb9\u6613\u7406\u89e3\u800c\u4e14\u8282\u7701\u4f60\uff08\u548cOpenGL\uff09\u7684\u5de5\u4f5c\u91cf\u3002 \u53e6\u4e00\u4e2a\u4f8b\u5916\u662f\u7247\u6bb5\u7740\u8272\u5668\uff0c\u5b83\u9700\u8981\u4e00\u4e2a vec4 \u989c\u8272\u8f93\u51fa\u53d8\u91cf\uff0c\u56e0\u4e3a\u7247\u6bb5\u7740\u8272\u5668\u9700\u8981\u751f\u6210\u4e00\u4e2a\u6700\u7ec8\u8f93\u51fa\u7684\u989c\u8272\u3002\u5982\u679c\u4f60\u5728\u7247\u6bb5\u7740\u8272\u5668\u6ca1\u6709\u5b9a\u4e49\u8f93\u51fa\u989c\u8272\uff0cOpenGL\u4f1a\u628a\u4f60\u7684\u7269\u4f53\u6e32\u67d3\u4e3a\u9ed1\u8272\uff08\u6216\u767d\u8272\uff09\u3002 \u6240\u4ee5\uff0c\u5982\u679c\u6211\u4eec\u6253\u7b97\u4ece\u4e00\u4e2a\u7740\u8272\u5668\u5411\u53e6\u4e00\u4e2a\u7740\u8272\u5668\u53d1\u9001\u6570\u636e\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u53d1\u9001\u65b9\u7740\u8272\u5668\u4e2d\u58f0\u660e\u4e00\u4e2a\u8f93\u51fa\uff0c\u5728\u63a5\u6536\u65b9\u7740\u8272\u5668\u4e2d\u58f0\u660e\u4e00\u4e2a\u7c7b\u4f3c\u7684\u8f93\u5165\u3002\u5f53\u7c7b\u578b\u548c\u540d\u5b57\u90fd\u4e00\u6837\u7684\u65f6\u5019\uff0cOpenGL\u5c31\u4f1a\u628a\u4e24\u4e2a\u53d8\u91cf\u94fe\u63a5\u5230\u4e00\u8d77\uff0c\u5b83\u4eec\u4e4b\u95f4\u5c31\u80fd\u53d1\u9001\u6570\u636e\u4e86\uff08\u8fd9\u662f\u5728\u94fe\u63a5\u7a0b\u5e8f\u5bf9\u8c61\u65f6\u5b8c\u6210\u7684\uff09\u3002\u4e3a\u4e86\u5c55\u793a\u8fd9\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u6211\u4eec\u4f1a\u7a0d\u5fae\u6539\u52a8\u4e00\u4e0b\u4e4b\u524d\u6559\u7a0b\u91cc\u7684\u90a3\u4e2a\u7740\u8272\u5668\uff0c\u8ba9\u9876\u70b9\u7740\u8272\u5668\u4e3a\u7247\u6bb5\u7740\u8272\u5668\u51b3\u5b9a\u989c\u8272\u3002 \u9876\u70b9\u7740\u8272\u5668 #version 330 core layout (location = 0) in vec3 aPos; // \u4f4d\u7f6e\u53d8\u91cf\u7684\u5c5e\u6027\u4f4d\u7f6e\u503c\u4e3a0 out vec4 vertexColor; // \u4e3a\u7247\u6bb5\u7740\u8272\u5668\u6307\u5b9a\u4e00\u4e2a\u989c\u8272\u8f93\u51fa void main() { gl_Position = vec4(aPos, 1.0); // \u6ce8\u610f\u6211\u4eec\u5982\u4f55\u628a\u4e00\u4e2avec3\u4f5c\u4e3avec4\u7684\u6784\u9020\u5668\u7684\u53c2\u6570 vertexColor = vec4(0.5, 0.0, 0.0, 1.0); // \u628a\u8f93\u51fa\u53d8\u91cf\u8bbe\u7f6e\u4e3a\u6697\u7ea2\u8272 } \u7247\u6bb5\u7740\u8272\u5668 #version 330 core out vec4 FragColor; in vec4 vertexColor; // \u4ece\u9876\u70b9\u7740\u8272\u5668\u4f20\u6765\u7684\u8f93\u5165\u53d8\u91cf\uff08\u540d\u79f0\u76f8\u540c\u3001\u7c7b\u578b\u76f8\u540c\uff09 void main() { FragColor = vertexColor; } \u4f60\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u58f0\u660e\u4e86\u4e00\u4e2a vertexColor \u53d8\u91cf\u4f5c\u4e3a vec4 \u8f93\u51fa\uff0c\u5e76\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u58f0\u660e\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u7684 vertexColor \u3002\u7531\u4e8e\u5b83\u4eec\u540d\u5b57\u76f8\u540c\u4e14\u7c7b\u578b\u76f8\u540c\uff0c\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u7684 vertexColor \u5c31\u548c\u9876\u70b9\u7740\u8272\u5668\u4e2d\u7684 vertexColor \u94fe\u63a5\u4e86\u3002\u7531\u4e8e\u6211\u4eec\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5c06\u989c\u8272\u8bbe\u7f6e\u4e3a\u6df1\u7ea2\u8272\uff0c\u6700\u7ec8\u7684\u7247\u6bb5\u4e5f\u662f\u6df1\u7ea2\u8272\u7684\u3002\u4e0b\u9762\u7684\u56fe\u7247\u5c55\u793a\u4e86\u8f93\u51fa\u7ed3\u679c\uff1a \u5b8c\u6210\u4e86\uff01\u6211\u4eec\u6210\u529f\u5730\u4ece\u9876\u70b9\u7740\u8272\u5668\u5411\u7247\u6bb5\u7740\u8272\u5668\u53d1\u9001\u6570\u636e\u3002\u8ba9\u6211\u4eec\u66f4\u4e0a\u4e00\u5c42\u697c\uff0c\u770b\u770b\u80fd\u5426\u4ece\u5e94\u7528\u7a0b\u5e8f\u4e2d\u76f4\u63a5\u7ed9\u7247\u6bb5\u7740\u8272\u5668\u53d1\u9001\u4e00\u4e2a\u989c\u8272\uff01","title":"\u8f93\u5165\u4e0e\u8f93\u51fa"},{"location":"01%20Getting%20started/05%20Shaders/#uniform","text":"Uniform \u662f\u53e6\u4e00\u79cd\u4ece\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u5728 CPU \u4e0a\u4f20\u9012\u6570\u636e\u5230 GPU \u4e0a\u7684\u7740\u8272\u5668\u7684\u65b9\u5f0f\uff0c\u4f46uniform\u548c\u9876\u70b9\u5c5e\u6027\u6709\u4e9b\u4e0d\u540c\u3002\u9996\u5148\uff0cuniform\u662f \u5168\u5c40\u7684 (Global)\u3002\u5168\u5c40\u610f\u5473\u7740uniform\u53d8\u91cf\u5fc5\u987b\u5728\u6bcf\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\u5bf9\u8c61\u4e2d\u90fd\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u800c\u4e14\u5b83\u53ef\u4ee5\u88ab\u7740\u8272\u5668\u7a0b\u5e8f\u7684\u4efb\u610f\u7740\u8272\u5668\u5728\u4efb\u610f\u9636\u6bb5\u8bbf\u95ee\u3002\u7b2c\u4e8c\uff0c\u65e0\u8bba\u4f60\u628auniform\u503c\u8bbe\u7f6e\u6210\u4ec0\u4e48\uff0cuniform\u4f1a\u4e00\u76f4\u4fdd\u5b58\u5b83\u4eec\u7684\u6570\u636e\uff0c\u76f4\u5230\u5b83\u4eec\u88ab\u91cd\u7f6e\u6216\u66f4\u65b0\u3002 \u8981\u5728 GLSL \u4e2d\u58f0\u660e uniform\uff0c\u6211\u4eec\u53ea\u9700\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528 uniform \u5173\u952e\u5b57\uff0c\u5e76\u5e26\u4e0a\u7c7b\u578b\u548c\u540d\u79f0\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u65b0\u58f0\u660e\u7684 uniform\u3002\u6211\u4eec\u6765\u770b\u770b\u8fd9\u6b21\u662f\u5426\u80fd\u901a\u8fc7uniform\u8bbe\u7f6e\u4e09\u89d2\u5f62\u7684\u989c\u8272\uff1a #version 330 core out vec4 FragColor; uniform vec4 ourColor; // \u5728OpenGL\u7a0b\u5e8f\u4ee3\u7801\u4e2d\u8bbe\u5b9a\u8fd9\u4e2a\u53d8\u91cf void main() { FragColor = ourColor; } \u6211\u4eec\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u58f0\u660e\u4e86\u4e00\u4e2auniform vec4 \u7684 ourColor \uff0c\u5e76\u628a\u7247\u6bb5\u7740\u8272\u5668\u7684\u8f93\u51fa\u989c\u8272\u8bbe\u7f6e\u4e3auniform\u503c\u7684\u5185\u5bb9\u3002\u56e0\u4e3auniform\u662f\u5168\u5c40\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4efb\u4f55\u7740\u8272\u5668\u4e2d\u5b9a\u4e49\u5b83\u4eec\uff0c\u800c\u65e0\u9700\u901a\u8fc7\u9876\u70b9\u7740\u8272\u5668\u4f5c\u4e3a\u4e2d\u4ecb\u3002\u9876\u70b9\u7740\u8272\u5668\u4e2d\u4e0d\u9700\u8981\u8fd9\u4e2auniform\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u7528\u5728\u90a3\u91cc\u5b9a\u4e49\u5b83\u3002 Attention \u5982\u679c\u4f60\u58f0\u660e\u4e86\u4e00\u4e2auniform\u5374\u5728GLSL\u4ee3\u7801\u4e2d\u6ca1\u7528\u8fc7\uff0c\u7f16\u8bd1\u5668\u4f1a\u9759\u9ed8\u79fb\u9664\u8fd9\u4e2a\u53d8\u91cf\uff0c\u5bfc\u81f4\u6700\u540e\u7f16\u8bd1\u51fa\u7684\u7248\u672c\u4e2d\u5e76\u4e0d\u4f1a\u5305\u542b\u5b83\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u51e0\u4e2a\u975e\u5e38\u9ebb\u70e6\u7684\u9519\u8bef\uff0c\u8bb0\u4f4f\u8fd9\u70b9\uff01 \u8fd9\u4e2auniform\u73b0\u5728\u8fd8\u662f\u7a7a\u7684\uff1b\u6211\u4eec\u8fd8\u6ca1\u6709\u7ed9\u5b83\u6dfb\u52a0\u4efb\u4f55\u6570\u636e\uff0c\u6240\u4ee5\u4e0b\u9762\u6211\u4eec\u5c31\u505a\u8fd9\u4ef6\u4e8b\u3002\u6211\u4eec\u9996\u5148\u9700\u8981\u627e\u5230\u7740\u8272\u5668\u4e2duniform\u5c5e\u6027\u7684\u7d22\u5f15/\u4f4d\u7f6e\u503c\u3002\u5f53\u6211\u4eec\u5f97\u5230uniform\u7684\u7d22\u5f15/\u4f4d\u7f6e\u503c\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u66f4\u65b0\u5b83\u7684\u503c\u4e86\u3002\u8fd9\u6b21\u6211\u4eec\u4e0d\u53bb\u7ed9\u50cf\u7d20\u4f20\u9012\u5355\u72ec\u4e00\u4e2a\u989c\u8272\uff0c\u800c\u662f\u8ba9\u5b83\u968f\u7740\u65f6\u95f4\u6539\u53d8\u989c\u8272\uff1a float timeValue = glfwGetTime(); float greenValue = (sin(timeValue) / 2.0f) + 0.5f; int vertexColorLocation = glGetUniformLocation(shaderProgram, \"ourColor\"); glUseProgram(shaderProgram); glUniform4f(vertexColorLocation, 0.0f, greenValue, 0.0f, 1.0f); \u9996\u5148\u6211\u4eec\u901a\u8fc7 glfwGetTime() \u83b7\u53d6\u8fd0\u884c\u7684\u79d2\u6570\u3002\u7136\u540e\u6211\u4eec\u4f7f\u7528 sin \u51fd\u6570\u8ba9\u989c\u8272\u57280.0\u52301.0\u4e4b\u95f4\u6539\u53d8\uff0c\u6700\u540e\u5c06\u7ed3\u679c\u50a8\u5b58\u5230 greenValue \u91cc\u3002 \u63a5\u7740\uff0c\u6211\u4eec\u7528 glGetUniformLocation \u67e5\u8be2uniform ourColor \u7684\u4f4d\u7f6e\u503c\u3002\u6211\u4eec\u4e3a\u67e5\u8be2\u51fd\u6570\u63d0\u4f9b\u7740\u8272\u5668\u7a0b\u5e8f\u548cuniform\u7684\u540d\u5b57\uff08\u8fd9\u662f\u6211\u4eec\u5e0c\u671b\u83b7\u5f97\u7684\u4f4d\u7f6e\u503c\u7684\u6765\u6e90\uff09\u3002\u5982\u679c glGetUniformLocation \u8fd4\u56de -1 \u5c31\u4ee3\u8868\u6ca1\u6709\u627e\u5230\u8fd9\u4e2a\u4f4d\u7f6e\u503c\u3002\u6700\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 glUniform4f \u51fd\u6570\u8bbe\u7f6euniform\u503c\u3002\u6ce8\u610f\uff0c\u67e5\u8be2uniform\u5730\u5740\u4e0d\u8981\u6c42\u4f60\u4e4b\u524d\u4f7f\u7528\u8fc7\u7740\u8272\u5668\u7a0b\u5e8f\uff0c\u4f46\u662f\u66f4\u65b0\u4e00\u4e2auniform\u4e4b\u524d\u4f60 \u5fc5\u987b \u5148\u4f7f\u7528\u7a0b\u5e8f\uff08\u8c03\u7528 glUseProgram )\uff0c\u56e0\u4e3a\u5b83\u662f\u5728\u5f53\u524d\u6fc0\u6d3b\u7684\u7740\u8272\u5668\u7a0b\u5e8f\u4e2d\u8bbe\u7f6euniform\u7684\u3002 Important \u56e0\u4e3aOpenGL\u5728\u5176\u6838\u5fc3\u662f\u4e00\u4e2aC\u5e93\uff0c\u6240\u4ee5\u5b83\u4e0d\u652f\u6301\u7c7b\u578b\u91cd\u8f7d\uff0c\u5728\u51fd\u6570\u53c2\u6570\u4e0d\u540c\u7684\u65f6\u5019\u5c31\u8981\u4e3a\u5176\u5b9a\u4e49\u65b0\u7684\u51fd\u6570\uff1b glUniform \u662f\u4e00\u4e2a\u5178\u578b\u4f8b\u5b50\u3002\u8fd9\u4e2a\u51fd\u6570\u6709\u4e00\u4e2a\u7279\u5b9a\u7684\u540e\u7f00\uff0c\u6807\u8bc6\u8bbe\u5b9a\u7684uniform\u7684\u7c7b\u578b\u3002\u53ef\u80fd\u7684\u540e\u7f00\u6709\uff1a \u540e\u7f00 \u542b\u4e49 f \u51fd\u6570\u9700\u8981\u4e00\u4e2afloat\u4f5c\u4e3a\u5b83\u7684\u503c i \u51fd\u6570\u9700\u8981\u4e00\u4e2aint\u4f5c\u4e3a\u5b83\u7684\u503c ui \u51fd\u6570\u9700\u8981\u4e00\u4e2aunsigned int\u4f5c\u4e3a\u5b83\u7684\u503c 3f \u51fd\u6570\u9700\u89813\u4e2afloat\u4f5c\u4e3a\u5b83\u7684\u503c fv \u51fd\u6570\u9700\u8981\u4e00\u4e2afloat\u5411\u91cf/\u6570\u7ec4\u4f5c\u4e3a\u5b83\u7684\u503c \u6bcf\u5f53\u4f60\u6253\u7b97\u914d\u7f6e\u4e00\u4e2aOpenGL\u7684\u9009\u9879\u65f6\u5c31\u53ef\u4ee5\u7b80\u5355\u5730\u6839\u636e\u8fd9\u4e9b\u89c4\u5219\u9009\u62e9\u9002\u5408\u4f60\u7684\u6570\u636e\u7c7b\u578b\u7684\u91cd\u8f7d\u51fd\u6570\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u91cc\uff0c\u6211\u4eec\u5e0c\u671b\u5206\u522b\u8bbe\u5b9auniform\u76844\u4e2afloat\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u901a\u8fc7 glUniform4f \u4f20\u9012\u6211\u4eec\u7684\u6570\u636e(\u6ce8\u610f\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 fv \u7248\u672c)\u3002 \u73b0\u5728\u4f60\u77e5\u9053\u5982\u4f55\u8bbe\u7f6euniform\u53d8\u91cf\u7684\u503c\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u6765\u6e32\u67d3\u4e86\u3002\u5982\u679c\u6211\u4eec\u6253\u7b97\u8ba9\u989c\u8272\u6162\u6162\u53d8\u5316\uff0c\u6211\u4eec\u5c31\u8981\u5728\u6e38\u620f\u5faa\u73af\u7684\u6bcf\u4e00\u6b21\u8fed\u4ee3\u4e2d\uff08\u6240\u4ee5\u4ed6\u4f1a\u9010\u5e27\u6539\u53d8\uff09\u66f4\u65b0\u8fd9\u4e2auniform\uff0c\u5426\u5219\u4e09\u89d2\u5f62\u5c31\u4e0d\u4f1a\u6539\u53d8\u989c\u8272\u3002\u4e0b\u9762\u6211\u4eec\u5c31\u8ba1\u7b97 greenValue \u7136\u540e\u6bcf\u4e2a\u6e32\u67d3\u8fed\u4ee3\u90fd\u66f4\u65b0\u8fd9\u4e2auniform\uff1a while(!glfwWindowShouldClose(window)) { // \u8f93\u5165 processInput(window); // \u6e32\u67d3 // \u6e05\u9664\u989c\u8272\u7f13\u51b2 glClearColor(0.2f, 0.3f, 0.3f, 1.0f); glClear(GL_COLOR_BUFFER_BIT); // \u8bb0\u5f97\u6fc0\u6d3b\u7740\u8272\u5668 glUseProgram(shaderProgram); // \u66f4\u65b0uniform\u989c\u8272 float timeValue = glfwGetTime(); float greenValue = sin(timeValue) / 2.0f + 0.5f; int vertexColorLocation = glGetUniformLocation(shaderProgram, \"ourColor\"); glUniform4f(vertexColorLocation, 0.0f, greenValue, 0.0f, 1.0f); // \u7ed8\u5236\u4e09\u89d2\u5f62 glBindVertexArray(VAO); glDrawArrays(GL_TRIANGLES, 0, 3); // \u4ea4\u6362\u7f13\u51b2\u5e76\u67e5\u8be2IO\u4e8b\u4ef6 glfwSwapBuffers(window); glfwPollEvents(); } \u8fd9\u91cc\u7684\u4ee3\u7801\u5bf9\u4e4b\u524d\u4ee3\u7801\u662f\u4e00\u6b21\u975e\u5e38\u76f4\u63a5\u7684\u4fee\u6539\u3002\u8fd9\u6b21\uff0c\u6211\u4eec\u5728\u6bcf\u6b21\u8fed\u4ee3\u7ed8\u5236\u4e09\u89d2\u5f62\u524d\u5148\u66f4\u65b0uniform\u503c\u3002\u5982\u679c\u4f60\u6b63\u786e\u66f4\u65b0\u4e86uniform\uff0c\u4f60\u4f1a\u770b\u5230\u4f60\u7684\u4e09\u89d2\u5f62\u9010\u6e10\u7531\u7eff\u53d8\u9ed1\u518d\u53d8\u56de\u7eff\u8272\u3002 \u5982\u679c\u4f60\u5728\u54ea\u513f\u5361\u4f4f\u4e86\uff0c\u53ef\u4ee5\u5230 \u8fd9\u91cc \u67e5\u770b\u6e90\u7801\u3002 \u53ef\u4ee5\u770b\u5230\uff0cuniform\u5bf9\u4e8e\u8bbe\u7f6e\u4e00\u4e2a\u5728\u6e32\u67d3\u8fed\u4ee3\u4e2d\u4f1a\u6539\u53d8\u7684\u5c5e\u6027\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u5de5\u5177\uff0c\u5b83\u4e5f\u662f\u4e00\u4e2a\u5728\u7a0b\u5e8f\u548c\u7740\u8272\u5668\u95f4\u6570\u636e\u4ea4\u4e92\u7684\u5f88\u597d\u5de5\u5177\uff0c\u4f46\u5047\u5982\u6211\u4eec\u6253\u7b97\u4e3a\u6bcf\u4e2a\u9876\u70b9\u8bbe\u7f6e\u4e00\u4e2a\u989c\u8272\u7684\u65f6\u5019\u8be5\u600e\u4e48\u529e\uff1f\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c31\u4e0d\u5f97\u4e0d\u58f0\u660e\u548c\u9876\u70b9\u6570\u76ee\u4e00\u6837\u591a\u7684uniform\u4e86\u3002\u5728\u8fd9\u4e00\u95ee\u9898\u4e0a\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5728\u9876\u70b9\u5c5e\u6027\u4e2d\u5305\u542b\u66f4\u591a\u7684\u6570\u636e\uff0c\u8fd9\u662f\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u505a\u7684\u4e8b\u60c5\u3002","title":"Uniform"},{"location":"01%20Getting%20started/05%20Shaders/#_5","text":"\u5728\u524d\u9762\u7684\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u4e86\u89e3\u4e86\u5982\u4f55\u586b\u5145VBO\u3001\u914d\u7f6e\u9876\u70b9\u5c5e\u6027\u6307\u9488\u4ee5\u53ca\u5982\u4f55\u628a\u5b83\u4eec\u90fd\u50a8\u5b58\u5230\u4e00\u4e2aVAO\u91cc\u3002\u8fd9\u6b21\uff0c\u6211\u4eec\u540c\u6837\u6253\u7b97\u628a\u989c\u8272\u6570\u636e\u52a0\u8fdb\u9876\u70b9\u6570\u636e\u4e2d\u3002\u6211\u4eec\u5c06\u628a\u989c\u8272\u6570\u636e\u6dfb\u52a0\u4e3a3\u4e2afloat\u503c\u81f3 vertices \u6570\u7ec4\u3002\u6211\u4eec\u5c06\u628a\u4e09\u89d2\u5f62\u7684\u4e09\u4e2a\u89d2\u5206\u522b\u6307\u5b9a\u4e3a\u7ea2\u8272\u3001\u7eff\u8272\u548c\u84dd\u8272\uff1a float vertices[] = { // \u4f4d\u7f6e // \u989c\u8272 0.5f, -0.5f, 0.0f, 1.0f, 0.0f, 0.0f, // \u53f3\u4e0b -0.5f, -0.5f, 0.0f, 0.0f, 1.0f, 0.0f, // \u5de6\u4e0b 0.0f, 0.5f, 0.0f, 0.0f, 0.0f, 1.0f // \u9876\u90e8 }; \u7531\u4e8e\u73b0\u5728\u6709\u66f4\u591a\u7684\u6570\u636e\u8981\u53d1\u9001\u5230\u9876\u70b9\u7740\u8272\u5668\uff0c\u6211\u4eec\u6709\u5fc5\u8981\u53bb\u8c03\u6574\u4e00\u4e0b\u9876\u70b9\u7740\u8272\u5668\uff0c\u4f7f\u5b83\u80fd\u591f\u63a5\u6536\u989c\u8272\u503c\u4f5c\u4e3a\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\u8f93\u5165\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u6211\u4eec\u7528 layout \u6807\u8bc6\u7b26\u6765\u628a aColor \u5c5e\u6027\u7684\u4f4d\u7f6e\u503c\u8bbe\u7f6e\u4e3a1\uff1a #version 330 core layout (location = 0) in vec3 aPos; // \u4f4d\u7f6e\u53d8\u91cf\u7684\u5c5e\u6027\u4f4d\u7f6e\u503c\u4e3a 0 layout (location = 1) in vec3 aColor; // \u989c\u8272\u53d8\u91cf\u7684\u5c5e\u6027\u4f4d\u7f6e\u503c\u4e3a 1 out vec3 ourColor; // \u5411\u7247\u6bb5\u7740\u8272\u5668\u8f93\u51fa\u4e00\u4e2a\u989c\u8272 void main() { gl_Position = vec4(aPos, 1.0); ourColor = aColor; // \u5c06ourColor\u8bbe\u7f6e\u4e3a\u6211\u4eec\u4ece\u9876\u70b9\u6570\u636e\u90a3\u91cc\u5f97\u5230\u7684\u8f93\u5165\u989c\u8272 } \u7531\u4e8e\u6211\u4eec\u4e0d\u518d\u4f7f\u7528uniform\u6765\u4f20\u9012\u7247\u6bb5\u7684\u989c\u8272\u4e86\uff0c\u73b0\u5728\u4f7f\u7528 ourColor \u8f93\u51fa\u53d8\u91cf\uff0c\u6211\u4eec\u5fc5\u987b\u518d\u4fee\u6539\u4e00\u4e0b\u7247\u6bb5\u7740\u8272\u5668\uff1a #version 330 core out vec4 FragColor; in vec3 ourColor; void main() { FragColor = vec4(ourColor, 1.0); } \u56e0\u4e3a\u6211\u4eec\u6dfb\u52a0\u4e86\u53e6\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\uff0c\u5e76\u4e14\u66f4\u65b0\u4e86VBO\u7684\u5185\u5b58\uff0c\u6211\u4eec\u5c31\u5fc5\u987b\u91cd\u65b0\u914d\u7f6e\u9876\u70b9\u5c5e\u6027\u6307\u9488\u3002\u66f4\u65b0\u540e\u7684VBO\u5185\u5b58\u4e2d\u7684\u6570\u636e\u73b0\u5728\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a \u77e5\u9053\u4e86\u73b0\u5728\u4f7f\u7528\u7684\u5e03\u5c40\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 glVertexAttribPointer \u51fd\u6570\u66f4\u65b0\u9876\u70b9\u683c\u5f0f\uff0c // \u4f4d\u7f6e\u5c5e\u6027 glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 6 * sizeof(float), (void*)0); glEnableVertexAttribArray(0); // \u989c\u8272\u5c5e\u6027 glVertexAttribPointer(1, 3, GL_FLOAT, GL_FALSE, 6 * sizeof(float), (void*)(3* sizeof(float))); glEnableVertexAttribArray(1); glVertexAttribPointer \u51fd\u6570\u7684\u524d\u51e0\u4e2a\u53c2\u6570\u6bd4\u8f83\u660e\u4e86\u3002\u8fd9\u6b21\u6211\u4eec\u914d\u7f6e\u5c5e\u6027\u4f4d\u7f6e\u503c\u4e3a1\u7684\u9876\u70b9\u5c5e\u6027\u3002\u989c\u8272\u503c\u67093\u4e2afloat\u90a3\u4e48\u5927\uff0c\u6211\u4eec\u4e0d\u53bb\u6807\u51c6\u5316\u8fd9\u4e9b\u503c\u3002 \u7531\u4e8e\u6211\u4eec\u73b0\u5728\u6709\u4e86\u4e24\u4e2a\u9876\u70b9\u5c5e\u6027\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u91cd\u65b0\u8ba1\u7b97 \u6b65\u957f \u503c\u3002\u4e3a\u83b7\u5f97\u6570\u636e\u961f\u5217\u4e2d\u4e0b\u4e00\u4e2a\u5c5e\u6027\u503c\uff08\u6bd4\u5982\u4f4d\u7f6e\u5411\u91cf\u7684\u4e0b\u4e2a x \u5206\u91cf\uff09\u6211\u4eec\u5fc5\u987b\u5411\u53f3\u79fb\u52a86\u4e2afloat\uff0c\u5176\u4e2d3\u4e2a\u662f\u4f4d\u7f6e\u503c\uff0c\u53e6\u59163\u4e2a\u662f\u989c\u8272\u503c\u3002\u8fd9\u4f7f\u6211\u4eec\u7684\u6b65\u957f\u503c\u4e3a6\u4e58\u4ee5float\u7684\u5b57\u8282\u6570\uff08=24\u5b57\u8282\uff09\u3002 \u540c\u6837\uff0c\u8fd9\u6b21\u6211\u4eec\u5fc5\u987b\u6307\u5b9a\u4e00\u4e2a\u504f\u79fb\u91cf\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u9876\u70b9\u6765\u8bf4\uff0c\u4f4d\u7f6e\u9876\u70b9\u5c5e\u6027\u5728\u524d\uff0c\u6240\u4ee5\u5b83\u7684\u504f\u79fb\u91cf\u662f0\u3002\u989c\u8272\u5c5e\u6027\u7d27\u968f\u4f4d\u7f6e\u6570\u636e\u4e4b\u540e\uff0c\u6240\u4ee5\u504f\u79fb\u91cf\u5c31\u662f 3 * sizeof(float) \uff0c\u7528\u5b57\u8282\u6765\u8ba1\u7b97\u5c31\u662f12\u5b57\u8282\u3002 \u8fd0\u884c\u7a0b\u5e8f\u4f60\u5e94\u8be5\u4f1a\u770b\u5230\u5982\u4e0b\u7ed3\u679c\uff1a \u5982\u679c\u4f60\u5728\u54ea\u5361\u4f4f\u4e86\uff0c\u53ef\u4ee5\u5728 \u8fd9\u91cc \u67e5\u770b\u6e90\u7801\u3002 \u8fd9\u4e2a\u56fe\u7247\u53ef\u80fd\u4e0d\u662f\u4f60\u6240\u671f\u671b\u7684\u90a3\u79cd\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u63d0\u4f9b\u4e863\u4e2a\u989c\u8272\uff0c\u800c\u4e0d\u662f\u6211\u4eec\u73b0\u5728\u770b\u5230\u7684\u5927\u8c03\u8272\u677f\u3002\u8fd9\u662f\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u8fdb\u884c\u7684\u6240\u8c13 \u7247\u6bb5\u63d2\u503c (Fragment Interpolation)\u7684\u7ed3\u679c\u3002\u5f53\u6e32\u67d3\u4e00\u4e2a\u4e09\u89d2\u5f62\u65f6\uff0c\u5149\u6805\u5316(Rasterization)\u9636\u6bb5\u901a\u5e38\u4f1a\u9020\u6210\u6bd4\u539f\u6307\u5b9a\u9876\u70b9\u66f4\u591a\u7684\u7247\u6bb5\u3002\u5149\u6805\u4f1a\u6839\u636e\u6bcf\u4e2a\u7247\u6bb5\u5728\u4e09\u89d2\u5f62\u5f62\u72b6\u4e0a\u6240\u5904\u76f8\u5bf9\u4f4d\u7f6e\u51b3\u5b9a\u8fd9\u4e9b\u7247\u6bb5\u7684\u4f4d\u7f6e\u3002 \u57fa\u4e8e\u8fd9\u4e9b\u4f4d\u7f6e\uff0c\u5b83\u4f1a \u63d2\u503c (Interpolate)\u6240\u6709\u7247\u6bb5\u7740\u8272\u5668\u7684\u8f93\u5165\u53d8\u91cf\u3002\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u7ebf\u6bb5\uff0c\u4e0a\u9762\u7684\u7aef\u70b9\u662f\u7eff\u8272\u7684\uff0c\u4e0b\u9762\u7684\u7aef\u70b9\u662f\u84dd\u8272\u7684\u3002\u5982\u679c\u4e00\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u5728\u7ebf\u6bb5\u768470%\u7684\u4f4d\u7f6e\u8fd0\u884c\uff0c\u5b83\u7684\u989c\u8272\u8f93\u5165\u5c5e\u6027\u5c31\u4f1a\u662f\u4e00\u4e2a\u7eff\u8272\u548c\u84dd\u8272\u7684\u7ebf\u6027\u7ed3\u5408\uff1b\u66f4\u7cbe\u786e\u5730\u8bf4\u5c31\u662f30%\u84dd + 70%\u7eff\u3002 \u8fd9\u6b63\u662f\u5728\u8fd9\u4e2a\u4e09\u89d2\u5f62\u4e2d\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u6211\u4eec\u67093\u4e2a\u9876\u70b9\uff0c\u548c\u76f8\u5e94\u76843\u4e2a\u989c\u8272\uff0c\u4ece\u8fd9\u4e2a\u4e09\u89d2\u5f62\u7684\u50cf\u7d20\u6765\u770b\u5b83\u53ef\u80fd\u5305\u542b50000\u5de6\u53f3\u7684\u7247\u6bb5\uff0c\u7247\u6bb5\u7740\u8272\u5668\u4e3a\u8fd9\u4e9b\u50cf\u7d20\u8fdb\u884c\u63d2\u503c\u989c\u8272\u3002\u5982\u679c\u4f60\u4ed4\u7ec6\u770b\u8fd9\u4e9b\u989c\u8272\u5c31\u5e94\u8be5\u80fd\u660e\u767d\u4e86\uff1a\u7ea2\u9996\u5148\u53d8\u6210\u5230\u7d2b\u518d\u53d8\u4e3a\u84dd\u8272\u3002\u7247\u6bb5\u63d2\u503c\u4f1a\u88ab\u5e94\u7528\u5230\u7247\u6bb5\u7740\u8272\u5668\u7684\u6240\u6709\u8f93\u5165\u5c5e\u6027\u4e0a\u3002","title":"\u66f4\u591a\u5c5e\u6027\uff01"},{"location":"01%20Getting%20started/05%20Shaders/#_6","text":"\u7f16\u5199\u3001\u7f16\u8bd1\u3001\u7ba1\u7406\u7740\u8272\u5668\u662f\u4ef6\u9ebb\u70e6\u4e8b\u3002\u5728\u7740\u8272\u5668\u4e3b\u9898\u7684\u6700\u540e\uff0c\u6211\u4eec\u4f1a\u5199\u4e00\u4e2a\u7c7b\u6765\u8ba9\u6211\u4eec\u7684\u751f\u6d3b\u8f7b\u677e\u4e00\u70b9\uff0c\u5b83\u53ef\u4ee5\u4ece\u786c\u76d8\u8bfb\u53d6\u7740\u8272\u5668\uff0c\u7136\u540e\u7f16\u8bd1\u5e76\u94fe\u63a5\u5b83\u4eec\uff0c\u5e76\u5bf9\u5b83\u4eec\u8fdb\u884c\u9519\u8bef\u68c0\u6d4b\uff0c\u8fd9\u5c31\u53d8\u5f97\u5f88\u597d\u7528\u4e86\u3002\u8fd9\u4e5f\u4f1a\u8ba9\u4f60\u4e86\u89e3\u8be5\u5982\u4f55\u5c01\u88c5\u76ee\u524d\u6240\u5b66\u7684\u77e5\u8bc6\u5230\u4e00\u4e2a\u62bd\u8c61\u5bf9\u8c61\u4e2d\u3002 \u6211\u4eec\u4f1a\u628a\u7740\u8272\u5668\u7c7b\u5168\u90e8\u653e\u5728\u5728\u5934\u6587\u4ef6\u91cc\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u5b66\u4e60\u7528\u9014\uff0c\u5f53\u7136\u4e5f\u65b9\u4fbf\u79fb\u690d\u3002\u6211\u4eec\u5148\u6765\u6dfb\u52a0\u5fc5\u8981\u7684include\uff0c\u5e76\u5b9a\u4e49\u7c7b\u7ed3\u6784\uff1a #ifndef SHADER_H #define SHADER_H #include <glad/glad.h>; // \u5305\u542bglad\u6765\u83b7\u53d6\u6240\u6709\u7684\u5fc5\u987bOpenGL\u5934\u6587\u4ef6 #include <string> #include <fstream> #include <sstream> #include <iostream> class Shader { public: // \u7a0b\u5e8fID unsigned int ID; // \u6784\u9020\u5668\u8bfb\u53d6\u5e76\u6784\u5efa\u7740\u8272\u5668 Shader(const char* vertexPath, const char* fragmentPath); // \u4f7f\u7528/\u6fc0\u6d3b\u7a0b\u5e8f void use(); // uniform\u5de5\u5177\u51fd\u6570 void setBool(const std::string &name, bool value) const; void setInt(const std::string &name, int value) const; void setFloat(const std::string &name, float value) const; }; #endif Important \u5728\u4e0a\u9762\uff0c\u6211\u4eec\u5728\u5934\u6587\u4ef6\u9876\u90e8\u4f7f\u7528\u4e86\u51e0\u4e2a \u9884\u5904\u7406\u6307\u4ee4 (Preprocessor Directives)\u3002\u8fd9\u4e9b\u9884\u5904\u7406\u6307\u4ee4\u4f1a\u544a\u77e5\u4f60\u7684\u7f16\u8bd1\u5668\u53ea\u5728\u5b83\u6ca1\u88ab\u5305\u542b\u8fc7\u7684\u60c5\u51b5\u4e0b\u624d\u5305\u542b\u548c\u7f16\u8bd1\u8fd9\u4e2a\u5934\u6587\u4ef6\uff0c\u5373\u4f7f\u591a\u4e2a\u6587\u4ef6\u90fd\u5305\u542b\u4e86\u8fd9\u4e2a\u7740\u8272\u5668\u5934\u6587\u4ef6\u3002\u5b83\u662f\u7528\u6765\u9632\u6b62\u94fe\u63a5\u51b2\u7a81\u7684\u3002 \u7740\u8272\u5668\u7c7b\u50a8\u5b58\u4e86\u7740\u8272\u5668\u7a0b\u5e8f\u7684ID\u3002\u5b83\u7684\u6784\u9020\u5668\u9700\u8981\u9876\u70b9\u548c\u7247\u6bb5\u7740\u8272\u5668\u6e90\u4ee3\u7801\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u6e90\u7801\u7684\u6587\u672c\u6587\u4ef6\u50a8\u5b58\u5728\u786c\u76d8\u4e0a\u4e86\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u4e3a\u4e86\u8ba9\u6211\u4eec\u7684\u751f\u6d3b\u66f4\u8f7b\u677e\u4e00\u70b9\uff0c\u8fd8\u52a0\u5165\u4e86\u4e00\u4e9b\u5de5\u5177\u51fd\u6570\uff1a use \u7528\u6765\u6fc0\u6d3b\u7740\u8272\u5668\u7a0b\u5e8f\uff0c\u6240\u6709\u7684 set\u2026 \u51fd\u6570\u80fd\u591f\u67e5\u8be2\u4e00\u4e2aunform\u7684\u4f4d\u7f6e\u503c\u5e76\u8bbe\u7f6e\u5b83\u7684\u503c\u3002","title":"\u6211\u4eec\u81ea\u5df1\u7684\u7740\u8272\u5668\u7c7b"},{"location":"01%20Getting%20started/05%20Shaders/#_7","text":"\u6211\u4eec\u4f7f\u7528C++\u6587\u4ef6\u6d41\u8bfb\u53d6\u7740\u8272\u5668\u5185\u5bb9\uff0c\u50a8\u5b58\u5230\u51e0\u4e2a string \u5bf9\u8c61\u91cc\uff1a Shader(const char* vertexPath, const char* fragmentPath) { // 1. \u4ece\u6587\u4ef6\u8def\u5f84\u4e2d\u83b7\u53d6\u9876\u70b9/\u7247\u6bb5\u7740\u8272\u5668 std::string vertexCode; std::string fragmentCode; std::ifstream vShaderFile; std::ifstream fShaderFile; // \u4fdd\u8bc1ifstream\u5bf9\u8c61\u53ef\u4ee5\u629b\u51fa\u5f02\u5e38\uff1a vShaderFile.exceptions (std::ifstream::failbit | std::ifstream::badbit); fShaderFile.exceptions (std::ifstream::failbit | std::ifstream::badbit); try { // \u6253\u5f00\u6587\u4ef6 vShaderFile.open(vertexPath); fShaderFile.open(fragmentPath); std::stringstream vShaderStream, fShaderStream; // \u8bfb\u53d6\u6587\u4ef6\u7684\u7f13\u51b2\u5185\u5bb9\u5230\u6570\u636e\u6d41\u4e2d vShaderStream << vShaderFile.rdbuf(); fShaderStream << fShaderFile.rdbuf(); // \u5173\u95ed\u6587\u4ef6\u5904\u7406\u5668 vShaderFile.close(); fShaderFile.close(); // \u8f6c\u6362\u6570\u636e\u6d41\u5230string vertexCode = vShaderStream.str(); fragmentCode = fShaderStream.str(); } catch(std::ifstream::failure e) { std::cout << \"ERROR::SHADER::FILE_NOT_SUCCESFULLY_READ\" << std::endl; } const char* vShaderCode = vertexCode.c_str(); const char* fShaderCode = fragmentCode.c_str(); [...] \u4e0b\u4e00\u6b65\uff0c\u6211\u4eec\u9700\u8981\u7f16\u8bd1\u548c\u94fe\u63a5\u7740\u8272\u5668\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u4e5f\u5c06\u68c0\u67e5\u7f16\u8bd1/\u94fe\u63a5\u662f\u5426\u5931\u8d25\uff0c\u5982\u679c\u5931\u8d25\u5219\u6253\u5370\u7f16\u8bd1\u65f6\u9519\u8bef\uff0c\u8c03\u8bd5\u7684\u65f6\u5019\u8fd9\u4e9b\u9519\u8bef\u8f93\u51fa\u4f1a\u53ca\u5176\u91cd\u8981\uff08\u4f60\u603b\u4f1a\u9700\u8981\u8fd9\u4e9b\u9519\u8bef\u65e5\u5fd7\u7684\uff09\uff1a // 2. \u7f16\u8bd1\u7740\u8272\u5668 unsigned int vertex, fragment; int success; char infoLog[512]; // \u9876\u70b9\u7740\u8272\u5668 vertex = glCreateShader(GL_VERTEX_SHADER); glShaderSource(vertex, 1, &vShaderCode, NULL); glCompileShader(vertex); // \u6253\u5370\u7f16\u8bd1\u9519\u8bef\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09 glGetShaderiv(vertex, GL_COMPILE_STATUS, &success); if(!success) { glGetShaderInfoLog(vertex, 512, NULL, infoLog); std::cout << \"ERROR::SHADER::VERTEX::COMPILATION_FAILED\\n\" << infoLog << std::endl; }; // \u7247\u6bb5\u7740\u8272\u5668\u4e5f\u7c7b\u4f3c [...] // \u7740\u8272\u5668\u7a0b\u5e8f ID = glCreateProgram(); glAttachShader(ID, vertex); glAttachShader(ID, fragment); glLinkProgram(ID); // \u6253\u5370\u8fde\u63a5\u9519\u8bef\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09 glGetProgramiv(ID, GL_LINK_STATUS, &success); if(!success) { glGetProgramInfoLog(ID, 512, NULL, infoLog); std::cout << \"ERROR::SHADER::PROGRAM::LINKING_FAILED\\n\" << infoLog << std::endl; } // \u5220\u9664\u7740\u8272\u5668\uff0c\u5b83\u4eec\u5df2\u7ecf\u94fe\u63a5\u5230\u6211\u4eec\u7684\u7a0b\u5e8f\u4e2d\u4e86\uff0c\u5df2\u7ecf\u4e0d\u518d\u9700\u8981\u4e86 glDeleteShader(vertex); glDeleteShader(fragment); use \u51fd\u6570\u975e\u5e38\u7b80\u5355\uff1a void use() { glUseProgram(ID); } uniform\u7684setter\u51fd\u6570\u4e5f\u5f88\u7c7b\u4f3c\uff1a void setBool(const std::string &name, bool value) const { glUniform1i(glGetUniformLocation(ID, name.c_str()), (int)value); } void setInt(const std::string &name, int value) const { glUniform1i(glGetUniformLocation(ID, name.c_str()), value); } void setFloat(const std::string &name, float value) const { glUniform1f(glGetUniformLocation(ID, name.c_str()), value); } \u73b0\u5728\u6211\u4eec\u5c31\u5199\u5b8c\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684 \u7740\u8272\u5668\u7c7b \u3002\u4f7f\u7528\u8fd9\u4e2a\u7740\u8272\u5668\u7c7b\u5f88\u7b80\u5355\uff1b\u53ea\u8981\u521b\u5efa\u4e00\u4e2a\u7740\u8272\u5668\u5bf9\u8c61\uff0c\u4ece\u90a3\u4e00\u70b9\u5f00\u59cb\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528\u4e86\uff1a Shader ourShader(\"path/to/shaders/shader.vs\", \"path/to/shaders/shader.fs\"); ... while(...) { ourShader.use(); ourShader.setFloat(\"someUniform\", 1.0f); DrawStuff(); } \u6211\u4eec\u628a\u9876\u70b9\u548c\u7247\u6bb5\u7740\u8272\u5668\u50a8\u5b58\u4e3a\u4e24\u4e2a\u53eb\u505a shader.vs \u548c shader.fs \u7684\u6587\u4ef6\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u559c\u6b22\u7684\u540d\u5b57\u547d\u540d\u7740\u8272\u5668\u6587\u4ef6\uff1b\u6211\u81ea\u5df1\u89c9\u5f97\u7528 .vs \u548c .fs \u4f5c\u4e3a\u6269\u5c55\u540d\u5f88\u76f4\u89c2\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u4f7f\u7528 \u65b0\u7740\u8272\u5668\u7c7b \u7684\u6e90\u4ee3\u7801\u3002\u6ce8\u610f\u4f60\u53ef\u4ee5\u70b9\u51fb\u6e90\u7801\u4e2d\u7684\u7740\u8272\u5668\u6587\u4ef6\u8def\u5f84\u6765\u67e5\u770b\u6bcf\u4e00\u4e2a\u7740\u8272\u5668\u7684\u6e90\u4ee3\u7801\u3002","title":"\u4ece\u6587\u4ef6\u8bfb\u53d6"},{"location":"01%20Getting%20started/05%20Shaders/#_8","text":"\u4fee\u6539\u9876\u70b9\u7740\u8272\u5668\u8ba9\u4e09\u89d2\u5f62\u4e0a\u4e0b\u98a0\u5012\uff1a \u53c2\u8003\u89e3\u7b54 \u4f7f\u7528uniform\u5b9a\u4e49\u4e00\u4e2a\u6c34\u5e73\u504f\u79fb\u91cf\uff0c\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u8fd9\u4e2a\u504f\u79fb\u91cf\u628a\u4e09\u89d2\u5f62\u79fb\u52a8\u5230\u5c4f\u5e55\u53f3\u4fa7\uff1a \u53c2\u8003\u89e3\u7b54 \u4f7f\u7528 out \u5173\u952e\u5b57\u628a\u9876\u70b9\u4f4d\u7f6e\u8f93\u51fa\u5230\u7247\u6bb5\u7740\u8272\u5668\uff0c\u5e76\u5c06\u7247\u6bb5\u7684\u989c\u8272\u8bbe\u7f6e\u4e3a\u4e0e\u9876\u70b9\u4f4d\u7f6e\u76f8\u7b49\uff08\u6765\u770b\u770b\u8fde\u9876\u70b9\u4f4d\u7f6e\u503c\u90fd\u5728\u4e09\u89d2\u5f62\u4e2d\u88ab\u63d2\u503c\u7684\u7ed3\u679c\uff09\u3002\u505a\u5b8c\u8fd9\u4e9b\u540e\uff0c\u5c1d\u8bd5\u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898\uff1a\u4e3a\u4ec0\u4e48\u5728\u4e09\u89d2\u5f62\u7684\u5de6\u4e0b\u89d2\u662f\u9ed1\u7684?\uff1a \u53c2\u8003\u89e3\u7b54","title":"\u7ec3\u4e60"},{"location":"01%20Getting%20started/06%20Textures/","text":"\u7eb9\u7406 \u539f\u6587 Textures \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django , Krasjet, Geequlim, BLumia \u6821\u5bf9 AoZhang \u8bd1\u6ce8 \u6ce8\u610f\uff0c\u7531\u4e8e\u4f5c\u8005\u5bf9\u6559\u7a0b\u505a\u51fa\u4e86\u66f4\u65b0\uff0c\u4e4b\u524d\u672c\u8282\u4f7f\u7528\u7684\u662fSOIL\u5e93\uff0c\u4f46\u73b0\u5728\u6539\u4e3a\u4e86\u4f7f\u7528 stb_image.h \u5e93\uff0c\u5173\u4e8eSOIL\u914d\u7f6e\u7684\u90e8\u5206\u73b0\u5728\u5df2\u7ecf\u88ab\u4fee\u6539\uff0c\u4f46\u6211\u4ecd\u51b3\u5b9a\u5c06\u8fd9\u90e8\u5206\u6559\u7a0b\u4fdd\u7559\u8d77\u6765\uff0c\u653e\u5230\u4e00\u4e2a\u5386\u53f2\u5b58\u6863\u4e2d\uff0c\u5982\u679c\u6709\u9700\u8981\u7684\u8bdd\u53ef\u4ee5\u5230 \u8fd9\u91cc \u6765\u67e5\u770b\u3002 \u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u9876\u70b9\u6dfb\u52a0\u989c\u8272\u6765\u589e\u52a0\u56fe\u5f62\u7684\u7ec6\u8282\uff0c\u4ece\u800c\u521b\u5efa\u51fa\u6709\u8da3\u7684\u56fe\u50cf\u3002\u4f46\u662f\uff0c\u5982\u679c\u60f3\u8ba9\u56fe\u5f62\u770b\u8d77\u6765\u66f4\u771f\u5b9e\uff0c\u6211\u4eec\u5c31\u5fc5\u987b\u6709\u8db3\u591f\u591a\u7684\u9876\u70b9\uff0c\u4ece\u800c\u6307\u5b9a\u8db3\u591f\u591a\u7684\u989c\u8272\u3002\u8fd9\u5c06\u4f1a\u4ea7\u751f\u5f88\u591a\u989d\u5916\u5f00\u9500\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u6a21\u578b\u90fd\u4f1a\u9700\u6c42\u66f4\u591a\u7684\u9876\u70b9\uff0c\u6bcf\u4e2a\u9876\u70b9\u53c8\u9700\u6c42\u4e00\u4e2a\u989c\u8272\u5c5e\u6027\u3002 \u827a\u672f\u5bb6\u548c\u7a0b\u5e8f\u5458\u66f4\u559c\u6b22\u4f7f\u7528 \u7eb9\u7406 (Texture)\u3002\u7eb9\u7406\u662f\u4e00\u4e2a2D\u56fe\u7247\uff08\u751a\u81f3\u4e5f\u67091D\u548c3D\u7684\u7eb9\u7406\uff09\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u6dfb\u52a0\u7269\u4f53\u7684\u7ec6\u8282\uff1b\u4f60\u53ef\u4ee5\u60f3\u8c61\u7eb9\u7406\u662f\u4e00\u5f20\u7ed8\u6709\u7816\u5757\u7684\u7eb8\uff0c\u65e0\u7f1d\u6298\u53e0\u8d34\u5408\u5230\u4f60\u76843D\u7684\u623f\u5b50\u4e0a\uff0c\u8fd9\u6837\u4f60\u7684\u623f\u5b50\u770b\u8d77\u6765\u5c31\u50cf\u6709\u7816\u5899\u5916\u8868\u4e86\u3002\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u5f20\u56fe\u7247\u4e0a\u63d2\u5165\u975e\u5e38\u591a\u7684\u7ec6\u8282\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8ba9\u7269\u4f53\u975e\u5e38\u7cbe\u7ec6\u800c\u4e0d\u7528\u6307\u5b9a\u989d\u5916\u7684\u9876\u70b9\u3002 Important \u9664\u4e86\u56fe\u50cf\u4ee5\u5916\uff0c\u7eb9\u7406\u4e5f\u53ef\u4ee5\u88ab\u7528\u6765\u50a8\u5b58\u5927\u91cf\u7684\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u53ef\u4ee5\u53d1\u9001\u5230\u7740\u8272\u5668\u4e0a\uff0c\u4f46\u662f\u8fd9\u4e0d\u662f\u6211\u4eec\u73b0\u5728\u7684\u4e3b\u9898\u3002 \u4e0b\u9762\u4f60\u4f1a\u770b\u5230\u4e4b\u524d\u6559\u7a0b\u7684\u90a3\u4e2a\u4e09\u89d2\u5f62\u8d34\u4e0a\u4e86\u4e00\u5f20 \u7816\u5899 \u56fe\u7247\u3002 \u4e3a\u4e86\u80fd\u591f\u628a\u7eb9\u7406\u6620\u5c04(Map)\u5230\u4e09\u89d2\u5f62\u4e0a\uff0c\u6211\u4eec\u9700\u8981\u6307\u5b9a\u4e09\u89d2\u5f62\u7684\u6bcf\u4e2a\u9876\u70b9\u5404\u81ea\u5bf9\u5e94\u7eb9\u7406\u7684\u54ea\u4e2a\u90e8\u5206\u3002\u8fd9\u6837\u6bcf\u4e2a\u9876\u70b9\u5c31\u4f1a\u5173\u8054\u7740\u4e00\u4e2a \u7eb9\u7406\u5750\u6807 (Texture Coordinate)\uff0c\u7528\u6765\u6807\u660e\u8be5\u4ece\u7eb9\u7406\u56fe\u50cf\u7684\u54ea\u4e2a\u90e8\u5206\u91c7\u6837\uff08\u8bd1\u6ce8\uff1a\u91c7\u96c6\u7247\u6bb5\u989c\u8272\uff09\u3002\u4e4b\u540e\u5728\u56fe\u5f62\u7684\u5176\u5b83\u7247\u6bb5\u4e0a\u8fdb\u884c\u7247\u6bb5\u63d2\u503c(Fragment Interpolation)\u3002 \u7eb9\u7406\u5750\u6807\u5728x\u548cy\u8f74\u4e0a\uff0c\u8303\u56f4\u4e3a0\u52301\u4e4b\u95f4\uff08\u6ce8\u610f\u6211\u4eec\u4f7f\u7528\u7684\u662f2D\u7eb9\u7406\u56fe\u50cf\uff09\u3002\u4f7f\u7528\u7eb9\u7406\u5750\u6807\u83b7\u53d6\u7eb9\u7406\u989c\u8272\u53eb\u505a \u91c7\u6837 (Sampling)\u3002\u7eb9\u7406\u5750\u6807\u8d77\u59cb\u4e8e(0, 0)\uff0c\u4e5f\u5c31\u662f\u7eb9\u7406\u56fe\u7247\u7684\u5de6\u4e0b\u89d2\uff0c\u7ec8\u6b62\u4e8e(1, 1)\uff0c\u5373\u7eb9\u7406\u56fe\u7247\u7684\u53f3\u4e0a\u89d2\u3002\u4e0b\u9762\u7684\u56fe\u7247\u5c55\u793a\u4e86\u6211\u4eec\u662f\u5982\u4f55\u628a\u7eb9\u7406\u5750\u6807\u6620\u5c04\u5230\u4e09\u89d2\u5f62\u4e0a\u7684\u3002 \u6211\u4eec\u4e3a\u4e09\u89d2\u5f62\u6307\u5b9a\u4e863\u4e2a\u7eb9\u7406\u5750\u6807\u70b9\u3002\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u6211\u4eec\u5e0c\u671b\u4e09\u89d2\u5f62\u7684\u5de6\u4e0b\u89d2\u5bf9\u5e94\u7eb9\u7406\u7684\u5de6\u4e0b\u89d2\uff0c\u56e0\u6b64\u6211\u4eec\u628a\u4e09\u89d2\u5f62\u5de6\u4e0b\u89d2\u9876\u70b9\u7684\u7eb9\u7406\u5750\u6807\u8bbe\u7f6e\u4e3a(0, 0)\uff1b\u540c\u7406\u53f3\u4e0b\u65b9\u7684\u9876\u70b9\u8bbe\u7f6e\u4e3a(1, 0)\uff1b\u4e09\u89d2\u5f62\u7684\u4e0a\u9876\u70b9\u5bf9\u5e94\u4e8e\u56fe\u7247\u7684\u4e0a\u4e2d\u4f4d\u7f6e\u6240\u4ee5\u6211\u4eec\u628a\u5b83\u7684\u7eb9\u7406\u5750\u6807\u8bbe\u7f6e\u4e3a(0.5, 1.0)\u3002\u6211\u4eec\u53ea\u8981\u7ed9\u9876\u70b9\u7740\u8272\u5668\u4f20\u9012\u8fd9\u4e09\u4e2a\u7eb9\u7406\u5750\u6807\u5c31\u884c\u4e86\uff0c\u63a5\u4e0b\u6765\u5b83\u4eec\u4f1a\u88ab\u4f20\u5230\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u5b83\u4f1a\u4e3a\u6bcf\u4e2a\u7247\u6bb5\u8fdb\u884c\u7eb9\u7406\u5750\u6807\u7684\u63d2\u503c\u3002 \u7eb9\u7406\u5750\u6807\u770b\u8d77\u6765\u5c31\u50cf\u8fd9\u6837\uff1a float texCoords[] = { 0.0f, 0.0f, // \u5de6\u4e0b\u89d2 1.0f, 0.0f, // \u53f3\u4e0b\u89d2 0.5f, 1.0f // \u4e0a\u4e2d }; \u5bf9\u7eb9\u7406\u91c7\u6837\u7684\u89e3\u91ca\u975e\u5e38\u5bbd\u677e\uff0c\u5b83\u53ef\u4ee5\u91c7\u7528\u51e0\u79cd\u4e0d\u540c\u7684\u63d2\u503c\u65b9\u5f0f\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u81ea\u5df1\u544a\u8bc9OpenGL\u8be5\u600e\u6837\u5bf9\u7eb9\u7406 \u91c7\u6837 \u3002 \u7eb9\u7406\u73af\u7ed5\u65b9\u5f0f \u7eb9\u7406\u5750\u6807\u7684\u8303\u56f4\u901a\u5e38\u662f\u4ece(0, 0)\u5230(1, 1)\uff0c\u90a3\u5982\u679c\u6211\u4eec\u628a\u7eb9\u7406\u5750\u6807\u8bbe\u7f6e\u5728\u8303\u56f4\u4e4b\u5916\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1fOpenGL\u9ed8\u8ba4\u7684\u884c\u4e3a\u662f\u91cd\u590d\u8fd9\u4e2a\u7eb9\u7406\u56fe\u50cf\uff08\u6211\u4eec\u57fa\u672c\u4e0a\u5ffd\u7565\u6d6e\u70b9\u7eb9\u7406\u5750\u6807\u7684\u6574\u6570\u90e8\u5206\uff09\uff0c\u4f46OpenGL\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u9009\u62e9\uff1a \u73af\u7ed5\u65b9\u5f0f \u63cf\u8ff0 GL_REPEAT \u5bf9\u7eb9\u7406\u7684\u9ed8\u8ba4\u884c\u4e3a\u3002\u91cd\u590d\u7eb9\u7406\u56fe\u50cf\u3002 GL_MIRRORED_REPEAT \u548c GL_REPEAT \u4e00\u6837\uff0c\u4f46\u6bcf\u6b21\u91cd\u590d\u56fe\u7247\u662f\u955c\u50cf\u653e\u7f6e\u7684\u3002 GL_CLAMP_TO_EDGE \u7eb9\u7406\u5750\u6807\u4f1a\u88ab\u7ea6\u675f\u57280\u52301\u4e4b\u95f4\uff0c\u8d85\u51fa\u7684\u90e8\u5206\u4f1a\u91cd\u590d\u7eb9\u7406\u5750\u6807\u7684\u8fb9\u7f18\uff0c\u4ea7\u751f\u4e00\u79cd\u8fb9\u7f18\u88ab\u62c9\u4f38\u7684\u6548\u679c\u3002 GL_CLAMP_TO_BORDER \u8d85\u51fa\u7684\u5750\u6807\u4e3a\u7528\u6237\u6307\u5b9a\u7684\u8fb9\u7f18\u989c\u8272\u3002 \u5f53\u7eb9\u7406\u5750\u6807\u8d85\u51fa\u9ed8\u8ba4\u8303\u56f4\u65f6\uff0c\u6bcf\u4e2a\u9009\u9879\u90fd\u6709\u4e0d\u540c\u7684\u89c6\u89c9\u6548\u679c\u8f93\u51fa\u3002\u6211\u4eec\u6765\u770b\u770b\u8fd9\u4e9b\u7eb9\u7406\u56fe\u50cf\u7684\u4f8b\u5b50\uff1a \u524d\u9762\u63d0\u5230\u7684\u6bcf\u4e2a\u9009\u9879\u90fd\u53ef\u4ee5\u4f7f\u7528 glTexParameter* \u51fd\u6570\u5bf9\u5355\u72ec\u7684\u4e00\u4e2a\u5750\u6807\u8f74\u8bbe\u7f6e\uff08 s \u3001 t \uff08\u5982\u679c\u662f\u4f7f\u75283D\u7eb9\u7406\u90a3\u4e48\u8fd8\u6709\u4e00\u4e2a r \uff09\u5b83\u4eec\u548c x \u3001 y \u3001 z \u662f\u7b49\u4ef7\u7684\uff09\uff1a glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_MIRRORED_REPEAT); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_MIRRORED_REPEAT); \u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u4e86\u7eb9\u7406\u76ee\u6807\uff1b\u6211\u4eec\u4f7f\u7528\u7684\u662f2D\u7eb9\u7406\uff0c\u56e0\u6b64\u7eb9\u7406\u76ee\u6807\u662f GL_TEXTURE_2D \u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u9700\u8981\u6211\u4eec\u6307\u5b9a\u8bbe\u7f6e\u7684\u9009\u9879\u4e0e\u5e94\u7528\u7684\u7eb9\u7406\u8f74\u3002\u6211\u4eec\u6253\u7b97\u914d\u7f6e\u7684\u662f WRAP \u9009\u9879\uff0c\u5e76\u4e14\u6307\u5b9a S \u548c T \u8f74\u3002\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u9700\u8981\u6211\u4eec\u4f20\u9012\u4e00\u4e2a\u73af\u7ed5\u65b9\u5f0f(Wrapping)\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2dOpenGL\u4f1a\u7ed9\u5f53\u524d\u6fc0\u6d3b\u7684\u7eb9\u7406\u8bbe\u5b9a\u7eb9\u7406\u73af\u7ed5\u65b9\u5f0f\u4e3a GL_MIRRORED_REPEAT \u3002 \u5982\u679c\u6211\u4eec\u9009\u62e9 GL_CLAMP_TO_BORDER \u9009\u9879\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u6307\u5b9a\u4e00\u4e2a\u8fb9\u7f18\u7684\u989c\u8272\u3002\u8fd9\u9700\u8981\u4f7f\u7528 glTexParameter \u51fd\u6570\u7684 fv \u540e\u7f00\u5f62\u5f0f\uff0c\u7528 GL_TEXTURE_BORDER_COLOR \u4f5c\u4e3a\u5b83\u7684\u9009\u9879\uff0c\u5e76\u4e14\u4f20\u9012\u4e00\u4e2afloat\u6570\u7ec4\u4f5c\u4e3a\u8fb9\u7f18\u7684\u989c\u8272\u503c\uff1a float borderColor[] = { 1.0f, 1.0f, 0.0f, 1.0f }; glTexParameterfv(GL_TEXTURE_2D, GL_TEXTURE_BORDER_COLOR, borderColor); \u7eb9\u7406\u8fc7\u6ee4 \u7eb9\u7406\u5750\u6807\u4e0d\u4f9d\u8d56\u4e8e\u5206\u8fa8\u7387(Resolution)\uff0c\u5b83\u53ef\u4ee5\u662f\u4efb\u610f\u6d6e\u70b9\u503c\uff0c\u6240\u4ee5OpenGL\u9700\u8981\u77e5\u9053\u600e\u6837\u5c06\u7eb9\u7406\u50cf\u7d20(Texture Pixel\uff0c\u4e5f\u53ebTexel\uff0c\u8bd1\u6ce81)\u6620\u5c04\u5230\u7eb9\u7406\u5750\u6807\u3002\u5f53\u4f60\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u7269\u4f53\u4f46\u662f\u7eb9\u7406\u7684\u5206\u8fa8\u7387\u5f88\u4f4e\u7684\u65f6\u5019\u8fd9\u5c31\u53d8\u5f97\u5f88\u91cd\u8981\u4e86\u3002\u4f60\u53ef\u80fd\u5df2\u7ecf\u731c\u5230\u4e86\uff0cOpenGL\u4e5f\u6709\u5bf9\u4e8e \u7eb9\u7406\u8fc7\u6ee4 (Texture Filtering)\u7684\u9009\u9879\u3002\u7eb9\u7406\u8fc7\u6ee4\u6709\u5f88\u591a\u4e2a\u9009\u9879\uff0c\u4f46\u662f\u73b0\u5728\u6211\u4eec\u53ea\u8ba8\u8bba\u6700\u91cd\u8981\u7684\u4e24\u79cd\uff1a GL_NEAREST \u548c GL_LINEAR \u3002 \u8bd1\u6ce81 Texture Pixel\u4e5f\u53ebTexel\uff0c\u4f60\u53ef\u4ee5\u60f3\u8c61\u4f60\u6253\u5f00\u4e00\u5f20 .jpg \u683c\u5f0f\u56fe\u7247\uff0c\u4e0d\u65ad\u653e\u5927\u4f60\u4f1a\u53d1\u73b0\u5b83\u662f\u7531\u65e0\u6570\u50cf\u7d20\u70b9\u7ec4\u6210\u7684\uff0c\u8fd9\u4e2a\u70b9\u5c31\u662f\u7eb9\u7406\u50cf\u7d20\uff1b\u6ce8\u610f\u4e0d\u8981\u548c\u7eb9\u7406\u5750\u6807\u641e\u6df7\uff0c\u7eb9\u7406\u5750\u6807\u662f\u4f60\u7ed9\u6a21\u578b\u9876\u70b9\u8bbe\u7f6e\u7684\u90a3\u4e2a\u6570\u7ec4\uff0cOpenGL\u4ee5\u8fd9\u4e2a\u9876\u70b9\u7684\u7eb9\u7406\u5750\u6807\u6570\u636e\u53bb\u67e5\u627e\u7eb9\u7406\u56fe\u50cf\u4e0a\u7684\u50cf\u7d20\uff0c\u7136\u540e\u8fdb\u884c\u91c7\u6837\u63d0\u53d6\u7eb9\u7406\u50cf\u7d20\u7684\u989c\u8272\u3002 GL_NEAREST \uff08\u4e5f\u53eb \u90bb\u8fd1\u8fc7\u6ee4 \uff0cNearest Neighbor Filtering\uff09\u662fOpenGL\u9ed8\u8ba4\u7684\u7eb9\u7406\u8fc7\u6ee4\u65b9\u5f0f\u3002\u5f53\u8bbe\u7f6e\u4e3a GL_NEAREST \u7684\u65f6\u5019\uff0cOpenGL\u4f1a\u9009\u62e9\u4e2d\u5fc3\u70b9\u6700\u63a5\u8fd1\u7eb9\u7406\u5750\u6807\u7684\u90a3\u4e2a\u50cf\u7d20\u3002\u4e0b\u56fe\u4e2d\u4f60\u53ef\u4ee5\u770b\u5230\u56db\u4e2a\u50cf\u7d20\uff0c\u52a0\u53f7\u4ee3\u8868\u7eb9\u7406\u5750\u6807\u3002\u5de6\u4e0a\u89d2\u90a3\u4e2a\u7eb9\u7406\u50cf\u7d20\u7684\u4e2d\u5fc3\u8ddd\u79bb\u7eb9\u7406\u5750\u6807\u6700\u8fd1\uff0c\u6240\u4ee5\u5b83\u4f1a\u88ab\u9009\u62e9\u4e3a\u6837\u672c\u989c\u8272\uff1a GL_LINEAR \uff08\u4e5f\u53eb \u7ebf\u6027\u8fc7\u6ee4 \uff0c(Bi)linear Filtering\uff09\u5b83\u4f1a\u57fa\u4e8e\u7eb9\u7406\u5750\u6807\u9644\u8fd1\u7684\u7eb9\u7406\u50cf\u7d20\uff0c\u8ba1\u7b97\u51fa\u4e00\u4e2a\u63d2\u503c\uff0c\u8fd1\u4f3c\u51fa\u8fd9\u4e9b\u7eb9\u7406\u50cf\u7d20\u4e4b\u95f4\u7684\u989c\u8272\u3002\u4e00\u4e2a\u7eb9\u7406\u50cf\u7d20\u7684\u4e2d\u5fc3\u8ddd\u79bb\u7eb9\u7406\u5750\u6807\u8d8a\u8fd1\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7eb9\u7406\u50cf\u7d20\u7684\u989c\u8272\u5bf9\u6700\u7ec8\u7684\u6837\u672c\u989c\u8272\u7684\u8d21\u732e\u8d8a\u5927\u3002\u4e0b\u56fe\u4e2d\u4f60\u53ef\u4ee5\u770b\u5230\u8fd4\u56de\u7684\u989c\u8272\u662f\u90bb\u8fd1\u50cf\u7d20\u7684\u6df7\u5408\u8272\uff1a \u90a3\u4e48\u8fd9\u4e24\u79cd\u7eb9\u7406\u8fc7\u6ee4\u65b9\u5f0f\u6709\u600e\u6837\u7684\u89c6\u89c9\u6548\u679c\u5462\uff1f\u8ba9\u6211\u4eec\u770b\u770b\u5728\u4e00\u4e2a\u5f88\u5927\u7684\u7269\u4f53\u4e0a\u5e94\u7528\u4e00\u5f20\u4f4e\u5206\u8fa8\u7387\u7684\u7eb9\u7406\u4f1a\u53d1\u751f\u4ec0\u4e48\u5427\uff08\u7eb9\u7406\u88ab\u653e\u5927\u4e86\uff0c\u6bcf\u4e2a\u7eb9\u7406\u50cf\u7d20\u90fd\u80fd\u770b\u5230\uff09\uff1a GL_NEAREST \u4ea7\u751f\u4e86\u9897\u7c92\u72b6\u7684\u56fe\u6848\uff0c\u6211\u4eec\u80fd\u591f\u6e05\u6670\u770b\u5230\u7ec4\u6210\u7eb9\u7406\u7684\u50cf\u7d20\uff0c\u800c GL_LINEAR \u80fd\u591f\u4ea7\u751f\u66f4\u5e73\u6ed1\u7684\u56fe\u6848\uff0c\u5f88\u96be\u770b\u51fa\u5355\u4e2a\u7684\u7eb9\u7406\u50cf\u7d20\u3002 GL_LINEAR \u53ef\u4ee5\u4ea7\u751f\u66f4\u771f\u5b9e\u7684\u8f93\u51fa\uff0c\u4f46\u6709\u4e9b\u5f00\u53d1\u8005\u66f4\u559c\u6b228-bit\u98ce\u683c\uff0c\u6240\u4ee5\u4ed6\u4eec\u4f1a\u7528 GL_NEAREST \u9009\u9879\u3002 \u5f53\u8fdb\u884c \u653e\u5927 (Magnify)\u548c \u7f29\u5c0f (Minify)\u64cd\u4f5c\u7684\u65f6\u5019\u53ef\u4ee5\u8bbe\u7f6e\u7eb9\u7406\u8fc7\u6ee4\u7684\u9009\u9879\uff0c\u6bd4\u5982\u4f60\u53ef\u4ee5\u5728\u7eb9\u7406\u88ab\u7f29\u5c0f\u7684\u65f6\u5019\u4f7f\u7528\u90bb\u8fd1\u8fc7\u6ee4\uff0c\u88ab\u653e\u5927\u65f6\u4f7f\u7528\u7ebf\u6027\u8fc7\u6ee4\u3002\u6211\u4eec\u9700\u8981\u4f7f\u7528 glTexParameter* \u51fd\u6570\u4e3a\u653e\u5927\u548c\u7f29\u5c0f\u6307\u5b9a\u8fc7\u6ee4\u65b9\u5f0f\u3002\u8fd9\u6bb5\u4ee3\u7801\u770b\u8d77\u6765\u4f1a\u548c\u7eb9\u7406\u73af\u7ed5\u65b9\u5f0f\u7684\u8bbe\u7f6e\u5f88\u76f8\u4f3c\uff1a glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR); \u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406 \u60f3\u8c61\u4e00\u4e0b\uff0c\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5305\u542b\u7740\u4e0a\u5343\u7269\u4f53\u7684\u5927\u623f\u95f4\uff0c\u6bcf\u4e2a\u7269\u4f53\u4e0a\u90fd\u6709\u7eb9\u7406\u3002\u6709\u4e9b\u7269\u4f53\u4f1a\u5f88\u8fdc\uff0c\u4f46\u5176\u7eb9\u7406\u4f1a\u62e5\u6709\u4e0e\u8fd1\u5904\u7269\u4f53\u540c\u6837\u9ad8\u7684\u5206\u8fa8\u7387\u3002\u7531\u4e8e\u8fdc\u5904\u7684\u7269\u4f53\u53ef\u80fd\u53ea\u4ea7\u751f\u5f88\u5c11\u7684\u7247\u6bb5\uff0cOpenGL\u4ece\u9ad8\u5206\u8fa8\u7387\u7eb9\u7406\u4e2d\u4e3a\u8fd9\u4e9b\u7247\u6bb5\u83b7\u53d6\u6b63\u786e\u7684\u989c\u8272\u503c\u5c31\u5f88\u56f0\u96be\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u5bf9\u4e00\u4e2a\u8de8\u8fc7\u7eb9\u7406\u5f88\u5927\u90e8\u5206\u7684\u7247\u6bb5\u53ea\u62fe\u53d6\u4e00\u4e2a\u7eb9\u7406\u989c\u8272\u3002\u5728\u5c0f\u7269\u4f53\u4e0a\u8fd9\u4f1a\u4ea7\u751f\u4e0d\u771f\u5b9e\u7684\u611f\u89c9\uff0c\u66f4\u4e0d\u7528\u8bf4\u5bf9\u5b83\u4eec\u4f7f\u7528\u9ad8\u5206\u8fa8\u7387\u7eb9\u7406\u6d6a\u8d39\u5185\u5b58\u7684\u95ee\u9898\u4e86\u3002 OpenGL\u4f7f\u7528\u4e00\u79cd\u53eb\u505a \u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406 (Mipmap)\u7684\u6982\u5ff5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5b83\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u4e00\u7cfb\u5217\u7684\u7eb9\u7406\u56fe\u50cf\uff0c\u540e\u4e00\u4e2a\u7eb9\u7406\u56fe\u50cf\u662f\u524d\u4e00\u4e2a\u7684\u4e8c\u5206\u4e4b\u4e00\u3002\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u80cc\u540e\u7684\u7406\u5ff5\u5f88\u7b80\u5355\uff1a\u8ddd\u89c2\u5bdf\u8005\u7684\u8ddd\u79bb\u8d85\u8fc7\u4e00\u5b9a\u7684\u9608\u503c\uff0cOpenGL\u4f1a\u4f7f\u7528\u4e0d\u540c\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\uff0c\u5373\u6700\u9002\u5408\u7269\u4f53\u7684\u8ddd\u79bb\u7684\u90a3\u4e2a\u3002\u7531\u4e8e\u8ddd\u79bb\u8fdc\uff0c\u89e3\u6790\u5ea6\u4e0d\u9ad8\u4e5f\u4e0d\u4f1a\u88ab\u7528\u6237\u6ce8\u610f\u5230\u3002\u540c\u65f6\uff0c\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u53e6\u4e00\u52a0\u5206\u4e4b\u5904\u662f\u5b83\u7684\u6027\u80fd\u975e\u5e38\u597d\u3002\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u662f\u4ec0\u4e48\u6837\u5b50\u7684\uff1a \u624b\u5de5\u4e3a\u6bcf\u4e2a\u7eb9\u7406\u56fe\u50cf\u521b\u5efa\u4e00\u7cfb\u5217\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u5f88\u9ebb\u70e6\uff0c\u5e78\u597dOpenGL\u6709\u4e00\u4e2a glGenerateMipmap \u51fd\u6570\uff0c\u5728\u521b\u5efa\u5b8c\u4e00\u4e2a\u7eb9\u7406\u540e\u8c03\u7528\u5b83OpenGL\u5c31\u4f1a\u627f\u62c5\u63a5\u4e0b\u6765\u7684\u6240\u6709\u5de5\u4f5c\u4e86\u3002\u540e\u9762\u7684\u6559\u7a0b\u4e2d\u4f60\u4f1a\u770b\u5230\u8be5\u5982\u4f55\u4f7f\u7528\u5b83\u3002 \u5728\u6e32\u67d3\u4e2d\u5207\u6362\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7ea7\u522b(Level)\u65f6\uff0cOpenGL\u5728\u4e24\u4e2a\u4e0d\u540c\u7ea7\u522b\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u5c42\u4e4b\u95f4\u4f1a\u4ea7\u751f\u4e0d\u771f\u5b9e\u7684\u751f\u786c\u8fb9\u754c\u3002\u5c31\u50cf\u666e\u901a\u7684\u7eb9\u7406\u8fc7\u6ee4\u4e00\u6837\uff0c\u5207\u6362\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7ea7\u522b\u65f6\u4f60\u4e5f\u53ef\u4ee5\u5728\u4e24\u4e2a\u4e0d\u540c\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7ea7\u522b\u4e4b\u95f4\u4f7f\u7528 NEAREST \u548c LINEAR \u8fc7\u6ee4\u3002\u4e3a\u4e86\u6307\u5b9a\u4e0d\u540c\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7ea7\u522b\u4e4b\u95f4\u7684\u8fc7\u6ee4\u65b9\u5f0f\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u56db\u4e2a\u9009\u9879\u4e2d\u7684\u4e00\u4e2a\u4ee3\u66ff\u539f\u6709\u7684\u8fc7\u6ee4\u65b9\u5f0f\uff1a \u8fc7\u6ee4\u65b9\u5f0f \u63cf\u8ff0 GL_NEAREST_MIPMAP_NEAREST \u4f7f\u7528\u6700\u90bb\u8fd1\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u6765\u5339\u914d\u50cf\u7d20\u5927\u5c0f\uff0c\u5e76\u4f7f\u7528\u90bb\u8fd1\u63d2\u503c\u8fdb\u884c\u7eb9\u7406\u91c7\u6837 GL_LINEAR_MIPMAP_NEAREST \u4f7f\u7528\u6700\u90bb\u8fd1\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7ea7\u522b\uff0c\u5e76\u4f7f\u7528\u7ebf\u6027\u63d2\u503c\u8fdb\u884c\u91c7\u6837 GL_NEAREST_MIPMAP_LINEAR \u5728\u4e24\u4e2a\u6700\u5339\u914d\u50cf\u7d20\u5927\u5c0f\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u4e4b\u95f4\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\uff0c\u4f7f\u7528\u90bb\u8fd1\u63d2\u503c\u8fdb\u884c\u91c7\u6837 GL_LINEAR_MIPMAP_LINEAR \u5728\u4e24\u4e2a\u90bb\u8fd1\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u4e4b\u95f4\u4f7f\u7528\u7ebf\u6027\u63d2\u503c\uff0c\u5e76\u4f7f\u7528\u7ebf\u6027\u63d2\u503c\u8fdb\u884c\u91c7\u6837 \u5c31\u50cf\u7eb9\u7406\u8fc7\u6ee4\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 glTexParameteri \u5c06\u8fc7\u6ee4\u65b9\u5f0f\u8bbe\u7f6e\u4e3a\u524d\u9762\u56db\u79cd\u63d0\u5230\u7684\u65b9\u6cd5\u4e4b\u4e00\uff1a glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR); \u4e00\u4e2a\u5e38\u89c1\u7684\u9519\u8bef\u662f\uff0c\u5c06\u653e\u5927\u8fc7\u6ee4\u7684\u9009\u9879\u8bbe\u7f6e\u4e3a\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u8fc7\u6ee4\u9009\u9879\u4e4b\u4e00\u3002\u8fd9\u6837\u6ca1\u6709\u4efb\u4f55\u6548\u679c\uff0c\u56e0\u4e3a\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u4e3b\u8981\u662f\u4f7f\u7528\u5728\u7eb9\u7406\u88ab\u7f29\u5c0f\u7684\u60c5\u51b5\u4e0b\u7684\uff1a\u7eb9\u7406\u653e\u5927\u4e0d\u4f1a\u4f7f\u7528\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\uff0c\u4e3a\u653e\u5927\u8fc7\u6ee4\u8bbe\u7f6e\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7684\u9009\u9879\u4f1a\u4ea7\u751f\u4e00\u4e2a GL_INVALID_ENUM \u9519\u8bef\u4ee3\u7801\u3002 \u52a0\u8f7d\u4e0e\u521b\u5efa\u7eb9\u7406 \u4f7f\u7528\u7eb9\u7406\u4e4b\u524d\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u628a\u5b83\u4eec\u52a0\u8f7d\u5230\u6211\u4eec\u7684\u5e94\u7528\u4e2d\u3002\u7eb9\u7406\u56fe\u50cf\u53ef\u80fd\u88ab\u50a8\u5b58\u4e3a\u5404\u79cd\u5404\u6837\u7684\u683c\u5f0f\uff0c\u6bcf\u79cd\u90fd\u6709\u81ea\u5df1\u7684\u6570\u636e\u7ed3\u6784\u548c\u6392\u5217\uff0c\u6240\u4ee5\u6211\u4eec\u5982\u4f55\u624d\u80fd\u628a\u8fd9\u4e9b\u56fe\u50cf\u52a0\u8f7d\u5230\u5e94\u7528\u4e2d\u5462\uff1f\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\u9009\u4e00\u4e2a\u9700\u8981\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u6bd4\u5982 .PNG \uff0c\u7136\u540e\u81ea\u5df1\u5199\u4e00\u4e2a\u56fe\u50cf\u52a0\u8f7d\u5668\uff0c\u628a\u56fe\u50cf\u8f6c\u5316\u4e3a\u5b57\u8282\u5e8f\u5217\u3002\u5199\u81ea\u5df1\u7684\u56fe\u50cf\u52a0\u8f7d\u5668\u867d\u7136\u4e0d\u96be\uff0c\u4f46\u4ecd\u7136\u633a\u9ebb\u70e6\u7684\uff0c\u800c\u4e14\u5982\u679c\u8981\u652f\u6301\u66f4\u591a\u6587\u4ef6\u683c\u5f0f\u5462\uff1f\u4f60\u5c31\u4e0d\u5f97\u4e0d\u4e3a\u6bcf\u79cd\u4f60\u5e0c\u671b\u652f\u6301\u7684\u683c\u5f0f\u5199\u52a0\u8f7d\u5668\u4e86\u3002 \u53e6\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u4e5f\u8bb8\u662f\u4e00\u79cd\u66f4\u597d\u7684\u9009\u62e9\uff0c\u4f7f\u7528\u4e00\u4e2a\u652f\u6301\u591a\u79cd\u6d41\u884c\u683c\u5f0f\u7684\u56fe\u50cf\u52a0\u8f7d\u5e93\u6765\u4e3a\u6211\u4eec\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u8981\u7528\u7684 stb_image.h \u5e93\u3002 stb_image.h stb_image.h \u662f Sean Barrett \u7684\u4e00\u4e2a\u975e\u5e38\u6d41\u884c\u7684\u5355\u5934\u6587\u4ef6\u56fe\u50cf\u52a0\u8f7d\u5e93\uff0c\u5b83\u80fd\u591f\u52a0\u8f7d\u5927\u90e8\u5206\u6d41\u884c\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u5e76\u4e14\u80fd\u591f\u5f88\u7b80\u5355\u5f97\u6574\u5408\u5230\u4f60\u7684\u5de5\u7a0b\u4e4b\u4e2d\u3002 stb_image.h \u53ef\u4ee5\u5728 \u8fd9\u91cc \u4e0b\u8f7d\u3002\u4e0b\u8f7d\u8fd9\u4e00\u4e2a\u5934\u6587\u4ef6\uff0c\u5c06\u5b83\u4ee5 stb_image.h \u7684\u540d\u5b57\u52a0\u5165\u4f60\u7684\u5de5\u7a0b\uff0c\u5e76\u53e6\u521b\u5efa\u4e00\u4e2a\u65b0\u7684C++\u6587\u4ef6\uff0c\u8f93\u5165\u4ee5\u4e0b\u4ee3\u7801\uff1a #define STB_IMAGE_IMPLEMENTATION #include \"stb_image.h\" \u901a\u8fc7\u5b9a\u4e49 STB_IMAGE_IMPLEMENTATION \uff0c\u9884\u5904\u7406\u5668\u4f1a\u4fee\u6539\u5934\u6587\u4ef6\uff0c\u8ba9\u5176\u53ea\u5305\u542b\u76f8\u5173\u7684\u51fd\u6570\u5b9a\u4e49\u6e90\u7801\uff0c\u7b49\u4e8e\u662f\u5c06\u8fd9\u4e2a\u5934\u6587\u4ef6\u53d8\u4e3a\u4e00\u4e2a .cpp \u6587\u4ef6\u4e86\u3002\u73b0\u5728\u53ea\u9700\u8981\u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\u5305\u542b stb_image.h \u5e76\u7f16\u8bd1\u5c31\u53ef\u4ee5\u4e86\u3002 \u4e0b\u9762\u7684\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u4e00\u5f20 \u6728\u7bb1 \u7684\u56fe\u7247\u3002\u8981\u4f7f\u7528 stb_image.h \u52a0\u8f7d\u56fe\u7247\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5b83\u7684 stbi_load \u51fd\u6570\uff1a int width, height, nrChannels; unsigned char *data = stbi_load(\"container.jpg\", &width, &height, &nrChannels, 0); \u8fd9\u4e2a\u51fd\u6570\u9996\u5148\u63a5\u53d7\u4e00\u4e2a\u56fe\u50cf\u6587\u4ef6\u7684\u4f4d\u7f6e\u4f5c\u4e3a\u8f93\u5165\u3002\u63a5\u4e0b\u6765\u5b83\u9700\u8981\u4e09\u4e2a int \u4f5c\u4e3a\u5b83\u7684\u7b2c\u4e8c\u3001\u7b2c\u4e09\u548c\u7b2c\u56db\u4e2a\u53c2\u6570\uff0c stb_image.h \u5c06\u4f1a\u7528\u56fe\u50cf\u7684 \u5bbd\u5ea6 \u3001 \u9ad8\u5ea6 \u548c \u989c\u8272\u901a\u9053\u7684\u4e2a\u6570 \u586b\u5145\u8fd9\u4e09\u4e2a\u53d8\u91cf\u3002\u6211\u4eec\u4e4b\u540e\u751f\u6210\u7eb9\u7406\u7684\u65f6\u5019\u4f1a\u7528\u5230\u7684\u56fe\u50cf\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u7684\u3002 \u751f\u6210\u7eb9\u7406 \u548c\u4e4b\u524d\u751f\u6210\u7684OpenGL\u5bf9\u8c61\u4e00\u6837\uff0c\u7eb9\u7406\u4e5f\u662f\u4f7f\u7528ID\u5f15\u7528\u7684\u3002\u8ba9\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\uff1a unsigned int texture; glGenTextures(1, &texture); glGenTextures \u51fd\u6570\u9996\u5148\u9700\u8981\u8f93\u5165\u751f\u6210\u7eb9\u7406\u7684\u6570\u91cf\uff0c\u7136\u540e\u628a\u5b83\u4eec\u50a8\u5b58\u5728\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684 unsigned int \u6570\u7ec4\u4e2d\uff08\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u53ea\u662f\u5355\u72ec\u7684\u4e00\u4e2a unsigned int \uff09\uff0c\u5c31\u50cf\u5176\u4ed6\u5bf9\u8c61\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u7ed1\u5b9a\u5b83\uff0c\u8ba9\u4e4b\u540e\u4efb\u4f55\u7684\u7eb9\u7406\u6307\u4ee4\u90fd\u53ef\u4ee5\u914d\u7f6e\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\uff1a glBindTexture(GL_TEXTURE_2D, texture); \u73b0\u5728\u7eb9\u7406\u5df2\u7ecf\u7ed1\u5b9a\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u524d\u9762\u8f7d\u5165\u7684\u56fe\u7247\u6570\u636e\u751f\u6210\u4e00\u4e2a\u7eb9\u7406\u4e86\u3002\u7eb9\u7406\u53ef\u4ee5\u901a\u8fc7 glTexImage2D \u6765\u751f\u6210\uff1a glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, data); glGenerateMipmap(GL_TEXTURE_2D); \u51fd\u6570\u5f88\u957f\uff0c\u53c2\u6570\u4e5f\u4e0d\u5c11\uff0c\u6240\u4ee5\u6211\u4eec\u4e00\u4e2a\u4e00\u4e2a\u5730\u8bb2\u89e3\uff1a \u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u4e86\u7eb9\u7406\u76ee\u6807(Target)\u3002\u8bbe\u7f6e\u4e3a GL_TEXTURE_2D \u610f\u5473\u7740\u4f1a\u751f\u6210\u4e0e\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\u5bf9\u8c61\u5728\u540c\u4e00\u4e2a\u76ee\u6807\u4e0a\u7684\u7eb9\u7406\uff08\u4efb\u4f55\u7ed1\u5b9a\u5230 GL_TEXTURE_1D \u548c GL_TEXTURE_3D \u7684\u7eb9\u7406\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\uff09\u3002 \u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u7eb9\u7406\u6307\u5b9a\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7684\u7ea7\u522b\uff0c\u5982\u679c\u4f60\u5e0c\u671b\u5355\u72ec\u624b\u52a8\u8bbe\u7f6e\u6bcf\u4e2a\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7684\u7ea7\u522b\u7684\u8bdd\u3002\u8fd9\u91cc\u6211\u4eec\u586b0\uff0c\u4e5f\u5c31\u662f\u57fa\u672c\u7ea7\u522b\u3002 \u7b2c\u4e09\u4e2a\u53c2\u6570\u544a\u8bc9OpenGL\u6211\u4eec\u5e0c\u671b\u628a\u7eb9\u7406\u50a8\u5b58\u4e3a\u4f55\u79cd\u683c\u5f0f\u3002\u6211\u4eec\u7684\u56fe\u50cf\u53ea\u6709 RGB \u503c\uff0c\u56e0\u6b64\u6211\u4eec\u4e5f\u628a\u7eb9\u7406\u50a8\u5b58\u4e3a RGB \u503c\u3002 \u7b2c\u56db\u4e2a\u548c\u7b2c\u4e94\u4e2a\u53c2\u6570\u8bbe\u7f6e\u6700\u7ec8\u7684\u7eb9\u7406\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002\u6211\u4eec\u4e4b\u524d\u52a0\u8f7d\u56fe\u50cf\u7684\u65f6\u5019\u50a8\u5b58\u4e86\u5b83\u4eec\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u5bf9\u5e94\u7684\u53d8\u91cf\u3002 \u4e0b\u4e2a\u53c2\u6570\u5e94\u8be5\u603b\u662f\u88ab\u8bbe\u4e3a 0 \uff08\u5386\u53f2\u9057\u7559\u7684\u95ee\u9898\uff09\u3002 \u7b2c\u4e03\u7b2c\u516b\u4e2a\u53c2\u6570\u5b9a\u4e49\u4e86\u6e90\u56fe\u7684\u683c\u5f0f\u548c\u6570\u636e\u7c7b\u578b\u3002\u6211\u4eec\u4f7f\u7528RGB\u503c\u52a0\u8f7d\u8fd9\u4e2a\u56fe\u50cf\uff0c\u5e76\u628a\u5b83\u4eec\u50a8\u5b58\u4e3a char (byte)\u6570\u7ec4\uff0c\u6211\u4eec\u5c06\u4f1a\u4f20\u5165\u5bf9\u5e94\u503c\u3002 \u6700\u540e\u4e00\u4e2a\u53c2\u6570\u662f\u771f\u6b63\u7684\u56fe\u50cf\u6570\u636e\u3002 \u5f53\u8c03\u7528 glTexImage2D \u65f6\uff0c\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\u5bf9\u8c61\u5c31\u4f1a\u88ab\u9644\u52a0\u4e0a\u7eb9\u7406\u56fe\u50cf\u3002\u7136\u800c\uff0c\u76ee\u524d\u53ea\u6709\u57fa\u672c\u7ea7\u522b(Base-level)\u7684\u7eb9\u7406\u56fe\u50cf\u88ab\u52a0\u8f7d\u4e86\uff0c\u5982\u679c\u8981\u4f7f\u7528\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\uff0c\u6211\u4eec\u5fc5\u987b\u624b\u52a8\u8bbe\u7f6e\u6240\u6709\u4e0d\u540c\u7684\u56fe\u50cf\uff08\u4e0d\u65ad\u9012\u589e\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff09\u3002\u6216\u8005\uff0c\u76f4\u63a5\u5728\u751f\u6210\u7eb9\u7406\u4e4b\u540e\u8c03\u7528 glGenerateMipmap \u3002\u8fd9\u4f1a\u4e3a\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\u81ea\u52a8\u751f\u6210\u6240\u6709\u9700\u8981\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u3002 \u751f\u6210\u4e86\u7eb9\u7406\u548c\u76f8\u5e94\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u540e\uff0c\u91ca\u653e\u56fe\u50cf\u7684\u5185\u5b58\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4e60\u60ef\u3002 stbi_image_free(data); \u751f\u6210\u4e00\u4e2a\u7eb9\u7406\u7684\u8fc7\u7a0b\u5e94\u8be5\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a unsigned int texture; glGenTextures(1, &texture); glBindTexture(GL_TEXTURE_2D, texture); // \u4e3a\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\u5bf9\u8c61\u8bbe\u7f6e\u73af\u7ed5\u3001\u8fc7\u6ee4\u65b9\u5f0f glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR); // \u52a0\u8f7d\u5e76\u751f\u6210\u7eb9\u7406 int width, height, nrChannels; unsigned char *data = stbi_load(\"container.jpg\", &width, &height, &nrChannels, 0); if (data) { glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, data); glGenerateMipmap(GL_TEXTURE_2D); } else { std::cout << \"Failed to load texture\" << std::endl; } stbi_image_free(data); \u5e94\u7528\u7eb9\u7406 \u540e\u9762\u7684\u8fd9\u90e8\u5206\u6211\u4eec\u4f1a\u4f7f\u7528 glDrawElements \u7ed8\u5236 \u300c\u4f60\u597d\uff0c\u4e09\u89d2\u5f62\u300d \u6559\u7a0b\u6700\u540e\u4e00\u90e8\u5206\u7684\u77e9\u5f62\u3002\u6211\u4eec\u9700\u8981\u544a\u77e5OpenGL\u5982\u4f55\u91c7\u6837\u7eb9\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u4f7f\u7528\u7eb9\u7406\u5750\u6807\u66f4\u65b0\u9876\u70b9\u6570\u636e\uff1a float vertices[] = { // ---- \u4f4d\u7f6e ---- ---- \u989c\u8272 ---- - \u7eb9\u7406\u5750\u6807 - 0.5f, 0.5f, 0.0f, 1.0f, 0.0f, 0.0f, 1.0f, 1.0f, // \u53f3\u4e0a 0.5f, -0.5f, 0.0f, 0.0f, 1.0f, 0.0f, 1.0f, 0.0f, // \u53f3\u4e0b -0.5f, -0.5f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, // \u5de6\u4e0b -0.5f, 0.5f, 0.0f, 1.0f, 1.0f, 0.0f, 0.0f, 1.0f // \u5de6\u4e0a }; \u7531\u4e8e\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a\u989d\u5916\u7684\u9876\u70b9\u5c5e\u6027\uff0c\u6211\u4eec\u5fc5\u987b\u544a\u8bc9OpenGL\u6211\u4eec\u65b0\u7684\u9876\u70b9\u683c\u5f0f\uff1a glVertexAttribPointer(2, 2, GL_FLOAT, GL_FALSE, 8 * sizeof(float), (void*)(6 * sizeof(float))); glEnableVertexAttribArray(2); \u6ce8\u610f\uff0c\u6211\u4eec\u540c\u6837\u9700\u8981\u8c03\u6574\u524d\u9762\u4e24\u4e2a\u9876\u70b9\u5c5e\u6027\u7684\u6b65\u957f\u53c2\u6570\u4e3a 8 * sizeof(float) \u3002 \u63a5\u7740\u6211\u4eec\u9700\u8981\u8c03\u6574\u9876\u70b9\u7740\u8272\u5668\u4f7f\u5176\u80fd\u591f\u63a5\u53d7\u9876\u70b9\u5750\u6807\u4e3a\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\uff0c\u5e76\u628a\u5750\u6807\u4f20\u7ed9\u7247\u6bb5\u7740\u8272\u5668\uff1a #version 330 core layout (location = 0) in vec3 aPos; layout (location = 1) in vec3 aColor; layout (location = 2) in vec2 aTexCoord; out vec3 ourColor; out vec2 TexCoord; void main() { gl_Position = vec4(aPos, 1.0); ourColor = aColor; TexCoord = aTexCoord; } \u7247\u6bb5\u7740\u8272\u5668\u5e94\u8be5\u63a5\u4e0b\u6765\u4f1a\u628a\u8f93\u51fa\u53d8\u91cf TexCoord \u4f5c\u4e3a\u8f93\u5165\u53d8\u91cf\u3002 \u7247\u6bb5\u7740\u8272\u5668\u4e5f\u5e94\u8be5\u80fd\u8bbf\u95ee\u7eb9\u7406\u5bf9\u8c61\uff0c\u4f46\u662f\u6211\u4eec\u600e\u6837\u80fd\u628a\u7eb9\u7406\u5bf9\u8c61\u4f20\u7ed9\u7247\u6bb5\u7740\u8272\u5668\u5462\uff1fGLSL\u6709\u4e00\u4e2a\u4f9b\u7eb9\u7406\u5bf9\u8c61\u4f7f\u7528\u7684\u5185\u5efa\u6570\u636e\u7c7b\u578b\uff0c\u53eb\u505a \u91c7\u6837\u5668 (Sampler)\uff0c\u5b83\u4ee5\u7eb9\u7406\u7c7b\u578b\u4f5c\u4e3a\u540e\u7f00\uff0c\u6bd4\u5982 sampler1D \u3001 sampler3D \uff0c\u6216\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u7684 sampler2D \u3002\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u58f0\u660e\u4e00\u4e2a uniform sampler2D \u628a\u4e00\u4e2a\u7eb9\u7406\u6dfb\u52a0\u5230\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u7a0d\u540e\u6211\u4eec\u4f1a\u628a\u7eb9\u7406\u8d4b\u503c\u7ed9\u8fd9\u4e2auniform\u3002 #version 330 core out vec4 FragColor; in vec3 ourColor; in vec2 TexCoord; uniform sampler2D ourTexture; void main() { FragColor = texture(ourTexture, TexCoord); } \u6211\u4eec\u4f7f\u7528GLSL\u5185\u5efa\u7684 texture \u51fd\u6570\u6765\u91c7\u6837\u7eb9\u7406\u7684\u989c\u8272\uff0c\u5b83\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u7eb9\u7406\u91c7\u6837\u5668\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5bf9\u5e94\u7684\u7eb9\u7406\u5750\u6807\u3002 texture \u51fd\u6570\u4f1a\u4f7f\u7528\u4e4b\u524d\u8bbe\u7f6e\u7684\u7eb9\u7406\u53c2\u6570\u5bf9\u76f8\u5e94\u7684\u989c\u8272\u503c\u8fdb\u884c\u91c7\u6837\u3002\u8fd9\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u7684\u8f93\u51fa\u5c31\u662f\u7eb9\u7406\u7684\uff08\u63d2\u503c\uff09\u7eb9\u7406\u5750\u6807\u4e0a\u7684(\u8fc7\u6ee4\u540e\u7684)\u989c\u8272\u3002 \u73b0\u5728\u53ea\u5269\u4e0b\u5728\u8c03\u7528 glDrawElements \u4e4b\u524d\u7ed1\u5b9a\u7eb9\u7406\u4e86\uff0c\u5b83\u4f1a\u81ea\u52a8\u628a\u7eb9\u7406\u8d4b\u503c\u7ed9\u7247\u6bb5\u7740\u8272\u5668\u7684\u91c7\u6837\u5668\uff1a glBindTexture(GL_TEXTURE_2D, texture); glBindVertexArray(VAO); glDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_INT, 0); \u5982\u679c\u4f60\u8ddf\u7740\u8fd9\u4e2a\u6559\u7a0b\u6b63\u786e\u5730\u505a\u5b8c\u4e86\uff0c\u4f60\u4f1a\u770b\u5230\u4e0b\u9762\u7684\u56fe\u50cf\uff1a \u5982\u679c\u4f60\u7684\u77e9\u5f62\u662f\u5168\u9ed1\u6216\u5168\u767d\u7684\u4f60\u53ef\u80fd\u5728\u54ea\u513f\u505a\u9519\u4e86\u4ec0\u4e48\u3002\u68c0\u67e5\u4f60\u7684\u7740\u8272\u5668\u65e5\u5fd7\uff0c\u5e76\u5c1d\u8bd5\u5bf9\u6bd4\u4e00\u4e0b \u6e90\u7801 \u3002 Attention \u5982\u679c\u4f60\u7684\u7eb9\u7406\u4ee3\u7801\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\u6216\u8005\u663e\u793a\u662f\u5168\u9ed1\uff0c\u8bf7\u7ee7\u7eed\u9605\u8bfb\uff0c\u5e76\u4e00\u76f4\u8ddf\u8fdb\u6211\u4eec\u7684\u4ee3\u7801\u5230\u6700\u540e\u7684\u4f8b\u5b50\uff0c\u5b83\u662f\u5e94\u8be5\u80fd\u591f\u5de5\u4f5c\u7684\u3002\u5728\u4e00\u4e9b\u9a71\u52a8\u4e2d\uff0c\u5fc5\u987b\u8981\u5bf9\u6bcf\u4e2a\u91c7\u6837\u5668uniform\u90fd\u9644\u52a0\u4e0a\u7eb9\u7406\u5355\u5143\u624d\u53ef\u4ee5\uff0c\u8fd9\u4e2a\u4f1a\u5728\u4e0b\u9762\u4ecb\u7ecd\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u628a\u5f97\u5230\u7684\u7eb9\u7406\u989c\u8272\u4e0e\u9876\u70b9\u989c\u8272\u6df7\u5408\uff0c\u6765\u83b7\u5f97\u66f4\u6709\u8da3\u7684\u6548\u679c\u3002\u6211\u4eec\u53ea\u9700\u628a\u7eb9\u7406\u989c\u8272\u4e0e\u9876\u70b9\u989c\u8272\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u76f8\u4e58\u6765\u6df7\u5408\u4e8c\u8005\u7684\u989c\u8272\uff1a FragColor = texture(ourTexture, TexCoord) * vec4(ourColor, 1.0); \u6700\u7ec8\u7684\u6548\u679c\u5e94\u8be5\u662f\u9876\u70b9\u989c\u8272\u548c\u7eb9\u7406\u989c\u8272\u7684\u6df7\u5408\u8272\uff1a \u6211\u731c\u4f60\u4f1a\u8bf4\u6211\u4eec\u7684\u7bb1\u5b50\u559c\u6b22\u8df370\u5e74\u4ee3\u7684\u8fea\u65af\u79d1\u3002 \u7eb9\u7406\u5355\u5143 \u4f60\u53ef\u80fd\u4f1a\u5947\u602a\u4e3a\u4ec0\u4e48 sampler2D \u53d8\u91cf\u662f\u4e2auniform\uff0c\u6211\u4eec\u5374\u4e0d\u7528 glUniform \u7ed9\u5b83\u8d4b\u503c\u3002\u4f7f\u7528 glUniform1i \uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u7eb9\u7406\u91c7\u6837\u5668\u5206\u914d\u4e00\u4e2a\u4f4d\u7f6e\u503c\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u80fd\u591f\u5728\u4e00\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u8bbe\u7f6e\u591a\u4e2a\u7eb9\u7406\u3002\u4e00\u4e2a\u7eb9\u7406\u7684\u4f4d\u7f6e\u503c\u901a\u5e38\u79f0\u4e3a\u4e00\u4e2a \u7eb9\u7406\u5355\u5143 (Texture Unit)\u3002\u4e00\u4e2a\u7eb9\u7406\u7684\u9ed8\u8ba4\u7eb9\u7406\u5355\u5143\u662f0\uff0c\u5b83\u662f\u9ed8\u8ba4\u7684\u6fc0\u6d3b\u7eb9\u7406\u5355\u5143\uff0c\u6240\u4ee5\u6559\u7a0b\u524d\u9762\u90e8\u5206\u6211\u4eec\u6ca1\u6709\u5206\u914d\u4e00\u4e2a\u4f4d\u7f6e\u503c\u3002 \u7eb9\u7406\u5355\u5143\u7684\u4e3b\u8981\u76ee\u7684\u662f\u8ba9\u6211\u4eec\u5728\u7740\u8272\u5668\u4e2d\u53ef\u4ee5\u4f7f\u7528\u591a\u4e8e\u4e00\u4e2a\u7684\u7eb9\u7406\u3002\u901a\u8fc7\u628a\u7eb9\u7406\u5355\u5143\u8d4b\u503c\u7ed9\u91c7\u6837\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u6b21\u7ed1\u5b9a\u591a\u4e2a\u7eb9\u7406\uff0c\u53ea\u8981\u6211\u4eec\u9996\u5148\u6fc0\u6d3b\u5bf9\u5e94\u7684\u7eb9\u7406\u5355\u5143\u3002\u5c31\u50cf glBindTexture \u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 glActiveTexture \u6fc0\u6d3b\u7eb9\u7406\u5355\u5143\uff0c\u4f20\u5165\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7684\u7eb9\u7406\u5355\u5143\uff1a glActiveTexture(GL_TEXTURE0); // \u5728\u7ed1\u5b9a\u7eb9\u7406\u4e4b\u524d\u5148\u6fc0\u6d3b\u7eb9\u7406\u5355\u5143 glBindTexture(GL_TEXTURE_2D, texture); \u6fc0\u6d3b\u7eb9\u7406\u5355\u5143\u4e4b\u540e\uff0c\u63a5\u4e0b\u6765\u7684 glBindTexture \u51fd\u6570\u8c03\u7528\u4f1a\u7ed1\u5b9a\u8fd9\u4e2a\u7eb9\u7406\u5230\u5f53\u524d\u6fc0\u6d3b\u7684\u7eb9\u7406\u5355\u5143\uff0c\u7eb9\u7406\u5355\u5143 GL_TEXTURE0 \u9ed8\u8ba4\u603b\u662f\u88ab\u6fc0\u6d3b\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u524d\u9762\u7684\u4f8b\u5b50\u91cc\u5f53\u6211\u4eec\u4f7f\u7528 glBindTexture \u7684\u65f6\u5019\uff0c\u65e0\u9700\u6fc0\u6d3b\u4efb\u4f55\u7eb9\u7406\u5355\u5143\u3002 Important OpenGL\u81f3\u5c11\u4fdd\u8bc1\u670916\u4e2a\u7eb9\u7406\u5355\u5143\u4f9b\u4f60\u4f7f\u7528\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u53ef\u4ee5\u6fc0\u6d3b\u4ece GL_TEXTURE0 \u5230 GL_TEXTRUE15 \u3002\u5b83\u4eec\u90fd\u662f\u6309\u987a\u5e8f\u5b9a\u4e49\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7 GL_TEXTURE0 + 8 \u7684\u65b9\u5f0f\u83b7\u5f97 GL_TEXTURE8 \uff0c\u8fd9\u5728\u5f53\u6211\u4eec\u9700\u8981\u5faa\u73af\u4e00\u4e9b\u7eb9\u7406\u5355\u5143\u7684\u65f6\u5019\u4f1a\u5f88\u6709\u7528\u3002 \u6211\u4eec\u4ecd\u7136\u9700\u8981\u7f16\u8f91\u7247\u6bb5\u7740\u8272\u5668\u6765\u63a5\u6536\u53e6\u4e00\u4e2a\u91c7\u6837\u5668\u3002\u8fd9\u5e94\u8be5\u76f8\u5bf9\u6765\u8bf4\u975e\u5e38\u76f4\u63a5\u4e86\uff1a #version 330 core ... uniform sampler2D texture1; uniform sampler2D texture2; void main() { FragColor = mix(texture(texture1, TexCoord), texture(texture2, TexCoord), 0.2); } \u6700\u7ec8\u8f93\u51fa\u989c\u8272\u73b0\u5728\u662f\u4e24\u4e2a\u7eb9\u7406\u7684\u7ed3\u5408\u3002GLSL\u5185\u5efa\u7684 mix \u51fd\u6570\u9700\u8981\u63a5\u53d7\u4e24\u4e2a\u503c\u4f5c\u4e3a\u53c2\u6570\uff0c\u5e76\u5bf9\u5b83\u4eec\u6839\u636e\u7b2c\u4e09\u4e2a\u53c2\u6570\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\u3002\u5982\u679c\u7b2c\u4e09\u4e2a\u503c\u662f 0.0 \uff0c\u5b83\u4f1a\u8fd4\u56de\u7b2c\u4e00\u4e2a\u8f93\u5165\uff1b\u5982\u679c\u662f 1.0 \uff0c\u4f1a\u8fd4\u56de\u7b2c\u4e8c\u4e2a\u8f93\u5165\u503c\u3002 0.2 \u4f1a\u8fd4\u56de 80% \u7684\u7b2c\u4e00\u4e2a\u8f93\u5165\u989c\u8272\u548c 20% \u7684\u7b2c\u4e8c\u4e2a\u8f93\u5165\u989c\u8272\uff0c\u5373\u8fd4\u56de\u4e24\u4e2a\u7eb9\u7406\u7684\u6df7\u5408\u8272\u3002 \u6211\u4eec\u73b0\u5728\u9700\u8981\u8f7d\u5165\u5e76\u521b\u5efa\u53e6\u4e00\u4e2a\u7eb9\u7406\uff1b\u4f60\u5e94\u8be5\u5bf9\u8fd9\u4e9b\u6b65\u9aa4\u5f88\u719f\u6089\u4e86\u3002\u8bb0\u5f97\u521b\u5efa\u53e6\u4e00\u4e2a\u7eb9\u7406\u5bf9\u8c61\uff0c\u8f7d\u5165\u56fe\u7247\uff0c\u4f7f\u7528 glTexImage2D \u751f\u6210\u6700\u7ec8\u7eb9\u7406\u3002\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u7eb9\u7406\u6211\u4eec\u4f7f\u7528\u4e00\u5f20 \u4f60\u5b66\u4e60OpenGL\u65f6\u7684\u9762\u90e8\u8868\u60c5 \u56fe\u7247\uff1a unsigned char *data = stbi_load(\"awesomeface.png\", &width, &height, &nrChannels, 0); if (data) { glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, width, height, 0, GL_RGBA, GL_UNSIGNED_BYTE, data); glGenerateMipmap(GL_TEXTURE_2D); } \u6ce8\u610f\uff0c\u6211\u4eec\u73b0\u5728\u8981\u8bfb\u53d6\u4e00\u5f20\u5305\u542balpha\uff08\u900f\u660e\u5ea6\uff09\u901a\u9053\u7684 .png \u56fe\u7247\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u73b0\u5728\u9700\u8981\u4f7f\u7528 GL_RGBA \u53c2\u6570\uff0c\u6307\u5b9a\u8be5\u56fe\u7247\u6570\u636e\u5305\u542b\u4e86alpha\u901a\u9053\uff1b\u5426\u5219OpenGL\u5c06\u65e0\u6cd5\u6b63\u786e\u89e3\u6790\u56fe\u7247\u6570\u636e\u3002 \u4e3a\u4e86\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u7eb9\u7406\uff08\u4ee5\u53ca\u7b2c\u4e00\u4e2a\uff09\uff0c\u6211\u4eec\u5fc5\u987b\u6539\u53d8\u4e00\u70b9\u6e32\u67d3\u6d41\u7a0b\uff0c\u5148\u7ed1\u5b9a\u4e24\u4e2a\u7eb9\u7406\u5230\u5bf9\u5e94\u7684\u7eb9\u7406\u5355\u5143\uff0c\u7136\u540e\u5b9a\u4e49\u54ea\u4e2auniform\u91c7\u6837\u5668\u5bf9\u5e94\u54ea\u4e2a\u7eb9\u7406\u5355\u5143\uff1a glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_2D, texture1); glActiveTexture(GL_TEXTURE1); glBindTexture(GL_TEXTURE_2D, texture2); glBindVertexArray(VAO); glDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_INT, 0); \u6211\u4eec\u8fd8\u8981\u901a\u8fc7\u4f7f\u7528 glUniform1i \u8bbe\u7f6e\u6bcf\u4e2a\u91c7\u6837\u5668\u7684\u65b9\u5f0f\u544a\u8bc9OpenGL\u6bcf\u4e2a\u7740\u8272\u5668\u91c7\u6837\u5668\u5c5e\u4e8e\u54ea\u4e2a\u7eb9\u7406\u5355\u5143\u3002\u6211\u4eec\u53ea\u9700\u8981\u8bbe\u7f6e\u4e00\u6b21\u5373\u53ef\uff0c\u6240\u4ee5\u8fd9\u4e2a\u4f1a\u653e\u5728\u6e32\u67d3\u5faa\u73af\u7684\u524d\u9762\uff1a ourShader.use(); // \u4e0d\u8981\u5fd8\u8bb0\u5728\u8bbe\u7f6euniform\u53d8\u91cf\u4e4b\u524d\u6fc0\u6d3b\u7740\u8272\u5668\u7a0b\u5e8f\uff01 glUniform1i(glGetUniformLocation(ourShader.ID, \"texture1\"), 0); // \u624b\u52a8\u8bbe\u7f6e ourShader.setInt(\"texture2\", 1); // \u6216\u8005\u4f7f\u7528\u7740\u8272\u5668\u7c7b\u8bbe\u7f6e while(...) { [...] } \u901a\u8fc7\u4f7f\u7528 glUniform1i \u8bbe\u7f6e\u91c7\u6837\u5668\uff0c\u6211\u4eec\u4fdd\u8bc1\u4e86\u6bcf\u4e2auniform\u91c7\u6837\u5668\u5bf9\u5e94\u7740\u6b63\u786e\u7684\u7eb9\u7406\u5355\u5143\u3002\u4f60\u5e94\u8be5\u80fd\u5f97\u5230\u4e0b\u9762\u7684\u7ed3\u679c\uff1a \u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u7eb9\u7406\u4e0a\u4e0b\u98a0\u5012\u4e86\uff01\u8fd9\u662f\u56e0\u4e3aOpenGL\u8981\u6c42y\u8f74 0.0 \u5750\u6807\u662f\u5728\u56fe\u7247\u7684\u5e95\u90e8\u7684\uff0c\u4f46\u662f\u56fe\u7247\u7684y\u8f74 0.0 \u5750\u6807\u901a\u5e38\u5728\u9876\u90e8\u3002\u5f88\u5e78\u8fd0\uff0c stb_image.h \u80fd\u591f\u5728\u56fe\u50cf\u52a0\u8f7d\u65f6\u5e2e\u52a9\u6211\u4eec\u7ffb\u8f6cy\u8f74\uff0c\u53ea\u9700\u8981\u5728\u52a0\u8f7d\u4efb\u4f55\u56fe\u50cf\u524d\u52a0\u5165\u4ee5\u4e0b\u8bed\u53e5\u5373\u53ef\uff1a stbi_set_flip_vertically_on_load(true); \u5728\u8ba9 stb_image.h \u5728\u52a0\u8f7d\u56fe\u7247\u65f6\u7ffb\u8f6cy\u8f74\u4e4b\u540e\u4f60\u5c31\u5e94\u8be5\u80fd\u591f\u83b7\u5f97\u4e0b\u9762\u7684\u7ed3\u679c\u4e86\uff1a \u5982\u679c\u4f60\u770b\u5230\u4e86\u4e00\u4e2a\u5f00\u5fc3\u7684\u7bb1\u5b50\uff0c\u4f60\u5c31\u505a\u5bf9\u4e86\u3002\u4f60\u53ef\u4ee5\u5bf9\u6bd4\u4e00\u4e0b \u6e90\u4ee3\u7801 \u3002 \u7ec3\u4e60 \u4e3a\u4e86\u66f4\u719f\u7ec3\u5730\u4f7f\u7528\u7eb9\u7406\uff0c\u5efa\u8bae\u5728\u7ee7\u7eed\u4e4b\u540e\u7684\u5b66\u4e60\u4e4b\u524d\u505a\u5b8c\u8fd9\u4e9b\u7ec3\u4e60\uff1a \u4fee\u6539\u7247\u6bb5\u7740\u8272\u5668\uff0c \u4ec5 \u8ba9\u7b11\u8138\u56fe\u6848\u671d\u53e6\u4e00\u4e2a\u65b9\u5411\u770b\uff0c \u53c2\u8003\u89e3\u7b54 \u5c1d\u8bd5\u7528\u4e0d\u540c\u7684\u7eb9\u7406\u73af\u7ed5\u65b9\u5f0f\uff0c\u8bbe\u5b9a\u4e00\u4e2a\u4ece 0.0f \u5230 2.0f \u8303\u56f4\u5185\u7684\uff08\u800c\u4e0d\u662f\u539f\u6765\u7684 0.0f \u5230 1.0f \uff09\u7eb9\u7406\u5750\u6807\u3002\u8bd5\u8bd5\u770b\u80fd\u4e0d\u80fd\u5728\u7bb1\u5b50\u7684\u89d2\u843d\u653e\u7f6e4\u4e2a\u7b11\u8138\uff1a \u53c2\u8003\u89e3\u7b54 \uff0c \u7ed3\u679c \u3002\u8bb0\u5f97\u4e00\u5b9a\u8981\u8bd5\u8bd5\u5176\u5b83\u7684\u73af\u7ed5\u65b9\u5f0f\u3002 \u5c1d\u8bd5\u5728\u77e9\u5f62\u4e0a\u53ea\u663e\u793a\u7eb9\u7406\u56fe\u50cf\u7684\u4e2d\u95f4\u4e00\u90e8\u5206\uff0c\u4fee\u6539\u7eb9\u7406\u5750\u6807\uff0c\u8fbe\u5230\u80fd\u770b\u89c1\u5355\u4e2a\u7684\u50cf\u7d20\u7684\u6548\u679c\u3002\u5c1d\u8bd5\u4f7f\u7528 GL_NEAREST \u7684\u7eb9\u7406\u8fc7\u6ee4\u65b9\u5f0f\u8ba9\u50cf\u7d20\u663e\u793a\u5f97\u66f4\u6e05\u6670\uff1a \u53c2\u8003\u89e3\u7b54 \u4f7f\u7528\u4e00\u4e2auniform\u53d8\u91cf\u4f5c\u4e3a mix \u51fd\u6570\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u6765\u6539\u53d8\u4e24\u4e2a\u7eb9\u7406\u53ef\u89c1\u5ea6\uff0c\u4f7f\u7528\u4e0a\u548c\u4e0b\u952e\u6765\u6539\u53d8\u7bb1\u5b50\u6216\u7b11\u8138\u7684\u53ef\u89c1\u5ea6\uff1a \u53c2\u8003\u89e3\u7b54 \u3002","title":"\u7eb9\u7406"},{"location":"01%20Getting%20started/06%20Textures/#_1","text":"\u539f\u6587 Textures \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django , Krasjet, Geequlim, BLumia \u6821\u5bf9 AoZhang \u8bd1\u6ce8 \u6ce8\u610f\uff0c\u7531\u4e8e\u4f5c\u8005\u5bf9\u6559\u7a0b\u505a\u51fa\u4e86\u66f4\u65b0\uff0c\u4e4b\u524d\u672c\u8282\u4f7f\u7528\u7684\u662fSOIL\u5e93\uff0c\u4f46\u73b0\u5728\u6539\u4e3a\u4e86\u4f7f\u7528 stb_image.h \u5e93\uff0c\u5173\u4e8eSOIL\u914d\u7f6e\u7684\u90e8\u5206\u73b0\u5728\u5df2\u7ecf\u88ab\u4fee\u6539\uff0c\u4f46\u6211\u4ecd\u51b3\u5b9a\u5c06\u8fd9\u90e8\u5206\u6559\u7a0b\u4fdd\u7559\u8d77\u6765\uff0c\u653e\u5230\u4e00\u4e2a\u5386\u53f2\u5b58\u6863\u4e2d\uff0c\u5982\u679c\u6709\u9700\u8981\u7684\u8bdd\u53ef\u4ee5\u5230 \u8fd9\u91cc \u6765\u67e5\u770b\u3002 \u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u9876\u70b9\u6dfb\u52a0\u989c\u8272\u6765\u589e\u52a0\u56fe\u5f62\u7684\u7ec6\u8282\uff0c\u4ece\u800c\u521b\u5efa\u51fa\u6709\u8da3\u7684\u56fe\u50cf\u3002\u4f46\u662f\uff0c\u5982\u679c\u60f3\u8ba9\u56fe\u5f62\u770b\u8d77\u6765\u66f4\u771f\u5b9e\uff0c\u6211\u4eec\u5c31\u5fc5\u987b\u6709\u8db3\u591f\u591a\u7684\u9876\u70b9\uff0c\u4ece\u800c\u6307\u5b9a\u8db3\u591f\u591a\u7684\u989c\u8272\u3002\u8fd9\u5c06\u4f1a\u4ea7\u751f\u5f88\u591a\u989d\u5916\u5f00\u9500\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u6a21\u578b\u90fd\u4f1a\u9700\u6c42\u66f4\u591a\u7684\u9876\u70b9\uff0c\u6bcf\u4e2a\u9876\u70b9\u53c8\u9700\u6c42\u4e00\u4e2a\u989c\u8272\u5c5e\u6027\u3002 \u827a\u672f\u5bb6\u548c\u7a0b\u5e8f\u5458\u66f4\u559c\u6b22\u4f7f\u7528 \u7eb9\u7406 (Texture)\u3002\u7eb9\u7406\u662f\u4e00\u4e2a2D\u56fe\u7247\uff08\u751a\u81f3\u4e5f\u67091D\u548c3D\u7684\u7eb9\u7406\uff09\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u6dfb\u52a0\u7269\u4f53\u7684\u7ec6\u8282\uff1b\u4f60\u53ef\u4ee5\u60f3\u8c61\u7eb9\u7406\u662f\u4e00\u5f20\u7ed8\u6709\u7816\u5757\u7684\u7eb8\uff0c\u65e0\u7f1d\u6298\u53e0\u8d34\u5408\u5230\u4f60\u76843D\u7684\u623f\u5b50\u4e0a\uff0c\u8fd9\u6837\u4f60\u7684\u623f\u5b50\u770b\u8d77\u6765\u5c31\u50cf\u6709\u7816\u5899\u5916\u8868\u4e86\u3002\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u5f20\u56fe\u7247\u4e0a\u63d2\u5165\u975e\u5e38\u591a\u7684\u7ec6\u8282\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8ba9\u7269\u4f53\u975e\u5e38\u7cbe\u7ec6\u800c\u4e0d\u7528\u6307\u5b9a\u989d\u5916\u7684\u9876\u70b9\u3002 Important \u9664\u4e86\u56fe\u50cf\u4ee5\u5916\uff0c\u7eb9\u7406\u4e5f\u53ef\u4ee5\u88ab\u7528\u6765\u50a8\u5b58\u5927\u91cf\u7684\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u53ef\u4ee5\u53d1\u9001\u5230\u7740\u8272\u5668\u4e0a\uff0c\u4f46\u662f\u8fd9\u4e0d\u662f\u6211\u4eec\u73b0\u5728\u7684\u4e3b\u9898\u3002 \u4e0b\u9762\u4f60\u4f1a\u770b\u5230\u4e4b\u524d\u6559\u7a0b\u7684\u90a3\u4e2a\u4e09\u89d2\u5f62\u8d34\u4e0a\u4e86\u4e00\u5f20 \u7816\u5899 \u56fe\u7247\u3002 \u4e3a\u4e86\u80fd\u591f\u628a\u7eb9\u7406\u6620\u5c04(Map)\u5230\u4e09\u89d2\u5f62\u4e0a\uff0c\u6211\u4eec\u9700\u8981\u6307\u5b9a\u4e09\u89d2\u5f62\u7684\u6bcf\u4e2a\u9876\u70b9\u5404\u81ea\u5bf9\u5e94\u7eb9\u7406\u7684\u54ea\u4e2a\u90e8\u5206\u3002\u8fd9\u6837\u6bcf\u4e2a\u9876\u70b9\u5c31\u4f1a\u5173\u8054\u7740\u4e00\u4e2a \u7eb9\u7406\u5750\u6807 (Texture Coordinate)\uff0c\u7528\u6765\u6807\u660e\u8be5\u4ece\u7eb9\u7406\u56fe\u50cf\u7684\u54ea\u4e2a\u90e8\u5206\u91c7\u6837\uff08\u8bd1\u6ce8\uff1a\u91c7\u96c6\u7247\u6bb5\u989c\u8272\uff09\u3002\u4e4b\u540e\u5728\u56fe\u5f62\u7684\u5176\u5b83\u7247\u6bb5\u4e0a\u8fdb\u884c\u7247\u6bb5\u63d2\u503c(Fragment Interpolation)\u3002 \u7eb9\u7406\u5750\u6807\u5728x\u548cy\u8f74\u4e0a\uff0c\u8303\u56f4\u4e3a0\u52301\u4e4b\u95f4\uff08\u6ce8\u610f\u6211\u4eec\u4f7f\u7528\u7684\u662f2D\u7eb9\u7406\u56fe\u50cf\uff09\u3002\u4f7f\u7528\u7eb9\u7406\u5750\u6807\u83b7\u53d6\u7eb9\u7406\u989c\u8272\u53eb\u505a \u91c7\u6837 (Sampling)\u3002\u7eb9\u7406\u5750\u6807\u8d77\u59cb\u4e8e(0, 0)\uff0c\u4e5f\u5c31\u662f\u7eb9\u7406\u56fe\u7247\u7684\u5de6\u4e0b\u89d2\uff0c\u7ec8\u6b62\u4e8e(1, 1)\uff0c\u5373\u7eb9\u7406\u56fe\u7247\u7684\u53f3\u4e0a\u89d2\u3002\u4e0b\u9762\u7684\u56fe\u7247\u5c55\u793a\u4e86\u6211\u4eec\u662f\u5982\u4f55\u628a\u7eb9\u7406\u5750\u6807\u6620\u5c04\u5230\u4e09\u89d2\u5f62\u4e0a\u7684\u3002 \u6211\u4eec\u4e3a\u4e09\u89d2\u5f62\u6307\u5b9a\u4e863\u4e2a\u7eb9\u7406\u5750\u6807\u70b9\u3002\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u6211\u4eec\u5e0c\u671b\u4e09\u89d2\u5f62\u7684\u5de6\u4e0b\u89d2\u5bf9\u5e94\u7eb9\u7406\u7684\u5de6\u4e0b\u89d2\uff0c\u56e0\u6b64\u6211\u4eec\u628a\u4e09\u89d2\u5f62\u5de6\u4e0b\u89d2\u9876\u70b9\u7684\u7eb9\u7406\u5750\u6807\u8bbe\u7f6e\u4e3a(0, 0)\uff1b\u540c\u7406\u53f3\u4e0b\u65b9\u7684\u9876\u70b9\u8bbe\u7f6e\u4e3a(1, 0)\uff1b\u4e09\u89d2\u5f62\u7684\u4e0a\u9876\u70b9\u5bf9\u5e94\u4e8e\u56fe\u7247\u7684\u4e0a\u4e2d\u4f4d\u7f6e\u6240\u4ee5\u6211\u4eec\u628a\u5b83\u7684\u7eb9\u7406\u5750\u6807\u8bbe\u7f6e\u4e3a(0.5, 1.0)\u3002\u6211\u4eec\u53ea\u8981\u7ed9\u9876\u70b9\u7740\u8272\u5668\u4f20\u9012\u8fd9\u4e09\u4e2a\u7eb9\u7406\u5750\u6807\u5c31\u884c\u4e86\uff0c\u63a5\u4e0b\u6765\u5b83\u4eec\u4f1a\u88ab\u4f20\u5230\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u5b83\u4f1a\u4e3a\u6bcf\u4e2a\u7247\u6bb5\u8fdb\u884c\u7eb9\u7406\u5750\u6807\u7684\u63d2\u503c\u3002 \u7eb9\u7406\u5750\u6807\u770b\u8d77\u6765\u5c31\u50cf\u8fd9\u6837\uff1a float texCoords[] = { 0.0f, 0.0f, // \u5de6\u4e0b\u89d2 1.0f, 0.0f, // \u53f3\u4e0b\u89d2 0.5f, 1.0f // \u4e0a\u4e2d }; \u5bf9\u7eb9\u7406\u91c7\u6837\u7684\u89e3\u91ca\u975e\u5e38\u5bbd\u677e\uff0c\u5b83\u53ef\u4ee5\u91c7\u7528\u51e0\u79cd\u4e0d\u540c\u7684\u63d2\u503c\u65b9\u5f0f\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u81ea\u5df1\u544a\u8bc9OpenGL\u8be5\u600e\u6837\u5bf9\u7eb9\u7406 \u91c7\u6837 \u3002","title":"\u7eb9\u7406"},{"location":"01%20Getting%20started/06%20Textures/#_2","text":"\u7eb9\u7406\u5750\u6807\u7684\u8303\u56f4\u901a\u5e38\u662f\u4ece(0, 0)\u5230(1, 1)\uff0c\u90a3\u5982\u679c\u6211\u4eec\u628a\u7eb9\u7406\u5750\u6807\u8bbe\u7f6e\u5728\u8303\u56f4\u4e4b\u5916\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1fOpenGL\u9ed8\u8ba4\u7684\u884c\u4e3a\u662f\u91cd\u590d\u8fd9\u4e2a\u7eb9\u7406\u56fe\u50cf\uff08\u6211\u4eec\u57fa\u672c\u4e0a\u5ffd\u7565\u6d6e\u70b9\u7eb9\u7406\u5750\u6807\u7684\u6574\u6570\u90e8\u5206\uff09\uff0c\u4f46OpenGL\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u9009\u62e9\uff1a \u73af\u7ed5\u65b9\u5f0f \u63cf\u8ff0 GL_REPEAT \u5bf9\u7eb9\u7406\u7684\u9ed8\u8ba4\u884c\u4e3a\u3002\u91cd\u590d\u7eb9\u7406\u56fe\u50cf\u3002 GL_MIRRORED_REPEAT \u548c GL_REPEAT \u4e00\u6837\uff0c\u4f46\u6bcf\u6b21\u91cd\u590d\u56fe\u7247\u662f\u955c\u50cf\u653e\u7f6e\u7684\u3002 GL_CLAMP_TO_EDGE \u7eb9\u7406\u5750\u6807\u4f1a\u88ab\u7ea6\u675f\u57280\u52301\u4e4b\u95f4\uff0c\u8d85\u51fa\u7684\u90e8\u5206\u4f1a\u91cd\u590d\u7eb9\u7406\u5750\u6807\u7684\u8fb9\u7f18\uff0c\u4ea7\u751f\u4e00\u79cd\u8fb9\u7f18\u88ab\u62c9\u4f38\u7684\u6548\u679c\u3002 GL_CLAMP_TO_BORDER \u8d85\u51fa\u7684\u5750\u6807\u4e3a\u7528\u6237\u6307\u5b9a\u7684\u8fb9\u7f18\u989c\u8272\u3002 \u5f53\u7eb9\u7406\u5750\u6807\u8d85\u51fa\u9ed8\u8ba4\u8303\u56f4\u65f6\uff0c\u6bcf\u4e2a\u9009\u9879\u90fd\u6709\u4e0d\u540c\u7684\u89c6\u89c9\u6548\u679c\u8f93\u51fa\u3002\u6211\u4eec\u6765\u770b\u770b\u8fd9\u4e9b\u7eb9\u7406\u56fe\u50cf\u7684\u4f8b\u5b50\uff1a \u524d\u9762\u63d0\u5230\u7684\u6bcf\u4e2a\u9009\u9879\u90fd\u53ef\u4ee5\u4f7f\u7528 glTexParameter* \u51fd\u6570\u5bf9\u5355\u72ec\u7684\u4e00\u4e2a\u5750\u6807\u8f74\u8bbe\u7f6e\uff08 s \u3001 t \uff08\u5982\u679c\u662f\u4f7f\u75283D\u7eb9\u7406\u90a3\u4e48\u8fd8\u6709\u4e00\u4e2a r \uff09\u5b83\u4eec\u548c x \u3001 y \u3001 z \u662f\u7b49\u4ef7\u7684\uff09\uff1a glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_MIRRORED_REPEAT); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_MIRRORED_REPEAT); \u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u4e86\u7eb9\u7406\u76ee\u6807\uff1b\u6211\u4eec\u4f7f\u7528\u7684\u662f2D\u7eb9\u7406\uff0c\u56e0\u6b64\u7eb9\u7406\u76ee\u6807\u662f GL_TEXTURE_2D \u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u9700\u8981\u6211\u4eec\u6307\u5b9a\u8bbe\u7f6e\u7684\u9009\u9879\u4e0e\u5e94\u7528\u7684\u7eb9\u7406\u8f74\u3002\u6211\u4eec\u6253\u7b97\u914d\u7f6e\u7684\u662f WRAP \u9009\u9879\uff0c\u5e76\u4e14\u6307\u5b9a S \u548c T \u8f74\u3002\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u9700\u8981\u6211\u4eec\u4f20\u9012\u4e00\u4e2a\u73af\u7ed5\u65b9\u5f0f(Wrapping)\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2dOpenGL\u4f1a\u7ed9\u5f53\u524d\u6fc0\u6d3b\u7684\u7eb9\u7406\u8bbe\u5b9a\u7eb9\u7406\u73af\u7ed5\u65b9\u5f0f\u4e3a GL_MIRRORED_REPEAT \u3002 \u5982\u679c\u6211\u4eec\u9009\u62e9 GL_CLAMP_TO_BORDER \u9009\u9879\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u6307\u5b9a\u4e00\u4e2a\u8fb9\u7f18\u7684\u989c\u8272\u3002\u8fd9\u9700\u8981\u4f7f\u7528 glTexParameter \u51fd\u6570\u7684 fv \u540e\u7f00\u5f62\u5f0f\uff0c\u7528 GL_TEXTURE_BORDER_COLOR \u4f5c\u4e3a\u5b83\u7684\u9009\u9879\uff0c\u5e76\u4e14\u4f20\u9012\u4e00\u4e2afloat\u6570\u7ec4\u4f5c\u4e3a\u8fb9\u7f18\u7684\u989c\u8272\u503c\uff1a float borderColor[] = { 1.0f, 1.0f, 0.0f, 1.0f }; glTexParameterfv(GL_TEXTURE_2D, GL_TEXTURE_BORDER_COLOR, borderColor);","title":"\u7eb9\u7406\u73af\u7ed5\u65b9\u5f0f"},{"location":"01%20Getting%20started/06%20Textures/#_3","text":"\u7eb9\u7406\u5750\u6807\u4e0d\u4f9d\u8d56\u4e8e\u5206\u8fa8\u7387(Resolution)\uff0c\u5b83\u53ef\u4ee5\u662f\u4efb\u610f\u6d6e\u70b9\u503c\uff0c\u6240\u4ee5OpenGL\u9700\u8981\u77e5\u9053\u600e\u6837\u5c06\u7eb9\u7406\u50cf\u7d20(Texture Pixel\uff0c\u4e5f\u53ebTexel\uff0c\u8bd1\u6ce81)\u6620\u5c04\u5230\u7eb9\u7406\u5750\u6807\u3002\u5f53\u4f60\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u7269\u4f53\u4f46\u662f\u7eb9\u7406\u7684\u5206\u8fa8\u7387\u5f88\u4f4e\u7684\u65f6\u5019\u8fd9\u5c31\u53d8\u5f97\u5f88\u91cd\u8981\u4e86\u3002\u4f60\u53ef\u80fd\u5df2\u7ecf\u731c\u5230\u4e86\uff0cOpenGL\u4e5f\u6709\u5bf9\u4e8e \u7eb9\u7406\u8fc7\u6ee4 (Texture Filtering)\u7684\u9009\u9879\u3002\u7eb9\u7406\u8fc7\u6ee4\u6709\u5f88\u591a\u4e2a\u9009\u9879\uff0c\u4f46\u662f\u73b0\u5728\u6211\u4eec\u53ea\u8ba8\u8bba\u6700\u91cd\u8981\u7684\u4e24\u79cd\uff1a GL_NEAREST \u548c GL_LINEAR \u3002 \u8bd1\u6ce81 Texture Pixel\u4e5f\u53ebTexel\uff0c\u4f60\u53ef\u4ee5\u60f3\u8c61\u4f60\u6253\u5f00\u4e00\u5f20 .jpg \u683c\u5f0f\u56fe\u7247\uff0c\u4e0d\u65ad\u653e\u5927\u4f60\u4f1a\u53d1\u73b0\u5b83\u662f\u7531\u65e0\u6570\u50cf\u7d20\u70b9\u7ec4\u6210\u7684\uff0c\u8fd9\u4e2a\u70b9\u5c31\u662f\u7eb9\u7406\u50cf\u7d20\uff1b\u6ce8\u610f\u4e0d\u8981\u548c\u7eb9\u7406\u5750\u6807\u641e\u6df7\uff0c\u7eb9\u7406\u5750\u6807\u662f\u4f60\u7ed9\u6a21\u578b\u9876\u70b9\u8bbe\u7f6e\u7684\u90a3\u4e2a\u6570\u7ec4\uff0cOpenGL\u4ee5\u8fd9\u4e2a\u9876\u70b9\u7684\u7eb9\u7406\u5750\u6807\u6570\u636e\u53bb\u67e5\u627e\u7eb9\u7406\u56fe\u50cf\u4e0a\u7684\u50cf\u7d20\uff0c\u7136\u540e\u8fdb\u884c\u91c7\u6837\u63d0\u53d6\u7eb9\u7406\u50cf\u7d20\u7684\u989c\u8272\u3002 GL_NEAREST \uff08\u4e5f\u53eb \u90bb\u8fd1\u8fc7\u6ee4 \uff0cNearest Neighbor Filtering\uff09\u662fOpenGL\u9ed8\u8ba4\u7684\u7eb9\u7406\u8fc7\u6ee4\u65b9\u5f0f\u3002\u5f53\u8bbe\u7f6e\u4e3a GL_NEAREST \u7684\u65f6\u5019\uff0cOpenGL\u4f1a\u9009\u62e9\u4e2d\u5fc3\u70b9\u6700\u63a5\u8fd1\u7eb9\u7406\u5750\u6807\u7684\u90a3\u4e2a\u50cf\u7d20\u3002\u4e0b\u56fe\u4e2d\u4f60\u53ef\u4ee5\u770b\u5230\u56db\u4e2a\u50cf\u7d20\uff0c\u52a0\u53f7\u4ee3\u8868\u7eb9\u7406\u5750\u6807\u3002\u5de6\u4e0a\u89d2\u90a3\u4e2a\u7eb9\u7406\u50cf\u7d20\u7684\u4e2d\u5fc3\u8ddd\u79bb\u7eb9\u7406\u5750\u6807\u6700\u8fd1\uff0c\u6240\u4ee5\u5b83\u4f1a\u88ab\u9009\u62e9\u4e3a\u6837\u672c\u989c\u8272\uff1a GL_LINEAR \uff08\u4e5f\u53eb \u7ebf\u6027\u8fc7\u6ee4 \uff0c(Bi)linear Filtering\uff09\u5b83\u4f1a\u57fa\u4e8e\u7eb9\u7406\u5750\u6807\u9644\u8fd1\u7684\u7eb9\u7406\u50cf\u7d20\uff0c\u8ba1\u7b97\u51fa\u4e00\u4e2a\u63d2\u503c\uff0c\u8fd1\u4f3c\u51fa\u8fd9\u4e9b\u7eb9\u7406\u50cf\u7d20\u4e4b\u95f4\u7684\u989c\u8272\u3002\u4e00\u4e2a\u7eb9\u7406\u50cf\u7d20\u7684\u4e2d\u5fc3\u8ddd\u79bb\u7eb9\u7406\u5750\u6807\u8d8a\u8fd1\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7eb9\u7406\u50cf\u7d20\u7684\u989c\u8272\u5bf9\u6700\u7ec8\u7684\u6837\u672c\u989c\u8272\u7684\u8d21\u732e\u8d8a\u5927\u3002\u4e0b\u56fe\u4e2d\u4f60\u53ef\u4ee5\u770b\u5230\u8fd4\u56de\u7684\u989c\u8272\u662f\u90bb\u8fd1\u50cf\u7d20\u7684\u6df7\u5408\u8272\uff1a \u90a3\u4e48\u8fd9\u4e24\u79cd\u7eb9\u7406\u8fc7\u6ee4\u65b9\u5f0f\u6709\u600e\u6837\u7684\u89c6\u89c9\u6548\u679c\u5462\uff1f\u8ba9\u6211\u4eec\u770b\u770b\u5728\u4e00\u4e2a\u5f88\u5927\u7684\u7269\u4f53\u4e0a\u5e94\u7528\u4e00\u5f20\u4f4e\u5206\u8fa8\u7387\u7684\u7eb9\u7406\u4f1a\u53d1\u751f\u4ec0\u4e48\u5427\uff08\u7eb9\u7406\u88ab\u653e\u5927\u4e86\uff0c\u6bcf\u4e2a\u7eb9\u7406\u50cf\u7d20\u90fd\u80fd\u770b\u5230\uff09\uff1a GL_NEAREST \u4ea7\u751f\u4e86\u9897\u7c92\u72b6\u7684\u56fe\u6848\uff0c\u6211\u4eec\u80fd\u591f\u6e05\u6670\u770b\u5230\u7ec4\u6210\u7eb9\u7406\u7684\u50cf\u7d20\uff0c\u800c GL_LINEAR \u80fd\u591f\u4ea7\u751f\u66f4\u5e73\u6ed1\u7684\u56fe\u6848\uff0c\u5f88\u96be\u770b\u51fa\u5355\u4e2a\u7684\u7eb9\u7406\u50cf\u7d20\u3002 GL_LINEAR \u53ef\u4ee5\u4ea7\u751f\u66f4\u771f\u5b9e\u7684\u8f93\u51fa\uff0c\u4f46\u6709\u4e9b\u5f00\u53d1\u8005\u66f4\u559c\u6b228-bit\u98ce\u683c\uff0c\u6240\u4ee5\u4ed6\u4eec\u4f1a\u7528 GL_NEAREST \u9009\u9879\u3002 \u5f53\u8fdb\u884c \u653e\u5927 (Magnify)\u548c \u7f29\u5c0f (Minify)\u64cd\u4f5c\u7684\u65f6\u5019\u53ef\u4ee5\u8bbe\u7f6e\u7eb9\u7406\u8fc7\u6ee4\u7684\u9009\u9879\uff0c\u6bd4\u5982\u4f60\u53ef\u4ee5\u5728\u7eb9\u7406\u88ab\u7f29\u5c0f\u7684\u65f6\u5019\u4f7f\u7528\u90bb\u8fd1\u8fc7\u6ee4\uff0c\u88ab\u653e\u5927\u65f6\u4f7f\u7528\u7ebf\u6027\u8fc7\u6ee4\u3002\u6211\u4eec\u9700\u8981\u4f7f\u7528 glTexParameter* \u51fd\u6570\u4e3a\u653e\u5927\u548c\u7f29\u5c0f\u6307\u5b9a\u8fc7\u6ee4\u65b9\u5f0f\u3002\u8fd9\u6bb5\u4ee3\u7801\u770b\u8d77\u6765\u4f1a\u548c\u7eb9\u7406\u73af\u7ed5\u65b9\u5f0f\u7684\u8bbe\u7f6e\u5f88\u76f8\u4f3c\uff1a glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);","title":"\u7eb9\u7406\u8fc7\u6ee4"},{"location":"01%20Getting%20started/06%20Textures/#_4","text":"\u60f3\u8c61\u4e00\u4e0b\uff0c\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5305\u542b\u7740\u4e0a\u5343\u7269\u4f53\u7684\u5927\u623f\u95f4\uff0c\u6bcf\u4e2a\u7269\u4f53\u4e0a\u90fd\u6709\u7eb9\u7406\u3002\u6709\u4e9b\u7269\u4f53\u4f1a\u5f88\u8fdc\uff0c\u4f46\u5176\u7eb9\u7406\u4f1a\u62e5\u6709\u4e0e\u8fd1\u5904\u7269\u4f53\u540c\u6837\u9ad8\u7684\u5206\u8fa8\u7387\u3002\u7531\u4e8e\u8fdc\u5904\u7684\u7269\u4f53\u53ef\u80fd\u53ea\u4ea7\u751f\u5f88\u5c11\u7684\u7247\u6bb5\uff0cOpenGL\u4ece\u9ad8\u5206\u8fa8\u7387\u7eb9\u7406\u4e2d\u4e3a\u8fd9\u4e9b\u7247\u6bb5\u83b7\u53d6\u6b63\u786e\u7684\u989c\u8272\u503c\u5c31\u5f88\u56f0\u96be\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u5bf9\u4e00\u4e2a\u8de8\u8fc7\u7eb9\u7406\u5f88\u5927\u90e8\u5206\u7684\u7247\u6bb5\u53ea\u62fe\u53d6\u4e00\u4e2a\u7eb9\u7406\u989c\u8272\u3002\u5728\u5c0f\u7269\u4f53\u4e0a\u8fd9\u4f1a\u4ea7\u751f\u4e0d\u771f\u5b9e\u7684\u611f\u89c9\uff0c\u66f4\u4e0d\u7528\u8bf4\u5bf9\u5b83\u4eec\u4f7f\u7528\u9ad8\u5206\u8fa8\u7387\u7eb9\u7406\u6d6a\u8d39\u5185\u5b58\u7684\u95ee\u9898\u4e86\u3002 OpenGL\u4f7f\u7528\u4e00\u79cd\u53eb\u505a \u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406 (Mipmap)\u7684\u6982\u5ff5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5b83\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u4e00\u7cfb\u5217\u7684\u7eb9\u7406\u56fe\u50cf\uff0c\u540e\u4e00\u4e2a\u7eb9\u7406\u56fe\u50cf\u662f\u524d\u4e00\u4e2a\u7684\u4e8c\u5206\u4e4b\u4e00\u3002\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u80cc\u540e\u7684\u7406\u5ff5\u5f88\u7b80\u5355\uff1a\u8ddd\u89c2\u5bdf\u8005\u7684\u8ddd\u79bb\u8d85\u8fc7\u4e00\u5b9a\u7684\u9608\u503c\uff0cOpenGL\u4f1a\u4f7f\u7528\u4e0d\u540c\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\uff0c\u5373\u6700\u9002\u5408\u7269\u4f53\u7684\u8ddd\u79bb\u7684\u90a3\u4e2a\u3002\u7531\u4e8e\u8ddd\u79bb\u8fdc\uff0c\u89e3\u6790\u5ea6\u4e0d\u9ad8\u4e5f\u4e0d\u4f1a\u88ab\u7528\u6237\u6ce8\u610f\u5230\u3002\u540c\u65f6\uff0c\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u53e6\u4e00\u52a0\u5206\u4e4b\u5904\u662f\u5b83\u7684\u6027\u80fd\u975e\u5e38\u597d\u3002\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u662f\u4ec0\u4e48\u6837\u5b50\u7684\uff1a \u624b\u5de5\u4e3a\u6bcf\u4e2a\u7eb9\u7406\u56fe\u50cf\u521b\u5efa\u4e00\u7cfb\u5217\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u5f88\u9ebb\u70e6\uff0c\u5e78\u597dOpenGL\u6709\u4e00\u4e2a glGenerateMipmap \u51fd\u6570\uff0c\u5728\u521b\u5efa\u5b8c\u4e00\u4e2a\u7eb9\u7406\u540e\u8c03\u7528\u5b83OpenGL\u5c31\u4f1a\u627f\u62c5\u63a5\u4e0b\u6765\u7684\u6240\u6709\u5de5\u4f5c\u4e86\u3002\u540e\u9762\u7684\u6559\u7a0b\u4e2d\u4f60\u4f1a\u770b\u5230\u8be5\u5982\u4f55\u4f7f\u7528\u5b83\u3002 \u5728\u6e32\u67d3\u4e2d\u5207\u6362\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7ea7\u522b(Level)\u65f6\uff0cOpenGL\u5728\u4e24\u4e2a\u4e0d\u540c\u7ea7\u522b\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u5c42\u4e4b\u95f4\u4f1a\u4ea7\u751f\u4e0d\u771f\u5b9e\u7684\u751f\u786c\u8fb9\u754c\u3002\u5c31\u50cf\u666e\u901a\u7684\u7eb9\u7406\u8fc7\u6ee4\u4e00\u6837\uff0c\u5207\u6362\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7ea7\u522b\u65f6\u4f60\u4e5f\u53ef\u4ee5\u5728\u4e24\u4e2a\u4e0d\u540c\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7ea7\u522b\u4e4b\u95f4\u4f7f\u7528 NEAREST \u548c LINEAR \u8fc7\u6ee4\u3002\u4e3a\u4e86\u6307\u5b9a\u4e0d\u540c\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7ea7\u522b\u4e4b\u95f4\u7684\u8fc7\u6ee4\u65b9\u5f0f\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u56db\u4e2a\u9009\u9879\u4e2d\u7684\u4e00\u4e2a\u4ee3\u66ff\u539f\u6709\u7684\u8fc7\u6ee4\u65b9\u5f0f\uff1a \u8fc7\u6ee4\u65b9\u5f0f \u63cf\u8ff0 GL_NEAREST_MIPMAP_NEAREST \u4f7f\u7528\u6700\u90bb\u8fd1\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u6765\u5339\u914d\u50cf\u7d20\u5927\u5c0f\uff0c\u5e76\u4f7f\u7528\u90bb\u8fd1\u63d2\u503c\u8fdb\u884c\u7eb9\u7406\u91c7\u6837 GL_LINEAR_MIPMAP_NEAREST \u4f7f\u7528\u6700\u90bb\u8fd1\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7ea7\u522b\uff0c\u5e76\u4f7f\u7528\u7ebf\u6027\u63d2\u503c\u8fdb\u884c\u91c7\u6837 GL_NEAREST_MIPMAP_LINEAR \u5728\u4e24\u4e2a\u6700\u5339\u914d\u50cf\u7d20\u5927\u5c0f\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u4e4b\u95f4\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\uff0c\u4f7f\u7528\u90bb\u8fd1\u63d2\u503c\u8fdb\u884c\u91c7\u6837 GL_LINEAR_MIPMAP_LINEAR \u5728\u4e24\u4e2a\u90bb\u8fd1\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u4e4b\u95f4\u4f7f\u7528\u7ebf\u6027\u63d2\u503c\uff0c\u5e76\u4f7f\u7528\u7ebf\u6027\u63d2\u503c\u8fdb\u884c\u91c7\u6837 \u5c31\u50cf\u7eb9\u7406\u8fc7\u6ee4\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 glTexParameteri \u5c06\u8fc7\u6ee4\u65b9\u5f0f\u8bbe\u7f6e\u4e3a\u524d\u9762\u56db\u79cd\u63d0\u5230\u7684\u65b9\u6cd5\u4e4b\u4e00\uff1a glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR); \u4e00\u4e2a\u5e38\u89c1\u7684\u9519\u8bef\u662f\uff0c\u5c06\u653e\u5927\u8fc7\u6ee4\u7684\u9009\u9879\u8bbe\u7f6e\u4e3a\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u8fc7\u6ee4\u9009\u9879\u4e4b\u4e00\u3002\u8fd9\u6837\u6ca1\u6709\u4efb\u4f55\u6548\u679c\uff0c\u56e0\u4e3a\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u4e3b\u8981\u662f\u4f7f\u7528\u5728\u7eb9\u7406\u88ab\u7f29\u5c0f\u7684\u60c5\u51b5\u4e0b\u7684\uff1a\u7eb9\u7406\u653e\u5927\u4e0d\u4f1a\u4f7f\u7528\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\uff0c\u4e3a\u653e\u5927\u8fc7\u6ee4\u8bbe\u7f6e\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7684\u9009\u9879\u4f1a\u4ea7\u751f\u4e00\u4e2a GL_INVALID_ENUM \u9519\u8bef\u4ee3\u7801\u3002","title":"\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406"},{"location":"01%20Getting%20started/06%20Textures/#_5","text":"\u4f7f\u7528\u7eb9\u7406\u4e4b\u524d\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u628a\u5b83\u4eec\u52a0\u8f7d\u5230\u6211\u4eec\u7684\u5e94\u7528\u4e2d\u3002\u7eb9\u7406\u56fe\u50cf\u53ef\u80fd\u88ab\u50a8\u5b58\u4e3a\u5404\u79cd\u5404\u6837\u7684\u683c\u5f0f\uff0c\u6bcf\u79cd\u90fd\u6709\u81ea\u5df1\u7684\u6570\u636e\u7ed3\u6784\u548c\u6392\u5217\uff0c\u6240\u4ee5\u6211\u4eec\u5982\u4f55\u624d\u80fd\u628a\u8fd9\u4e9b\u56fe\u50cf\u52a0\u8f7d\u5230\u5e94\u7528\u4e2d\u5462\uff1f\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\u9009\u4e00\u4e2a\u9700\u8981\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u6bd4\u5982 .PNG \uff0c\u7136\u540e\u81ea\u5df1\u5199\u4e00\u4e2a\u56fe\u50cf\u52a0\u8f7d\u5668\uff0c\u628a\u56fe\u50cf\u8f6c\u5316\u4e3a\u5b57\u8282\u5e8f\u5217\u3002\u5199\u81ea\u5df1\u7684\u56fe\u50cf\u52a0\u8f7d\u5668\u867d\u7136\u4e0d\u96be\uff0c\u4f46\u4ecd\u7136\u633a\u9ebb\u70e6\u7684\uff0c\u800c\u4e14\u5982\u679c\u8981\u652f\u6301\u66f4\u591a\u6587\u4ef6\u683c\u5f0f\u5462\uff1f\u4f60\u5c31\u4e0d\u5f97\u4e0d\u4e3a\u6bcf\u79cd\u4f60\u5e0c\u671b\u652f\u6301\u7684\u683c\u5f0f\u5199\u52a0\u8f7d\u5668\u4e86\u3002 \u53e6\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u4e5f\u8bb8\u662f\u4e00\u79cd\u66f4\u597d\u7684\u9009\u62e9\uff0c\u4f7f\u7528\u4e00\u4e2a\u652f\u6301\u591a\u79cd\u6d41\u884c\u683c\u5f0f\u7684\u56fe\u50cf\u52a0\u8f7d\u5e93\u6765\u4e3a\u6211\u4eec\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u8981\u7528\u7684 stb_image.h \u5e93\u3002","title":"\u52a0\u8f7d\u4e0e\u521b\u5efa\u7eb9\u7406"},{"location":"01%20Getting%20started/06%20Textures/#stb_imageh","text":"stb_image.h \u662f Sean Barrett \u7684\u4e00\u4e2a\u975e\u5e38\u6d41\u884c\u7684\u5355\u5934\u6587\u4ef6\u56fe\u50cf\u52a0\u8f7d\u5e93\uff0c\u5b83\u80fd\u591f\u52a0\u8f7d\u5927\u90e8\u5206\u6d41\u884c\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u5e76\u4e14\u80fd\u591f\u5f88\u7b80\u5355\u5f97\u6574\u5408\u5230\u4f60\u7684\u5de5\u7a0b\u4e4b\u4e2d\u3002 stb_image.h \u53ef\u4ee5\u5728 \u8fd9\u91cc \u4e0b\u8f7d\u3002\u4e0b\u8f7d\u8fd9\u4e00\u4e2a\u5934\u6587\u4ef6\uff0c\u5c06\u5b83\u4ee5 stb_image.h \u7684\u540d\u5b57\u52a0\u5165\u4f60\u7684\u5de5\u7a0b\uff0c\u5e76\u53e6\u521b\u5efa\u4e00\u4e2a\u65b0\u7684C++\u6587\u4ef6\uff0c\u8f93\u5165\u4ee5\u4e0b\u4ee3\u7801\uff1a #define STB_IMAGE_IMPLEMENTATION #include \"stb_image.h\" \u901a\u8fc7\u5b9a\u4e49 STB_IMAGE_IMPLEMENTATION \uff0c\u9884\u5904\u7406\u5668\u4f1a\u4fee\u6539\u5934\u6587\u4ef6\uff0c\u8ba9\u5176\u53ea\u5305\u542b\u76f8\u5173\u7684\u51fd\u6570\u5b9a\u4e49\u6e90\u7801\uff0c\u7b49\u4e8e\u662f\u5c06\u8fd9\u4e2a\u5934\u6587\u4ef6\u53d8\u4e3a\u4e00\u4e2a .cpp \u6587\u4ef6\u4e86\u3002\u73b0\u5728\u53ea\u9700\u8981\u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\u5305\u542b stb_image.h \u5e76\u7f16\u8bd1\u5c31\u53ef\u4ee5\u4e86\u3002 \u4e0b\u9762\u7684\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u4e00\u5f20 \u6728\u7bb1 \u7684\u56fe\u7247\u3002\u8981\u4f7f\u7528 stb_image.h \u52a0\u8f7d\u56fe\u7247\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5b83\u7684 stbi_load \u51fd\u6570\uff1a int width, height, nrChannels; unsigned char *data = stbi_load(\"container.jpg\", &width, &height, &nrChannels, 0); \u8fd9\u4e2a\u51fd\u6570\u9996\u5148\u63a5\u53d7\u4e00\u4e2a\u56fe\u50cf\u6587\u4ef6\u7684\u4f4d\u7f6e\u4f5c\u4e3a\u8f93\u5165\u3002\u63a5\u4e0b\u6765\u5b83\u9700\u8981\u4e09\u4e2a int \u4f5c\u4e3a\u5b83\u7684\u7b2c\u4e8c\u3001\u7b2c\u4e09\u548c\u7b2c\u56db\u4e2a\u53c2\u6570\uff0c stb_image.h \u5c06\u4f1a\u7528\u56fe\u50cf\u7684 \u5bbd\u5ea6 \u3001 \u9ad8\u5ea6 \u548c \u989c\u8272\u901a\u9053\u7684\u4e2a\u6570 \u586b\u5145\u8fd9\u4e09\u4e2a\u53d8\u91cf\u3002\u6211\u4eec\u4e4b\u540e\u751f\u6210\u7eb9\u7406\u7684\u65f6\u5019\u4f1a\u7528\u5230\u7684\u56fe\u50cf\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u7684\u3002","title":"stb_image.h"},{"location":"01%20Getting%20started/06%20Textures/#_6","text":"\u548c\u4e4b\u524d\u751f\u6210\u7684OpenGL\u5bf9\u8c61\u4e00\u6837\uff0c\u7eb9\u7406\u4e5f\u662f\u4f7f\u7528ID\u5f15\u7528\u7684\u3002\u8ba9\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\uff1a unsigned int texture; glGenTextures(1, &texture); glGenTextures \u51fd\u6570\u9996\u5148\u9700\u8981\u8f93\u5165\u751f\u6210\u7eb9\u7406\u7684\u6570\u91cf\uff0c\u7136\u540e\u628a\u5b83\u4eec\u50a8\u5b58\u5728\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684 unsigned int \u6570\u7ec4\u4e2d\uff08\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u53ea\u662f\u5355\u72ec\u7684\u4e00\u4e2a unsigned int \uff09\uff0c\u5c31\u50cf\u5176\u4ed6\u5bf9\u8c61\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u7ed1\u5b9a\u5b83\uff0c\u8ba9\u4e4b\u540e\u4efb\u4f55\u7684\u7eb9\u7406\u6307\u4ee4\u90fd\u53ef\u4ee5\u914d\u7f6e\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\uff1a glBindTexture(GL_TEXTURE_2D, texture); \u73b0\u5728\u7eb9\u7406\u5df2\u7ecf\u7ed1\u5b9a\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u524d\u9762\u8f7d\u5165\u7684\u56fe\u7247\u6570\u636e\u751f\u6210\u4e00\u4e2a\u7eb9\u7406\u4e86\u3002\u7eb9\u7406\u53ef\u4ee5\u901a\u8fc7 glTexImage2D \u6765\u751f\u6210\uff1a glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, data); glGenerateMipmap(GL_TEXTURE_2D); \u51fd\u6570\u5f88\u957f\uff0c\u53c2\u6570\u4e5f\u4e0d\u5c11\uff0c\u6240\u4ee5\u6211\u4eec\u4e00\u4e2a\u4e00\u4e2a\u5730\u8bb2\u89e3\uff1a \u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u4e86\u7eb9\u7406\u76ee\u6807(Target)\u3002\u8bbe\u7f6e\u4e3a GL_TEXTURE_2D \u610f\u5473\u7740\u4f1a\u751f\u6210\u4e0e\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\u5bf9\u8c61\u5728\u540c\u4e00\u4e2a\u76ee\u6807\u4e0a\u7684\u7eb9\u7406\uff08\u4efb\u4f55\u7ed1\u5b9a\u5230 GL_TEXTURE_1D \u548c GL_TEXTURE_3D \u7684\u7eb9\u7406\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\uff09\u3002 \u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u7eb9\u7406\u6307\u5b9a\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7684\u7ea7\u522b\uff0c\u5982\u679c\u4f60\u5e0c\u671b\u5355\u72ec\u624b\u52a8\u8bbe\u7f6e\u6bcf\u4e2a\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7684\u7ea7\u522b\u7684\u8bdd\u3002\u8fd9\u91cc\u6211\u4eec\u586b0\uff0c\u4e5f\u5c31\u662f\u57fa\u672c\u7ea7\u522b\u3002 \u7b2c\u4e09\u4e2a\u53c2\u6570\u544a\u8bc9OpenGL\u6211\u4eec\u5e0c\u671b\u628a\u7eb9\u7406\u50a8\u5b58\u4e3a\u4f55\u79cd\u683c\u5f0f\u3002\u6211\u4eec\u7684\u56fe\u50cf\u53ea\u6709 RGB \u503c\uff0c\u56e0\u6b64\u6211\u4eec\u4e5f\u628a\u7eb9\u7406\u50a8\u5b58\u4e3a RGB \u503c\u3002 \u7b2c\u56db\u4e2a\u548c\u7b2c\u4e94\u4e2a\u53c2\u6570\u8bbe\u7f6e\u6700\u7ec8\u7684\u7eb9\u7406\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002\u6211\u4eec\u4e4b\u524d\u52a0\u8f7d\u56fe\u50cf\u7684\u65f6\u5019\u50a8\u5b58\u4e86\u5b83\u4eec\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u5bf9\u5e94\u7684\u53d8\u91cf\u3002 \u4e0b\u4e2a\u53c2\u6570\u5e94\u8be5\u603b\u662f\u88ab\u8bbe\u4e3a 0 \uff08\u5386\u53f2\u9057\u7559\u7684\u95ee\u9898\uff09\u3002 \u7b2c\u4e03\u7b2c\u516b\u4e2a\u53c2\u6570\u5b9a\u4e49\u4e86\u6e90\u56fe\u7684\u683c\u5f0f\u548c\u6570\u636e\u7c7b\u578b\u3002\u6211\u4eec\u4f7f\u7528RGB\u503c\u52a0\u8f7d\u8fd9\u4e2a\u56fe\u50cf\uff0c\u5e76\u628a\u5b83\u4eec\u50a8\u5b58\u4e3a char (byte)\u6570\u7ec4\uff0c\u6211\u4eec\u5c06\u4f1a\u4f20\u5165\u5bf9\u5e94\u503c\u3002 \u6700\u540e\u4e00\u4e2a\u53c2\u6570\u662f\u771f\u6b63\u7684\u56fe\u50cf\u6570\u636e\u3002 \u5f53\u8c03\u7528 glTexImage2D \u65f6\uff0c\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\u5bf9\u8c61\u5c31\u4f1a\u88ab\u9644\u52a0\u4e0a\u7eb9\u7406\u56fe\u50cf\u3002\u7136\u800c\uff0c\u76ee\u524d\u53ea\u6709\u57fa\u672c\u7ea7\u522b(Base-level)\u7684\u7eb9\u7406\u56fe\u50cf\u88ab\u52a0\u8f7d\u4e86\uff0c\u5982\u679c\u8981\u4f7f\u7528\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\uff0c\u6211\u4eec\u5fc5\u987b\u624b\u52a8\u8bbe\u7f6e\u6240\u6709\u4e0d\u540c\u7684\u56fe\u50cf\uff08\u4e0d\u65ad\u9012\u589e\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff09\u3002\u6216\u8005\uff0c\u76f4\u63a5\u5728\u751f\u6210\u7eb9\u7406\u4e4b\u540e\u8c03\u7528 glGenerateMipmap \u3002\u8fd9\u4f1a\u4e3a\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\u81ea\u52a8\u751f\u6210\u6240\u6709\u9700\u8981\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u3002 \u751f\u6210\u4e86\u7eb9\u7406\u548c\u76f8\u5e94\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u540e\uff0c\u91ca\u653e\u56fe\u50cf\u7684\u5185\u5b58\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4e60\u60ef\u3002 stbi_image_free(data); \u751f\u6210\u4e00\u4e2a\u7eb9\u7406\u7684\u8fc7\u7a0b\u5e94\u8be5\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a unsigned int texture; glGenTextures(1, &texture); glBindTexture(GL_TEXTURE_2D, texture); // \u4e3a\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\u5bf9\u8c61\u8bbe\u7f6e\u73af\u7ed5\u3001\u8fc7\u6ee4\u65b9\u5f0f glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR); // \u52a0\u8f7d\u5e76\u751f\u6210\u7eb9\u7406 int width, height, nrChannels; unsigned char *data = stbi_load(\"container.jpg\", &width, &height, &nrChannels, 0); if (data) { glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, data); glGenerateMipmap(GL_TEXTURE_2D); } else { std::cout << \"Failed to load texture\" << std::endl; } stbi_image_free(data);","title":"\u751f\u6210\u7eb9\u7406"},{"location":"01%20Getting%20started/06%20Textures/#_7","text":"\u540e\u9762\u7684\u8fd9\u90e8\u5206\u6211\u4eec\u4f1a\u4f7f\u7528 glDrawElements \u7ed8\u5236 \u300c\u4f60\u597d\uff0c\u4e09\u89d2\u5f62\u300d \u6559\u7a0b\u6700\u540e\u4e00\u90e8\u5206\u7684\u77e9\u5f62\u3002\u6211\u4eec\u9700\u8981\u544a\u77e5OpenGL\u5982\u4f55\u91c7\u6837\u7eb9\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u4f7f\u7528\u7eb9\u7406\u5750\u6807\u66f4\u65b0\u9876\u70b9\u6570\u636e\uff1a float vertices[] = { // ---- \u4f4d\u7f6e ---- ---- \u989c\u8272 ---- - \u7eb9\u7406\u5750\u6807 - 0.5f, 0.5f, 0.0f, 1.0f, 0.0f, 0.0f, 1.0f, 1.0f, // \u53f3\u4e0a 0.5f, -0.5f, 0.0f, 0.0f, 1.0f, 0.0f, 1.0f, 0.0f, // \u53f3\u4e0b -0.5f, -0.5f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, // \u5de6\u4e0b -0.5f, 0.5f, 0.0f, 1.0f, 1.0f, 0.0f, 0.0f, 1.0f // \u5de6\u4e0a }; \u7531\u4e8e\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a\u989d\u5916\u7684\u9876\u70b9\u5c5e\u6027\uff0c\u6211\u4eec\u5fc5\u987b\u544a\u8bc9OpenGL\u6211\u4eec\u65b0\u7684\u9876\u70b9\u683c\u5f0f\uff1a glVertexAttribPointer(2, 2, GL_FLOAT, GL_FALSE, 8 * sizeof(float), (void*)(6 * sizeof(float))); glEnableVertexAttribArray(2); \u6ce8\u610f\uff0c\u6211\u4eec\u540c\u6837\u9700\u8981\u8c03\u6574\u524d\u9762\u4e24\u4e2a\u9876\u70b9\u5c5e\u6027\u7684\u6b65\u957f\u53c2\u6570\u4e3a 8 * sizeof(float) \u3002 \u63a5\u7740\u6211\u4eec\u9700\u8981\u8c03\u6574\u9876\u70b9\u7740\u8272\u5668\u4f7f\u5176\u80fd\u591f\u63a5\u53d7\u9876\u70b9\u5750\u6807\u4e3a\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\uff0c\u5e76\u628a\u5750\u6807\u4f20\u7ed9\u7247\u6bb5\u7740\u8272\u5668\uff1a #version 330 core layout (location = 0) in vec3 aPos; layout (location = 1) in vec3 aColor; layout (location = 2) in vec2 aTexCoord; out vec3 ourColor; out vec2 TexCoord; void main() { gl_Position = vec4(aPos, 1.0); ourColor = aColor; TexCoord = aTexCoord; } \u7247\u6bb5\u7740\u8272\u5668\u5e94\u8be5\u63a5\u4e0b\u6765\u4f1a\u628a\u8f93\u51fa\u53d8\u91cf TexCoord \u4f5c\u4e3a\u8f93\u5165\u53d8\u91cf\u3002 \u7247\u6bb5\u7740\u8272\u5668\u4e5f\u5e94\u8be5\u80fd\u8bbf\u95ee\u7eb9\u7406\u5bf9\u8c61\uff0c\u4f46\u662f\u6211\u4eec\u600e\u6837\u80fd\u628a\u7eb9\u7406\u5bf9\u8c61\u4f20\u7ed9\u7247\u6bb5\u7740\u8272\u5668\u5462\uff1fGLSL\u6709\u4e00\u4e2a\u4f9b\u7eb9\u7406\u5bf9\u8c61\u4f7f\u7528\u7684\u5185\u5efa\u6570\u636e\u7c7b\u578b\uff0c\u53eb\u505a \u91c7\u6837\u5668 (Sampler)\uff0c\u5b83\u4ee5\u7eb9\u7406\u7c7b\u578b\u4f5c\u4e3a\u540e\u7f00\uff0c\u6bd4\u5982 sampler1D \u3001 sampler3D \uff0c\u6216\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u7684 sampler2D \u3002\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u58f0\u660e\u4e00\u4e2a uniform sampler2D \u628a\u4e00\u4e2a\u7eb9\u7406\u6dfb\u52a0\u5230\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u7a0d\u540e\u6211\u4eec\u4f1a\u628a\u7eb9\u7406\u8d4b\u503c\u7ed9\u8fd9\u4e2auniform\u3002 #version 330 core out vec4 FragColor; in vec3 ourColor; in vec2 TexCoord; uniform sampler2D ourTexture; void main() { FragColor = texture(ourTexture, TexCoord); } \u6211\u4eec\u4f7f\u7528GLSL\u5185\u5efa\u7684 texture \u51fd\u6570\u6765\u91c7\u6837\u7eb9\u7406\u7684\u989c\u8272\uff0c\u5b83\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u7eb9\u7406\u91c7\u6837\u5668\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5bf9\u5e94\u7684\u7eb9\u7406\u5750\u6807\u3002 texture \u51fd\u6570\u4f1a\u4f7f\u7528\u4e4b\u524d\u8bbe\u7f6e\u7684\u7eb9\u7406\u53c2\u6570\u5bf9\u76f8\u5e94\u7684\u989c\u8272\u503c\u8fdb\u884c\u91c7\u6837\u3002\u8fd9\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u7684\u8f93\u51fa\u5c31\u662f\u7eb9\u7406\u7684\uff08\u63d2\u503c\uff09\u7eb9\u7406\u5750\u6807\u4e0a\u7684(\u8fc7\u6ee4\u540e\u7684)\u989c\u8272\u3002 \u73b0\u5728\u53ea\u5269\u4e0b\u5728\u8c03\u7528 glDrawElements \u4e4b\u524d\u7ed1\u5b9a\u7eb9\u7406\u4e86\uff0c\u5b83\u4f1a\u81ea\u52a8\u628a\u7eb9\u7406\u8d4b\u503c\u7ed9\u7247\u6bb5\u7740\u8272\u5668\u7684\u91c7\u6837\u5668\uff1a glBindTexture(GL_TEXTURE_2D, texture); glBindVertexArray(VAO); glDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_INT, 0); \u5982\u679c\u4f60\u8ddf\u7740\u8fd9\u4e2a\u6559\u7a0b\u6b63\u786e\u5730\u505a\u5b8c\u4e86\uff0c\u4f60\u4f1a\u770b\u5230\u4e0b\u9762\u7684\u56fe\u50cf\uff1a \u5982\u679c\u4f60\u7684\u77e9\u5f62\u662f\u5168\u9ed1\u6216\u5168\u767d\u7684\u4f60\u53ef\u80fd\u5728\u54ea\u513f\u505a\u9519\u4e86\u4ec0\u4e48\u3002\u68c0\u67e5\u4f60\u7684\u7740\u8272\u5668\u65e5\u5fd7\uff0c\u5e76\u5c1d\u8bd5\u5bf9\u6bd4\u4e00\u4e0b \u6e90\u7801 \u3002 Attention \u5982\u679c\u4f60\u7684\u7eb9\u7406\u4ee3\u7801\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\u6216\u8005\u663e\u793a\u662f\u5168\u9ed1\uff0c\u8bf7\u7ee7\u7eed\u9605\u8bfb\uff0c\u5e76\u4e00\u76f4\u8ddf\u8fdb\u6211\u4eec\u7684\u4ee3\u7801\u5230\u6700\u540e\u7684\u4f8b\u5b50\uff0c\u5b83\u662f\u5e94\u8be5\u80fd\u591f\u5de5\u4f5c\u7684\u3002\u5728\u4e00\u4e9b\u9a71\u52a8\u4e2d\uff0c\u5fc5\u987b\u8981\u5bf9\u6bcf\u4e2a\u91c7\u6837\u5668uniform\u90fd\u9644\u52a0\u4e0a\u7eb9\u7406\u5355\u5143\u624d\u53ef\u4ee5\uff0c\u8fd9\u4e2a\u4f1a\u5728\u4e0b\u9762\u4ecb\u7ecd\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u628a\u5f97\u5230\u7684\u7eb9\u7406\u989c\u8272\u4e0e\u9876\u70b9\u989c\u8272\u6df7\u5408\uff0c\u6765\u83b7\u5f97\u66f4\u6709\u8da3\u7684\u6548\u679c\u3002\u6211\u4eec\u53ea\u9700\u628a\u7eb9\u7406\u989c\u8272\u4e0e\u9876\u70b9\u989c\u8272\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u76f8\u4e58\u6765\u6df7\u5408\u4e8c\u8005\u7684\u989c\u8272\uff1a FragColor = texture(ourTexture, TexCoord) * vec4(ourColor, 1.0); \u6700\u7ec8\u7684\u6548\u679c\u5e94\u8be5\u662f\u9876\u70b9\u989c\u8272\u548c\u7eb9\u7406\u989c\u8272\u7684\u6df7\u5408\u8272\uff1a \u6211\u731c\u4f60\u4f1a\u8bf4\u6211\u4eec\u7684\u7bb1\u5b50\u559c\u6b22\u8df370\u5e74\u4ee3\u7684\u8fea\u65af\u79d1\u3002","title":"\u5e94\u7528\u7eb9\u7406"},{"location":"01%20Getting%20started/06%20Textures/#_8","text":"\u4f60\u53ef\u80fd\u4f1a\u5947\u602a\u4e3a\u4ec0\u4e48 sampler2D \u53d8\u91cf\u662f\u4e2auniform\uff0c\u6211\u4eec\u5374\u4e0d\u7528 glUniform \u7ed9\u5b83\u8d4b\u503c\u3002\u4f7f\u7528 glUniform1i \uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u7eb9\u7406\u91c7\u6837\u5668\u5206\u914d\u4e00\u4e2a\u4f4d\u7f6e\u503c\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u80fd\u591f\u5728\u4e00\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u8bbe\u7f6e\u591a\u4e2a\u7eb9\u7406\u3002\u4e00\u4e2a\u7eb9\u7406\u7684\u4f4d\u7f6e\u503c\u901a\u5e38\u79f0\u4e3a\u4e00\u4e2a \u7eb9\u7406\u5355\u5143 (Texture Unit)\u3002\u4e00\u4e2a\u7eb9\u7406\u7684\u9ed8\u8ba4\u7eb9\u7406\u5355\u5143\u662f0\uff0c\u5b83\u662f\u9ed8\u8ba4\u7684\u6fc0\u6d3b\u7eb9\u7406\u5355\u5143\uff0c\u6240\u4ee5\u6559\u7a0b\u524d\u9762\u90e8\u5206\u6211\u4eec\u6ca1\u6709\u5206\u914d\u4e00\u4e2a\u4f4d\u7f6e\u503c\u3002 \u7eb9\u7406\u5355\u5143\u7684\u4e3b\u8981\u76ee\u7684\u662f\u8ba9\u6211\u4eec\u5728\u7740\u8272\u5668\u4e2d\u53ef\u4ee5\u4f7f\u7528\u591a\u4e8e\u4e00\u4e2a\u7684\u7eb9\u7406\u3002\u901a\u8fc7\u628a\u7eb9\u7406\u5355\u5143\u8d4b\u503c\u7ed9\u91c7\u6837\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u6b21\u7ed1\u5b9a\u591a\u4e2a\u7eb9\u7406\uff0c\u53ea\u8981\u6211\u4eec\u9996\u5148\u6fc0\u6d3b\u5bf9\u5e94\u7684\u7eb9\u7406\u5355\u5143\u3002\u5c31\u50cf glBindTexture \u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 glActiveTexture \u6fc0\u6d3b\u7eb9\u7406\u5355\u5143\uff0c\u4f20\u5165\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7684\u7eb9\u7406\u5355\u5143\uff1a glActiveTexture(GL_TEXTURE0); // \u5728\u7ed1\u5b9a\u7eb9\u7406\u4e4b\u524d\u5148\u6fc0\u6d3b\u7eb9\u7406\u5355\u5143 glBindTexture(GL_TEXTURE_2D, texture); \u6fc0\u6d3b\u7eb9\u7406\u5355\u5143\u4e4b\u540e\uff0c\u63a5\u4e0b\u6765\u7684 glBindTexture \u51fd\u6570\u8c03\u7528\u4f1a\u7ed1\u5b9a\u8fd9\u4e2a\u7eb9\u7406\u5230\u5f53\u524d\u6fc0\u6d3b\u7684\u7eb9\u7406\u5355\u5143\uff0c\u7eb9\u7406\u5355\u5143 GL_TEXTURE0 \u9ed8\u8ba4\u603b\u662f\u88ab\u6fc0\u6d3b\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u524d\u9762\u7684\u4f8b\u5b50\u91cc\u5f53\u6211\u4eec\u4f7f\u7528 glBindTexture \u7684\u65f6\u5019\uff0c\u65e0\u9700\u6fc0\u6d3b\u4efb\u4f55\u7eb9\u7406\u5355\u5143\u3002 Important OpenGL\u81f3\u5c11\u4fdd\u8bc1\u670916\u4e2a\u7eb9\u7406\u5355\u5143\u4f9b\u4f60\u4f7f\u7528\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u53ef\u4ee5\u6fc0\u6d3b\u4ece GL_TEXTURE0 \u5230 GL_TEXTRUE15 \u3002\u5b83\u4eec\u90fd\u662f\u6309\u987a\u5e8f\u5b9a\u4e49\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7 GL_TEXTURE0 + 8 \u7684\u65b9\u5f0f\u83b7\u5f97 GL_TEXTURE8 \uff0c\u8fd9\u5728\u5f53\u6211\u4eec\u9700\u8981\u5faa\u73af\u4e00\u4e9b\u7eb9\u7406\u5355\u5143\u7684\u65f6\u5019\u4f1a\u5f88\u6709\u7528\u3002 \u6211\u4eec\u4ecd\u7136\u9700\u8981\u7f16\u8f91\u7247\u6bb5\u7740\u8272\u5668\u6765\u63a5\u6536\u53e6\u4e00\u4e2a\u91c7\u6837\u5668\u3002\u8fd9\u5e94\u8be5\u76f8\u5bf9\u6765\u8bf4\u975e\u5e38\u76f4\u63a5\u4e86\uff1a #version 330 core ... uniform sampler2D texture1; uniform sampler2D texture2; void main() { FragColor = mix(texture(texture1, TexCoord), texture(texture2, TexCoord), 0.2); } \u6700\u7ec8\u8f93\u51fa\u989c\u8272\u73b0\u5728\u662f\u4e24\u4e2a\u7eb9\u7406\u7684\u7ed3\u5408\u3002GLSL\u5185\u5efa\u7684 mix \u51fd\u6570\u9700\u8981\u63a5\u53d7\u4e24\u4e2a\u503c\u4f5c\u4e3a\u53c2\u6570\uff0c\u5e76\u5bf9\u5b83\u4eec\u6839\u636e\u7b2c\u4e09\u4e2a\u53c2\u6570\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\u3002\u5982\u679c\u7b2c\u4e09\u4e2a\u503c\u662f 0.0 \uff0c\u5b83\u4f1a\u8fd4\u56de\u7b2c\u4e00\u4e2a\u8f93\u5165\uff1b\u5982\u679c\u662f 1.0 \uff0c\u4f1a\u8fd4\u56de\u7b2c\u4e8c\u4e2a\u8f93\u5165\u503c\u3002 0.2 \u4f1a\u8fd4\u56de 80% \u7684\u7b2c\u4e00\u4e2a\u8f93\u5165\u989c\u8272\u548c 20% \u7684\u7b2c\u4e8c\u4e2a\u8f93\u5165\u989c\u8272\uff0c\u5373\u8fd4\u56de\u4e24\u4e2a\u7eb9\u7406\u7684\u6df7\u5408\u8272\u3002 \u6211\u4eec\u73b0\u5728\u9700\u8981\u8f7d\u5165\u5e76\u521b\u5efa\u53e6\u4e00\u4e2a\u7eb9\u7406\uff1b\u4f60\u5e94\u8be5\u5bf9\u8fd9\u4e9b\u6b65\u9aa4\u5f88\u719f\u6089\u4e86\u3002\u8bb0\u5f97\u521b\u5efa\u53e6\u4e00\u4e2a\u7eb9\u7406\u5bf9\u8c61\uff0c\u8f7d\u5165\u56fe\u7247\uff0c\u4f7f\u7528 glTexImage2D \u751f\u6210\u6700\u7ec8\u7eb9\u7406\u3002\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u7eb9\u7406\u6211\u4eec\u4f7f\u7528\u4e00\u5f20 \u4f60\u5b66\u4e60OpenGL\u65f6\u7684\u9762\u90e8\u8868\u60c5 \u56fe\u7247\uff1a unsigned char *data = stbi_load(\"awesomeface.png\", &width, &height, &nrChannels, 0); if (data) { glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, width, height, 0, GL_RGBA, GL_UNSIGNED_BYTE, data); glGenerateMipmap(GL_TEXTURE_2D); } \u6ce8\u610f\uff0c\u6211\u4eec\u73b0\u5728\u8981\u8bfb\u53d6\u4e00\u5f20\u5305\u542balpha\uff08\u900f\u660e\u5ea6\uff09\u901a\u9053\u7684 .png \u56fe\u7247\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u73b0\u5728\u9700\u8981\u4f7f\u7528 GL_RGBA \u53c2\u6570\uff0c\u6307\u5b9a\u8be5\u56fe\u7247\u6570\u636e\u5305\u542b\u4e86alpha\u901a\u9053\uff1b\u5426\u5219OpenGL\u5c06\u65e0\u6cd5\u6b63\u786e\u89e3\u6790\u56fe\u7247\u6570\u636e\u3002 \u4e3a\u4e86\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u7eb9\u7406\uff08\u4ee5\u53ca\u7b2c\u4e00\u4e2a\uff09\uff0c\u6211\u4eec\u5fc5\u987b\u6539\u53d8\u4e00\u70b9\u6e32\u67d3\u6d41\u7a0b\uff0c\u5148\u7ed1\u5b9a\u4e24\u4e2a\u7eb9\u7406\u5230\u5bf9\u5e94\u7684\u7eb9\u7406\u5355\u5143\uff0c\u7136\u540e\u5b9a\u4e49\u54ea\u4e2auniform\u91c7\u6837\u5668\u5bf9\u5e94\u54ea\u4e2a\u7eb9\u7406\u5355\u5143\uff1a glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_2D, texture1); glActiveTexture(GL_TEXTURE1); glBindTexture(GL_TEXTURE_2D, texture2); glBindVertexArray(VAO); glDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_INT, 0); \u6211\u4eec\u8fd8\u8981\u901a\u8fc7\u4f7f\u7528 glUniform1i \u8bbe\u7f6e\u6bcf\u4e2a\u91c7\u6837\u5668\u7684\u65b9\u5f0f\u544a\u8bc9OpenGL\u6bcf\u4e2a\u7740\u8272\u5668\u91c7\u6837\u5668\u5c5e\u4e8e\u54ea\u4e2a\u7eb9\u7406\u5355\u5143\u3002\u6211\u4eec\u53ea\u9700\u8981\u8bbe\u7f6e\u4e00\u6b21\u5373\u53ef\uff0c\u6240\u4ee5\u8fd9\u4e2a\u4f1a\u653e\u5728\u6e32\u67d3\u5faa\u73af\u7684\u524d\u9762\uff1a ourShader.use(); // \u4e0d\u8981\u5fd8\u8bb0\u5728\u8bbe\u7f6euniform\u53d8\u91cf\u4e4b\u524d\u6fc0\u6d3b\u7740\u8272\u5668\u7a0b\u5e8f\uff01 glUniform1i(glGetUniformLocation(ourShader.ID, \"texture1\"), 0); // \u624b\u52a8\u8bbe\u7f6e ourShader.setInt(\"texture2\", 1); // \u6216\u8005\u4f7f\u7528\u7740\u8272\u5668\u7c7b\u8bbe\u7f6e while(...) { [...] } \u901a\u8fc7\u4f7f\u7528 glUniform1i \u8bbe\u7f6e\u91c7\u6837\u5668\uff0c\u6211\u4eec\u4fdd\u8bc1\u4e86\u6bcf\u4e2auniform\u91c7\u6837\u5668\u5bf9\u5e94\u7740\u6b63\u786e\u7684\u7eb9\u7406\u5355\u5143\u3002\u4f60\u5e94\u8be5\u80fd\u5f97\u5230\u4e0b\u9762\u7684\u7ed3\u679c\uff1a \u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u7eb9\u7406\u4e0a\u4e0b\u98a0\u5012\u4e86\uff01\u8fd9\u662f\u56e0\u4e3aOpenGL\u8981\u6c42y\u8f74 0.0 \u5750\u6807\u662f\u5728\u56fe\u7247\u7684\u5e95\u90e8\u7684\uff0c\u4f46\u662f\u56fe\u7247\u7684y\u8f74 0.0 \u5750\u6807\u901a\u5e38\u5728\u9876\u90e8\u3002\u5f88\u5e78\u8fd0\uff0c stb_image.h \u80fd\u591f\u5728\u56fe\u50cf\u52a0\u8f7d\u65f6\u5e2e\u52a9\u6211\u4eec\u7ffb\u8f6cy\u8f74\uff0c\u53ea\u9700\u8981\u5728\u52a0\u8f7d\u4efb\u4f55\u56fe\u50cf\u524d\u52a0\u5165\u4ee5\u4e0b\u8bed\u53e5\u5373\u53ef\uff1a stbi_set_flip_vertically_on_load(true); \u5728\u8ba9 stb_image.h \u5728\u52a0\u8f7d\u56fe\u7247\u65f6\u7ffb\u8f6cy\u8f74\u4e4b\u540e\u4f60\u5c31\u5e94\u8be5\u80fd\u591f\u83b7\u5f97\u4e0b\u9762\u7684\u7ed3\u679c\u4e86\uff1a \u5982\u679c\u4f60\u770b\u5230\u4e86\u4e00\u4e2a\u5f00\u5fc3\u7684\u7bb1\u5b50\uff0c\u4f60\u5c31\u505a\u5bf9\u4e86\u3002\u4f60\u53ef\u4ee5\u5bf9\u6bd4\u4e00\u4e0b \u6e90\u4ee3\u7801 \u3002","title":"\u7eb9\u7406\u5355\u5143"},{"location":"01%20Getting%20started/06%20Textures/#_9","text":"\u4e3a\u4e86\u66f4\u719f\u7ec3\u5730\u4f7f\u7528\u7eb9\u7406\uff0c\u5efa\u8bae\u5728\u7ee7\u7eed\u4e4b\u540e\u7684\u5b66\u4e60\u4e4b\u524d\u505a\u5b8c\u8fd9\u4e9b\u7ec3\u4e60\uff1a \u4fee\u6539\u7247\u6bb5\u7740\u8272\u5668\uff0c \u4ec5 \u8ba9\u7b11\u8138\u56fe\u6848\u671d\u53e6\u4e00\u4e2a\u65b9\u5411\u770b\uff0c \u53c2\u8003\u89e3\u7b54 \u5c1d\u8bd5\u7528\u4e0d\u540c\u7684\u7eb9\u7406\u73af\u7ed5\u65b9\u5f0f\uff0c\u8bbe\u5b9a\u4e00\u4e2a\u4ece 0.0f \u5230 2.0f \u8303\u56f4\u5185\u7684\uff08\u800c\u4e0d\u662f\u539f\u6765\u7684 0.0f \u5230 1.0f \uff09\u7eb9\u7406\u5750\u6807\u3002\u8bd5\u8bd5\u770b\u80fd\u4e0d\u80fd\u5728\u7bb1\u5b50\u7684\u89d2\u843d\u653e\u7f6e4\u4e2a\u7b11\u8138\uff1a \u53c2\u8003\u89e3\u7b54 \uff0c \u7ed3\u679c \u3002\u8bb0\u5f97\u4e00\u5b9a\u8981\u8bd5\u8bd5\u5176\u5b83\u7684\u73af\u7ed5\u65b9\u5f0f\u3002 \u5c1d\u8bd5\u5728\u77e9\u5f62\u4e0a\u53ea\u663e\u793a\u7eb9\u7406\u56fe\u50cf\u7684\u4e2d\u95f4\u4e00\u90e8\u5206\uff0c\u4fee\u6539\u7eb9\u7406\u5750\u6807\uff0c\u8fbe\u5230\u80fd\u770b\u89c1\u5355\u4e2a\u7684\u50cf\u7d20\u7684\u6548\u679c\u3002\u5c1d\u8bd5\u4f7f\u7528 GL_NEAREST \u7684\u7eb9\u7406\u8fc7\u6ee4\u65b9\u5f0f\u8ba9\u50cf\u7d20\u663e\u793a\u5f97\u66f4\u6e05\u6670\uff1a \u53c2\u8003\u89e3\u7b54 \u4f7f\u7528\u4e00\u4e2auniform\u53d8\u91cf\u4f5c\u4e3a mix \u51fd\u6570\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u6765\u6539\u53d8\u4e24\u4e2a\u7eb9\u7406\u53ef\u89c1\u5ea6\uff0c\u4f7f\u7528\u4e0a\u548c\u4e0b\u952e\u6765\u6539\u53d8\u7bb1\u5b50\u6216\u7b11\u8138\u7684\u53ef\u89c1\u5ea6\uff1a \u53c2\u8003\u89e3\u7b54 \u3002","title":"\u7ec3\u4e60"},{"location":"01%20Getting%20started/07%20Transformations/","text":"\u53d8\u6362 \u539f\u6587 Transformations \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django, Krasjet, BLumia \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u5c3d\u7ba1\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u77e5\u9053\u4e86\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u7269\u4f53\u3001\u7740\u8272\u3001\u52a0\u5165\u7eb9\u7406\uff0c\u7ed9\u5b83\u4eec\u4e00\u4e9b\u7ec6\u8282\u7684\u8868\u73b0\uff0c\u4f46\u56e0\u4e3a\u5b83\u4eec\u90fd\u8fd8\u662f\u9759\u6001\u7684\u7269\u4f53\uff0c\u4ecd\u662f\u4e0d\u591f\u6709\u8da3\u3002\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u7740\u5728\u6bcf\u4e00\u5e27\u6539\u53d8\u7269\u4f53\u7684\u9876\u70b9\u5e76\u4e14\u91cd\u914d\u7f6e\u7f13\u51b2\u533a\u4ece\u800c\u4f7f\u5b83\u4eec\u79fb\u52a8\uff0c\u4f46\u8fd9\u592a\u7e41\u7410\u4e86\uff0c\u800c\u4e14\u4f1a\u6d88\u8017\u5f88\u591a\u7684\u5904\u7406\u65f6\u95f4\u3002\u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e2a\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f7f\u7528\uff08\u591a\u4e2a\uff09 \u77e9\u9635 (Matrix)\u5bf9\u8c61\u53ef\u4ee5\u66f4\u597d\u7684 \u53d8\u6362 (Transform)\u4e00\u4e2a\u7269\u4f53\u3002\u5f53\u7136\uff0c\u8fd9\u5e76\u4e0d\u662f\u8bf4\u6211\u4eec\u4f1a\u53bb\u8ba8\u8bba\u6b66\u672f\u548c\u6570\u5b57\u865a\u62df\u4e16\u754c\uff08\u8bd1\u6ce8\uff1aMatrix\u540c\u6837\u4e5f\u662f\u7535\u5f71\u300c\u9ed1\u5ba2\u5e1d\u56fd\u300d\u7684\u82f1\u6587\u540d\uff0c\u7535\u5f71\u4e2d\u4eba\u7c7b\u751f\u6d3b\u5728\u6570\u5b57\u865a\u62df\u4e16\u754c\uff0c\u4e3b\u89d2\u4f1a\u6b66\u672f\uff09\u3002 \u77e9\u9635\u662f\u4e00\u79cd\u975e\u5e38\u6709\u7528\u7684\u6570\u5b66\u5de5\u5177\uff0c\u5c3d\u7ba1\u542c\u8d77\u6765\u53ef\u80fd\u6709\u4e9b\u5413\u4eba\uff0c\u4e0d\u8fc7\u4e00\u65e6\u4f60\u7406\u89e3\u4e86\u5b83\u4eec\u540e\uff0c\u5b83\u4eec\u4f1a\u53d8\u5f97\u975e\u5e38\u6709\u7528\u3002\u5728\u8ba8\u8bba\u77e9\u9635\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5230\u4e00\u4e9b\u6570\u5b66\u77e5\u8bc6\u3002\u5bf9\u4e8e\u4e00\u4e9b\u613f\u610f\u591a\u4e86\u89e3\u8fd9\u4e9b\u77e5\u8bc6\u7684\u8bfb\u8005\uff0c\u6211\u4f1a\u9644\u52a0\u4e00\u4e9b\u8d44\u6e90\u7ed9\u4f60\u4eec\u9605\u8bfb\u3002 \u4e3a\u4e86\u6df1\u5165\u4e86\u89e3\u53d8\u6362\uff0c\u6211\u4eec\u9996\u5148\u8981\u5728\u8ba8\u8bba\u77e9\u9635\u4e4b\u524d\u8fdb\u4e00\u6b65\u4e86\u89e3\u4e00\u4e0b\u5411\u91cf\u3002\u8fd9\u4e00\u8282\u7684\u76ee\u6807\u662f\u8ba9\u4f60\u62e5\u6709\u5c06\u6765\u9700\u8981\u7684\u6700\u57fa\u7840\u7684\u6570\u5b66\u80cc\u666f\u77e5\u8bc6\u3002\u5982\u679c\u4f60\u53d1\u73b0\u8fd9\u8282\u5341\u5206\u56f0\u96be\uff0c\u5c3d\u91cf\u5c1d\u8bd5\u53bb\u7406\u89e3\u5b83\u4eec\uff0c\u5f53\u4f60\u4ee5\u540e\u9700\u8981\u5b83\u4eec\u7684\u65f6\u5019\u56de\u8fc7\u5934\u6765\u590d\u4e60\u8fd9\u4e9b\u6982\u5ff5\u3002 \u5411\u91cf \u5411\u91cf\u6700\u57fa\u672c\u7684\u5b9a\u4e49\u5c31\u662f\u4e00\u4e2a\u65b9\u5411\u3002\u6216\u8005\u66f4\u6b63\u5f0f\u7684\u8bf4\uff0c\u5411\u91cf\u6709\u4e00\u4e2a \u65b9\u5411 (Direction)\u548c \u5927\u5c0f (Magnitude\uff0c\u4e5f\u53eb\u505a\u5f3a\u5ea6\u6216\u957f\u5ea6)\u3002\u4f60\u53ef\u4ee5\u628a\u5411\u91cf\u60f3\u50cf\u6210\u4e00\u4e2a\u85cf\u5b9d\u56fe\u4e0a\u7684\u6307\u793a\uff1a\u201c\u5411\u5de6\u8d7010\u6b65\uff0c\u5411\u5317\u8d703\u6b65\uff0c\u7136\u540e\u5411\u53f3\u8d705\u6b65\u201d\uff1b\u201c\u5de6\u201d\u5c31\u662f\u65b9\u5411\uff0c\u201c10\u6b65\u201d\u5c31\u662f\u5411\u91cf\u7684\u957f\u5ea6\u3002\u90a3\u4e48\u8fd9\u4e2a\u85cf\u5b9d\u56fe\u7684\u6307\u793a\u4e00\u5171\u67093\u4e2a\u5411\u91cf\u3002\u5411\u91cf\u53ef\u4ee5\u5728\u4efb\u610f\u7ef4\u5ea6(Dimension)\u4e0a\uff0c\u4f46\u662f\u6211\u4eec\u901a\u5e38\u53ea\u4f7f\u75282\u81f34\u7ef4\u3002\u5982\u679c\u4e00\u4e2a\u5411\u91cf\u67092\u4e2a\u7ef4\u5ea6\uff0c\u5b83\u8868\u793a\u4e00\u4e2a\u5e73\u9762\u7684\u65b9\u5411(\u60f3\u8c61\u4e00\u4e0b2D\u7684\u56fe\u50cf)\uff0c\u5f53\u5b83\u67093\u4e2a\u7ef4\u5ea6\u7684\u65f6\u5019\u5b83\u53ef\u4ee5\u8868\u8fbe\u4e00\u4e2a3D\u4e16\u754c\u7684\u65b9\u5411\u3002 \u4e0b\u9762\u4f60\u4f1a\u770b\u52303\u4e2a\u5411\u91cf\uff0c\u6bcf\u4e2a\u5411\u91cf\u57282D\u56fe\u50cf\u4e2d\u90fd\u7528\u4e00\u4e2a\u7bad\u5934(x, y)\u8868\u793a\u3002\u6211\u4eec\u57282D\u56fe\u7247\u4e2d\u5c55\u793a\u8fd9\u4e9b\u5411\u91cf\uff0c\u56e0\u4e3a\u8fd9\u6837\u5b50\u4f1a\u66f4\u76f4\u89c2\u4e00\u70b9\u3002\u4f60\u53ef\u4ee5\u628a\u8fd9\u4e9b2D\u5411\u91cf\u5f53\u505az\u5750\u6807\u4e3a0\u76843D\u5411\u91cf\u3002\u7531\u4e8e\u5411\u91cf\u8868\u793a\u7684\u662f\u65b9\u5411\uff0c\u8d77\u59cb\u4e8e\u4f55\u5904\u5e76\u4e0d\u4f1a\u6539\u53d8\u5b83\u7684\u503c\u3002\u4e0b\u56fe\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5411\u91cf \\color{red}{\\bar{v}} \u548c \\color{blue}{\\bar{w}} \u662f\u76f8\u7b49\u7684\uff0c\u5c3d\u7ba1\u4ed6\u4eec\u7684\u8d77\u59cb\u70b9\u4e0d\u540c\uff1a \u6570\u5b66\u5bb6\u559c\u6b22\u5728\u5b57\u6bcd\u4e0a\u9762\u52a0\u4e00\u6a2a\u8868\u793a\u5411\u91cf\uff0c\u6bd4\u5982\u8bf4 \\bar{v} \u3002\u5f53\u7528\u5728\u516c\u5f0f\u4e2d\u65f6\u5b83\u4eec\u901a\u5e38\u662f\u8fd9\u6837\u7684\uff1a \\bar{v} = \\begin{pmatrix} \\color{red}x \\\\ \\color{green}y \\\\ \\color{blue}z \\end{pmatrix} \u7531\u4e8e\u5411\u91cf\u662f\u4e00\u4e2a\u65b9\u5411\uff0c\u6240\u4ee5\u6709\u4e9b\u65f6\u5019\u4f1a\u5f88\u96be\u5f62\u8c61\u5730\u5c06\u5b83\u4eec\u7528\u4f4d\u7f6e(Position)\u8868\u793a\u51fa\u6765\u3002\u4e3a\u4e86\u8ba9\u5176\u66f4\u4e3a\u76f4\u89c2\uff0c\u6211\u4eec\u901a\u5e38\u8bbe\u5b9a\u8fd9\u4e2a\u65b9\u5411\u7684\u539f\u70b9\u4e3a(0, 0, 0)\uff0c\u7136\u540e\u6307\u5411\u4e00\u4e2a\u65b9\u5411\uff0c\u5bf9\u5e94\u4e00\u4e2a\u70b9\uff0c\u4f7f\u5176\u53d8\u4e3a \u4f4d\u7f6e\u5411\u91cf (Position Vector)\uff08\u4f60\u4e5f\u53ef\u4ee5\u628a\u8d77\u70b9\u8bbe\u7f6e\u4e3a\u5176\u4ed6\u7684\u70b9\uff0c\u7136\u540e\u8bf4\uff1a\u8fd9\u4e2a\u5411\u91cf\u4ece\u8fd9\u4e2a\u70b9\u8d77\u59cb\u6307\u5411\u53e6\u4e00\u4e2a\u70b9\uff09\u3002\u6bd4\u5982\u8bf4\u4f4d\u7f6e\u5411\u91cf(3, 5)\u5728\u56fe\u50cf\u4e2d\u7684\u8d77\u70b9\u4f1a\u662f(0, 0)\uff0c\u5e76\u4f1a\u6307\u5411(3, 5)\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5411\u91cf\u57282D\u62163D\u7a7a\u95f4\u4e2d\u8868\u793a\u65b9\u5411 \u4e0e \u4f4d\u7f6e. \u548c\u666e\u901a\u6570\u5b57\u4e00\u6837\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u5411\u91cf\u8fdb\u884c\u591a\u79cd\u8fd0\u7b97\uff08\u5176\u4e2d\u4e00\u4e9b\u4f60\u53ef\u80fd\u5df2\u7ecf\u770b\u5230\u8fc7\u4e86\uff09\u3002 \u5411\u91cf\u4e0e\u6807\u91cf\u8fd0\u7b97 \u6807\u91cf (Scalar)\u53ea\u662f\u4e00\u4e2a\u6570\u5b57\uff08\u6216\u8005\u8bf4\u662f\u4ec5\u6709\u4e00\u4e2a\u5206\u91cf\u7684\u5411\u91cf\uff09\u3002\u5f53\u628a\u4e00\u4e2a\u5411\u91cf\u52a0/\u51cf/\u4e58/\u9664\u4e00\u4e2a\u6807\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u628a\u5411\u91cf\u7684\u6bcf\u4e2a\u5206\u91cf\u5206\u522b\u8fdb\u884c\u8be5\u8fd0\u7b97\u3002\u5bf9\u4e8e\u52a0\u6cd5\u6765\u8bf4\u4f1a\u50cf\u8fd9\u6837: \\begin{pmatrix} \\color{red}1 \\\\ \\color{green}2 \\\\ \\color{blue}3 \\end{pmatrix} + x = \\begin{pmatrix} \\color{red}1 + x \\\\ \\color{green}2 + x \\\\ \\color{blue}3 + x \\end{pmatrix} \u5176\u4e2d\u7684+\u53ef\u4ee5\u662f+\uff0c-\uff0c\u00b7\u6216\u00f7\uff0c\u5176\u4e2d\u00b7\u662f\u4e58\u53f7\u3002\u6ce8\u610f\uff0d\u548c\u00f7\u8fd0\u7b97\u65f6\u4e0d\u80fd\u98a0\u5012\uff08\u6807\u91cf-/\u00f7\u5411\u91cf\uff09\uff0c\u56e0\u4e3a\u98a0\u5012\u7684\u8fd0\u7b97\u662f\u6ca1\u6709\u5b9a\u4e49\u7684\u3002 \u8bd1\u6ce8 \u6ce8\u610f\uff0c\u6570\u5b66\u4e0a\u662f\u6ca1\u6709\u5411\u91cf\u4e0e\u6807\u91cf\u76f8\u52a0\u8fd9\u4e2a\u8fd0\u7b97\u7684\uff0c\u4f46\u662f\u5f88\u591a\u7ebf\u6027\u4ee3\u6570\u7684\u5e93\u90fd\u5bf9\u5b83\u6709\u652f\u6301\uff08\u6bd4\u5982\u8bf4\u6211\u4eec\u7528\u7684GLM\uff09\u3002\u5982\u679c\u4f60\u4f7f\u7528\u8fc7numpy\u7684\u8bdd\uff0c\u53ef\u4ee5\u628a\u5b83\u7406\u89e3\u4e3a Broadcasting \u3002 \u5411\u91cf\u53d6\u53cd \u5bf9\u4e00\u4e2a\u5411\u91cf\u53d6\u53cd(Negate)\u4f1a\u5c06\u5176\u65b9\u5411\u9006\u8f6c\u3002\u4e00\u4e2a\u6307\u5411\u4e1c\u5317\u7684\u5411\u91cf\u53d6\u53cd\u540e\u5c31\u6307\u5411\u897f\u5357\u65b9\u5411\u4e86\u3002\u6211\u4eec\u5728\u4e00\u4e2a\u5411\u91cf\u7684\u6bcf\u4e2a\u5206\u91cf\u524d\u52a0\u8d1f\u53f7\u5c31\u53ef\u4ee5\u5b9e\u73b0\u53d6\u53cd\u4e86\uff08\u6216\u8005\u8bf4\u7528-1\u6570\u4e58\u8be5\u5411\u91cf\uff09: -\\bar{v} = -\\begin{pmatrix} \\color{red}{v_x} \\\\ \\color{blue}{v_y} \\\\ \\color{green}{v_z} \\end{pmatrix} = \\begin{pmatrix} -\\color{red}{v_x} \\\\ -\\color{blue}{v_y} \\\\ -\\color{green}{v_z} \\end{pmatrix} \u5411\u91cf\u52a0\u51cf \u5411\u91cf\u7684\u52a0\u6cd5\u53ef\u4ee5\u88ab\u5b9a\u4e49\u4e3a\u662f \u5206\u91cf\u7684 (Component-wise)\u76f8\u52a0\uff0c\u5373\u5c06\u4e00\u4e2a\u5411\u91cf\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5206\u91cf\u52a0\u4e0a\u53e6\u4e00\u4e2a\u5411\u91cf\u7684\u5bf9\u5e94\u5206\u91cf\uff1a \\bar{v} = \\begin{pmatrix} \\color{red}1 \\\\ \\color{green}2 \\\\ \\color{blue}3 \\end{pmatrix}, \\bar{k} = \\begin{pmatrix} \\color{red}4 \\\\ \\color{green}5 \\\\ \\color{blue}6 \\end{pmatrix} \\rightarrow \\bar{v} + \\bar{k} = \\begin{pmatrix} \\color{red}1 + \\color{red}4 \\\\ \\color{green}2 + \\color{green}5 \\\\ \\color{blue}3 + \\color{blue}6 \\end{pmatrix} = \\begin{pmatrix} \\color{red}5 \\\\ \\color{green}7 \\\\ \\color{blue}9 \\end{pmatrix} \u5411\u91cf v = (4, 2) \u548c k = (1, 2) \u53ef\u4ee5\u76f4\u89c2\u5730\u8868\u793a\u4e3a\uff1a \u5c31\u50cf\u666e\u901a\u6570\u5b57\u7684\u52a0\u51cf\u4e00\u6837\uff0c\u5411\u91cf\u7684\u51cf\u6cd5\u7b49\u4e8e\u52a0\u4e0a\u7b2c\u4e8c\u4e2a\u5411\u91cf\u7684\u76f8\u53cd\u5411\u91cf\uff1a \\bar{v} = \\begin{pmatrix} \\color{red}1 \\\\ \\color{green}2 \\\\ \\color{blue}3 \\end{pmatrix}, \\bar{k} = \\begin{pmatrix} \\color{red}4 \\\\ \\color{green}5 \\\\ \\color{blue}6 \\end{pmatrix} \\rightarrow \\bar{v} + -\\bar{k} = \\begin{pmatrix} \\color{red}1 + (-\\color{red}{4}) \\\\ \\color{green}2 + (-\\color{green}{5}) \\\\ \\color{blue}3 + (-\\color{blue}{6}) \\end{pmatrix} = \\begin{pmatrix} -\\color{red}{3} \\\\ -\\color{green}{3} \\\\ -\\color{blue}{3} \\end{pmatrix} \u4e24\u4e2a\u5411\u91cf\u7684\u76f8\u51cf\u4f1a\u5f97\u5230\u8fd9\u4e24\u4e2a\u5411\u91cf\u6307\u5411\u4f4d\u7f6e\u7684\u5dee\u3002\u8fd9\u5728\u6211\u4eec\u60f3\u8981\u83b7\u53d6\u4e24\u70b9\u7684\u5dee\u4f1a\u975e\u5e38\u6709\u7528\u3002 \u957f\u5ea6 \u6211\u4eec\u4f7f\u7528 \u52fe\u80a1\u5b9a\u7406 (Pythagoras Theorem)\u6765\u83b7\u53d6\u5411\u91cf\u7684\u957f\u5ea6(Length)/\u5927\u5c0f(Magnitude)\u3002\u5982\u679c\u4f60\u628a\u5411\u91cf\u7684x\u4e0ey\u5206\u91cf\u753b\u51fa\u6765\uff0c\u8be5\u5411\u91cf\u4f1a\u548cx\u4e0ey\u5206\u91cf\u4e3a\u8fb9\u5f62\u6210\u4e00\u4e2a\u4e09\u89d2\u5f62: \u56e0\u4e3a\u4e24\u6761\u8fb9\uff08x\u548cy\uff09\u662f\u5df2\u77e5\u7684\uff0c\u5982\u679c\u5e0c\u671b\u77e5\u9053\u659c\u8fb9 \\color{red}{\\bar{v}} \u7684\u957f\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u52fe\u80a1\u5b9a\u7406\u6765\u8ba1\u7b97\uff1a ||\\color{red}{\\bar{v}}|| = \\sqrt{\\color{green}x^2 + \\color{blue}y^2} ||\\color{red}{\\bar{v}}|| \u8868\u793a\u5411\u91cf \\color{red}{\\bar{v}} \u7684\u957f\u5ea6\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u52a0\u4e0a z^2 \u628a\u8fd9\u4e2a\u516c\u5f0f\u62d3\u5c55\u5230\u4e09\u7ef4\u7a7a\u95f4\u3002 \u4f8b\u5b50\u4e2d\u5411\u91cf(4, 2)\u7684\u957f\u5ea6\u7b49\u4e8e\uff1a ||\\color{red}{\\bar{v}}|| = \\sqrt{\\color{green}4^2 + \\color{blue}2^2} = \\sqrt{\\color{green}16 + \\color{blue}4} = \\sqrt{20} = 4.47 \u7ed3\u679c\u662f4.47\u3002 \u6709\u4e00\u4e2a\u7279\u6b8a\u7c7b\u578b\u7684\u5411\u91cf\u53eb\u505a \u5355\u4f4d\u5411\u91cf (Unit Vector)\u3002\u5355\u4f4d\u5411\u91cf\u6709\u4e00\u4e2a\u7279\u522b\u7684\u6027\u8d28\u2014\u2014\u5b83\u7684\u957f\u5ea6\u662f1\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4efb\u610f\u5411\u91cf\u7684\u6bcf\u4e2a\u5206\u91cf\u9664\u4ee5\u5411\u91cf\u7684\u957f\u5ea6\u5f97\u5230\u5b83\u7684\u5355\u4f4d\u5411\u91cf \\hat{n} \uff1a \\hat{n} = \\frac{\\bar{v}}{||\\bar{v}||} \u6211\u4eec\u628a\u8fd9\u79cd\u65b9\u6cd5\u53eb\u505a\u4e00\u4e2a\u5411\u91cf\u7684 \u6807\u51c6\u5316 (Normalizing)\u3002\u5355\u4f4d\u5411\u91cf\u5934\u4e0a\u6709\u4e00\u4e2a^\u6837\u5b50\u7684\u8bb0\u53f7\u3002\u901a\u5e38\u5355\u4f4d\u5411\u91cf\u4f1a\u53d8\u5f97\u5f88\u6709\u7528\uff0c\u7279\u522b\u662f\u5728\u6211\u4eec\u53ea\u5173\u5fc3\u65b9\u5411\u4e0d\u5173\u5fc3\u957f\u5ea6\u7684\u65f6\u5019\uff08\u5982\u679c\u6539\u53d8\u5411\u91cf\u7684\u957f\u5ea6\uff0c\u5b83\u7684\u65b9\u5411\u5e76\u4e0d\u4f1a\u6539\u53d8\uff09\u3002 \u5411\u91cf\u76f8\u4e58 \u4e24\u4e2a\u5411\u91cf\u76f8\u4e58\u662f\u4e00\u79cd\u5f88\u5947\u602a\u7684\u60c5\u51b5\u3002\u666e\u901a\u7684\u4e58\u6cd5\u5728\u5411\u91cf\u4e0a\u662f\u6ca1\u6709\u5b9a\u4e49\u7684\uff0c\u56e0\u4e3a\u5b83\u5728\u89c6\u89c9\u4e0a\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u4f46\u662f\u5728\u76f8\u4e58\u7684\u65f6\u5019\u6211\u4eec\u6709\u4e24\u79cd\u7279\u5b9a\u60c5\u51b5\u53ef\u4ee5\u9009\u62e9\uff1a\u4e00\u4e2a\u662f \u70b9\u4e58 (Dot Product)\uff0c\u8bb0\u4f5c \\bar{v} \\cdot \\bar{k} \uff0c\u53e6\u4e00\u4e2a\u662f \u53c9\u4e58 (Cross Product)\uff0c\u8bb0\u4f5c \\bar{v} \\times \\bar{k} \u3002 \u70b9\u4e58 \u4e24\u4e2a\u5411\u91cf\u7684\u70b9\u4e58\u7b49\u4e8e\u5b83\u4eec\u7684\u6570\u4e58\u7ed3\u679c\u4e58\u4ee5\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u5939\u89d2\u7684\u4f59\u5f26\u503c\u3002\u53ef\u80fd\u542c\u8d77\u6765\u6709\u70b9\u8d39\u89e3\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u516c\u5f0f\uff1a \\bar{v} \\cdot \\bar{k} = ||\\bar{v}|| \\cdot ||\\bar{k}|| \\cdot \\cos \\theta \u5b83\u4eec\u4e4b\u95f4\u7684\u5939\u89d2\u8bb0\u4f5c \\theta \u3002\u4e3a\u4ec0\u4e48\u8fd9\u5f88\u6709\u7528\uff1f\u60f3\u8c61\u5982\u679c \\bar{v} \u548c \\bar{k} \u90fd\u662f\u5355\u4f4d\u5411\u91cf\uff0c\u5b83\u4eec\u7684\u957f\u5ea6\u4f1a\u7b49\u4e8e1\u3002\u8fd9\u6837\u516c\u5f0f\u4f1a\u6709\u6548\u7b80\u5316\u6210\uff1a \\bar{v} \\cdot \\bar{k} = 1 \\cdot 1 \\cdot \\cos \\theta = \\cos \\theta \u73b0\u5728\u70b9\u79ef \u53ea \u5b9a\u4e49\u4e86\u4e24\u4e2a\u5411\u91cf\u7684\u5939\u89d2\u3002\u4f60\u4e5f\u8bb8\u8bb0\u5f9790\u5ea6\u7684\u4f59\u5f26\u503c\u662f0\uff0c0\u5ea6\u7684\u4f59\u5f26\u503c\u662f1\u3002\u4f7f\u7528\u70b9\u4e58\u53ef\u4ee5\u5f88\u5bb9\u6613\u6d4b\u8bd5\u4e24\u4e2a\u5411\u91cf\u662f\u5426 \u6b63\u4ea4 (Orthogonal)\u6216\u5e73\u884c\uff08\u6b63\u4ea4\u610f\u5473\u7740\u4e24\u4e2a\u5411\u91cf\u4e92\u4e3a \u76f4\u89d2 \uff09\u3002\u5982\u679c\u4f60\u60f3\u8981\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u6b63\u5f26\u6216\u4f59\u5f26\u51fd\u6570\u7684\u77e5\u8bc6\uff0c\u6211\u63a8\u8350\u4f60\u770b \u53ef\u6c57\u5b66\u9662 \u7684\u57fa\u7840\u4e09\u89d2\u5b66\u89c6\u9891\u3002 Important \u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u70b9\u4e58\u7684\u7ed3\u679c\u8ba1\u7b97\u4e24\u4e2a\u975e\u5355\u4f4d\u5411\u91cf\u7684\u5939\u89d2\uff0c\u70b9\u4e58\u7684\u7ed3\u679c\u9664\u4ee5\u4e24\u4e2a\u5411\u91cf\u7684\u957f\u5ea6\u4e4b\u79ef\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u5c31\u662f\u5939\u89d2\u7684\u4f59\u5f26\u503c\uff0c\u5373 cos \\theta \u3002 \u8bd1\u6ce8\uff1a\u901a\u8fc7\u4e0a\u9762\u70b9\u4e58\u5b9a\u4e49\u5f0f\u53ef\u63a8\u51fa\uff1a \\cos \\theta = \\frac{\\bar{v} \\cdot \\bar{k}}{||\\bar{v}|| \\cdot ||\\bar{k}||} \u6240\u4ee5\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u8ba1\u7b97\u70b9\u4e58\u5462\uff1f\u70b9\u4e58\u662f\u901a\u8fc7\u5c06\u5bf9\u5e94\u5206\u91cf\u9010\u4e2a\u76f8\u4e58\uff0c\u7136\u540e\u518d\u628a\u6240\u5f97\u79ef\u76f8\u52a0\u6765\u8ba1\u7b97\u7684\u3002\u4e24\u4e2a\u5355\u4f4d\u5411\u91cf\u7684\uff08\u4f60\u53ef\u4ee5\u9a8c\u8bc1\u5b83\u4eec\u7684\u957f\u5ea6\u90fd\u4e3a1\uff09\u70b9\u4e58\u4f1a\u50cf\u662f\u8fd9\u6837\uff1a \\begin{pmatrix} \\color{red}{0.6} \\\\ -\\color{green}{0.8} \\\\ \\color{blue}0 \\end{pmatrix} \\cdot \\begin{pmatrix} \\color{red}0 \\\\ \\color{green}1 \\\\ \\color{blue}0 \\end{pmatrix} = (\\color{red}{0.6} * \\color{red}0) + (-\\color{green}{0.8} * \\color{green}1) + (\\color{blue}0 * \\color{blue}0) = -0.8 \u8981\u8ba1\u7b97\u4e24\u4e2a\u5355\u4f4d\u5411\u91cf\u95f4\u7684\u5939\u89d2\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u53cd\u4f59\u5f26\u51fd\u6570 cos^{-1} \uff0c\u53ef\u5f97\u7ed3\u679c\u662f143.1\u5ea6\u3002\u73b0\u5728\u6211\u4eec\u5f88\u5feb\u5c31\u8ba1\u7b97\u51fa\u4e86\u8fd9\u4e24\u4e2a\u5411\u91cf\u7684\u5939\u89d2\u3002\u70b9\u4e58\u4f1a\u5728\u8ba1\u7b97\u5149\u7167\u7684\u65f6\u5019\u975e\u5e38\u6709\u7528\u3002 \u53c9\u4e58 \u53c9\u4e58\u53ea\u57283D\u7a7a\u95f4\u4e2d\u6709\u5b9a\u4e49\uff0c\u5b83\u9700\u8981\u4e24\u4e2a\u4e0d\u5e73\u884c\u5411\u91cf\u4f5c\u4e3a\u8f93\u5165\uff0c\u751f\u6210\u4e00\u4e2a\u6b63\u4ea4\u4e8e\u4e24\u4e2a\u8f93\u5165\u5411\u91cf\u7684\u7b2c\u4e09\u4e2a\u5411\u91cf\u3002\u5982\u679c\u8f93\u5165\u7684\u4e24\u4e2a\u5411\u91cf\u4e5f\u662f\u6b63\u4ea4\u7684\uff0c\u90a3\u4e48\u53c9\u4e58\u4e4b\u540e\u5c06\u4f1a\u4ea7\u751f3\u4e2a\u4e92\u76f8\u6b63\u4ea4\u7684\u5411\u91cf\u3002\u63a5\u4e0b\u6765\u7684\u6559\u7a0b\u4e2d\u8fd9\u4f1a\u975e\u5e38\u6709\u7528\u3002\u4e0b\u9762\u7684\u56fe\u7247\u5c55\u793a\u4e863D\u7a7a\u95f4\u4e2d\u53c9\u4e58\u7684\u6837\u5b50\uff1a \u4e0d\u540c\u4e8e\u5176\u4ed6\u8fd0\u7b97\uff0c\u5982\u679c\u4f60\u6ca1\u6709\u94bb\u7814\u8fc7\u7ebf\u6027\u4ee3\u6570\uff0c\u53ef\u80fd\u4f1a\u89c9\u5f97\u53c9\u4e58\u5f88\u53cd\u76f4\u89c9\uff0c\u6240\u4ee5\u53ea\u8bb0\u4f4f\u516c\u5f0f\u5c31\u6ca1\u95ee\u9898\u5566\uff08\u8bb0\u4e0d\u4f4f\u4e5f\u6ca1\u95ee\u9898\uff09\u3002\u4e0b\u9762\u4f60\u4f1a\u770b\u5230\u4e24\u4e2a\u6b63\u4ea4\u5411\u91cfA\u548cB\u53c9\u79ef\uff1a \\begin{pmatrix} \\color{red}{A_{x}} \\\\ \\color{green}{A_{y}} \\\\ \\color{blue}{A_{z}} \\end{pmatrix} \\times \\begin{pmatrix} \\color{red}{B_{x}} \\\\ \\color{green}{B_{y}} \\\\ \\color{blue}{B_{z}} \\end{pmatrix} = \\begin{pmatrix} \\color{green}{A_{y}} \\cdot \\color{blue}{B_{z}} - \\color{blue}{A_{z}} \\cdot \\color{green}{B_{y}} \\\\ \\color{blue}{A_{z}} \\cdot \\color{red}{B_{x}} - \\color{red}{A_{x}} \\cdot \\color{blue}{B_{z}} \\\\ \\color{red}{A_{x}} \\cdot \\color{green}{B_{y}} - \\color{green}{A_{y}} \\cdot \\color{red}{B_{x}} \\end{pmatrix} \u662f\u4e0d\u662f\u770b\u8d77\u6765\u6beb\u65e0\u5934\u7eea\uff1f\u4e0d\u8fc7\u53ea\u8981\u4f60\u6309\u7167\u6b65\u9aa4\u6765\u4e86\uff0c\u4f60\u5c31\u80fd\u5f97\u5230\u4e00\u4e2a\u6b63\u4ea4\u4e8e\u4e24\u4e2a\u8f93\u5165\u5411\u91cf\u7684\u7b2c\u4e09\u4e2a\u5411\u91cf\u3002 \u77e9\u9635 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u8ba8\u8bba\u4e86\u5411\u91cf\u7684\u5168\u90e8\u5185\u5bb9\uff0c\u662f\u65f6\u5019\u770b\u770b\u77e9\u9635\u4e86\uff01\u7b80\u5355\u6765\u8bf4\u77e9\u9635\u5c31\u662f\u4e00\u4e2a\u77e9\u5f62\u7684\u6570\u5b57\u3001\u7b26\u53f7\u6216\u8868\u8fbe\u5f0f\u6570\u7ec4\u3002\u77e9\u9635\u4e2d\u6bcf\u4e00\u9879\u53eb\u505a\u77e9\u9635\u7684 \u5143\u7d20 (Element)\u3002\u4e0b\u9762\u662f\u4e00\u4e2a2\u00d73\u77e9\u9635\u7684\u4f8b\u5b50\uff1a \\begin{bmatrix} 1 & 2 & 3 \\\\ 4 & 5 & 6 \\end{bmatrix} \u77e9\u9635\u53ef\u4ee5\u901a\u8fc7(i, j)\u8fdb\u884c\u7d22\u5f15\uff0ci\u662f\u884c\uff0cj\u662f\u5217\uff0c\u8fd9\u5c31\u662f\u4e0a\u9762\u7684\u77e9\u9635\u53eb\u505a2\u00d73\u77e9\u9635\u7684\u539f\u56e0\uff083\u52172\u884c\uff0c\u4e5f\u53eb\u505a\u77e9\u9635\u7684 \u7ef4\u5ea6 (Dimension)\uff09\u3002\u8fd9\u4e0e\u4f60\u5728\u7d22\u5f152D\u56fe\u50cf\u65f6\u7684(x, y)\u76f8\u53cd\uff0c\u83b7\u53d64\u7684\u7d22\u5f15\u662f(2, 1)\uff08\u7b2c\u4e8c\u884c\uff0c\u7b2c\u4e00\u5217\uff09\uff08\u8bd1\u6ce8\uff1a\u5982\u679c\u662f\u56fe\u50cf\u7d22\u5f15\u5e94\u8be5\u662f(1, 2)\uff0c\u5148\u7b97\u5217\uff0c\u518d\u7b97\u884c\uff09\u3002 \u77e9\u9635\u57fa\u672c\u4e5f\u5c31\u662f\u8fd9\u4e9b\u4e86\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u77e9\u5f62\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u9635\u5217\u3002\u548c\u5411\u91cf\u4e00\u6837\uff0c\u77e9\u9635\u4e5f\u6709\u975e\u5e38\u6f02\u4eae\u7684\u6570\u5b66\u5c5e\u6027\u3002\u77e9\u9635\u6709\u51e0\u4e2a\u8fd0\u7b97\uff0c\u5206\u522b\u662f\uff1a\u77e9\u9635\u52a0\u6cd5\u3001\u51cf\u6cd5\u548c\u4e58\u6cd5\u3002 \u77e9\u9635\u7684\u52a0\u51cf \u77e9\u9635\u4e0e\u6807\u91cf\u4e4b\u95f4\u7684\u52a0\u51cf\u5b9a\u4e49\u5982\u4e0b\uff1a \\begin{bmatrix} 1 & 2 \\\\ 3 & 4 \\end{bmatrix} + \\color{green}3 = \\begin{bmatrix} 1 + \\color{green}3 & 2 + \\color{green}3 \\\\ 3 + \\color{green}3 & 4 + \\color{green}3 \\end{bmatrix} = \\begin{bmatrix} 4 & 5 \\\\ 6 & 7 \\end{bmatrix} \u6807\u91cf\u503c\u8981\u52a0\u5230\u77e9\u9635\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e0a\u3002\u77e9\u9635\u4e0e\u6807\u91cf\u7684\u51cf\u6cd5\u4e5f\u76f8\u4f3c\uff1a \\begin{bmatrix} 1 & 2 \\\\ 3 & 4 \\end{bmatrix} - \\color{green}3 = \\begin{bmatrix} 1 - \\color{green}3 & 2 - \\color{green}3 \\\\ 3 - \\color{green}3 & 4 - \\color{green}3 \\end{bmatrix} = \\begin{bmatrix} -2 & -1 \\\\ 0 & 1 \\end{bmatrix} \u8bd1\u6ce8 \u6ce8\u610f\uff0c\u6570\u5b66\u4e0a\u662f\u6ca1\u6709\u77e9\u9635\u4e0e\u6807\u91cf\u76f8\u52a0\u51cf\u7684\u8fd0\u7b97\u7684\uff0c\u4f46\u662f\u5f88\u591a\u7ebf\u6027\u4ee3\u6570\u7684\u5e93\u90fd\u5bf9\u5b83\u6709\u652f\u6301\uff08\u6bd4\u5982\u8bf4\u6211\u4eec\u7528\u7684GLM\uff09\u3002\u5982\u679c\u4f60\u4f7f\u7528\u8fc7numpy\u7684\u8bdd\uff0c\u53ef\u4ee5\u628a\u5b83\u7406\u89e3\u4e3a Broadcasting \u3002 \u77e9\u9635\u4e0e\u77e9\u9635\u4e4b\u95f4\u7684\u52a0\u51cf\u5c31\u662f\u4e24\u4e2a\u77e9\u9635\u5bf9\u5e94\u5143\u7d20\u7684\u52a0\u51cf\u8fd0\u7b97\uff0c\u6240\u4ee5\u603b\u4f53\u7684\u89c4\u5219\u548c\u4e0e\u6807\u91cf\u8fd0\u7b97\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u53ea\u4e0d\u8fc7\u5728\u76f8\u540c\u7d22\u5f15\u4e0b\u7684\u5143\u7d20\u624d\u80fd\u8fdb\u884c\u8fd0\u7b97\u3002\u8fd9\u4e5f\u5c31\u662f\u8bf4\u52a0\u6cd5\u548c\u51cf\u6cd5\u53ea\u5bf9\u540c\u7ef4\u5ea6\u7684\u77e9\u9635\u624d\u662f\u6709\u5b9a\u4e49\u7684\u3002\u4e00\u4e2a3\u00d72\u77e9\u9635\u548c\u4e00\u4e2a2\u00d73\u77e9\u9635\uff08\u6216\u4e00\u4e2a3\u00d73\u77e9\u9635\u4e0e4\u00d74\u77e9\u9635\uff09\u662f\u4e0d\u80fd\u8fdb\u884c\u52a0\u51cf\u7684\u3002\u6211\u4eec\u770b\u770b\u4e24\u4e2a2\u00d72\u77e9\u9635\u662f\u600e\u6837\u76f8\u52a0\u7684\uff1a \\begin{bmatrix} \\color{red}1 & \\color{red}2 \\\\ \\color{green}3 & \\color{green}4 \\end{bmatrix} + \\begin{bmatrix} \\color{red}5 & \\color{red}6 \\\\ \\color{green}7 & \\color{green}8 \\end{bmatrix} = \\begin{bmatrix} \\color{red}1 + \\color{red}5 & \\color{red}2 + \\color{red}6 \\\\ \\color{green}3 + \\color{green}7 & \\color{green}4 + \\color{green}8 \\end{bmatrix} = \\begin{bmatrix} \\color{red}6 & \\color{red}8 \\\\ \\color{green}{10} & \\color{green}{12} \\end{bmatrix} \u540c\u6837\u7684\u6cd5\u5219\u4e5f\u9002\u7528\u4e8e\u51cf\u6cd5\uff1a \\begin{bmatrix} \\color{red}4 & \\color{red}2 \\\\ \\color{green}1 & \\color{green}6 \\end{bmatrix} - \\begin{bmatrix} \\color{red}2 & \\color{red}4 \\\\ \\color{green}0 & \\color{green}1 \\end{bmatrix} = \\begin{bmatrix} \\color{red}4 - \\color{red}2 & \\color{red}2 - \\color{red}4 \\\\ \\color{green}1 - \\color{green}0 & \\color{green}6 - \\color{green}1 \\end{bmatrix} = \\begin{bmatrix} \\color{red}2 & -\\color{red}2 \\\\ \\color{green}1 & \\color{green}5 \\end{bmatrix} \u77e9\u9635\u7684\u6570\u4e58 \u548c\u77e9\u9635\u4e0e\u6807\u91cf\u7684\u52a0\u51cf\u4e00\u6837\uff0c\u77e9\u9635\u4e0e\u6807\u91cf\u4e4b\u95f4\u7684\u4e58\u6cd5\u4e5f\u662f\u77e9\u9635\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u5206\u522b\u4e58\u4ee5\u8be5\u6807\u91cf\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u5c55\u793a\u4e86\u4e58\u6cd5\u7684\u8fc7\u7a0b\uff1a \\color{green}2 \\cdot \\begin{bmatrix} 1 & 2 \\\\ 3 & 4 \\end{bmatrix} = \\begin{bmatrix} \\color{green}2 \\cdot 1 & \\color{green}2 \\cdot 2 \\\\ \\color{green}2 \\cdot 3 & \\color{green}2 \\cdot 4 \\end{bmatrix} = \\begin{bmatrix} 2 & 4 \\\\ 6 & 8 \\end{bmatrix} \u73b0\u5728\u6211\u4eec\u4e5f\u5c31\u80fd\u660e\u767d\u4e3a\u4ec0\u4e48\u8fd9\u4e9b\u5355\u72ec\u7684\u6570\u5b57\u8981\u53eb\u505a\u6807\u91cf(Scalar)\u4e86\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u6807\u91cf\u5c31\u662f\u7528\u5b83\u7684\u503c \u7f29\u653e (Scale)\u77e9\u9635\u7684\u6240\u6709\u5143\u7d20\uff08\u8bd1\u6ce8\uff1a\u6ce8\u610fScalar\u662f\u7531Scale + -ar\u6f14\u53d8\u8fc7\u6765\u7684\uff09\u3002\u524d\u9762\u90a3\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6240\u6709\u7684\u5143\u7d20\u90fd\u88ab\u653e\u5927\u4e862\u500d\u3002 \u5230\u76ee\u524d\u4e3a\u6b62\u90fd\u8fd8\u597d\uff0c\u6211\u4eec\u7684\u4f8b\u5b50\u90fd\u4e0d\u590d\u6742\u3002\u4e0d\u8fc7\u77e9\u9635\u4e0e\u77e9\u9635\u7684\u4e58\u6cd5\u5c31\u4e0d\u4e00\u6837\u4e86\u3002 \u77e9\u9635\u76f8\u4e58 \u77e9\u9635\u4e4b\u95f4\u7684\u4e58\u6cd5\u4e0d\u89c1\u5f97\u6709\u591a\u590d\u6742\uff0c\u4f46\u7684\u786e\u5f88\u96be\u8ba9\u4eba\u9002\u5e94\u3002\u77e9\u9635\u4e58\u6cd5\u57fa\u672c\u4e0a\u610f\u5473\u7740\u9075\u7167\u89c4\u5b9a\u597d\u7684\u6cd5\u5219\u8fdb\u884c\u76f8\u4e58\u3002\u5f53\u7136\uff0c\u76f8\u4e58\u8fd8\u6709\u4e00\u4e9b\u9650\u5236\uff1a \u53ea\u6709\u5f53\u5de6\u4fa7\u77e9\u9635\u7684\u5217\u6570\u4e0e\u53f3\u4fa7\u77e9\u9635\u7684\u884c\u6570\u76f8\u7b49\uff0c\u4e24\u4e2a\u77e9\u9635\u624d\u80fd\u76f8\u4e58\u3002 \u77e9\u9635\u76f8\u4e58\u4e0d\u9075\u5b88 \u4ea4\u6362\u5f8b (Commutative)\uff0c\u4e5f\u5c31\u662f\u8bf4 A \\cdot B \\neq B \\cdot A \u3002 \u6211\u4eec\u5148\u770b\u4e00\u4e2a\u4e24\u4e2a2\u00d72\u77e9\u9635\u76f8\u4e58\u7684\u4f8b\u5b50\uff1a \\begin{bmatrix} \\color{red}1 & \\color{red}2 \\\\ \\color{green}3 & \\color{green}4 \\end{bmatrix} \\cdot \\begin{bmatrix} \\color{blue}5 & \\color{purple}6 \\\\ \\color{blue}7 & \\color{purple}8 \\end{bmatrix} = \\begin{bmatrix} \\color{red}1 \\cdot \\color{blue}5 + \\color{red}2 \\cdot \\color{blue}7 & \\color{red}1 \\cdot \\color{purple}6 + \\color{red}2 \\cdot \\color{purple}8 \\\\ \\color{green}3 \\cdot \\color{blue}5 + \\color{green}4 \\cdot \\color{blue}7 & \\color{green}3 \\cdot \\color{purple}6 + \\color{green}4 \\cdot \\color{purple}8 \\end{bmatrix} = \\begin{bmatrix} 19 & 22 \\\\ 43 & 50 \\end{bmatrix} \u73b0\u5728\u4f60\u53ef\u80fd\u4f1a\u5728\u60f3\u4e86\uff1a\u5929\u54ea\uff0c\u521a\u521a\u5230\u5e95\u53d1\u751f\u4e86\u4ec0\u4e48? \u77e9\u9635\u7684\u4e58\u6cd5\u662f\u4e00\u7cfb\u5217\u4e58\u6cd5\u548c\u52a0\u6cd5\u7ec4\u5408\u7684\u7ed3\u679c\uff0c\u5b83\u4f7f\u7528\u5230\u4e86\u5de6\u4fa7\u77e9\u9635\u7684\u884c\u548c\u53f3\u4fa7\u77e9\u9635\u7684\u5217\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u4e0b\u9762\u7684\u56fe\u7247\uff1a \u6211\u4eec\u9996\u5148\u628a\u5de6\u4fa7\u77e9\u9635\u7684\u884c\u548c\u53f3\u4fa7\u77e9\u9635\u7684\u5217\u62ff\u51fa\u6765\u3002\u8fd9\u4e9b\u6311\u51fa\u6765\u884c\u548c\u5217\u5c06\u51b3\u5b9a\u6211\u4eec\u8be5\u8ba1\u7b97\u7ed3\u679c2x2\u77e9\u9635\u7684\u54ea\u4e2a\u8f93\u51fa\u503c\u3002\u5982\u679c\u53d6\u7684\u662f\u5de6\u77e9\u9635\u7684\u7b2c\u4e00\u884c\uff0c\u8f93\u51fa\u503c\u5c31\u4f1a\u51fa\u73b0\u5728\u7ed3\u679c\u77e9\u9635\u7684\u7b2c\u4e00\u884c\u3002\u63a5\u4e0b\u6765\u518d\u53d6\u4e00\u5217\uff0c\u5982\u679c\u6211\u4eec\u53d6\u7684\u662f\u53f3\u77e9\u9635\u7684\u7b2c\u4e00\u5217\uff0c\u6700\u7ec8\u503c\u5219\u4f1a\u51fa\u73b0\u5728\u7ed3\u679c\u77e9\u9635\u7684\u7b2c\u4e00\u5217\u3002\u8fd9\u6b63\u662f\u7ea2\u6846\u91cc\u7684\u60c5\u51b5\u3002\u5982\u679c\u60f3\u8ba1\u7b97\u7ed3\u679c\u77e9\u9635\u53f3\u4e0b\u89d2\u7684\u503c\uff0c\u6211\u4eec\u8981\u7528\u7b2c\u4e00\u4e2a\u77e9\u9635\u7684\u7b2c\u4e8c\u884c\u548c\u7b2c\u4e8c\u4e2a\u77e9\u9635\u7684\u7b2c\u4e8c\u5217\uff08\u8bd1\u6ce8\uff1a\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u7ed3\u679c\u77e9\u9635\u7684\u5143\u7d20\u7684\u884c\u53d6\u51b3\u4e8e\u7b2c\u4e00\u4e2a\u77e9\u9635\uff0c\u5217\u53d6\u51b3\u4e8e\u7b2c\u4e8c\u4e2a\u77e9\u9635\uff09\u3002 \u8ba1\u7b97\u4e00\u9879\u7684\u7ed3\u679c\u503c\u7684\u65b9\u5f0f\u662f\u5148\u8ba1\u7b97\u5de6\u4fa7\u77e9\u9635\u5bf9\u5e94\u884c\u548c\u53f3\u4fa7\u77e9\u9635\u5bf9\u5e94\u5217\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e4b\u79ef\uff0c\u7136\u540e\u662f\u7b2c\u4e8c\u4e2a\uff0c\u7b2c\u4e09\u4e2a\uff0c\u7b2c\u56db\u4e2a\u7b49\u7b49\uff0c\u7136\u540e\u628a\u6240\u6709\u7684\u4e58\u79ef\u76f8\u52a0\uff0c\u8fd9\u5c31\u662f\u7ed3\u679c\u4e86\u3002\u73b0\u5728\u6211\u4eec\u5c31\u80fd\u89e3\u91ca\u4e3a\u4ec0\u4e48\u5de6\u4fa7\u77e9\u9635\u7684\u5217\u6570\u5fc5\u987b\u548c\u53f3\u4fa7\u77e9\u9635\u7684\u884c\u6570\u76f8\u7b49\u4e86\uff0c\u5982\u679c\u4e0d\u76f8\u7b49\u8fd9\u4e00\u6b65\u7684\u8fd0\u7b97\u5c31\u65e0\u6cd5\u5b8c\u6210\u4e86\uff01 \u7ed3\u679c\u77e9\u9635\u7684\u7ef4\u5ea6\u662f(n, m)\uff0cn\u7b49\u4e8e\u5de6\u4fa7\u77e9\u9635\u7684\u884c\u6570\uff0cm\u7b49\u4e8e\u53f3\u4fa7\u77e9\u9635\u7684\u5217\u6570\u3002 \u5982\u679c\u5728\u8111\u5b50\u91cc\u60f3\u8c61\u51fa\u8fd9\u4e00\u4e58\u6cd5\u6709\u4e9b\u56f0\u96be\uff0c\u522b\u62c5\u5fc3\u3002\u4e0d\u65ad\u5730\u52a8\u624b\u8ba1\u7b97\uff0c\u5982\u679c\u9047\u5230\u56f0\u96be\u518d\u56de\u5934\u770b\u8fd9\u9875\u7684\u5185\u5bb9\u3002\u968f\u7740\u65f6\u95f4\u6d41\u901d\uff0c\u77e9\u9635\u4e58\u6cd5\u5bf9\u4f60\u6765\u8bf4\u4f1a\u53d8\u6210\u5f88\u81ea\u7136\u7684\u4e8b\u3002 \u6211\u4eec\u7528\u4e00\u4e2a\u66f4\u5927\u7684\u4f8b\u5b50\u6765\u7ed3\u675f\u5bf9\u77e9\u9635\u76f8\u4e58\u7684\u8ba8\u8bba\u3002\u8bd5\u7740\u4f7f\u7528\u989c\u8272\u6765\u5bfb\u627e\u89c4\u5f8b\u3002\u4f5c\u4e3a\u4e00\u4e2a\u6709\u7528\u7684\u7ec3\u4e60\uff0c\u4f60\u53ef\u4ee5\u8bd5\u7740\u81ea\u5df1\u89e3\u7b54\u4e00\u4e0b\u8fd9\u4e2a\u4e58\u6cd5\u95ee\u9898\uff0c\u518d\u5c06\u4f60\u7684\u7ed3\u679c\u548c\u56fe\u4e2d\u7684\u8fd9\u4e2a\u8fdb\u884c\u5bf9\u6bd4\uff08\u5982\u679c\u7528\u7b14\u8ba1\u7b97\uff0c\u4f60\u5f88\u5feb\u5c31\u80fd\u638c\u63e1\u5b83\u4eec\uff09\u3002 \\begin{bmatrix} \\color{red}4 & \\color{red}2 & \\color{red}0 \\\\ \\color{green}0 & \\color{green}8 & \\color{green}1 \\\\ \\color{blue}0 & \\color{blue}1 & \\color{blue}0 \\end{bmatrix} \\cdot \\begin{bmatrix} \\color{red}4 & \\color{green}2 & \\color{blue}1 \\\\ \\color{red}2 & \\color{green}0 & \\color{blue}4 \\\\ \\color{red}9 & \\color{green}4 & \\color{blue}2 \\end{bmatrix} = \\begin{bmatrix} \\color{red}4 \\cdot \\color{red}4 + \\color{red}2 \\cdot \\color{red}2 + \\color{red}0 \\cdot \\color{red}9 & \\color{red}4 \\cdot \\color{green}2 + \\color{red}2 \\cdot \\color{green}0 + \\color{red}0 \\cdot \\color{green}4 & \\color{red}4 \\cdot \\color{blue}1 + \\color{red}2 \\cdot \\color{blue}4 + \\color{red}0 \\cdot \\color{blue}2 \\\\ \\color{green}0 \\cdot \\color{red}4 + \\color{green}8 \\cdot \\color{red}2 + \\color{green}1 \\cdot \\color{red}9 & \\color{green}0 \\cdot \\color{green}2 + \\color{green}8 \\cdot \\color{green}0 + \\color{green}1 \\cdot \\color{green}4 & \\color{green}0 \\cdot \\color{blue}1 + \\color{green}8 \\cdot \\color{blue}4 + \\color{green}1 \\cdot \\color{blue}2 \\\\ \\color{blue}0 \\cdot \\color{red}4 + \\color{blue}1 \\cdot \\color{red}2 + \\color{blue}0 \\cdot \\color{red}9 & \\color{blue}0 \\cdot \\color{green}2 + \\color{blue}1 \\cdot \\color{green}0 + \\color{blue}0 \\cdot \\color{green}4 & \\color{blue}0 \\cdot \\color{blue}1 + \\color{blue}1 \\cdot \\color{blue}4 + \\color{blue}0 \\cdot \\color{blue}2 \\end{bmatrix} \\\\ = \\begin{bmatrix} 20 & 8 & 12 \\\\ 25 & 4 & 34 \\\\ 2 & 0 & 4 \\end{bmatrix} \u53ef\u4ee5\u770b\u5230\uff0c\u77e9\u9635\u76f8\u4e58\u975e\u5e38\u7e41\u7410\u800c\u5bb9\u6613\u51fa\u9519\uff08\u8fd9\u4e5f\u662f\u6211\u4eec\u901a\u5e38\u8ba9\u8ba1\u7b97\u673a\u505a\u8fd9\u4ef6\u4e8b\u7684\u539f\u56e0\uff09\uff0c\u800c\u4e14\u5f53\u77e9\u9635\u53d8\u5927\u4ee5\u540e\u5f88\u5feb\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u5982\u679c\u4f60\u4ecd\u7136\u5e0c\u671b\u4e86\u89e3\u66f4\u591a\uff0c\u6216\u5bf9\u77e9\u9635\u7684\u6570\u5b66\u6027\u8d28\u611f\u5230\u597d\u5947\uff0c\u6211\u5f3a\u70c8\u63a8\u8350\u4f60\u770b\u770b \u53ef\u6c57\u5b66\u9662 \u7684\u77e9\u9635\u6559\u7a0b\u3002 \u4e0d\u7ba1\u600e\u6837\uff0c\u73b0\u5728\u6211\u4eec\u77e5\u9053\u5982\u4f55\u8fdb\u884c\u77e9\u9635\u76f8\u4e58\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u5b66\u4e60\u597d\u4e1c\u897f\u4e86\u3002 \u77e9\u9635\u4e0e\u5411\u91cf\u76f8\u4e58 \u76ee\u524d\u4e3a\u6b62\uff0c\u901a\u8fc7\u8fd9\u4e9b\u6559\u7a0b\u6211\u4eec\u5df2\u7ecf\u76f8\u5f53\u4e86\u89e3\u5411\u91cf\u4e86\u3002\u6211\u4eec\u7528\u5411\u91cf\u6765\u8868\u793a\u4f4d\u7f6e\uff0c\u8868\u793a\u989c\u8272\uff0c\u751a\u81f3\u662f\u7eb9\u7406\u5750\u6807\u3002\u8ba9\u6211\u4eec\u66f4\u6df1\u5165\u4e86\u89e3\u4e00\u4e0b\u5411\u91cf\uff0c\u5b83\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a N\u00d71 \u77e9\u9635\uff0cN\u8868\u793a\u5411\u91cf\u5206\u91cf\u7684\u4e2a\u6570\uff08\u4e5f\u53eb N\u7ef4 (N-dimensional)\u5411\u91cf\uff09\u3002\u5982\u679c\u4f60\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\u5c31\u4f1a\u660e\u767d\u3002\u5411\u91cf\u548c\u77e9\u9635\u4e00\u6837\u90fd\u662f\u4e00\u4e2a\u6570\u5b57\u5e8f\u5217\uff0c\u4f46\u5b83\u53ea\u67091\u5217\u3002\u90a3\u4e48\uff0c\u8fd9\u4e2a\u65b0\u7684\u5b9a\u4e49\u5bf9\u6211\u4eec\u6709\u4ec0\u4e48\u5e2e\u52a9\u5462\uff1f\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a M\u00d7N \u77e9\u9635\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u4e2a\u77e9\u9635\u4e58\u4ee5\u6211\u4eec\u7684 N\u00d71 \u5411\u91cf\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u77e9\u9635\u7684\u5217\u6570\u7b49\u4e8e\u5411\u91cf\u7684\u884c\u6570\uff0c\u6240\u4ee5\u5b83\u4eec\u5c31\u80fd\u76f8\u4e58\u3002 \u4f46\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u4f1a\u5173\u5fc3\u77e9\u9635\u80fd\u5426\u4e58\u4ee5\u4e00\u4e2a\u5411\u91cf\uff1f\u597d\u5427\uff0c\u6b63\u5de7\uff0c\u5f88\u591a\u6709\u8da3\u76842D/3D\u53d8\u6362\u90fd\u53ef\u4ee5\u653e\u5728\u4e00\u4e2a\u77e9\u9635\u4e2d\uff0c\u7528\u8fd9\u4e2a\u77e9\u9635\u4e58\u4ee5\u6211\u4eec\u7684\u5411\u91cf\u5c06 \u53d8\u6362 (Transform)\u8fd9\u4e2a\u5411\u91cf\u3002\u5982\u679c\u4f60\u4ecd\u7136\u6709\u4e9b\u56f0\u60d1\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e9b\u4f8b\u5b50\uff0c\u4f60\u5f88\u5feb\u5c31\u80fd\u660e\u767d\u4e86\u3002 \u5355\u4f4d\u77e9\u9635 \u5728OpenGL\u4e2d\uff0c\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\u6211\u4eec\u901a\u5e38\u4f7f\u7528 4\u00d74 \u7684\u53d8\u6362\u77e9\u9635\uff0c\u800c\u5176\u4e2d\u6700\u91cd\u8981\u7684\u539f\u56e0\u5c31\u662f\u5927\u90e8\u5206\u7684\u5411\u91cf\u90fd\u662f4\u5206\u91cf\u7684\u3002\u6211\u4eec\u80fd\u60f3\u5230\u7684\u6700\u7b80\u5355\u7684\u53d8\u6362\u77e9\u9635\u5c31\u662f \u5355\u4f4d\u77e9\u9635 (Identity Matrix)\u3002\u5355\u4f4d\u77e9\u9635\u662f\u4e00\u4e2a\u9664\u4e86\u5bf9\u89d2\u7ebf\u4ee5\u5916\u90fd\u662f0\u7684 N\u00d7N \u77e9\u9635\u3002\u5728\u4e0b\u5f0f\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u79cd\u53d8\u6362\u77e9\u9635\u4f7f\u4e00\u4e2a\u5411\u91cf\u5b8c\u5168\u4e0d\u53d8\uff1a \\begin{bmatrix} \\color{red}1 & \\color{red}0 & \\color{red}0 & \\color{red}0 \\\\ \\color{green}0 & \\color{green}1 & \\color{green}0 & \\color{green}0 \\\\ \\color{blue}0 & \\color{blue}0 & \\color{blue}1 & \\color{blue}0 \\\\ \\color{purple}0 & \\color{purple}0 & \\color{purple}0 & \\color{purple}1 \\end{bmatrix} \\cdot \\begin{bmatrix} 1 \\\\ 2 \\\\ 3 \\\\ 4 \\end{bmatrix} = \\begin{bmatrix} \\color{red}1 \\cdot 1 \\\\ \\color{green}1 \\cdot 2 \\\\ \\color{blue}1 \\cdot 3 \\\\ \\color{purple}1 \\cdot 4 \\end{bmatrix} = \\begin{bmatrix} 1 \\\\ 2 \\\\ 3 \\\\ 4 \\end{bmatrix} \u5411\u91cf\u770b\u8d77\u6765\u5b8c\u5168\u6ca1\u53d8\u3002\u4ece\u4e58\u6cd5\u6cd5\u5219\u6765\u770b\u5c31\u5f88\u5bb9\u6613\u7406\u89e3\u6765\uff1a\u7b2c\u4e00\u4e2a\u7ed3\u679c\u5143\u7d20\u662f\u77e9\u9635\u7684\u7b2c\u4e00\u884c\u7684\u6bcf\u4e2a\u5143\u7d20\u4e58\u4ee5\u5411\u91cf\u7684\u6bcf\u4e2a\u5bf9\u5e94\u5143\u7d20\u3002\u56e0\u4e3a\u6bcf\u884c\u7684\u5143\u7d20\u9664\u4e86\u7b2c\u4e00\u4e2a\u90fd\u662f0\uff0c\u53ef\u5f97\uff1a \\color{red}1\\cdot1 + \\color{red}0\\cdot2 + \\color{red}0\\cdot3 + \\color{red}0\\cdot4 = 1 \uff0c\u5411\u91cf\u7684\u5176\u4ed63\u4e2a\u5143\u7d20\u540c\u7406\u3002 Important \u4f60\u53ef\u80fd\u4f1a\u5947\u602a\u4e00\u4e2a\u6ca1\u53d8\u6362\u7684\u53d8\u6362\u77e9\u9635\u6709\u4ec0\u4e48\u7528\uff1f\u5355\u4f4d\u77e9\u9635\u901a\u5e38\u662f\u751f\u6210\u5176\u4ed6\u53d8\u6362\u77e9\u9635\u7684\u8d77\u70b9\uff0c\u5982\u679c\u6211\u4eec\u6df1\u6316\u7ebf\u6027\u4ee3\u6570\uff0c\u8fd9\u8fd8\u662f\u4e00\u4e2a\u5bf9\u8bc1\u660e\u5b9a\u7406\u3001\u89e3\u7ebf\u6027\u65b9\u7a0b\u975e\u5e38\u6709\u7528\u7684\u77e9\u9635\u3002 \u7f29\u653e \u5bf9\u4e00\u4e2a\u5411\u91cf\u8fdb\u884c\u7f29\u653e(Scaling)\u5c31\u662f\u5bf9\u5411\u91cf\u7684\u957f\u5ea6\u8fdb\u884c\u7f29\u653e\uff0c\u800c\u4fdd\u6301\u5b83\u7684\u65b9\u5411\u4e0d\u53d8\u3002\u7531\u4e8e\u6211\u4eec\u8fdb\u884c\u7684\u662f2\u7ef4\u62163\u7ef4\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u522b\u5b9a\u4e49\u4e00\u4e2a\u67092\u62163\u4e2a\u7f29\u653e\u53d8\u91cf\u7684\u5411\u91cf\uff0c\u6bcf\u4e2a\u53d8\u91cf\u7f29\u653e\u4e00\u4e2a\u8f74(x\u3001y\u6216z)\u3002 \u6211\u4eec\u5148\u6765\u5c1d\u8bd5\u7f29\u653e\u5411\u91cf \\color{red}{\\bar{v}} = (3,2) \u3002\u6211\u4eec\u53ef\u4ee5\u628a\u5411\u91cf\u6cbf\u7740x\u8f74\u7f29\u653e0.5\uff0c\u4f7f\u5b83\u7684\u5bbd\u5ea6\u7f29\u5c0f\u4e3a\u539f\u6765\u7684\u4e8c\u5206\u4e4b\u4e00\uff1b\u6211\u4eec\u5c06\u6cbf\u7740y\u8f74\u628a\u5411\u91cf\u7684\u9ad8\u5ea6\u7f29\u653e\u4e3a\u539f\u6765\u7684\u4e24\u500d\u3002\u6211\u4eec\u770b\u770b\u628a\u5411\u91cf\u7f29\u653e(0.5, 2)\u500d\u6240\u83b7\u5f97\u7684 \\color{blue}{\\bar{s}} \u662f\u4ec0\u4e48\u6837\u7684\uff1a \u8bb0\u4f4f\uff0cOpenGL\u901a\u5e38\u662f\u57283D\u7a7a\u95f4\u8fdb\u884c\u64cd\u4f5c\u7684\uff0c\u5bf9\u4e8e2D\u7684\u60c5\u51b5\u6211\u4eec\u53ef\u4ee5\u628az\u8f74\u7f29\u653e1\u500d\uff0c\u8fd9\u6837z\u8f74\u7684\u503c\u5c31\u4e0d\u53d8\u4e86\u3002\u6211\u4eec\u521a\u521a\u7684\u7f29\u653e\u64cd\u4f5c\u662f \u4e0d\u5747\u5300 (Non-uniform)\u7f29\u653e\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u8f74\u7684\u7f29\u653e\u56e0\u5b50(Scaling Factor)\u90fd\u4e0d\u4e00\u6837\u3002\u5982\u679c\u6bcf\u4e2a\u8f74\u7684\u7f29\u653e\u56e0\u5b50\u90fd\u4e00\u6837\u90a3\u4e48\u5c31\u53eb \u5747\u5300\u7f29\u653e (Uniform Scale)\u3002 \u6211\u4eec\u4e0b\u9762\u4f1a\u6784\u9020\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\u6765\u4e3a\u6211\u4eec\u63d0\u4f9b\u7f29\u653e\u529f\u80fd\u3002\u6211\u4eec\u4ece\u5355\u4f4d\u77e9\u9635\u4e86\u89e3\u5230\uff0c\u6bcf\u4e2a\u5bf9\u89d2\u7ebf\u5143\u7d20\u4f1a\u5206\u522b\u4e0e\u5411\u91cf\u7684\u5bf9\u5e94\u5143\u7d20\u76f8\u4e58\u3002\u5982\u679c\u6211\u4eec\u628a1\u53d8\u4e3a3\u4f1a\u600e\u6837\uff1f\u8fd9\u6837\u5b50\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u628a\u5411\u91cf\u7684\u6bcf\u4e2a\u5143\u7d20\u4e58\u4ee53\u4e86\uff0c\u8fd9\u4e8b\u5b9e\u4e0a\u5c31\u628a\u5411\u91cf\u7f29\u653e3\u500d\u3002\u5982\u679c\u6211\u4eec\u628a\u7f29\u653e\u53d8\u91cf\u8868\u793a\u4e3a (\\color{red}{S_1}, \\color{green}{S_2}, \\color{blue}{S_3}) \u6211\u4eec\u53ef\u4ee5\u4e3a\u4efb\u610f\u5411\u91cf (x,y,z) \u5b9a\u4e49\u4e00\u4e2a\u7f29\u653e\u77e9\u9635\uff1a \\begin{bmatrix} \\color{red}{S_1} & \\color{red}0 & \\color{red}0 & \\color{red}0 \\\\ \\color{green}0 & \\color{green}{S_2} & \\color{green}0 & \\color{green}0 \\\\ \\color{blue}0 & \\color{blue}0 & \\color{blue}{S_3} & \\color{blue}0 \\\\ \\color{purple}0 & \\color{purple}0 & \\color{purple}0 & \\color{purple}1 \\end{bmatrix} \\cdot \\begin{pmatrix} x \\\\ y \\\\ z \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} \\color{red}{S_1} \\cdot x \\\\ \\color{green}{S_2} \\cdot y \\\\ \\color{blue}{S_3} \\cdot z \\\\ 1 \\end{pmatrix} \u6ce8\u610f\uff0c\u7b2c\u56db\u4e2a\u7f29\u653e\u5411\u91cf\u4ecd\u7136\u662f1\uff0c\u56e0\u4e3a\u57283D\u7a7a\u95f4\u4e2d\u7f29\u653ew\u5206\u91cf\u662f\u65e0\u610f\u4e49\u7684\u3002w\u5206\u91cf\u53e6\u6709\u5176\u4ed6\u7528\u9014\uff0c\u5728\u540e\u9762\u6211\u4eec\u4f1a\u770b\u5230\u3002 \u4f4d\u79fb \u4f4d\u79fb (Translation)\u662f\u5728\u539f\u59cb\u5411\u91cf\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u53e6\u4e00\u4e2a\u5411\u91cf\u4ece\u800c\u83b7\u5f97\u4e00\u4e2a\u5728\u4e0d\u540c\u4f4d\u7f6e\u7684\u65b0\u5411\u91cf\u7684\u8fc7\u7a0b\uff0c\u4ece\u800c\u5728\u4f4d\u79fb\u5411\u91cf\u57fa\u7840\u4e0a \u79fb\u52a8 \u4e86\u539f\u59cb\u5411\u91cf\u3002\u6211\u4eec\u5df2\u7ecf\u8ba8\u8bba\u4e86\u5411\u91cf\u52a0\u6cd5\uff0c\u6240\u4ee5\u8fd9\u5e94\u8be5\u4e0d\u4f1a\u592a\u964c\u751f\u3002 \u548c\u7f29\u653e\u77e9\u9635\u4e00\u6837\uff0c\u57284\u00d74\u77e9\u9635\u4e0a\u6709\u51e0\u4e2a\u7279\u522b\u7684\u4f4d\u7f6e\u7528\u6765\u6267\u884c\u7279\u5b9a\u7684\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u4f4d\u79fb\u6765\u8bf4\u5b83\u4eec\u662f\u7b2c\u56db\u5217\u6700\u4e0a\u9762\u76843\u4e2a\u503c\u3002\u5982\u679c\u6211\u4eec\u628a\u4f4d\u79fb\u5411\u91cf\u8868\u793a\u4e3a (\\color{red}{T_x},\\color{green}{T_y},\\color{blue}{T_z}) \uff0c\u6211\u4eec\u5c31\u80fd\u628a\u4f4d\u79fb\u77e9\u9635\u5b9a\u4e49\u4e3a\uff1a \\begin{bmatrix} \\color{red}1 & \\color{red}0 & \\color{red}0 & \\color{red}{T_x} \\\\ \\color{green}0 & \\color{green}1 & \\color{green}0 & \\color{green}{T_y} \\\\ \\color{blue}0 & \\color{blue}0 & \\color{blue}1 & \\color{blue}{T_z} \\\\ \\color{purple}0 & \\color{purple}0 & \\color{purple}0 & \\color{purple}1 \\end{bmatrix} \\cdot \\begin{pmatrix} x \\\\ y \\\\ z \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} x + \\color{red}{T_x} \\\\ y + \\color{green}{T_y} \\\\ z + \\color{blue}{T_z} \\\\ 1 \\end{pmatrix} \u8fd9\u6837\u662f\u80fd\u5de5\u4f5c\u7684\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u4f4d\u79fb\u503c\u90fd\u8981\u4e58\u4ee5\u5411\u91cf\u7684 w \u884c\uff0c\u6240\u4ee5\u4f4d\u79fb\u503c\u4f1a\u52a0\u5230\u5411\u91cf\u7684\u539f\u59cb\u503c\u4e0a\uff08\u60f3\u60f3\u77e9\u9635\u4e58\u6cd5\u6cd5\u5219\uff09\u3002\u800c\u5982\u679c\u4f60\u75283x3\u77e9\u9635\u6211\u4eec\u7684\u4f4d\u79fb\u503c\u5c31\u6ca1\u5730\u65b9\u653e\u4e5f\u6ca1\u5730\u65b9\u4e58\u4e86\uff0c\u6240\u4ee5\u662f\u4e0d\u884c\u7684\u3002 Important \u9f50\u6b21\u5750\u6807(Homogeneous Coordinates) \u5411\u91cf\u7684w\u5206\u91cf\u4e5f\u53eb \u9f50\u6b21\u5750\u6807 \u3002\u60f3\u8981\u4ece\u9f50\u6b21\u5411\u91cf\u5f97\u52303D\u5411\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u628ax\u3001y\u548cz\u5750\u6807\u5206\u522b\u9664\u4ee5w\u5750\u6807\u3002\u6211\u4eec\u901a\u5e38\u4e0d\u4f1a\u6ce8\u610f\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3aw\u5206\u91cf\u901a\u5e38\u662f1.0\u3002\u4f7f\u7528\u9f50\u6b21\u5750\u6807\u6709\u51e0\u70b9\u597d\u5904\uff1a\u5b83\u5141\u8bb8\u6211\u4eec\u57283D\u5411\u91cf\u4e0a\u8fdb\u884c\u4f4d\u79fb\uff08\u5982\u679c\u6ca1\u6709w\u5206\u91cf\u6211\u4eec\u662f\u4e0d\u80fd\u4f4d\u79fb\u5411\u91cf\u7684\uff09\uff0c\u800c\u4e14\u4e0b\u4e00\u7ae0\u6211\u4eec\u4f1a\u7528w\u503c\u521b\u5efa3D\u89c6\u89c9\u6548\u679c\u3002 \u5982\u679c\u4e00\u4e2a\u5411\u91cf\u7684\u9f50\u6b21\u5750\u6807\u662f0\uff0c\u8fd9\u4e2a\u5750\u6807\u5c31\u662f \u65b9\u5411\u5411\u91cf (Direction Vector)\uff0c\u56e0\u4e3aw\u5750\u6807\u662f0\uff0c\u8fd9\u4e2a\u5411\u91cf\u5c31\u4e0d\u80fd\u4f4d\u79fb\uff08\u8bd1\u6ce8\uff1a\u8fd9\u4e5f\u5c31\u662f\u6211\u4eec\u8bf4\u7684\u4e0d\u80fd\u4f4d\u79fb\u4e00\u4e2a\u65b9\u5411\uff09\u3002 \u6709\u4e86\u4f4d\u79fb\u77e9\u9635\u6211\u4eec\u5c31\u53ef\u4ee5\u57283\u4e2a\u65b9\u5411(x\u3001y\u3001z)\u4e0a\u79fb\u52a8\u7269\u4f53\uff0c\u5b83\u662f\u6211\u4eec\u7684\u53d8\u6362\u5de5\u5177\u7bb1\u4e2d\u975e\u5e38\u6709\u7528\u7684\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\u3002 \u65cb\u8f6c \u4e0a\u9762\u51e0\u4e2a\u7684\u53d8\u6362\u5185\u5bb9\u76f8\u5bf9\u5bb9\u6613\u7406\u89e3\uff0c\u57282D\u62163D\u7a7a\u95f4\u4e2d\u4e5f\u5bb9\u6613\u8868\u793a\u51fa\u6765\uff0c\u4f46\u65cb\u8f6c(Rotation)\u7a0d\u590d\u6742\u4e9b\u3002\u5982\u679c\u4f60\u60f3\u77e5\u9053\u65cb\u8f6c\u77e9\u9635\u662f\u5982\u4f55\u6784\u9020\u51fa\u6765\u7684\uff0c\u6211\u63a8\u8350\u4f60\u53bb\u770b\u53ef\u6c57\u5b66\u9662 \u7ebf\u6027\u4ee3\u6570 \u7684\u89c6\u9891\u3002 \u9996\u5148\u6211\u4eec\u6765\u5b9a\u4e49\u4e00\u4e2a\u5411\u91cf\u7684\u65cb\u8f6c\u5230\u5e95\u662f\u4ec0\u4e48\u30022D\u62163D\u7a7a\u95f4\u4e2d\u7684\u65cb\u8f6c\u7528 \u89d2 (Angle)\u6765\u8868\u793a\u3002\u89d2\u53ef\u4ee5\u662f\u89d2\u5ea6\u5236\u6216\u5f27\u5ea6\u5236\u7684\uff0c\u5468\u89d2\u662f360\u89d2\u5ea6\u62162 PI \u5f27\u5ea6\u3002\u6211\u4e2a\u4eba\u66f4\u559c\u6b22\u7528\u89d2\u5ea6\uff0c\u56e0\u4e3a\u5b83\u4eec\u770b\u8d77\u6765\u66f4\u76f4\u89c2\u3002 Important \u5927\u591a\u6570\u65cb\u8f6c\u51fd\u6570\u9700\u8981\u7528\u5f27\u5ea6\u5236\u7684\u89d2\uff0c\u4f46\u5e78\u8fd0\u7684\u662f\u89d2\u5ea6\u5236\u7684\u89d2\u4e5f\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u8f6c\u5316\u4e3a\u5f27\u5ea6\u5236\u7684\uff1a \u5f27\u5ea6\u8f6c\u89d2\u5ea6\uff1a \u89d2\u5ea6 = \u5f27\u5ea6 * (180.0f / PI) \u89d2\u5ea6\u8f6c\u5f27\u5ea6\uff1a \u5f27\u5ea6 = \u89d2\u5ea6 * (PI / 180.0f) PI \u7ea6\u7b49\u4e8e3.14159265359\u3002 \u8f6c\u534a\u5708\u4f1a\u65cb\u8f6c360/2 = 180\u5ea6\uff0c\u5411\u53f3\u65cb\u8f6c1/5\u5708\u8868\u793a\u5411\u53f3\u65cb\u8f6c360/5 = 72\u5ea6\u3002\u4e0b\u56fe\u4e2d\u5c55\u793a\u76842D\u5411\u91cf \\color{red}{\\bar{v}} \u662f\u7531 \\color{green}{\\bar{k}} \u5411\u53f3\u65cb\u8f6c72\u5ea6\u6240\u5f97\u7684\uff1a \u57283D\u7a7a\u95f4\u4e2d\u65cb\u8f6c\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u89d2 \u548c \u4e00\u4e2a \u65cb\u8f6c\u8f74 (Rotation Axis)\u3002\u7269\u4f53\u4f1a\u6cbf\u7740\u7ed9\u5b9a\u7684\u65cb\u8f6c\u8f74\u65cb\u8f6c\u7279\u5b9a\u89d2\u5ea6\u3002\u5982\u679c\u4f60\u60f3\u8981\u66f4\u5f62\u8c61\u5316\u7684\u611f\u53d7\uff0c\u53ef\u4ee5\u8bd5\u8bd5\u5411\u4e0b\u770b\u7740\u4e00\u4e2a\u7279\u5b9a\u7684\u65cb\u8f6c\u8f74\uff0c\u540c\u65f6\u5c06\u4f60\u7684\u5934\u90e8\u65cb\u8f6c\u4e00\u5b9a\u89d2\u5ea6\u3002\u5f532D\u5411\u91cf\u57283D\u7a7a\u95f4\u4e2d\u65cb\u8f6c\u65f6\uff0c\u6211\u4eec\u628a\u65cb\u8f6c\u8f74\u8bbe\u4e3az\u8f74\uff08\u5c1d\u8bd5\u60f3\u8c61\u8fd9\u79cd\u60c5\u51b5\uff09\u3002 \u4f7f\u7528\u4e09\u89d2\u5b66\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u89d2\u5ea6\uff0c\u53ef\u4ee5\u628a\u4e00\u4e2a\u5411\u91cf\u53d8\u6362\u4e3a\u4e00\u4e2a\u7ecf\u8fc7\u65cb\u8f6c\u7684\u65b0\u5411\u91cf\u3002\u8fd9\u901a\u5e38\u662f\u4f7f\u7528\u4e00\u7cfb\u5217\u6b63\u5f26\u548c\u4f59\u5f26\u51fd\u6570\uff08\u4e00\u822c\u7b80\u79f0sin\u548ccos\uff09\u5404\u79cd\u5de7\u5999\u7684\u7ec4\u5408\u5f97\u5230\u7684\u3002\u5f53\u7136\uff0c\u8ba8\u8bba\u5982\u4f55\u751f\u6210\u53d8\u6362\u77e9\u9635\u8d85\u51fa\u4e86\u8fd9\u4e2a\u6559\u7a0b\u7684\u8303\u56f4\u3002 \u65cb\u8f6c\u77e9\u9635\u57283D\u7a7a\u95f4\u4e2d\u6bcf\u4e2a\u5355\u4f4d\u8f74\u90fd\u6709\u4e0d\u540c\u5b9a\u4e49\uff0c\u65cb\u8f6c\u89d2\u5ea6\u7528 \\theta \u8868\u793a\uff1a \u6cbfx\u8f74\u65cb\u8f6c\uff1a \\begin{bmatrix} \\color{red}1 & \\color{red}0 & \\color{red}0 & \\color{red}0 \\\\ \\color{green}0 & \\color{green}{\\cos \\theta} & - \\color{green}{\\sin \\theta} & \\color{green}0 \\\\ \\color{blue}0 & \\color{blue}{\\sin \\theta} & \\color{blue}{\\cos \\theta} & \\color{blue}0 \\\\ \\color{purple}0 & \\color{purple}0 & \\color{purple}0 & \\color{purple}1 \\end{bmatrix} \\cdot \\begin{pmatrix} x \\\\ y \\\\ z \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} x \\\\ \\color{green}{\\cos \\theta} \\cdot y - \\color{green}{\\sin \\theta} \\cdot z \\\\ \\color{blue}{\\sin \\theta} \\cdot y + \\color{blue}{\\cos \\theta} \\cdot z \\\\ 1 \\end{pmatrix} \u6cbfy\u8f74\u65cb\u8f6c\uff1a \\begin{bmatrix} \\color{red}{\\cos \\theta} & \\color{red}0 & \\color{red}{\\sin \\theta} & \\color{red}0 \\\\ \\color{green}0 & \\color{green}1 & \\color{green}0 & \\color{green}0 \\\\ - \\color{blue}{\\sin \\theta} & \\color{blue}0 & \\color{blue}{\\cos \\theta} & \\color{blue}0 \\\\ \\color{purple}0 & \\color{purple}0 & \\color{purple}0 & \\color{purple}1 \\end{bmatrix} \\cdot \\begin{pmatrix} x \\\\ y \\\\ z \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} \\color{red}{\\cos \\theta} \\cdot x + \\color{red}{\\sin \\theta} \\cdot z \\\\ y \\\\ - \\color{blue}{\\sin \\theta} \\cdot x + \\color{blue}{\\cos \\theta} \\cdot z \\\\ 1 \\end{pmatrix} \u6cbfz\u8f74\u65cb\u8f6c\uff1a \\begin{bmatrix} \\color{red}{\\cos \\theta} & - \\color{red}{\\sin \\theta} & \\color{red}0 & \\color{red}0 \\\\ \\color{green}{\\sin \\theta} & \\color{green}{\\cos \\theta} & \\color{green}0 & \\color{green}0 \\\\ \\color{blue}0 & \\color{blue}0 & \\color{blue}1 & \\color{blue}0 \\\\ \\color{purple}0 & \\color{purple}0 & \\color{purple}0 & \\color{purple}1 \\end{bmatrix} \\cdot \\begin{pmatrix} x \\\\ y \\\\ z \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} \\color{red}{\\cos \\theta} \\cdot x - \\color{red}{\\sin \\theta} \\cdot y \\\\ \\color{green}{\\sin \\theta} \\cdot x + \\color{green}{\\cos \\theta} \\cdot y \\\\ z \\\\ 1 \\end{pmatrix} \u5229\u7528\u65cb\u8f6c\u77e9\u9635\u6211\u4eec\u53ef\u4ee5\u628a\u4efb\u610f\u4f4d\u7f6e\u5411\u91cf\u6cbf\u4e00\u4e2a\u5355\u4f4d\u65cb\u8f6c\u8f74\u8fdb\u884c\u65cb\u8f6c\u3002\u4e5f\u53ef\u4ee5\u5c06\u591a\u4e2a\u77e9\u9635\u590d\u5408\uff0c\u6bd4\u5982\u5148\u6cbf\u7740x\u8f74\u65cb\u8f6c\u518d\u6cbf\u7740y\u8f74\u65cb\u8f6c\u3002\u4f46\u662f\u8fd9\u4f1a\u5f88\u5feb\u5bfc\u81f4\u4e00\u4e2a\u95ee\u9898\u2014\u2014 \u4e07\u5411\u8282\u6b7b\u9501 \uff08Gimbal Lock\uff0c\u53ef\u4ee5\u770b\u770b \u8fd9\u4e2a\u89c6\u9891 \uff08\u4f18\u9177\uff09 \u6765\u4e86\u89e3\uff09\u3002\u5728\u8fd9\u91cc\u6211\u4eec\u4e0d\u4f1a\u8ba8\u8bba\u5b83\u7684\u7ec6\u8282\uff0c\u4f46\u662f\u5bf9\u4e8e3D\u7a7a\u95f4\u4e2d\u7684\u65cb\u8f6c\uff0c\u4e00\u4e2a\u66f4\u597d\u7684\u6a21\u578b\u662f\u6cbf\u7740\u4efb\u610f\u7684\u4e00\u4e2a\u8f74\uff0c\u6bd4\u5982\u5355\u4f4d\u5411\u91cf$(0.662, 0.2, 0.7222)$\u65cb\u8f6c\uff0c\u800c\u4e0d\u662f\u5bf9\u4e00\u7cfb\u5217\u65cb\u8f6c\u77e9\u9635\u8fdb\u884c\u590d\u5408\u3002\u8fd9\u6837\u7684\u4e00\u4e2a\uff08\u8d85\u7ea7\u9ebb\u70e6\u7684\uff09\u77e9\u9635\u662f\u5b58\u5728\u7684\uff0c\u89c1\u4e0b\u9762\u8fd9\u4e2a\u516c\u5f0f\uff0c\u5176\u4e2d (\\color{red}{R_x}, \\color{green}{R_y}, \\color{blue}{R_z}) \u4ee3\u8868\u4efb\u610f\u65cb\u8f6c\u8f74\uff1a \\begin{bmatrix} \\cos \\theta + \\color{red}{R_x}^2(1 - \\cos \\theta) & \\color{red}{R_x}\\color{green}{R_y}(1 - \\cos \\theta) - \\color{blue}{R_z} \\sin \\theta & \\color{red}{R_x}\\color{blue}{R_z}(1 - \\cos \\theta) + \\color{green}{R_y} \\sin \\theta & 0 \\\\ \\color{green}{R_y}\\color{red}{R_x} (1 - \\cos \\theta) + \\color{blue}{R_z} \\sin \\theta & \\cos \\theta + \\color{green}{R_y}^2(1 - \\cos \\theta) & \\color{green}{R_y}\\color{blue}{R_z}(1 - \\cos \\theta) - \\color{red}{R_x} \\sin \\theta & 0 \\\\ \\color{blue}{R_z}\\color{red}{R_x}(1 - \\cos \\theta) - \\color{green}{R_y} \\sin \\theta & \\color{blue}{R_z}\\color{green}{R_y}(1 - \\cos \\theta) + \\color{red}{R_x} \\sin \\theta & \\cos \\theta + \\color{blue}{R_z}^2(1 - \\cos \\theta) & 0 \\\\ 0 & 0 & 0 & 1 \\end{bmatrix} \u5728\u6570\u5b66\u4e0a\u8ba8\u8bba\u5982\u4f55\u751f\u6210\u8fd9\u6837\u7684\u77e9\u9635\u4ecd\u7136\u8d85\u51fa\u4e86\u672c\u8282\u5185\u5bb9\u3002\u4f46\u662f\u8bb0\u4f4f\uff0c\u5373\u4f7f\u8fd9\u6837\u4e00\u4e2a\u77e9\u9635\u4e5f\u4e0d\u80fd\u5b8c\u5168\u89e3\u51b3\u4e07\u5411\u8282\u6b7b\u9501\u95ee\u9898\uff08\u5c3d\u7ba1\u4f1a\u6781\u5927\u5730\u907f\u514d\uff09\u3002\u907f\u514d\u4e07\u5411\u8282\u6b7b\u9501\u7684\u771f\u6b63\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528 \u56db\u5143\u6570 (Quaternion)\uff0c\u5b83\u4e0d\u4ec5\u66f4\u5b89\u5168\uff0c\u800c\u4e14\u8ba1\u7b97\u4f1a\u66f4\u6709\u6548\u7387\u3002\u56db\u5143\u6570\u53ef\u80fd\u4f1a\u5728\u540e\u9762\u7684\u6559\u7a0b\u4e2d\u8ba8\u8bba\u3002 \u8bd1\u6ce8 \u5bf9\u56db\u5143\u6570\u7684\u7406\u89e3\u4f1a\u7528\u5230\u975e\u5e38\u591a\u7684\u6570\u5b66\u77e5\u8bc6\u3002\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u56db\u5143\u6570\u4e0e3D\u65cb\u8f6c\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u53ef\u4ee5\u6765\u9605\u8bfb\u6211\u7684 \u6559\u7a0b \u3002\u5982\u679c\u4f60\u5bf9\u4e07\u5411\u8282\u6b7b\u9501\u7684\u6982\u5ff5\u4ecd\u4e0d\u662f\u90a3\u4e48\u6e05\u695a\uff0c\u53ef\u4ee5\u6765\u9605\u8bfb\u6211\u6559\u7a0b\u7684 Bonus\u7ae0\u8282 \u3002 \u73b0\u57283Blue1Brown\u4e5f\u5df2\u7ecf\u5f00\u59cb\u4e86\u4e00\u4e2a\u56db\u5143\u6570\u7684\u89c6\u9891\u7cfb\u5217\uff0c\u4ed6\u91c7\u7528\u7403\u6781\u5e73\u9762\u6295\u5f71(Stereographic Projection)\u7684\u65b9\u5f0f\u5c06\u56db\u5143\u6570\u6295\u5f71\u52303D\u7a7a\u95f4\uff0c\u540c\u6837\u6709\u52a9\u4e8e\u7406\u89e3\u56db\u5143\u6570\u7684\u6982\u5ff5\uff08\u4ecd\u5728\u66f4\u65b0\u4e2d\uff09\uff1a https://www.youtube.com/watch?v=d4EgbgTm0Bg \u77e9\u9635\u7684\u7ec4\u5408 \u4f7f\u7528\u77e9\u9635\u8fdb\u884c\u53d8\u6362\u7684\u771f\u6b63\u529b\u91cf\u5728\u4e8e\uff0c\u6839\u636e\u77e9\u9635\u4e4b\u95f4\u7684\u4e58\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u591a\u4e2a\u53d8\u6362\u7ec4\u5408\u5230\u4e00\u4e2a\u77e9\u9635\u4e2d\u3002\u8ba9\u6211\u4eec\u770b\u770b\u6211\u4eec\u662f\u5426\u80fd\u751f\u6210\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\uff0c\u8ba9\u5b83\u7ec4\u5408\u591a\u4e2a\u53d8\u6362\u3002\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u9876\u70b9(x, y, z)\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u5176\u7f29\u653e2\u500d\uff0c\u7136\u540e\u4f4d\u79fb(1, 2, 3)\u4e2a\u5355\u4f4d\u3002\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u4f4d\u79fb\u548c\u7f29\u653e\u77e9\u9635\u6765\u5b8c\u6210\u8fd9\u4e9b\u53d8\u6362\u3002\u7ed3\u679c\u7684\u53d8\u6362\u77e9\u9635\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a Trans . Scale = \\begin{bmatrix} \\color{red}1 & \\color{red}0 & \\color{red}0 & \\color{red}1 \\\\ \\color{green}0 & \\color{green}1 & \\color{green}0 & \\color{green}2 \\\\ \\color{blue}0 & \\color{blue}0 & \\color{blue}1 & \\color{blue}3 \\\\ \\color{purple}0 & \\color{purple}0 & \\color{purple}0 & \\color{purple}1 \\end{bmatrix} . \\begin{bmatrix} \\color{red}2 & \\color{red}0 & \\color{red}0 & \\color{red}0 \\\\ \\color{green}0 & \\color{green}2 & \\color{green}0 & \\color{green}0 \\\\ \\color{blue}0 & \\color{blue}0 & \\color{blue}2 & \\color{blue}0 \\\\ \\color{purple}0 & \\color{purple}0 & \\color{purple}0 & \\color{purple}1 \\end{bmatrix} = \\begin{bmatrix} \\color{red}2 & \\color{red}0 & \\color{red}0 & \\color{red}1 \\\\ \\color{green}0 & \\color{green}2 & \\color{green}0 & \\color{green}2 \\\\ \\color{blue}0 & \\color{blue}0 & \\color{blue}2 & \\color{blue}3 \\\\ \\color{purple}0 & \\color{purple}0 & \\color{purple}0 & \\color{purple}1 \\end{bmatrix} \u6ce8\u610f\uff0c\u5f53\u77e9\u9635\u76f8\u4e58\u65f6\u6211\u4eec\u5148\u5199\u4f4d\u79fb\u518d\u5199\u7f29\u653e\u53d8\u6362\u7684\u3002\u77e9\u9635\u4e58\u6cd5\u662f\u4e0d\u9075\u5b88\u4ea4\u6362\u5f8b\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u7684\u987a\u5e8f\u5f88\u91cd\u8981\u3002\u5f53\u77e9\u9635\u76f8\u4e58\u65f6\uff0c\u5728\u6700\u53f3\u8fb9\u7684\u77e9\u9635\u662f\u7b2c\u4e00\u4e2a\u4e0e\u5411\u91cf\u76f8\u4e58\u7684\uff0c\u6240\u4ee5\u4f60\u5e94\u8be5\u4ece\u53f3\u5411\u5de6\u8bfb\u8fd9\u4e2a\u4e58\u6cd5\u3002\u5efa\u8bae\u60a8\u5728\u7ec4\u5408\u77e9\u9635\u65f6\uff0c\u5148\u8fdb\u884c\u7f29\u653e\u64cd\u4f5c\uff0c\u7136\u540e\u662f\u65cb\u8f6c\uff0c\u6700\u540e\u624d\u662f\u4f4d\u79fb\uff0c\u5426\u5219\u5b83\u4eec\u4f1a\uff08\u6d88\u6781\u5730\uff09\u4e92\u76f8\u5f71\u54cd\u3002\u6bd4\u5982\uff0c\u5982\u679c\u4f60\u5148\u4f4d\u79fb\u518d\u7f29\u653e\uff0c\u4f4d\u79fb\u7684\u5411\u91cf\u4e5f\u4f1a\u540c\u6837\u88ab\u7f29\u653e\uff08\u8bd1\u6ce8\uff1a\u6bd4\u5982\u5411\u67d0\u65b9\u5411\u79fb\u52a82\u7c73\uff0c2\u7c73\u4e5f\u8bb8\u4f1a\u88ab\u7f29\u653e\u62101\u7c73\uff09\uff01 \u7528\u6700\u7ec8\u7684\u53d8\u6362\u77e9\u9635\u5de6\u4e58\u6211\u4eec\u7684\u5411\u91cf\u4f1a\u5f97\u5230\u4ee5\u4e0b\u7ed3\u679c\uff1a \\begin{bmatrix} \\color{red}2 & \\color{red}0 & \\color{red}0 & \\color{red}1 \\\\ \\color{green}0 & \\color{green}2 & \\color{green}0 & \\color{green}2 \\\\ \\color{blue}0 & \\color{blue}0 & \\color{blue}2 & \\color{blue}3 \\\\ \\color{purple}0 & \\color{purple}0 & \\color{purple}0 & \\color{purple}1 \\end{bmatrix} . \\begin{bmatrix} x \\\\ y \\\\ z \\\\ 1 \\end{bmatrix} = \\begin{bmatrix} \\color{red}2x + \\color{red}1 \\\\ \\color{green}2y + \\color{green}2 \\\\ \\color{blue}2z + \\color{blue}3 \\\\ 1 \\end{bmatrix} \u4e0d\u9519\uff01\u5411\u91cf\u5148\u7f29\u653e2\u500d\uff0c\u7136\u540e\u4f4d\u79fb\u4e86(1, 2, 3)\u4e2a\u5355\u4f4d\u3002 \u5b9e\u8df5 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u89e3\u91ca\u4e86\u53d8\u6362\u80cc\u540e\u7684\u6240\u6709\u7406\u8bba\uff0c\u662f\u65f6\u5019\u5c06\u8fd9\u4e9b\u77e5\u8bc6\u5229\u7528\u8d77\u6765\u4e86\u3002OpenGL\u6ca1\u6709\u81ea\u5e26\u4efb\u4f55\u7684\u77e9\u9635\u548c\u5411\u91cf\u77e5\u8bc6\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u5b9a\u4e49\u81ea\u5df1\u7684\u6570\u5b66\u7c7b\u548c\u51fd\u6570\u3002\u5728\u6559\u7a0b\u4e2d\u6211\u4eec\u66f4\u5e0c\u671b\u62bd\u8c61\u6240\u6709\u7684\u6570\u5b66\u7ec6\u8282\uff0c\u4f7f\u7528\u5df2\u7ecf\u505a\u597d\u4e86\u7684\u6570\u5b66\u5e93\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6709\u4e2a\u6613\u4e8e\u4f7f\u7528\uff0c\u4e13\u95e8\u4e3aOpenGL\u91cf\u8eab\u5b9a\u505a\u7684\u6570\u5b66\u5e93\uff0c\u90a3\u5c31\u662fGLM\u3002 GLM GLM\u662fOpen GL M athematics\u7684\u7f29\u5199\uff0c\u5b83\u662f\u4e00\u4e2a \u53ea\u6709\u5934\u6587\u4ef6\u7684 \u5e93\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ea\u9700\u5305\u542b\u5bf9\u5e94\u7684\u5934\u6587\u4ef6\u5c31\u884c\u4e86\uff0c\u4e0d\u7528\u94fe\u63a5\u548c\u7f16\u8bd1\u3002GLM\u53ef\u4ee5\u5728\u5b83\u4eec\u7684 \u7f51\u7ad9 \u4e0a\u4e0b\u8f7d\u3002\u628a\u5934\u6587\u4ef6\u7684\u6839\u76ee\u5f55\u590d\u5236\u5230\u4f60\u7684 includes \u6587\u4ef6\u5939\uff0c\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u5e93\u4e86\u3002 Attention GLM\u5e93\u4ece0.9.9\u7248\u672c\u8d77\uff0c\u9ed8\u8ba4\u4f1a\u5c06\u77e9\u9635\u7c7b\u578b\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u96f6\u77e9\u9635\uff08\u6240\u6709\u5143\u7d20\u5747\u4e3a0\uff09\uff0c\u800c\u4e0d\u662f\u5355\u4f4d\u77e9\u9635\uff08\u5bf9\u89d2\u5143\u7d20\u4e3a1\uff0c\u5176\u5b83\u5143\u7d20\u4e3a0\uff09\u3002\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f0.9.9\u62160.9.9\u4ee5\u4e0a\u7684\u7248\u672c\uff0c\u4f60\u9700\u8981\u5c06\u6240\u6709\u7684\u77e9\u9635\u521d\u59cb\u5316\u6539\u4e3a glm::mat4 mat = glm::mat4(1.0f) \u3002\u5982\u679c\u4f60\u60f3\u4e0e\u672c\u6559\u7a0b\u7684\u4ee3\u7801\u4fdd\u6301\u4e00\u81f4\uff0c\u8bf7\u4f7f\u7528\u4f4e\u4e8e0.9.9\u7248\u672c\u7684GLM\uff0c\u6216\u8005\u6539\u7528\u4e0a\u8ff0\u4ee3\u7801\u521d\u59cb\u5316\u6240\u6709\u7684\u77e9\u9635\u3002 \u6211\u4eec\u9700\u8981\u7684GLM\u7684\u5927\u591a\u6570\u529f\u80fd\u90fd\u53ef\u4ee5\u4ece\u4e0b\u9762\u8fd93\u4e2a\u5934\u6587\u4ef6\u4e2d\u627e\u5230\uff1a #include <glm/glm.hpp> #include <glm/gtc/matrix_transform.hpp> #include <glm/gtc/type_ptr.hpp> \u6211\u4eec\u6765\u770b\u770b\u662f\u5426\u53ef\u4ee5\u5229\u7528\u6211\u4eec\u521a\u5b66\u7684\u53d8\u6362\u77e5\u8bc6\u628a\u4e00\u4e2a\u5411\u91cf(1, 0, 0)\u4f4d\u79fb(1, 1, 0)\u4e2a\u5355\u4f4d\uff08\u6ce8\u610f\uff0c\u6211\u4eec\u628a\u5b83\u5b9a\u4e49\u4e3a\u4e00\u4e2a glm::vec4 \u7c7b\u578b\u7684\u503c\uff0c\u9f50\u6b21\u5750\u6807\u8bbe\u5b9a\u4e3a1.0\uff09\uff1a glm::vec4 vec(1.0f, 0.0f, 0.0f, 1.0f); // \u8bd1\u6ce8\uff1a\u4e0b\u9762\u5c31\u662f\u77e9\u9635\u521d\u59cb\u5316\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u4f7f\u7528\u7684\u662f0.9.9\u53ca\u4ee5\u4e0a\u7248\u672c // \u4e0b\u9762\u8fd9\u884c\u4ee3\u7801\u5c31\u9700\u8981\u6539\u4e3a: // glm::mat4 trans = glm::mat4(1.0f) // \u4e4b\u540e\u5c06\u4e0d\u518d\u8fdb\u884c\u63d0\u793a glm::mat4 trans; trans = glm::translate(trans, glm::vec3(1.0f, 1.0f, 0.0f)); vec = trans * vec; std::cout << vec.x << vec.y << vec.z << std::endl; \u6211\u4eec\u5148\u7528GLM\u5185\u5efa\u7684\u5411\u91cf\u7c7b\u5b9a\u4e49\u4e00\u4e2a\u53eb\u505a vec \u7684\u5411\u91cf\u3002\u63a5\u4e0b\u6765\u5b9a\u4e49\u4e00\u4e2a mat4 \u7c7b\u578b\u7684 trans \uff0c\u9ed8\u8ba4\u662f\u4e00\u4e2a4\u00d74\u5355\u4f4d\u77e9\u9635\u3002\u4e0b\u4e00\u6b65\u662f\u521b\u5efa\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\uff0c\u6211\u4eec\u662f\u628a\u5355\u4f4d\u77e9\u9635\u548c\u4e00\u4e2a\u4f4d\u79fb\u5411\u91cf\u4f20\u9012\u7ed9 glm::translate \u51fd\u6570\u6765\u5b8c\u6210\u8fd9\u4e2a\u5de5\u4f5c\u7684\uff08\u7136\u540e\u7528\u7ed9\u5b9a\u7684\u77e9\u9635\u4e58\u4ee5\u4f4d\u79fb\u77e9\u9635\u5c31\u80fd\u83b7\u5f97\u6700\u540e\u9700\u8981\u7684\u77e9\u9635\uff09\u3002 \u4e4b\u540e\u6211\u4eec\u628a\u5411\u91cf\u4e58\u4ee5\u4f4d\u79fb\u77e9\u9635\u5e76\u4e14\u8f93\u51fa\u6700\u540e\u7684\u7ed3\u679c\u3002\u5982\u679c\u4f60\u4ecd\u8bb0\u5f97\u4f4d\u79fb\u77e9\u9635\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u8bdd\uff0c\u5f97\u5230\u7684\u5411\u91cf\u5e94\u8be5\u662f(1 + 1, 0 + 1, 0 + 0)\uff0c\u4e5f\u5c31\u662f(2, 1, 0)\u3002\u8fd9\u4e2a\u4ee3\u7801\u7247\u6bb5\u5c06\u4f1a\u8f93\u51fa 210 \uff0c\u6240\u4ee5\u8fd9\u4e2a\u4f4d\u79fb\u77e9\u9635\u662f\u6b63\u786e\u7684\u3002 \u6211\u4eec\u6765\u505a\u4e9b\u66f4\u6709\u610f\u601d\u7684\u4e8b\u60c5\uff0c\u8ba9\u6211\u4eec\u6765\u65cb\u8f6c\u548c\u7f29\u653e\u4e4b\u524d\u6559\u7a0b\u4e2d\u7684\u90a3\u4e2a\u7bb1\u5b50\u3002\u9996\u5148\u6211\u4eec\u628a\u7bb1\u5b50\u9006\u65f6\u9488\u65cb\u8f6c90\u5ea6\u3002\u7136\u540e\u7f29\u653e0.5\u500d\uff0c\u4f7f\u5b83\u53d8\u6210\u539f\u6765\u7684\u4e00\u534a\u5927\u3002\u6211\u4eec\u5148\u6765\u521b\u5efa\u53d8\u6362\u77e9\u9635\uff1a glm::mat4 trans; trans = glm::rotate(trans, glm::radians(90.0f), glm::vec3(0.0, 0.0, 1.0)); trans = glm::scale(trans, glm::vec3(0.5, 0.5, 0.5)); \u9996\u5148\uff0c\u6211\u4eec\u628a\u7bb1\u5b50\u5728\u6bcf\u4e2a\u8f74\u90fd\u7f29\u653e\u52300.5\u500d\uff0c\u7136\u540e\u6cbfz\u8f74\u65cb\u8f6c90\u5ea6\u3002GLM\u5e0c\u671b\u5b83\u7684\u89d2\u5ea6\u662f\u5f27\u5ea6\u5236\u7684(Radian)\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528 glm::radians \u5c06\u89d2\u5ea6\u8f6c\u5316\u4e3a\u5f27\u5ea6\u3002\u6ce8\u610f\u6709\u7eb9\u7406\u7684\u90a3\u9762\u77e9\u5f62\u662f\u5728XY\u5e73\u9762\u4e0a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u628a\u5b83\u7ed5\u7740z\u8f74\u65cb\u8f6c\u3002\u56e0\u4e3a\u6211\u4eec\u628a\u8fd9\u4e2a\u77e9\u9635\u4f20\u9012\u7ed9\u4e86GLM\u7684\u6bcf\u4e2a\u51fd\u6570\uff0cGLM\u4f1a\u81ea\u52a8\u5c06\u77e9\u9635\u76f8\u4e58\uff0c\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u5305\u62ec\u4e86\u591a\u4e2a\u53d8\u6362\u7684\u53d8\u6362\u77e9\u9635\u3002 \u4e0b\u4e00\u4e2a\u5927\u95ee\u9898\u662f\uff1a\u5982\u4f55\u628a\u77e9\u9635\u4f20\u9012\u7ed9\u7740\u8272\u5668\uff1f\u6211\u4eec\u5728\u524d\u9762\u7b80\u5355\u63d0\u5230\u8fc7GLSL\u91cc\u4e5f\u6709\u4e00\u4e2a mat4 \u7c7b\u578b\u3002\u6240\u4ee5\u6211\u4eec\u5c06\u4fee\u6539\u9876\u70b9\u7740\u8272\u5668\u8ba9\u5176\u63a5\u6536\u4e00\u4e2a mat4 \u7684uniform\u53d8\u91cf\uff0c\u7136\u540e\u518d\u7528\u77e9\u9635uniform\u4e58\u4ee5\u4f4d\u7f6e\u5411\u91cf\uff1a #version 330 core layout (location = 0) in vec3 aPos; layout (location = 1) in vec2 aTexCoord; out vec2 TexCoord; uniform mat4 transform; void main() { gl_Position = transform * vec4(aPos, 1.0f); TexCoord = vec2(aTexCoord.x, aTexCoord.y); } Attention GLSL\u4e5f\u6709 mat2 \u548c mat3 \u7c7b\u578b\u4ece\u800c\u5141\u8bb8\u4e86\u50cf\u5411\u91cf\u4e00\u6837\u7684\u6df7\u5408\u8fd0\u7b97\u3002\u524d\u9762\u63d0\u5230\u7684\u6240\u6709\u6570\u5b66\u8fd0\u7b97\uff08\u50cf\u662f\u6807\u91cf-\u77e9\u9635\u76f8\u4e58\uff0c\u77e9\u9635-\u5411\u91cf\u76f8\u4e58\u548c\u77e9\u9635-\u77e9\u9635\u76f8\u4e58\uff09\u5728\u77e9\u9635\u7c7b\u578b\u91cc\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002\u5f53\u51fa\u73b0\u7279\u6b8a\u7684\u77e9\u9635\u8fd0\u7b97\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u7279\u522b\u8bf4\u660e\u3002 \u5728\u628a\u4f4d\u7f6e\u5411\u91cf\u4f20\u7ed9 gl_Position \u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6dfb\u52a0\u4e00\u4e2auniform\uff0c\u5e76\u4e14\u5c06\u5176\u4e0e\u53d8\u6362\u77e9\u9635\u76f8\u4e58\u3002\u6211\u4eec\u7684\u7bb1\u5b50\u73b0\u5728\u5e94\u8be5\u662f\u539f\u6765\u7684\u4e8c\u5206\u4e4b\u4e00\u5927\u5c0f\u5e76\uff08\u5411\u5de6\uff09\u65cb\u8f6c\u4e8690\u5ea6\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4ecd\u9700\u8981\u628a\u53d8\u6362\u77e9\u9635\u4f20\u9012\u7ed9\u7740\u8272\u5668\uff1a unsigned int transformLoc = glGetUniformLocation(ourShader.ID, \"transform\"); glUniformMatrix4fv(transformLoc, 1, GL_FALSE, glm::value_ptr(trans)); \u6211\u4eec\u9996\u5148\u67e5\u8be2uniform\u53d8\u91cf\u7684\u5730\u5740\uff0c\u7136\u540e\u7528\u6709 Matrix4fv \u540e\u7f00\u7684 glUniform \u51fd\u6570\u628a\u77e9\u9635\u6570\u636e\u53d1\u9001\u7ed9\u7740\u8272\u5668\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f60\u73b0\u5728\u5e94\u8be5\u5f88\u719f\u6089\u4e86\uff0c\u5b83\u662funiform\u7684\u4f4d\u7f6e\u503c\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u544a\u8bc9OpenGL\u6211\u4eec\u5c06\u8981\u53d1\u9001\u591a\u5c11\u4e2a\u77e9\u9635\uff0c\u8fd9\u91cc\u662f1\u3002\u7b2c\u4e09\u4e2a\u53c2\u6570\u8be2\u95ee\u6211\u4eec\u662f\u5426\u5e0c\u671b\u5bf9\u6211\u4eec\u7684\u77e9\u9635\u8fdb\u884c\u8f6c\u7f6e(Transpose)\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ea4\u6362\u6211\u4eec\u77e9\u9635\u7684\u884c\u548c\u5217\u3002OpenGL\u5f00\u53d1\u8005\u901a\u5e38\u4f7f\u7528\u4e00\u79cd\u5185\u90e8\u77e9\u9635\u5e03\u5c40\uff0c\u53eb\u505a \u5217\u4e3b\u5e8f (Column-major Ordering)\u5e03\u5c40\u3002GLM\u7684\u9ed8\u8ba4\u5e03\u5c40\u5c31\u662f\u5217\u4e3b\u5e8f\uff0c\u6240\u4ee5\u5e76\u4e0d\u9700\u8981\u8f6c\u7f6e\u77e9\u9635\uff0c\u6211\u4eec\u586b GL_FALSE \u3002\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u662f\u771f\u6b63\u7684\u77e9\u9635\u6570\u636e\uff0c\u4f46\u662fGLM\u5e76\u4e0d\u662f\u628a\u5b83\u4eec\u7684\u77e9\u9635\u50a8\u5b58\u4e3aOpenGL\u6240\u5e0c\u671b\u63a5\u53d7\u7684\u90a3\u79cd\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u5148\u7528GLM\u7684\u81ea\u5e26\u7684\u51fd\u6570 value_ptr \u6765\u53d8\u6362\u8fd9\u4e9b\u6570\u636e\u3002 \u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\uff0c\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u58f0\u660e\u4e86\u4e00\u4e2auniform\uff0c\u5e76\u628a\u77e9\u9635\u53d1\u9001\u7ed9\u4e86\u7740\u8272\u5668\uff0c\u7740\u8272\u5668\u4f1a\u53d8\u6362\u6211\u4eec\u7684\u9876\u70b9\u5750\u6807\u3002\u6700\u540e\u7684\u7ed3\u679c\u5e94\u8be5\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a \u5b8c\u7f8e\uff01\u6211\u4eec\u7684\u7bb1\u5b50\u5411\u5de6\u4fa7\u65cb\u8f6c\uff0c\u5e76\u662f\u539f\u6765\u7684\u4e00\u534a\u5927\u5c0f\uff0c\u6240\u4ee5\u53d8\u6362\u6210\u529f\u4e86\u3002\u6211\u4eec\u73b0\u5728\u505a\u4e9b\u66f4\u6709\u610f\u601d\u7684\uff0c\u770b\u770b\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u8ba9\u7bb1\u5b50\u968f\u7740\u65f6\u95f4\u65cb\u8f6c\uff0c\u6211\u4eec\u8fd8\u4f1a\u91cd\u65b0\u628a\u7bb1\u5b50\u653e\u5728\u7a97\u53e3\u7684\u53f3\u4e0b\u89d2\u3002\u8981\u8ba9\u7bb1\u5b50\u968f\u7740\u65f6\u95f4\u63a8\u79fb\u65cb\u8f6c\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u6e38\u620f\u5faa\u73af\u4e2d\u66f4\u65b0\u53d8\u6362\u77e9\u9635\uff0c\u56e0\u4e3a\u5b83\u5728\u6bcf\u4e00\u6b21\u6e32\u67d3\u8fed\u4ee3\u4e2d\u90fd\u8981\u66f4\u65b0\u3002\u6211\u4eec\u4f7f\u7528GLFW\u7684\u65f6\u95f4\u51fd\u6570\u6765\u83b7\u53d6\u4e0d\u540c\u65f6\u95f4\u7684\u89d2\u5ea6\uff1a glm::mat4 trans; trans = glm::translate(trans, glm::vec3(0.5f, -0.5f, 0.0f)); trans = glm::rotate(trans, (float)glfwGetTime(), glm::vec3(0.0f, 0.0f, 1.0f)); \u8981\u8bb0\u4f4f\u7684\u662f\u524d\u9762\u7684\u4f8b\u5b50\u4e2d\u6211\u4eec\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u58f0\u660e\u53d8\u6362\u77e9\u9635\uff0c\u4f46\u662f\u73b0\u5728\u6211\u4eec\u5fc5\u987b\u5728\u6bcf\u4e00\u6b21\u8fed\u4ee3\u4e2d\u521b\u5efa\u5b83\uff0c\u4ece\u800c\u4fdd\u8bc1\u6211\u4eec\u80fd\u591f\u4e0d\u65ad\u66f4\u65b0\u65cb\u8f6c\u89d2\u5ea6\u3002\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u6211\u4eec\u4e0d\u5f97\u4e0d\u5728\u6bcf\u6b21\u6e38\u620f\u5faa\u73af\u7684\u8fed\u4ee3\u4e2d\u91cd\u65b0\u521b\u5efa\u53d8\u6362\u77e9\u9635\u3002\u901a\u5e38\u5728\u6e32\u67d3\u573a\u666f\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e5f\u4f1a\u6709\u591a\u4e2a\u9700\u8981\u5728\u6bcf\u6b21\u6e32\u67d3\u8fed\u4ee3\u4e2d\u90fd\u7528\u65b0\u503c\u91cd\u65b0\u521b\u5efa\u7684\u53d8\u6362\u77e9\u9635 \u5728\u8fd9\u91cc\u6211\u4eec\u5148\u628a\u7bb1\u5b50\u56f4\u7ed5\u539f\u70b9(0, 0, 0)\u65cb\u8f6c\uff0c\u4e4b\u540e\uff0c\u6211\u4eec\u628a\u65cb\u8f6c\u8fc7\u540e\u7684\u7bb1\u5b50\u4f4d\u79fb\u5230\u5c4f\u5e55\u7684\u53f3\u4e0b\u89d2\u3002\u8bb0\u4f4f\uff0c\u5b9e\u9645\u7684\u53d8\u6362\u987a\u5e8f\u5e94\u8be5\u4e0e\u9605\u8bfb\u987a\u5e8f\u76f8\u53cd\uff1a\u5c3d\u7ba1\u5728\u4ee3\u7801\u4e2d\u6211\u4eec\u5148\u4f4d\u79fb\u518d\u65cb\u8f6c\uff0c\u5b9e\u9645\u7684\u53d8\u6362\u5374\u662f\u5148\u5e94\u7528\u65cb\u8f6c\u518d\u662f\u4f4d\u79fb\u7684\u3002\u660e\u767d\u6240\u6709\u8fd9\u4e9b\u53d8\u6362\u7684\u7ec4\u5408\uff0c\u5e76\u4e14\u77e5\u9053\u5b83\u4eec\u662f\u5982\u4f55\u5e94\u7528\u5230\u7269\u4f53\u4e0a\u662f\u4e00\u4ef6\u975e\u5e38\u56f0\u96be\u7684\u4e8b\u60c5\u3002\u53ea\u6709\u4e0d\u65ad\u5730\u5c1d\u8bd5\u548c\u5b9e\u9a8c\u8fd9\u4e9b\u53d8\u6362\u4f60\u624d\u80fd\u5feb\u901f\u5730\u638c\u63e1\u5b83\u4eec\u3002 \u5982\u679c\u4f60\u505a\u5bf9\u4e86\uff0c\u4f60\u5c06\u770b\u5230\u4e0b\u9762\u7684\u7ed3\u679c\uff1a \u8fd9\u5c31\u662f\u6211\u4eec\u521a\u521a\u505a\u5230\u7684\uff01\u4e00\u4e2a\u4f4d\u79fb\u8fc7\u7684\u7bb1\u5b50\uff0c\u5b83\u4f1a\u4e00\u76f4\u8f6c\uff0c\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\u5c31\u505a\u5230\u4e86\uff01\u73b0\u5728\u4f60\u53ef\u4ee5\u660e\u767d\u4e3a\u4ec0\u4e48\u77e9\u9635\u5728\u56fe\u5f62\u9886\u57df\u662f\u4e00\u4e2a\u5982\u6b64\u91cd\u8981\u7684\u5de5\u5177\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u65e0\u9650\u6570\u91cf\u7684\u53d8\u6362\uff0c\u800c\u628a\u5b83\u4eec\u7ec4\u5408\u4e3a\u4ec5\u4ec5\u4e00\u4e2a\u77e9\u9635\uff0c\u5982\u679c\u613f\u610f\u7684\u8bdd\u6211\u4eec\u8fd8\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u5b83\u3002\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u77e9\u9635\u53ef\u4ee5\u7701\u53bb\u91cd\u65b0\u5b9a\u4e49\u9876\u70b9\u6570\u636e\u7684\u529f\u592b\uff0c\u5b83\u4e5f\u80fd\u591f\u8282\u7701\u5904\u7406\u65f6\u95f4\uff0c\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u4e00\u76f4\u91cd\u65b0\u53d1\u9001\u6211\u4eec\u7684\u6570\u636e\uff08\u8fd9\u662f\u4e2a\u975e\u5e38\u6162\u7684\u8fc7\u7a0b\uff09\u3002 \u5982\u679c\u4f60\u6ca1\u6709\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u6216\u8005\u4f60\u6709\u54ea\u513f\u4e0d\u6e05\u695a\u7684\u5730\u65b9\u3002\u53ef\u4ee5\u770b \u6e90\u7801 \u3002 \u4e0b\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u4f1a\u8ba8\u8bba\u600e\u6837\u4f7f\u7528\u77e9\u9635\u4e3a\u9876\u70b9\u5b9a\u4e49\u4e0d\u540c\u7684\u5750\u6807\u7a7a\u95f4\u3002\u8fd9\u5c06\u662f\u6211\u4eec\u8fdb\u5165\u5b9e\u65f63D\u56fe\u50cf\u7684\u7b2c\u4e00\u6b65\uff01 \u62d3\u5c55\u9605\u8bfb \u7ebf\u6027\u4ee3\u6570\u7684\u672c\u8d28 \uff1aGrant Sanderson\u5236\u4f5c\u7684\u975e\u5e38\u68d2\u7684\u89c6\u9891\u6559\u7a0b\u7cfb\u5217\uff0c\u5b83\u8ba8\u8bba\u4e86\u53d8\u6362\u548c\u7ebf\u6027\u4ee3\u6570\u5185\u5728\u7684\u6570\u5b66\u672c\u8d28\uff08 \u4e2d\u6587\u5b57\u5e55\u7248\u672c \uff09\u3002 \u7ec3\u4e60 \u4f7f\u7528\u5e94\u7528\u5728\u7bb1\u5b50\u4e0a\u7684\u6700\u540e\u4e00\u4e2a\u53d8\u6362\uff0c\u5c1d\u8bd5\u5c06\u5176\u6539\u53d8\u4e3a\u5148\u65cb\u8f6c\uff0c\u540e\u4f4d\u79fb\u3002\u770b\u770b\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u8bd5\u7740\u60f3\u60f3\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u8fd9\u6837\u7684\u4e8b\u60c5\uff1a \u53c2\u8003\u89e3\u7b54 \u5c1d\u8bd5\u518d\u6b21\u8c03\u7528 glDrawElements \u753b\u51fa\u7b2c\u4e8c\u4e2a\u7bb1\u5b50\uff0c \u53ea \u4f7f\u7528\u53d8\u6362\u5c06\u5176\u6446\u653e\u5728\u4e0d\u540c\u7684\u4f4d\u7f6e\u3002\u8ba9\u8fd9\u4e2a\u7bb1\u5b50\u88ab\u6446\u653e\u5728\u7a97\u53e3\u7684\u5de6\u4e0a\u89d2\uff0c\u5e76\u4e14\u4f1a\u4e0d\u65ad\u7684\u7f29\u653e\uff08\u800c\u4e0d\u662f\u65cb\u8f6c\uff09\u3002\uff08 sin \u51fd\u6570\u5728\u8fd9\u91cc\u4f1a\u5f88\u6709\u7528\uff0c\u4e0d\u8fc7\u6ce8\u610f\u4f7f\u7528 sin \u51fd\u6570\u65f6\u5e94\u7528\u8d1f\u503c\u4f1a\u5bfc\u81f4\u7269\u4f53\u88ab\u7ffb\u8f6c\uff09\uff1a \u53c2\u8003\u89e3\u7b54","title":"\u53d8\u6362"},{"location":"01%20Getting%20started/07%20Transformations/#_1","text":"\u539f\u6587 Transformations \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django, Krasjet, BLumia \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u5c3d\u7ba1\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u77e5\u9053\u4e86\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u7269\u4f53\u3001\u7740\u8272\u3001\u52a0\u5165\u7eb9\u7406\uff0c\u7ed9\u5b83\u4eec\u4e00\u4e9b\u7ec6\u8282\u7684\u8868\u73b0\uff0c\u4f46\u56e0\u4e3a\u5b83\u4eec\u90fd\u8fd8\u662f\u9759\u6001\u7684\u7269\u4f53\uff0c\u4ecd\u662f\u4e0d\u591f\u6709\u8da3\u3002\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u7740\u5728\u6bcf\u4e00\u5e27\u6539\u53d8\u7269\u4f53\u7684\u9876\u70b9\u5e76\u4e14\u91cd\u914d\u7f6e\u7f13\u51b2\u533a\u4ece\u800c\u4f7f\u5b83\u4eec\u79fb\u52a8\uff0c\u4f46\u8fd9\u592a\u7e41\u7410\u4e86\uff0c\u800c\u4e14\u4f1a\u6d88\u8017\u5f88\u591a\u7684\u5904\u7406\u65f6\u95f4\u3002\u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e2a\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f7f\u7528\uff08\u591a\u4e2a\uff09 \u77e9\u9635 (Matrix)\u5bf9\u8c61\u53ef\u4ee5\u66f4\u597d\u7684 \u53d8\u6362 (Transform)\u4e00\u4e2a\u7269\u4f53\u3002\u5f53\u7136\uff0c\u8fd9\u5e76\u4e0d\u662f\u8bf4\u6211\u4eec\u4f1a\u53bb\u8ba8\u8bba\u6b66\u672f\u548c\u6570\u5b57\u865a\u62df\u4e16\u754c\uff08\u8bd1\u6ce8\uff1aMatrix\u540c\u6837\u4e5f\u662f\u7535\u5f71\u300c\u9ed1\u5ba2\u5e1d\u56fd\u300d\u7684\u82f1\u6587\u540d\uff0c\u7535\u5f71\u4e2d\u4eba\u7c7b\u751f\u6d3b\u5728\u6570\u5b57\u865a\u62df\u4e16\u754c\uff0c\u4e3b\u89d2\u4f1a\u6b66\u672f\uff09\u3002 \u77e9\u9635\u662f\u4e00\u79cd\u975e\u5e38\u6709\u7528\u7684\u6570\u5b66\u5de5\u5177\uff0c\u5c3d\u7ba1\u542c\u8d77\u6765\u53ef\u80fd\u6709\u4e9b\u5413\u4eba\uff0c\u4e0d\u8fc7\u4e00\u65e6\u4f60\u7406\u89e3\u4e86\u5b83\u4eec\u540e\uff0c\u5b83\u4eec\u4f1a\u53d8\u5f97\u975e\u5e38\u6709\u7528\u3002\u5728\u8ba8\u8bba\u77e9\u9635\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5230\u4e00\u4e9b\u6570\u5b66\u77e5\u8bc6\u3002\u5bf9\u4e8e\u4e00\u4e9b\u613f\u610f\u591a\u4e86\u89e3\u8fd9\u4e9b\u77e5\u8bc6\u7684\u8bfb\u8005\uff0c\u6211\u4f1a\u9644\u52a0\u4e00\u4e9b\u8d44\u6e90\u7ed9\u4f60\u4eec\u9605\u8bfb\u3002 \u4e3a\u4e86\u6df1\u5165\u4e86\u89e3\u53d8\u6362\uff0c\u6211\u4eec\u9996\u5148\u8981\u5728\u8ba8\u8bba\u77e9\u9635\u4e4b\u524d\u8fdb\u4e00\u6b65\u4e86\u89e3\u4e00\u4e0b\u5411\u91cf\u3002\u8fd9\u4e00\u8282\u7684\u76ee\u6807\u662f\u8ba9\u4f60\u62e5\u6709\u5c06\u6765\u9700\u8981\u7684\u6700\u57fa\u7840\u7684\u6570\u5b66\u80cc\u666f\u77e5\u8bc6\u3002\u5982\u679c\u4f60\u53d1\u73b0\u8fd9\u8282\u5341\u5206\u56f0\u96be\uff0c\u5c3d\u91cf\u5c1d\u8bd5\u53bb\u7406\u89e3\u5b83\u4eec\uff0c\u5f53\u4f60\u4ee5\u540e\u9700\u8981\u5b83\u4eec\u7684\u65f6\u5019\u56de\u8fc7\u5934\u6765\u590d\u4e60\u8fd9\u4e9b\u6982\u5ff5\u3002","title":"\u53d8\u6362"},{"location":"01%20Getting%20started/07%20Transformations/#_2","text":"\u5411\u91cf\u6700\u57fa\u672c\u7684\u5b9a\u4e49\u5c31\u662f\u4e00\u4e2a\u65b9\u5411\u3002\u6216\u8005\u66f4\u6b63\u5f0f\u7684\u8bf4\uff0c\u5411\u91cf\u6709\u4e00\u4e2a \u65b9\u5411 (Direction)\u548c \u5927\u5c0f (Magnitude\uff0c\u4e5f\u53eb\u505a\u5f3a\u5ea6\u6216\u957f\u5ea6)\u3002\u4f60\u53ef\u4ee5\u628a\u5411\u91cf\u60f3\u50cf\u6210\u4e00\u4e2a\u85cf\u5b9d\u56fe\u4e0a\u7684\u6307\u793a\uff1a\u201c\u5411\u5de6\u8d7010\u6b65\uff0c\u5411\u5317\u8d703\u6b65\uff0c\u7136\u540e\u5411\u53f3\u8d705\u6b65\u201d\uff1b\u201c\u5de6\u201d\u5c31\u662f\u65b9\u5411\uff0c\u201c10\u6b65\u201d\u5c31\u662f\u5411\u91cf\u7684\u957f\u5ea6\u3002\u90a3\u4e48\u8fd9\u4e2a\u85cf\u5b9d\u56fe\u7684\u6307\u793a\u4e00\u5171\u67093\u4e2a\u5411\u91cf\u3002\u5411\u91cf\u53ef\u4ee5\u5728\u4efb\u610f\u7ef4\u5ea6(Dimension)\u4e0a\uff0c\u4f46\u662f\u6211\u4eec\u901a\u5e38\u53ea\u4f7f\u75282\u81f34\u7ef4\u3002\u5982\u679c\u4e00\u4e2a\u5411\u91cf\u67092\u4e2a\u7ef4\u5ea6\uff0c\u5b83\u8868\u793a\u4e00\u4e2a\u5e73\u9762\u7684\u65b9\u5411(\u60f3\u8c61\u4e00\u4e0b2D\u7684\u56fe\u50cf)\uff0c\u5f53\u5b83\u67093\u4e2a\u7ef4\u5ea6\u7684\u65f6\u5019\u5b83\u53ef\u4ee5\u8868\u8fbe\u4e00\u4e2a3D\u4e16\u754c\u7684\u65b9\u5411\u3002 \u4e0b\u9762\u4f60\u4f1a\u770b\u52303\u4e2a\u5411\u91cf\uff0c\u6bcf\u4e2a\u5411\u91cf\u57282D\u56fe\u50cf\u4e2d\u90fd\u7528\u4e00\u4e2a\u7bad\u5934(x, y)\u8868\u793a\u3002\u6211\u4eec\u57282D\u56fe\u7247\u4e2d\u5c55\u793a\u8fd9\u4e9b\u5411\u91cf\uff0c\u56e0\u4e3a\u8fd9\u6837\u5b50\u4f1a\u66f4\u76f4\u89c2\u4e00\u70b9\u3002\u4f60\u53ef\u4ee5\u628a\u8fd9\u4e9b2D\u5411\u91cf\u5f53\u505az\u5750\u6807\u4e3a0\u76843D\u5411\u91cf\u3002\u7531\u4e8e\u5411\u91cf\u8868\u793a\u7684\u662f\u65b9\u5411\uff0c\u8d77\u59cb\u4e8e\u4f55\u5904\u5e76\u4e0d\u4f1a\u6539\u53d8\u5b83\u7684\u503c\u3002\u4e0b\u56fe\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5411\u91cf \\color{red}{\\bar{v}} \u548c \\color{blue}{\\bar{w}} \u662f\u76f8\u7b49\u7684\uff0c\u5c3d\u7ba1\u4ed6\u4eec\u7684\u8d77\u59cb\u70b9\u4e0d\u540c\uff1a \u6570\u5b66\u5bb6\u559c\u6b22\u5728\u5b57\u6bcd\u4e0a\u9762\u52a0\u4e00\u6a2a\u8868\u793a\u5411\u91cf\uff0c\u6bd4\u5982\u8bf4 \\bar{v} \u3002\u5f53\u7528\u5728\u516c\u5f0f\u4e2d\u65f6\u5b83\u4eec\u901a\u5e38\u662f\u8fd9\u6837\u7684\uff1a \\bar{v} = \\begin{pmatrix} \\color{red}x \\\\ \\color{green}y \\\\ \\color{blue}z \\end{pmatrix} \u7531\u4e8e\u5411\u91cf\u662f\u4e00\u4e2a\u65b9\u5411\uff0c\u6240\u4ee5\u6709\u4e9b\u65f6\u5019\u4f1a\u5f88\u96be\u5f62\u8c61\u5730\u5c06\u5b83\u4eec\u7528\u4f4d\u7f6e(Position)\u8868\u793a\u51fa\u6765\u3002\u4e3a\u4e86\u8ba9\u5176\u66f4\u4e3a\u76f4\u89c2\uff0c\u6211\u4eec\u901a\u5e38\u8bbe\u5b9a\u8fd9\u4e2a\u65b9\u5411\u7684\u539f\u70b9\u4e3a(0, 0, 0)\uff0c\u7136\u540e\u6307\u5411\u4e00\u4e2a\u65b9\u5411\uff0c\u5bf9\u5e94\u4e00\u4e2a\u70b9\uff0c\u4f7f\u5176\u53d8\u4e3a \u4f4d\u7f6e\u5411\u91cf (Position Vector)\uff08\u4f60\u4e5f\u53ef\u4ee5\u628a\u8d77\u70b9\u8bbe\u7f6e\u4e3a\u5176\u4ed6\u7684\u70b9\uff0c\u7136\u540e\u8bf4\uff1a\u8fd9\u4e2a\u5411\u91cf\u4ece\u8fd9\u4e2a\u70b9\u8d77\u59cb\u6307\u5411\u53e6\u4e00\u4e2a\u70b9\uff09\u3002\u6bd4\u5982\u8bf4\u4f4d\u7f6e\u5411\u91cf(3, 5)\u5728\u56fe\u50cf\u4e2d\u7684\u8d77\u70b9\u4f1a\u662f(0, 0)\uff0c\u5e76\u4f1a\u6307\u5411(3, 5)\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5411\u91cf\u57282D\u62163D\u7a7a\u95f4\u4e2d\u8868\u793a\u65b9\u5411 \u4e0e \u4f4d\u7f6e. \u548c\u666e\u901a\u6570\u5b57\u4e00\u6837\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u5411\u91cf\u8fdb\u884c\u591a\u79cd\u8fd0\u7b97\uff08\u5176\u4e2d\u4e00\u4e9b\u4f60\u53ef\u80fd\u5df2\u7ecf\u770b\u5230\u8fc7\u4e86\uff09\u3002","title":"\u5411\u91cf"},{"location":"01%20Getting%20started/07%20Transformations/#_3","text":"\u6807\u91cf (Scalar)\u53ea\u662f\u4e00\u4e2a\u6570\u5b57\uff08\u6216\u8005\u8bf4\u662f\u4ec5\u6709\u4e00\u4e2a\u5206\u91cf\u7684\u5411\u91cf\uff09\u3002\u5f53\u628a\u4e00\u4e2a\u5411\u91cf\u52a0/\u51cf/\u4e58/\u9664\u4e00\u4e2a\u6807\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u628a\u5411\u91cf\u7684\u6bcf\u4e2a\u5206\u91cf\u5206\u522b\u8fdb\u884c\u8be5\u8fd0\u7b97\u3002\u5bf9\u4e8e\u52a0\u6cd5\u6765\u8bf4\u4f1a\u50cf\u8fd9\u6837: \\begin{pmatrix} \\color{red}1 \\\\ \\color{green}2 \\\\ \\color{blue}3 \\end{pmatrix} + x = \\begin{pmatrix} \\color{red}1 + x \\\\ \\color{green}2 + x \\\\ \\color{blue}3 + x \\end{pmatrix} \u5176\u4e2d\u7684+\u53ef\u4ee5\u662f+\uff0c-\uff0c\u00b7\u6216\u00f7\uff0c\u5176\u4e2d\u00b7\u662f\u4e58\u53f7\u3002\u6ce8\u610f\uff0d\u548c\u00f7\u8fd0\u7b97\u65f6\u4e0d\u80fd\u98a0\u5012\uff08\u6807\u91cf-/\u00f7\u5411\u91cf\uff09\uff0c\u56e0\u4e3a\u98a0\u5012\u7684\u8fd0\u7b97\u662f\u6ca1\u6709\u5b9a\u4e49\u7684\u3002 \u8bd1\u6ce8 \u6ce8\u610f\uff0c\u6570\u5b66\u4e0a\u662f\u6ca1\u6709\u5411\u91cf\u4e0e\u6807\u91cf\u76f8\u52a0\u8fd9\u4e2a\u8fd0\u7b97\u7684\uff0c\u4f46\u662f\u5f88\u591a\u7ebf\u6027\u4ee3\u6570\u7684\u5e93\u90fd\u5bf9\u5b83\u6709\u652f\u6301\uff08\u6bd4\u5982\u8bf4\u6211\u4eec\u7528\u7684GLM\uff09\u3002\u5982\u679c\u4f60\u4f7f\u7528\u8fc7numpy\u7684\u8bdd\uff0c\u53ef\u4ee5\u628a\u5b83\u7406\u89e3\u4e3a Broadcasting \u3002","title":"\u5411\u91cf\u4e0e\u6807\u91cf\u8fd0\u7b97"},{"location":"01%20Getting%20started/07%20Transformations/#_4","text":"\u5bf9\u4e00\u4e2a\u5411\u91cf\u53d6\u53cd(Negate)\u4f1a\u5c06\u5176\u65b9\u5411\u9006\u8f6c\u3002\u4e00\u4e2a\u6307\u5411\u4e1c\u5317\u7684\u5411\u91cf\u53d6\u53cd\u540e\u5c31\u6307\u5411\u897f\u5357\u65b9\u5411\u4e86\u3002\u6211\u4eec\u5728\u4e00\u4e2a\u5411\u91cf\u7684\u6bcf\u4e2a\u5206\u91cf\u524d\u52a0\u8d1f\u53f7\u5c31\u53ef\u4ee5\u5b9e\u73b0\u53d6\u53cd\u4e86\uff08\u6216\u8005\u8bf4\u7528-1\u6570\u4e58\u8be5\u5411\u91cf\uff09: -\\bar{v} = -\\begin{pmatrix} \\color{red}{v_x} \\\\ \\color{blue}{v_y} \\\\ \\color{green}{v_z} \\end{pmatrix} = \\begin{pmatrix} -\\color{red}{v_x} \\\\ -\\color{blue}{v_y} \\\\ -\\color{green}{v_z} \\end{pmatrix}","title":"\u5411\u91cf\u53d6\u53cd"},{"location":"01%20Getting%20started/07%20Transformations/#_5","text":"\u5411\u91cf\u7684\u52a0\u6cd5\u53ef\u4ee5\u88ab\u5b9a\u4e49\u4e3a\u662f \u5206\u91cf\u7684 (Component-wise)\u76f8\u52a0\uff0c\u5373\u5c06\u4e00\u4e2a\u5411\u91cf\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5206\u91cf\u52a0\u4e0a\u53e6\u4e00\u4e2a\u5411\u91cf\u7684\u5bf9\u5e94\u5206\u91cf\uff1a \\bar{v} = \\begin{pmatrix} \\color{red}1 \\\\ \\color{green}2 \\\\ \\color{blue}3 \\end{pmatrix}, \\bar{k} = \\begin{pmatrix} \\color{red}4 \\\\ \\color{green}5 \\\\ \\color{blue}6 \\end{pmatrix} \\rightarrow \\bar{v} + \\bar{k} = \\begin{pmatrix} \\color{red}1 + \\color{red}4 \\\\ \\color{green}2 + \\color{green}5 \\\\ \\color{blue}3 + \\color{blue}6 \\end{pmatrix} = \\begin{pmatrix} \\color{red}5 \\\\ \\color{green}7 \\\\ \\color{blue}9 \\end{pmatrix} \u5411\u91cf v = (4, 2) \u548c k = (1, 2) \u53ef\u4ee5\u76f4\u89c2\u5730\u8868\u793a\u4e3a\uff1a \u5c31\u50cf\u666e\u901a\u6570\u5b57\u7684\u52a0\u51cf\u4e00\u6837\uff0c\u5411\u91cf\u7684\u51cf\u6cd5\u7b49\u4e8e\u52a0\u4e0a\u7b2c\u4e8c\u4e2a\u5411\u91cf\u7684\u76f8\u53cd\u5411\u91cf\uff1a \\bar{v} = \\begin{pmatrix} \\color{red}1 \\\\ \\color{green}2 \\\\ \\color{blue}3 \\end{pmatrix}, \\bar{k} = \\begin{pmatrix} \\color{red}4 \\\\ \\color{green}5 \\\\ \\color{blue}6 \\end{pmatrix} \\rightarrow \\bar{v} + -\\bar{k} = \\begin{pmatrix} \\color{red}1 + (-\\color{red}{4}) \\\\ \\color{green}2 + (-\\color{green}{5}) \\\\ \\color{blue}3 + (-\\color{blue}{6}) \\end{pmatrix} = \\begin{pmatrix} -\\color{red}{3} \\\\ -\\color{green}{3} \\\\ -\\color{blue}{3} \\end{pmatrix} \u4e24\u4e2a\u5411\u91cf\u7684\u76f8\u51cf\u4f1a\u5f97\u5230\u8fd9\u4e24\u4e2a\u5411\u91cf\u6307\u5411\u4f4d\u7f6e\u7684\u5dee\u3002\u8fd9\u5728\u6211\u4eec\u60f3\u8981\u83b7\u53d6\u4e24\u70b9\u7684\u5dee\u4f1a\u975e\u5e38\u6709\u7528\u3002","title":"\u5411\u91cf\u52a0\u51cf"},{"location":"01%20Getting%20started/07%20Transformations/#_6","text":"\u6211\u4eec\u4f7f\u7528 \u52fe\u80a1\u5b9a\u7406 (Pythagoras Theorem)\u6765\u83b7\u53d6\u5411\u91cf\u7684\u957f\u5ea6(Length)/\u5927\u5c0f(Magnitude)\u3002\u5982\u679c\u4f60\u628a\u5411\u91cf\u7684x\u4e0ey\u5206\u91cf\u753b\u51fa\u6765\uff0c\u8be5\u5411\u91cf\u4f1a\u548cx\u4e0ey\u5206\u91cf\u4e3a\u8fb9\u5f62\u6210\u4e00\u4e2a\u4e09\u89d2\u5f62: \u56e0\u4e3a\u4e24\u6761\u8fb9\uff08x\u548cy\uff09\u662f\u5df2\u77e5\u7684\uff0c\u5982\u679c\u5e0c\u671b\u77e5\u9053\u659c\u8fb9 \\color{red}{\\bar{v}} \u7684\u957f\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u52fe\u80a1\u5b9a\u7406\u6765\u8ba1\u7b97\uff1a ||\\color{red}{\\bar{v}}|| = \\sqrt{\\color{green}x^2 + \\color{blue}y^2} ||\\color{red}{\\bar{v}}|| \u8868\u793a\u5411\u91cf \\color{red}{\\bar{v}} \u7684\u957f\u5ea6\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u52a0\u4e0a z^2 \u628a\u8fd9\u4e2a\u516c\u5f0f\u62d3\u5c55\u5230\u4e09\u7ef4\u7a7a\u95f4\u3002 \u4f8b\u5b50\u4e2d\u5411\u91cf(4, 2)\u7684\u957f\u5ea6\u7b49\u4e8e\uff1a ||\\color{red}{\\bar{v}}|| = \\sqrt{\\color{green}4^2 + \\color{blue}2^2} = \\sqrt{\\color{green}16 + \\color{blue}4} = \\sqrt{20} = 4.47 \u7ed3\u679c\u662f4.47\u3002 \u6709\u4e00\u4e2a\u7279\u6b8a\u7c7b\u578b\u7684\u5411\u91cf\u53eb\u505a \u5355\u4f4d\u5411\u91cf (Unit Vector)\u3002\u5355\u4f4d\u5411\u91cf\u6709\u4e00\u4e2a\u7279\u522b\u7684\u6027\u8d28\u2014\u2014\u5b83\u7684\u957f\u5ea6\u662f1\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4efb\u610f\u5411\u91cf\u7684\u6bcf\u4e2a\u5206\u91cf\u9664\u4ee5\u5411\u91cf\u7684\u957f\u5ea6\u5f97\u5230\u5b83\u7684\u5355\u4f4d\u5411\u91cf \\hat{n} \uff1a \\hat{n} = \\frac{\\bar{v}}{||\\bar{v}||} \u6211\u4eec\u628a\u8fd9\u79cd\u65b9\u6cd5\u53eb\u505a\u4e00\u4e2a\u5411\u91cf\u7684 \u6807\u51c6\u5316 (Normalizing)\u3002\u5355\u4f4d\u5411\u91cf\u5934\u4e0a\u6709\u4e00\u4e2a^\u6837\u5b50\u7684\u8bb0\u53f7\u3002\u901a\u5e38\u5355\u4f4d\u5411\u91cf\u4f1a\u53d8\u5f97\u5f88\u6709\u7528\uff0c\u7279\u522b\u662f\u5728\u6211\u4eec\u53ea\u5173\u5fc3\u65b9\u5411\u4e0d\u5173\u5fc3\u957f\u5ea6\u7684\u65f6\u5019\uff08\u5982\u679c\u6539\u53d8\u5411\u91cf\u7684\u957f\u5ea6\uff0c\u5b83\u7684\u65b9\u5411\u5e76\u4e0d\u4f1a\u6539\u53d8\uff09\u3002","title":"\u957f\u5ea6"},{"location":"01%20Getting%20started/07%20Transformations/#_7","text":"\u4e24\u4e2a\u5411\u91cf\u76f8\u4e58\u662f\u4e00\u79cd\u5f88\u5947\u602a\u7684\u60c5\u51b5\u3002\u666e\u901a\u7684\u4e58\u6cd5\u5728\u5411\u91cf\u4e0a\u662f\u6ca1\u6709\u5b9a\u4e49\u7684\uff0c\u56e0\u4e3a\u5b83\u5728\u89c6\u89c9\u4e0a\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u4f46\u662f\u5728\u76f8\u4e58\u7684\u65f6\u5019\u6211\u4eec\u6709\u4e24\u79cd\u7279\u5b9a\u60c5\u51b5\u53ef\u4ee5\u9009\u62e9\uff1a\u4e00\u4e2a\u662f \u70b9\u4e58 (Dot Product)\uff0c\u8bb0\u4f5c \\bar{v} \\cdot \\bar{k} \uff0c\u53e6\u4e00\u4e2a\u662f \u53c9\u4e58 (Cross Product)\uff0c\u8bb0\u4f5c \\bar{v} \\times \\bar{k} \u3002","title":"\u5411\u91cf\u76f8\u4e58"},{"location":"01%20Getting%20started/07%20Transformations/#_8","text":"\u4e24\u4e2a\u5411\u91cf\u7684\u70b9\u4e58\u7b49\u4e8e\u5b83\u4eec\u7684\u6570\u4e58\u7ed3\u679c\u4e58\u4ee5\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u5939\u89d2\u7684\u4f59\u5f26\u503c\u3002\u53ef\u80fd\u542c\u8d77\u6765\u6709\u70b9\u8d39\u89e3\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u516c\u5f0f\uff1a \\bar{v} \\cdot \\bar{k} = ||\\bar{v}|| \\cdot ||\\bar{k}|| \\cdot \\cos \\theta \u5b83\u4eec\u4e4b\u95f4\u7684\u5939\u89d2\u8bb0\u4f5c \\theta \u3002\u4e3a\u4ec0\u4e48\u8fd9\u5f88\u6709\u7528\uff1f\u60f3\u8c61\u5982\u679c \\bar{v} \u548c \\bar{k} \u90fd\u662f\u5355\u4f4d\u5411\u91cf\uff0c\u5b83\u4eec\u7684\u957f\u5ea6\u4f1a\u7b49\u4e8e1\u3002\u8fd9\u6837\u516c\u5f0f\u4f1a\u6709\u6548\u7b80\u5316\u6210\uff1a \\bar{v} \\cdot \\bar{k} = 1 \\cdot 1 \\cdot \\cos \\theta = \\cos \\theta \u73b0\u5728\u70b9\u79ef \u53ea \u5b9a\u4e49\u4e86\u4e24\u4e2a\u5411\u91cf\u7684\u5939\u89d2\u3002\u4f60\u4e5f\u8bb8\u8bb0\u5f9790\u5ea6\u7684\u4f59\u5f26\u503c\u662f0\uff0c0\u5ea6\u7684\u4f59\u5f26\u503c\u662f1\u3002\u4f7f\u7528\u70b9\u4e58\u53ef\u4ee5\u5f88\u5bb9\u6613\u6d4b\u8bd5\u4e24\u4e2a\u5411\u91cf\u662f\u5426 \u6b63\u4ea4 (Orthogonal)\u6216\u5e73\u884c\uff08\u6b63\u4ea4\u610f\u5473\u7740\u4e24\u4e2a\u5411\u91cf\u4e92\u4e3a \u76f4\u89d2 \uff09\u3002\u5982\u679c\u4f60\u60f3\u8981\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u6b63\u5f26\u6216\u4f59\u5f26\u51fd\u6570\u7684\u77e5\u8bc6\uff0c\u6211\u63a8\u8350\u4f60\u770b \u53ef\u6c57\u5b66\u9662 \u7684\u57fa\u7840\u4e09\u89d2\u5b66\u89c6\u9891\u3002 Important \u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u70b9\u4e58\u7684\u7ed3\u679c\u8ba1\u7b97\u4e24\u4e2a\u975e\u5355\u4f4d\u5411\u91cf\u7684\u5939\u89d2\uff0c\u70b9\u4e58\u7684\u7ed3\u679c\u9664\u4ee5\u4e24\u4e2a\u5411\u91cf\u7684\u957f\u5ea6\u4e4b\u79ef\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u5c31\u662f\u5939\u89d2\u7684\u4f59\u5f26\u503c\uff0c\u5373 cos \\theta \u3002 \u8bd1\u6ce8\uff1a\u901a\u8fc7\u4e0a\u9762\u70b9\u4e58\u5b9a\u4e49\u5f0f\u53ef\u63a8\u51fa\uff1a \\cos \\theta = \\frac{\\bar{v} \\cdot \\bar{k}}{||\\bar{v}|| \\cdot ||\\bar{k}||} \u6240\u4ee5\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u8ba1\u7b97\u70b9\u4e58\u5462\uff1f\u70b9\u4e58\u662f\u901a\u8fc7\u5c06\u5bf9\u5e94\u5206\u91cf\u9010\u4e2a\u76f8\u4e58\uff0c\u7136\u540e\u518d\u628a\u6240\u5f97\u79ef\u76f8\u52a0\u6765\u8ba1\u7b97\u7684\u3002\u4e24\u4e2a\u5355\u4f4d\u5411\u91cf\u7684\uff08\u4f60\u53ef\u4ee5\u9a8c\u8bc1\u5b83\u4eec\u7684\u957f\u5ea6\u90fd\u4e3a1\uff09\u70b9\u4e58\u4f1a\u50cf\u662f\u8fd9\u6837\uff1a \\begin{pmatrix} \\color{red}{0.6} \\\\ -\\color{green}{0.8} \\\\ \\color{blue}0 \\end{pmatrix} \\cdot \\begin{pmatrix} \\color{red}0 \\\\ \\color{green}1 \\\\ \\color{blue}0 \\end{pmatrix} = (\\color{red}{0.6} * \\color{red}0) + (-\\color{green}{0.8} * \\color{green}1) + (\\color{blue}0 * \\color{blue}0) = -0.8 \u8981\u8ba1\u7b97\u4e24\u4e2a\u5355\u4f4d\u5411\u91cf\u95f4\u7684\u5939\u89d2\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u53cd\u4f59\u5f26\u51fd\u6570 cos^{-1} \uff0c\u53ef\u5f97\u7ed3\u679c\u662f143.1\u5ea6\u3002\u73b0\u5728\u6211\u4eec\u5f88\u5feb\u5c31\u8ba1\u7b97\u51fa\u4e86\u8fd9\u4e24\u4e2a\u5411\u91cf\u7684\u5939\u89d2\u3002\u70b9\u4e58\u4f1a\u5728\u8ba1\u7b97\u5149\u7167\u7684\u65f6\u5019\u975e\u5e38\u6709\u7528\u3002","title":"\u70b9\u4e58"},{"location":"01%20Getting%20started/07%20Transformations/#_9","text":"\u53c9\u4e58\u53ea\u57283D\u7a7a\u95f4\u4e2d\u6709\u5b9a\u4e49\uff0c\u5b83\u9700\u8981\u4e24\u4e2a\u4e0d\u5e73\u884c\u5411\u91cf\u4f5c\u4e3a\u8f93\u5165\uff0c\u751f\u6210\u4e00\u4e2a\u6b63\u4ea4\u4e8e\u4e24\u4e2a\u8f93\u5165\u5411\u91cf\u7684\u7b2c\u4e09\u4e2a\u5411\u91cf\u3002\u5982\u679c\u8f93\u5165\u7684\u4e24\u4e2a\u5411\u91cf\u4e5f\u662f\u6b63\u4ea4\u7684\uff0c\u90a3\u4e48\u53c9\u4e58\u4e4b\u540e\u5c06\u4f1a\u4ea7\u751f3\u4e2a\u4e92\u76f8\u6b63\u4ea4\u7684\u5411\u91cf\u3002\u63a5\u4e0b\u6765\u7684\u6559\u7a0b\u4e2d\u8fd9\u4f1a\u975e\u5e38\u6709\u7528\u3002\u4e0b\u9762\u7684\u56fe\u7247\u5c55\u793a\u4e863D\u7a7a\u95f4\u4e2d\u53c9\u4e58\u7684\u6837\u5b50\uff1a \u4e0d\u540c\u4e8e\u5176\u4ed6\u8fd0\u7b97\uff0c\u5982\u679c\u4f60\u6ca1\u6709\u94bb\u7814\u8fc7\u7ebf\u6027\u4ee3\u6570\uff0c\u53ef\u80fd\u4f1a\u89c9\u5f97\u53c9\u4e58\u5f88\u53cd\u76f4\u89c9\uff0c\u6240\u4ee5\u53ea\u8bb0\u4f4f\u516c\u5f0f\u5c31\u6ca1\u95ee\u9898\u5566\uff08\u8bb0\u4e0d\u4f4f\u4e5f\u6ca1\u95ee\u9898\uff09\u3002\u4e0b\u9762\u4f60\u4f1a\u770b\u5230\u4e24\u4e2a\u6b63\u4ea4\u5411\u91cfA\u548cB\u53c9\u79ef\uff1a \\begin{pmatrix} \\color{red}{A_{x}} \\\\ \\color{green}{A_{y}} \\\\ \\color{blue}{A_{z}} \\end{pmatrix} \\times \\begin{pmatrix} \\color{red}{B_{x}} \\\\ \\color{green}{B_{y}} \\\\ \\color{blue}{B_{z}} \\end{pmatrix} = \\begin{pmatrix} \\color{green}{A_{y}} \\cdot \\color{blue}{B_{z}} - \\color{blue}{A_{z}} \\cdot \\color{green}{B_{y}} \\\\ \\color{blue}{A_{z}} \\cdot \\color{red}{B_{x}} - \\color{red}{A_{x}} \\cdot \\color{blue}{B_{z}} \\\\ \\color{red}{A_{x}} \\cdot \\color{green}{B_{y}} - \\color{green}{A_{y}} \\cdot \\color{red}{B_{x}} \\end{pmatrix} \u662f\u4e0d\u662f\u770b\u8d77\u6765\u6beb\u65e0\u5934\u7eea\uff1f\u4e0d\u8fc7\u53ea\u8981\u4f60\u6309\u7167\u6b65\u9aa4\u6765\u4e86\uff0c\u4f60\u5c31\u80fd\u5f97\u5230\u4e00\u4e2a\u6b63\u4ea4\u4e8e\u4e24\u4e2a\u8f93\u5165\u5411\u91cf\u7684\u7b2c\u4e09\u4e2a\u5411\u91cf\u3002","title":"\u53c9\u4e58"},{"location":"01%20Getting%20started/07%20Transformations/#_10","text":"\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u8ba8\u8bba\u4e86\u5411\u91cf\u7684\u5168\u90e8\u5185\u5bb9\uff0c\u662f\u65f6\u5019\u770b\u770b\u77e9\u9635\u4e86\uff01\u7b80\u5355\u6765\u8bf4\u77e9\u9635\u5c31\u662f\u4e00\u4e2a\u77e9\u5f62\u7684\u6570\u5b57\u3001\u7b26\u53f7\u6216\u8868\u8fbe\u5f0f\u6570\u7ec4\u3002\u77e9\u9635\u4e2d\u6bcf\u4e00\u9879\u53eb\u505a\u77e9\u9635\u7684 \u5143\u7d20 (Element)\u3002\u4e0b\u9762\u662f\u4e00\u4e2a2\u00d73\u77e9\u9635\u7684\u4f8b\u5b50\uff1a \\begin{bmatrix} 1 & 2 & 3 \\\\ 4 & 5 & 6 \\end{bmatrix} \u77e9\u9635\u53ef\u4ee5\u901a\u8fc7(i, j)\u8fdb\u884c\u7d22\u5f15\uff0ci\u662f\u884c\uff0cj\u662f\u5217\uff0c\u8fd9\u5c31\u662f\u4e0a\u9762\u7684\u77e9\u9635\u53eb\u505a2\u00d73\u77e9\u9635\u7684\u539f\u56e0\uff083\u52172\u884c\uff0c\u4e5f\u53eb\u505a\u77e9\u9635\u7684 \u7ef4\u5ea6 (Dimension)\uff09\u3002\u8fd9\u4e0e\u4f60\u5728\u7d22\u5f152D\u56fe\u50cf\u65f6\u7684(x, y)\u76f8\u53cd\uff0c\u83b7\u53d64\u7684\u7d22\u5f15\u662f(2, 1)\uff08\u7b2c\u4e8c\u884c\uff0c\u7b2c\u4e00\u5217\uff09\uff08\u8bd1\u6ce8\uff1a\u5982\u679c\u662f\u56fe\u50cf\u7d22\u5f15\u5e94\u8be5\u662f(1, 2)\uff0c\u5148\u7b97\u5217\uff0c\u518d\u7b97\u884c\uff09\u3002 \u77e9\u9635\u57fa\u672c\u4e5f\u5c31\u662f\u8fd9\u4e9b\u4e86\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u77e9\u5f62\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u9635\u5217\u3002\u548c\u5411\u91cf\u4e00\u6837\uff0c\u77e9\u9635\u4e5f\u6709\u975e\u5e38\u6f02\u4eae\u7684\u6570\u5b66\u5c5e\u6027\u3002\u77e9\u9635\u6709\u51e0\u4e2a\u8fd0\u7b97\uff0c\u5206\u522b\u662f\uff1a\u77e9\u9635\u52a0\u6cd5\u3001\u51cf\u6cd5\u548c\u4e58\u6cd5\u3002","title":"\u77e9\u9635"},{"location":"01%20Getting%20started/07%20Transformations/#_11","text":"\u77e9\u9635\u4e0e\u6807\u91cf\u4e4b\u95f4\u7684\u52a0\u51cf\u5b9a\u4e49\u5982\u4e0b\uff1a \\begin{bmatrix} 1 & 2 \\\\ 3 & 4 \\end{bmatrix} + \\color{green}3 = \\begin{bmatrix} 1 + \\color{green}3 & 2 + \\color{green}3 \\\\ 3 + \\color{green}3 & 4 + \\color{green}3 \\end{bmatrix} = \\begin{bmatrix} 4 & 5 \\\\ 6 & 7 \\end{bmatrix} \u6807\u91cf\u503c\u8981\u52a0\u5230\u77e9\u9635\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e0a\u3002\u77e9\u9635\u4e0e\u6807\u91cf\u7684\u51cf\u6cd5\u4e5f\u76f8\u4f3c\uff1a \\begin{bmatrix} 1 & 2 \\\\ 3 & 4 \\end{bmatrix} - \\color{green}3 = \\begin{bmatrix} 1 - \\color{green}3 & 2 - \\color{green}3 \\\\ 3 - \\color{green}3 & 4 - \\color{green}3 \\end{bmatrix} = \\begin{bmatrix} -2 & -1 \\\\ 0 & 1 \\end{bmatrix} \u8bd1\u6ce8 \u6ce8\u610f\uff0c\u6570\u5b66\u4e0a\u662f\u6ca1\u6709\u77e9\u9635\u4e0e\u6807\u91cf\u76f8\u52a0\u51cf\u7684\u8fd0\u7b97\u7684\uff0c\u4f46\u662f\u5f88\u591a\u7ebf\u6027\u4ee3\u6570\u7684\u5e93\u90fd\u5bf9\u5b83\u6709\u652f\u6301\uff08\u6bd4\u5982\u8bf4\u6211\u4eec\u7528\u7684GLM\uff09\u3002\u5982\u679c\u4f60\u4f7f\u7528\u8fc7numpy\u7684\u8bdd\uff0c\u53ef\u4ee5\u628a\u5b83\u7406\u89e3\u4e3a Broadcasting \u3002 \u77e9\u9635\u4e0e\u77e9\u9635\u4e4b\u95f4\u7684\u52a0\u51cf\u5c31\u662f\u4e24\u4e2a\u77e9\u9635\u5bf9\u5e94\u5143\u7d20\u7684\u52a0\u51cf\u8fd0\u7b97\uff0c\u6240\u4ee5\u603b\u4f53\u7684\u89c4\u5219\u548c\u4e0e\u6807\u91cf\u8fd0\u7b97\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u53ea\u4e0d\u8fc7\u5728\u76f8\u540c\u7d22\u5f15\u4e0b\u7684\u5143\u7d20\u624d\u80fd\u8fdb\u884c\u8fd0\u7b97\u3002\u8fd9\u4e5f\u5c31\u662f\u8bf4\u52a0\u6cd5\u548c\u51cf\u6cd5\u53ea\u5bf9\u540c\u7ef4\u5ea6\u7684\u77e9\u9635\u624d\u662f\u6709\u5b9a\u4e49\u7684\u3002\u4e00\u4e2a3\u00d72\u77e9\u9635\u548c\u4e00\u4e2a2\u00d73\u77e9\u9635\uff08\u6216\u4e00\u4e2a3\u00d73\u77e9\u9635\u4e0e4\u00d74\u77e9\u9635\uff09\u662f\u4e0d\u80fd\u8fdb\u884c\u52a0\u51cf\u7684\u3002\u6211\u4eec\u770b\u770b\u4e24\u4e2a2\u00d72\u77e9\u9635\u662f\u600e\u6837\u76f8\u52a0\u7684\uff1a \\begin{bmatrix} \\color{red}1 & \\color{red}2 \\\\ \\color{green}3 & \\color{green}4 \\end{bmatrix} + \\begin{bmatrix} \\color{red}5 & \\color{red}6 \\\\ \\color{green}7 & \\color{green}8 \\end{bmatrix} = \\begin{bmatrix} \\color{red}1 + \\color{red}5 & \\color{red}2 + \\color{red}6 \\\\ \\color{green}3 + \\color{green}7 & \\color{green}4 + \\color{green}8 \\end{bmatrix} = \\begin{bmatrix} \\color{red}6 & \\color{red}8 \\\\ \\color{green}{10} & \\color{green}{12} \\end{bmatrix} \u540c\u6837\u7684\u6cd5\u5219\u4e5f\u9002\u7528\u4e8e\u51cf\u6cd5\uff1a \\begin{bmatrix} \\color{red}4 & \\color{red}2 \\\\ \\color{green}1 & \\color{green}6 \\end{bmatrix} - \\begin{bmatrix} \\color{red}2 & \\color{red}4 \\\\ \\color{green}0 & \\color{green}1 \\end{bmatrix} = \\begin{bmatrix} \\color{red}4 - \\color{red}2 & \\color{red}2 - \\color{red}4 \\\\ \\color{green}1 - \\color{green}0 & \\color{green}6 - \\color{green}1 \\end{bmatrix} = \\begin{bmatrix} \\color{red}2 & -\\color{red}2 \\\\ \\color{green}1 & \\color{green}5 \\end{bmatrix}","title":"\u77e9\u9635\u7684\u52a0\u51cf"},{"location":"01%20Getting%20started/07%20Transformations/#_12","text":"\u548c\u77e9\u9635\u4e0e\u6807\u91cf\u7684\u52a0\u51cf\u4e00\u6837\uff0c\u77e9\u9635\u4e0e\u6807\u91cf\u4e4b\u95f4\u7684\u4e58\u6cd5\u4e5f\u662f\u77e9\u9635\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u5206\u522b\u4e58\u4ee5\u8be5\u6807\u91cf\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u5c55\u793a\u4e86\u4e58\u6cd5\u7684\u8fc7\u7a0b\uff1a \\color{green}2 \\cdot \\begin{bmatrix} 1 & 2 \\\\ 3 & 4 \\end{bmatrix} = \\begin{bmatrix} \\color{green}2 \\cdot 1 & \\color{green}2 \\cdot 2 \\\\ \\color{green}2 \\cdot 3 & \\color{green}2 \\cdot 4 \\end{bmatrix} = \\begin{bmatrix} 2 & 4 \\\\ 6 & 8 \\end{bmatrix} \u73b0\u5728\u6211\u4eec\u4e5f\u5c31\u80fd\u660e\u767d\u4e3a\u4ec0\u4e48\u8fd9\u4e9b\u5355\u72ec\u7684\u6570\u5b57\u8981\u53eb\u505a\u6807\u91cf(Scalar)\u4e86\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u6807\u91cf\u5c31\u662f\u7528\u5b83\u7684\u503c \u7f29\u653e (Scale)\u77e9\u9635\u7684\u6240\u6709\u5143\u7d20\uff08\u8bd1\u6ce8\uff1a\u6ce8\u610fScalar\u662f\u7531Scale + -ar\u6f14\u53d8\u8fc7\u6765\u7684\uff09\u3002\u524d\u9762\u90a3\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6240\u6709\u7684\u5143\u7d20\u90fd\u88ab\u653e\u5927\u4e862\u500d\u3002 \u5230\u76ee\u524d\u4e3a\u6b62\u90fd\u8fd8\u597d\uff0c\u6211\u4eec\u7684\u4f8b\u5b50\u90fd\u4e0d\u590d\u6742\u3002\u4e0d\u8fc7\u77e9\u9635\u4e0e\u77e9\u9635\u7684\u4e58\u6cd5\u5c31\u4e0d\u4e00\u6837\u4e86\u3002","title":"\u77e9\u9635\u7684\u6570\u4e58"},{"location":"01%20Getting%20started/07%20Transformations/#_13","text":"\u77e9\u9635\u4e4b\u95f4\u7684\u4e58\u6cd5\u4e0d\u89c1\u5f97\u6709\u591a\u590d\u6742\uff0c\u4f46\u7684\u786e\u5f88\u96be\u8ba9\u4eba\u9002\u5e94\u3002\u77e9\u9635\u4e58\u6cd5\u57fa\u672c\u4e0a\u610f\u5473\u7740\u9075\u7167\u89c4\u5b9a\u597d\u7684\u6cd5\u5219\u8fdb\u884c\u76f8\u4e58\u3002\u5f53\u7136\uff0c\u76f8\u4e58\u8fd8\u6709\u4e00\u4e9b\u9650\u5236\uff1a \u53ea\u6709\u5f53\u5de6\u4fa7\u77e9\u9635\u7684\u5217\u6570\u4e0e\u53f3\u4fa7\u77e9\u9635\u7684\u884c\u6570\u76f8\u7b49\uff0c\u4e24\u4e2a\u77e9\u9635\u624d\u80fd\u76f8\u4e58\u3002 \u77e9\u9635\u76f8\u4e58\u4e0d\u9075\u5b88 \u4ea4\u6362\u5f8b (Commutative)\uff0c\u4e5f\u5c31\u662f\u8bf4 A \\cdot B \\neq B \\cdot A \u3002 \u6211\u4eec\u5148\u770b\u4e00\u4e2a\u4e24\u4e2a2\u00d72\u77e9\u9635\u76f8\u4e58\u7684\u4f8b\u5b50\uff1a \\begin{bmatrix} \\color{red}1 & \\color{red}2 \\\\ \\color{green}3 & \\color{green}4 \\end{bmatrix} \\cdot \\begin{bmatrix} \\color{blue}5 & \\color{purple}6 \\\\ \\color{blue}7 & \\color{purple}8 \\end{bmatrix} = \\begin{bmatrix} \\color{red}1 \\cdot \\color{blue}5 + \\color{red}2 \\cdot \\color{blue}7 & \\color{red}1 \\cdot \\color{purple}6 + \\color{red}2 \\cdot \\color{purple}8 \\\\ \\color{green}3 \\cdot \\color{blue}5 + \\color{green}4 \\cdot \\color{blue}7 & \\color{green}3 \\cdot \\color{purple}6 + \\color{green}4 \\cdot \\color{purple}8 \\end{bmatrix} = \\begin{bmatrix} 19 & 22 \\\\ 43 & 50 \\end{bmatrix} \u73b0\u5728\u4f60\u53ef\u80fd\u4f1a\u5728\u60f3\u4e86\uff1a\u5929\u54ea\uff0c\u521a\u521a\u5230\u5e95\u53d1\u751f\u4e86\u4ec0\u4e48? \u77e9\u9635\u7684\u4e58\u6cd5\u662f\u4e00\u7cfb\u5217\u4e58\u6cd5\u548c\u52a0\u6cd5\u7ec4\u5408\u7684\u7ed3\u679c\uff0c\u5b83\u4f7f\u7528\u5230\u4e86\u5de6\u4fa7\u77e9\u9635\u7684\u884c\u548c\u53f3\u4fa7\u77e9\u9635\u7684\u5217\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u4e0b\u9762\u7684\u56fe\u7247\uff1a \u6211\u4eec\u9996\u5148\u628a\u5de6\u4fa7\u77e9\u9635\u7684\u884c\u548c\u53f3\u4fa7\u77e9\u9635\u7684\u5217\u62ff\u51fa\u6765\u3002\u8fd9\u4e9b\u6311\u51fa\u6765\u884c\u548c\u5217\u5c06\u51b3\u5b9a\u6211\u4eec\u8be5\u8ba1\u7b97\u7ed3\u679c2x2\u77e9\u9635\u7684\u54ea\u4e2a\u8f93\u51fa\u503c\u3002\u5982\u679c\u53d6\u7684\u662f\u5de6\u77e9\u9635\u7684\u7b2c\u4e00\u884c\uff0c\u8f93\u51fa\u503c\u5c31\u4f1a\u51fa\u73b0\u5728\u7ed3\u679c\u77e9\u9635\u7684\u7b2c\u4e00\u884c\u3002\u63a5\u4e0b\u6765\u518d\u53d6\u4e00\u5217\uff0c\u5982\u679c\u6211\u4eec\u53d6\u7684\u662f\u53f3\u77e9\u9635\u7684\u7b2c\u4e00\u5217\uff0c\u6700\u7ec8\u503c\u5219\u4f1a\u51fa\u73b0\u5728\u7ed3\u679c\u77e9\u9635\u7684\u7b2c\u4e00\u5217\u3002\u8fd9\u6b63\u662f\u7ea2\u6846\u91cc\u7684\u60c5\u51b5\u3002\u5982\u679c\u60f3\u8ba1\u7b97\u7ed3\u679c\u77e9\u9635\u53f3\u4e0b\u89d2\u7684\u503c\uff0c\u6211\u4eec\u8981\u7528\u7b2c\u4e00\u4e2a\u77e9\u9635\u7684\u7b2c\u4e8c\u884c\u548c\u7b2c\u4e8c\u4e2a\u77e9\u9635\u7684\u7b2c\u4e8c\u5217\uff08\u8bd1\u6ce8\uff1a\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u7ed3\u679c\u77e9\u9635\u7684\u5143\u7d20\u7684\u884c\u53d6\u51b3\u4e8e\u7b2c\u4e00\u4e2a\u77e9\u9635\uff0c\u5217\u53d6\u51b3\u4e8e\u7b2c\u4e8c\u4e2a\u77e9\u9635\uff09\u3002 \u8ba1\u7b97\u4e00\u9879\u7684\u7ed3\u679c\u503c\u7684\u65b9\u5f0f\u662f\u5148\u8ba1\u7b97\u5de6\u4fa7\u77e9\u9635\u5bf9\u5e94\u884c\u548c\u53f3\u4fa7\u77e9\u9635\u5bf9\u5e94\u5217\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e4b\u79ef\uff0c\u7136\u540e\u662f\u7b2c\u4e8c\u4e2a\uff0c\u7b2c\u4e09\u4e2a\uff0c\u7b2c\u56db\u4e2a\u7b49\u7b49\uff0c\u7136\u540e\u628a\u6240\u6709\u7684\u4e58\u79ef\u76f8\u52a0\uff0c\u8fd9\u5c31\u662f\u7ed3\u679c\u4e86\u3002\u73b0\u5728\u6211\u4eec\u5c31\u80fd\u89e3\u91ca\u4e3a\u4ec0\u4e48\u5de6\u4fa7\u77e9\u9635\u7684\u5217\u6570\u5fc5\u987b\u548c\u53f3\u4fa7\u77e9\u9635\u7684\u884c\u6570\u76f8\u7b49\u4e86\uff0c\u5982\u679c\u4e0d\u76f8\u7b49\u8fd9\u4e00\u6b65\u7684\u8fd0\u7b97\u5c31\u65e0\u6cd5\u5b8c\u6210\u4e86\uff01 \u7ed3\u679c\u77e9\u9635\u7684\u7ef4\u5ea6\u662f(n, m)\uff0cn\u7b49\u4e8e\u5de6\u4fa7\u77e9\u9635\u7684\u884c\u6570\uff0cm\u7b49\u4e8e\u53f3\u4fa7\u77e9\u9635\u7684\u5217\u6570\u3002 \u5982\u679c\u5728\u8111\u5b50\u91cc\u60f3\u8c61\u51fa\u8fd9\u4e00\u4e58\u6cd5\u6709\u4e9b\u56f0\u96be\uff0c\u522b\u62c5\u5fc3\u3002\u4e0d\u65ad\u5730\u52a8\u624b\u8ba1\u7b97\uff0c\u5982\u679c\u9047\u5230\u56f0\u96be\u518d\u56de\u5934\u770b\u8fd9\u9875\u7684\u5185\u5bb9\u3002\u968f\u7740\u65f6\u95f4\u6d41\u901d\uff0c\u77e9\u9635\u4e58\u6cd5\u5bf9\u4f60\u6765\u8bf4\u4f1a\u53d8\u6210\u5f88\u81ea\u7136\u7684\u4e8b\u3002 \u6211\u4eec\u7528\u4e00\u4e2a\u66f4\u5927\u7684\u4f8b\u5b50\u6765\u7ed3\u675f\u5bf9\u77e9\u9635\u76f8\u4e58\u7684\u8ba8\u8bba\u3002\u8bd5\u7740\u4f7f\u7528\u989c\u8272\u6765\u5bfb\u627e\u89c4\u5f8b\u3002\u4f5c\u4e3a\u4e00\u4e2a\u6709\u7528\u7684\u7ec3\u4e60\uff0c\u4f60\u53ef\u4ee5\u8bd5\u7740\u81ea\u5df1\u89e3\u7b54\u4e00\u4e0b\u8fd9\u4e2a\u4e58\u6cd5\u95ee\u9898\uff0c\u518d\u5c06\u4f60\u7684\u7ed3\u679c\u548c\u56fe\u4e2d\u7684\u8fd9\u4e2a\u8fdb\u884c\u5bf9\u6bd4\uff08\u5982\u679c\u7528\u7b14\u8ba1\u7b97\uff0c\u4f60\u5f88\u5feb\u5c31\u80fd\u638c\u63e1\u5b83\u4eec\uff09\u3002 \\begin{bmatrix} \\color{red}4 & \\color{red}2 & \\color{red}0 \\\\ \\color{green}0 & \\color{green}8 & \\color{green}1 \\\\ \\color{blue}0 & \\color{blue}1 & \\color{blue}0 \\end{bmatrix} \\cdot \\begin{bmatrix} \\color{red}4 & \\color{green}2 & \\color{blue}1 \\\\ \\color{red}2 & \\color{green}0 & \\color{blue}4 \\\\ \\color{red}9 & \\color{green}4 & \\color{blue}2 \\end{bmatrix} = \\begin{bmatrix} \\color{red}4 \\cdot \\color{red}4 + \\color{red}2 \\cdot \\color{red}2 + \\color{red}0 \\cdot \\color{red}9 & \\color{red}4 \\cdot \\color{green}2 + \\color{red}2 \\cdot \\color{green}0 + \\color{red}0 \\cdot \\color{green}4 & \\color{red}4 \\cdot \\color{blue}1 + \\color{red}2 \\cdot \\color{blue}4 + \\color{red}0 \\cdot \\color{blue}2 \\\\ \\color{green}0 \\cdot \\color{red}4 + \\color{green}8 \\cdot \\color{red}2 + \\color{green}1 \\cdot \\color{red}9 & \\color{green}0 \\cdot \\color{green}2 + \\color{green}8 \\cdot \\color{green}0 + \\color{green}1 \\cdot \\color{green}4 & \\color{green}0 \\cdot \\color{blue}1 + \\color{green}8 \\cdot \\color{blue}4 + \\color{green}1 \\cdot \\color{blue}2 \\\\ \\color{blue}0 \\cdot \\color{red}4 + \\color{blue}1 \\cdot \\color{red}2 + \\color{blue}0 \\cdot \\color{red}9 & \\color{blue}0 \\cdot \\color{green}2 + \\color{blue}1 \\cdot \\color{green}0 + \\color{blue}0 \\cdot \\color{green}4 & \\color{blue}0 \\cdot \\color{blue}1 + \\color{blue}1 \\cdot \\color{blue}4 + \\color{blue}0 \\cdot \\color{blue}2 \\end{bmatrix} \\\\ = \\begin{bmatrix} 20 & 8 & 12 \\\\ 25 & 4 & 34 \\\\ 2 & 0 & 4 \\end{bmatrix} \u53ef\u4ee5\u770b\u5230\uff0c\u77e9\u9635\u76f8\u4e58\u975e\u5e38\u7e41\u7410\u800c\u5bb9\u6613\u51fa\u9519\uff08\u8fd9\u4e5f\u662f\u6211\u4eec\u901a\u5e38\u8ba9\u8ba1\u7b97\u673a\u505a\u8fd9\u4ef6\u4e8b\u7684\u539f\u56e0\uff09\uff0c\u800c\u4e14\u5f53\u77e9\u9635\u53d8\u5927\u4ee5\u540e\u5f88\u5feb\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u5982\u679c\u4f60\u4ecd\u7136\u5e0c\u671b\u4e86\u89e3\u66f4\u591a\uff0c\u6216\u5bf9\u77e9\u9635\u7684\u6570\u5b66\u6027\u8d28\u611f\u5230\u597d\u5947\uff0c\u6211\u5f3a\u70c8\u63a8\u8350\u4f60\u770b\u770b \u53ef\u6c57\u5b66\u9662 \u7684\u77e9\u9635\u6559\u7a0b\u3002 \u4e0d\u7ba1\u600e\u6837\uff0c\u73b0\u5728\u6211\u4eec\u77e5\u9053\u5982\u4f55\u8fdb\u884c\u77e9\u9635\u76f8\u4e58\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u5b66\u4e60\u597d\u4e1c\u897f\u4e86\u3002","title":"\u77e9\u9635\u76f8\u4e58"},{"location":"01%20Getting%20started/07%20Transformations/#_14","text":"\u76ee\u524d\u4e3a\u6b62\uff0c\u901a\u8fc7\u8fd9\u4e9b\u6559\u7a0b\u6211\u4eec\u5df2\u7ecf\u76f8\u5f53\u4e86\u89e3\u5411\u91cf\u4e86\u3002\u6211\u4eec\u7528\u5411\u91cf\u6765\u8868\u793a\u4f4d\u7f6e\uff0c\u8868\u793a\u989c\u8272\uff0c\u751a\u81f3\u662f\u7eb9\u7406\u5750\u6807\u3002\u8ba9\u6211\u4eec\u66f4\u6df1\u5165\u4e86\u89e3\u4e00\u4e0b\u5411\u91cf\uff0c\u5b83\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a N\u00d71 \u77e9\u9635\uff0cN\u8868\u793a\u5411\u91cf\u5206\u91cf\u7684\u4e2a\u6570\uff08\u4e5f\u53eb N\u7ef4 (N-dimensional)\u5411\u91cf\uff09\u3002\u5982\u679c\u4f60\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\u5c31\u4f1a\u660e\u767d\u3002\u5411\u91cf\u548c\u77e9\u9635\u4e00\u6837\u90fd\u662f\u4e00\u4e2a\u6570\u5b57\u5e8f\u5217\uff0c\u4f46\u5b83\u53ea\u67091\u5217\u3002\u90a3\u4e48\uff0c\u8fd9\u4e2a\u65b0\u7684\u5b9a\u4e49\u5bf9\u6211\u4eec\u6709\u4ec0\u4e48\u5e2e\u52a9\u5462\uff1f\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a M\u00d7N \u77e9\u9635\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u4e2a\u77e9\u9635\u4e58\u4ee5\u6211\u4eec\u7684 N\u00d71 \u5411\u91cf\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u77e9\u9635\u7684\u5217\u6570\u7b49\u4e8e\u5411\u91cf\u7684\u884c\u6570\uff0c\u6240\u4ee5\u5b83\u4eec\u5c31\u80fd\u76f8\u4e58\u3002 \u4f46\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u4f1a\u5173\u5fc3\u77e9\u9635\u80fd\u5426\u4e58\u4ee5\u4e00\u4e2a\u5411\u91cf\uff1f\u597d\u5427\uff0c\u6b63\u5de7\uff0c\u5f88\u591a\u6709\u8da3\u76842D/3D\u53d8\u6362\u90fd\u53ef\u4ee5\u653e\u5728\u4e00\u4e2a\u77e9\u9635\u4e2d\uff0c\u7528\u8fd9\u4e2a\u77e9\u9635\u4e58\u4ee5\u6211\u4eec\u7684\u5411\u91cf\u5c06 \u53d8\u6362 (Transform)\u8fd9\u4e2a\u5411\u91cf\u3002\u5982\u679c\u4f60\u4ecd\u7136\u6709\u4e9b\u56f0\u60d1\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e9b\u4f8b\u5b50\uff0c\u4f60\u5f88\u5feb\u5c31\u80fd\u660e\u767d\u4e86\u3002","title":"\u77e9\u9635\u4e0e\u5411\u91cf\u76f8\u4e58"},{"location":"01%20Getting%20started/07%20Transformations/#_15","text":"\u5728OpenGL\u4e2d\uff0c\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\u6211\u4eec\u901a\u5e38\u4f7f\u7528 4\u00d74 \u7684\u53d8\u6362\u77e9\u9635\uff0c\u800c\u5176\u4e2d\u6700\u91cd\u8981\u7684\u539f\u56e0\u5c31\u662f\u5927\u90e8\u5206\u7684\u5411\u91cf\u90fd\u662f4\u5206\u91cf\u7684\u3002\u6211\u4eec\u80fd\u60f3\u5230\u7684\u6700\u7b80\u5355\u7684\u53d8\u6362\u77e9\u9635\u5c31\u662f \u5355\u4f4d\u77e9\u9635 (Identity Matrix)\u3002\u5355\u4f4d\u77e9\u9635\u662f\u4e00\u4e2a\u9664\u4e86\u5bf9\u89d2\u7ebf\u4ee5\u5916\u90fd\u662f0\u7684 N\u00d7N \u77e9\u9635\u3002\u5728\u4e0b\u5f0f\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u79cd\u53d8\u6362\u77e9\u9635\u4f7f\u4e00\u4e2a\u5411\u91cf\u5b8c\u5168\u4e0d\u53d8\uff1a \\begin{bmatrix} \\color{red}1 & \\color{red}0 & \\color{red}0 & \\color{red}0 \\\\ \\color{green}0 & \\color{green}1 & \\color{green}0 & \\color{green}0 \\\\ \\color{blue}0 & \\color{blue}0 & \\color{blue}1 & \\color{blue}0 \\\\ \\color{purple}0 & \\color{purple}0 & \\color{purple}0 & \\color{purple}1 \\end{bmatrix} \\cdot \\begin{bmatrix} 1 \\\\ 2 \\\\ 3 \\\\ 4 \\end{bmatrix} = \\begin{bmatrix} \\color{red}1 \\cdot 1 \\\\ \\color{green}1 \\cdot 2 \\\\ \\color{blue}1 \\cdot 3 \\\\ \\color{purple}1 \\cdot 4 \\end{bmatrix} = \\begin{bmatrix} 1 \\\\ 2 \\\\ 3 \\\\ 4 \\end{bmatrix} \u5411\u91cf\u770b\u8d77\u6765\u5b8c\u5168\u6ca1\u53d8\u3002\u4ece\u4e58\u6cd5\u6cd5\u5219\u6765\u770b\u5c31\u5f88\u5bb9\u6613\u7406\u89e3\u6765\uff1a\u7b2c\u4e00\u4e2a\u7ed3\u679c\u5143\u7d20\u662f\u77e9\u9635\u7684\u7b2c\u4e00\u884c\u7684\u6bcf\u4e2a\u5143\u7d20\u4e58\u4ee5\u5411\u91cf\u7684\u6bcf\u4e2a\u5bf9\u5e94\u5143\u7d20\u3002\u56e0\u4e3a\u6bcf\u884c\u7684\u5143\u7d20\u9664\u4e86\u7b2c\u4e00\u4e2a\u90fd\u662f0\uff0c\u53ef\u5f97\uff1a \\color{red}1\\cdot1 + \\color{red}0\\cdot2 + \\color{red}0\\cdot3 + \\color{red}0\\cdot4 = 1 \uff0c\u5411\u91cf\u7684\u5176\u4ed63\u4e2a\u5143\u7d20\u540c\u7406\u3002 Important \u4f60\u53ef\u80fd\u4f1a\u5947\u602a\u4e00\u4e2a\u6ca1\u53d8\u6362\u7684\u53d8\u6362\u77e9\u9635\u6709\u4ec0\u4e48\u7528\uff1f\u5355\u4f4d\u77e9\u9635\u901a\u5e38\u662f\u751f\u6210\u5176\u4ed6\u53d8\u6362\u77e9\u9635\u7684\u8d77\u70b9\uff0c\u5982\u679c\u6211\u4eec\u6df1\u6316\u7ebf\u6027\u4ee3\u6570\uff0c\u8fd9\u8fd8\u662f\u4e00\u4e2a\u5bf9\u8bc1\u660e\u5b9a\u7406\u3001\u89e3\u7ebf\u6027\u65b9\u7a0b\u975e\u5e38\u6709\u7528\u7684\u77e9\u9635\u3002","title":"\u5355\u4f4d\u77e9\u9635"},{"location":"01%20Getting%20started/07%20Transformations/#_16","text":"\u5bf9\u4e00\u4e2a\u5411\u91cf\u8fdb\u884c\u7f29\u653e(Scaling)\u5c31\u662f\u5bf9\u5411\u91cf\u7684\u957f\u5ea6\u8fdb\u884c\u7f29\u653e\uff0c\u800c\u4fdd\u6301\u5b83\u7684\u65b9\u5411\u4e0d\u53d8\u3002\u7531\u4e8e\u6211\u4eec\u8fdb\u884c\u7684\u662f2\u7ef4\u62163\u7ef4\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u522b\u5b9a\u4e49\u4e00\u4e2a\u67092\u62163\u4e2a\u7f29\u653e\u53d8\u91cf\u7684\u5411\u91cf\uff0c\u6bcf\u4e2a\u53d8\u91cf\u7f29\u653e\u4e00\u4e2a\u8f74(x\u3001y\u6216z)\u3002 \u6211\u4eec\u5148\u6765\u5c1d\u8bd5\u7f29\u653e\u5411\u91cf \\color{red}{\\bar{v}} = (3,2) \u3002\u6211\u4eec\u53ef\u4ee5\u628a\u5411\u91cf\u6cbf\u7740x\u8f74\u7f29\u653e0.5\uff0c\u4f7f\u5b83\u7684\u5bbd\u5ea6\u7f29\u5c0f\u4e3a\u539f\u6765\u7684\u4e8c\u5206\u4e4b\u4e00\uff1b\u6211\u4eec\u5c06\u6cbf\u7740y\u8f74\u628a\u5411\u91cf\u7684\u9ad8\u5ea6\u7f29\u653e\u4e3a\u539f\u6765\u7684\u4e24\u500d\u3002\u6211\u4eec\u770b\u770b\u628a\u5411\u91cf\u7f29\u653e(0.5, 2)\u500d\u6240\u83b7\u5f97\u7684 \\color{blue}{\\bar{s}} \u662f\u4ec0\u4e48\u6837\u7684\uff1a \u8bb0\u4f4f\uff0cOpenGL\u901a\u5e38\u662f\u57283D\u7a7a\u95f4\u8fdb\u884c\u64cd\u4f5c\u7684\uff0c\u5bf9\u4e8e2D\u7684\u60c5\u51b5\u6211\u4eec\u53ef\u4ee5\u628az\u8f74\u7f29\u653e1\u500d\uff0c\u8fd9\u6837z\u8f74\u7684\u503c\u5c31\u4e0d\u53d8\u4e86\u3002\u6211\u4eec\u521a\u521a\u7684\u7f29\u653e\u64cd\u4f5c\u662f \u4e0d\u5747\u5300 (Non-uniform)\u7f29\u653e\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u8f74\u7684\u7f29\u653e\u56e0\u5b50(Scaling Factor)\u90fd\u4e0d\u4e00\u6837\u3002\u5982\u679c\u6bcf\u4e2a\u8f74\u7684\u7f29\u653e\u56e0\u5b50\u90fd\u4e00\u6837\u90a3\u4e48\u5c31\u53eb \u5747\u5300\u7f29\u653e (Uniform Scale)\u3002 \u6211\u4eec\u4e0b\u9762\u4f1a\u6784\u9020\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\u6765\u4e3a\u6211\u4eec\u63d0\u4f9b\u7f29\u653e\u529f\u80fd\u3002\u6211\u4eec\u4ece\u5355\u4f4d\u77e9\u9635\u4e86\u89e3\u5230\uff0c\u6bcf\u4e2a\u5bf9\u89d2\u7ebf\u5143\u7d20\u4f1a\u5206\u522b\u4e0e\u5411\u91cf\u7684\u5bf9\u5e94\u5143\u7d20\u76f8\u4e58\u3002\u5982\u679c\u6211\u4eec\u628a1\u53d8\u4e3a3\u4f1a\u600e\u6837\uff1f\u8fd9\u6837\u5b50\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u628a\u5411\u91cf\u7684\u6bcf\u4e2a\u5143\u7d20\u4e58\u4ee53\u4e86\uff0c\u8fd9\u4e8b\u5b9e\u4e0a\u5c31\u628a\u5411\u91cf\u7f29\u653e3\u500d\u3002\u5982\u679c\u6211\u4eec\u628a\u7f29\u653e\u53d8\u91cf\u8868\u793a\u4e3a (\\color{red}{S_1}, \\color{green}{S_2}, \\color{blue}{S_3}) \u6211\u4eec\u53ef\u4ee5\u4e3a\u4efb\u610f\u5411\u91cf (x,y,z) \u5b9a\u4e49\u4e00\u4e2a\u7f29\u653e\u77e9\u9635\uff1a \\begin{bmatrix} \\color{red}{S_1} & \\color{red}0 & \\color{red}0 & \\color{red}0 \\\\ \\color{green}0 & \\color{green}{S_2} & \\color{green}0 & \\color{green}0 \\\\ \\color{blue}0 & \\color{blue}0 & \\color{blue}{S_3} & \\color{blue}0 \\\\ \\color{purple}0 & \\color{purple}0 & \\color{purple}0 & \\color{purple}1 \\end{bmatrix} \\cdot \\begin{pmatrix} x \\\\ y \\\\ z \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} \\color{red}{S_1} \\cdot x \\\\ \\color{green}{S_2} \\cdot y \\\\ \\color{blue}{S_3} \\cdot z \\\\ 1 \\end{pmatrix} \u6ce8\u610f\uff0c\u7b2c\u56db\u4e2a\u7f29\u653e\u5411\u91cf\u4ecd\u7136\u662f1\uff0c\u56e0\u4e3a\u57283D\u7a7a\u95f4\u4e2d\u7f29\u653ew\u5206\u91cf\u662f\u65e0\u610f\u4e49\u7684\u3002w\u5206\u91cf\u53e6\u6709\u5176\u4ed6\u7528\u9014\uff0c\u5728\u540e\u9762\u6211\u4eec\u4f1a\u770b\u5230\u3002","title":"\u7f29\u653e"},{"location":"01%20Getting%20started/07%20Transformations/#_17","text":"\u4f4d\u79fb (Translation)\u662f\u5728\u539f\u59cb\u5411\u91cf\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u53e6\u4e00\u4e2a\u5411\u91cf\u4ece\u800c\u83b7\u5f97\u4e00\u4e2a\u5728\u4e0d\u540c\u4f4d\u7f6e\u7684\u65b0\u5411\u91cf\u7684\u8fc7\u7a0b\uff0c\u4ece\u800c\u5728\u4f4d\u79fb\u5411\u91cf\u57fa\u7840\u4e0a \u79fb\u52a8 \u4e86\u539f\u59cb\u5411\u91cf\u3002\u6211\u4eec\u5df2\u7ecf\u8ba8\u8bba\u4e86\u5411\u91cf\u52a0\u6cd5\uff0c\u6240\u4ee5\u8fd9\u5e94\u8be5\u4e0d\u4f1a\u592a\u964c\u751f\u3002 \u548c\u7f29\u653e\u77e9\u9635\u4e00\u6837\uff0c\u57284\u00d74\u77e9\u9635\u4e0a\u6709\u51e0\u4e2a\u7279\u522b\u7684\u4f4d\u7f6e\u7528\u6765\u6267\u884c\u7279\u5b9a\u7684\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u4f4d\u79fb\u6765\u8bf4\u5b83\u4eec\u662f\u7b2c\u56db\u5217\u6700\u4e0a\u9762\u76843\u4e2a\u503c\u3002\u5982\u679c\u6211\u4eec\u628a\u4f4d\u79fb\u5411\u91cf\u8868\u793a\u4e3a (\\color{red}{T_x},\\color{green}{T_y},\\color{blue}{T_z}) \uff0c\u6211\u4eec\u5c31\u80fd\u628a\u4f4d\u79fb\u77e9\u9635\u5b9a\u4e49\u4e3a\uff1a \\begin{bmatrix} \\color{red}1 & \\color{red}0 & \\color{red}0 & \\color{red}{T_x} \\\\ \\color{green}0 & \\color{green}1 & \\color{green}0 & \\color{green}{T_y} \\\\ \\color{blue}0 & \\color{blue}0 & \\color{blue}1 & \\color{blue}{T_z} \\\\ \\color{purple}0 & \\color{purple}0 & \\color{purple}0 & \\color{purple}1 \\end{bmatrix} \\cdot \\begin{pmatrix} x \\\\ y \\\\ z \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} x + \\color{red}{T_x} \\\\ y + \\color{green}{T_y} \\\\ z + \\color{blue}{T_z} \\\\ 1 \\end{pmatrix} \u8fd9\u6837\u662f\u80fd\u5de5\u4f5c\u7684\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u4f4d\u79fb\u503c\u90fd\u8981\u4e58\u4ee5\u5411\u91cf\u7684 w \u884c\uff0c\u6240\u4ee5\u4f4d\u79fb\u503c\u4f1a\u52a0\u5230\u5411\u91cf\u7684\u539f\u59cb\u503c\u4e0a\uff08\u60f3\u60f3\u77e9\u9635\u4e58\u6cd5\u6cd5\u5219\uff09\u3002\u800c\u5982\u679c\u4f60\u75283x3\u77e9\u9635\u6211\u4eec\u7684\u4f4d\u79fb\u503c\u5c31\u6ca1\u5730\u65b9\u653e\u4e5f\u6ca1\u5730\u65b9\u4e58\u4e86\uff0c\u6240\u4ee5\u662f\u4e0d\u884c\u7684\u3002 Important \u9f50\u6b21\u5750\u6807(Homogeneous Coordinates) \u5411\u91cf\u7684w\u5206\u91cf\u4e5f\u53eb \u9f50\u6b21\u5750\u6807 \u3002\u60f3\u8981\u4ece\u9f50\u6b21\u5411\u91cf\u5f97\u52303D\u5411\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u628ax\u3001y\u548cz\u5750\u6807\u5206\u522b\u9664\u4ee5w\u5750\u6807\u3002\u6211\u4eec\u901a\u5e38\u4e0d\u4f1a\u6ce8\u610f\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3aw\u5206\u91cf\u901a\u5e38\u662f1.0\u3002\u4f7f\u7528\u9f50\u6b21\u5750\u6807\u6709\u51e0\u70b9\u597d\u5904\uff1a\u5b83\u5141\u8bb8\u6211\u4eec\u57283D\u5411\u91cf\u4e0a\u8fdb\u884c\u4f4d\u79fb\uff08\u5982\u679c\u6ca1\u6709w\u5206\u91cf\u6211\u4eec\u662f\u4e0d\u80fd\u4f4d\u79fb\u5411\u91cf\u7684\uff09\uff0c\u800c\u4e14\u4e0b\u4e00\u7ae0\u6211\u4eec\u4f1a\u7528w\u503c\u521b\u5efa3D\u89c6\u89c9\u6548\u679c\u3002 \u5982\u679c\u4e00\u4e2a\u5411\u91cf\u7684\u9f50\u6b21\u5750\u6807\u662f0\uff0c\u8fd9\u4e2a\u5750\u6807\u5c31\u662f \u65b9\u5411\u5411\u91cf (Direction Vector)\uff0c\u56e0\u4e3aw\u5750\u6807\u662f0\uff0c\u8fd9\u4e2a\u5411\u91cf\u5c31\u4e0d\u80fd\u4f4d\u79fb\uff08\u8bd1\u6ce8\uff1a\u8fd9\u4e5f\u5c31\u662f\u6211\u4eec\u8bf4\u7684\u4e0d\u80fd\u4f4d\u79fb\u4e00\u4e2a\u65b9\u5411\uff09\u3002 \u6709\u4e86\u4f4d\u79fb\u77e9\u9635\u6211\u4eec\u5c31\u53ef\u4ee5\u57283\u4e2a\u65b9\u5411(x\u3001y\u3001z)\u4e0a\u79fb\u52a8\u7269\u4f53\uff0c\u5b83\u662f\u6211\u4eec\u7684\u53d8\u6362\u5de5\u5177\u7bb1\u4e2d\u975e\u5e38\u6709\u7528\u7684\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\u3002","title":"\u4f4d\u79fb"},{"location":"01%20Getting%20started/07%20Transformations/#_18","text":"\u4e0a\u9762\u51e0\u4e2a\u7684\u53d8\u6362\u5185\u5bb9\u76f8\u5bf9\u5bb9\u6613\u7406\u89e3\uff0c\u57282D\u62163D\u7a7a\u95f4\u4e2d\u4e5f\u5bb9\u6613\u8868\u793a\u51fa\u6765\uff0c\u4f46\u65cb\u8f6c(Rotation)\u7a0d\u590d\u6742\u4e9b\u3002\u5982\u679c\u4f60\u60f3\u77e5\u9053\u65cb\u8f6c\u77e9\u9635\u662f\u5982\u4f55\u6784\u9020\u51fa\u6765\u7684\uff0c\u6211\u63a8\u8350\u4f60\u53bb\u770b\u53ef\u6c57\u5b66\u9662 \u7ebf\u6027\u4ee3\u6570 \u7684\u89c6\u9891\u3002 \u9996\u5148\u6211\u4eec\u6765\u5b9a\u4e49\u4e00\u4e2a\u5411\u91cf\u7684\u65cb\u8f6c\u5230\u5e95\u662f\u4ec0\u4e48\u30022D\u62163D\u7a7a\u95f4\u4e2d\u7684\u65cb\u8f6c\u7528 \u89d2 (Angle)\u6765\u8868\u793a\u3002\u89d2\u53ef\u4ee5\u662f\u89d2\u5ea6\u5236\u6216\u5f27\u5ea6\u5236\u7684\uff0c\u5468\u89d2\u662f360\u89d2\u5ea6\u62162 PI \u5f27\u5ea6\u3002\u6211\u4e2a\u4eba\u66f4\u559c\u6b22\u7528\u89d2\u5ea6\uff0c\u56e0\u4e3a\u5b83\u4eec\u770b\u8d77\u6765\u66f4\u76f4\u89c2\u3002 Important \u5927\u591a\u6570\u65cb\u8f6c\u51fd\u6570\u9700\u8981\u7528\u5f27\u5ea6\u5236\u7684\u89d2\uff0c\u4f46\u5e78\u8fd0\u7684\u662f\u89d2\u5ea6\u5236\u7684\u89d2\u4e5f\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u8f6c\u5316\u4e3a\u5f27\u5ea6\u5236\u7684\uff1a \u5f27\u5ea6\u8f6c\u89d2\u5ea6\uff1a \u89d2\u5ea6 = \u5f27\u5ea6 * (180.0f / PI) \u89d2\u5ea6\u8f6c\u5f27\u5ea6\uff1a \u5f27\u5ea6 = \u89d2\u5ea6 * (PI / 180.0f) PI \u7ea6\u7b49\u4e8e3.14159265359\u3002 \u8f6c\u534a\u5708\u4f1a\u65cb\u8f6c360/2 = 180\u5ea6\uff0c\u5411\u53f3\u65cb\u8f6c1/5\u5708\u8868\u793a\u5411\u53f3\u65cb\u8f6c360/5 = 72\u5ea6\u3002\u4e0b\u56fe\u4e2d\u5c55\u793a\u76842D\u5411\u91cf \\color{red}{\\bar{v}} \u662f\u7531 \\color{green}{\\bar{k}} \u5411\u53f3\u65cb\u8f6c72\u5ea6\u6240\u5f97\u7684\uff1a \u57283D\u7a7a\u95f4\u4e2d\u65cb\u8f6c\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u89d2 \u548c \u4e00\u4e2a \u65cb\u8f6c\u8f74 (Rotation Axis)\u3002\u7269\u4f53\u4f1a\u6cbf\u7740\u7ed9\u5b9a\u7684\u65cb\u8f6c\u8f74\u65cb\u8f6c\u7279\u5b9a\u89d2\u5ea6\u3002\u5982\u679c\u4f60\u60f3\u8981\u66f4\u5f62\u8c61\u5316\u7684\u611f\u53d7\uff0c\u53ef\u4ee5\u8bd5\u8bd5\u5411\u4e0b\u770b\u7740\u4e00\u4e2a\u7279\u5b9a\u7684\u65cb\u8f6c\u8f74\uff0c\u540c\u65f6\u5c06\u4f60\u7684\u5934\u90e8\u65cb\u8f6c\u4e00\u5b9a\u89d2\u5ea6\u3002\u5f532D\u5411\u91cf\u57283D\u7a7a\u95f4\u4e2d\u65cb\u8f6c\u65f6\uff0c\u6211\u4eec\u628a\u65cb\u8f6c\u8f74\u8bbe\u4e3az\u8f74\uff08\u5c1d\u8bd5\u60f3\u8c61\u8fd9\u79cd\u60c5\u51b5\uff09\u3002 \u4f7f\u7528\u4e09\u89d2\u5b66\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u89d2\u5ea6\uff0c\u53ef\u4ee5\u628a\u4e00\u4e2a\u5411\u91cf\u53d8\u6362\u4e3a\u4e00\u4e2a\u7ecf\u8fc7\u65cb\u8f6c\u7684\u65b0\u5411\u91cf\u3002\u8fd9\u901a\u5e38\u662f\u4f7f\u7528\u4e00\u7cfb\u5217\u6b63\u5f26\u548c\u4f59\u5f26\u51fd\u6570\uff08\u4e00\u822c\u7b80\u79f0sin\u548ccos\uff09\u5404\u79cd\u5de7\u5999\u7684\u7ec4\u5408\u5f97\u5230\u7684\u3002\u5f53\u7136\uff0c\u8ba8\u8bba\u5982\u4f55\u751f\u6210\u53d8\u6362\u77e9\u9635\u8d85\u51fa\u4e86\u8fd9\u4e2a\u6559\u7a0b\u7684\u8303\u56f4\u3002 \u65cb\u8f6c\u77e9\u9635\u57283D\u7a7a\u95f4\u4e2d\u6bcf\u4e2a\u5355\u4f4d\u8f74\u90fd\u6709\u4e0d\u540c\u5b9a\u4e49\uff0c\u65cb\u8f6c\u89d2\u5ea6\u7528 \\theta \u8868\u793a\uff1a \u6cbfx\u8f74\u65cb\u8f6c\uff1a \\begin{bmatrix} \\color{red}1 & \\color{red}0 & \\color{red}0 & \\color{red}0 \\\\ \\color{green}0 & \\color{green}{\\cos \\theta} & - \\color{green}{\\sin \\theta} & \\color{green}0 \\\\ \\color{blue}0 & \\color{blue}{\\sin \\theta} & \\color{blue}{\\cos \\theta} & \\color{blue}0 \\\\ \\color{purple}0 & \\color{purple}0 & \\color{purple}0 & \\color{purple}1 \\end{bmatrix} \\cdot \\begin{pmatrix} x \\\\ y \\\\ z \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} x \\\\ \\color{green}{\\cos \\theta} \\cdot y - \\color{green}{\\sin \\theta} \\cdot z \\\\ \\color{blue}{\\sin \\theta} \\cdot y + \\color{blue}{\\cos \\theta} \\cdot z \\\\ 1 \\end{pmatrix} \u6cbfy\u8f74\u65cb\u8f6c\uff1a \\begin{bmatrix} \\color{red}{\\cos \\theta} & \\color{red}0 & \\color{red}{\\sin \\theta} & \\color{red}0 \\\\ \\color{green}0 & \\color{green}1 & \\color{green}0 & \\color{green}0 \\\\ - \\color{blue}{\\sin \\theta} & \\color{blue}0 & \\color{blue}{\\cos \\theta} & \\color{blue}0 \\\\ \\color{purple}0 & \\color{purple}0 & \\color{purple}0 & \\color{purple}1 \\end{bmatrix} \\cdot \\begin{pmatrix} x \\\\ y \\\\ z \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} \\color{red}{\\cos \\theta} \\cdot x + \\color{red}{\\sin \\theta} \\cdot z \\\\ y \\\\ - \\color{blue}{\\sin \\theta} \\cdot x + \\color{blue}{\\cos \\theta} \\cdot z \\\\ 1 \\end{pmatrix} \u6cbfz\u8f74\u65cb\u8f6c\uff1a \\begin{bmatrix} \\color{red}{\\cos \\theta} & - \\color{red}{\\sin \\theta} & \\color{red}0 & \\color{red}0 \\\\ \\color{green}{\\sin \\theta} & \\color{green}{\\cos \\theta} & \\color{green}0 & \\color{green}0 \\\\ \\color{blue}0 & \\color{blue}0 & \\color{blue}1 & \\color{blue}0 \\\\ \\color{purple}0 & \\color{purple}0 & \\color{purple}0 & \\color{purple}1 \\end{bmatrix} \\cdot \\begin{pmatrix} x \\\\ y \\\\ z \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} \\color{red}{\\cos \\theta} \\cdot x - \\color{red}{\\sin \\theta} \\cdot y \\\\ \\color{green}{\\sin \\theta} \\cdot x + \\color{green}{\\cos \\theta} \\cdot y \\\\ z \\\\ 1 \\end{pmatrix} \u5229\u7528\u65cb\u8f6c\u77e9\u9635\u6211\u4eec\u53ef\u4ee5\u628a\u4efb\u610f\u4f4d\u7f6e\u5411\u91cf\u6cbf\u4e00\u4e2a\u5355\u4f4d\u65cb\u8f6c\u8f74\u8fdb\u884c\u65cb\u8f6c\u3002\u4e5f\u53ef\u4ee5\u5c06\u591a\u4e2a\u77e9\u9635\u590d\u5408\uff0c\u6bd4\u5982\u5148\u6cbf\u7740x\u8f74\u65cb\u8f6c\u518d\u6cbf\u7740y\u8f74\u65cb\u8f6c\u3002\u4f46\u662f\u8fd9\u4f1a\u5f88\u5feb\u5bfc\u81f4\u4e00\u4e2a\u95ee\u9898\u2014\u2014 \u4e07\u5411\u8282\u6b7b\u9501 \uff08Gimbal Lock\uff0c\u53ef\u4ee5\u770b\u770b \u8fd9\u4e2a\u89c6\u9891 \uff08\u4f18\u9177\uff09 \u6765\u4e86\u89e3\uff09\u3002\u5728\u8fd9\u91cc\u6211\u4eec\u4e0d\u4f1a\u8ba8\u8bba\u5b83\u7684\u7ec6\u8282\uff0c\u4f46\u662f\u5bf9\u4e8e3D\u7a7a\u95f4\u4e2d\u7684\u65cb\u8f6c\uff0c\u4e00\u4e2a\u66f4\u597d\u7684\u6a21\u578b\u662f\u6cbf\u7740\u4efb\u610f\u7684\u4e00\u4e2a\u8f74\uff0c\u6bd4\u5982\u5355\u4f4d\u5411\u91cf$(0.662, 0.2, 0.7222)$\u65cb\u8f6c\uff0c\u800c\u4e0d\u662f\u5bf9\u4e00\u7cfb\u5217\u65cb\u8f6c\u77e9\u9635\u8fdb\u884c\u590d\u5408\u3002\u8fd9\u6837\u7684\u4e00\u4e2a\uff08\u8d85\u7ea7\u9ebb\u70e6\u7684\uff09\u77e9\u9635\u662f\u5b58\u5728\u7684\uff0c\u89c1\u4e0b\u9762\u8fd9\u4e2a\u516c\u5f0f\uff0c\u5176\u4e2d (\\color{red}{R_x}, \\color{green}{R_y}, \\color{blue}{R_z}) \u4ee3\u8868\u4efb\u610f\u65cb\u8f6c\u8f74\uff1a \\begin{bmatrix} \\cos \\theta + \\color{red}{R_x}^2(1 - \\cos \\theta) & \\color{red}{R_x}\\color{green}{R_y}(1 - \\cos \\theta) - \\color{blue}{R_z} \\sin \\theta & \\color{red}{R_x}\\color{blue}{R_z}(1 - \\cos \\theta) + \\color{green}{R_y} \\sin \\theta & 0 \\\\ \\color{green}{R_y}\\color{red}{R_x} (1 - \\cos \\theta) + \\color{blue}{R_z} \\sin \\theta & \\cos \\theta + \\color{green}{R_y}^2(1 - \\cos \\theta) & \\color{green}{R_y}\\color{blue}{R_z}(1 - \\cos \\theta) - \\color{red}{R_x} \\sin \\theta & 0 \\\\ \\color{blue}{R_z}\\color{red}{R_x}(1 - \\cos \\theta) - \\color{green}{R_y} \\sin \\theta & \\color{blue}{R_z}\\color{green}{R_y}(1 - \\cos \\theta) + \\color{red}{R_x} \\sin \\theta & \\cos \\theta + \\color{blue}{R_z}^2(1 - \\cos \\theta) & 0 \\\\ 0 & 0 & 0 & 1 \\end{bmatrix} \u5728\u6570\u5b66\u4e0a\u8ba8\u8bba\u5982\u4f55\u751f\u6210\u8fd9\u6837\u7684\u77e9\u9635\u4ecd\u7136\u8d85\u51fa\u4e86\u672c\u8282\u5185\u5bb9\u3002\u4f46\u662f\u8bb0\u4f4f\uff0c\u5373\u4f7f\u8fd9\u6837\u4e00\u4e2a\u77e9\u9635\u4e5f\u4e0d\u80fd\u5b8c\u5168\u89e3\u51b3\u4e07\u5411\u8282\u6b7b\u9501\u95ee\u9898\uff08\u5c3d\u7ba1\u4f1a\u6781\u5927\u5730\u907f\u514d\uff09\u3002\u907f\u514d\u4e07\u5411\u8282\u6b7b\u9501\u7684\u771f\u6b63\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528 \u56db\u5143\u6570 (Quaternion)\uff0c\u5b83\u4e0d\u4ec5\u66f4\u5b89\u5168\uff0c\u800c\u4e14\u8ba1\u7b97\u4f1a\u66f4\u6709\u6548\u7387\u3002\u56db\u5143\u6570\u53ef\u80fd\u4f1a\u5728\u540e\u9762\u7684\u6559\u7a0b\u4e2d\u8ba8\u8bba\u3002 \u8bd1\u6ce8 \u5bf9\u56db\u5143\u6570\u7684\u7406\u89e3\u4f1a\u7528\u5230\u975e\u5e38\u591a\u7684\u6570\u5b66\u77e5\u8bc6\u3002\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u56db\u5143\u6570\u4e0e3D\u65cb\u8f6c\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u53ef\u4ee5\u6765\u9605\u8bfb\u6211\u7684 \u6559\u7a0b \u3002\u5982\u679c\u4f60\u5bf9\u4e07\u5411\u8282\u6b7b\u9501\u7684\u6982\u5ff5\u4ecd\u4e0d\u662f\u90a3\u4e48\u6e05\u695a\uff0c\u53ef\u4ee5\u6765\u9605\u8bfb\u6211\u6559\u7a0b\u7684 Bonus\u7ae0\u8282 \u3002 \u73b0\u57283Blue1Brown\u4e5f\u5df2\u7ecf\u5f00\u59cb\u4e86\u4e00\u4e2a\u56db\u5143\u6570\u7684\u89c6\u9891\u7cfb\u5217\uff0c\u4ed6\u91c7\u7528\u7403\u6781\u5e73\u9762\u6295\u5f71(Stereographic Projection)\u7684\u65b9\u5f0f\u5c06\u56db\u5143\u6570\u6295\u5f71\u52303D\u7a7a\u95f4\uff0c\u540c\u6837\u6709\u52a9\u4e8e\u7406\u89e3\u56db\u5143\u6570\u7684\u6982\u5ff5\uff08\u4ecd\u5728\u66f4\u65b0\u4e2d\uff09\uff1a https://www.youtube.com/watch?v=d4EgbgTm0Bg","title":"\u65cb\u8f6c"},{"location":"01%20Getting%20started/07%20Transformations/#_19","text":"\u4f7f\u7528\u77e9\u9635\u8fdb\u884c\u53d8\u6362\u7684\u771f\u6b63\u529b\u91cf\u5728\u4e8e\uff0c\u6839\u636e\u77e9\u9635\u4e4b\u95f4\u7684\u4e58\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u591a\u4e2a\u53d8\u6362\u7ec4\u5408\u5230\u4e00\u4e2a\u77e9\u9635\u4e2d\u3002\u8ba9\u6211\u4eec\u770b\u770b\u6211\u4eec\u662f\u5426\u80fd\u751f\u6210\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\uff0c\u8ba9\u5b83\u7ec4\u5408\u591a\u4e2a\u53d8\u6362\u3002\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u9876\u70b9(x, y, z)\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u5176\u7f29\u653e2\u500d\uff0c\u7136\u540e\u4f4d\u79fb(1, 2, 3)\u4e2a\u5355\u4f4d\u3002\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u4f4d\u79fb\u548c\u7f29\u653e\u77e9\u9635\u6765\u5b8c\u6210\u8fd9\u4e9b\u53d8\u6362\u3002\u7ed3\u679c\u7684\u53d8\u6362\u77e9\u9635\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a Trans . Scale = \\begin{bmatrix} \\color{red}1 & \\color{red}0 & \\color{red}0 & \\color{red}1 \\\\ \\color{green}0 & \\color{green}1 & \\color{green}0 & \\color{green}2 \\\\ \\color{blue}0 & \\color{blue}0 & \\color{blue}1 & \\color{blue}3 \\\\ \\color{purple}0 & \\color{purple}0 & \\color{purple}0 & \\color{purple}1 \\end{bmatrix} . \\begin{bmatrix} \\color{red}2 & \\color{red}0 & \\color{red}0 & \\color{red}0 \\\\ \\color{green}0 & \\color{green}2 & \\color{green}0 & \\color{green}0 \\\\ \\color{blue}0 & \\color{blue}0 & \\color{blue}2 & \\color{blue}0 \\\\ \\color{purple}0 & \\color{purple}0 & \\color{purple}0 & \\color{purple}1 \\end{bmatrix} = \\begin{bmatrix} \\color{red}2 & \\color{red}0 & \\color{red}0 & \\color{red}1 \\\\ \\color{green}0 & \\color{green}2 & \\color{green}0 & \\color{green}2 \\\\ \\color{blue}0 & \\color{blue}0 & \\color{blue}2 & \\color{blue}3 \\\\ \\color{purple}0 & \\color{purple}0 & \\color{purple}0 & \\color{purple}1 \\end{bmatrix} \u6ce8\u610f\uff0c\u5f53\u77e9\u9635\u76f8\u4e58\u65f6\u6211\u4eec\u5148\u5199\u4f4d\u79fb\u518d\u5199\u7f29\u653e\u53d8\u6362\u7684\u3002\u77e9\u9635\u4e58\u6cd5\u662f\u4e0d\u9075\u5b88\u4ea4\u6362\u5f8b\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u7684\u987a\u5e8f\u5f88\u91cd\u8981\u3002\u5f53\u77e9\u9635\u76f8\u4e58\u65f6\uff0c\u5728\u6700\u53f3\u8fb9\u7684\u77e9\u9635\u662f\u7b2c\u4e00\u4e2a\u4e0e\u5411\u91cf\u76f8\u4e58\u7684\uff0c\u6240\u4ee5\u4f60\u5e94\u8be5\u4ece\u53f3\u5411\u5de6\u8bfb\u8fd9\u4e2a\u4e58\u6cd5\u3002\u5efa\u8bae\u60a8\u5728\u7ec4\u5408\u77e9\u9635\u65f6\uff0c\u5148\u8fdb\u884c\u7f29\u653e\u64cd\u4f5c\uff0c\u7136\u540e\u662f\u65cb\u8f6c\uff0c\u6700\u540e\u624d\u662f\u4f4d\u79fb\uff0c\u5426\u5219\u5b83\u4eec\u4f1a\uff08\u6d88\u6781\u5730\uff09\u4e92\u76f8\u5f71\u54cd\u3002\u6bd4\u5982\uff0c\u5982\u679c\u4f60\u5148\u4f4d\u79fb\u518d\u7f29\u653e\uff0c\u4f4d\u79fb\u7684\u5411\u91cf\u4e5f\u4f1a\u540c\u6837\u88ab\u7f29\u653e\uff08\u8bd1\u6ce8\uff1a\u6bd4\u5982\u5411\u67d0\u65b9\u5411\u79fb\u52a82\u7c73\uff0c2\u7c73\u4e5f\u8bb8\u4f1a\u88ab\u7f29\u653e\u62101\u7c73\uff09\uff01 \u7528\u6700\u7ec8\u7684\u53d8\u6362\u77e9\u9635\u5de6\u4e58\u6211\u4eec\u7684\u5411\u91cf\u4f1a\u5f97\u5230\u4ee5\u4e0b\u7ed3\u679c\uff1a \\begin{bmatrix} \\color{red}2 & \\color{red}0 & \\color{red}0 & \\color{red}1 \\\\ \\color{green}0 & \\color{green}2 & \\color{green}0 & \\color{green}2 \\\\ \\color{blue}0 & \\color{blue}0 & \\color{blue}2 & \\color{blue}3 \\\\ \\color{purple}0 & \\color{purple}0 & \\color{purple}0 & \\color{purple}1 \\end{bmatrix} . \\begin{bmatrix} x \\\\ y \\\\ z \\\\ 1 \\end{bmatrix} = \\begin{bmatrix} \\color{red}2x + \\color{red}1 \\\\ \\color{green}2y + \\color{green}2 \\\\ \\color{blue}2z + \\color{blue}3 \\\\ 1 \\end{bmatrix} \u4e0d\u9519\uff01\u5411\u91cf\u5148\u7f29\u653e2\u500d\uff0c\u7136\u540e\u4f4d\u79fb\u4e86(1, 2, 3)\u4e2a\u5355\u4f4d\u3002","title":"\u77e9\u9635\u7684\u7ec4\u5408"},{"location":"01%20Getting%20started/07%20Transformations/#_20","text":"\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u89e3\u91ca\u4e86\u53d8\u6362\u80cc\u540e\u7684\u6240\u6709\u7406\u8bba\uff0c\u662f\u65f6\u5019\u5c06\u8fd9\u4e9b\u77e5\u8bc6\u5229\u7528\u8d77\u6765\u4e86\u3002OpenGL\u6ca1\u6709\u81ea\u5e26\u4efb\u4f55\u7684\u77e9\u9635\u548c\u5411\u91cf\u77e5\u8bc6\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u5b9a\u4e49\u81ea\u5df1\u7684\u6570\u5b66\u7c7b\u548c\u51fd\u6570\u3002\u5728\u6559\u7a0b\u4e2d\u6211\u4eec\u66f4\u5e0c\u671b\u62bd\u8c61\u6240\u6709\u7684\u6570\u5b66\u7ec6\u8282\uff0c\u4f7f\u7528\u5df2\u7ecf\u505a\u597d\u4e86\u7684\u6570\u5b66\u5e93\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6709\u4e2a\u6613\u4e8e\u4f7f\u7528\uff0c\u4e13\u95e8\u4e3aOpenGL\u91cf\u8eab\u5b9a\u505a\u7684\u6570\u5b66\u5e93\uff0c\u90a3\u5c31\u662fGLM\u3002","title":"\u5b9e\u8df5"},{"location":"01%20Getting%20started/07%20Transformations/#glm","text":"GLM\u662fOpen GL M athematics\u7684\u7f29\u5199\uff0c\u5b83\u662f\u4e00\u4e2a \u53ea\u6709\u5934\u6587\u4ef6\u7684 \u5e93\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ea\u9700\u5305\u542b\u5bf9\u5e94\u7684\u5934\u6587\u4ef6\u5c31\u884c\u4e86\uff0c\u4e0d\u7528\u94fe\u63a5\u548c\u7f16\u8bd1\u3002GLM\u53ef\u4ee5\u5728\u5b83\u4eec\u7684 \u7f51\u7ad9 \u4e0a\u4e0b\u8f7d\u3002\u628a\u5934\u6587\u4ef6\u7684\u6839\u76ee\u5f55\u590d\u5236\u5230\u4f60\u7684 includes \u6587\u4ef6\u5939\uff0c\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u5e93\u4e86\u3002 Attention GLM\u5e93\u4ece0.9.9\u7248\u672c\u8d77\uff0c\u9ed8\u8ba4\u4f1a\u5c06\u77e9\u9635\u7c7b\u578b\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u96f6\u77e9\u9635\uff08\u6240\u6709\u5143\u7d20\u5747\u4e3a0\uff09\uff0c\u800c\u4e0d\u662f\u5355\u4f4d\u77e9\u9635\uff08\u5bf9\u89d2\u5143\u7d20\u4e3a1\uff0c\u5176\u5b83\u5143\u7d20\u4e3a0\uff09\u3002\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f0.9.9\u62160.9.9\u4ee5\u4e0a\u7684\u7248\u672c\uff0c\u4f60\u9700\u8981\u5c06\u6240\u6709\u7684\u77e9\u9635\u521d\u59cb\u5316\u6539\u4e3a glm::mat4 mat = glm::mat4(1.0f) \u3002\u5982\u679c\u4f60\u60f3\u4e0e\u672c\u6559\u7a0b\u7684\u4ee3\u7801\u4fdd\u6301\u4e00\u81f4\uff0c\u8bf7\u4f7f\u7528\u4f4e\u4e8e0.9.9\u7248\u672c\u7684GLM\uff0c\u6216\u8005\u6539\u7528\u4e0a\u8ff0\u4ee3\u7801\u521d\u59cb\u5316\u6240\u6709\u7684\u77e9\u9635\u3002 \u6211\u4eec\u9700\u8981\u7684GLM\u7684\u5927\u591a\u6570\u529f\u80fd\u90fd\u53ef\u4ee5\u4ece\u4e0b\u9762\u8fd93\u4e2a\u5934\u6587\u4ef6\u4e2d\u627e\u5230\uff1a #include <glm/glm.hpp> #include <glm/gtc/matrix_transform.hpp> #include <glm/gtc/type_ptr.hpp> \u6211\u4eec\u6765\u770b\u770b\u662f\u5426\u53ef\u4ee5\u5229\u7528\u6211\u4eec\u521a\u5b66\u7684\u53d8\u6362\u77e5\u8bc6\u628a\u4e00\u4e2a\u5411\u91cf(1, 0, 0)\u4f4d\u79fb(1, 1, 0)\u4e2a\u5355\u4f4d\uff08\u6ce8\u610f\uff0c\u6211\u4eec\u628a\u5b83\u5b9a\u4e49\u4e3a\u4e00\u4e2a glm::vec4 \u7c7b\u578b\u7684\u503c\uff0c\u9f50\u6b21\u5750\u6807\u8bbe\u5b9a\u4e3a1.0\uff09\uff1a glm::vec4 vec(1.0f, 0.0f, 0.0f, 1.0f); // \u8bd1\u6ce8\uff1a\u4e0b\u9762\u5c31\u662f\u77e9\u9635\u521d\u59cb\u5316\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u4f7f\u7528\u7684\u662f0.9.9\u53ca\u4ee5\u4e0a\u7248\u672c // \u4e0b\u9762\u8fd9\u884c\u4ee3\u7801\u5c31\u9700\u8981\u6539\u4e3a: // glm::mat4 trans = glm::mat4(1.0f) // \u4e4b\u540e\u5c06\u4e0d\u518d\u8fdb\u884c\u63d0\u793a glm::mat4 trans; trans = glm::translate(trans, glm::vec3(1.0f, 1.0f, 0.0f)); vec = trans * vec; std::cout << vec.x << vec.y << vec.z << std::endl; \u6211\u4eec\u5148\u7528GLM\u5185\u5efa\u7684\u5411\u91cf\u7c7b\u5b9a\u4e49\u4e00\u4e2a\u53eb\u505a vec \u7684\u5411\u91cf\u3002\u63a5\u4e0b\u6765\u5b9a\u4e49\u4e00\u4e2a mat4 \u7c7b\u578b\u7684 trans \uff0c\u9ed8\u8ba4\u662f\u4e00\u4e2a4\u00d74\u5355\u4f4d\u77e9\u9635\u3002\u4e0b\u4e00\u6b65\u662f\u521b\u5efa\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\uff0c\u6211\u4eec\u662f\u628a\u5355\u4f4d\u77e9\u9635\u548c\u4e00\u4e2a\u4f4d\u79fb\u5411\u91cf\u4f20\u9012\u7ed9 glm::translate \u51fd\u6570\u6765\u5b8c\u6210\u8fd9\u4e2a\u5de5\u4f5c\u7684\uff08\u7136\u540e\u7528\u7ed9\u5b9a\u7684\u77e9\u9635\u4e58\u4ee5\u4f4d\u79fb\u77e9\u9635\u5c31\u80fd\u83b7\u5f97\u6700\u540e\u9700\u8981\u7684\u77e9\u9635\uff09\u3002 \u4e4b\u540e\u6211\u4eec\u628a\u5411\u91cf\u4e58\u4ee5\u4f4d\u79fb\u77e9\u9635\u5e76\u4e14\u8f93\u51fa\u6700\u540e\u7684\u7ed3\u679c\u3002\u5982\u679c\u4f60\u4ecd\u8bb0\u5f97\u4f4d\u79fb\u77e9\u9635\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u8bdd\uff0c\u5f97\u5230\u7684\u5411\u91cf\u5e94\u8be5\u662f(1 + 1, 0 + 1, 0 + 0)\uff0c\u4e5f\u5c31\u662f(2, 1, 0)\u3002\u8fd9\u4e2a\u4ee3\u7801\u7247\u6bb5\u5c06\u4f1a\u8f93\u51fa 210 \uff0c\u6240\u4ee5\u8fd9\u4e2a\u4f4d\u79fb\u77e9\u9635\u662f\u6b63\u786e\u7684\u3002 \u6211\u4eec\u6765\u505a\u4e9b\u66f4\u6709\u610f\u601d\u7684\u4e8b\u60c5\uff0c\u8ba9\u6211\u4eec\u6765\u65cb\u8f6c\u548c\u7f29\u653e\u4e4b\u524d\u6559\u7a0b\u4e2d\u7684\u90a3\u4e2a\u7bb1\u5b50\u3002\u9996\u5148\u6211\u4eec\u628a\u7bb1\u5b50\u9006\u65f6\u9488\u65cb\u8f6c90\u5ea6\u3002\u7136\u540e\u7f29\u653e0.5\u500d\uff0c\u4f7f\u5b83\u53d8\u6210\u539f\u6765\u7684\u4e00\u534a\u5927\u3002\u6211\u4eec\u5148\u6765\u521b\u5efa\u53d8\u6362\u77e9\u9635\uff1a glm::mat4 trans; trans = glm::rotate(trans, glm::radians(90.0f), glm::vec3(0.0, 0.0, 1.0)); trans = glm::scale(trans, glm::vec3(0.5, 0.5, 0.5)); \u9996\u5148\uff0c\u6211\u4eec\u628a\u7bb1\u5b50\u5728\u6bcf\u4e2a\u8f74\u90fd\u7f29\u653e\u52300.5\u500d\uff0c\u7136\u540e\u6cbfz\u8f74\u65cb\u8f6c90\u5ea6\u3002GLM\u5e0c\u671b\u5b83\u7684\u89d2\u5ea6\u662f\u5f27\u5ea6\u5236\u7684(Radian)\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528 glm::radians \u5c06\u89d2\u5ea6\u8f6c\u5316\u4e3a\u5f27\u5ea6\u3002\u6ce8\u610f\u6709\u7eb9\u7406\u7684\u90a3\u9762\u77e9\u5f62\u662f\u5728XY\u5e73\u9762\u4e0a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u628a\u5b83\u7ed5\u7740z\u8f74\u65cb\u8f6c\u3002\u56e0\u4e3a\u6211\u4eec\u628a\u8fd9\u4e2a\u77e9\u9635\u4f20\u9012\u7ed9\u4e86GLM\u7684\u6bcf\u4e2a\u51fd\u6570\uff0cGLM\u4f1a\u81ea\u52a8\u5c06\u77e9\u9635\u76f8\u4e58\uff0c\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u5305\u62ec\u4e86\u591a\u4e2a\u53d8\u6362\u7684\u53d8\u6362\u77e9\u9635\u3002 \u4e0b\u4e00\u4e2a\u5927\u95ee\u9898\u662f\uff1a\u5982\u4f55\u628a\u77e9\u9635\u4f20\u9012\u7ed9\u7740\u8272\u5668\uff1f\u6211\u4eec\u5728\u524d\u9762\u7b80\u5355\u63d0\u5230\u8fc7GLSL\u91cc\u4e5f\u6709\u4e00\u4e2a mat4 \u7c7b\u578b\u3002\u6240\u4ee5\u6211\u4eec\u5c06\u4fee\u6539\u9876\u70b9\u7740\u8272\u5668\u8ba9\u5176\u63a5\u6536\u4e00\u4e2a mat4 \u7684uniform\u53d8\u91cf\uff0c\u7136\u540e\u518d\u7528\u77e9\u9635uniform\u4e58\u4ee5\u4f4d\u7f6e\u5411\u91cf\uff1a #version 330 core layout (location = 0) in vec3 aPos; layout (location = 1) in vec2 aTexCoord; out vec2 TexCoord; uniform mat4 transform; void main() { gl_Position = transform * vec4(aPos, 1.0f); TexCoord = vec2(aTexCoord.x, aTexCoord.y); } Attention GLSL\u4e5f\u6709 mat2 \u548c mat3 \u7c7b\u578b\u4ece\u800c\u5141\u8bb8\u4e86\u50cf\u5411\u91cf\u4e00\u6837\u7684\u6df7\u5408\u8fd0\u7b97\u3002\u524d\u9762\u63d0\u5230\u7684\u6240\u6709\u6570\u5b66\u8fd0\u7b97\uff08\u50cf\u662f\u6807\u91cf-\u77e9\u9635\u76f8\u4e58\uff0c\u77e9\u9635-\u5411\u91cf\u76f8\u4e58\u548c\u77e9\u9635-\u77e9\u9635\u76f8\u4e58\uff09\u5728\u77e9\u9635\u7c7b\u578b\u91cc\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002\u5f53\u51fa\u73b0\u7279\u6b8a\u7684\u77e9\u9635\u8fd0\u7b97\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u7279\u522b\u8bf4\u660e\u3002 \u5728\u628a\u4f4d\u7f6e\u5411\u91cf\u4f20\u7ed9 gl_Position \u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6dfb\u52a0\u4e00\u4e2auniform\uff0c\u5e76\u4e14\u5c06\u5176\u4e0e\u53d8\u6362\u77e9\u9635\u76f8\u4e58\u3002\u6211\u4eec\u7684\u7bb1\u5b50\u73b0\u5728\u5e94\u8be5\u662f\u539f\u6765\u7684\u4e8c\u5206\u4e4b\u4e00\u5927\u5c0f\u5e76\uff08\u5411\u5de6\uff09\u65cb\u8f6c\u4e8690\u5ea6\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4ecd\u9700\u8981\u628a\u53d8\u6362\u77e9\u9635\u4f20\u9012\u7ed9\u7740\u8272\u5668\uff1a unsigned int transformLoc = glGetUniformLocation(ourShader.ID, \"transform\"); glUniformMatrix4fv(transformLoc, 1, GL_FALSE, glm::value_ptr(trans)); \u6211\u4eec\u9996\u5148\u67e5\u8be2uniform\u53d8\u91cf\u7684\u5730\u5740\uff0c\u7136\u540e\u7528\u6709 Matrix4fv \u540e\u7f00\u7684 glUniform \u51fd\u6570\u628a\u77e9\u9635\u6570\u636e\u53d1\u9001\u7ed9\u7740\u8272\u5668\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f60\u73b0\u5728\u5e94\u8be5\u5f88\u719f\u6089\u4e86\uff0c\u5b83\u662funiform\u7684\u4f4d\u7f6e\u503c\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u544a\u8bc9OpenGL\u6211\u4eec\u5c06\u8981\u53d1\u9001\u591a\u5c11\u4e2a\u77e9\u9635\uff0c\u8fd9\u91cc\u662f1\u3002\u7b2c\u4e09\u4e2a\u53c2\u6570\u8be2\u95ee\u6211\u4eec\u662f\u5426\u5e0c\u671b\u5bf9\u6211\u4eec\u7684\u77e9\u9635\u8fdb\u884c\u8f6c\u7f6e(Transpose)\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ea4\u6362\u6211\u4eec\u77e9\u9635\u7684\u884c\u548c\u5217\u3002OpenGL\u5f00\u53d1\u8005\u901a\u5e38\u4f7f\u7528\u4e00\u79cd\u5185\u90e8\u77e9\u9635\u5e03\u5c40\uff0c\u53eb\u505a \u5217\u4e3b\u5e8f (Column-major Ordering)\u5e03\u5c40\u3002GLM\u7684\u9ed8\u8ba4\u5e03\u5c40\u5c31\u662f\u5217\u4e3b\u5e8f\uff0c\u6240\u4ee5\u5e76\u4e0d\u9700\u8981\u8f6c\u7f6e\u77e9\u9635\uff0c\u6211\u4eec\u586b GL_FALSE \u3002\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u662f\u771f\u6b63\u7684\u77e9\u9635\u6570\u636e\uff0c\u4f46\u662fGLM\u5e76\u4e0d\u662f\u628a\u5b83\u4eec\u7684\u77e9\u9635\u50a8\u5b58\u4e3aOpenGL\u6240\u5e0c\u671b\u63a5\u53d7\u7684\u90a3\u79cd\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u5148\u7528GLM\u7684\u81ea\u5e26\u7684\u51fd\u6570 value_ptr \u6765\u53d8\u6362\u8fd9\u4e9b\u6570\u636e\u3002 \u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\uff0c\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u58f0\u660e\u4e86\u4e00\u4e2auniform\uff0c\u5e76\u628a\u77e9\u9635\u53d1\u9001\u7ed9\u4e86\u7740\u8272\u5668\uff0c\u7740\u8272\u5668\u4f1a\u53d8\u6362\u6211\u4eec\u7684\u9876\u70b9\u5750\u6807\u3002\u6700\u540e\u7684\u7ed3\u679c\u5e94\u8be5\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a \u5b8c\u7f8e\uff01\u6211\u4eec\u7684\u7bb1\u5b50\u5411\u5de6\u4fa7\u65cb\u8f6c\uff0c\u5e76\u662f\u539f\u6765\u7684\u4e00\u534a\u5927\u5c0f\uff0c\u6240\u4ee5\u53d8\u6362\u6210\u529f\u4e86\u3002\u6211\u4eec\u73b0\u5728\u505a\u4e9b\u66f4\u6709\u610f\u601d\u7684\uff0c\u770b\u770b\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u8ba9\u7bb1\u5b50\u968f\u7740\u65f6\u95f4\u65cb\u8f6c\uff0c\u6211\u4eec\u8fd8\u4f1a\u91cd\u65b0\u628a\u7bb1\u5b50\u653e\u5728\u7a97\u53e3\u7684\u53f3\u4e0b\u89d2\u3002\u8981\u8ba9\u7bb1\u5b50\u968f\u7740\u65f6\u95f4\u63a8\u79fb\u65cb\u8f6c\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u6e38\u620f\u5faa\u73af\u4e2d\u66f4\u65b0\u53d8\u6362\u77e9\u9635\uff0c\u56e0\u4e3a\u5b83\u5728\u6bcf\u4e00\u6b21\u6e32\u67d3\u8fed\u4ee3\u4e2d\u90fd\u8981\u66f4\u65b0\u3002\u6211\u4eec\u4f7f\u7528GLFW\u7684\u65f6\u95f4\u51fd\u6570\u6765\u83b7\u53d6\u4e0d\u540c\u65f6\u95f4\u7684\u89d2\u5ea6\uff1a glm::mat4 trans; trans = glm::translate(trans, glm::vec3(0.5f, -0.5f, 0.0f)); trans = glm::rotate(trans, (float)glfwGetTime(), glm::vec3(0.0f, 0.0f, 1.0f)); \u8981\u8bb0\u4f4f\u7684\u662f\u524d\u9762\u7684\u4f8b\u5b50\u4e2d\u6211\u4eec\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u58f0\u660e\u53d8\u6362\u77e9\u9635\uff0c\u4f46\u662f\u73b0\u5728\u6211\u4eec\u5fc5\u987b\u5728\u6bcf\u4e00\u6b21\u8fed\u4ee3\u4e2d\u521b\u5efa\u5b83\uff0c\u4ece\u800c\u4fdd\u8bc1\u6211\u4eec\u80fd\u591f\u4e0d\u65ad\u66f4\u65b0\u65cb\u8f6c\u89d2\u5ea6\u3002\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u6211\u4eec\u4e0d\u5f97\u4e0d\u5728\u6bcf\u6b21\u6e38\u620f\u5faa\u73af\u7684\u8fed\u4ee3\u4e2d\u91cd\u65b0\u521b\u5efa\u53d8\u6362\u77e9\u9635\u3002\u901a\u5e38\u5728\u6e32\u67d3\u573a\u666f\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e5f\u4f1a\u6709\u591a\u4e2a\u9700\u8981\u5728\u6bcf\u6b21\u6e32\u67d3\u8fed\u4ee3\u4e2d\u90fd\u7528\u65b0\u503c\u91cd\u65b0\u521b\u5efa\u7684\u53d8\u6362\u77e9\u9635 \u5728\u8fd9\u91cc\u6211\u4eec\u5148\u628a\u7bb1\u5b50\u56f4\u7ed5\u539f\u70b9(0, 0, 0)\u65cb\u8f6c\uff0c\u4e4b\u540e\uff0c\u6211\u4eec\u628a\u65cb\u8f6c\u8fc7\u540e\u7684\u7bb1\u5b50\u4f4d\u79fb\u5230\u5c4f\u5e55\u7684\u53f3\u4e0b\u89d2\u3002\u8bb0\u4f4f\uff0c\u5b9e\u9645\u7684\u53d8\u6362\u987a\u5e8f\u5e94\u8be5\u4e0e\u9605\u8bfb\u987a\u5e8f\u76f8\u53cd\uff1a\u5c3d\u7ba1\u5728\u4ee3\u7801\u4e2d\u6211\u4eec\u5148\u4f4d\u79fb\u518d\u65cb\u8f6c\uff0c\u5b9e\u9645\u7684\u53d8\u6362\u5374\u662f\u5148\u5e94\u7528\u65cb\u8f6c\u518d\u662f\u4f4d\u79fb\u7684\u3002\u660e\u767d\u6240\u6709\u8fd9\u4e9b\u53d8\u6362\u7684\u7ec4\u5408\uff0c\u5e76\u4e14\u77e5\u9053\u5b83\u4eec\u662f\u5982\u4f55\u5e94\u7528\u5230\u7269\u4f53\u4e0a\u662f\u4e00\u4ef6\u975e\u5e38\u56f0\u96be\u7684\u4e8b\u60c5\u3002\u53ea\u6709\u4e0d\u65ad\u5730\u5c1d\u8bd5\u548c\u5b9e\u9a8c\u8fd9\u4e9b\u53d8\u6362\u4f60\u624d\u80fd\u5feb\u901f\u5730\u638c\u63e1\u5b83\u4eec\u3002 \u5982\u679c\u4f60\u505a\u5bf9\u4e86\uff0c\u4f60\u5c06\u770b\u5230\u4e0b\u9762\u7684\u7ed3\u679c\uff1a \u8fd9\u5c31\u662f\u6211\u4eec\u521a\u521a\u505a\u5230\u7684\uff01\u4e00\u4e2a\u4f4d\u79fb\u8fc7\u7684\u7bb1\u5b50\uff0c\u5b83\u4f1a\u4e00\u76f4\u8f6c\uff0c\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\u5c31\u505a\u5230\u4e86\uff01\u73b0\u5728\u4f60\u53ef\u4ee5\u660e\u767d\u4e3a\u4ec0\u4e48\u77e9\u9635\u5728\u56fe\u5f62\u9886\u57df\u662f\u4e00\u4e2a\u5982\u6b64\u91cd\u8981\u7684\u5de5\u5177\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u65e0\u9650\u6570\u91cf\u7684\u53d8\u6362\uff0c\u800c\u628a\u5b83\u4eec\u7ec4\u5408\u4e3a\u4ec5\u4ec5\u4e00\u4e2a\u77e9\u9635\uff0c\u5982\u679c\u613f\u610f\u7684\u8bdd\u6211\u4eec\u8fd8\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u5b83\u3002\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u77e9\u9635\u53ef\u4ee5\u7701\u53bb\u91cd\u65b0\u5b9a\u4e49\u9876\u70b9\u6570\u636e\u7684\u529f\u592b\uff0c\u5b83\u4e5f\u80fd\u591f\u8282\u7701\u5904\u7406\u65f6\u95f4\uff0c\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u4e00\u76f4\u91cd\u65b0\u53d1\u9001\u6211\u4eec\u7684\u6570\u636e\uff08\u8fd9\u662f\u4e2a\u975e\u5e38\u6162\u7684\u8fc7\u7a0b\uff09\u3002 \u5982\u679c\u4f60\u6ca1\u6709\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u6216\u8005\u4f60\u6709\u54ea\u513f\u4e0d\u6e05\u695a\u7684\u5730\u65b9\u3002\u53ef\u4ee5\u770b \u6e90\u7801 \u3002 \u4e0b\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u4f1a\u8ba8\u8bba\u600e\u6837\u4f7f\u7528\u77e9\u9635\u4e3a\u9876\u70b9\u5b9a\u4e49\u4e0d\u540c\u7684\u5750\u6807\u7a7a\u95f4\u3002\u8fd9\u5c06\u662f\u6211\u4eec\u8fdb\u5165\u5b9e\u65f63D\u56fe\u50cf\u7684\u7b2c\u4e00\u6b65\uff01","title":"GLM"},{"location":"01%20Getting%20started/07%20Transformations/#_21","text":"\u7ebf\u6027\u4ee3\u6570\u7684\u672c\u8d28 \uff1aGrant Sanderson\u5236\u4f5c\u7684\u975e\u5e38\u68d2\u7684\u89c6\u9891\u6559\u7a0b\u7cfb\u5217\uff0c\u5b83\u8ba8\u8bba\u4e86\u53d8\u6362\u548c\u7ebf\u6027\u4ee3\u6570\u5185\u5728\u7684\u6570\u5b66\u672c\u8d28\uff08 \u4e2d\u6587\u5b57\u5e55\u7248\u672c \uff09\u3002","title":"\u62d3\u5c55\u9605\u8bfb"},{"location":"01%20Getting%20started/07%20Transformations/#_22","text":"\u4f7f\u7528\u5e94\u7528\u5728\u7bb1\u5b50\u4e0a\u7684\u6700\u540e\u4e00\u4e2a\u53d8\u6362\uff0c\u5c1d\u8bd5\u5c06\u5176\u6539\u53d8\u4e3a\u5148\u65cb\u8f6c\uff0c\u540e\u4f4d\u79fb\u3002\u770b\u770b\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u8bd5\u7740\u60f3\u60f3\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u8fd9\u6837\u7684\u4e8b\u60c5\uff1a \u53c2\u8003\u89e3\u7b54 \u5c1d\u8bd5\u518d\u6b21\u8c03\u7528 glDrawElements \u753b\u51fa\u7b2c\u4e8c\u4e2a\u7bb1\u5b50\uff0c \u53ea \u4f7f\u7528\u53d8\u6362\u5c06\u5176\u6446\u653e\u5728\u4e0d\u540c\u7684\u4f4d\u7f6e\u3002\u8ba9\u8fd9\u4e2a\u7bb1\u5b50\u88ab\u6446\u653e\u5728\u7a97\u53e3\u7684\u5de6\u4e0a\u89d2\uff0c\u5e76\u4e14\u4f1a\u4e0d\u65ad\u7684\u7f29\u653e\uff08\u800c\u4e0d\u662f\u65cb\u8f6c\uff09\u3002\uff08 sin \u51fd\u6570\u5728\u8fd9\u91cc\u4f1a\u5f88\u6709\u7528\uff0c\u4e0d\u8fc7\u6ce8\u610f\u4f7f\u7528 sin \u51fd\u6570\u65f6\u5e94\u7528\u8d1f\u503c\u4f1a\u5bfc\u81f4\u7269\u4f53\u88ab\u7ffb\u8f6c\uff09\uff1a \u53c2\u8003\u89e3\u7b54","title":"\u7ec3\u4e60"},{"location":"01%20Getting%20started/08%20Coordinate%20Systems/","text":"\u5750\u6807\u7cfb\u7edf \u539f\u6587 Coordinate Systems \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 linkoln, Geequlim, Krasjet, BLumia \u6821\u5bf9 AoZhang \u5728\u4e0a\u4e00\u4e2a\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5b66\u4e60\u4e86\u5982\u4f55\u6709\u6548\u5730\u5229\u7528\u77e9\u9635\u7684\u53d8\u6362\u6765\u5bf9\u6240\u6709\u9876\u70b9\u8fdb\u884c\u53d8\u6362\u3002OpenGL\u5e0c\u671b\u5728\u6bcf\u6b21\u9876\u70b9\u7740\u8272\u5668\u8fd0\u884c\u540e\uff0c\u6211\u4eec\u53ef\u89c1\u7684\u6240\u6709\u9876\u70b9\u90fd\u4e3a\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807(Normalized Device Coordinate, NDC)\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e2a\u9876\u70b9\u7684 x \uff0c y \uff0c z \u5750\u6807\u90fd\u5e94\u8be5\u5728 -1.0 \u5230 1.0 \u4e4b\u95f4\uff0c\u8d85\u51fa\u8fd9\u4e2a\u5750\u6807\u8303\u56f4\u7684\u9876\u70b9\u90fd\u5c06\u4e0d\u53ef\u89c1\u3002\u6211\u4eec\u901a\u5e38\u4f1a\u81ea\u5df1\u8bbe\u5b9a\u4e00\u4e2a\u5750\u6807\u7684\u8303\u56f4\uff0c\u4e4b\u540e\u518d\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5c06\u8fd9\u4e9b\u5750\u6807\u53d8\u6362\u4e3a\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u3002\u7136\u540e\u5c06\u8fd9\u4e9b\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u4f20\u5165\u5149\u6805\u5668(Rasterizer)\uff0c\u5c06\u5b83\u4eec\u53d8\u6362\u4e3a\u5c4f\u5e55\u4e0a\u7684\u4e8c\u7ef4\u5750\u6807\u6216\u50cf\u7d20\u3002 \u5c06\u5750\u6807\u53d8\u6362\u4e3a\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\uff0c\u63a5\u7740\u518d\u8f6c\u5316\u4e3a\u5c4f\u5e55\u5750\u6807\u7684\u8fc7\u7a0b\u901a\u5e38\u662f\u5206\u6b65\u8fdb\u884c\u7684\uff0c\u4e5f\u5c31\u662f\u7c7b\u4f3c\u4e8e\u6d41\u6c34\u7ebf\u90a3\u6837\u5b50\u3002\u5728\u6d41\u6c34\u7ebf\u4e2d\uff0c\u7269\u4f53\u7684\u9876\u70b9\u5728\u6700\u7ec8\u8f6c\u5316\u4e3a\u5c4f\u5e55\u5750\u6807\u4e4b\u524d\u8fd8\u4f1a\u88ab\u53d8\u6362\u5230\u591a\u4e2a\u5750\u6807\u7cfb\u7edf(Coordinate System)\u3002\u5c06\u7269\u4f53\u7684\u5750\u6807\u53d8\u6362\u5230\u51e0\u4e2a \u8fc7\u6e21 \u5750\u6807\u7cfb(Intermediate Coordinate System)\u7684\u4f18\u70b9\u5728\u4e8e\uff0c\u5728\u8fd9\u4e9b\u7279\u5b9a\u7684\u5750\u6807\u7cfb\u7edf\u4e2d\uff0c\u4e00\u4e9b\u64cd\u4f5c\u6216\u8fd0\u7b97\u66f4\u52a0\u65b9\u4fbf\u548c\u5bb9\u6613\uff0c\u8fd9\u4e00\u70b9\u5f88\u5feb\u5c31\u4f1a\u53d8\u5f97\u5f88\u660e\u663e\u3002\u5bf9\u6211\u4eec\u6765\u8bf4\u6bd4\u8f83\u91cd\u8981\u7684\u603b\u5171\u67095\u4e2a\u4e0d\u540c\u7684\u5750\u6807\u7cfb\u7edf\uff1a \u5c40\u90e8\u7a7a\u95f4(Local Space\uff0c\u6216\u8005\u79f0\u4e3a\u7269\u4f53\u7a7a\u95f4(Object Space)) \u4e16\u754c\u7a7a\u95f4(World Space) \u89c2\u5bdf\u7a7a\u95f4(View Space\uff0c\u6216\u8005\u79f0\u4e3a\u89c6\u89c9\u7a7a\u95f4(Eye Space)) \u88c1\u526a\u7a7a\u95f4(Clip Space) \u5c4f\u5e55\u7a7a\u95f4(Screen Space) \u8fd9\u5c31\u662f\u4e00\u4e2a\u9876\u70b9\u5728\u6700\u7ec8\u88ab\u8f6c\u5316\u4e3a\u7247\u6bb5\u4e4b\u524d\u9700\u8981\u7ecf\u5386\u7684\u6240\u6709\u4e0d\u540c\u72b6\u6001\u3002 \u4f60\u73b0\u5728\u53ef\u80fd\u4f1a\u5bf9\u4ec0\u4e48\u662f\u5750\u6807\u7a7a\u95f4\uff0c\u4ec0\u4e48\u662f\u5750\u6807\u7cfb\u7edf\u611f\u5230\u975e\u5e38\u56f0\u60d1\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u7528\u4e00\u79cd\u66f4\u52a0\u901a\u4fd7\u7684\u65b9\u5f0f\u6765\u89e3\u91ca\u5b83\u4eec\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u5c06\u663e\u793a\u4e00\u4e2a\u6574\u4f53\u7684\u56fe\u7247\uff0c\u4e4b\u540e\u6211\u4eec\u4f1a\u8bb2\u89e3\u6bcf\u4e2a\u7a7a\u95f4\u7684\u5177\u4f53\u529f\u80fd\u3002 \u6982\u8ff0 \u4e3a\u4e86\u5c06\u5750\u6807\u4ece\u4e00\u4e2a\u5750\u6807\u7cfb\u53d8\u6362\u5230\u53e6\u4e00\u4e2a\u5750\u6807\u7cfb\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u51e0\u4e2a\u53d8\u6362\u77e9\u9635\uff0c\u6700\u91cd\u8981\u7684\u51e0\u4e2a\u5206\u522b\u662f \u6a21\u578b (Model)\u3001 \u89c2\u5bdf (View)\u3001 \u6295\u5f71 (Projection)\u4e09\u4e2a\u77e9\u9635\u3002\u6211\u4eec\u7684\u9876\u70b9\u5750\u6807\u8d77\u59cb\u4e8e \u5c40\u90e8\u7a7a\u95f4 (Local Space)\uff0c\u5728\u8fd9\u91cc\u5b83\u79f0\u4e3a \u5c40\u90e8\u5750\u6807 (Local Coordinate)\uff0c\u5b83\u5728\u4e4b\u540e\u4f1a\u53d8\u4e3a \u4e16\u754c\u5750\u6807 (World Coordinate)\uff0c \u89c2\u5bdf\u5750\u6807 (View Coordinate)\uff0c \u88c1\u526a\u5750\u6807 (Clip Coordinate)\uff0c\u5e76\u6700\u540e\u4ee5 \u5c4f\u5e55\u5750\u6807 (Screen Coordinate)\u7684\u5f62\u5f0f\u7ed3\u675f\u3002\u4e0b\u9762\u7684\u8fd9\u5f20\u56fe\u5c55\u793a\u4e86\u6574\u4e2a\u6d41\u7a0b\u4ee5\u53ca\u5404\u4e2a\u53d8\u6362\u8fc7\u7a0b\u505a\u4e86\u4ec0\u4e48\uff1a \u5c40\u90e8\u5750\u6807\u662f\u5bf9\u8c61\u76f8\u5bf9\u4e8e\u5c40\u90e8\u539f\u70b9\u7684\u5750\u6807\uff0c\u4e5f\u662f\u7269\u4f53\u8d77\u59cb\u7684\u5750\u6807\u3002 \u4e0b\u4e00\u6b65\u662f\u5c06\u5c40\u90e8\u5750\u6807\u53d8\u6362\u4e3a\u4e16\u754c\u7a7a\u95f4\u5750\u6807\uff0c\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u662f\u5904\u4e8e\u4e00\u4e2a\u66f4\u5927\u7684\u7a7a\u95f4\u8303\u56f4\u7684\u3002\u8fd9\u4e9b\u5750\u6807\u76f8\u5bf9\u4e8e\u4e16\u754c\u7684\u5168\u5c40\u539f\u70b9\uff0c\u5b83\u4eec\u4f1a\u548c\u5176\u5b83\u7269\u4f53\u4e00\u8d77\u76f8\u5bf9\u4e8e\u4e16\u754c\u7684\u539f\u70b9\u8fdb\u884c\u6446\u653e\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u4e16\u754c\u5750\u6807\u53d8\u6362\u4e3a\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5750\u6807\u90fd\u662f\u4ece\u6444\u50cf\u673a\u6216\u8005\u8bf4\u89c2\u5bdf\u8005\u7684\u89d2\u5ea6\u8fdb\u884c\u89c2\u5bdf\u7684\u3002 \u5750\u6807\u5230\u8fbe\u89c2\u5bdf\u7a7a\u95f4\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u6295\u5f71\u5230\u88c1\u526a\u5750\u6807\u3002\u88c1\u526a\u5750\u6807\u4f1a\u88ab\u5904\u7406\u81f3-1.0\u52301.0\u7684\u8303\u56f4\u5185\uff0c\u5e76\u5224\u65ad\u54ea\u4e9b\u9876\u70b9\u5c06\u4f1a\u51fa\u73b0\u5728\u5c4f\u5e55\u4e0a\u3002 \u6700\u540e\uff0c\u6211\u4eec\u5c06\u88c1\u526a\u5750\u6807\u53d8\u6362\u4e3a\u5c4f\u5e55\u5750\u6807\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u53eb\u505a \u89c6\u53e3\u53d8\u6362 (Viewport Transform)\u7684\u8fc7\u7a0b\u3002\u89c6\u53e3\u53d8\u6362\u5c06\u4f4d\u4e8e-1.0\u52301.0\u8303\u56f4\u7684\u5750\u6807\u53d8\u6362\u5230\u7531 glViewport \u51fd\u6570\u6240\u5b9a\u4e49\u7684\u5750\u6807\u8303\u56f4\u5185\u3002\u6700\u540e\u53d8\u6362\u51fa\u6765\u7684\u5750\u6807\u5c06\u4f1a\u9001\u5230\u5149\u6805\u5668\uff0c\u5c06\u5176\u8f6c\u5316\u4e3a\u7247\u6bb5\u3002 \u4f60\u53ef\u80fd\u5df2\u7ecf\u5927\u81f4\u4e86\u89e3\u4e86\u6bcf\u4e2a\u5750\u6807\u7a7a\u95f4\u7684\u4f5c\u7528\u3002\u6211\u4eec\u4e4b\u6240\u4ee5\u5c06\u9876\u70b9\u53d8\u6362\u5230\u5404\u4e2a\u4e0d\u540c\u7684\u7a7a\u95f4\u7684\u539f\u56e0\u662f\u6709\u4e9b\u64cd\u4f5c\u5728\u7279\u5b9a\u7684\u5750\u6807\u7cfb\u7edf\u4e2d\u624d\u6709\u610f\u4e49\u4e14\u66f4\u65b9\u4fbf\u3002\u4f8b\u5982\uff0c\u5f53\u9700\u8981\u5bf9\u7269\u4f53\u8fdb\u884c\u4fee\u6539\u7684\u65f6\u5019\uff0c\u5728\u5c40\u90e8\u7a7a\u95f4\u4e2d\u6765\u64cd\u4f5c\u4f1a\u66f4\u8bf4\u5f97\u901a\uff1b\u5982\u679c\u8981\u5bf9\u4e00\u4e2a\u7269\u4f53\u505a\u51fa\u4e00\u4e2a\u76f8\u5bf9\u4e8e\u5176\u5b83\u7269\u4f53\u4f4d\u7f6e\u7684\u64cd\u4f5c\u65f6\uff0c\u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\u6765\u505a\u8fd9\u4e2a\u624d\u66f4\u8bf4\u5f97\u901a\uff0c\u7b49\u7b49\u3002\u5982\u679c\u6211\u4eec\u613f\u610f\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u76f4\u63a5\u4ece\u5c40\u90e8\u7a7a\u95f4\u53d8\u6362\u5230\u88c1\u526a\u7a7a\u95f4\u7684\u53d8\u6362\u77e9\u9635\uff0c\u4f46\u90a3\u6837\u4f1a\u5931\u53bb\u5f88\u591a\u7075\u6d3b\u6027\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u8981\u66f4\u4ed4\u7ec6\u5730\u8ba8\u8bba\u5404\u4e2a\u5750\u6807\u7cfb\u7edf\u3002 \u5c40\u90e8\u7a7a\u95f4 \u5c40\u90e8\u7a7a\u95f4\u662f\u6307\u7269\u4f53\u6240\u5728\u7684\u5750\u6807\u7a7a\u95f4\uff0c\u5373\u5bf9\u8c61\u6700\u5f00\u59cb\u6240\u5728\u7684\u5730\u65b9\u3002\u60f3\u8c61\u4f60\u5728\u4e00\u4e2a\u5efa\u6a21\u8f6f\u4ef6\uff08\u6bd4\u5982\u8bf4Blender\uff09\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u7acb\u65b9\u4f53\u3002\u4f60\u521b\u5efa\u7684\u7acb\u65b9\u4f53\u7684\u539f\u70b9\u6709\u53ef\u80fd\u4f4d\u4e8e(0, 0, 0)\uff0c\u5373\u4fbf\u5b83\u6709\u53ef\u80fd\u6700\u540e\u5728\u7a0b\u5e8f\u4e2d\u5904\u4e8e\u5b8c\u5168\u4e0d\u540c\u7684\u4f4d\u7f6e\u3002\u751a\u81f3\u6709\u53ef\u80fd\u4f60\u521b\u5efa\u7684\u6240\u6709\u6a21\u578b\u90fd\u4ee5(0, 0, 0)\u4e3a\u521d\u59cb\u4f4d\u7f6e\uff08\u8bd1\u6ce8\uff1a\u7136\u800c\u5b83\u4eec\u4f1a\u6700\u7ec8\u51fa\u73b0\u5728\u4e16\u754c\u7684\u4e0d\u540c\u4f4d\u7f6e\uff09\u3002\u6240\u4ee5\uff0c\u4f60\u7684\u6a21\u578b\u7684\u6240\u6709\u9876\u70b9\u90fd\u662f\u5728 \u5c40\u90e8 \u7a7a\u95f4\u4e2d\uff1a\u5b83\u4eec\u76f8\u5bf9\u4e8e\u4f60\u7684\u7269\u4f53\u6765\u8bf4\u90fd\u662f\u5c40\u90e8\u7684\u3002 \u6211\u4eec\u4e00\u76f4\u4f7f\u7528\u7684\u90a3\u4e2a\u7bb1\u5b50\u7684\u9876\u70b9\u662f\u88ab\u8bbe\u5b9a\u5728-0.5\u52300.5\u7684\u5750\u6807\u8303\u56f4\u4e2d\uff0c(0, 0)\u662f\u5b83\u7684\u539f\u70b9\u3002\u8fd9\u4e9b\u90fd\u662f\u5c40\u90e8\u5750\u6807\u3002 \u4e16\u754c\u7a7a\u95f4 \u5982\u679c\u6211\u4eec\u5c06\u6211\u4eec\u6240\u6709\u7684\u7269\u4f53\u5bfc\u5165\u5230\u7a0b\u5e8f\u5f53\u4e2d\uff0c\u5b83\u4eec\u6709\u53ef\u80fd\u4f1a\u5168\u6324\u5728\u4e16\u754c\u7684\u539f\u70b9(0, 0, 0)\u4e0a\uff0c\u8fd9\u5e76\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u3002\u6211\u4eec\u60f3\u4e3a\u6bcf\u4e00\u4e2a\u7269\u4f53\u5b9a\u4e49\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4ece\u800c\u80fd\u5728\u66f4\u5927\u7684\u4e16\u754c\u5f53\u4e2d\u653e\u7f6e\u5b83\u4eec\u3002\u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u5750\u6807\u6b63\u5982\u5176\u540d\uff1a\u662f\u6307\u9876\u70b9\u76f8\u5bf9\u4e8e\uff08\u6e38\u620f\uff09\u4e16\u754c\u7684\u5750\u6807\u3002\u5982\u679c\u4f60\u5e0c\u671b\u5c06\u7269\u4f53\u5206\u6563\u5728\u4e16\u754c\u4e0a\u6446\u653e\uff08\u7279\u522b\u662f\u975e\u5e38\u771f\u5b9e\u7684\u90a3\u6837\uff09\uff0c\u8fd9\u5c31\u662f\u4f60\u5e0c\u671b\u7269\u4f53\u53d8\u6362\u5230\u7684\u7a7a\u95f4\u3002\u7269\u4f53\u7684\u5750\u6807\u5c06\u4f1a\u4ece\u5c40\u90e8\u53d8\u6362\u5230\u4e16\u754c\u7a7a\u95f4\uff1b\u8be5\u53d8\u6362\u662f\u7531 \u6a21\u578b \u77e9\u9635(Model Matrix)\u5b9e\u73b0\u7684\u3002 \u6a21\u578b\u77e9\u9635\u662f\u4e00\u79cd\u53d8\u6362\u77e9\u9635\uff0c\u5b83\u80fd\u901a\u8fc7\u5bf9\u7269\u4f53\u8fdb\u884c\u4f4d\u79fb\u3001\u7f29\u653e\u3001\u65cb\u8f6c\u6765\u5c06\u5b83\u7f6e\u4e8e\u5b83\u672c\u5e94\u8be5\u5728\u7684\u4f4d\u7f6e\u6216\u671d\u5411\u3002\u4f60\u53ef\u4ee5\u5c06\u5b83\u60f3\u50cf\u4e3a\u53d8\u6362\u4e00\u4e2a\u623f\u5b50\uff0c\u4f60\u9700\u8981\u5148\u5c06\u5b83\u7f29\u5c0f\uff08\u5b83\u5728\u5c40\u90e8\u7a7a\u95f4\u4e2d\u592a\u5927\u4e86\uff09\uff0c\u5e76\u5c06\u5176\u4f4d\u79fb\u81f3\u90ca\u533a\u7684\u4e00\u4e2a\u5c0f\u9547\uff0c\u7136\u540e\u5728y\u8f74\u4e0a\u5f80\u5de6\u65cb\u8f6c\u4e00\u70b9\u4ee5\u642d\u914d\u9644\u8fd1\u7684\u623f\u5b50\u3002\u4f60\u4e5f\u53ef\u4ee5\u628a\u4e0a\u4e00\u8282\u5c06\u7bb1\u5b50\u5230\u5904\u6446\u653e\u5728\u573a\u666f\u4e2d\u7528\u7684\u90a3\u4e2a\u77e9\u9635\u5927\u81f4\u770b\u4f5c\u4e00\u4e2a\u6a21\u578b\u77e9\u9635\uff1b\u6211\u4eec\u5c06\u7bb1\u5b50\u7684\u5c40\u90e8\u5750\u6807\u53d8\u6362\u5230\u573a\u666f/\u4e16\u754c\u4e2d\u7684\u4e0d\u540c\u4f4d\u7f6e\u3002 \u89c2\u5bdf\u7a7a\u95f4 \u89c2\u5bdf\u7a7a\u95f4\u7ecf\u5e38\u88ab\u4eba\u4eec\u79f0\u4e4bOpenGL\u7684 \u6444\u50cf\u673a (Camera)\uff08\u6240\u4ee5\u6709\u65f6\u4e5f\u79f0\u4e3a \u6444\u50cf\u673a\u7a7a\u95f4 (Camera Space)\u6216 \u89c6\u89c9\u7a7a\u95f4 (Eye Space)\uff09\u3002\u89c2\u5bdf\u7a7a\u95f4\u662f\u5c06\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u8f6c\u5316\u4e3a\u7528\u6237\u89c6\u91ce\u524d\u65b9\u7684\u5750\u6807\u800c\u4ea7\u751f\u7684\u7ed3\u679c\u3002\u56e0\u6b64\u89c2\u5bdf\u7a7a\u95f4\u5c31\u662f\u4ece\u6444\u50cf\u673a\u7684\u89c6\u89d2\u6240\u89c2\u5bdf\u5230\u7684\u7a7a\u95f4\u3002\u800c\u8fd9\u901a\u5e38\u662f\u7531\u4e00\u7cfb\u5217\u7684\u4f4d\u79fb\u548c\u65cb\u8f6c\u7684\u7ec4\u5408\u6765\u5b8c\u6210\uff0c\u5e73\u79fb/\u65cb\u8f6c\u573a\u666f\u4ece\u800c\u4f7f\u5f97\u7279\u5b9a\u7684\u5bf9\u8c61\u88ab\u53d8\u6362\u5230\u6444\u50cf\u673a\u7684\u524d\u65b9\u3002\u8fd9\u4e9b\u7ec4\u5408\u5728\u4e00\u8d77\u7684\u53d8\u6362\u901a\u5e38\u5b58\u50a8\u5728\u4e00\u4e2a \u89c2\u5bdf\u77e9\u9635 (View Matrix)\u91cc\uff0c\u5b83\u88ab\u7528\u6765\u5c06\u4e16\u754c\u5750\u6807\u53d8\u6362\u5230\u89c2\u5bdf\u7a7a\u95f4\u3002\u5728\u4e0b\u4e00\u8282\u4e2d\u6211\u4eec\u5c06\u6df1\u5165\u8ba8\u8bba\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u8fd9\u6837\u7684\u89c2\u5bdf\u77e9\u9635\u6765\u6a21\u62df\u4e00\u4e2a\u6444\u50cf\u673a\u3002 \u88c1\u526a\u7a7a\u95f4 \u5728\u4e00\u4e2a\u9876\u70b9\u7740\u8272\u5668\u8fd0\u884c\u7684\u6700\u540e\uff0cOpenGL\u671f\u671b\u6240\u6709\u7684\u5750\u6807\u90fd\u80fd\u843d\u5728\u4e00\u4e2a\u7279\u5b9a\u7684\u8303\u56f4\u5185\uff0c\u4e14\u4efb\u4f55\u5728\u8fd9\u4e2a\u8303\u56f4\u4e4b\u5916\u7684\u70b9\u90fd\u5e94\u8be5\u88ab \u88c1\u526a\u6389 (Clipped)\u3002\u88ab\u88c1\u526a\u6389\u7684\u5750\u6807\u5c31\u4f1a\u88ab\u5ffd\u7565\uff0c\u6240\u4ee5\u5269\u4e0b\u7684\u5750\u6807\u5c31\u5c06\u53d8\u4e3a\u5c4f\u5e55\u4e0a\u53ef\u89c1\u7684\u7247\u6bb5\u3002\u8fd9\u4e5f\u5c31\u662f \u88c1\u526a\u7a7a\u95f4 (Clip Space)\u540d\u5b57\u7684\u7531\u6765\u3002 \u56e0\u4e3a\u5c06\u6240\u6709\u53ef\u89c1\u7684\u5750\u6807\u90fd\u6307\u5b9a\u5728-1.0\u52301.0\u7684\u8303\u56f4\u5185\u4e0d\u662f\u5f88\u76f4\u89c2\uff0c\u6240\u4ee5\u6211\u4eec\u4f1a\u6307\u5b9a\u81ea\u5df1\u7684\u5750\u6807\u96c6(Coordinate Set)\u5e76\u5c06\u5b83\u53d8\u6362\u56de\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7cfb\uff0c\u5c31\u50cfOpenGL\u671f\u671b\u7684\u90a3\u6837\u3002 \u4e3a\u4e86\u5c06\u9876\u70b9\u5750\u6807\u4ece\u89c2\u5bdf\u53d8\u6362\u5230\u88c1\u526a\u7a7a\u95f4\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a \u6295\u5f71\u77e9\u9635 (Projection Matrix)\uff0c\u5b83\u6307\u5b9a\u4e86\u4e00\u4e2a\u8303\u56f4\u7684\u5750\u6807\uff0c\u6bd4\u5982\u5728\u6bcf\u4e2a\u7ef4\u5ea6\u4e0a\u7684-1000\u52301000\u3002\u6295\u5f71\u77e9\u9635\u63a5\u7740\u4f1a\u5c06\u5728\u8fd9\u4e2a\u6307\u5b9a\u7684\u8303\u56f4\u5185\u7684\u5750\u6807\u53d8\u6362\u4e3a\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7684\u8303\u56f4(-1.0, 1.0)\u3002\u6240\u6709\u5728\u8303\u56f4\u5916\u7684\u5750\u6807\u4e0d\u4f1a\u88ab\u6620\u5c04\u5230\u5728-1.0\u52301.0\u7684\u8303\u56f4\u4e4b\u95f4\uff0c\u6240\u4ee5\u4f1a\u88ab\u88c1\u526a\u6389\u3002\u5728\u4e0a\u9762\u8fd9\u4e2a\u6295\u5f71\u77e9\u9635\u6240\u6307\u5b9a\u7684\u8303\u56f4\u5185\uff0c\u5750\u6807(1250, 500, 750)\u5c06\u662f\u4e0d\u53ef\u89c1\u7684\uff0c\u8fd9\u662f\u7531\u4e8e\u5b83\u7684x\u5750\u6807\u8d85\u51fa\u4e86\u8303\u56f4\uff0c\u5b83\u88ab\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5927\u4e8e1.0\u7684\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\uff0c\u6240\u4ee5\u88ab\u88c1\u526a\u6389\u4e86\u3002 Important \u5982\u679c\u53ea\u662f\u56fe\u5143(Primitive)\uff0c\u4f8b\u5982\u4e09\u89d2\u5f62\uff0c\u7684\u4e00\u90e8\u5206\u8d85\u51fa\u4e86 \u88c1\u526a\u4f53\u79ef (Clipping Volume)\uff0c\u5219OpenGL\u4f1a\u91cd\u65b0\u6784\u5efa\u8fd9\u4e2a\u4e09\u89d2\u5f62\u4e3a\u4e00\u4e2a\u6216\u591a\u4e2a\u4e09\u89d2\u5f62\u8ba9\u5176\u80fd\u591f\u9002\u5408\u8fd9\u4e2a\u88c1\u526a\u8303\u56f4\u3002 \u7531\u6295\u5f71\u77e9\u9635\u521b\u5efa\u7684 \u89c2\u5bdf\u7bb1 (Viewing Box)\u88ab\u79f0\u4e3a \u5e73\u622a\u5934\u4f53 (Frustum)\uff0c\u6bcf\u4e2a\u51fa\u73b0\u5728\u5e73\u622a\u5934\u4f53\u8303\u56f4\u5185\u7684\u5750\u6807\u90fd\u4f1a\u6700\u7ec8\u51fa\u73b0\u5728\u7528\u6237\u7684\u5c4f\u5e55\u4e0a\u3002\u5c06\u7279\u5b9a\u8303\u56f4\u5185\u7684\u5750\u6807\u8f6c\u5316\u5230\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7cfb\u7684\u8fc7\u7a0b\uff08\u800c\u4e14\u5b83\u5f88\u5bb9\u6613\u88ab\u6620\u5c04\u52302D\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\uff09\u88ab\u79f0\u4e4b\u4e3a \u6295\u5f71 (Projection)\uff0c\u56e0\u4e3a\u4f7f\u7528\u6295\u5f71\u77e9\u9635\u80fd\u5c063D\u5750\u6807 \u6295\u5f71 (Project)\u5230\u5f88\u5bb9\u6613\u6620\u5c04\u52302D\u7684\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7cfb\u4e2d\u3002 \u4e00\u65e6\u6240\u6709\u9876\u70b9\u88ab\u53d8\u6362\u5230\u88c1\u526a\u7a7a\u95f4\uff0c\u6700\u7ec8\u7684\u64cd\u4f5c\u2014\u2014 \u900f\u89c6\u9664\u6cd5 (Perspective Division)\u5c06\u4f1a\u6267\u884c\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6211\u4eec\u5c06\u4f4d\u7f6e\u5411\u91cf\u7684x\uff0cy\uff0cz\u5206\u91cf\u5206\u522b\u9664\u4ee5\u5411\u91cf\u7684\u9f50\u6b21w\u5206\u91cf\uff1b\u900f\u89c6\u9664\u6cd5\u662f\u5c064D\u88c1\u526a\u7a7a\u95f4\u5750\u6807\u53d8\u6362\u4e3a3D\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7684\u8fc7\u7a0b\u3002\u8fd9\u4e00\u6b65\u4f1a\u5728\u6bcf\u4e00\u4e2a\u9876\u70b9\u7740\u8272\u5668\u8fd0\u884c\u7684\u6700\u540e\u88ab\u81ea\u52a8\u6267\u884c\u3002 \u5728\u8fd9\u4e00\u9636\u6bb5\u4e4b\u540e\uff0c\u6700\u7ec8\u7684\u5750\u6807\u5c06\u4f1a\u88ab\u6620\u5c04\u5230\u5c4f\u5e55\u7a7a\u95f4\u4e2d\uff08\u4f7f\u7528 glViewport \u4e2d\u7684\u8bbe\u5b9a\uff09\uff0c\u5e76\u88ab\u53d8\u6362\u6210\u7247\u6bb5\u3002 \u5c06\u89c2\u5bdf\u5750\u6807\u53d8\u6362\u4e3a\u88c1\u526a\u5750\u6807\u7684\u6295\u5f71\u77e9\u9635\u53ef\u4ee5\u4e3a\u4e24\u79cd\u4e0d\u540c\u7684\u5f62\u5f0f\uff0c\u6bcf\u79cd\u5f62\u5f0f\u90fd\u5b9a\u4e49\u4e86\u4e0d\u540c\u7684\u5e73\u622a\u5934\u4f53\u3002\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u521b\u5efa\u4e00\u4e2a \u6b63\u5c04 \u6295\u5f71\u77e9\u9635(Orthographic Projection Matrix)\u6216\u4e00\u4e2a \u900f\u89c6 \u6295\u5f71\u77e9\u9635(Perspective Projection Matrix)\u3002 \u6b63\u5c04\u6295\u5f71 \u6b63\u5c04\u6295\u5f71\u77e9\u9635\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u7acb\u65b9\u4f53\u7684\u5e73\u622a\u5934\u7bb1\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u4e2a\u88c1\u526a\u7a7a\u95f4\uff0c\u5728\u8fd9\u7a7a\u95f4\u4e4b\u5916\u7684\u9876\u70b9\u90fd\u4f1a\u88ab\u88c1\u526a\u6389\u3002\u521b\u5efa\u4e00\u4e2a\u6b63\u5c04\u6295\u5f71\u77e9\u9635\u9700\u8981\u6307\u5b9a\u53ef\u89c1\u5e73\u622a\u5934\u4f53\u7684\u5bbd\u3001\u9ad8\u548c\u957f\u5ea6\u3002\u5728\u4f7f\u7528\u6b63\u5c04\u6295\u5f71\u77e9\u9635\u53d8\u6362\u81f3\u88c1\u526a\u7a7a\u95f4\u4e4b\u540e\u5904\u4e8e\u8fd9\u4e2a\u5e73\u622a\u5934\u4f53\u5185\u7684\u6240\u6709\u5750\u6807\u5c06\u4e0d\u4f1a\u88ab\u88c1\u526a\u6389\u3002\u5b83\u7684\u5e73\u622a\u5934\u4f53\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u5bb9\u5668\uff1a \u4e0a\u9762\u7684\u5e73\u622a\u5934\u4f53\u5b9a\u4e49\u4e86\u53ef\u89c1\u7684\u5750\u6807\uff0c\u5b83\u7531\u5bbd\u3001\u9ad8\u3001 \u8fd1 (Near)\u5e73\u9762\u548c \u8fdc (Far)\u5e73\u9762\u6240\u6307\u5b9a\u3002\u4efb\u4f55\u51fa\u73b0\u5728\u8fd1\u5e73\u9762\u4e4b\u524d\u6216\u8fdc\u5e73\u9762\u4e4b\u540e\u7684\u5750\u6807\u90fd\u4f1a\u88ab\u88c1\u526a\u6389\u3002\u6b63\u5c04\u5e73\u622a\u5934\u4f53\u76f4\u63a5\u5c06\u5e73\u622a\u5934\u4f53\u5185\u90e8\u7684\u6240\u6709\u5750\u6807\u6620\u5c04\u4e3a\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5411\u91cf\u7684w\u5206\u91cf\u90fd\u6ca1\u6709\u8fdb\u884c\u6539\u53d8\uff1b\u5982\u679cw\u5206\u91cf\u7b49\u4e8e1.0\uff0c\u900f\u89c6\u9664\u6cd5\u5219\u4e0d\u4f1a\u6539\u53d8\u8fd9\u4e2a\u5750\u6807\u3002 \u8981\u521b\u5efa\u4e00\u4e2a\u6b63\u5c04\u6295\u5f71\u77e9\u9635\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528GLM\u7684\u5185\u7f6e\u51fd\u6570 glm::ortho \uff1a glm::ortho(0.0f, 800.0f, 0.0f, 600.0f, 0.1f, 100.0f); \u524d\u4e24\u4e2a\u53c2\u6570\u6307\u5b9a\u4e86\u5e73\u622a\u5934\u4f53\u7684\u5de6\u53f3\u5750\u6807\uff0c\u7b2c\u4e09\u548c\u7b2c\u56db\u53c2\u6570\u6307\u5b9a\u4e86\u5e73\u622a\u5934\u4f53\u7684\u5e95\u90e8\u548c\u9876\u90e8\u3002\u901a\u8fc7\u8fd9\u56db\u4e2a\u53c2\u6570\u6211\u4eec\u5b9a\u4e49\u4e86\u8fd1\u5e73\u9762\u548c\u8fdc\u5e73\u9762\u7684\u5927\u5c0f\uff0c\u7136\u540e\u7b2c\u4e94\u548c\u7b2c\u516d\u4e2a\u53c2\u6570\u5219\u5b9a\u4e49\u4e86\u8fd1\u5e73\u9762\u548c\u8fdc\u5e73\u9762\u7684\u8ddd\u79bb\u3002\u8fd9\u4e2a\u6295\u5f71\u77e9\u9635\u4f1a\u5c06\u5904\u4e8e\u8fd9\u4e9bx\uff0cy\uff0cz\u503c\u8303\u56f4\u5185\u7684\u5750\u6807\u53d8\u6362\u4e3a\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u3002 \u6b63\u5c04\u6295\u5f71\u77e9\u9635\u76f4\u63a5\u5c06\u5750\u6807\u6620\u5c04\u52302D\u5e73\u9762\u4e2d\uff0c\u5373\u4f60\u7684\u5c4f\u5e55\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e00\u4e2a\u76f4\u63a5\u7684\u6295\u5f71\u77e9\u9635\u4f1a\u4ea7\u751f\u4e0d\u771f\u5b9e\u7684\u7ed3\u679c\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6295\u5f71\u6ca1\u6709\u5c06 \u900f\u89c6 (Perspective)\u8003\u8651\u8fdb\u53bb\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981 \u900f\u89c6\u6295\u5f71 \u77e9\u9635\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u900f\u89c6\u6295\u5f71 \u5982\u679c\u4f60\u66fe\u7ecf\u4f53\u9a8c\u8fc7 \u5b9e\u9645\u751f\u6d3b \u7ed9\u4f60\u5e26\u6765\u7684\u666f\u8c61\uff0c\u4f60\u5c31\u4f1a\u6ce8\u610f\u5230\u79bb\u4f60\u8d8a\u8fdc\u7684\u4e1c\u897f\u770b\u8d77\u6765\u66f4\u5c0f\u3002\u8fd9\u4e2a\u5947\u602a\u7684\u6548\u679c\u79f0\u4e4b\u4e3a \u900f\u89c6 (Perspective)\u3002\u900f\u89c6\u7684\u6548\u679c\u5728\u6211\u4eec\u770b\u4e00\u6761\u65e0\u9650\u957f\u7684\u9ad8\u901f\u516c\u8def\u6216\u94c1\u8def\u65f6\u5c24\u5176\u660e\u663e\uff0c\u6b63\u5982\u4e0b\u9762\u56fe\u7247\u663e\u793a\u7684\u90a3\u6837\uff1a \u6b63\u5982\u4f60\u770b\u5230\u7684\u90a3\u6837\uff0c\u7531\u4e8e\u900f\u89c6\uff0c\u8fd9\u4e24\u6761\u7ebf\u5728\u5f88\u8fdc\u7684\u5730\u65b9\u770b\u8d77\u6765\u4f1a\u76f8\u4ea4\u3002\u8fd9\u6b63\u662f\u900f\u89c6\u6295\u5f71\u60f3\u8981\u6a21\u4eff\u7684\u6548\u679c\uff0c\u5b83\u662f\u4f7f\u7528 \u900f\u89c6\u6295\u5f71\u77e9\u9635 \u6765\u5b8c\u6210\u7684\u3002\u8fd9\u4e2a\u6295\u5f71\u77e9\u9635\u5c06\u7ed9\u5b9a\u7684\u5e73\u622a\u5934\u4f53\u8303\u56f4\u6620\u5c04\u5230\u88c1\u526a\u7a7a\u95f4\uff0c\u9664\u6b64\u4e4b\u5916\u8fd8\u4fee\u6539\u4e86\u6bcf\u4e2a\u9876\u70b9\u5750\u6807\u7684w\u503c\uff0c\u4ece\u800c\u4f7f\u5f97\u79bb\u89c2\u5bdf\u8005\u8d8a\u8fdc\u7684\u9876\u70b9\u5750\u6807w\u5206\u91cf\u8d8a\u5927\u3002\u88ab\u53d8\u6362\u5230\u88c1\u526a\u7a7a\u95f4\u7684\u5750\u6807\u90fd\u4f1a\u5728-w\u5230w\u7684\u8303\u56f4\u4e4b\u95f4\uff08\u4efb\u4f55\u5927\u4e8e\u8fd9\u4e2a\u8303\u56f4\u7684\u5750\u6807\u90fd\u4f1a\u88ab\u88c1\u526a\u6389\uff09\u3002OpenGL\u8981\u6c42\u6240\u6709\u53ef\u89c1\u7684\u5750\u6807\u90fd\u843d\u5728-1.0\u52301.0\u8303\u56f4\u5185\uff0c\u4f5c\u4e3a\u9876\u70b9\u7740\u8272\u5668\u6700\u540e\u7684\u8f93\u51fa\uff0c\u56e0\u6b64\uff0c\u4e00\u65e6\u5750\u6807\u5728\u88c1\u526a\u7a7a\u95f4\u5185\u4e4b\u540e\uff0c\u900f\u89c6\u9664\u6cd5\u5c31\u4f1a\u88ab\u5e94\u7528\u5230\u88c1\u526a\u7a7a\u95f4\u5750\u6807\u4e0a\uff1a out = \\begin{pmatrix} x /w \\\\ y / w \\\\ z / w \\end{pmatrix} \u9876\u70b9\u5750\u6807\u7684\u6bcf\u4e2a\u5206\u91cf\u90fd\u4f1a\u9664\u4ee5\u5b83\u7684w\u5206\u91cf\uff0c\u8ddd\u79bb\u89c2\u5bdf\u8005\u8d8a\u8fdc\u9876\u70b9\u5750\u6807\u5c31\u4f1a\u8d8a\u5c0f\u3002\u8fd9\u662fw\u5206\u91cf\u91cd\u8981\u7684\u53e6\u4e00\u4e2a\u539f\u56e0\uff0c\u5b83\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u8fdb\u884c\u900f\u89c6\u6295\u5f71\u3002\u6700\u540e\u7684\u7ed3\u679c\u5750\u6807\u5c31\u662f\u5904\u4e8e\u6807\u51c6\u5316\u8bbe\u5907\u7a7a\u95f4\u4e2d\u7684\u3002\u5982\u679c\u4f60\u5bf9\u6b63\u5c04\u6295\u5f71\u77e9\u9635\u548c\u900f\u89c6\u6295\u5f71\u77e9\u9635\u662f\u5982\u4f55\u8ba1\u7b97\u7684\u5f88\u611f\u5174\u8da3\uff08\u4e14\u4e0d\u4f1a\u5bf9\u6570\u5b66\u611f\u5230\u6050\u60e7\u7684\u8bdd\uff09\u6211\u63a8\u8350\u8fd9\u7bc7\u7531Songho\u5199\u7684 \u6587\u7ae0 \u3002 \u5728GLM\u4e2d\u53ef\u4ee5\u8fd9\u6837\u521b\u5efa\u4e00\u4e2a\u900f\u89c6\u6295\u5f71\u77e9\u9635\uff1a glm::mat4 proj = glm::perspective(glm::radians(45.0f), (float)width/(float)height, 0.1f, 100.0f); \u540c\u6837\uff0c glm::perspective \u6240\u505a\u7684\u5176\u5b9e\u5c31\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u5b9a\u4e49\u4e86\u53ef\u89c6\u7a7a\u95f4\u7684\u5927 \u5e73\u622a\u5934\u4f53 \uff0c\u4efb\u4f55\u5728\u8fd9\u4e2a\u5e73\u622a\u5934\u4f53\u4ee5\u5916\u7684\u4e1c\u897f\u6700\u540e\u90fd\u4e0d\u4f1a\u51fa\u73b0\u5728\u88c1\u526a\u7a7a\u95f4\u4f53\u79ef\u5185\uff0c\u5e76\u4e14\u5c06\u4f1a\u53d7\u5230\u88c1\u526a\u3002\u4e00\u4e2a\u900f\u89c6\u5e73\u622a\u5934\u4f53\u53ef\u4ee5\u88ab\u770b\u4f5c\u4e00\u4e2a\u4e0d\u5747\u5300\u5f62\u72b6\u7684\u7bb1\u5b50\uff0c\u5728\u8fd9\u4e2a\u7bb1\u5b50\u5185\u90e8\u7684\u6bcf\u4e2a\u5750\u6807\u90fd\u4f1a\u88ab\u6620\u5c04\u5230\u88c1\u526a\u7a7a\u95f4\u4e0a\u7684\u4e00\u4e2a\u70b9\u3002\u4e0b\u9762\u662f\u4e00\u5f20\u900f\u89c6\u5e73\u622a\u5934\u4f53\u7684\u56fe\u7247\uff1a \u5b83\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5b9a\u4e49\u4e86 fov \u7684\u503c\uff0c\u5b83\u8868\u793a\u7684\u662f \u89c6\u91ce (Field of View)\uff0c\u5e76\u4e14\u8bbe\u7f6e\u4e86\u89c2\u5bdf\u7a7a\u95f4\u7684\u5927\u5c0f\u3002\u5982\u679c\u60f3\u8981\u4e00\u4e2a\u771f\u5b9e\u7684\u89c2\u5bdf\u6548\u679c\uff0c\u5b83\u7684\u503c\u901a\u5e38\u8bbe\u7f6e\u4e3a45.0f\uff0c\u4f46\u60f3\u8981\u4e00\u4e2a\u6bc1\u706d\u6218\u58eb(DOOM,\u7ecf\u5178\u7684\u7cfb\u5217\u7b2c\u4e00\u4eba\u79f0\u5c04\u51fb\u6e38\u620f)\u98ce\u683c\u7684\u7ed3\u679c\u4f60\u53ef\u4ee5\u5c06\u5176\u8bbe\u7f6e\u4e00\u4e2a\u66f4\u5927\u7684\u503c\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8bbe\u7f6e\u4e86\u5bbd\u9ad8\u6bd4\uff0c\u7531\u89c6\u53e3\u7684\u5bbd\u9664\u4ee5\u9ad8\u6240\u5f97\u3002\u7b2c\u4e09\u548c\u7b2c\u56db\u4e2a\u53c2\u6570\u8bbe\u7f6e\u4e86\u5e73\u622a\u5934\u4f53\u7684 \u8fd1 \u548c \u8fdc \u5e73\u9762\u3002\u6211\u4eec\u901a\u5e38\u8bbe\u7f6e\u8fd1\u8ddd\u79bb\u4e3a0.1f\uff0c\u800c\u8fdc\u8ddd\u79bb\u8bbe\u4e3a100.0f\u3002\u6240\u6709\u5728\u8fd1\u5e73\u9762\u548c\u8fdc\u5e73\u9762\u5185\u4e14\u5904\u4e8e\u5e73\u622a\u5934\u4f53\u5185\u7684\u9876\u70b9\u90fd\u4f1a\u88ab\u6e32\u67d3\u3002 Important \u5f53\u4f60\u628a\u900f\u89c6\u77e9\u9635\u7684 near \u503c\u8bbe\u7f6e\u592a\u5927\u65f6\uff08\u598210.0f\uff09\uff0cOpenGL\u4f1a\u5c06\u9760\u8fd1\u6444\u50cf\u673a\u7684\u5750\u6807\uff08\u57280.0f\u548c10.0f\u4e4b\u95f4\uff09\u90fd\u88c1\u526a\u6389\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u4f60\u5728\u6e38\u620f\u4e2d\u5f88\u719f\u6089\u7684\u89c6\u89c9\u6548\u679c\uff1a\u5728\u592a\u8fc7\u9760\u8fd1\u4e00\u4e2a\u7269\u4f53\u7684\u65f6\u5019\u4f60\u7684\u89c6\u7ebf\u4f1a\u76f4\u63a5\u7a7f\u8fc7\u53bb\u3002 \u5f53\u4f7f\u7528\u6b63\u5c04\u6295\u5f71\u65f6\uff0c\u6bcf\u4e00\u4e2a\u9876\u70b9\u5750\u6807\u90fd\u4f1a\u76f4\u63a5\u6620\u5c04\u5230\u88c1\u526a\u7a7a\u95f4\u4e2d\u800c\u4e0d\u7ecf\u8fc7\u4efb\u4f55\u7cbe\u7ec6\u7684\u900f\u89c6\u9664\u6cd5\uff08\u5b83\u4ecd\u7136\u4f1a\u8fdb\u884c\u900f\u89c6\u9664\u6cd5\uff0c\u53ea\u662fw\u5206\u91cf\u6ca1\u6709\u88ab\u6539\u53d8\uff08\u5b83\u4fdd\u6301\u4e3a1\uff09\uff0c\u56e0\u6b64\u6ca1\u6709\u8d77\u4f5c\u7528\uff09\u3002\u56e0\u4e3a\u6b63\u5c04\u6295\u5f71\u6ca1\u6709\u4f7f\u7528\u900f\u89c6\uff0c\u8fdc\u5904\u7684\u7269\u4f53\u4e0d\u4f1a\u663e\u5f97\u66f4\u5c0f\uff0c\u6240\u4ee5\u4ea7\u751f\u5947\u602a\u7684\u89c6\u89c9\u6548\u679c\u3002\u7531\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6b63\u5c04\u6295\u5f71\u4e3b\u8981\u7528\u4e8e\u4e8c\u7ef4\u6e32\u67d3\u4ee5\u53ca\u4e00\u4e9b\u5efa\u7b51\u6216\u5de5\u7a0b\u7684\u7a0b\u5e8f\uff0c\u5728\u8fd9\u4e9b\u573a\u666f\u4e2d\u6211\u4eec\u66f4\u5e0c\u671b\u9876\u70b9\u4e0d\u4f1a\u88ab\u900f\u89c6\u6240\u5e72\u6270\u3002\u67d0\u4e9b\u5982 Blender \u7b49\u8fdb\u884c\u4e09\u7ef4\u5efa\u6a21\u7684\u8f6f\u4ef6\u6709\u65f6\u5728\u5efa\u6a21\u65f6\u4e5f\u4f1a\u4f7f\u7528\u6b63\u5c04\u6295\u5f71\uff0c\u56e0\u4e3a\u5b83\u5728\u5404\u4e2a\u7ef4\u5ea6\u4e0b\u90fd\u66f4\u51c6\u786e\u5730\u63cf\u7ed8\u4e86\u6bcf\u4e2a\u7269\u4f53\u3002\u4e0b\u9762\u4f60\u80fd\u591f\u770b\u5230\u5728Blender\u91cc\u9762\u4f7f\u7528\u4e24\u79cd\u6295\u5f71\u65b9\u5f0f\u7684\u5bf9\u6bd4\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u4f7f\u7528\u900f\u89c6\u6295\u5f71\u7684\u8bdd\uff0c\u8fdc\u5904\u7684\u9876\u70b9\u770b\u8d77\u6765\u6bd4\u8f83\u5c0f\uff0c\u800c\u5728\u6b63\u5c04\u6295\u5f71\u4e2d\u6bcf\u4e2a\u9876\u70b9\u8ddd\u79bb\u89c2\u5bdf\u8005\u7684\u8ddd\u79bb\u90fd\u662f\u4e00\u6837\u7684\u3002 \u628a\u5b83\u4eec\u90fd\u7ec4\u5408\u5230\u4e00\u8d77 \u6211\u4eec\u4e3a\u4e0a\u8ff0\u7684\u6bcf\u4e00\u4e2a\u6b65\u9aa4\u90fd\u521b\u5efa\u4e86\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\uff1a\u6a21\u578b\u77e9\u9635\u3001\u89c2\u5bdf\u77e9\u9635\u548c\u6295\u5f71\u77e9\u9635\u3002\u4e00\u4e2a\u9876\u70b9\u5750\u6807\u5c06\u4f1a\u6839\u636e\u4ee5\u4e0b\u8fc7\u7a0b\u88ab\u53d8\u6362\u5230\u88c1\u526a\u5750\u6807\uff1a V_{clip} = M_{projection} \\cdot M_{view} \\cdot M_{model} \\cdot V_{local} \u6ce8\u610f\u77e9\u9635\u8fd0\u7b97\u7684\u987a\u5e8f\u662f\u76f8\u53cd\u7684\uff08\u8bb0\u4f4f\u6211\u4eec\u9700\u8981\u4ece\u53f3\u5f80\u5de6\u9605\u8bfb\u77e9\u9635\u7684\u4e58\u6cd5\uff09\u3002\u6700\u540e\u7684\u9876\u70b9\u5e94\u8be5\u88ab\u8d4b\u503c\u5230\u9876\u70b9\u7740\u8272\u5668\u4e2d\u7684 gl_Position \uff0cOpenGL\u5c06\u4f1a\u81ea\u52a8\u8fdb\u884c\u900f\u89c6\u9664\u6cd5\u548c\u88c1\u526a\u3002 Important \u7136\u540e\u5462\uff1f \u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u51fa\u8981\u6c42\u6240\u6709\u7684\u9876\u70b9\u90fd\u5728\u88c1\u526a\u7a7a\u95f4\u5185\uff0c\u8fd9\u6b63\u662f\u6211\u4eec\u521a\u624d\u4f7f\u7528\u53d8\u6362\u77e9\u9635\u6240\u505a\u7684\u3002OpenGL\u7136\u540e\u5bf9 \u88c1\u526a\u5750\u6807 \u6267\u884c \u900f\u89c6\u9664\u6cd5 \u4ece\u800c\u5c06\u5b83\u4eec\u53d8\u6362\u5230 \u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807 \u3002OpenGL\u4f1a\u4f7f\u7528 glViewPort \u5185\u90e8\u7684\u53c2\u6570\u6765\u5c06\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u6620\u5c04\u5230 \u5c4f\u5e55\u5750\u6807 \uff0c\u6bcf\u4e2a\u5750\u6807\u90fd\u5173\u8054\u4e86\u4e00\u4e2a\u5c4f\u5e55\u4e0a\u7684\u70b9\uff08\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u662f\u4e00\u4e2a800x600\u7684\u5c4f\u5e55\uff09\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a\u89c6\u53e3\u53d8\u6362\u3002 \u8fd9\u4e00\u7ae0\u7684\u4e3b\u9898\u53ef\u80fd\u4f1a\u6bd4\u8f83\u96be\u7406\u89e3\uff0c\u5982\u679c\u4f60\u4ecd\u7136\u4e0d\u786e\u5b9a\u6bcf\u4e2a\u7a7a\u95f4\u7684\u4f5c\u7528\u7684\u8bdd\uff0c\u4f60\u4e5f\u4e0d\u5fc5\u592a\u62c5\u5fc3\u3002\u63a5\u4e0b\u6765\u4f60\u4f1a\u770b\u5230\u6211\u4eec\u662f\u600e\u6837\u8fd0\u7528\u8fd9\u4e9b\u5750\u6807\u7a7a\u95f4\u7684\uff0c\u800c\u4e14\u4e4b\u540e\u4e5f\u4f1a\u6709\u8db3\u591f\u591a\u7684\u4f8b\u5b50\u3002 \u8fdb\u51653D \u65e2\u7136\u6211\u4eec\u77e5\u9053\u4e86\u5982\u4f55\u5c063D\u5750\u6807\u53d8\u6362\u4e3a2D\u5750\u6807\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528\u771f\u6b63\u76843D\u7269\u4f53\uff0c\u800c\u4e0d\u662f\u67af\u71e5\u76842D\u5e73\u9762\u4e86\u3002 \u5728\u5f00\u59cb\u8fdb\u884c3D\u7ed8\u56fe\u65f6\uff0c\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u6a21\u578b\u77e9\u9635\u3002\u8fd9\u4e2a\u6a21\u578b\u77e9\u9635\u5305\u542b\u4e86\u4f4d\u79fb\u3001\u7f29\u653e\u4e0e\u65cb\u8f6c\u64cd\u4f5c\uff0c\u5b83\u4eec\u4f1a\u88ab\u5e94\u7528\u5230\u6240\u6709\u7269\u4f53\u7684\u9876\u70b9\u4e0a\uff0c\u4ee5 \u53d8\u6362 \u5b83\u4eec\u5230\u5168\u5c40\u7684\u4e16\u754c\u7a7a\u95f4\u3002\u8ba9\u6211\u4eec\u53d8\u6362\u4e00\u4e0b\u6211\u4eec\u7684\u5e73\u9762\uff0c\u5c06\u5176\u7ed5\u7740x\u8f74\u65cb\u8f6c\uff0c\u4f7f\u5b83\u770b\u8d77\u6765\u50cf\u653e\u5728\u5730\u4e0a\u4e00\u6837\u3002\u8fd9\u4e2a\u6a21\u578b\u77e9\u9635\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a glm::mat4 model; model = glm::rotate(model, glm::radians(-55.0f), glm::vec3(1.0f, 0.0f, 0.0f)); \u901a\u8fc7\u5c06\u9876\u70b9\u5750\u6807\u4e58\u4ee5\u8fd9\u4e2a\u6a21\u578b\u77e9\u9635\uff0c\u6211\u4eec\u5c06\u8be5\u9876\u70b9\u5750\u6807\u53d8\u6362\u5230\u4e16\u754c\u5750\u6807\u3002\u6211\u4eec\u7684\u5e73\u9762\u770b\u8d77\u6765\u5c31\u662f\u5728\u5730\u677f\u4e0a\uff0c\u4ee3\u8868\u5168\u5c40\u4e16\u754c\u91cc\u7684\u5e73\u9762\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u89c2\u5bdf\u77e9\u9635\u3002\u6211\u4eec\u60f3\u8981\u5728\u573a\u666f\u91cc\u9762\u7a0d\u5fae\u5f80\u540e\u79fb\u52a8\uff0c\u4ee5\u4f7f\u5f97\u7269\u4f53\u53d8\u6210\u53ef\u89c1\u7684\uff08\u5f53\u5728\u4e16\u754c\u7a7a\u95f4\u65f6\uff0c\u6211\u4eec\u4f4d\u4e8e\u539f\u70b9(0,0,0)\uff09\u3002\u8981\u60f3\u5728\u573a\u666f\u91cc\u9762\u79fb\u52a8\uff0c\u5148\u4ed4\u7ec6\u60f3\u4e00\u60f3\u4e0b\u9762\u8fd9\u4e2a\u53e5\u5b50\uff1a \u5c06\u6444\u50cf\u673a\u5411\u540e\u79fb\u52a8\uff0c\u548c\u5c06\u6574\u4e2a\u573a\u666f\u5411\u524d\u79fb\u52a8\u662f\u4e00\u6837\u7684\u3002 \u8fd9\u6b63\u662f\u89c2\u5bdf\u77e9\u9635\u6240\u505a\u7684\uff0c\u6211\u4eec\u4ee5\u76f8\u53cd\u4e8e\u6444\u50cf\u673a\u79fb\u52a8\u7684\u65b9\u5411\u79fb\u52a8\u6574\u4e2a\u573a\u666f\u3002\u56e0\u4e3a\u6211\u4eec\u60f3\u8981\u5f80\u540e\u79fb\u52a8\uff0c\u5e76\u4e14OpenGL\u662f\u4e00\u4e2a\u53f3\u624b\u5750\u6807\u7cfb(Right-handed System)\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6cbf\u7740z\u8f74\u7684\u6b63\u65b9\u5411\u79fb\u52a8\u3002\u6211\u4eec\u4f1a\u901a\u8fc7\u5c06\u573a\u666f\u6cbf\u7740z\u8f74\u8d1f\u65b9\u5411\u5e73\u79fb\u6765\u5b9e\u73b0\u3002\u5b83\u4f1a\u7ed9\u6211\u4eec\u4e00\u79cd\u6211\u4eec\u5728\u5f80\u540e\u79fb\u52a8\u7684\u611f\u89c9\u3002 Important \u53f3\u624b\u5750\u6807\u7cfb(Right-handed System) \u6309\u7167\u60ef\u4f8b\uff0cOpenGL\u662f\u4e00\u4e2a\u53f3\u624b\u5750\u6807\u7cfb\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u6b63x\u8f74\u5728\u4f60\u7684\u53f3\u624b\u8fb9\uff0c\u6b63y\u8f74\u671d\u4e0a\uff0c\u800c\u6b63z\u8f74\u662f\u671d\u5411\u540e\u65b9\u7684\u3002\u60f3\u8c61\u4f60\u7684\u5c4f\u5e55\u5904\u4e8e\u4e09\u4e2a\u8f74\u7684\u4e2d\u5fc3\uff0c\u5219\u6b63z\u8f74\u7a7f\u8fc7\u4f60\u7684\u5c4f\u5e55\u671d\u5411\u4f60\u3002\u5750\u6807\u7cfb\u753b\u8d77\u6765\u5982\u4e0b\uff1a \u4e3a\u4e86\u7406\u89e3\u4e3a\u4ec0\u4e48\u88ab\u79f0\u4e3a\u53f3\u624b\u5750\u6807\u7cfb\uff0c\u6309\u5982\u4e0b\u7684\u6b65\u9aa4\u505a\uff1a \u6cbf\u7740\u6b63y\u8f74\u65b9\u5411\u4f38\u51fa\u4f60\u7684\u53f3\u81c2\uff0c\u624b\u6307\u7740\u4e0a\u65b9\u3002 \u5927\u62c7\u6307\u6307\u5411\u53f3\u65b9\u3002 \u98df\u6307\u6307\u5411\u4e0a\u65b9\u3002 \u4e2d\u6307\u5411\u4e0b\u5f2f\u66f290\u5ea6\u3002 \u5982\u679c\u4f60\u7684\u52a8\u4f5c\u6b63\u786e\uff0c\u90a3\u4e48\u4f60\u7684\u5927\u62c7\u6307\u6307\u5411\u6b63x\u8f74\u65b9\u5411\uff0c\u98df\u6307\u6307\u5411\u6b63y\u8f74\u65b9\u5411\uff0c\u4e2d\u6307\u6307\u5411\u6b63z\u8f74\u65b9\u5411\u3002\u5982\u679c\u4f60\u7528\u5de6\u81c2\u6765\u505a\u8fd9\u4e9b\u52a8\u4f5c\uff0c\u4f60\u4f1a\u53d1\u73b0z\u8f74\u7684\u65b9\u5411\u662f\u76f8\u53cd\u7684\u3002\u8fd9\u4e2a\u53eb\u505a\u5de6\u624b\u5750\u6807\u7cfb\uff0c\u5b83\u88abDirectX\u5e7f\u6cdb\u5730\u4f7f\u7528\u3002\u6ce8\u610f\u5728\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7cfb\u4e2dOpenGL\u5b9e\u9645\u4e0a\u4f7f\u7528\u7684\u662f\u5de6\u624b\u5750\u6807\u7cfb\uff08\u6295\u5f71\u77e9\u9635\u4ea4\u6362\u4e86\u5de6\u53f3\u624b\uff09\u3002 \u5728\u4e0b\u4e00\u4e2a\u6559\u7a0b\u4e2d\u6211\u4eec\u5c06\u4f1a\u8be6\u7ec6\u8ba8\u8bba\u5982\u4f55\u5728\u573a\u666f\u4e2d\u79fb\u52a8\u3002\u5c31\u76ee\u524d\u6765\u8bf4\uff0c\u89c2\u5bdf\u77e9\u9635\u662f\u8fd9\u6837\u7684\uff1a glm::mat4 view; // \u6ce8\u610f\uff0c\u6211\u4eec\u5c06\u77e9\u9635\u5411\u6211\u4eec\u8981\u8fdb\u884c\u79fb\u52a8\u573a\u666f\u7684\u53cd\u65b9\u5411\u79fb\u52a8\u3002 view = glm::translate(view, glm::vec3(0.0f, 0.0f, -3.0f)); \u6700\u540e\u6211\u4eec\u9700\u8981\u505a\u7684\u662f\u5b9a\u4e49\u4e00\u4e2a\u6295\u5f71\u77e9\u9635\u3002\u6211\u4eec\u5e0c\u671b\u5728\u573a\u666f\u4e2d\u4f7f\u7528\u900f\u89c6\u6295\u5f71\uff0c\u6240\u4ee5\u50cf\u8fd9\u6837\u58f0\u660e\u4e00\u4e2a\u6295\u5f71\u77e9\u9635\uff1a glm::mat4 projection; projection = glm::perspective(glm::radians(45.0f), screenWidth / screenHeight, 0.1f, 100.0f); \u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u53d8\u6362\u77e9\u9635\uff0c\u6211\u4eec\u5e94\u8be5\u5c06\u5b83\u4eec\u4f20\u5165\u7740\u8272\u5668\u3002\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u58f0\u660e\u4e00\u4e2auniform\u53d8\u6362\u77e9\u9635\u7136\u540e\u5c06\u5b83\u4e58\u4ee5\u9876\u70b9\u5750\u6807\uff1a #version 330 core layout (location = 0) in vec3 aPos; ... uniform mat4 model; uniform mat4 view; uniform mat4 projection; void main() { // \u6ce8\u610f\u4e58\u6cd5\u8981\u4ece\u53f3\u5411\u5de6\u8bfb gl_Position = projection * view * model * vec4(aPos, 1.0); ... } \u6211\u4eec\u8fd8\u5e94\u8be5\u5c06\u77e9\u9635\u4f20\u5165\u7740\u8272\u5668\uff08\u8fd9\u901a\u5e38\u5728\u6bcf\u6b21\u7684\u6e32\u67d3\u8fed\u4ee3\u4e2d\u8fdb\u884c\uff0c\u56e0\u4e3a\u53d8\u6362\u77e9\u9635\u4f1a\u7ecf\u5e38\u53d8\u52a8\uff09\uff1a int modelLoc = glGetUniformLocation(ourShader.ID, \"model\"); glUniformMatrix4fv(modelLoc, 1, GL_FALSE, glm::value_ptr(model)); ... // \u89c2\u5bdf\u77e9\u9635\u548c\u6295\u5f71\u77e9\u9635\u4e0e\u4e4b\u7c7b\u4f3c \u6211\u4eec\u7684\u9876\u70b9\u5750\u6807\u5df2\u7ecf\u4f7f\u7528\u6a21\u578b\u3001\u89c2\u5bdf\u548c\u6295\u5f71\u77e9\u9635\u8fdb\u884c\u53d8\u6362\u4e86\uff0c\u6700\u7ec8\u7684\u7269\u4f53\u5e94\u8be5\u4f1a\uff1a \u7a0d\u5fae\u5411\u540e\u503e\u659c\u81f3\u5730\u677f\u65b9\u5411\u3002 \u79bb\u6211\u4eec\u6709\u4e00\u4e9b\u8ddd\u79bb\u3002 \u6709\u900f\u89c6\u6548\u679c\uff08\u9876\u70b9\u8d8a\u8fdc\uff0c\u53d8\u5f97\u8d8a\u5c0f\uff09\u3002 \u8ba9\u6211\u4eec\u68c0\u67e5\u4e00\u4e0b\u7ed3\u679c\u662f\u5426\u6ee1\u8db3\u8fd9\u4e9b\u8981\u6c42\uff1a \u5b83\u770b\u8d77\u6765\u5c31\u50cf\u662f\u4e00\u4e2a3D\u7684\u5e73\u9762\uff0c\u9759\u6b62\u5728\u4e00\u4e2a\u865a\u6784\u7684\u5730\u677f\u4e0a\u3002\u5982\u679c\u4f60\u5f97\u5230\u7684\u4e0d\u662f\u76f8\u540c\u7684\u7ed3\u679c\uff0c\u8bf7\u68c0\u67e5\u4e0b\u5b8c\u6574\u7684 \u6e90\u4ee3\u7801 \u3002 \u66f4\u52a0 3D \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u4e00\u76f4\u90fd\u5728\u4f7f\u7528\u4e00\u4e2a2D\u5e73\u9762\uff0c\u800c\u4e14\u751a\u81f3\u662f\u57283D\u7a7a\u95f4\u91cc\uff01\u6240\u4ee5\uff0c\u8ba9\u6211\u4eec\u5927\u80c6\u5730\u62d3\u5c55\u6211\u4eec\u76842D\u5e73\u9762\u4e3a\u4e00\u4e2a3D\u7acb\u65b9\u4f53\u3002\u8981\u60f3\u6e32\u67d3\u4e00\u4e2a\u7acb\u65b9\u4f53\uff0c\u6211\u4eec\u4e00\u5171\u9700\u898136\u4e2a\u9876\u70b9\uff086\u4e2a\u9762 x \u6bcf\u4e2a\u9762\u67092\u4e2a\u4e09\u89d2\u5f62\u7ec4\u6210 x \u6bcf\u4e2a\u4e09\u89d2\u5f62\u67093\u4e2a\u9876\u70b9\uff09\uff0c\u8fd936\u4e2a\u9876\u70b9\u7684\u4f4d\u7f6e\u4f60\u53ef\u4ee5\u4ece \u8fd9\u91cc \u83b7\u53d6\u3002 \u4e3a\u4e86\u6709\u8da3\u4e00\u70b9\uff0c\u6211\u4eec\u5c06\u8ba9\u7acb\u65b9\u4f53\u968f\u7740\u65f6\u95f4\u65cb\u8f6c\uff1a model = glm::rotate(model, (float)glfwGetTime() * glm::radians(50.0f), glm::vec3(0.5f, 1.0f, 0.0f)); \u7136\u540e\u6211\u4eec\u4f7f\u7528 glDrawArrays \u6765\u7ed8\u5236\u7acb\u65b9\u4f53\uff0c\u4f46\u8fd9\u4e00\u6b21\u603b\u5171\u670936\u4e2a\u9876\u70b9\u3002 glDrawArrays(GL_TRIANGLES, 0, 36); \u5982\u679c\u4e00\u5207\u987a\u5229\u7684\u8bdd\u4f60\u5e94\u8be5\u80fd\u5f97\u5230\u4e0b\u9762\u8fd9\u6837\u7684\u6548\u679c\uff1a \u8fd9\u7684\u786e\u6709\u70b9\u50cf\u662f\u4e00\u4e2a\u7acb\u65b9\u4f53\uff0c\u4f46\u53c8\u6709\u79cd\u8bf4\u4e0d\u51fa\u7684\u5947\u602a\u3002\u7acb\u65b9\u4f53\u7684\u67d0\u4e9b\u672c\u5e94\u88ab\u906e\u6321\u4f4f\u7684\u9762\u88ab\u7ed8\u5236\u5728\u4e86\u8fd9\u4e2a\u7acb\u65b9\u4f53\u5176\u4ed6\u9762\u4e4b\u4e0a\u3002\u4e4b\u6240\u4ee5\u8fd9\u6837\u662f\u56e0\u4e3aOpenGL\u662f\u4e00\u4e2a\u4e09\u89d2\u5f62\u4e00\u4e2a\u4e09\u89d2\u5f62\u5730\u6765\u7ed8\u5236\u4f60\u7684\u7acb\u65b9\u4f53\u7684\uff0c\u6240\u4ee5\u5373\u4fbf\u4e4b\u524d\u90a3\u91cc\u6709\u4e1c\u897f\u5b83\u4e5f\u4f1a\u8986\u76d6\u4e4b\u524d\u7684\u50cf\u7d20\u3002\u56e0\u4e3a\u8fd9\u4e2a\u539f\u56e0\uff0c\u6709\u4e9b\u4e09\u89d2\u5f62\u4f1a\u88ab\u7ed8\u5236\u5728\u5176\u5b83\u4e09\u89d2\u5f62\u4e0a\u9762\uff0c\u867d\u7136\u5b83\u4eec\u672c\u4e0d\u5e94\u8be5\u662f\u88ab\u8986\u76d6\u7684\u3002 \u5e78\u8fd0\u7684\u662f\uff0cOpenGL\u5b58\u50a8\u6df1\u5ea6\u4fe1\u606f\u5728\u4e00\u4e2a\u53eb\u505a Z\u7f13\u51b2 (Z-buffer)\u7684\u7f13\u51b2\u4e2d\uff0c\u5b83\u5141\u8bb8OpenGL\u51b3\u5b9a\u4f55\u65f6\u8986\u76d6\u4e00\u4e2a\u50cf\u7d20\u800c\u4f55\u65f6\u4e0d\u8986\u76d6\u3002\u901a\u8fc7\u4f7f\u7528Z\u7f13\u51b2\uff0c\u6211\u4eec\u53ef\u4ee5\u914d\u7f6eOpenGL\u6765\u8fdb\u884c\u6df1\u5ea6\u6d4b\u8bd5\u3002 Z\u7f13\u51b2 OpenGL\u5b58\u50a8\u5b83\u7684\u6240\u6709\u6df1\u5ea6\u4fe1\u606f\u4e8e\u4e00\u4e2aZ\u7f13\u51b2(Z-buffer)\u4e2d\uff0c\u4e5f\u88ab\u79f0\u4e3a \u6df1\u5ea6\u7f13\u51b2 (Depth Buffer)\u3002GLFW\u4f1a\u81ea\u52a8\u4e3a\u4f60\u751f\u6210\u8fd9\u6837\u4e00\u4e2a\u7f13\u51b2\uff08\u5c31\u50cf\u5b83\u4e5f\u6709\u4e00\u4e2a\u989c\u8272\u7f13\u51b2\u6765\u5b58\u50a8\u8f93\u51fa\u56fe\u50cf\u7684\u989c\u8272\uff09\u3002\u6df1\u5ea6\u503c\u5b58\u50a8\u5728\u6bcf\u4e2a\u7247\u6bb5\u91cc\u9762\uff08\u4f5c\u4e3a\u7247\u6bb5\u7684 z \u503c\uff09\uff0c\u5f53\u7247\u6bb5\u60f3\u8981\u8f93\u51fa\u5b83\u7684\u989c\u8272\u65f6\uff0cOpenGL\u4f1a\u5c06\u5b83\u7684\u6df1\u5ea6\u503c\u548cz\u7f13\u51b2\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u5f53\u524d\u7684\u7247\u6bb5\u5728\u5176\u5b83\u7247\u6bb5\u4e4b\u540e\uff0c\u5b83\u5c06\u4f1a\u88ab\u4e22\u5f03\uff0c\u5426\u5219\u5c06\u4f1a\u8986\u76d6\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a \u6df1\u5ea6\u6d4b\u8bd5 (Depth Testing)\uff0c\u5b83\u662f\u7531OpenGL\u81ea\u52a8\u5b8c\u6210\u7684\u3002 \u7136\u800c\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u786e\u5b9aOpenGL\u771f\u7684\u6267\u884c\u4e86\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u9996\u5148\u6211\u4eec\u8981\u544a\u8bc9OpenGL\u6211\u4eec\u60f3\u8981\u542f\u7528\u6df1\u5ea6\u6d4b\u8bd5\uff1b\u5b83\u9ed8\u8ba4\u662f\u5173\u95ed\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 glEnable \u51fd\u6570\u6765\u5f00\u542f\u6df1\u5ea6\u6d4b\u8bd5\u3002 glEnable \u548c glDisable \u51fd\u6570\u5141\u8bb8\u6211\u4eec\u542f\u7528\u6216\u7981\u7528\u67d0\u4e2aOpenGL\u529f\u80fd\u3002\u8fd9\u4e2a\u529f\u80fd\u4f1a\u4e00\u76f4\u4fdd\u6301\u542f\u7528/\u7981\u7528\u72b6\u6001\uff0c\u76f4\u5230\u53e6\u4e00\u4e2a\u8c03\u7528\u6765\u7981\u7528/\u542f\u7528\u5b83\u3002\u73b0\u5728\u6211\u4eec\u60f3\u542f\u7528\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u9700\u8981\u5f00\u542f GL_DEPTH_TEST \uff1a glEnable(GL_DEPTH_TEST); \u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u6211\u4eec\u4e5f\u60f3\u8981\u5728\u6bcf\u6b21\u6e32\u67d3\u8fed\u4ee3\u4e4b\u524d\u6e05\u9664\u6df1\u5ea6\u7f13\u51b2\uff08\u5426\u5219\u524d\u4e00\u5e27\u7684\u6df1\u5ea6\u4fe1\u606f\u4ecd\u7136\u4fdd\u5b58\u5728\u7f13\u51b2\u4e2d\uff09\u3002\u5c31\u50cf\u6e05\u9664\u989c\u8272\u7f13\u51b2\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728 glClear \u51fd\u6570\u4e2d\u6307\u5b9a DEPTH_BUFFER_BIT \u4f4d\u6765\u6e05\u9664\u6df1\u5ea6\u7f13\u51b2\uff1a glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); \u6211\u4eec\u6765\u91cd\u65b0\u8fd0\u884c\u4e0b\u7a0b\u5e8f\u770b\u770bOpenGL\u662f\u5426\u6267\u884c\u4e86\u6df1\u5ea6\u6d4b\u8bd5\uff1a \u5c31\u662f\u8fd9\u6837\uff01\u4e00\u4e2a\u5f00\u542f\u4e86\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u5404\u4e2a\u9762\u90fd\u662f\u7eb9\u7406\uff0c\u5e76\u4e14\u8fd8\u5728\u65cb\u8f6c\u7684\u7acb\u65b9\u4f53\uff01\u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u6709\u95ee\u9898\u53ef\u4ee5\u5230 \u8fd9\u91cc \u4e0b\u8f7d\u6e90\u7801\u8fdb\u884c\u6bd4\u5bf9\u3002 \u66f4\u591a\u7684\u7acb\u65b9\u4f53\uff01 \u73b0\u5728\u6211\u4eec\u60f3\u5728\u5c4f\u5e55\u4e0a\u663e\u793a10\u4e2a\u7acb\u65b9\u4f53\u3002\u6bcf\u4e2a\u7acb\u65b9\u4f53\u770b\u8d77\u6765\u90fd\u662f\u4e00\u6837\u7684\uff0c\u533a\u522b\u5728\u4e8e\u5b83\u4eec\u5728\u4e16\u754c\u7684\u4f4d\u7f6e\u53ca\u65cb\u8f6c\u89d2\u5ea6\u4e0d\u540c\u3002\u7acb\u65b9\u4f53\u7684\u56fe\u5f62\u5e03\u5c40\u5df2\u7ecf\u5b9a\u4e49\u597d\u4e86\uff0c\u6240\u4ee5\u5f53\u6e32\u67d3\u66f4\u591a\u7269\u4f53\u7684\u65f6\u5019\u6211\u4eec\u4e0d\u9700\u8981\u6539\u53d8\u6211\u4eec\u7684\u7f13\u51b2\u6570\u7ec4\u548c\u5c5e\u6027\u6570\u7ec4\uff0c\u6211\u4eec\u552f\u4e00\u9700\u8981\u505a\u7684\u53ea\u662f\u6539\u53d8\u6bcf\u4e2a\u5bf9\u8c61\u7684\u6a21\u578b\u77e9\u9635\u6765\u5c06\u7acb\u65b9\u4f53\u53d8\u6362\u5230\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\u3002 \u9996\u5148\uff0c\u8ba9\u6211\u4eec\u4e3a\u6bcf\u4e2a\u7acb\u65b9\u4f53\u5b9a\u4e49\u4e00\u4e2a\u4f4d\u79fb\u5411\u91cf\u6765\u6307\u5b9a\u5b83\u5728\u4e16\u754c\u7a7a\u95f4\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u5c06\u5728\u4e00\u4e2a glm::vec3 \u6570\u7ec4\u4e2d\u5b9a\u4e4910\u4e2a\u7acb\u65b9\u4f53\u4f4d\u7f6e\uff1a glm::vec3 cubePositions[] = { glm::vec3( 0.0f, 0.0f, 0.0f), glm::vec3( 2.0f, 5.0f, -15.0f), glm::vec3(-1.5f, -2.2f, -2.5f), glm::vec3(-3.8f, -2.0f, -12.3f), glm::vec3( 2.4f, -0.4f, -3.5f), glm::vec3(-1.7f, 3.0f, -7.5f), glm::vec3( 1.3f, -2.0f, -2.5f), glm::vec3( 1.5f, 2.0f, -2.5f), glm::vec3( 1.5f, 0.2f, -1.5f), glm::vec3(-1.3f, 1.0f, -1.5f) }; \u73b0\u5728\uff0c\u5728\u6e38\u620f\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u8c03\u7528 glDrawArrays 10\u6b21\uff0c\u4f46\u8fd9\u6b21\u5728\u6211\u4eec\u6e32\u67d3\u4e4b\u524d\u6bcf\u6b21\u4f20\u5165\u4e00\u4e2a\u4e0d\u540c\u7684\u6a21\u578b\u77e9\u9635\u5230\u9876\u70b9\u7740\u8272\u5668\u4e2d\u3002\u6211\u4eec\u5c06\u4f1a\u5728\u6e38\u620f\u5faa\u73af\u4e2d\u521b\u5efa\u4e00\u4e2a\u5c0f\u7684\u5faa\u73af\u7528\u4e0d\u540c\u7684\u6a21\u578b\u77e9\u9635\u6e32\u67d3\u6211\u4eec\u7684\u7269\u4f5310\u6b21\u3002\u6ce8\u610f\u6211\u4eec\u4e5f\u5bf9\u6bcf\u4e2a\u7bb1\u5b50\u52a0\u4e86\u4e00\u70b9\u65cb\u8f6c\uff1a glBindVertexArray(VAO); for(unsigned int i = 0; i < 10; i++) { glm::mat4 model; model = glm::translate(model, cubePositions[i]); float angle = 20.0f * i; model = glm::rotate(model, glm::radians(angle), glm::vec3(1.0f, 0.3f, 0.5f)); ourShader.setMat4(\"model\", model); glDrawArrays(GL_TRIANGLES, 0, 36); } \u8fd9\u6bb5\u4ee3\u7801\u5c06\u4f1a\u5728\u6bcf\u6b21\u65b0\u7acb\u65b9\u4f53\u7ed8\u5236\u51fa\u6765\u7684\u65f6\u5019\u66f4\u65b0\u6a21\u578b\u77e9\u9635\uff0c\u5982\u6b64\u603b\u5171\u91cd\u590d10\u6b21\u3002\u7136\u540e\u6211\u4eec\u5e94\u8be5\u5c31\u80fd\u770b\u5230\u4e00\u4e2a\u62e5\u670910\u4e2a\u6b63\u5728\u5947\u8469\u5730\u65cb\u8f6c\u7740\u7684\u7acb\u65b9\u4f53\u7684\u4e16\u754c\u3002 \u5b8c\u7f8e\uff01\u770b\u8d77\u6765\u6211\u4eec\u7684\u7bb1\u5b50\u5df2\u7ecf\u627e\u5230\u5fd7\u540c\u9053\u5408\u7684\u5c0f\u4f19\u4f34\u4e86\u3002\u5982\u679c\u4f60\u5728\u8fd9\u91cc\u5361\u4f4f\u4e86\uff0c\u4f60\u53ef\u4ee5\u5bf9\u7167\u4e00\u4e0b \u6e90\u4ee3\u7801 \u3002 \u7ec3\u4e60 \u5bf9GLM\u7684 projection \u51fd\u6570\u4e2d\u7684 FoV \u548c aspect-ratio \u53c2\u6570\u8fdb\u884c\u5b9e\u9a8c\u3002\u770b\u80fd\u5426\u641e\u61c2\u5b83\u4eec\u662f\u5982\u4f55\u5f71\u54cd\u900f\u89c6\u5e73\u622a\u5934\u4f53\u7684\u3002 \u5c06\u89c2\u5bdf\u77e9\u9635\u5728\u5404\u4e2a\u65b9\u5411\u4e0a\u8fdb\u884c\u4f4d\u79fb\uff0c\u6765\u770b\u770b\u573a\u666f\u662f\u5982\u4f55\u6539\u53d8\u7684\u3002\u6ce8\u610f\u628a\u89c2\u5bdf\u77e9\u9635\u5f53\u6210\u6444\u50cf\u673a\u5bf9\u8c61\u3002 \u4f7f\u7528\u6a21\u578b\u77e9\u9635\u53ea\u8ba9\u662f3\u500d\u6570\u7684\u7bb1\u5b50\u65cb\u8f6c\uff08\u4ee5\u53ca\u7b2c1\u4e2a\u7bb1\u5b50\uff09\uff0c\u800c\u8ba9\u5269\u4e0b\u7684\u7bb1\u5b50\u4fdd\u6301\u9759\u6b62\u3002 \u53c2\u8003\u89e3\u7b54 \u3002","title":"\u5750\u6807\u7cfb\u7edf"},{"location":"01%20Getting%20started/08%20Coordinate%20Systems/#_1","text":"\u539f\u6587 Coordinate Systems \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 linkoln, Geequlim, Krasjet, BLumia \u6821\u5bf9 AoZhang \u5728\u4e0a\u4e00\u4e2a\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5b66\u4e60\u4e86\u5982\u4f55\u6709\u6548\u5730\u5229\u7528\u77e9\u9635\u7684\u53d8\u6362\u6765\u5bf9\u6240\u6709\u9876\u70b9\u8fdb\u884c\u53d8\u6362\u3002OpenGL\u5e0c\u671b\u5728\u6bcf\u6b21\u9876\u70b9\u7740\u8272\u5668\u8fd0\u884c\u540e\uff0c\u6211\u4eec\u53ef\u89c1\u7684\u6240\u6709\u9876\u70b9\u90fd\u4e3a\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807(Normalized Device Coordinate, NDC)\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e2a\u9876\u70b9\u7684 x \uff0c y \uff0c z \u5750\u6807\u90fd\u5e94\u8be5\u5728 -1.0 \u5230 1.0 \u4e4b\u95f4\uff0c\u8d85\u51fa\u8fd9\u4e2a\u5750\u6807\u8303\u56f4\u7684\u9876\u70b9\u90fd\u5c06\u4e0d\u53ef\u89c1\u3002\u6211\u4eec\u901a\u5e38\u4f1a\u81ea\u5df1\u8bbe\u5b9a\u4e00\u4e2a\u5750\u6807\u7684\u8303\u56f4\uff0c\u4e4b\u540e\u518d\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5c06\u8fd9\u4e9b\u5750\u6807\u53d8\u6362\u4e3a\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u3002\u7136\u540e\u5c06\u8fd9\u4e9b\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u4f20\u5165\u5149\u6805\u5668(Rasterizer)\uff0c\u5c06\u5b83\u4eec\u53d8\u6362\u4e3a\u5c4f\u5e55\u4e0a\u7684\u4e8c\u7ef4\u5750\u6807\u6216\u50cf\u7d20\u3002 \u5c06\u5750\u6807\u53d8\u6362\u4e3a\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\uff0c\u63a5\u7740\u518d\u8f6c\u5316\u4e3a\u5c4f\u5e55\u5750\u6807\u7684\u8fc7\u7a0b\u901a\u5e38\u662f\u5206\u6b65\u8fdb\u884c\u7684\uff0c\u4e5f\u5c31\u662f\u7c7b\u4f3c\u4e8e\u6d41\u6c34\u7ebf\u90a3\u6837\u5b50\u3002\u5728\u6d41\u6c34\u7ebf\u4e2d\uff0c\u7269\u4f53\u7684\u9876\u70b9\u5728\u6700\u7ec8\u8f6c\u5316\u4e3a\u5c4f\u5e55\u5750\u6807\u4e4b\u524d\u8fd8\u4f1a\u88ab\u53d8\u6362\u5230\u591a\u4e2a\u5750\u6807\u7cfb\u7edf(Coordinate System)\u3002\u5c06\u7269\u4f53\u7684\u5750\u6807\u53d8\u6362\u5230\u51e0\u4e2a \u8fc7\u6e21 \u5750\u6807\u7cfb(Intermediate Coordinate System)\u7684\u4f18\u70b9\u5728\u4e8e\uff0c\u5728\u8fd9\u4e9b\u7279\u5b9a\u7684\u5750\u6807\u7cfb\u7edf\u4e2d\uff0c\u4e00\u4e9b\u64cd\u4f5c\u6216\u8fd0\u7b97\u66f4\u52a0\u65b9\u4fbf\u548c\u5bb9\u6613\uff0c\u8fd9\u4e00\u70b9\u5f88\u5feb\u5c31\u4f1a\u53d8\u5f97\u5f88\u660e\u663e\u3002\u5bf9\u6211\u4eec\u6765\u8bf4\u6bd4\u8f83\u91cd\u8981\u7684\u603b\u5171\u67095\u4e2a\u4e0d\u540c\u7684\u5750\u6807\u7cfb\u7edf\uff1a \u5c40\u90e8\u7a7a\u95f4(Local Space\uff0c\u6216\u8005\u79f0\u4e3a\u7269\u4f53\u7a7a\u95f4(Object Space)) \u4e16\u754c\u7a7a\u95f4(World Space) \u89c2\u5bdf\u7a7a\u95f4(View Space\uff0c\u6216\u8005\u79f0\u4e3a\u89c6\u89c9\u7a7a\u95f4(Eye Space)) \u88c1\u526a\u7a7a\u95f4(Clip Space) \u5c4f\u5e55\u7a7a\u95f4(Screen Space) \u8fd9\u5c31\u662f\u4e00\u4e2a\u9876\u70b9\u5728\u6700\u7ec8\u88ab\u8f6c\u5316\u4e3a\u7247\u6bb5\u4e4b\u524d\u9700\u8981\u7ecf\u5386\u7684\u6240\u6709\u4e0d\u540c\u72b6\u6001\u3002 \u4f60\u73b0\u5728\u53ef\u80fd\u4f1a\u5bf9\u4ec0\u4e48\u662f\u5750\u6807\u7a7a\u95f4\uff0c\u4ec0\u4e48\u662f\u5750\u6807\u7cfb\u7edf\u611f\u5230\u975e\u5e38\u56f0\u60d1\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u7528\u4e00\u79cd\u66f4\u52a0\u901a\u4fd7\u7684\u65b9\u5f0f\u6765\u89e3\u91ca\u5b83\u4eec\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u5c06\u663e\u793a\u4e00\u4e2a\u6574\u4f53\u7684\u56fe\u7247\uff0c\u4e4b\u540e\u6211\u4eec\u4f1a\u8bb2\u89e3\u6bcf\u4e2a\u7a7a\u95f4\u7684\u5177\u4f53\u529f\u80fd\u3002","title":"\u5750\u6807\u7cfb\u7edf"},{"location":"01%20Getting%20started/08%20Coordinate%20Systems/#_2","text":"\u4e3a\u4e86\u5c06\u5750\u6807\u4ece\u4e00\u4e2a\u5750\u6807\u7cfb\u53d8\u6362\u5230\u53e6\u4e00\u4e2a\u5750\u6807\u7cfb\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u51e0\u4e2a\u53d8\u6362\u77e9\u9635\uff0c\u6700\u91cd\u8981\u7684\u51e0\u4e2a\u5206\u522b\u662f \u6a21\u578b (Model)\u3001 \u89c2\u5bdf (View)\u3001 \u6295\u5f71 (Projection)\u4e09\u4e2a\u77e9\u9635\u3002\u6211\u4eec\u7684\u9876\u70b9\u5750\u6807\u8d77\u59cb\u4e8e \u5c40\u90e8\u7a7a\u95f4 (Local Space)\uff0c\u5728\u8fd9\u91cc\u5b83\u79f0\u4e3a \u5c40\u90e8\u5750\u6807 (Local Coordinate)\uff0c\u5b83\u5728\u4e4b\u540e\u4f1a\u53d8\u4e3a \u4e16\u754c\u5750\u6807 (World Coordinate)\uff0c \u89c2\u5bdf\u5750\u6807 (View Coordinate)\uff0c \u88c1\u526a\u5750\u6807 (Clip Coordinate)\uff0c\u5e76\u6700\u540e\u4ee5 \u5c4f\u5e55\u5750\u6807 (Screen Coordinate)\u7684\u5f62\u5f0f\u7ed3\u675f\u3002\u4e0b\u9762\u7684\u8fd9\u5f20\u56fe\u5c55\u793a\u4e86\u6574\u4e2a\u6d41\u7a0b\u4ee5\u53ca\u5404\u4e2a\u53d8\u6362\u8fc7\u7a0b\u505a\u4e86\u4ec0\u4e48\uff1a \u5c40\u90e8\u5750\u6807\u662f\u5bf9\u8c61\u76f8\u5bf9\u4e8e\u5c40\u90e8\u539f\u70b9\u7684\u5750\u6807\uff0c\u4e5f\u662f\u7269\u4f53\u8d77\u59cb\u7684\u5750\u6807\u3002 \u4e0b\u4e00\u6b65\u662f\u5c06\u5c40\u90e8\u5750\u6807\u53d8\u6362\u4e3a\u4e16\u754c\u7a7a\u95f4\u5750\u6807\uff0c\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u662f\u5904\u4e8e\u4e00\u4e2a\u66f4\u5927\u7684\u7a7a\u95f4\u8303\u56f4\u7684\u3002\u8fd9\u4e9b\u5750\u6807\u76f8\u5bf9\u4e8e\u4e16\u754c\u7684\u5168\u5c40\u539f\u70b9\uff0c\u5b83\u4eec\u4f1a\u548c\u5176\u5b83\u7269\u4f53\u4e00\u8d77\u76f8\u5bf9\u4e8e\u4e16\u754c\u7684\u539f\u70b9\u8fdb\u884c\u6446\u653e\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u4e16\u754c\u5750\u6807\u53d8\u6362\u4e3a\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5750\u6807\u90fd\u662f\u4ece\u6444\u50cf\u673a\u6216\u8005\u8bf4\u89c2\u5bdf\u8005\u7684\u89d2\u5ea6\u8fdb\u884c\u89c2\u5bdf\u7684\u3002 \u5750\u6807\u5230\u8fbe\u89c2\u5bdf\u7a7a\u95f4\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u6295\u5f71\u5230\u88c1\u526a\u5750\u6807\u3002\u88c1\u526a\u5750\u6807\u4f1a\u88ab\u5904\u7406\u81f3-1.0\u52301.0\u7684\u8303\u56f4\u5185\uff0c\u5e76\u5224\u65ad\u54ea\u4e9b\u9876\u70b9\u5c06\u4f1a\u51fa\u73b0\u5728\u5c4f\u5e55\u4e0a\u3002 \u6700\u540e\uff0c\u6211\u4eec\u5c06\u88c1\u526a\u5750\u6807\u53d8\u6362\u4e3a\u5c4f\u5e55\u5750\u6807\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u53eb\u505a \u89c6\u53e3\u53d8\u6362 (Viewport Transform)\u7684\u8fc7\u7a0b\u3002\u89c6\u53e3\u53d8\u6362\u5c06\u4f4d\u4e8e-1.0\u52301.0\u8303\u56f4\u7684\u5750\u6807\u53d8\u6362\u5230\u7531 glViewport \u51fd\u6570\u6240\u5b9a\u4e49\u7684\u5750\u6807\u8303\u56f4\u5185\u3002\u6700\u540e\u53d8\u6362\u51fa\u6765\u7684\u5750\u6807\u5c06\u4f1a\u9001\u5230\u5149\u6805\u5668\uff0c\u5c06\u5176\u8f6c\u5316\u4e3a\u7247\u6bb5\u3002 \u4f60\u53ef\u80fd\u5df2\u7ecf\u5927\u81f4\u4e86\u89e3\u4e86\u6bcf\u4e2a\u5750\u6807\u7a7a\u95f4\u7684\u4f5c\u7528\u3002\u6211\u4eec\u4e4b\u6240\u4ee5\u5c06\u9876\u70b9\u53d8\u6362\u5230\u5404\u4e2a\u4e0d\u540c\u7684\u7a7a\u95f4\u7684\u539f\u56e0\u662f\u6709\u4e9b\u64cd\u4f5c\u5728\u7279\u5b9a\u7684\u5750\u6807\u7cfb\u7edf\u4e2d\u624d\u6709\u610f\u4e49\u4e14\u66f4\u65b9\u4fbf\u3002\u4f8b\u5982\uff0c\u5f53\u9700\u8981\u5bf9\u7269\u4f53\u8fdb\u884c\u4fee\u6539\u7684\u65f6\u5019\uff0c\u5728\u5c40\u90e8\u7a7a\u95f4\u4e2d\u6765\u64cd\u4f5c\u4f1a\u66f4\u8bf4\u5f97\u901a\uff1b\u5982\u679c\u8981\u5bf9\u4e00\u4e2a\u7269\u4f53\u505a\u51fa\u4e00\u4e2a\u76f8\u5bf9\u4e8e\u5176\u5b83\u7269\u4f53\u4f4d\u7f6e\u7684\u64cd\u4f5c\u65f6\uff0c\u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\u6765\u505a\u8fd9\u4e2a\u624d\u66f4\u8bf4\u5f97\u901a\uff0c\u7b49\u7b49\u3002\u5982\u679c\u6211\u4eec\u613f\u610f\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u76f4\u63a5\u4ece\u5c40\u90e8\u7a7a\u95f4\u53d8\u6362\u5230\u88c1\u526a\u7a7a\u95f4\u7684\u53d8\u6362\u77e9\u9635\uff0c\u4f46\u90a3\u6837\u4f1a\u5931\u53bb\u5f88\u591a\u7075\u6d3b\u6027\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u8981\u66f4\u4ed4\u7ec6\u5730\u8ba8\u8bba\u5404\u4e2a\u5750\u6807\u7cfb\u7edf\u3002","title":"\u6982\u8ff0"},{"location":"01%20Getting%20started/08%20Coordinate%20Systems/#_3","text":"\u5c40\u90e8\u7a7a\u95f4\u662f\u6307\u7269\u4f53\u6240\u5728\u7684\u5750\u6807\u7a7a\u95f4\uff0c\u5373\u5bf9\u8c61\u6700\u5f00\u59cb\u6240\u5728\u7684\u5730\u65b9\u3002\u60f3\u8c61\u4f60\u5728\u4e00\u4e2a\u5efa\u6a21\u8f6f\u4ef6\uff08\u6bd4\u5982\u8bf4Blender\uff09\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u7acb\u65b9\u4f53\u3002\u4f60\u521b\u5efa\u7684\u7acb\u65b9\u4f53\u7684\u539f\u70b9\u6709\u53ef\u80fd\u4f4d\u4e8e(0, 0, 0)\uff0c\u5373\u4fbf\u5b83\u6709\u53ef\u80fd\u6700\u540e\u5728\u7a0b\u5e8f\u4e2d\u5904\u4e8e\u5b8c\u5168\u4e0d\u540c\u7684\u4f4d\u7f6e\u3002\u751a\u81f3\u6709\u53ef\u80fd\u4f60\u521b\u5efa\u7684\u6240\u6709\u6a21\u578b\u90fd\u4ee5(0, 0, 0)\u4e3a\u521d\u59cb\u4f4d\u7f6e\uff08\u8bd1\u6ce8\uff1a\u7136\u800c\u5b83\u4eec\u4f1a\u6700\u7ec8\u51fa\u73b0\u5728\u4e16\u754c\u7684\u4e0d\u540c\u4f4d\u7f6e\uff09\u3002\u6240\u4ee5\uff0c\u4f60\u7684\u6a21\u578b\u7684\u6240\u6709\u9876\u70b9\u90fd\u662f\u5728 \u5c40\u90e8 \u7a7a\u95f4\u4e2d\uff1a\u5b83\u4eec\u76f8\u5bf9\u4e8e\u4f60\u7684\u7269\u4f53\u6765\u8bf4\u90fd\u662f\u5c40\u90e8\u7684\u3002 \u6211\u4eec\u4e00\u76f4\u4f7f\u7528\u7684\u90a3\u4e2a\u7bb1\u5b50\u7684\u9876\u70b9\u662f\u88ab\u8bbe\u5b9a\u5728-0.5\u52300.5\u7684\u5750\u6807\u8303\u56f4\u4e2d\uff0c(0, 0)\u662f\u5b83\u7684\u539f\u70b9\u3002\u8fd9\u4e9b\u90fd\u662f\u5c40\u90e8\u5750\u6807\u3002","title":"\u5c40\u90e8\u7a7a\u95f4"},{"location":"01%20Getting%20started/08%20Coordinate%20Systems/#_4","text":"\u5982\u679c\u6211\u4eec\u5c06\u6211\u4eec\u6240\u6709\u7684\u7269\u4f53\u5bfc\u5165\u5230\u7a0b\u5e8f\u5f53\u4e2d\uff0c\u5b83\u4eec\u6709\u53ef\u80fd\u4f1a\u5168\u6324\u5728\u4e16\u754c\u7684\u539f\u70b9(0, 0, 0)\u4e0a\uff0c\u8fd9\u5e76\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u3002\u6211\u4eec\u60f3\u4e3a\u6bcf\u4e00\u4e2a\u7269\u4f53\u5b9a\u4e49\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4ece\u800c\u80fd\u5728\u66f4\u5927\u7684\u4e16\u754c\u5f53\u4e2d\u653e\u7f6e\u5b83\u4eec\u3002\u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u5750\u6807\u6b63\u5982\u5176\u540d\uff1a\u662f\u6307\u9876\u70b9\u76f8\u5bf9\u4e8e\uff08\u6e38\u620f\uff09\u4e16\u754c\u7684\u5750\u6807\u3002\u5982\u679c\u4f60\u5e0c\u671b\u5c06\u7269\u4f53\u5206\u6563\u5728\u4e16\u754c\u4e0a\u6446\u653e\uff08\u7279\u522b\u662f\u975e\u5e38\u771f\u5b9e\u7684\u90a3\u6837\uff09\uff0c\u8fd9\u5c31\u662f\u4f60\u5e0c\u671b\u7269\u4f53\u53d8\u6362\u5230\u7684\u7a7a\u95f4\u3002\u7269\u4f53\u7684\u5750\u6807\u5c06\u4f1a\u4ece\u5c40\u90e8\u53d8\u6362\u5230\u4e16\u754c\u7a7a\u95f4\uff1b\u8be5\u53d8\u6362\u662f\u7531 \u6a21\u578b \u77e9\u9635(Model Matrix)\u5b9e\u73b0\u7684\u3002 \u6a21\u578b\u77e9\u9635\u662f\u4e00\u79cd\u53d8\u6362\u77e9\u9635\uff0c\u5b83\u80fd\u901a\u8fc7\u5bf9\u7269\u4f53\u8fdb\u884c\u4f4d\u79fb\u3001\u7f29\u653e\u3001\u65cb\u8f6c\u6765\u5c06\u5b83\u7f6e\u4e8e\u5b83\u672c\u5e94\u8be5\u5728\u7684\u4f4d\u7f6e\u6216\u671d\u5411\u3002\u4f60\u53ef\u4ee5\u5c06\u5b83\u60f3\u50cf\u4e3a\u53d8\u6362\u4e00\u4e2a\u623f\u5b50\uff0c\u4f60\u9700\u8981\u5148\u5c06\u5b83\u7f29\u5c0f\uff08\u5b83\u5728\u5c40\u90e8\u7a7a\u95f4\u4e2d\u592a\u5927\u4e86\uff09\uff0c\u5e76\u5c06\u5176\u4f4d\u79fb\u81f3\u90ca\u533a\u7684\u4e00\u4e2a\u5c0f\u9547\uff0c\u7136\u540e\u5728y\u8f74\u4e0a\u5f80\u5de6\u65cb\u8f6c\u4e00\u70b9\u4ee5\u642d\u914d\u9644\u8fd1\u7684\u623f\u5b50\u3002\u4f60\u4e5f\u53ef\u4ee5\u628a\u4e0a\u4e00\u8282\u5c06\u7bb1\u5b50\u5230\u5904\u6446\u653e\u5728\u573a\u666f\u4e2d\u7528\u7684\u90a3\u4e2a\u77e9\u9635\u5927\u81f4\u770b\u4f5c\u4e00\u4e2a\u6a21\u578b\u77e9\u9635\uff1b\u6211\u4eec\u5c06\u7bb1\u5b50\u7684\u5c40\u90e8\u5750\u6807\u53d8\u6362\u5230\u573a\u666f/\u4e16\u754c\u4e2d\u7684\u4e0d\u540c\u4f4d\u7f6e\u3002","title":"\u4e16\u754c\u7a7a\u95f4"},{"location":"01%20Getting%20started/08%20Coordinate%20Systems/#_5","text":"\u89c2\u5bdf\u7a7a\u95f4\u7ecf\u5e38\u88ab\u4eba\u4eec\u79f0\u4e4bOpenGL\u7684 \u6444\u50cf\u673a (Camera)\uff08\u6240\u4ee5\u6709\u65f6\u4e5f\u79f0\u4e3a \u6444\u50cf\u673a\u7a7a\u95f4 (Camera Space)\u6216 \u89c6\u89c9\u7a7a\u95f4 (Eye Space)\uff09\u3002\u89c2\u5bdf\u7a7a\u95f4\u662f\u5c06\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u8f6c\u5316\u4e3a\u7528\u6237\u89c6\u91ce\u524d\u65b9\u7684\u5750\u6807\u800c\u4ea7\u751f\u7684\u7ed3\u679c\u3002\u56e0\u6b64\u89c2\u5bdf\u7a7a\u95f4\u5c31\u662f\u4ece\u6444\u50cf\u673a\u7684\u89c6\u89d2\u6240\u89c2\u5bdf\u5230\u7684\u7a7a\u95f4\u3002\u800c\u8fd9\u901a\u5e38\u662f\u7531\u4e00\u7cfb\u5217\u7684\u4f4d\u79fb\u548c\u65cb\u8f6c\u7684\u7ec4\u5408\u6765\u5b8c\u6210\uff0c\u5e73\u79fb/\u65cb\u8f6c\u573a\u666f\u4ece\u800c\u4f7f\u5f97\u7279\u5b9a\u7684\u5bf9\u8c61\u88ab\u53d8\u6362\u5230\u6444\u50cf\u673a\u7684\u524d\u65b9\u3002\u8fd9\u4e9b\u7ec4\u5408\u5728\u4e00\u8d77\u7684\u53d8\u6362\u901a\u5e38\u5b58\u50a8\u5728\u4e00\u4e2a \u89c2\u5bdf\u77e9\u9635 (View Matrix)\u91cc\uff0c\u5b83\u88ab\u7528\u6765\u5c06\u4e16\u754c\u5750\u6807\u53d8\u6362\u5230\u89c2\u5bdf\u7a7a\u95f4\u3002\u5728\u4e0b\u4e00\u8282\u4e2d\u6211\u4eec\u5c06\u6df1\u5165\u8ba8\u8bba\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u8fd9\u6837\u7684\u89c2\u5bdf\u77e9\u9635\u6765\u6a21\u62df\u4e00\u4e2a\u6444\u50cf\u673a\u3002","title":"\u89c2\u5bdf\u7a7a\u95f4"},{"location":"01%20Getting%20started/08%20Coordinate%20Systems/#_6","text":"\u5728\u4e00\u4e2a\u9876\u70b9\u7740\u8272\u5668\u8fd0\u884c\u7684\u6700\u540e\uff0cOpenGL\u671f\u671b\u6240\u6709\u7684\u5750\u6807\u90fd\u80fd\u843d\u5728\u4e00\u4e2a\u7279\u5b9a\u7684\u8303\u56f4\u5185\uff0c\u4e14\u4efb\u4f55\u5728\u8fd9\u4e2a\u8303\u56f4\u4e4b\u5916\u7684\u70b9\u90fd\u5e94\u8be5\u88ab \u88c1\u526a\u6389 (Clipped)\u3002\u88ab\u88c1\u526a\u6389\u7684\u5750\u6807\u5c31\u4f1a\u88ab\u5ffd\u7565\uff0c\u6240\u4ee5\u5269\u4e0b\u7684\u5750\u6807\u5c31\u5c06\u53d8\u4e3a\u5c4f\u5e55\u4e0a\u53ef\u89c1\u7684\u7247\u6bb5\u3002\u8fd9\u4e5f\u5c31\u662f \u88c1\u526a\u7a7a\u95f4 (Clip Space)\u540d\u5b57\u7684\u7531\u6765\u3002 \u56e0\u4e3a\u5c06\u6240\u6709\u53ef\u89c1\u7684\u5750\u6807\u90fd\u6307\u5b9a\u5728-1.0\u52301.0\u7684\u8303\u56f4\u5185\u4e0d\u662f\u5f88\u76f4\u89c2\uff0c\u6240\u4ee5\u6211\u4eec\u4f1a\u6307\u5b9a\u81ea\u5df1\u7684\u5750\u6807\u96c6(Coordinate Set)\u5e76\u5c06\u5b83\u53d8\u6362\u56de\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7cfb\uff0c\u5c31\u50cfOpenGL\u671f\u671b\u7684\u90a3\u6837\u3002 \u4e3a\u4e86\u5c06\u9876\u70b9\u5750\u6807\u4ece\u89c2\u5bdf\u53d8\u6362\u5230\u88c1\u526a\u7a7a\u95f4\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a \u6295\u5f71\u77e9\u9635 (Projection Matrix)\uff0c\u5b83\u6307\u5b9a\u4e86\u4e00\u4e2a\u8303\u56f4\u7684\u5750\u6807\uff0c\u6bd4\u5982\u5728\u6bcf\u4e2a\u7ef4\u5ea6\u4e0a\u7684-1000\u52301000\u3002\u6295\u5f71\u77e9\u9635\u63a5\u7740\u4f1a\u5c06\u5728\u8fd9\u4e2a\u6307\u5b9a\u7684\u8303\u56f4\u5185\u7684\u5750\u6807\u53d8\u6362\u4e3a\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7684\u8303\u56f4(-1.0, 1.0)\u3002\u6240\u6709\u5728\u8303\u56f4\u5916\u7684\u5750\u6807\u4e0d\u4f1a\u88ab\u6620\u5c04\u5230\u5728-1.0\u52301.0\u7684\u8303\u56f4\u4e4b\u95f4\uff0c\u6240\u4ee5\u4f1a\u88ab\u88c1\u526a\u6389\u3002\u5728\u4e0a\u9762\u8fd9\u4e2a\u6295\u5f71\u77e9\u9635\u6240\u6307\u5b9a\u7684\u8303\u56f4\u5185\uff0c\u5750\u6807(1250, 500, 750)\u5c06\u662f\u4e0d\u53ef\u89c1\u7684\uff0c\u8fd9\u662f\u7531\u4e8e\u5b83\u7684x\u5750\u6807\u8d85\u51fa\u4e86\u8303\u56f4\uff0c\u5b83\u88ab\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5927\u4e8e1.0\u7684\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\uff0c\u6240\u4ee5\u88ab\u88c1\u526a\u6389\u4e86\u3002 Important \u5982\u679c\u53ea\u662f\u56fe\u5143(Primitive)\uff0c\u4f8b\u5982\u4e09\u89d2\u5f62\uff0c\u7684\u4e00\u90e8\u5206\u8d85\u51fa\u4e86 \u88c1\u526a\u4f53\u79ef (Clipping Volume)\uff0c\u5219OpenGL\u4f1a\u91cd\u65b0\u6784\u5efa\u8fd9\u4e2a\u4e09\u89d2\u5f62\u4e3a\u4e00\u4e2a\u6216\u591a\u4e2a\u4e09\u89d2\u5f62\u8ba9\u5176\u80fd\u591f\u9002\u5408\u8fd9\u4e2a\u88c1\u526a\u8303\u56f4\u3002 \u7531\u6295\u5f71\u77e9\u9635\u521b\u5efa\u7684 \u89c2\u5bdf\u7bb1 (Viewing Box)\u88ab\u79f0\u4e3a \u5e73\u622a\u5934\u4f53 (Frustum)\uff0c\u6bcf\u4e2a\u51fa\u73b0\u5728\u5e73\u622a\u5934\u4f53\u8303\u56f4\u5185\u7684\u5750\u6807\u90fd\u4f1a\u6700\u7ec8\u51fa\u73b0\u5728\u7528\u6237\u7684\u5c4f\u5e55\u4e0a\u3002\u5c06\u7279\u5b9a\u8303\u56f4\u5185\u7684\u5750\u6807\u8f6c\u5316\u5230\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7cfb\u7684\u8fc7\u7a0b\uff08\u800c\u4e14\u5b83\u5f88\u5bb9\u6613\u88ab\u6620\u5c04\u52302D\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\uff09\u88ab\u79f0\u4e4b\u4e3a \u6295\u5f71 (Projection)\uff0c\u56e0\u4e3a\u4f7f\u7528\u6295\u5f71\u77e9\u9635\u80fd\u5c063D\u5750\u6807 \u6295\u5f71 (Project)\u5230\u5f88\u5bb9\u6613\u6620\u5c04\u52302D\u7684\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7cfb\u4e2d\u3002 \u4e00\u65e6\u6240\u6709\u9876\u70b9\u88ab\u53d8\u6362\u5230\u88c1\u526a\u7a7a\u95f4\uff0c\u6700\u7ec8\u7684\u64cd\u4f5c\u2014\u2014 \u900f\u89c6\u9664\u6cd5 (Perspective Division)\u5c06\u4f1a\u6267\u884c\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6211\u4eec\u5c06\u4f4d\u7f6e\u5411\u91cf\u7684x\uff0cy\uff0cz\u5206\u91cf\u5206\u522b\u9664\u4ee5\u5411\u91cf\u7684\u9f50\u6b21w\u5206\u91cf\uff1b\u900f\u89c6\u9664\u6cd5\u662f\u5c064D\u88c1\u526a\u7a7a\u95f4\u5750\u6807\u53d8\u6362\u4e3a3D\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7684\u8fc7\u7a0b\u3002\u8fd9\u4e00\u6b65\u4f1a\u5728\u6bcf\u4e00\u4e2a\u9876\u70b9\u7740\u8272\u5668\u8fd0\u884c\u7684\u6700\u540e\u88ab\u81ea\u52a8\u6267\u884c\u3002 \u5728\u8fd9\u4e00\u9636\u6bb5\u4e4b\u540e\uff0c\u6700\u7ec8\u7684\u5750\u6807\u5c06\u4f1a\u88ab\u6620\u5c04\u5230\u5c4f\u5e55\u7a7a\u95f4\u4e2d\uff08\u4f7f\u7528 glViewport \u4e2d\u7684\u8bbe\u5b9a\uff09\uff0c\u5e76\u88ab\u53d8\u6362\u6210\u7247\u6bb5\u3002 \u5c06\u89c2\u5bdf\u5750\u6807\u53d8\u6362\u4e3a\u88c1\u526a\u5750\u6807\u7684\u6295\u5f71\u77e9\u9635\u53ef\u4ee5\u4e3a\u4e24\u79cd\u4e0d\u540c\u7684\u5f62\u5f0f\uff0c\u6bcf\u79cd\u5f62\u5f0f\u90fd\u5b9a\u4e49\u4e86\u4e0d\u540c\u7684\u5e73\u622a\u5934\u4f53\u3002\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u521b\u5efa\u4e00\u4e2a \u6b63\u5c04 \u6295\u5f71\u77e9\u9635(Orthographic Projection Matrix)\u6216\u4e00\u4e2a \u900f\u89c6 \u6295\u5f71\u77e9\u9635(Perspective Projection Matrix)\u3002","title":"\u88c1\u526a\u7a7a\u95f4"},{"location":"01%20Getting%20started/08%20Coordinate%20Systems/#_7","text":"\u6b63\u5c04\u6295\u5f71\u77e9\u9635\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u7acb\u65b9\u4f53\u7684\u5e73\u622a\u5934\u7bb1\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u4e2a\u88c1\u526a\u7a7a\u95f4\uff0c\u5728\u8fd9\u7a7a\u95f4\u4e4b\u5916\u7684\u9876\u70b9\u90fd\u4f1a\u88ab\u88c1\u526a\u6389\u3002\u521b\u5efa\u4e00\u4e2a\u6b63\u5c04\u6295\u5f71\u77e9\u9635\u9700\u8981\u6307\u5b9a\u53ef\u89c1\u5e73\u622a\u5934\u4f53\u7684\u5bbd\u3001\u9ad8\u548c\u957f\u5ea6\u3002\u5728\u4f7f\u7528\u6b63\u5c04\u6295\u5f71\u77e9\u9635\u53d8\u6362\u81f3\u88c1\u526a\u7a7a\u95f4\u4e4b\u540e\u5904\u4e8e\u8fd9\u4e2a\u5e73\u622a\u5934\u4f53\u5185\u7684\u6240\u6709\u5750\u6807\u5c06\u4e0d\u4f1a\u88ab\u88c1\u526a\u6389\u3002\u5b83\u7684\u5e73\u622a\u5934\u4f53\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u5bb9\u5668\uff1a \u4e0a\u9762\u7684\u5e73\u622a\u5934\u4f53\u5b9a\u4e49\u4e86\u53ef\u89c1\u7684\u5750\u6807\uff0c\u5b83\u7531\u5bbd\u3001\u9ad8\u3001 \u8fd1 (Near)\u5e73\u9762\u548c \u8fdc (Far)\u5e73\u9762\u6240\u6307\u5b9a\u3002\u4efb\u4f55\u51fa\u73b0\u5728\u8fd1\u5e73\u9762\u4e4b\u524d\u6216\u8fdc\u5e73\u9762\u4e4b\u540e\u7684\u5750\u6807\u90fd\u4f1a\u88ab\u88c1\u526a\u6389\u3002\u6b63\u5c04\u5e73\u622a\u5934\u4f53\u76f4\u63a5\u5c06\u5e73\u622a\u5934\u4f53\u5185\u90e8\u7684\u6240\u6709\u5750\u6807\u6620\u5c04\u4e3a\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5411\u91cf\u7684w\u5206\u91cf\u90fd\u6ca1\u6709\u8fdb\u884c\u6539\u53d8\uff1b\u5982\u679cw\u5206\u91cf\u7b49\u4e8e1.0\uff0c\u900f\u89c6\u9664\u6cd5\u5219\u4e0d\u4f1a\u6539\u53d8\u8fd9\u4e2a\u5750\u6807\u3002 \u8981\u521b\u5efa\u4e00\u4e2a\u6b63\u5c04\u6295\u5f71\u77e9\u9635\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528GLM\u7684\u5185\u7f6e\u51fd\u6570 glm::ortho \uff1a glm::ortho(0.0f, 800.0f, 0.0f, 600.0f, 0.1f, 100.0f); \u524d\u4e24\u4e2a\u53c2\u6570\u6307\u5b9a\u4e86\u5e73\u622a\u5934\u4f53\u7684\u5de6\u53f3\u5750\u6807\uff0c\u7b2c\u4e09\u548c\u7b2c\u56db\u53c2\u6570\u6307\u5b9a\u4e86\u5e73\u622a\u5934\u4f53\u7684\u5e95\u90e8\u548c\u9876\u90e8\u3002\u901a\u8fc7\u8fd9\u56db\u4e2a\u53c2\u6570\u6211\u4eec\u5b9a\u4e49\u4e86\u8fd1\u5e73\u9762\u548c\u8fdc\u5e73\u9762\u7684\u5927\u5c0f\uff0c\u7136\u540e\u7b2c\u4e94\u548c\u7b2c\u516d\u4e2a\u53c2\u6570\u5219\u5b9a\u4e49\u4e86\u8fd1\u5e73\u9762\u548c\u8fdc\u5e73\u9762\u7684\u8ddd\u79bb\u3002\u8fd9\u4e2a\u6295\u5f71\u77e9\u9635\u4f1a\u5c06\u5904\u4e8e\u8fd9\u4e9bx\uff0cy\uff0cz\u503c\u8303\u56f4\u5185\u7684\u5750\u6807\u53d8\u6362\u4e3a\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u3002 \u6b63\u5c04\u6295\u5f71\u77e9\u9635\u76f4\u63a5\u5c06\u5750\u6807\u6620\u5c04\u52302D\u5e73\u9762\u4e2d\uff0c\u5373\u4f60\u7684\u5c4f\u5e55\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e00\u4e2a\u76f4\u63a5\u7684\u6295\u5f71\u77e9\u9635\u4f1a\u4ea7\u751f\u4e0d\u771f\u5b9e\u7684\u7ed3\u679c\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6295\u5f71\u6ca1\u6709\u5c06 \u900f\u89c6 (Perspective)\u8003\u8651\u8fdb\u53bb\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981 \u900f\u89c6\u6295\u5f71 \u77e9\u9635\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002","title":"\u6b63\u5c04\u6295\u5f71"},{"location":"01%20Getting%20started/08%20Coordinate%20Systems/#_8","text":"\u5982\u679c\u4f60\u66fe\u7ecf\u4f53\u9a8c\u8fc7 \u5b9e\u9645\u751f\u6d3b \u7ed9\u4f60\u5e26\u6765\u7684\u666f\u8c61\uff0c\u4f60\u5c31\u4f1a\u6ce8\u610f\u5230\u79bb\u4f60\u8d8a\u8fdc\u7684\u4e1c\u897f\u770b\u8d77\u6765\u66f4\u5c0f\u3002\u8fd9\u4e2a\u5947\u602a\u7684\u6548\u679c\u79f0\u4e4b\u4e3a \u900f\u89c6 (Perspective)\u3002\u900f\u89c6\u7684\u6548\u679c\u5728\u6211\u4eec\u770b\u4e00\u6761\u65e0\u9650\u957f\u7684\u9ad8\u901f\u516c\u8def\u6216\u94c1\u8def\u65f6\u5c24\u5176\u660e\u663e\uff0c\u6b63\u5982\u4e0b\u9762\u56fe\u7247\u663e\u793a\u7684\u90a3\u6837\uff1a \u6b63\u5982\u4f60\u770b\u5230\u7684\u90a3\u6837\uff0c\u7531\u4e8e\u900f\u89c6\uff0c\u8fd9\u4e24\u6761\u7ebf\u5728\u5f88\u8fdc\u7684\u5730\u65b9\u770b\u8d77\u6765\u4f1a\u76f8\u4ea4\u3002\u8fd9\u6b63\u662f\u900f\u89c6\u6295\u5f71\u60f3\u8981\u6a21\u4eff\u7684\u6548\u679c\uff0c\u5b83\u662f\u4f7f\u7528 \u900f\u89c6\u6295\u5f71\u77e9\u9635 \u6765\u5b8c\u6210\u7684\u3002\u8fd9\u4e2a\u6295\u5f71\u77e9\u9635\u5c06\u7ed9\u5b9a\u7684\u5e73\u622a\u5934\u4f53\u8303\u56f4\u6620\u5c04\u5230\u88c1\u526a\u7a7a\u95f4\uff0c\u9664\u6b64\u4e4b\u5916\u8fd8\u4fee\u6539\u4e86\u6bcf\u4e2a\u9876\u70b9\u5750\u6807\u7684w\u503c\uff0c\u4ece\u800c\u4f7f\u5f97\u79bb\u89c2\u5bdf\u8005\u8d8a\u8fdc\u7684\u9876\u70b9\u5750\u6807w\u5206\u91cf\u8d8a\u5927\u3002\u88ab\u53d8\u6362\u5230\u88c1\u526a\u7a7a\u95f4\u7684\u5750\u6807\u90fd\u4f1a\u5728-w\u5230w\u7684\u8303\u56f4\u4e4b\u95f4\uff08\u4efb\u4f55\u5927\u4e8e\u8fd9\u4e2a\u8303\u56f4\u7684\u5750\u6807\u90fd\u4f1a\u88ab\u88c1\u526a\u6389\uff09\u3002OpenGL\u8981\u6c42\u6240\u6709\u53ef\u89c1\u7684\u5750\u6807\u90fd\u843d\u5728-1.0\u52301.0\u8303\u56f4\u5185\uff0c\u4f5c\u4e3a\u9876\u70b9\u7740\u8272\u5668\u6700\u540e\u7684\u8f93\u51fa\uff0c\u56e0\u6b64\uff0c\u4e00\u65e6\u5750\u6807\u5728\u88c1\u526a\u7a7a\u95f4\u5185\u4e4b\u540e\uff0c\u900f\u89c6\u9664\u6cd5\u5c31\u4f1a\u88ab\u5e94\u7528\u5230\u88c1\u526a\u7a7a\u95f4\u5750\u6807\u4e0a\uff1a out = \\begin{pmatrix} x /w \\\\ y / w \\\\ z / w \\end{pmatrix} \u9876\u70b9\u5750\u6807\u7684\u6bcf\u4e2a\u5206\u91cf\u90fd\u4f1a\u9664\u4ee5\u5b83\u7684w\u5206\u91cf\uff0c\u8ddd\u79bb\u89c2\u5bdf\u8005\u8d8a\u8fdc\u9876\u70b9\u5750\u6807\u5c31\u4f1a\u8d8a\u5c0f\u3002\u8fd9\u662fw\u5206\u91cf\u91cd\u8981\u7684\u53e6\u4e00\u4e2a\u539f\u56e0\uff0c\u5b83\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u8fdb\u884c\u900f\u89c6\u6295\u5f71\u3002\u6700\u540e\u7684\u7ed3\u679c\u5750\u6807\u5c31\u662f\u5904\u4e8e\u6807\u51c6\u5316\u8bbe\u5907\u7a7a\u95f4\u4e2d\u7684\u3002\u5982\u679c\u4f60\u5bf9\u6b63\u5c04\u6295\u5f71\u77e9\u9635\u548c\u900f\u89c6\u6295\u5f71\u77e9\u9635\u662f\u5982\u4f55\u8ba1\u7b97\u7684\u5f88\u611f\u5174\u8da3\uff08\u4e14\u4e0d\u4f1a\u5bf9\u6570\u5b66\u611f\u5230\u6050\u60e7\u7684\u8bdd\uff09\u6211\u63a8\u8350\u8fd9\u7bc7\u7531Songho\u5199\u7684 \u6587\u7ae0 \u3002 \u5728GLM\u4e2d\u53ef\u4ee5\u8fd9\u6837\u521b\u5efa\u4e00\u4e2a\u900f\u89c6\u6295\u5f71\u77e9\u9635\uff1a glm::mat4 proj = glm::perspective(glm::radians(45.0f), (float)width/(float)height, 0.1f, 100.0f); \u540c\u6837\uff0c glm::perspective \u6240\u505a\u7684\u5176\u5b9e\u5c31\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u5b9a\u4e49\u4e86\u53ef\u89c6\u7a7a\u95f4\u7684\u5927 \u5e73\u622a\u5934\u4f53 \uff0c\u4efb\u4f55\u5728\u8fd9\u4e2a\u5e73\u622a\u5934\u4f53\u4ee5\u5916\u7684\u4e1c\u897f\u6700\u540e\u90fd\u4e0d\u4f1a\u51fa\u73b0\u5728\u88c1\u526a\u7a7a\u95f4\u4f53\u79ef\u5185\uff0c\u5e76\u4e14\u5c06\u4f1a\u53d7\u5230\u88c1\u526a\u3002\u4e00\u4e2a\u900f\u89c6\u5e73\u622a\u5934\u4f53\u53ef\u4ee5\u88ab\u770b\u4f5c\u4e00\u4e2a\u4e0d\u5747\u5300\u5f62\u72b6\u7684\u7bb1\u5b50\uff0c\u5728\u8fd9\u4e2a\u7bb1\u5b50\u5185\u90e8\u7684\u6bcf\u4e2a\u5750\u6807\u90fd\u4f1a\u88ab\u6620\u5c04\u5230\u88c1\u526a\u7a7a\u95f4\u4e0a\u7684\u4e00\u4e2a\u70b9\u3002\u4e0b\u9762\u662f\u4e00\u5f20\u900f\u89c6\u5e73\u622a\u5934\u4f53\u7684\u56fe\u7247\uff1a \u5b83\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5b9a\u4e49\u4e86 fov \u7684\u503c\uff0c\u5b83\u8868\u793a\u7684\u662f \u89c6\u91ce (Field of View)\uff0c\u5e76\u4e14\u8bbe\u7f6e\u4e86\u89c2\u5bdf\u7a7a\u95f4\u7684\u5927\u5c0f\u3002\u5982\u679c\u60f3\u8981\u4e00\u4e2a\u771f\u5b9e\u7684\u89c2\u5bdf\u6548\u679c\uff0c\u5b83\u7684\u503c\u901a\u5e38\u8bbe\u7f6e\u4e3a45.0f\uff0c\u4f46\u60f3\u8981\u4e00\u4e2a\u6bc1\u706d\u6218\u58eb(DOOM,\u7ecf\u5178\u7684\u7cfb\u5217\u7b2c\u4e00\u4eba\u79f0\u5c04\u51fb\u6e38\u620f)\u98ce\u683c\u7684\u7ed3\u679c\u4f60\u53ef\u4ee5\u5c06\u5176\u8bbe\u7f6e\u4e00\u4e2a\u66f4\u5927\u7684\u503c\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8bbe\u7f6e\u4e86\u5bbd\u9ad8\u6bd4\uff0c\u7531\u89c6\u53e3\u7684\u5bbd\u9664\u4ee5\u9ad8\u6240\u5f97\u3002\u7b2c\u4e09\u548c\u7b2c\u56db\u4e2a\u53c2\u6570\u8bbe\u7f6e\u4e86\u5e73\u622a\u5934\u4f53\u7684 \u8fd1 \u548c \u8fdc \u5e73\u9762\u3002\u6211\u4eec\u901a\u5e38\u8bbe\u7f6e\u8fd1\u8ddd\u79bb\u4e3a0.1f\uff0c\u800c\u8fdc\u8ddd\u79bb\u8bbe\u4e3a100.0f\u3002\u6240\u6709\u5728\u8fd1\u5e73\u9762\u548c\u8fdc\u5e73\u9762\u5185\u4e14\u5904\u4e8e\u5e73\u622a\u5934\u4f53\u5185\u7684\u9876\u70b9\u90fd\u4f1a\u88ab\u6e32\u67d3\u3002 Important \u5f53\u4f60\u628a\u900f\u89c6\u77e9\u9635\u7684 near \u503c\u8bbe\u7f6e\u592a\u5927\u65f6\uff08\u598210.0f\uff09\uff0cOpenGL\u4f1a\u5c06\u9760\u8fd1\u6444\u50cf\u673a\u7684\u5750\u6807\uff08\u57280.0f\u548c10.0f\u4e4b\u95f4\uff09\u90fd\u88c1\u526a\u6389\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u4f60\u5728\u6e38\u620f\u4e2d\u5f88\u719f\u6089\u7684\u89c6\u89c9\u6548\u679c\uff1a\u5728\u592a\u8fc7\u9760\u8fd1\u4e00\u4e2a\u7269\u4f53\u7684\u65f6\u5019\u4f60\u7684\u89c6\u7ebf\u4f1a\u76f4\u63a5\u7a7f\u8fc7\u53bb\u3002 \u5f53\u4f7f\u7528\u6b63\u5c04\u6295\u5f71\u65f6\uff0c\u6bcf\u4e00\u4e2a\u9876\u70b9\u5750\u6807\u90fd\u4f1a\u76f4\u63a5\u6620\u5c04\u5230\u88c1\u526a\u7a7a\u95f4\u4e2d\u800c\u4e0d\u7ecf\u8fc7\u4efb\u4f55\u7cbe\u7ec6\u7684\u900f\u89c6\u9664\u6cd5\uff08\u5b83\u4ecd\u7136\u4f1a\u8fdb\u884c\u900f\u89c6\u9664\u6cd5\uff0c\u53ea\u662fw\u5206\u91cf\u6ca1\u6709\u88ab\u6539\u53d8\uff08\u5b83\u4fdd\u6301\u4e3a1\uff09\uff0c\u56e0\u6b64\u6ca1\u6709\u8d77\u4f5c\u7528\uff09\u3002\u56e0\u4e3a\u6b63\u5c04\u6295\u5f71\u6ca1\u6709\u4f7f\u7528\u900f\u89c6\uff0c\u8fdc\u5904\u7684\u7269\u4f53\u4e0d\u4f1a\u663e\u5f97\u66f4\u5c0f\uff0c\u6240\u4ee5\u4ea7\u751f\u5947\u602a\u7684\u89c6\u89c9\u6548\u679c\u3002\u7531\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6b63\u5c04\u6295\u5f71\u4e3b\u8981\u7528\u4e8e\u4e8c\u7ef4\u6e32\u67d3\u4ee5\u53ca\u4e00\u4e9b\u5efa\u7b51\u6216\u5de5\u7a0b\u7684\u7a0b\u5e8f\uff0c\u5728\u8fd9\u4e9b\u573a\u666f\u4e2d\u6211\u4eec\u66f4\u5e0c\u671b\u9876\u70b9\u4e0d\u4f1a\u88ab\u900f\u89c6\u6240\u5e72\u6270\u3002\u67d0\u4e9b\u5982 Blender \u7b49\u8fdb\u884c\u4e09\u7ef4\u5efa\u6a21\u7684\u8f6f\u4ef6\u6709\u65f6\u5728\u5efa\u6a21\u65f6\u4e5f\u4f1a\u4f7f\u7528\u6b63\u5c04\u6295\u5f71\uff0c\u56e0\u4e3a\u5b83\u5728\u5404\u4e2a\u7ef4\u5ea6\u4e0b\u90fd\u66f4\u51c6\u786e\u5730\u63cf\u7ed8\u4e86\u6bcf\u4e2a\u7269\u4f53\u3002\u4e0b\u9762\u4f60\u80fd\u591f\u770b\u5230\u5728Blender\u91cc\u9762\u4f7f\u7528\u4e24\u79cd\u6295\u5f71\u65b9\u5f0f\u7684\u5bf9\u6bd4\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u4f7f\u7528\u900f\u89c6\u6295\u5f71\u7684\u8bdd\uff0c\u8fdc\u5904\u7684\u9876\u70b9\u770b\u8d77\u6765\u6bd4\u8f83\u5c0f\uff0c\u800c\u5728\u6b63\u5c04\u6295\u5f71\u4e2d\u6bcf\u4e2a\u9876\u70b9\u8ddd\u79bb\u89c2\u5bdf\u8005\u7684\u8ddd\u79bb\u90fd\u662f\u4e00\u6837\u7684\u3002","title":"\u900f\u89c6\u6295\u5f71"},{"location":"01%20Getting%20started/08%20Coordinate%20Systems/#_9","text":"\u6211\u4eec\u4e3a\u4e0a\u8ff0\u7684\u6bcf\u4e00\u4e2a\u6b65\u9aa4\u90fd\u521b\u5efa\u4e86\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\uff1a\u6a21\u578b\u77e9\u9635\u3001\u89c2\u5bdf\u77e9\u9635\u548c\u6295\u5f71\u77e9\u9635\u3002\u4e00\u4e2a\u9876\u70b9\u5750\u6807\u5c06\u4f1a\u6839\u636e\u4ee5\u4e0b\u8fc7\u7a0b\u88ab\u53d8\u6362\u5230\u88c1\u526a\u5750\u6807\uff1a V_{clip} = M_{projection} \\cdot M_{view} \\cdot M_{model} \\cdot V_{local} \u6ce8\u610f\u77e9\u9635\u8fd0\u7b97\u7684\u987a\u5e8f\u662f\u76f8\u53cd\u7684\uff08\u8bb0\u4f4f\u6211\u4eec\u9700\u8981\u4ece\u53f3\u5f80\u5de6\u9605\u8bfb\u77e9\u9635\u7684\u4e58\u6cd5\uff09\u3002\u6700\u540e\u7684\u9876\u70b9\u5e94\u8be5\u88ab\u8d4b\u503c\u5230\u9876\u70b9\u7740\u8272\u5668\u4e2d\u7684 gl_Position \uff0cOpenGL\u5c06\u4f1a\u81ea\u52a8\u8fdb\u884c\u900f\u89c6\u9664\u6cd5\u548c\u88c1\u526a\u3002 Important \u7136\u540e\u5462\uff1f \u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u51fa\u8981\u6c42\u6240\u6709\u7684\u9876\u70b9\u90fd\u5728\u88c1\u526a\u7a7a\u95f4\u5185\uff0c\u8fd9\u6b63\u662f\u6211\u4eec\u521a\u624d\u4f7f\u7528\u53d8\u6362\u77e9\u9635\u6240\u505a\u7684\u3002OpenGL\u7136\u540e\u5bf9 \u88c1\u526a\u5750\u6807 \u6267\u884c \u900f\u89c6\u9664\u6cd5 \u4ece\u800c\u5c06\u5b83\u4eec\u53d8\u6362\u5230 \u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807 \u3002OpenGL\u4f1a\u4f7f\u7528 glViewPort \u5185\u90e8\u7684\u53c2\u6570\u6765\u5c06\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u6620\u5c04\u5230 \u5c4f\u5e55\u5750\u6807 \uff0c\u6bcf\u4e2a\u5750\u6807\u90fd\u5173\u8054\u4e86\u4e00\u4e2a\u5c4f\u5e55\u4e0a\u7684\u70b9\uff08\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u662f\u4e00\u4e2a800x600\u7684\u5c4f\u5e55\uff09\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a\u89c6\u53e3\u53d8\u6362\u3002 \u8fd9\u4e00\u7ae0\u7684\u4e3b\u9898\u53ef\u80fd\u4f1a\u6bd4\u8f83\u96be\u7406\u89e3\uff0c\u5982\u679c\u4f60\u4ecd\u7136\u4e0d\u786e\u5b9a\u6bcf\u4e2a\u7a7a\u95f4\u7684\u4f5c\u7528\u7684\u8bdd\uff0c\u4f60\u4e5f\u4e0d\u5fc5\u592a\u62c5\u5fc3\u3002\u63a5\u4e0b\u6765\u4f60\u4f1a\u770b\u5230\u6211\u4eec\u662f\u600e\u6837\u8fd0\u7528\u8fd9\u4e9b\u5750\u6807\u7a7a\u95f4\u7684\uff0c\u800c\u4e14\u4e4b\u540e\u4e5f\u4f1a\u6709\u8db3\u591f\u591a\u7684\u4f8b\u5b50\u3002","title":"\u628a\u5b83\u4eec\u90fd\u7ec4\u5408\u5230\u4e00\u8d77"},{"location":"01%20Getting%20started/08%20Coordinate%20Systems/#3d","text":"\u65e2\u7136\u6211\u4eec\u77e5\u9053\u4e86\u5982\u4f55\u5c063D\u5750\u6807\u53d8\u6362\u4e3a2D\u5750\u6807\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528\u771f\u6b63\u76843D\u7269\u4f53\uff0c\u800c\u4e0d\u662f\u67af\u71e5\u76842D\u5e73\u9762\u4e86\u3002 \u5728\u5f00\u59cb\u8fdb\u884c3D\u7ed8\u56fe\u65f6\uff0c\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u6a21\u578b\u77e9\u9635\u3002\u8fd9\u4e2a\u6a21\u578b\u77e9\u9635\u5305\u542b\u4e86\u4f4d\u79fb\u3001\u7f29\u653e\u4e0e\u65cb\u8f6c\u64cd\u4f5c\uff0c\u5b83\u4eec\u4f1a\u88ab\u5e94\u7528\u5230\u6240\u6709\u7269\u4f53\u7684\u9876\u70b9\u4e0a\uff0c\u4ee5 \u53d8\u6362 \u5b83\u4eec\u5230\u5168\u5c40\u7684\u4e16\u754c\u7a7a\u95f4\u3002\u8ba9\u6211\u4eec\u53d8\u6362\u4e00\u4e0b\u6211\u4eec\u7684\u5e73\u9762\uff0c\u5c06\u5176\u7ed5\u7740x\u8f74\u65cb\u8f6c\uff0c\u4f7f\u5b83\u770b\u8d77\u6765\u50cf\u653e\u5728\u5730\u4e0a\u4e00\u6837\u3002\u8fd9\u4e2a\u6a21\u578b\u77e9\u9635\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a glm::mat4 model; model = glm::rotate(model, glm::radians(-55.0f), glm::vec3(1.0f, 0.0f, 0.0f)); \u901a\u8fc7\u5c06\u9876\u70b9\u5750\u6807\u4e58\u4ee5\u8fd9\u4e2a\u6a21\u578b\u77e9\u9635\uff0c\u6211\u4eec\u5c06\u8be5\u9876\u70b9\u5750\u6807\u53d8\u6362\u5230\u4e16\u754c\u5750\u6807\u3002\u6211\u4eec\u7684\u5e73\u9762\u770b\u8d77\u6765\u5c31\u662f\u5728\u5730\u677f\u4e0a\uff0c\u4ee3\u8868\u5168\u5c40\u4e16\u754c\u91cc\u7684\u5e73\u9762\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u89c2\u5bdf\u77e9\u9635\u3002\u6211\u4eec\u60f3\u8981\u5728\u573a\u666f\u91cc\u9762\u7a0d\u5fae\u5f80\u540e\u79fb\u52a8\uff0c\u4ee5\u4f7f\u5f97\u7269\u4f53\u53d8\u6210\u53ef\u89c1\u7684\uff08\u5f53\u5728\u4e16\u754c\u7a7a\u95f4\u65f6\uff0c\u6211\u4eec\u4f4d\u4e8e\u539f\u70b9(0,0,0)\uff09\u3002\u8981\u60f3\u5728\u573a\u666f\u91cc\u9762\u79fb\u52a8\uff0c\u5148\u4ed4\u7ec6\u60f3\u4e00\u60f3\u4e0b\u9762\u8fd9\u4e2a\u53e5\u5b50\uff1a \u5c06\u6444\u50cf\u673a\u5411\u540e\u79fb\u52a8\uff0c\u548c\u5c06\u6574\u4e2a\u573a\u666f\u5411\u524d\u79fb\u52a8\u662f\u4e00\u6837\u7684\u3002 \u8fd9\u6b63\u662f\u89c2\u5bdf\u77e9\u9635\u6240\u505a\u7684\uff0c\u6211\u4eec\u4ee5\u76f8\u53cd\u4e8e\u6444\u50cf\u673a\u79fb\u52a8\u7684\u65b9\u5411\u79fb\u52a8\u6574\u4e2a\u573a\u666f\u3002\u56e0\u4e3a\u6211\u4eec\u60f3\u8981\u5f80\u540e\u79fb\u52a8\uff0c\u5e76\u4e14OpenGL\u662f\u4e00\u4e2a\u53f3\u624b\u5750\u6807\u7cfb(Right-handed System)\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6cbf\u7740z\u8f74\u7684\u6b63\u65b9\u5411\u79fb\u52a8\u3002\u6211\u4eec\u4f1a\u901a\u8fc7\u5c06\u573a\u666f\u6cbf\u7740z\u8f74\u8d1f\u65b9\u5411\u5e73\u79fb\u6765\u5b9e\u73b0\u3002\u5b83\u4f1a\u7ed9\u6211\u4eec\u4e00\u79cd\u6211\u4eec\u5728\u5f80\u540e\u79fb\u52a8\u7684\u611f\u89c9\u3002 Important \u53f3\u624b\u5750\u6807\u7cfb(Right-handed System) \u6309\u7167\u60ef\u4f8b\uff0cOpenGL\u662f\u4e00\u4e2a\u53f3\u624b\u5750\u6807\u7cfb\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u6b63x\u8f74\u5728\u4f60\u7684\u53f3\u624b\u8fb9\uff0c\u6b63y\u8f74\u671d\u4e0a\uff0c\u800c\u6b63z\u8f74\u662f\u671d\u5411\u540e\u65b9\u7684\u3002\u60f3\u8c61\u4f60\u7684\u5c4f\u5e55\u5904\u4e8e\u4e09\u4e2a\u8f74\u7684\u4e2d\u5fc3\uff0c\u5219\u6b63z\u8f74\u7a7f\u8fc7\u4f60\u7684\u5c4f\u5e55\u671d\u5411\u4f60\u3002\u5750\u6807\u7cfb\u753b\u8d77\u6765\u5982\u4e0b\uff1a \u4e3a\u4e86\u7406\u89e3\u4e3a\u4ec0\u4e48\u88ab\u79f0\u4e3a\u53f3\u624b\u5750\u6807\u7cfb\uff0c\u6309\u5982\u4e0b\u7684\u6b65\u9aa4\u505a\uff1a \u6cbf\u7740\u6b63y\u8f74\u65b9\u5411\u4f38\u51fa\u4f60\u7684\u53f3\u81c2\uff0c\u624b\u6307\u7740\u4e0a\u65b9\u3002 \u5927\u62c7\u6307\u6307\u5411\u53f3\u65b9\u3002 \u98df\u6307\u6307\u5411\u4e0a\u65b9\u3002 \u4e2d\u6307\u5411\u4e0b\u5f2f\u66f290\u5ea6\u3002 \u5982\u679c\u4f60\u7684\u52a8\u4f5c\u6b63\u786e\uff0c\u90a3\u4e48\u4f60\u7684\u5927\u62c7\u6307\u6307\u5411\u6b63x\u8f74\u65b9\u5411\uff0c\u98df\u6307\u6307\u5411\u6b63y\u8f74\u65b9\u5411\uff0c\u4e2d\u6307\u6307\u5411\u6b63z\u8f74\u65b9\u5411\u3002\u5982\u679c\u4f60\u7528\u5de6\u81c2\u6765\u505a\u8fd9\u4e9b\u52a8\u4f5c\uff0c\u4f60\u4f1a\u53d1\u73b0z\u8f74\u7684\u65b9\u5411\u662f\u76f8\u53cd\u7684\u3002\u8fd9\u4e2a\u53eb\u505a\u5de6\u624b\u5750\u6807\u7cfb\uff0c\u5b83\u88abDirectX\u5e7f\u6cdb\u5730\u4f7f\u7528\u3002\u6ce8\u610f\u5728\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7cfb\u4e2dOpenGL\u5b9e\u9645\u4e0a\u4f7f\u7528\u7684\u662f\u5de6\u624b\u5750\u6807\u7cfb\uff08\u6295\u5f71\u77e9\u9635\u4ea4\u6362\u4e86\u5de6\u53f3\u624b\uff09\u3002 \u5728\u4e0b\u4e00\u4e2a\u6559\u7a0b\u4e2d\u6211\u4eec\u5c06\u4f1a\u8be6\u7ec6\u8ba8\u8bba\u5982\u4f55\u5728\u573a\u666f\u4e2d\u79fb\u52a8\u3002\u5c31\u76ee\u524d\u6765\u8bf4\uff0c\u89c2\u5bdf\u77e9\u9635\u662f\u8fd9\u6837\u7684\uff1a glm::mat4 view; // \u6ce8\u610f\uff0c\u6211\u4eec\u5c06\u77e9\u9635\u5411\u6211\u4eec\u8981\u8fdb\u884c\u79fb\u52a8\u573a\u666f\u7684\u53cd\u65b9\u5411\u79fb\u52a8\u3002 view = glm::translate(view, glm::vec3(0.0f, 0.0f, -3.0f)); \u6700\u540e\u6211\u4eec\u9700\u8981\u505a\u7684\u662f\u5b9a\u4e49\u4e00\u4e2a\u6295\u5f71\u77e9\u9635\u3002\u6211\u4eec\u5e0c\u671b\u5728\u573a\u666f\u4e2d\u4f7f\u7528\u900f\u89c6\u6295\u5f71\uff0c\u6240\u4ee5\u50cf\u8fd9\u6837\u58f0\u660e\u4e00\u4e2a\u6295\u5f71\u77e9\u9635\uff1a glm::mat4 projection; projection = glm::perspective(glm::radians(45.0f), screenWidth / screenHeight, 0.1f, 100.0f); \u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u53d8\u6362\u77e9\u9635\uff0c\u6211\u4eec\u5e94\u8be5\u5c06\u5b83\u4eec\u4f20\u5165\u7740\u8272\u5668\u3002\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u58f0\u660e\u4e00\u4e2auniform\u53d8\u6362\u77e9\u9635\u7136\u540e\u5c06\u5b83\u4e58\u4ee5\u9876\u70b9\u5750\u6807\uff1a #version 330 core layout (location = 0) in vec3 aPos; ... uniform mat4 model; uniform mat4 view; uniform mat4 projection; void main() { // \u6ce8\u610f\u4e58\u6cd5\u8981\u4ece\u53f3\u5411\u5de6\u8bfb gl_Position = projection * view * model * vec4(aPos, 1.0); ... } \u6211\u4eec\u8fd8\u5e94\u8be5\u5c06\u77e9\u9635\u4f20\u5165\u7740\u8272\u5668\uff08\u8fd9\u901a\u5e38\u5728\u6bcf\u6b21\u7684\u6e32\u67d3\u8fed\u4ee3\u4e2d\u8fdb\u884c\uff0c\u56e0\u4e3a\u53d8\u6362\u77e9\u9635\u4f1a\u7ecf\u5e38\u53d8\u52a8\uff09\uff1a int modelLoc = glGetUniformLocation(ourShader.ID, \"model\"); glUniformMatrix4fv(modelLoc, 1, GL_FALSE, glm::value_ptr(model)); ... // \u89c2\u5bdf\u77e9\u9635\u548c\u6295\u5f71\u77e9\u9635\u4e0e\u4e4b\u7c7b\u4f3c \u6211\u4eec\u7684\u9876\u70b9\u5750\u6807\u5df2\u7ecf\u4f7f\u7528\u6a21\u578b\u3001\u89c2\u5bdf\u548c\u6295\u5f71\u77e9\u9635\u8fdb\u884c\u53d8\u6362\u4e86\uff0c\u6700\u7ec8\u7684\u7269\u4f53\u5e94\u8be5\u4f1a\uff1a \u7a0d\u5fae\u5411\u540e\u503e\u659c\u81f3\u5730\u677f\u65b9\u5411\u3002 \u79bb\u6211\u4eec\u6709\u4e00\u4e9b\u8ddd\u79bb\u3002 \u6709\u900f\u89c6\u6548\u679c\uff08\u9876\u70b9\u8d8a\u8fdc\uff0c\u53d8\u5f97\u8d8a\u5c0f\uff09\u3002 \u8ba9\u6211\u4eec\u68c0\u67e5\u4e00\u4e0b\u7ed3\u679c\u662f\u5426\u6ee1\u8db3\u8fd9\u4e9b\u8981\u6c42\uff1a \u5b83\u770b\u8d77\u6765\u5c31\u50cf\u662f\u4e00\u4e2a3D\u7684\u5e73\u9762\uff0c\u9759\u6b62\u5728\u4e00\u4e2a\u865a\u6784\u7684\u5730\u677f\u4e0a\u3002\u5982\u679c\u4f60\u5f97\u5230\u7684\u4e0d\u662f\u76f8\u540c\u7684\u7ed3\u679c\uff0c\u8bf7\u68c0\u67e5\u4e0b\u5b8c\u6574\u7684 \u6e90\u4ee3\u7801 \u3002","title":"\u8fdb\u51653D"},{"location":"01%20Getting%20started/08%20Coordinate%20Systems/#3d_1","text":"\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u4e00\u76f4\u90fd\u5728\u4f7f\u7528\u4e00\u4e2a2D\u5e73\u9762\uff0c\u800c\u4e14\u751a\u81f3\u662f\u57283D\u7a7a\u95f4\u91cc\uff01\u6240\u4ee5\uff0c\u8ba9\u6211\u4eec\u5927\u80c6\u5730\u62d3\u5c55\u6211\u4eec\u76842D\u5e73\u9762\u4e3a\u4e00\u4e2a3D\u7acb\u65b9\u4f53\u3002\u8981\u60f3\u6e32\u67d3\u4e00\u4e2a\u7acb\u65b9\u4f53\uff0c\u6211\u4eec\u4e00\u5171\u9700\u898136\u4e2a\u9876\u70b9\uff086\u4e2a\u9762 x \u6bcf\u4e2a\u9762\u67092\u4e2a\u4e09\u89d2\u5f62\u7ec4\u6210 x \u6bcf\u4e2a\u4e09\u89d2\u5f62\u67093\u4e2a\u9876\u70b9\uff09\uff0c\u8fd936\u4e2a\u9876\u70b9\u7684\u4f4d\u7f6e\u4f60\u53ef\u4ee5\u4ece \u8fd9\u91cc \u83b7\u53d6\u3002 \u4e3a\u4e86\u6709\u8da3\u4e00\u70b9\uff0c\u6211\u4eec\u5c06\u8ba9\u7acb\u65b9\u4f53\u968f\u7740\u65f6\u95f4\u65cb\u8f6c\uff1a model = glm::rotate(model, (float)glfwGetTime() * glm::radians(50.0f), glm::vec3(0.5f, 1.0f, 0.0f)); \u7136\u540e\u6211\u4eec\u4f7f\u7528 glDrawArrays \u6765\u7ed8\u5236\u7acb\u65b9\u4f53\uff0c\u4f46\u8fd9\u4e00\u6b21\u603b\u5171\u670936\u4e2a\u9876\u70b9\u3002 glDrawArrays(GL_TRIANGLES, 0, 36); \u5982\u679c\u4e00\u5207\u987a\u5229\u7684\u8bdd\u4f60\u5e94\u8be5\u80fd\u5f97\u5230\u4e0b\u9762\u8fd9\u6837\u7684\u6548\u679c\uff1a \u8fd9\u7684\u786e\u6709\u70b9\u50cf\u662f\u4e00\u4e2a\u7acb\u65b9\u4f53\uff0c\u4f46\u53c8\u6709\u79cd\u8bf4\u4e0d\u51fa\u7684\u5947\u602a\u3002\u7acb\u65b9\u4f53\u7684\u67d0\u4e9b\u672c\u5e94\u88ab\u906e\u6321\u4f4f\u7684\u9762\u88ab\u7ed8\u5236\u5728\u4e86\u8fd9\u4e2a\u7acb\u65b9\u4f53\u5176\u4ed6\u9762\u4e4b\u4e0a\u3002\u4e4b\u6240\u4ee5\u8fd9\u6837\u662f\u56e0\u4e3aOpenGL\u662f\u4e00\u4e2a\u4e09\u89d2\u5f62\u4e00\u4e2a\u4e09\u89d2\u5f62\u5730\u6765\u7ed8\u5236\u4f60\u7684\u7acb\u65b9\u4f53\u7684\uff0c\u6240\u4ee5\u5373\u4fbf\u4e4b\u524d\u90a3\u91cc\u6709\u4e1c\u897f\u5b83\u4e5f\u4f1a\u8986\u76d6\u4e4b\u524d\u7684\u50cf\u7d20\u3002\u56e0\u4e3a\u8fd9\u4e2a\u539f\u56e0\uff0c\u6709\u4e9b\u4e09\u89d2\u5f62\u4f1a\u88ab\u7ed8\u5236\u5728\u5176\u5b83\u4e09\u89d2\u5f62\u4e0a\u9762\uff0c\u867d\u7136\u5b83\u4eec\u672c\u4e0d\u5e94\u8be5\u662f\u88ab\u8986\u76d6\u7684\u3002 \u5e78\u8fd0\u7684\u662f\uff0cOpenGL\u5b58\u50a8\u6df1\u5ea6\u4fe1\u606f\u5728\u4e00\u4e2a\u53eb\u505a Z\u7f13\u51b2 (Z-buffer)\u7684\u7f13\u51b2\u4e2d\uff0c\u5b83\u5141\u8bb8OpenGL\u51b3\u5b9a\u4f55\u65f6\u8986\u76d6\u4e00\u4e2a\u50cf\u7d20\u800c\u4f55\u65f6\u4e0d\u8986\u76d6\u3002\u901a\u8fc7\u4f7f\u7528Z\u7f13\u51b2\uff0c\u6211\u4eec\u53ef\u4ee5\u914d\u7f6eOpenGL\u6765\u8fdb\u884c\u6df1\u5ea6\u6d4b\u8bd5\u3002","title":"\u66f4\u52a0 3D"},{"location":"01%20Getting%20started/08%20Coordinate%20Systems/#z","text":"OpenGL\u5b58\u50a8\u5b83\u7684\u6240\u6709\u6df1\u5ea6\u4fe1\u606f\u4e8e\u4e00\u4e2aZ\u7f13\u51b2(Z-buffer)\u4e2d\uff0c\u4e5f\u88ab\u79f0\u4e3a \u6df1\u5ea6\u7f13\u51b2 (Depth Buffer)\u3002GLFW\u4f1a\u81ea\u52a8\u4e3a\u4f60\u751f\u6210\u8fd9\u6837\u4e00\u4e2a\u7f13\u51b2\uff08\u5c31\u50cf\u5b83\u4e5f\u6709\u4e00\u4e2a\u989c\u8272\u7f13\u51b2\u6765\u5b58\u50a8\u8f93\u51fa\u56fe\u50cf\u7684\u989c\u8272\uff09\u3002\u6df1\u5ea6\u503c\u5b58\u50a8\u5728\u6bcf\u4e2a\u7247\u6bb5\u91cc\u9762\uff08\u4f5c\u4e3a\u7247\u6bb5\u7684 z \u503c\uff09\uff0c\u5f53\u7247\u6bb5\u60f3\u8981\u8f93\u51fa\u5b83\u7684\u989c\u8272\u65f6\uff0cOpenGL\u4f1a\u5c06\u5b83\u7684\u6df1\u5ea6\u503c\u548cz\u7f13\u51b2\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u5f53\u524d\u7684\u7247\u6bb5\u5728\u5176\u5b83\u7247\u6bb5\u4e4b\u540e\uff0c\u5b83\u5c06\u4f1a\u88ab\u4e22\u5f03\uff0c\u5426\u5219\u5c06\u4f1a\u8986\u76d6\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a \u6df1\u5ea6\u6d4b\u8bd5 (Depth Testing)\uff0c\u5b83\u662f\u7531OpenGL\u81ea\u52a8\u5b8c\u6210\u7684\u3002 \u7136\u800c\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u786e\u5b9aOpenGL\u771f\u7684\u6267\u884c\u4e86\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u9996\u5148\u6211\u4eec\u8981\u544a\u8bc9OpenGL\u6211\u4eec\u60f3\u8981\u542f\u7528\u6df1\u5ea6\u6d4b\u8bd5\uff1b\u5b83\u9ed8\u8ba4\u662f\u5173\u95ed\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 glEnable \u51fd\u6570\u6765\u5f00\u542f\u6df1\u5ea6\u6d4b\u8bd5\u3002 glEnable \u548c glDisable \u51fd\u6570\u5141\u8bb8\u6211\u4eec\u542f\u7528\u6216\u7981\u7528\u67d0\u4e2aOpenGL\u529f\u80fd\u3002\u8fd9\u4e2a\u529f\u80fd\u4f1a\u4e00\u76f4\u4fdd\u6301\u542f\u7528/\u7981\u7528\u72b6\u6001\uff0c\u76f4\u5230\u53e6\u4e00\u4e2a\u8c03\u7528\u6765\u7981\u7528/\u542f\u7528\u5b83\u3002\u73b0\u5728\u6211\u4eec\u60f3\u542f\u7528\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u9700\u8981\u5f00\u542f GL_DEPTH_TEST \uff1a glEnable(GL_DEPTH_TEST); \u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u6211\u4eec\u4e5f\u60f3\u8981\u5728\u6bcf\u6b21\u6e32\u67d3\u8fed\u4ee3\u4e4b\u524d\u6e05\u9664\u6df1\u5ea6\u7f13\u51b2\uff08\u5426\u5219\u524d\u4e00\u5e27\u7684\u6df1\u5ea6\u4fe1\u606f\u4ecd\u7136\u4fdd\u5b58\u5728\u7f13\u51b2\u4e2d\uff09\u3002\u5c31\u50cf\u6e05\u9664\u989c\u8272\u7f13\u51b2\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728 glClear \u51fd\u6570\u4e2d\u6307\u5b9a DEPTH_BUFFER_BIT \u4f4d\u6765\u6e05\u9664\u6df1\u5ea6\u7f13\u51b2\uff1a glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); \u6211\u4eec\u6765\u91cd\u65b0\u8fd0\u884c\u4e0b\u7a0b\u5e8f\u770b\u770bOpenGL\u662f\u5426\u6267\u884c\u4e86\u6df1\u5ea6\u6d4b\u8bd5\uff1a \u5c31\u662f\u8fd9\u6837\uff01\u4e00\u4e2a\u5f00\u542f\u4e86\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u5404\u4e2a\u9762\u90fd\u662f\u7eb9\u7406\uff0c\u5e76\u4e14\u8fd8\u5728\u65cb\u8f6c\u7684\u7acb\u65b9\u4f53\uff01\u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u6709\u95ee\u9898\u53ef\u4ee5\u5230 \u8fd9\u91cc \u4e0b\u8f7d\u6e90\u7801\u8fdb\u884c\u6bd4\u5bf9\u3002","title":"Z\u7f13\u51b2"},{"location":"01%20Getting%20started/08%20Coordinate%20Systems/#_10","text":"\u73b0\u5728\u6211\u4eec\u60f3\u5728\u5c4f\u5e55\u4e0a\u663e\u793a10\u4e2a\u7acb\u65b9\u4f53\u3002\u6bcf\u4e2a\u7acb\u65b9\u4f53\u770b\u8d77\u6765\u90fd\u662f\u4e00\u6837\u7684\uff0c\u533a\u522b\u5728\u4e8e\u5b83\u4eec\u5728\u4e16\u754c\u7684\u4f4d\u7f6e\u53ca\u65cb\u8f6c\u89d2\u5ea6\u4e0d\u540c\u3002\u7acb\u65b9\u4f53\u7684\u56fe\u5f62\u5e03\u5c40\u5df2\u7ecf\u5b9a\u4e49\u597d\u4e86\uff0c\u6240\u4ee5\u5f53\u6e32\u67d3\u66f4\u591a\u7269\u4f53\u7684\u65f6\u5019\u6211\u4eec\u4e0d\u9700\u8981\u6539\u53d8\u6211\u4eec\u7684\u7f13\u51b2\u6570\u7ec4\u548c\u5c5e\u6027\u6570\u7ec4\uff0c\u6211\u4eec\u552f\u4e00\u9700\u8981\u505a\u7684\u53ea\u662f\u6539\u53d8\u6bcf\u4e2a\u5bf9\u8c61\u7684\u6a21\u578b\u77e9\u9635\u6765\u5c06\u7acb\u65b9\u4f53\u53d8\u6362\u5230\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\u3002 \u9996\u5148\uff0c\u8ba9\u6211\u4eec\u4e3a\u6bcf\u4e2a\u7acb\u65b9\u4f53\u5b9a\u4e49\u4e00\u4e2a\u4f4d\u79fb\u5411\u91cf\u6765\u6307\u5b9a\u5b83\u5728\u4e16\u754c\u7a7a\u95f4\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u5c06\u5728\u4e00\u4e2a glm::vec3 \u6570\u7ec4\u4e2d\u5b9a\u4e4910\u4e2a\u7acb\u65b9\u4f53\u4f4d\u7f6e\uff1a glm::vec3 cubePositions[] = { glm::vec3( 0.0f, 0.0f, 0.0f), glm::vec3( 2.0f, 5.0f, -15.0f), glm::vec3(-1.5f, -2.2f, -2.5f), glm::vec3(-3.8f, -2.0f, -12.3f), glm::vec3( 2.4f, -0.4f, -3.5f), glm::vec3(-1.7f, 3.0f, -7.5f), glm::vec3( 1.3f, -2.0f, -2.5f), glm::vec3( 1.5f, 2.0f, -2.5f), glm::vec3( 1.5f, 0.2f, -1.5f), glm::vec3(-1.3f, 1.0f, -1.5f) }; \u73b0\u5728\uff0c\u5728\u6e38\u620f\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u8c03\u7528 glDrawArrays 10\u6b21\uff0c\u4f46\u8fd9\u6b21\u5728\u6211\u4eec\u6e32\u67d3\u4e4b\u524d\u6bcf\u6b21\u4f20\u5165\u4e00\u4e2a\u4e0d\u540c\u7684\u6a21\u578b\u77e9\u9635\u5230\u9876\u70b9\u7740\u8272\u5668\u4e2d\u3002\u6211\u4eec\u5c06\u4f1a\u5728\u6e38\u620f\u5faa\u73af\u4e2d\u521b\u5efa\u4e00\u4e2a\u5c0f\u7684\u5faa\u73af\u7528\u4e0d\u540c\u7684\u6a21\u578b\u77e9\u9635\u6e32\u67d3\u6211\u4eec\u7684\u7269\u4f5310\u6b21\u3002\u6ce8\u610f\u6211\u4eec\u4e5f\u5bf9\u6bcf\u4e2a\u7bb1\u5b50\u52a0\u4e86\u4e00\u70b9\u65cb\u8f6c\uff1a glBindVertexArray(VAO); for(unsigned int i = 0; i < 10; i++) { glm::mat4 model; model = glm::translate(model, cubePositions[i]); float angle = 20.0f * i; model = glm::rotate(model, glm::radians(angle), glm::vec3(1.0f, 0.3f, 0.5f)); ourShader.setMat4(\"model\", model); glDrawArrays(GL_TRIANGLES, 0, 36); } \u8fd9\u6bb5\u4ee3\u7801\u5c06\u4f1a\u5728\u6bcf\u6b21\u65b0\u7acb\u65b9\u4f53\u7ed8\u5236\u51fa\u6765\u7684\u65f6\u5019\u66f4\u65b0\u6a21\u578b\u77e9\u9635\uff0c\u5982\u6b64\u603b\u5171\u91cd\u590d10\u6b21\u3002\u7136\u540e\u6211\u4eec\u5e94\u8be5\u5c31\u80fd\u770b\u5230\u4e00\u4e2a\u62e5\u670910\u4e2a\u6b63\u5728\u5947\u8469\u5730\u65cb\u8f6c\u7740\u7684\u7acb\u65b9\u4f53\u7684\u4e16\u754c\u3002 \u5b8c\u7f8e\uff01\u770b\u8d77\u6765\u6211\u4eec\u7684\u7bb1\u5b50\u5df2\u7ecf\u627e\u5230\u5fd7\u540c\u9053\u5408\u7684\u5c0f\u4f19\u4f34\u4e86\u3002\u5982\u679c\u4f60\u5728\u8fd9\u91cc\u5361\u4f4f\u4e86\uff0c\u4f60\u53ef\u4ee5\u5bf9\u7167\u4e00\u4e0b \u6e90\u4ee3\u7801 \u3002","title":"\u66f4\u591a\u7684\u7acb\u65b9\u4f53\uff01"},{"location":"01%20Getting%20started/08%20Coordinate%20Systems/#_11","text":"\u5bf9GLM\u7684 projection \u51fd\u6570\u4e2d\u7684 FoV \u548c aspect-ratio \u53c2\u6570\u8fdb\u884c\u5b9e\u9a8c\u3002\u770b\u80fd\u5426\u641e\u61c2\u5b83\u4eec\u662f\u5982\u4f55\u5f71\u54cd\u900f\u89c6\u5e73\u622a\u5934\u4f53\u7684\u3002 \u5c06\u89c2\u5bdf\u77e9\u9635\u5728\u5404\u4e2a\u65b9\u5411\u4e0a\u8fdb\u884c\u4f4d\u79fb\uff0c\u6765\u770b\u770b\u573a\u666f\u662f\u5982\u4f55\u6539\u53d8\u7684\u3002\u6ce8\u610f\u628a\u89c2\u5bdf\u77e9\u9635\u5f53\u6210\u6444\u50cf\u673a\u5bf9\u8c61\u3002 \u4f7f\u7528\u6a21\u578b\u77e9\u9635\u53ea\u8ba9\u662f3\u500d\u6570\u7684\u7bb1\u5b50\u65cb\u8f6c\uff08\u4ee5\u53ca\u7b2c1\u4e2a\u7bb1\u5b50\uff09\uff0c\u800c\u8ba9\u5269\u4e0b\u7684\u7bb1\u5b50\u4fdd\u6301\u9759\u6b62\u3002 \u53c2\u8003\u89e3\u7b54 \u3002","title":"\u7ec3\u4e60"},{"location":"01%20Getting%20started/09%20Camera/","text":"\u6444\u50cf\u673a \u539f\u6587 Camera \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django , Krasjet, Geequlim, BLumia \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u524d\u9762\u7684\u6559\u7a0b\u4e2d\u6211\u4eec\u8ba8\u8bba\u4e86\u89c2\u5bdf\u77e9\u9635\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u89c2\u5bdf\u77e9\u9635\u79fb\u52a8\u573a\u666f\uff08\u6211\u4eec\u5411\u540e\u79fb\u52a8\u4e86\u4e00\u70b9\uff09\u3002OpenGL\u672c\u8eab\u6ca1\u6709 \u6444\u50cf\u673a (Camera)\u7684\u6982\u5ff5\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u628a\u573a\u666f\u4e2d\u7684\u6240\u6709\u7269\u4f53\u5f80\u76f8\u53cd\u65b9\u5411\u79fb\u52a8\u7684\u65b9\u5f0f\u6765\u6a21\u62df\u51fa\u6444\u50cf\u673a\uff0c\u4ea7\u751f\u4e00\u79cd \u6211\u4eec \u5728\u79fb\u52a8\u7684\u611f\u89c9\uff0c\u800c\u4e0d\u662f\u573a\u666f\u5728\u79fb\u52a8\u3002 \u672c\u8282\u6211\u4eec\u5c06\u4f1a\u8ba8\u8bba\u5982\u4f55\u5728OpenGL\u4e2d\u914d\u7f6e\u4e00\u4e2a\u6444\u50cf\u673a\uff0c\u5e76\u4e14\u5c06\u4f1a\u8ba8\u8bbaFPS\u98ce\u683c\u7684\u6444\u50cf\u673a\uff0c\u8ba9\u4f60\u80fd\u591f\u57283D\u573a\u666f\u4e2d\u81ea\u7531\u79fb\u52a8\u3002\u6211\u4eec\u4e5f\u4f1a\u8ba8\u8bba\u952e\u76d8\u548c\u9f20\u6807\u8f93\u5165\uff0c\u6700\u7ec8\u5b8c\u6210\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u6444\u50cf\u673a\u7c7b\u3002 \u6444\u50cf\u673a/\u89c2\u5bdf\u7a7a\u95f4 \u5f53\u6211\u4eec\u8ba8\u8bba\u6444\u50cf\u673a/\u89c2\u5bdf\u7a7a\u95f4(Camera/View Space)\u7684\u65f6\u5019\uff0c\u662f\u5728\u8ba8\u8bba\u4ee5\u6444\u50cf\u673a\u7684\u89c6\u89d2\u4f5c\u4e3a\u573a\u666f\u539f\u70b9\u65f6\u573a\u666f\u4e2d\u6240\u6709\u7684\u9876\u70b9\u5750\u6807\uff1a\u89c2\u5bdf\u77e9\u9635\u628a\u6240\u6709\u7684\u4e16\u754c\u5750\u6807\u53d8\u6362\u4e3a\u76f8\u5bf9\u4e8e\u6444\u50cf\u673a\u4f4d\u7f6e\u4e0e\u65b9\u5411\u7684\u89c2\u5bdf\u5750\u6807\u3002\u8981\u5b9a\u4e49\u4e00\u4e2a\u6444\u50cf\u673a\uff0c\u6211\u4eec\u9700\u8981\u5b83\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\u3001\u89c2\u5bdf\u7684\u65b9\u5411\u3001\u4e00\u4e2a\u6307\u5411\u5b83\u53f3\u4fa7\u7684\u5411\u91cf\u4ee5\u53ca\u4e00\u4e2a\u6307\u5411\u5b83\u4e0a\u65b9\u7684\u5411\u91cf\u3002\u7ec6\u5fc3\u7684\u8bfb\u8005\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u6211\u4eec\u5b9e\u9645\u4e0a\u521b\u5efa\u4e86\u4e00\u4e2a\u4e09\u4e2a\u5355\u4f4d\u8f74\u76f8\u4e92\u5782\u76f4\u7684\u3001\u4ee5\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u4e3a\u539f\u70b9\u7684\u5750\u6807\u7cfb\u3002 1. \u6444\u50cf\u673a\u4f4d\u7f6e \u83b7\u53d6\u6444\u50cf\u673a\u4f4d\u7f6e\u5f88\u7b80\u5355\u3002\u6444\u50cf\u673a\u4f4d\u7f6e\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u4e16\u754c\u7a7a\u95f4\u4e2d\u4e00\u4e2a\u6307\u5411\u6444\u50cf\u673a\u4f4d\u7f6e\u7684\u5411\u91cf\u3002\u6211\u4eec\u628a\u6444\u50cf\u673a\u4f4d\u7f6e\u8bbe\u7f6e\u4e3a\u4e0a\u4e00\u8282\u4e2d\u7684\u90a3\u4e2a\u76f8\u540c\u7684\u4f4d\u7f6e\uff1a glm::vec3 cameraPos = glm::vec3(0.0f, 0.0f, 3.0f); Important \u4e0d\u8981\u5fd8\u8bb0\u6b63z\u8f74\u662f\u4ece\u5c4f\u5e55\u6307\u5411\u4f60\u7684\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u6444\u50cf\u673a\u5411\u540e\u79fb\u52a8\uff0c\u6211\u4eec\u5c31\u6cbf\u7740z\u8f74\u7684\u6b63\u65b9\u5411\u79fb\u52a8\u3002 2. \u6444\u50cf\u673a\u65b9\u5411 \u4e0b\u4e00\u4e2a\u9700\u8981\u7684\u5411\u91cf\u662f\u6444\u50cf\u673a\u7684\u65b9\u5411\uff0c\u8fd9\u91cc\u6307\u7684\u662f\u6444\u50cf\u673a\u6307\u5411\u54ea\u4e2a\u65b9\u5411\u3002\u73b0\u5728\u6211\u4eec\u8ba9\u6444\u50cf\u673a\u6307\u5411\u573a\u666f\u539f\u70b9\uff1a(0, 0, 0)\u3002\u8fd8\u8bb0\u5f97\u5982\u679c\u5c06\u4e24\u4e2a\u77e2\u91cf\u76f8\u51cf\uff0c\u6211\u4eec\u5c31\u80fd\u5f97\u5230\u8fd9\u4e24\u4e2a\u77e2\u91cf\u7684\u5dee\u5417\uff1f\u7528\u573a\u666f\u539f\u70b9\u5411\u91cf\u51cf\u53bb\u6444\u50cf\u673a\u4f4d\u7f6e\u5411\u91cf\u7684\u7ed3\u679c\u5c31\u662f\u6444\u50cf\u673a\u7684\u6307\u5411\u5411\u91cf\u3002\u7531\u4e8e\u6211\u4eec\u77e5\u9053\u6444\u50cf\u673a\u6307\u5411z\u8f74\u8d1f\u65b9\u5411\uff0c\u4f46\u6211\u4eec\u5e0c\u671b\u65b9\u5411\u5411\u91cf(Direction Vector)\u6307\u5411\u6444\u50cf\u673a\u7684z\u8f74\u6b63\u65b9\u5411\u3002\u5982\u679c\u6211\u4eec\u4ea4\u6362\u76f8\u51cf\u7684\u987a\u5e8f\uff0c\u6211\u4eec\u5c31\u4f1a\u83b7\u5f97\u4e00\u4e2a\u6307\u5411\u6444\u50cf\u673a\u6b63z\u8f74\u65b9\u5411\u7684\u5411\u91cf\uff1a glm::vec3 cameraTarget = glm::vec3(0.0f, 0.0f, 0.0f); glm::vec3 cameraDirection = glm::normalize(cameraPos - cameraTarget); Attention \u65b9\u5411 \u5411\u91cf(Direction Vector)\u5e76\u4e0d\u662f\u6700\u597d\u7684\u540d\u5b57\uff0c\u56e0\u4e3a\u5b83\u5b9e\u9645\u4e0a\u6307\u5411\u4ece\u5b83\u5230\u76ee\u6807\u5411\u91cf\u7684\u76f8\u53cd\u65b9\u5411\uff08\u8bd1\u6ce8\uff1a\u6ce8\u610f\u770b\u524d\u9762\u7684\u90a3\u4e2a\u56fe\uff0c\u84dd\u8272\u7684\u65b9\u5411\u5411\u91cf\u5927\u6982\u6307\u5411z\u8f74\u7684\u6b63\u65b9\u5411\uff0c\u4e0e\u6444\u50cf\u673a\u5b9e\u9645\u6307\u5411\u7684\u65b9\u5411\u662f\u6b63\u597d\u76f8\u53cd\u7684\uff09\u3002 3. \u53f3\u8f74 \u6211\u4eec\u9700\u8981\u7684\u53e6\u4e00\u4e2a\u5411\u91cf\u662f\u4e00\u4e2a \u53f3\u5411\u91cf (Right Vector)\uff0c\u5b83\u4ee3\u8868\u6444\u50cf\u673a\u7a7a\u95f4\u7684x\u8f74\u7684\u6b63\u65b9\u5411\u3002\u4e3a\u83b7\u53d6\u53f3\u5411\u91cf\u6211\u4eec\u9700\u8981\u5148\u4f7f\u7528\u4e00\u4e2a\u5c0f\u6280\u5de7\uff1a\u5148\u5b9a\u4e49\u4e00\u4e2a \u4e0a\u5411\u91cf (Up Vector)\u3002\u63a5\u4e0b\u6765\u628a\u4e0a\u5411\u91cf\u548c\u7b2c\u4e8c\u6b65\u5f97\u5230\u7684\u65b9\u5411\u5411\u91cf\u8fdb\u884c\u53c9\u4e58\u3002\u4e24\u4e2a\u5411\u91cf\u53c9\u4e58\u7684\u7ed3\u679c\u4f1a\u540c\u65f6\u5782\u76f4\u4e8e\u4e24\u5411\u91cf\uff0c\u56e0\u6b64\u6211\u4eec\u4f1a\u5f97\u5230\u6307\u5411x\u8f74\u6b63\u65b9\u5411\u7684\u90a3\u4e2a\u5411\u91cf\uff08\u5982\u679c\u6211\u4eec\u4ea4\u6362\u4e24\u4e2a\u5411\u91cf\u53c9\u4e58\u7684\u987a\u5e8f\u5c31\u4f1a\u5f97\u5230\u76f8\u53cd\u7684\u6307\u5411x\u8f74\u8d1f\u65b9\u5411\u7684\u5411\u91cf\uff09\uff1a glm::vec3 up = glm::vec3(0.0f, 1.0f, 0.0f); glm::vec3 cameraRight = glm::normalize(glm::cross(up, cameraDirection)); 4. \u4e0a\u8f74 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e86x\u8f74\u5411\u91cf\u548cz\u8f74\u5411\u91cf\uff0c\u83b7\u53d6\u4e00\u4e2a\u6307\u5411\u6444\u50cf\u673a\u7684\u6b63y\u8f74\u5411\u91cf\u5c31\u76f8\u5bf9\u7b80\u5355\u4e86\uff1a\u6211\u4eec\u628a\u53f3\u5411\u91cf\u548c\u65b9\u5411\u5411\u91cf\u8fdb\u884c\u53c9\u4e58\uff1a glm::vec3 cameraUp = glm::cross(cameraDirection, cameraRight); \u5728\u53c9\u4e58\u548c\u4e00\u4e9b\u5c0f\u6280\u5de7\u7684\u5e2e\u52a9\u4e0b\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u6240\u6709\u6784\u6210\u89c2\u5bdf/\u6444\u50cf\u673a\u7a7a\u95f4\u7684\u5411\u91cf\u3002\u5bf9\u4e8e\u60f3\u5b66\u5230\u66f4\u591a\u6570\u5b66\u539f\u7406\u7684\u8bfb\u8005\uff0c\u63d0\u793a\u4e00\u4e0b\uff0c\u5728\u7ebf\u6027\u4ee3\u6570\u4e2d\u8fd9\u4e2a\u5904\u7406\u53eb\u505a \u683c\u62c9\u59c6\u2014\u65bd\u5bc6\u7279\u6b63\u4ea4\u5316 (Gram-Schmidt Process)\u3002\u4f7f\u7528\u8fd9\u4e9b\u6444\u50cf\u673a\u5411\u91cf\u6211\u4eec\u5c31\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a LookAt \u77e9\u9635\u4e86\uff0c\u5b83\u5728\u521b\u5efa\u6444\u50cf\u673a\u7684\u65f6\u5019\u975e\u5e38\u6709\u7528\u3002 Look At \u4f7f\u7528\u77e9\u9635\u7684\u597d\u5904\u4e4b\u4e00\u662f\u5982\u679c\u4f60\u4f7f\u75283\u4e2a\u76f8\u4e92\u5782\u76f4\uff08\u6216\u975e\u7ebf\u6027\uff09\u7684\u8f74\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5750\u6807\u7a7a\u95f4\uff0c\u4f60\u53ef\u4ee5\u7528\u8fd93\u4e2a\u8f74\u5916\u52a0\u4e00\u4e2a\u5e73\u79fb\u5411\u91cf\u6765\u521b\u5efa\u4e00\u4e2a\u77e9\u9635\uff0c\u5e76\u4e14\u4f60\u53ef\u4ee5\u7528\u8fd9\u4e2a\u77e9\u9635\u4e58\u4ee5\u4efb\u4f55\u5411\u91cf\u6765\u5c06\u5176\u53d8\u6362\u5230\u90a3\u4e2a\u5750\u6807\u7a7a\u95f4\u3002\u8fd9\u6b63\u662f LookAt \u77e9\u9635\u6240\u505a\u7684\uff0c\u73b0\u5728\u6211\u4eec\u6709\u4e863\u4e2a\u76f8\u4e92\u5782\u76f4\u7684\u8f74\u548c\u4e00\u4e2a\u5b9a\u4e49\u6444\u50cf\u673a\u7a7a\u95f4\u7684\u4f4d\u7f6e\u5750\u6807\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u6211\u4eec\u81ea\u5df1\u7684LookAt\u77e9\u9635\u4e86\uff1a LookAt = \\begin{bmatrix} \\color{red}{R_x} & \\color{red}{R_y} & \\color{red}{R_z} & 0 \\\\ \\color{green}{U_x} & \\color{green}{U_y} & \\color{green}{U_z} & 0 \\\\ \\color{blue}{D_x} & \\color{blue}{D_y} & \\color{blue}{D_z} & 0 \\\\ 0 & 0 & 0 & 1 \\end{bmatrix} * \\begin{bmatrix} 1 & 0 & 0 & -\\color{purple}{P_x} \\\\ 0 & 1 & 0 & -\\color{purple}{P_y} \\\\ 0 & 0 & 1 & -\\color{purple}{P_z} \\\\ 0 & 0 & 0 & 1 \\end{bmatrix} \u5176\u4e2d \\color{red}R \u662f\u53f3\u5411\u91cf\uff0c \\color{green}U \u662f\u4e0a\u5411\u91cf\uff0c \\color{blue}D \u662f\u65b9\u5411\u5411\u91cf \\color{purple}P \u662f\u6444\u50cf\u673a\u4f4d\u7f6e\u5411\u91cf\u3002\u6ce8\u610f\uff0c\u4f4d\u7f6e\u5411\u91cf\u662f\u76f8\u53cd\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u6700\u7ec8\u5e0c\u671b\u628a\u4e16\u754c\u5e73\u79fb\u5230\u4e0e\u6211\u4eec\u81ea\u8eab\u79fb\u52a8\u7684\u76f8\u53cd\u65b9\u5411\u3002\u628a\u8fd9\u4e2aLookAt\u77e9\u9635\u4f5c\u4e3a\u89c2\u5bdf\u77e9\u9635\u53ef\u4ee5\u5f88\u9ad8\u6548\u5730\u628a\u6240\u6709\u4e16\u754c\u5750\u6807\u53d8\u6362\u5230\u521a\u521a\u5b9a\u4e49\u7684\u89c2\u5bdf\u7a7a\u95f4\u3002LookAt\u77e9\u9635\u5c31\u50cf\u5b83\u7684\u540d\u5b57\u8868\u8fbe\u7684\u90a3\u6837\uff1a\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a\u770b\u7740(Look at)\u7ed9\u5b9a\u76ee\u6807\u7684\u89c2\u5bdf\u77e9\u9635\u3002 \u5e78\u8fd0\u7684\u662f\uff0cGLM\u5df2\u7ecf\u63d0\u4f9b\u4e86\u8fd9\u4e9b\u652f\u6301\u3002\u6211\u4eec\u8981\u505a\u7684\u53ea\u662f\u5b9a\u4e49\u4e00\u4e2a\u6444\u50cf\u673a\u4f4d\u7f6e\uff0c\u4e00\u4e2a\u76ee\u6807\u4f4d\u7f6e\u548c\u4e00\u4e2a\u8868\u793a\u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u4e0a\u5411\u91cf\u7684\u5411\u91cf\uff08\u6211\u4eec\u8ba1\u7b97\u53f3\u5411\u91cf\u4f7f\u7528\u7684\u90a3\u4e2a\u4e0a\u5411\u91cf\uff09\u3002\u63a5\u7740GLM\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2aLookAt\u77e9\u9635\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u5f53\u4f5c\u6211\u4eec\u7684\u89c2\u5bdf\u77e9\u9635\uff1a glm::mat4 view; view = glm::lookAt(glm::vec3(0.0f, 0.0f, 3.0f), glm::vec3(0.0f, 0.0f, 0.0f), glm::vec3(0.0f, 1.0f, 0.0f)); glm::LookAt \u51fd\u6570\u9700\u8981\u4e00\u4e2a\u4f4d\u7f6e\u3001\u76ee\u6807\u548c\u4e0a\u5411\u91cf\u3002\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a\u548c\u5728\u4e0a\u4e00\u8282\u4f7f\u7528\u7684\u4e00\u6837\u7684\u89c2\u5bdf\u77e9\u9635\u3002 \u5728\u8ba8\u8bba\u7528\u6237\u8f93\u5165\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u505a\u4e9b\u6709\u610f\u601d\u7684\u4e8b\uff0c\u628a\u6211\u4eec\u7684\u6444\u50cf\u673a\u5728\u573a\u666f\u4e2d\u65cb\u8f6c\u3002\u6211\u4eec\u4f1a\u5c06\u6444\u50cf\u673a\u7684\u6ce8\u89c6\u70b9\u4fdd\u6301\u5728(0, 0, 0)\u3002 \u6211\u4eec\u9700\u8981\u7528\u5230\u4e00\u70b9\u4e09\u89d2\u5b66\u7684\u77e5\u8bc6\u6765\u5728\u6bcf\u4e00\u5e27\u521b\u5efa\u4e00\u4e2ax\u548cz\u5750\u6807\uff0c\u5b83\u4f1a\u4ee3\u8868\u5706\u4e0a\u7684\u4e00\u70b9\uff0c\u6211\u4eec\u5c06\u4f1a\u4f7f\u7528\u5b83\u4f5c\u4e3a\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u3002\u901a\u8fc7\u91cd\u65b0\u8ba1\u7b97x\u548cy\u5750\u6807\uff0c\u6211\u4eec\u4f1a\u904d\u5386\u5706\u4e0a\u7684\u6240\u6709\u70b9\uff0c\u8fd9\u6837\u6444\u50cf\u673a\u5c31\u4f1a\u7ed5\u7740\u573a\u666f\u65cb\u8f6c\u4e86\u3002\u6211\u4eec\u9884\u5148\u5b9a\u4e49\u8fd9\u4e2a\u5706\u7684\u534a\u5f84 radius \uff0c\u5728\u6bcf\u6b21\u6e32\u67d3\u8fed\u4ee3\u4e2d\u4f7f\u7528GLFW\u7684 glfwGetTime \u51fd\u6570\u91cd\u65b0\u521b\u5efa\u89c2\u5bdf\u77e9\u9635\uff0c\u6765\u6269\u5927\u8fd9\u4e2a\u5706\u3002 float radius = 10.0f; float camX = sin(glfwGetTime()) * radius; float camZ = cos(glfwGetTime()) * radius; glm::mat4 view; view = glm::lookAt(glm::vec3(camX, 0.0, camZ), glm::vec3(0.0, 0.0, 0.0), glm::vec3(0.0, 1.0, 0.0)); \u5982\u679c\u4f60\u8fd0\u884c\u4ee3\u7801\uff0c\u5e94\u8be5\u4f1a\u5f97\u5230\u4e0b\u9762\u7684\u7ed3\u679c\uff1a \u901a\u8fc7\u8fd9\u4e00\u5c0f\u6bb5\u4ee3\u7801\uff0c\u6444\u50cf\u673a\u73b0\u5728\u4f1a\u968f\u7740\u65f6\u95f4\u6d41\u901d\u56f4\u7ed5\u573a\u666f\u8f6c\u52a8\u4e86\u3002\u81ea\u5df1\u8bd5\u8bd5\u6539\u53d8\u534a\u5f84\u548c\u4f4d\u7f6e/\u65b9\u5411\u53c2\u6570\uff0c\u770b\u770b LookAt \u77e9\u9635\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u540c\u65f6\uff0c\u5982\u679c\u4f60\u5728\u54ea\u5361\u4f4f\u7684\u8bdd\uff0c\u8fd9\u91cc\u6709 \u6e90\u7801 \u3002 \u81ea\u7531\u79fb\u52a8 \u8ba9\u6444\u50cf\u673a\u7ed5\u7740\u573a\u666f\u8f6c\u7684\u786e\u5f88\u6709\u8da3\uff0c\u4f46\u662f\u8ba9\u6211\u4eec\u81ea\u5df1\u79fb\u52a8\u6444\u50cf\u673a\u4f1a\u66f4\u6709\u8da3\uff01\u9996\u5148\u6211\u4eec\u5fc5\u987b\u8bbe\u7f6e\u4e00\u4e2a\u6444\u50cf\u673a\u7cfb\u7edf\uff0c\u6240\u4ee5\u5728\u6211\u4eec\u7684\u7a0b\u5e8f\u524d\u9762\u5b9a\u4e49\u4e00\u4e9b\u6444\u50cf\u673a\u53d8\u91cf\u5f88\u6709\u7528\uff1a glm::vec3 cameraPos = glm::vec3(0.0f, 0.0f, 3.0f); glm::vec3 cameraFront = glm::vec3(0.0f, 0.0f, -1.0f); glm::vec3 cameraUp = glm::vec3(0.0f, 1.0f, 0.0f); LookAt \u51fd\u6570\u73b0\u5728\u6210\u4e86\uff1a view = glm::lookAt(cameraPos, cameraPos + cameraFront, cameraUp); \u6211\u4eec\u9996\u5148\u5c06\u6444\u50cf\u673a\u4f4d\u7f6e\u8bbe\u7f6e\u4e3a\u4e4b\u524d\u5b9a\u4e49\u7684 cameraPos \u3002\u65b9\u5411\u662f\u5f53\u524d\u7684\u4f4d\u7f6e\u52a0\u4e0a\u6211\u4eec\u521a\u521a\u5b9a\u4e49\u7684\u65b9\u5411\u5411\u91cf\u3002\u8fd9\u6837\u80fd\u4fdd\u8bc1\u65e0\u8bba\u6211\u4eec\u600e\u4e48\u79fb\u52a8\uff0c\u6444\u50cf\u673a\u90fd\u4f1a\u6ce8\u89c6\u7740\u76ee\u6807\u65b9\u5411\u3002\u8ba9\u6211\u4eec\u6446\u5f04\u4e00\u4e0b\u8fd9\u4e9b\u5411\u91cf\uff0c\u5728\u6309\u4e0b\u67d0\u4e9b\u6309\u94ae\u65f6\u66f4\u65b0 cameraPos \u5411\u91cf\u3002 \u6211\u4eec\u5df2\u7ecf\u4e3aGLFW\u7684\u952e\u76d8\u8f93\u5165\u5b9a\u4e49\u8fc7\u4e00\u4e2a processInput \u51fd\u6570\u4e86\uff0c\u6211\u4eec\u6765\u65b0\u6dfb\u52a0\u51e0\u4e2a\u9700\u8981\u68c0\u67e5\u7684\u6309\u952e\u547d\u4ee4\uff1a void processInput(GLFWwindow *window) { ... float cameraSpeed = 0.05f; // adjust accordingly if (glfwGetKey(window, GLFW_KEY_W) == GLFW_PRESS) cameraPos += cameraSpeed * cameraFront; if (glfwGetKey(window, GLFW_KEY_S) == GLFW_PRESS) cameraPos -= cameraSpeed * cameraFront; if (glfwGetKey(window, GLFW_KEY_A) == GLFW_PRESS) cameraPos -= glm::normalize(glm::cross(cameraFront, cameraUp)) * cameraSpeed; if (glfwGetKey(window, GLFW_KEY_D) == GLFW_PRESS) cameraPos += glm::normalize(glm::cross(cameraFront, cameraUp)) * cameraSpeed; } \u5f53\u6211\u4eec\u6309\u4e0b WASD \u952e\u7684\u4efb\u610f\u4e00\u4e2a\uff0c\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u90fd\u4f1a\u76f8\u5e94\u66f4\u65b0\u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5411\u524d\u6216\u5411\u540e\u79fb\u52a8\uff0c\u6211\u4eec\u5c31\u628a\u4f4d\u7f6e\u5411\u91cf\u52a0\u4e0a\u6216\u51cf\u53bb\u65b9\u5411\u5411\u91cf\u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5411\u5de6\u53f3\u79fb\u52a8\uff0c\u6211\u4eec\u4f7f\u7528\u53c9\u4e58\u6765\u521b\u5efa\u4e00\u4e2a \u53f3\u5411\u91cf (Right Vector)\uff0c\u5e76\u6cbf\u7740\u5b83\u76f8\u5e94\u79fb\u52a8\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u6837\u5c31\u521b\u5efa\u4e86\u4f7f\u7528\u6444\u50cf\u673a\u65f6\u719f\u6089\u7684 \u6a2a\u79fb (Strafe)\u6548\u679c\u3002 Important \u6ce8\u610f\uff0c\u6211\u4eec\u5bf9 \u53f3\u5411\u91cf \u8fdb\u884c\u4e86\u6807\u51c6\u5316\u3002\u5982\u679c\u6211\u4eec\u6ca1\u5bf9\u8fd9\u4e2a\u5411\u91cf\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u6700\u540e\u7684\u53c9\u4e58\u7ed3\u679c\u4f1a\u6839\u636e cameraFront \u53d8\u91cf\u8fd4\u56de\u5927\u5c0f\u4e0d\u540c\u7684\u5411\u91cf\u3002\u5982\u679c\u6211\u4eec\u4e0d\u5bf9\u5411\u91cf\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u6211\u4eec\u5c31\u5f97\u6839\u636e\u6444\u50cf\u673a\u7684\u671d\u5411\u4e0d\u540c\u52a0\u901f\u6216\u51cf\u901f\u79fb\u52a8\u4e86\uff0c\u4f46\u5982\u679c\u8fdb\u884c\u4e86\u6807\u51c6\u5316\u79fb\u52a8\u5c31\u662f\u5300\u901f\u7684\u3002 \u73b0\u5728\u4f60\u5c31\u5e94\u8be5\u80fd\u591f\u79fb\u52a8\u6444\u50cf\u673a\u4e86\uff0c\u867d\u7136\u79fb\u52a8\u901f\u5ea6\u548c\u7cfb\u7edf\u6709\u5173\uff0c\u4f60\u53ef\u80fd\u4f1a\u9700\u8981\u8c03\u6574\u4e00\u4e0b cameraSpeed \u3002 \u79fb\u52a8\u901f\u5ea6 \u76ee\u524d\u6211\u4eec\u7684\u79fb\u52a8\u901f\u5ea6\u662f\u4e2a\u5e38\u91cf\u3002\u7406\u8bba\u4e0a\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u662f\u5b9e\u9645\u60c5\u51b5\u4e0b\u6839\u636e\u5904\u7406\u5668\u7684\u80fd\u529b\u4e0d\u540c\uff0c\u6709\u4e9b\u4eba\u53ef\u80fd\u4f1a\u6bd4\u5176\u4ed6\u4eba\u6bcf\u79d2\u7ed8\u5236\u66f4\u591a\u5e27\uff0c\u4e5f\u5c31\u662f\u4ee5\u66f4\u9ad8\u7684\u9891\u7387\u8c03\u7528 processInput \u51fd\u6570\u3002\u7ed3\u679c\u5c31\u662f\uff0c\u6839\u636e\u914d\u7f6e\u7684\u4e0d\u540c\uff0c\u6709\u4e9b\u4eba\u53ef\u80fd\u79fb\u52a8\u5f88\u5feb\uff0c\u800c\u6709\u4e9b\u4eba\u4f1a\u79fb\u52a8\u5f88\u6162\u3002\u5f53\u4f60\u53d1\u5e03\u4f60\u7684\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u4f60\u5fc5\u987b\u786e\u4fdd\u5b83\u5728\u6240\u6709\u786c\u4ef6\u4e0a\u79fb\u52a8\u901f\u5ea6\u90fd\u4e00\u6837\u3002 \u56fe\u5f62\u7a0b\u5e8f\u548c\u6e38\u620f\u901a\u5e38\u4f1a\u8ddf\u8e2a\u4e00\u4e2a \u65f6\u95f4\u5dee (Deltatime)\u53d8\u91cf\uff0c\u5b83\u50a8\u5b58\u4e86\u6e32\u67d3\u4e0a\u4e00\u5e27\u6240\u7528\u7684\u65f6\u95f4\u3002\u6211\u4eec\u628a\u6240\u6709\u901f\u5ea6\u90fd\u53bb\u4e58\u4ee5 deltaTime \u503c\u3002\u7ed3\u679c\u5c31\u662f\uff0c\u5982\u679c\u6211\u4eec\u7684 deltaTime \u5f88\u5927\uff0c\u5c31\u610f\u5473\u7740\u4e0a\u4e00\u5e27\u7684\u6e32\u67d3\u82b1\u8d39\u4e86\u66f4\u591a\u65f6\u95f4\uff0c\u6240\u4ee5\u8fd9\u4e00\u5e27\u7684\u901f\u5ea6\u9700\u8981\u53d8\u5f97\u66f4\u9ad8\u6765\u5e73\u8861\u6e32\u67d3\u6240\u82b1\u53bb\u7684\u65f6\u95f4\u3002\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u65f6\uff0c\u65e0\u8bba\u4f60\u7684\u7535\u8111\u5feb\u8fd8\u662f\u6162\uff0c\u6444\u50cf\u673a\u7684\u901f\u5ea6\u90fd\u4f1a\u76f8\u5e94\u5e73\u8861\uff0c\u8fd9\u6837\u6bcf\u4e2a\u7528\u6237\u7684\u4f53\u9a8c\u5c31\u90fd\u4e00\u6837\u4e86\u3002 \u6211\u4eec\u8ddf\u8e2a\u4e24\u4e2a\u5168\u5c40\u53d8\u91cf\u6765\u8ba1\u7b97\u51fa deltaTime \u503c\uff1a float deltaTime = 0.0f; // \u5f53\u524d\u5e27\u4e0e\u4e0a\u4e00\u5e27\u7684\u65f6\u95f4\u5dee float lastFrame = 0.0f; // \u4e0a\u4e00\u5e27\u7684\u65f6\u95f4 \u5728\u6bcf\u4e00\u5e27\u4e2d\u6211\u4eec\u8ba1\u7b97\u51fa\u65b0\u7684 deltaTime \u4ee5\u5907\u540e\u7528\u3002 float currentFrame = glfwGetTime(); deltaTime = currentFrame - lastFrame; lastFrame = currentFrame; \u73b0\u5728\u6211\u4eec\u6709\u4e86 deltaTime \uff0c\u5728\u8ba1\u7b97\u901f\u5ea6\u7684\u65f6\u5019\u53ef\u4ee5\u5c06\u5176\u8003\u8651\u8fdb\u53bb\u4e86\uff1a void processInput(GLFWwindow *window) { float cameraSpeed = 2.5f * deltaTime; ... } \u4e0e\u524d\u9762\u7684\u90e8\u5206\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u66f4\u6d41\u7545\u70b9\u7684\u6444\u50cf\u673a\u7cfb\u7edf\uff1a \u73b0\u5728\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u5728\u4efb\u4f55\u7cfb\u7edf\u4e0a\u79fb\u52a8\u901f\u5ea6\u90fd\u4e00\u6837\u7684\u6444\u50cf\u673a\u3002\u540c\u6837\uff0c\u5982\u679c\u4f60\u5361\u4f4f\u4e86\uff0c\u67e5\u770b\u4e00\u4e0b \u6e90\u7801 \u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4efb\u4f55\u79fb\u52a8\u90fd\u4f1a\u5f71\u54cd\u8fd4\u56de\u7684 deltaTime \u503c\u3002 \u89c6\u89d2\u79fb\u52a8 \u53ea\u7528\u952e\u76d8\u79fb\u52a8\u6ca1\u4ec0\u4e48\u610f\u601d\u3002\u7279\u522b\u662f\u6211\u4eec\u8fd8\u4e0d\u80fd\u8f6c\u5411\uff0c\u79fb\u52a8\u5f88\u53d7\u9650\u5236\u3002\u662f\u65f6\u5019\u52a0\u5165\u9f20\u6807\u4e86\uff01 \u4e3a\u4e86\u80fd\u591f\u6539\u53d8\u89c6\u89d2\uff0c\u6211\u4eec\u9700\u8981\u6839\u636e\u9f20\u6807\u7684\u8f93\u5165\u6539\u53d8 cameraFront \u5411\u91cf\u3002\u7136\u800c\uff0c\u6839\u636e\u9f20\u6807\u79fb\u52a8\u6539\u53d8\u65b9\u5411\u5411\u91cf\u6709\u70b9\u590d\u6742\uff0c\u9700\u8981\u4e00\u4e9b\u4e09\u89d2\u5b66\u77e5\u8bc6\u3002\u5982\u679c\u4f60\u5bf9\u4e09\u89d2\u5b66\u77e5\u4e4b\u751a\u5c11\uff0c\u522b\u62c5\u5fc3\uff0c\u4f60\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u4e00\u90e8\u5206\uff0c\u76f4\u63a5\u590d\u5236\u7c98\u8d34\u6211\u4eec\u7684\u4ee3\u7801\uff1b\u5f53\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u7684\u65f6\u5019\u518d\u56de\u6765\u770b\u3002 \u6b27\u62c9\u89d2 \u6b27\u62c9\u89d2(Euler Angle)\u662f\u53ef\u4ee5\u8868\u793a3D\u7a7a\u95f4\u4e2d\u4efb\u4f55\u65cb\u8f6c\u76843\u4e2a\u503c\uff0c\u7531\u83b1\u6602\u54c8\u5fb7\u00b7\u6b27\u62c9(Leonhard Euler)\u572818\u4e16\u7eaa\u63d0\u51fa\u3002\u4e00\u5171\u67093\u79cd\u6b27\u62c9\u89d2\uff1a\u4fef\u4ef0\u89d2(Pitch)\u3001\u504f\u822a\u89d2(Yaw)\u548c\u6eda\u8f6c\u89d2(Roll)\uff0c\u4e0b\u9762\u7684\u56fe\u7247\u5c55\u793a\u4e86\u5b83\u4eec\u7684\u542b\u4e49\uff1a \u4fef\u4ef0\u89d2 \u662f\u63cf\u8ff0\u6211\u4eec\u5982\u4f55\u5f80\u4e0a\u6216\u5f80\u4e0b\u770b\u7684\u89d2\uff0c\u53ef\u4ee5\u5728\u7b2c\u4e00\u5f20\u56fe\u4e2d\u770b\u5230\u3002\u7b2c\u4e8c\u5f20\u56fe\u5c55\u793a\u4e86 \u504f\u822a\u89d2 \uff0c\u504f\u822a\u89d2\u8868\u793a\u6211\u4eec\u5f80\u5de6\u548c\u5f80\u53f3\u770b\u7684\u7a0b\u5ea6\u3002 \u6eda\u8f6c\u89d2 \u4ee3\u8868\u6211\u4eec\u5982\u4f55 \u7ffb\u6eda \u6444\u50cf\u673a\uff0c\u901a\u5e38\u5728\u592a\u7a7a\u98de\u8239\u7684\u6444\u50cf\u673a\u4e2d\u4f7f\u7528\u3002\u6bcf\u4e2a\u6b27\u62c9\u89d2\u90fd\u6709\u4e00\u4e2a\u503c\u6765\u8868\u793a\uff0c\u628a\u4e09\u4e2a\u89d2\u7ed3\u5408\u8d77\u6765\u6211\u4eec\u5c31\u80fd\u591f\u8ba1\u7b973D\u7a7a\u95f4\u4e2d\u4efb\u4f55\u7684\u65cb\u8f6c\u5411\u91cf\u4e86\u3002 \u5bf9\u4e8e\u6211\u4eec\u7684\u6444\u50cf\u673a\u7cfb\u7edf\u6765\u8bf4\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u4fef\u4ef0\u89d2\u548c\u504f\u822a\u89d2\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u4f1a\u8ba8\u8bba\u6eda\u8f6c\u89d2\u3002\u7ed9\u5b9a\u4e00\u4e2a\u4fef\u4ef0\u89d2\u548c\u504f\u822a\u89d2\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u4eec\u8f6c\u6362\u4e3a\u4e00\u4e2a\u4ee3\u8868\u65b0\u7684\u65b9\u5411\u5411\u91cf\u76843D\u5411\u91cf\u3002\u4fef\u4ef0\u89d2\u548c\u504f\u822a\u89d2\u8f6c\u6362\u4e3a\u65b9\u5411\u5411\u91cf\u7684\u5904\u7406\u9700\u8981\u4e00\u4e9b\u4e09\u89d2\u5b66\u77e5\u8bc6\uff0c\u6211\u4eec\u5148\u4ece\u6700\u57fa\u672c\u7684\u60c5\u51b5\u5f00\u59cb\uff1a \u5982\u679c\u6211\u4eec\u628a\u659c\u8fb9\u8fb9\u957f\u5b9a\u4e49\u4e3a1\uff0c\u6211\u4eec\u5c31\u80fd\u77e5\u9053\u90bb\u8fb9\u7684\u957f\u5ea6\u662f \\cos \\ \\color{red}x/\\color{purple}h = \\cos \\ \\color{red}x/\\color{purple}1 = \\cos\\ \\color{red}x \uff0c\u5b83\u7684\u5bf9\u8fb9\u662f \\sin \\ \\color{green}y/\\color{purple}h = \\sin \\ \\color{green}y/\\color{purple}1 = \\sin\\ \\color{green}y \u3002\u8fd9\u6837\u6211\u4eec\u83b7\u5f97\u4e86\u80fd\u591f\u5f97\u5230x\u548cy\u65b9\u5411\u957f\u5ea6\u7684\u901a\u7528\u516c\u5f0f\uff0c\u5b83\u4eec\u53d6\u51b3\u4e8e\u6240\u7ed9\u7684\u89d2\u5ea6\u3002\u6211\u4eec\u4f7f\u7528\u5b83\u6765\u8ba1\u7b97\u65b9\u5411\u5411\u91cf\u7684\u5206\u91cf\uff1a \u8fd9\u4e2a\u4e09\u89d2\u5f62\u770b\u8d77\u6765\u548c\u524d\u9762\u7684\u4e09\u89d2\u5f62\u5f88\u50cf\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u60f3\u8c61\u81ea\u5df1\u5728xz\u5e73\u9762\u4e0a\uff0c\u770b\u5411y\u8f74\uff0c\u6211\u4eec\u53ef\u4ee5\u57fa\u4e8e\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u8ba1\u7b97\u6765\u8ba1\u7b97\u5b83\u7684\u957f\u5ea6/y\u65b9\u5411\u7684\u5f3a\u5ea6(Strength)\uff08\u6211\u4eec\u5f80\u4e0a\u6216\u5f80\u4e0b\u770b\u591a\u5c11\uff09\u3002\u4ece\u56fe\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u4fef\u4ef0\u89d2\u7684y\u503c\u7b49\u4e8e \\sin\\ \\theta \uff1a direction.y = sin(glm::radians(pitch)); // \u6ce8\u610f\u6211\u4eec\u5148\u628a\u89d2\u5ea6\u8f6c\u4e3a\u5f27\u5ea6 \u8fd9\u91cc\u6211\u4eec\u53ea\u66f4\u65b0\u4e86y\u503c\uff0c\u4ed4\u7ec6\u89c2\u5bdfx\u548cz\u5206\u91cf\u4e5f\u88ab\u5f71\u54cd\u4e86\u3002\u4ece\u4e09\u89d2\u5f62\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5b83\u4eec\u7684\u503c\u7b49\u4e8e\uff1a direction.x = cos(glm::radians(pitch)); direction.z = cos(glm::radians(pitch)); \u770b\u770b\u6211\u4eec\u662f\u5426\u80fd\u591f\u4e3a\u504f\u822a\u89d2\u627e\u5230\u9700\u8981\u7684\u5206\u91cf\uff1a \u5c31\u50cf\u4fef\u4ef0\u89d2\u7684\u4e09\u89d2\u5f62\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230x\u5206\u91cf\u53d6\u51b3\u4e8e cos(yaw) \u7684\u503c\uff0cz\u503c\u540c\u6837\u53d6\u51b3\u4e8e\u504f\u822a\u89d2\u7684\u6b63\u5f26\u503c\u3002\u628a\u8fd9\u4e2a\u52a0\u5230\u524d\u9762\u7684\u503c\u4e2d\uff0c\u4f1a\u5f97\u5230\u57fa\u4e8e\u4fef\u4ef0\u89d2\u548c\u504f\u822a\u89d2\u7684\u65b9\u5411\u5411\u91cf\uff1a direction.x = cos(glm::radians(pitch)) * cos(glm::radians(yaw)); // \u8bd1\u6ce8\uff1adirection\u4ee3\u8868\u6444\u50cf\u673a\u7684\u524d\u8f74(Front)\uff0c\u8fd9\u4e2a\u524d\u8f74\u662f\u548c\u672c\u6587\u7b2c\u4e00\u5e45\u56fe\u7247\u7684\u7b2c\u4e8c\u4e2a\u6444\u50cf\u673a\u7684\u65b9\u5411\u5411\u91cf\u662f\u76f8\u53cd\u7684 direction.y = sin(glm::radians(pitch)); direction.z = cos(glm::radians(pitch)) * sin(glm::radians(yaw)); \u8fd9\u6837\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u53ef\u4ee5\u628a\u4fef\u4ef0\u89d2\u548c\u504f\u822a\u89d2\u8f6c\u5316\u4e3a\u7528\u6765\u81ea\u7531\u65cb\u8f6c\u89c6\u89d2\u7684\u6444\u50cf\u673a\u76843\u7ef4\u65b9\u5411\u5411\u91cf\u4e86\u3002\u4f60\u53ef\u80fd\u4f1a\u5947\u602a\uff1a\u6211\u4eec\u600e\u4e48\u5f97\u5230\u4fef\u4ef0\u89d2\u548c\u504f\u822a\u89d2\uff1f \u9f20\u6807\u8f93\u5165 \u504f\u822a\u89d2\u548c\u4fef\u4ef0\u89d2\u662f\u901a\u8fc7\u9f20\u6807\uff08\u6216\u624b\u67c4\uff09\u79fb\u52a8\u83b7\u5f97\u7684\uff0c\u6c34\u5e73\u7684\u79fb\u52a8\u5f71\u54cd\u504f\u822a\u89d2\uff0c\u7ad6\u76f4\u7684\u79fb\u52a8\u5f71\u54cd\u4fef\u4ef0\u89d2\u3002\u5b83\u7684\u539f\u7406\u5c31\u662f\uff0c\u50a8\u5b58\u4e0a\u4e00\u5e27\u9f20\u6807\u7684\u4f4d\u7f6e\uff0c\u5728\u5f53\u524d\u5e27\u4e2d\u6211\u4eec\u5f53\u524d\u8ba1\u7b97\u9f20\u6807\u4f4d\u7f6e\u4e0e\u4e0a\u4e00\u5e27\u7684\u4f4d\u7f6e\u76f8\u5dee\u591a\u5c11\u3002\u5982\u679c\u6c34\u5e73/\u7ad6\u76f4\u5dee\u522b\u8d8a\u5927\u90a3\u4e48\u4fef\u4ef0\u89d2\u6216\u504f\u822a\u89d2\u5c31\u6539\u53d8\u8d8a\u5927\uff0c\u4e5f\u5c31\u662f\u6444\u50cf\u673a\u9700\u8981\u79fb\u52a8\u66f4\u591a\u7684\u8ddd\u79bb\u3002 \u9996\u5148\u6211\u4eec\u8981\u544a\u8bc9GLFW\uff0c\u5b83\u5e94\u8be5\u9690\u85cf\u5149\u6807\uff0c\u5e76 \u6355\u6349 (Capture)\u5b83\u3002\u6355\u6349\u5149\u6807\u8868\u793a\u7684\u662f\uff0c\u5982\u679c\u7126\u70b9\u5728\u4f60\u7684\u7a0b\u5e8f\u4e0a\uff08\u8bd1\u6ce8\uff1a\u5373\u8868\u793a\u4f60\u6b63\u5728\u64cd\u4f5c\u8fd9\u4e2a\u7a0b\u5e8f\uff0cWindows\u4e2d\u62e5\u6709\u7126\u70b9\u7684\u7a0b\u5e8f\u6807\u9898\u680f\u901a\u5e38\u662f\u6709\u989c\u8272\u7684\u90a3\u4e2a\uff0c\u800c\u5931\u53bb\u7126\u70b9\u7684\u7a0b\u5e8f\u6807\u9898\u680f\u5219\u662f\u7070\u8272\u7684\uff09\uff0c\u5149\u6807\u5e94\u8be5\u505c\u7559\u5728\u7a97\u53e3\u4e2d\uff08\u9664\u975e\u7a0b\u5e8f\u5931\u53bb\u7126\u70b9\u6216\u8005\u9000\u51fa\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u7b80\u5355\u5730\u914d\u7f6e\u8c03\u7528\u6765\u5b8c\u6210\uff1a glfwSetInputMode(window, GLFW_CURSOR, GLFW_CURSOR_DISABLED); \u5728\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u4e4b\u540e\uff0c\u65e0\u8bba\u6211\u4eec\u600e\u4e48\u53bb\u79fb\u52a8\u9f20\u6807\uff0c\u5149\u6807\u90fd\u4e0d\u4f1a\u663e\u793a\u4e86\uff0c\u5b83\u4e5f\u4e0d\u4f1a\u79bb\u5f00\u7a97\u53e3\u3002\u5bf9\u4e8eFPS\u6444\u50cf\u673a\u7cfb\u7edf\u6765\u8bf4\u975e\u5e38\u5b8c\u7f8e\u3002 \u4e3a\u4e86\u8ba1\u7b97\u4fef\u4ef0\u89d2\u548c\u504f\u822a\u89d2\uff0c\u6211\u4eec\u9700\u8981\u8ba9GLFW\u76d1\u542c\u9f20\u6807\u79fb\u52a8\u4e8b\u4ef6\u3002\uff08\u548c\u952e\u76d8\u8f93\u5165\u76f8\u4f3c\uff09\u6211\u4eec\u4f1a\u7528\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u6765\u5b8c\u6210\uff0c\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a void mouse_callback(GLFWwindow* window, double xpos, double ypos); \u8fd9\u91cc\u7684 xpos \u548c ypos \u4ee3\u8868\u5f53\u524d\u9f20\u6807\u7684\u4f4d\u7f6e\u3002\u5f53\u6211\u4eec\u7528GLFW\u6ce8\u518c\u4e86\u56de\u8c03\u51fd\u6570\u4e4b\u540e\uff0c\u9f20\u6807\u4e00\u79fb\u52a8 mouse_callback \u51fd\u6570\u5c31\u4f1a\u88ab\u8c03\u7528\uff1a glfwSetCursorPosCallback(window, mouse_callback); \u5728\u5904\u7406FPS\u98ce\u683c\u6444\u50cf\u673a\u7684\u9f20\u6807\u8f93\u5165\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u6700\u7ec8\u83b7\u53d6\u65b9\u5411\u5411\u91cf\u4e4b\u524d\u505a\u4e0b\u9762\u8fd9\u51e0\u6b65\uff1a \u8ba1\u7b97\u9f20\u6807\u8ddd\u4e0a\u4e00\u5e27\u7684\u504f\u79fb\u91cf\u3002 \u628a\u504f\u79fb\u91cf\u6dfb\u52a0\u5230\u6444\u50cf\u673a\u7684\u4fef\u4ef0\u89d2\u548c\u504f\u822a\u89d2\u4e2d\u3002 \u5bf9\u504f\u822a\u89d2\u548c\u4fef\u4ef0\u89d2\u8fdb\u884c\u6700\u5927\u548c\u6700\u5c0f\u503c\u7684\u9650\u5236\u3002 \u8ba1\u7b97\u65b9\u5411\u5411\u91cf\u3002 \u7b2c\u4e00\u6b65\u662f\u8ba1\u7b97\u9f20\u6807\u81ea\u4e0a\u4e00\u5e27\u7684\u504f\u79fb\u91cf\u3002\u6211\u4eec\u5fc5\u987b\u5148\u5728\u7a0b\u5e8f\u4e2d\u50a8\u5b58\u4e0a\u4e00\u5e27\u7684\u9f20\u6807\u4f4d\u7f6e\uff0c\u6211\u4eec\u628a\u5b83\u7684\u521d\u59cb\u503c\u8bbe\u7f6e\u4e3a\u5c4f\u5e55\u7684\u4e2d\u5fc3\uff08\u5c4f\u5e55\u7684\u5c3a\u5bf8\u662f800x600\uff09\uff1a float lastX = 400, lastY = 300; \u7136\u540e\u5728\u9f20\u6807\u7684\u56de\u8c03\u51fd\u6570\u4e2d\u6211\u4eec\u8ba1\u7b97\u5f53\u524d\u5e27\u548c\u4e0a\u4e00\u5e27\u9f20\u6807\u4f4d\u7f6e\u7684\u504f\u79fb\u91cf\uff1a float xoffset = xpos - lastX; float yoffset = lastY - ypos; // \u6ce8\u610f\u8fd9\u91cc\u662f\u76f8\u53cd\u7684\uff0c\u56e0\u4e3ay\u5750\u6807\u662f\u4ece\u5e95\u90e8\u5f80\u9876\u90e8\u4f9d\u6b21\u589e\u5927\u7684 lastX = xpos; lastY = ypos; float sensitivity = 0.05f; xoffset *= sensitivity; yoffset *= sensitivity; \u6ce8\u610f\u6211\u4eec\u628a\u504f\u79fb\u91cf\u4e58\u4ee5\u4e86 sensitivity \uff08\u7075\u654f\u5ea6\uff09\u503c\u3002\u5982\u679c\u6211\u4eec\u5ffd\u7565\u8fd9\u4e2a\u503c\uff0c\u9f20\u6807\u79fb\u52a8\u5c31\u4f1a\u592a\u5927\u4e86\uff1b\u4f60\u53ef\u4ee5\u81ea\u5df1\u5b9e\u9a8c\u4e00\u4e0b\uff0c\u627e\u5230\u9002\u5408\u81ea\u5df1\u7684\u7075\u654f\u5ea6\u503c\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u628a\u504f\u79fb\u91cf\u52a0\u5230\u5168\u5c40\u53d8\u91cf pitch \u548c yaw \u4e0a\uff1a yaw += xoffset; pitch += yoffset; \u7b2c\u4e09\u6b65\uff0c\u6211\u4eec\u9700\u8981\u7ed9\u6444\u50cf\u673a\u6dfb\u52a0\u4e00\u4e9b\u9650\u5236\uff0c\u8fd9\u6837\u6444\u50cf\u673a\u5c31\u4e0d\u4f1a\u53d1\u751f\u5947\u602a\u7684\u79fb\u52a8\u4e86\uff08\u8fd9\u6837\u4e5f\u4f1a\u907f\u514d\u4e00\u4e9b\u5947\u602a\u7684\u95ee\u9898\uff09\u3002\u5bf9\u4e8e\u4fef\u4ef0\u89d2\uff0c\u8981\u8ba9\u7528\u6237\u4e0d\u80fd\u770b\u5411\u9ad8\u4e8e89\u5ea6\u7684\u5730\u65b9\uff08\u572890\u5ea6\u65f6\u89c6\u89d2\u4f1a\u53d1\u751f\u9006\u8f6c\uff0c\u6240\u4ee5\u6211\u4eec\u628a89\u5ea6\u4f5c\u4e3a\u6781\u9650\uff09\uff0c\u540c\u6837\u4e5f\u4e0d\u5141\u8bb8\u5c0f\u4e8e-89\u5ea6\u3002\u8fd9\u6837\u80fd\u591f\u4fdd\u8bc1\u7528\u6237\u53ea\u80fd\u770b\u5230\u5929\u7a7a\u6216\u811a\u4e0b\uff0c\u4f46\u662f\u4e0d\u80fd\u8d85\u8d8a\u8fd9\u4e2a\u9650\u5236\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u503c\u8d85\u8fc7\u9650\u5236\u7684\u65f6\u5019\u5c06\u5176\u6539\u4e3a\u6781\u9650\u503c\u6765\u5b9e\u73b0\uff1a if(pitch > 89.0f) pitch = 89.0f; if(pitch < -89.0f) pitch = -89.0f; \u6ce8\u610f\u6211\u4eec\u6ca1\u6709\u7ed9\u504f\u822a\u89d2\u8bbe\u7f6e\u9650\u5236\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u4e0d\u5e0c\u671b\u9650\u5236\u7528\u6237\u7684\u6c34\u5e73\u65cb\u8f6c\u3002\u5f53\u7136\uff0c\u7ed9\u504f\u822a\u89d2\u8bbe\u7f6e\u9650\u5236\u4e5f\u5f88\u5bb9\u6613\uff0c\u5982\u679c\u4f60\u613f\u610f\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0\u3002 \u7b2c\u56db\u4e5f\u662f\u6700\u540e\u4e00\u6b65\uff0c\u5c31\u662f\u901a\u8fc7\u4fef\u4ef0\u89d2\u548c\u504f\u822a\u89d2\u6765\u8ba1\u7b97\u4ee5\u5f97\u5230\u771f\u6b63\u7684\u65b9\u5411\u5411\u91cf\uff1a glm::vec3 front; front.x = cos(glm::radians(pitch)) * cos(glm::radians(yaw)); front.y = sin(glm::radians(pitch)); front.z = cos(glm::radians(pitch)) * sin(glm::radians(yaw)); cameraFront = glm::normalize(front); \u8ba1\u7b97\u51fa\u6765\u7684\u65b9\u5411\u5411\u91cf\u5c31\u4f1a\u5305\u542b\u6839\u636e\u9f20\u6807\u79fb\u52a8\u8ba1\u7b97\u51fa\u6765\u7684\u6240\u6709\u65cb\u8f6c\u4e86\u3002\u7531\u4e8e cameraFront \u5411\u91cf\u5df2\u7ecf\u5305\u542b\u5728GLM\u7684 lookAt \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u8fd9\u5c31\u6ca1\u4ec0\u4e48\u95ee\u9898\u4e86\u3002 \u5982\u679c\u4f60\u73b0\u5728\u8fd0\u884c\u4ee3\u7801\uff0c\u4f60\u4f1a\u53d1\u73b0\u5728\u7a97\u53e3\u7b2c\u4e00\u6b21\u83b7\u53d6\u7126\u70b9\u7684\u65f6\u5019\u6444\u50cf\u673a\u4f1a\u7a81\u7136\u8df3\u4e00\u4e0b\u3002\u8fd9\u4e2a\u95ee\u9898\u4ea7\u751f\u7684\u539f\u56e0\u662f\uff0c\u5728\u4f60\u7684\u9f20\u6807\u79fb\u52a8\u8fdb\u7a97\u53e3\u7684\u90a3\u4e00\u523b\uff0c\u9f20\u6807\u56de\u8c03\u51fd\u6570\u5c31\u4f1a\u88ab\u8c03\u7528\uff0c\u8fd9\u65f6\u5019\u7684 xpos \u548c ypos \u4f1a\u7b49\u4e8e\u9f20\u6807\u521a\u521a\u8fdb\u5165\u5c4f\u5e55\u7684\u90a3\u4e2a\u4f4d\u7f6e\u3002\u8fd9\u901a\u5e38\u662f\u4e00\u4e2a\u8ddd\u79bb\u5c4f\u5e55\u4e2d\u5fc3\u5f88\u8fdc\u7684\u5730\u65b9\uff0c\u56e0\u800c\u4ea7\u751f\u4e00\u4e2a\u5f88\u5927\u7684\u504f\u79fb\u91cf\uff0c\u6240\u4ee5\u5c31\u4f1a\u8df3\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u4f7f\u7528\u4e00\u4e2a bool \u53d8\u91cf\u68c0\u9a8c\u6211\u4eec\u662f\u5426\u662f\u7b2c\u4e00\u6b21\u83b7\u53d6\u9f20\u6807\u8f93\u5165\uff0c\u5982\u679c\u662f\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u628a\u9f20\u6807\u7684\u521d\u59cb\u4f4d\u7f6e\u66f4\u65b0\u4e3a xpos \u548c ypos \u503c\uff0c\u8fd9\u6837\u5c31\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1b\u63a5\u4e0b\u6765\u7684\u9f20\u6807\u79fb\u52a8\u5c31\u4f1a\u4f7f\u7528\u521a\u8fdb\u5165\u7684\u9f20\u6807\u4f4d\u7f6e\u5750\u6807\u6765\u8ba1\u7b97\u504f\u79fb\u91cf\u4e86\uff1a if(firstMouse) // \u8fd9\u4e2abool\u53d8\u91cf\u521d\u59cb\u65f6\u662f\u8bbe\u5b9a\u4e3atrue\u7684 { lastX = xpos; lastY = ypos; firstMouse = false; } \u6700\u540e\u7684\u4ee3\u7801\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff1a void mouse_callback(GLFWwindow* window, double xpos, double ypos) { if(firstMouse) { lastX = xpos; lastY = ypos; firstMouse = false; } float xoffset = xpos - lastX; float yoffset = lastY - ypos; lastX = xpos; lastY = ypos; float sensitivity = 0.05; xoffset *= sensitivity; yoffset *= sensitivity; yaw += xoffset; pitch += yoffset; if(pitch > 89.0f) pitch = 89.0f; if(pitch < -89.0f) pitch = -89.0f; glm::vec3 front; front.x = cos(glm::radians(yaw)) * cos(glm::radians(pitch)); front.y = sin(glm::radians(pitch)); front.z = sin(glm::radians(yaw)) * cos(glm::radians(pitch)); cameraFront = glm::normalize(front); } \u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u81ea\u7531\u5730\u57283D\u573a\u666f\u4e2d\u79fb\u52a8\u4e86\uff01 \u7f29\u653e \u4f5c\u4e3a\u6211\u4eec\u6444\u50cf\u673a\u7cfb\u7edf\u7684\u4e00\u4e2a\u9644\u52a0\u5185\u5bb9\uff0c\u6211\u4eec\u8fd8\u4f1a\u6765\u5b9e\u73b0\u4e00\u4e2a\u7f29\u653e(Zoom)\u63a5\u53e3\u3002\u5728\u4e4b\u524d\u7684\u6559\u7a0b\u4e2d\u6211\u4eec\u8bf4 \u89c6\u91ce (Field of View)\u6216 fov \u5b9a\u4e49\u4e86\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u573a\u666f\u4e2d\u591a\u5927\u7684\u8303\u56f4\u3002\u5f53\u89c6\u91ce\u53d8\u5c0f\u65f6\uff0c\u573a\u666f\u6295\u5f71\u51fa\u6765\u7684\u7a7a\u95f4\u5c31\u4f1a\u51cf\u5c0f\uff0c\u4ea7\u751f\u653e\u5927(Zoom In)\u4e86\u7684\u611f\u89c9\u3002\u6211\u4eec\u4f1a\u4f7f\u7528\u9f20\u6807\u7684\u6eda\u8f6e\u6765\u653e\u5927\u3002\u4e0e\u9f20\u6807\u79fb\u52a8\u3001\u952e\u76d8\u8f93\u5165\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u9f20\u6807\u6eda\u8f6e\u7684\u56de\u8c03\u51fd\u6570\uff1a void scroll_callback(GLFWwindow* window, double xoffset, double yoffset) { if(fov >= 1.0f && fov <= 45.0f) fov -= yoffset; if(fov <= 1.0f) fov = 1.0f; if(fov >= 45.0f) fov = 45.0f; } \u5f53\u6eda\u52a8\u9f20\u6807\u6eda\u8f6e\u7684\u65f6\u5019\uff0c yoffset \u503c\u4ee3\u8868\u6211\u4eec\u7ad6\u76f4\u6eda\u52a8\u7684\u5927\u5c0f\u3002\u5f53 scroll_callback \u51fd\u6570\u88ab\u8c03\u7528\u540e\uff0c\u6211\u4eec\u6539\u53d8\u5168\u5c40\u53d8\u91cf fov \u53d8\u91cf\u7684\u5185\u5bb9\u3002\u56e0\u4e3a 45.0f \u662f\u9ed8\u8ba4\u7684\u89c6\u91ce\u503c\uff0c\u6211\u4eec\u5c06\u4f1a\u628a\u7f29\u653e\u7ea7\u522b(Zoom Level)\u9650\u5236\u5728 1.0f \u5230 45.0f \u3002 \u6211\u4eec\u73b0\u5728\u5728\u6bcf\u4e00\u5e27\u90fd\u5fc5\u987b\u628a\u900f\u89c6\u6295\u5f71\u77e9\u9635\u4e0a\u4f20\u5230GPU\uff0c\u4f46\u73b0\u5728\u4f7f\u7528 fov \u53d8\u91cf\u4f5c\u4e3a\u5b83\u7684\u89c6\u91ce\uff1a projection = glm::perspective(glm::radians(fov), 800.0f / 600.0f, 0.1f, 100.0f); \u6700\u540e\u4e0d\u8981\u5fd8\u8bb0\u6ce8\u518c\u9f20\u6807\u6eda\u8f6e\u7684\u56de\u8c03\u51fd\u6570\uff1a glfwSetScrollCallback(window, scroll_callback); \u73b0\u5728\uff0c\u6211\u4eec\u5c31\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u6444\u50cf\u673a\u7cfb\u7edf\u4e86\uff0c\u5b83\u80fd\u591f\u8ba9\u6211\u4eec\u57283D\u73af\u5883\u4e2d\u81ea\u7531\u79fb\u52a8\u3002 \u4f60\u53ef\u4ee5\u53bb\u81ea\u7531\u5730\u5b9e\u9a8c\uff0c\u5982\u679c\u9047\u5230\u56f0\u96be\uff0c\u53ef\u4ee5\u5bf9\u6bd4 \u6e90\u4ee3\u7801 \u3002 Important \u6ce8\u610f\uff0c\u4f7f\u7528\u6b27\u62c9\u89d2\u7684\u6444\u50cf\u673a\u7cfb\u7edf\u5e76\u4e0d\u5b8c\u7f8e\u3002\u6839\u636e\u4f60\u7684\u89c6\u89d2\u9650\u5236\u6216\u8005\u662f\u914d\u7f6e\uff0c\u4f60\u4ecd\u7136\u53ef\u80fd\u5f15\u5165 \u4e07\u5411\u8282\u6b7b\u9501 \u95ee\u9898\u3002\u6700\u597d\u7684\u6444\u50cf\u673a\u7cfb\u7edf\u662f\u4f7f\u7528\u56db\u5143\u6570(Quaternions)\u7684\uff0c\u4f46\u6211\u4eec\u5c06\u4f1a\u628a\u8fd9\u4e2a\u7559\u5230\u540e\u9762\u8ba8\u8bba\u3002\uff08\u8bd1\u6ce8\uff1a \u8fd9\u91cc \u53ef\u4ee5\u67e5\u770b\u56db\u5143\u6570\u6444\u50cf\u673a\u7684\u5b9e\u73b0\uff09 \u6444\u50cf\u673a\u7c7b \u63a5\u4e0b\u6765\u7684\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u4e00\u76f4\u4f7f\u7528\u4e00\u4e2a\u6444\u50cf\u673a\u6765\u6d4f\u89c8\u573a\u666f\uff0c\u4ece\u5404\u4e2a\u89d2\u5ea6\u89c2\u5bdf\u7ed3\u679c\u3002\u7136\u800c\uff0c\u7531\u4e8e\u4e00\u4e2a\u6444\u50cf\u673a\u4f1a\u5360\u7528\u6bcf\u7bc7\u6559\u7a0b\u5f88\u5927\u7684\u7bc7\u5e45\uff0c\u6211\u4eec\u5c06\u4f1a\u4ece\u7ec6\u8282\u62bd\u8c61\u51fa\u6765\uff0c\u521b\u5efa\u6211\u4eec\u81ea\u5df1\u7684\u6444\u50cf\u673a\u5bf9\u8c61\uff0c\u5b83\u4f1a\u5b8c\u6210\u5927\u591a\u6570\u7684\u5de5\u4f5c\uff0c\u800c\u4e14\u8fd8\u4f1a\u63d0\u4f9b\u4e00\u4e9b\u9644\u52a0\u7684\u529f\u80fd\u3002\u4e0e\u7740\u8272\u5668\u6559\u7a0b\u4e0d\u540c\uff0c\u6211\u4eec\u4e0d\u4f1a\u5e26\u4f60\u4e00\u6b65\u4e00\u6b65\u521b\u5efa\u6444\u50cf\u673a\u7c7b\uff0c\u6211\u4eec\u53ea\u4f1a\u63d0\u4f9b\u4f60\u4e00\u4efd\uff08\u6709\u5b8c\u6574\u6ce8\u91ca\u7684\uff09\u4ee3\u7801\uff0c\u5982\u679c\u4f60\u60f3\u77e5\u9053\u5b83\u7684\u5185\u90e8\u6784\u9020\u7684\u8bdd\u53ef\u4ee5\u81ea\u5df1\u53bb\u9605\u8bfb\u3002 \u548c\u7740\u8272\u5668\u5bf9\u8c61\u4e00\u6837\uff0c\u6211\u4eec\u628a\u6444\u50cf\u673a\u7c7b\u5199\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u5934\u6587\u4ef6\u4e2d\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5b83\uff0c\u4f60\u73b0\u5728\u5e94\u8be5\u80fd\u591f\u7406\u89e3\u6240\u6709\u7684\u4ee3\u7801\u4e86\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u81f3\u5c11\u770b\u4e00\u770b\u8fd9\u4e2a\u7c7b\uff0c\u770b\u770b\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u81ea\u5df1\u7684\u6444\u50cf\u673a\u7c7b\u3002 Attention \u6211\u4eec\u4ecb\u7ecd\u7684\u6444\u50cf\u673a\u7cfb\u7edf\u662f\u4e00\u4e2aFPS\u98ce\u683c\u7684\u6444\u50cf\u673a\uff0c\u5b83\u80fd\u591f\u6ee1\u8db3\u5927\u591a\u6570\u60c5\u51b5\u9700\u8981\uff0c\u800c\u4e14\u4e0e\u6b27\u62c9\u89d2\u517c\u5bb9\uff0c\u4f46\u662f\u5728\u521b\u5efa\u4e0d\u540c\u7684\u6444\u50cf\u673a\u7cfb\u7edf\uff0c\u6bd4\u5982\u98de\u884c\u6a21\u62df\u6444\u50cf\u673a\uff0c\u65f6\u5c31\u8981\u5f53\u5fc3\u3002\u6bcf\u4e2a\u6444\u50cf\u673a\u7cfb\u7edf\u90fd\u6709\u81ea\u5df1\u7684\u4f18\u70b9\u548c\u4e0d\u8db3\uff0c\u6240\u4ee5\u786e\u4fdd\u5bf9\u5b83\u4eec\u8fdb\u884c\u4e86\u8be6\u7ec6\u7814\u7a76\u3002\u6bd4\u5982\uff0c\u8fd9\u4e2aFPS\u6444\u50cf\u673a\u4e0d\u5141\u8bb8\u4fef\u4ef0\u89d2\u5927\u4e8e90\u5ea6\uff0c\u800c\u4e14\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a\u56fa\u5b9a\u7684\u4e0a\u5411\u91cf(0, 1, 0)\uff0c\u8fd9\u5728\u9700\u8981\u8003\u8651\u6eda\u8f6c\u89d2\u7684\u65f6\u5019\u5c31\u4e0d\u80fd\u7528\u4e86\u3002 \u4f7f\u7528\u65b0\u6444\u50cf\u673a\u5bf9\u8c61\uff0c\u66f4\u65b0\u540e\u7248\u672c\u7684\u6e90\u7801\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u3002 \u7ec3\u4e60 \u770b\u770b\u4f60\u662f\u5426\u80fd\u591f\u4fee\u6539\u6444\u50cf\u673a\u7c7b\uff0c\u4f7f\u5f97\u5176\u80fd\u591f\u53d8\u6210\u4e00\u4e2a \u771f\u6b63\u7684 FPS\u6444\u50cf\u673a\uff08\u4e5f\u5c31\u662f\u8bf4\u4e0d\u80fd\u591f\u968f\u610f\u98de\u884c\uff09\uff1b\u4f60\u53ea\u80fd\u591f\u5446\u5728xz\u5e73\u9762\u4e0a\uff1a \u53c2\u8003\u89e3\u7b54 \u8bd5\u7740\u521b\u5efa\u4f60\u81ea\u5df1\u7684LookAt\u51fd\u6570\uff0c\u5176\u4e2d\u4f60\u9700\u8981\u624b\u52a8\u521b\u5efa\u4e00\u4e2a\u6211\u4eec\u5728\u4e00\u5f00\u59cb\u8ba8\u8bba\u7684\u89c2\u5bdf\u77e9\u9635\u3002\u7528\u4f60\u7684\u51fd\u6570\u5b9e\u73b0\u6765\u66ff\u6362GLM\u7684LookAt\u51fd\u6570\uff0c\u770b\u770b\u5b83\u662f\u5426\u8fd8\u80fd\u4e00\u6837\u5730\u5de5\u4f5c\uff1a \u53c2\u8003\u89e3\u7b54","title":"\u6444\u50cf\u673a"},{"location":"01%20Getting%20started/09%20Camera/#_1","text":"\u539f\u6587 Camera \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django , Krasjet, Geequlim, BLumia \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u524d\u9762\u7684\u6559\u7a0b\u4e2d\u6211\u4eec\u8ba8\u8bba\u4e86\u89c2\u5bdf\u77e9\u9635\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u89c2\u5bdf\u77e9\u9635\u79fb\u52a8\u573a\u666f\uff08\u6211\u4eec\u5411\u540e\u79fb\u52a8\u4e86\u4e00\u70b9\uff09\u3002OpenGL\u672c\u8eab\u6ca1\u6709 \u6444\u50cf\u673a (Camera)\u7684\u6982\u5ff5\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u628a\u573a\u666f\u4e2d\u7684\u6240\u6709\u7269\u4f53\u5f80\u76f8\u53cd\u65b9\u5411\u79fb\u52a8\u7684\u65b9\u5f0f\u6765\u6a21\u62df\u51fa\u6444\u50cf\u673a\uff0c\u4ea7\u751f\u4e00\u79cd \u6211\u4eec \u5728\u79fb\u52a8\u7684\u611f\u89c9\uff0c\u800c\u4e0d\u662f\u573a\u666f\u5728\u79fb\u52a8\u3002 \u672c\u8282\u6211\u4eec\u5c06\u4f1a\u8ba8\u8bba\u5982\u4f55\u5728OpenGL\u4e2d\u914d\u7f6e\u4e00\u4e2a\u6444\u50cf\u673a\uff0c\u5e76\u4e14\u5c06\u4f1a\u8ba8\u8bbaFPS\u98ce\u683c\u7684\u6444\u50cf\u673a\uff0c\u8ba9\u4f60\u80fd\u591f\u57283D\u573a\u666f\u4e2d\u81ea\u7531\u79fb\u52a8\u3002\u6211\u4eec\u4e5f\u4f1a\u8ba8\u8bba\u952e\u76d8\u548c\u9f20\u6807\u8f93\u5165\uff0c\u6700\u7ec8\u5b8c\u6210\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u6444\u50cf\u673a\u7c7b\u3002","title":"\u6444\u50cf\u673a"},{"location":"01%20Getting%20started/09%20Camera/#_2","text":"\u5f53\u6211\u4eec\u8ba8\u8bba\u6444\u50cf\u673a/\u89c2\u5bdf\u7a7a\u95f4(Camera/View Space)\u7684\u65f6\u5019\uff0c\u662f\u5728\u8ba8\u8bba\u4ee5\u6444\u50cf\u673a\u7684\u89c6\u89d2\u4f5c\u4e3a\u573a\u666f\u539f\u70b9\u65f6\u573a\u666f\u4e2d\u6240\u6709\u7684\u9876\u70b9\u5750\u6807\uff1a\u89c2\u5bdf\u77e9\u9635\u628a\u6240\u6709\u7684\u4e16\u754c\u5750\u6807\u53d8\u6362\u4e3a\u76f8\u5bf9\u4e8e\u6444\u50cf\u673a\u4f4d\u7f6e\u4e0e\u65b9\u5411\u7684\u89c2\u5bdf\u5750\u6807\u3002\u8981\u5b9a\u4e49\u4e00\u4e2a\u6444\u50cf\u673a\uff0c\u6211\u4eec\u9700\u8981\u5b83\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\u3001\u89c2\u5bdf\u7684\u65b9\u5411\u3001\u4e00\u4e2a\u6307\u5411\u5b83\u53f3\u4fa7\u7684\u5411\u91cf\u4ee5\u53ca\u4e00\u4e2a\u6307\u5411\u5b83\u4e0a\u65b9\u7684\u5411\u91cf\u3002\u7ec6\u5fc3\u7684\u8bfb\u8005\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u6211\u4eec\u5b9e\u9645\u4e0a\u521b\u5efa\u4e86\u4e00\u4e2a\u4e09\u4e2a\u5355\u4f4d\u8f74\u76f8\u4e92\u5782\u76f4\u7684\u3001\u4ee5\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u4e3a\u539f\u70b9\u7684\u5750\u6807\u7cfb\u3002","title":"\u6444\u50cf\u673a/\u89c2\u5bdf\u7a7a\u95f4"},{"location":"01%20Getting%20started/09%20Camera/#1","text":"\u83b7\u53d6\u6444\u50cf\u673a\u4f4d\u7f6e\u5f88\u7b80\u5355\u3002\u6444\u50cf\u673a\u4f4d\u7f6e\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u4e16\u754c\u7a7a\u95f4\u4e2d\u4e00\u4e2a\u6307\u5411\u6444\u50cf\u673a\u4f4d\u7f6e\u7684\u5411\u91cf\u3002\u6211\u4eec\u628a\u6444\u50cf\u673a\u4f4d\u7f6e\u8bbe\u7f6e\u4e3a\u4e0a\u4e00\u8282\u4e2d\u7684\u90a3\u4e2a\u76f8\u540c\u7684\u4f4d\u7f6e\uff1a glm::vec3 cameraPos = glm::vec3(0.0f, 0.0f, 3.0f); Important \u4e0d\u8981\u5fd8\u8bb0\u6b63z\u8f74\u662f\u4ece\u5c4f\u5e55\u6307\u5411\u4f60\u7684\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u6444\u50cf\u673a\u5411\u540e\u79fb\u52a8\uff0c\u6211\u4eec\u5c31\u6cbf\u7740z\u8f74\u7684\u6b63\u65b9\u5411\u79fb\u52a8\u3002","title":"1. \u6444\u50cf\u673a\u4f4d\u7f6e"},{"location":"01%20Getting%20started/09%20Camera/#2","text":"\u4e0b\u4e00\u4e2a\u9700\u8981\u7684\u5411\u91cf\u662f\u6444\u50cf\u673a\u7684\u65b9\u5411\uff0c\u8fd9\u91cc\u6307\u7684\u662f\u6444\u50cf\u673a\u6307\u5411\u54ea\u4e2a\u65b9\u5411\u3002\u73b0\u5728\u6211\u4eec\u8ba9\u6444\u50cf\u673a\u6307\u5411\u573a\u666f\u539f\u70b9\uff1a(0, 0, 0)\u3002\u8fd8\u8bb0\u5f97\u5982\u679c\u5c06\u4e24\u4e2a\u77e2\u91cf\u76f8\u51cf\uff0c\u6211\u4eec\u5c31\u80fd\u5f97\u5230\u8fd9\u4e24\u4e2a\u77e2\u91cf\u7684\u5dee\u5417\uff1f\u7528\u573a\u666f\u539f\u70b9\u5411\u91cf\u51cf\u53bb\u6444\u50cf\u673a\u4f4d\u7f6e\u5411\u91cf\u7684\u7ed3\u679c\u5c31\u662f\u6444\u50cf\u673a\u7684\u6307\u5411\u5411\u91cf\u3002\u7531\u4e8e\u6211\u4eec\u77e5\u9053\u6444\u50cf\u673a\u6307\u5411z\u8f74\u8d1f\u65b9\u5411\uff0c\u4f46\u6211\u4eec\u5e0c\u671b\u65b9\u5411\u5411\u91cf(Direction Vector)\u6307\u5411\u6444\u50cf\u673a\u7684z\u8f74\u6b63\u65b9\u5411\u3002\u5982\u679c\u6211\u4eec\u4ea4\u6362\u76f8\u51cf\u7684\u987a\u5e8f\uff0c\u6211\u4eec\u5c31\u4f1a\u83b7\u5f97\u4e00\u4e2a\u6307\u5411\u6444\u50cf\u673a\u6b63z\u8f74\u65b9\u5411\u7684\u5411\u91cf\uff1a glm::vec3 cameraTarget = glm::vec3(0.0f, 0.0f, 0.0f); glm::vec3 cameraDirection = glm::normalize(cameraPos - cameraTarget); Attention \u65b9\u5411 \u5411\u91cf(Direction Vector)\u5e76\u4e0d\u662f\u6700\u597d\u7684\u540d\u5b57\uff0c\u56e0\u4e3a\u5b83\u5b9e\u9645\u4e0a\u6307\u5411\u4ece\u5b83\u5230\u76ee\u6807\u5411\u91cf\u7684\u76f8\u53cd\u65b9\u5411\uff08\u8bd1\u6ce8\uff1a\u6ce8\u610f\u770b\u524d\u9762\u7684\u90a3\u4e2a\u56fe\uff0c\u84dd\u8272\u7684\u65b9\u5411\u5411\u91cf\u5927\u6982\u6307\u5411z\u8f74\u7684\u6b63\u65b9\u5411\uff0c\u4e0e\u6444\u50cf\u673a\u5b9e\u9645\u6307\u5411\u7684\u65b9\u5411\u662f\u6b63\u597d\u76f8\u53cd\u7684\uff09\u3002","title":"2. \u6444\u50cf\u673a\u65b9\u5411"},{"location":"01%20Getting%20started/09%20Camera/#3","text":"\u6211\u4eec\u9700\u8981\u7684\u53e6\u4e00\u4e2a\u5411\u91cf\u662f\u4e00\u4e2a \u53f3\u5411\u91cf (Right Vector)\uff0c\u5b83\u4ee3\u8868\u6444\u50cf\u673a\u7a7a\u95f4\u7684x\u8f74\u7684\u6b63\u65b9\u5411\u3002\u4e3a\u83b7\u53d6\u53f3\u5411\u91cf\u6211\u4eec\u9700\u8981\u5148\u4f7f\u7528\u4e00\u4e2a\u5c0f\u6280\u5de7\uff1a\u5148\u5b9a\u4e49\u4e00\u4e2a \u4e0a\u5411\u91cf (Up Vector)\u3002\u63a5\u4e0b\u6765\u628a\u4e0a\u5411\u91cf\u548c\u7b2c\u4e8c\u6b65\u5f97\u5230\u7684\u65b9\u5411\u5411\u91cf\u8fdb\u884c\u53c9\u4e58\u3002\u4e24\u4e2a\u5411\u91cf\u53c9\u4e58\u7684\u7ed3\u679c\u4f1a\u540c\u65f6\u5782\u76f4\u4e8e\u4e24\u5411\u91cf\uff0c\u56e0\u6b64\u6211\u4eec\u4f1a\u5f97\u5230\u6307\u5411x\u8f74\u6b63\u65b9\u5411\u7684\u90a3\u4e2a\u5411\u91cf\uff08\u5982\u679c\u6211\u4eec\u4ea4\u6362\u4e24\u4e2a\u5411\u91cf\u53c9\u4e58\u7684\u987a\u5e8f\u5c31\u4f1a\u5f97\u5230\u76f8\u53cd\u7684\u6307\u5411x\u8f74\u8d1f\u65b9\u5411\u7684\u5411\u91cf\uff09\uff1a glm::vec3 up = glm::vec3(0.0f, 1.0f, 0.0f); glm::vec3 cameraRight = glm::normalize(glm::cross(up, cameraDirection));","title":"3. \u53f3\u8f74"},{"location":"01%20Getting%20started/09%20Camera/#4","text":"\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e86x\u8f74\u5411\u91cf\u548cz\u8f74\u5411\u91cf\uff0c\u83b7\u53d6\u4e00\u4e2a\u6307\u5411\u6444\u50cf\u673a\u7684\u6b63y\u8f74\u5411\u91cf\u5c31\u76f8\u5bf9\u7b80\u5355\u4e86\uff1a\u6211\u4eec\u628a\u53f3\u5411\u91cf\u548c\u65b9\u5411\u5411\u91cf\u8fdb\u884c\u53c9\u4e58\uff1a glm::vec3 cameraUp = glm::cross(cameraDirection, cameraRight); \u5728\u53c9\u4e58\u548c\u4e00\u4e9b\u5c0f\u6280\u5de7\u7684\u5e2e\u52a9\u4e0b\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u6240\u6709\u6784\u6210\u89c2\u5bdf/\u6444\u50cf\u673a\u7a7a\u95f4\u7684\u5411\u91cf\u3002\u5bf9\u4e8e\u60f3\u5b66\u5230\u66f4\u591a\u6570\u5b66\u539f\u7406\u7684\u8bfb\u8005\uff0c\u63d0\u793a\u4e00\u4e0b\uff0c\u5728\u7ebf\u6027\u4ee3\u6570\u4e2d\u8fd9\u4e2a\u5904\u7406\u53eb\u505a \u683c\u62c9\u59c6\u2014\u65bd\u5bc6\u7279\u6b63\u4ea4\u5316 (Gram-Schmidt Process)\u3002\u4f7f\u7528\u8fd9\u4e9b\u6444\u50cf\u673a\u5411\u91cf\u6211\u4eec\u5c31\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a LookAt \u77e9\u9635\u4e86\uff0c\u5b83\u5728\u521b\u5efa\u6444\u50cf\u673a\u7684\u65f6\u5019\u975e\u5e38\u6709\u7528\u3002","title":"4. \u4e0a\u8f74"},{"location":"01%20Getting%20started/09%20Camera/#look-at","text":"\u4f7f\u7528\u77e9\u9635\u7684\u597d\u5904\u4e4b\u4e00\u662f\u5982\u679c\u4f60\u4f7f\u75283\u4e2a\u76f8\u4e92\u5782\u76f4\uff08\u6216\u975e\u7ebf\u6027\uff09\u7684\u8f74\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5750\u6807\u7a7a\u95f4\uff0c\u4f60\u53ef\u4ee5\u7528\u8fd93\u4e2a\u8f74\u5916\u52a0\u4e00\u4e2a\u5e73\u79fb\u5411\u91cf\u6765\u521b\u5efa\u4e00\u4e2a\u77e9\u9635\uff0c\u5e76\u4e14\u4f60\u53ef\u4ee5\u7528\u8fd9\u4e2a\u77e9\u9635\u4e58\u4ee5\u4efb\u4f55\u5411\u91cf\u6765\u5c06\u5176\u53d8\u6362\u5230\u90a3\u4e2a\u5750\u6807\u7a7a\u95f4\u3002\u8fd9\u6b63\u662f LookAt \u77e9\u9635\u6240\u505a\u7684\uff0c\u73b0\u5728\u6211\u4eec\u6709\u4e863\u4e2a\u76f8\u4e92\u5782\u76f4\u7684\u8f74\u548c\u4e00\u4e2a\u5b9a\u4e49\u6444\u50cf\u673a\u7a7a\u95f4\u7684\u4f4d\u7f6e\u5750\u6807\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u6211\u4eec\u81ea\u5df1\u7684LookAt\u77e9\u9635\u4e86\uff1a LookAt = \\begin{bmatrix} \\color{red}{R_x} & \\color{red}{R_y} & \\color{red}{R_z} & 0 \\\\ \\color{green}{U_x} & \\color{green}{U_y} & \\color{green}{U_z} & 0 \\\\ \\color{blue}{D_x} & \\color{blue}{D_y} & \\color{blue}{D_z} & 0 \\\\ 0 & 0 & 0 & 1 \\end{bmatrix} * \\begin{bmatrix} 1 & 0 & 0 & -\\color{purple}{P_x} \\\\ 0 & 1 & 0 & -\\color{purple}{P_y} \\\\ 0 & 0 & 1 & -\\color{purple}{P_z} \\\\ 0 & 0 & 0 & 1 \\end{bmatrix} \u5176\u4e2d \\color{red}R \u662f\u53f3\u5411\u91cf\uff0c \\color{green}U \u662f\u4e0a\u5411\u91cf\uff0c \\color{blue}D \u662f\u65b9\u5411\u5411\u91cf \\color{purple}P \u662f\u6444\u50cf\u673a\u4f4d\u7f6e\u5411\u91cf\u3002\u6ce8\u610f\uff0c\u4f4d\u7f6e\u5411\u91cf\u662f\u76f8\u53cd\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u6700\u7ec8\u5e0c\u671b\u628a\u4e16\u754c\u5e73\u79fb\u5230\u4e0e\u6211\u4eec\u81ea\u8eab\u79fb\u52a8\u7684\u76f8\u53cd\u65b9\u5411\u3002\u628a\u8fd9\u4e2aLookAt\u77e9\u9635\u4f5c\u4e3a\u89c2\u5bdf\u77e9\u9635\u53ef\u4ee5\u5f88\u9ad8\u6548\u5730\u628a\u6240\u6709\u4e16\u754c\u5750\u6807\u53d8\u6362\u5230\u521a\u521a\u5b9a\u4e49\u7684\u89c2\u5bdf\u7a7a\u95f4\u3002LookAt\u77e9\u9635\u5c31\u50cf\u5b83\u7684\u540d\u5b57\u8868\u8fbe\u7684\u90a3\u6837\uff1a\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a\u770b\u7740(Look at)\u7ed9\u5b9a\u76ee\u6807\u7684\u89c2\u5bdf\u77e9\u9635\u3002 \u5e78\u8fd0\u7684\u662f\uff0cGLM\u5df2\u7ecf\u63d0\u4f9b\u4e86\u8fd9\u4e9b\u652f\u6301\u3002\u6211\u4eec\u8981\u505a\u7684\u53ea\u662f\u5b9a\u4e49\u4e00\u4e2a\u6444\u50cf\u673a\u4f4d\u7f6e\uff0c\u4e00\u4e2a\u76ee\u6807\u4f4d\u7f6e\u548c\u4e00\u4e2a\u8868\u793a\u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u4e0a\u5411\u91cf\u7684\u5411\u91cf\uff08\u6211\u4eec\u8ba1\u7b97\u53f3\u5411\u91cf\u4f7f\u7528\u7684\u90a3\u4e2a\u4e0a\u5411\u91cf\uff09\u3002\u63a5\u7740GLM\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2aLookAt\u77e9\u9635\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u5f53\u4f5c\u6211\u4eec\u7684\u89c2\u5bdf\u77e9\u9635\uff1a glm::mat4 view; view = glm::lookAt(glm::vec3(0.0f, 0.0f, 3.0f), glm::vec3(0.0f, 0.0f, 0.0f), glm::vec3(0.0f, 1.0f, 0.0f)); glm::LookAt \u51fd\u6570\u9700\u8981\u4e00\u4e2a\u4f4d\u7f6e\u3001\u76ee\u6807\u548c\u4e0a\u5411\u91cf\u3002\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a\u548c\u5728\u4e0a\u4e00\u8282\u4f7f\u7528\u7684\u4e00\u6837\u7684\u89c2\u5bdf\u77e9\u9635\u3002 \u5728\u8ba8\u8bba\u7528\u6237\u8f93\u5165\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u505a\u4e9b\u6709\u610f\u601d\u7684\u4e8b\uff0c\u628a\u6211\u4eec\u7684\u6444\u50cf\u673a\u5728\u573a\u666f\u4e2d\u65cb\u8f6c\u3002\u6211\u4eec\u4f1a\u5c06\u6444\u50cf\u673a\u7684\u6ce8\u89c6\u70b9\u4fdd\u6301\u5728(0, 0, 0)\u3002 \u6211\u4eec\u9700\u8981\u7528\u5230\u4e00\u70b9\u4e09\u89d2\u5b66\u7684\u77e5\u8bc6\u6765\u5728\u6bcf\u4e00\u5e27\u521b\u5efa\u4e00\u4e2ax\u548cz\u5750\u6807\uff0c\u5b83\u4f1a\u4ee3\u8868\u5706\u4e0a\u7684\u4e00\u70b9\uff0c\u6211\u4eec\u5c06\u4f1a\u4f7f\u7528\u5b83\u4f5c\u4e3a\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u3002\u901a\u8fc7\u91cd\u65b0\u8ba1\u7b97x\u548cy\u5750\u6807\uff0c\u6211\u4eec\u4f1a\u904d\u5386\u5706\u4e0a\u7684\u6240\u6709\u70b9\uff0c\u8fd9\u6837\u6444\u50cf\u673a\u5c31\u4f1a\u7ed5\u7740\u573a\u666f\u65cb\u8f6c\u4e86\u3002\u6211\u4eec\u9884\u5148\u5b9a\u4e49\u8fd9\u4e2a\u5706\u7684\u534a\u5f84 radius \uff0c\u5728\u6bcf\u6b21\u6e32\u67d3\u8fed\u4ee3\u4e2d\u4f7f\u7528GLFW\u7684 glfwGetTime \u51fd\u6570\u91cd\u65b0\u521b\u5efa\u89c2\u5bdf\u77e9\u9635\uff0c\u6765\u6269\u5927\u8fd9\u4e2a\u5706\u3002 float radius = 10.0f; float camX = sin(glfwGetTime()) * radius; float camZ = cos(glfwGetTime()) * radius; glm::mat4 view; view = glm::lookAt(glm::vec3(camX, 0.0, camZ), glm::vec3(0.0, 0.0, 0.0), glm::vec3(0.0, 1.0, 0.0)); \u5982\u679c\u4f60\u8fd0\u884c\u4ee3\u7801\uff0c\u5e94\u8be5\u4f1a\u5f97\u5230\u4e0b\u9762\u7684\u7ed3\u679c\uff1a \u901a\u8fc7\u8fd9\u4e00\u5c0f\u6bb5\u4ee3\u7801\uff0c\u6444\u50cf\u673a\u73b0\u5728\u4f1a\u968f\u7740\u65f6\u95f4\u6d41\u901d\u56f4\u7ed5\u573a\u666f\u8f6c\u52a8\u4e86\u3002\u81ea\u5df1\u8bd5\u8bd5\u6539\u53d8\u534a\u5f84\u548c\u4f4d\u7f6e/\u65b9\u5411\u53c2\u6570\uff0c\u770b\u770b LookAt \u77e9\u9635\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u540c\u65f6\uff0c\u5982\u679c\u4f60\u5728\u54ea\u5361\u4f4f\u7684\u8bdd\uff0c\u8fd9\u91cc\u6709 \u6e90\u7801 \u3002","title":"Look At"},{"location":"01%20Getting%20started/09%20Camera/#_3","text":"\u8ba9\u6444\u50cf\u673a\u7ed5\u7740\u573a\u666f\u8f6c\u7684\u786e\u5f88\u6709\u8da3\uff0c\u4f46\u662f\u8ba9\u6211\u4eec\u81ea\u5df1\u79fb\u52a8\u6444\u50cf\u673a\u4f1a\u66f4\u6709\u8da3\uff01\u9996\u5148\u6211\u4eec\u5fc5\u987b\u8bbe\u7f6e\u4e00\u4e2a\u6444\u50cf\u673a\u7cfb\u7edf\uff0c\u6240\u4ee5\u5728\u6211\u4eec\u7684\u7a0b\u5e8f\u524d\u9762\u5b9a\u4e49\u4e00\u4e9b\u6444\u50cf\u673a\u53d8\u91cf\u5f88\u6709\u7528\uff1a glm::vec3 cameraPos = glm::vec3(0.0f, 0.0f, 3.0f); glm::vec3 cameraFront = glm::vec3(0.0f, 0.0f, -1.0f); glm::vec3 cameraUp = glm::vec3(0.0f, 1.0f, 0.0f); LookAt \u51fd\u6570\u73b0\u5728\u6210\u4e86\uff1a view = glm::lookAt(cameraPos, cameraPos + cameraFront, cameraUp); \u6211\u4eec\u9996\u5148\u5c06\u6444\u50cf\u673a\u4f4d\u7f6e\u8bbe\u7f6e\u4e3a\u4e4b\u524d\u5b9a\u4e49\u7684 cameraPos \u3002\u65b9\u5411\u662f\u5f53\u524d\u7684\u4f4d\u7f6e\u52a0\u4e0a\u6211\u4eec\u521a\u521a\u5b9a\u4e49\u7684\u65b9\u5411\u5411\u91cf\u3002\u8fd9\u6837\u80fd\u4fdd\u8bc1\u65e0\u8bba\u6211\u4eec\u600e\u4e48\u79fb\u52a8\uff0c\u6444\u50cf\u673a\u90fd\u4f1a\u6ce8\u89c6\u7740\u76ee\u6807\u65b9\u5411\u3002\u8ba9\u6211\u4eec\u6446\u5f04\u4e00\u4e0b\u8fd9\u4e9b\u5411\u91cf\uff0c\u5728\u6309\u4e0b\u67d0\u4e9b\u6309\u94ae\u65f6\u66f4\u65b0 cameraPos \u5411\u91cf\u3002 \u6211\u4eec\u5df2\u7ecf\u4e3aGLFW\u7684\u952e\u76d8\u8f93\u5165\u5b9a\u4e49\u8fc7\u4e00\u4e2a processInput \u51fd\u6570\u4e86\uff0c\u6211\u4eec\u6765\u65b0\u6dfb\u52a0\u51e0\u4e2a\u9700\u8981\u68c0\u67e5\u7684\u6309\u952e\u547d\u4ee4\uff1a void processInput(GLFWwindow *window) { ... float cameraSpeed = 0.05f; // adjust accordingly if (glfwGetKey(window, GLFW_KEY_W) == GLFW_PRESS) cameraPos += cameraSpeed * cameraFront; if (glfwGetKey(window, GLFW_KEY_S) == GLFW_PRESS) cameraPos -= cameraSpeed * cameraFront; if (glfwGetKey(window, GLFW_KEY_A) == GLFW_PRESS) cameraPos -= glm::normalize(glm::cross(cameraFront, cameraUp)) * cameraSpeed; if (glfwGetKey(window, GLFW_KEY_D) == GLFW_PRESS) cameraPos += glm::normalize(glm::cross(cameraFront, cameraUp)) * cameraSpeed; } \u5f53\u6211\u4eec\u6309\u4e0b WASD \u952e\u7684\u4efb\u610f\u4e00\u4e2a\uff0c\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u90fd\u4f1a\u76f8\u5e94\u66f4\u65b0\u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5411\u524d\u6216\u5411\u540e\u79fb\u52a8\uff0c\u6211\u4eec\u5c31\u628a\u4f4d\u7f6e\u5411\u91cf\u52a0\u4e0a\u6216\u51cf\u53bb\u65b9\u5411\u5411\u91cf\u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5411\u5de6\u53f3\u79fb\u52a8\uff0c\u6211\u4eec\u4f7f\u7528\u53c9\u4e58\u6765\u521b\u5efa\u4e00\u4e2a \u53f3\u5411\u91cf (Right Vector)\uff0c\u5e76\u6cbf\u7740\u5b83\u76f8\u5e94\u79fb\u52a8\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u6837\u5c31\u521b\u5efa\u4e86\u4f7f\u7528\u6444\u50cf\u673a\u65f6\u719f\u6089\u7684 \u6a2a\u79fb (Strafe)\u6548\u679c\u3002 Important \u6ce8\u610f\uff0c\u6211\u4eec\u5bf9 \u53f3\u5411\u91cf \u8fdb\u884c\u4e86\u6807\u51c6\u5316\u3002\u5982\u679c\u6211\u4eec\u6ca1\u5bf9\u8fd9\u4e2a\u5411\u91cf\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u6700\u540e\u7684\u53c9\u4e58\u7ed3\u679c\u4f1a\u6839\u636e cameraFront \u53d8\u91cf\u8fd4\u56de\u5927\u5c0f\u4e0d\u540c\u7684\u5411\u91cf\u3002\u5982\u679c\u6211\u4eec\u4e0d\u5bf9\u5411\u91cf\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u6211\u4eec\u5c31\u5f97\u6839\u636e\u6444\u50cf\u673a\u7684\u671d\u5411\u4e0d\u540c\u52a0\u901f\u6216\u51cf\u901f\u79fb\u52a8\u4e86\uff0c\u4f46\u5982\u679c\u8fdb\u884c\u4e86\u6807\u51c6\u5316\u79fb\u52a8\u5c31\u662f\u5300\u901f\u7684\u3002 \u73b0\u5728\u4f60\u5c31\u5e94\u8be5\u80fd\u591f\u79fb\u52a8\u6444\u50cf\u673a\u4e86\uff0c\u867d\u7136\u79fb\u52a8\u901f\u5ea6\u548c\u7cfb\u7edf\u6709\u5173\uff0c\u4f60\u53ef\u80fd\u4f1a\u9700\u8981\u8c03\u6574\u4e00\u4e0b cameraSpeed \u3002","title":"\u81ea\u7531\u79fb\u52a8"},{"location":"01%20Getting%20started/09%20Camera/#_4","text":"\u76ee\u524d\u6211\u4eec\u7684\u79fb\u52a8\u901f\u5ea6\u662f\u4e2a\u5e38\u91cf\u3002\u7406\u8bba\u4e0a\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u662f\u5b9e\u9645\u60c5\u51b5\u4e0b\u6839\u636e\u5904\u7406\u5668\u7684\u80fd\u529b\u4e0d\u540c\uff0c\u6709\u4e9b\u4eba\u53ef\u80fd\u4f1a\u6bd4\u5176\u4ed6\u4eba\u6bcf\u79d2\u7ed8\u5236\u66f4\u591a\u5e27\uff0c\u4e5f\u5c31\u662f\u4ee5\u66f4\u9ad8\u7684\u9891\u7387\u8c03\u7528 processInput \u51fd\u6570\u3002\u7ed3\u679c\u5c31\u662f\uff0c\u6839\u636e\u914d\u7f6e\u7684\u4e0d\u540c\uff0c\u6709\u4e9b\u4eba\u53ef\u80fd\u79fb\u52a8\u5f88\u5feb\uff0c\u800c\u6709\u4e9b\u4eba\u4f1a\u79fb\u52a8\u5f88\u6162\u3002\u5f53\u4f60\u53d1\u5e03\u4f60\u7684\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u4f60\u5fc5\u987b\u786e\u4fdd\u5b83\u5728\u6240\u6709\u786c\u4ef6\u4e0a\u79fb\u52a8\u901f\u5ea6\u90fd\u4e00\u6837\u3002 \u56fe\u5f62\u7a0b\u5e8f\u548c\u6e38\u620f\u901a\u5e38\u4f1a\u8ddf\u8e2a\u4e00\u4e2a \u65f6\u95f4\u5dee (Deltatime)\u53d8\u91cf\uff0c\u5b83\u50a8\u5b58\u4e86\u6e32\u67d3\u4e0a\u4e00\u5e27\u6240\u7528\u7684\u65f6\u95f4\u3002\u6211\u4eec\u628a\u6240\u6709\u901f\u5ea6\u90fd\u53bb\u4e58\u4ee5 deltaTime \u503c\u3002\u7ed3\u679c\u5c31\u662f\uff0c\u5982\u679c\u6211\u4eec\u7684 deltaTime \u5f88\u5927\uff0c\u5c31\u610f\u5473\u7740\u4e0a\u4e00\u5e27\u7684\u6e32\u67d3\u82b1\u8d39\u4e86\u66f4\u591a\u65f6\u95f4\uff0c\u6240\u4ee5\u8fd9\u4e00\u5e27\u7684\u901f\u5ea6\u9700\u8981\u53d8\u5f97\u66f4\u9ad8\u6765\u5e73\u8861\u6e32\u67d3\u6240\u82b1\u53bb\u7684\u65f6\u95f4\u3002\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u65f6\uff0c\u65e0\u8bba\u4f60\u7684\u7535\u8111\u5feb\u8fd8\u662f\u6162\uff0c\u6444\u50cf\u673a\u7684\u901f\u5ea6\u90fd\u4f1a\u76f8\u5e94\u5e73\u8861\uff0c\u8fd9\u6837\u6bcf\u4e2a\u7528\u6237\u7684\u4f53\u9a8c\u5c31\u90fd\u4e00\u6837\u4e86\u3002 \u6211\u4eec\u8ddf\u8e2a\u4e24\u4e2a\u5168\u5c40\u53d8\u91cf\u6765\u8ba1\u7b97\u51fa deltaTime \u503c\uff1a float deltaTime = 0.0f; // \u5f53\u524d\u5e27\u4e0e\u4e0a\u4e00\u5e27\u7684\u65f6\u95f4\u5dee float lastFrame = 0.0f; // \u4e0a\u4e00\u5e27\u7684\u65f6\u95f4 \u5728\u6bcf\u4e00\u5e27\u4e2d\u6211\u4eec\u8ba1\u7b97\u51fa\u65b0\u7684 deltaTime \u4ee5\u5907\u540e\u7528\u3002 float currentFrame = glfwGetTime(); deltaTime = currentFrame - lastFrame; lastFrame = currentFrame; \u73b0\u5728\u6211\u4eec\u6709\u4e86 deltaTime \uff0c\u5728\u8ba1\u7b97\u901f\u5ea6\u7684\u65f6\u5019\u53ef\u4ee5\u5c06\u5176\u8003\u8651\u8fdb\u53bb\u4e86\uff1a void processInput(GLFWwindow *window) { float cameraSpeed = 2.5f * deltaTime; ... } \u4e0e\u524d\u9762\u7684\u90e8\u5206\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u66f4\u6d41\u7545\u70b9\u7684\u6444\u50cf\u673a\u7cfb\u7edf\uff1a \u73b0\u5728\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u5728\u4efb\u4f55\u7cfb\u7edf\u4e0a\u79fb\u52a8\u901f\u5ea6\u90fd\u4e00\u6837\u7684\u6444\u50cf\u673a\u3002\u540c\u6837\uff0c\u5982\u679c\u4f60\u5361\u4f4f\u4e86\uff0c\u67e5\u770b\u4e00\u4e0b \u6e90\u7801 \u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4efb\u4f55\u79fb\u52a8\u90fd\u4f1a\u5f71\u54cd\u8fd4\u56de\u7684 deltaTime \u503c\u3002","title":"\u79fb\u52a8\u901f\u5ea6"},{"location":"01%20Getting%20started/09%20Camera/#_5","text":"\u53ea\u7528\u952e\u76d8\u79fb\u52a8\u6ca1\u4ec0\u4e48\u610f\u601d\u3002\u7279\u522b\u662f\u6211\u4eec\u8fd8\u4e0d\u80fd\u8f6c\u5411\uff0c\u79fb\u52a8\u5f88\u53d7\u9650\u5236\u3002\u662f\u65f6\u5019\u52a0\u5165\u9f20\u6807\u4e86\uff01 \u4e3a\u4e86\u80fd\u591f\u6539\u53d8\u89c6\u89d2\uff0c\u6211\u4eec\u9700\u8981\u6839\u636e\u9f20\u6807\u7684\u8f93\u5165\u6539\u53d8 cameraFront \u5411\u91cf\u3002\u7136\u800c\uff0c\u6839\u636e\u9f20\u6807\u79fb\u52a8\u6539\u53d8\u65b9\u5411\u5411\u91cf\u6709\u70b9\u590d\u6742\uff0c\u9700\u8981\u4e00\u4e9b\u4e09\u89d2\u5b66\u77e5\u8bc6\u3002\u5982\u679c\u4f60\u5bf9\u4e09\u89d2\u5b66\u77e5\u4e4b\u751a\u5c11\uff0c\u522b\u62c5\u5fc3\uff0c\u4f60\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u4e00\u90e8\u5206\uff0c\u76f4\u63a5\u590d\u5236\u7c98\u8d34\u6211\u4eec\u7684\u4ee3\u7801\uff1b\u5f53\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u7684\u65f6\u5019\u518d\u56de\u6765\u770b\u3002","title":"\u89c6\u89d2\u79fb\u52a8"},{"location":"01%20Getting%20started/09%20Camera/#_6","text":"\u6b27\u62c9\u89d2(Euler Angle)\u662f\u53ef\u4ee5\u8868\u793a3D\u7a7a\u95f4\u4e2d\u4efb\u4f55\u65cb\u8f6c\u76843\u4e2a\u503c\uff0c\u7531\u83b1\u6602\u54c8\u5fb7\u00b7\u6b27\u62c9(Leonhard Euler)\u572818\u4e16\u7eaa\u63d0\u51fa\u3002\u4e00\u5171\u67093\u79cd\u6b27\u62c9\u89d2\uff1a\u4fef\u4ef0\u89d2(Pitch)\u3001\u504f\u822a\u89d2(Yaw)\u548c\u6eda\u8f6c\u89d2(Roll)\uff0c\u4e0b\u9762\u7684\u56fe\u7247\u5c55\u793a\u4e86\u5b83\u4eec\u7684\u542b\u4e49\uff1a \u4fef\u4ef0\u89d2 \u662f\u63cf\u8ff0\u6211\u4eec\u5982\u4f55\u5f80\u4e0a\u6216\u5f80\u4e0b\u770b\u7684\u89d2\uff0c\u53ef\u4ee5\u5728\u7b2c\u4e00\u5f20\u56fe\u4e2d\u770b\u5230\u3002\u7b2c\u4e8c\u5f20\u56fe\u5c55\u793a\u4e86 \u504f\u822a\u89d2 \uff0c\u504f\u822a\u89d2\u8868\u793a\u6211\u4eec\u5f80\u5de6\u548c\u5f80\u53f3\u770b\u7684\u7a0b\u5ea6\u3002 \u6eda\u8f6c\u89d2 \u4ee3\u8868\u6211\u4eec\u5982\u4f55 \u7ffb\u6eda \u6444\u50cf\u673a\uff0c\u901a\u5e38\u5728\u592a\u7a7a\u98de\u8239\u7684\u6444\u50cf\u673a\u4e2d\u4f7f\u7528\u3002\u6bcf\u4e2a\u6b27\u62c9\u89d2\u90fd\u6709\u4e00\u4e2a\u503c\u6765\u8868\u793a\uff0c\u628a\u4e09\u4e2a\u89d2\u7ed3\u5408\u8d77\u6765\u6211\u4eec\u5c31\u80fd\u591f\u8ba1\u7b973D\u7a7a\u95f4\u4e2d\u4efb\u4f55\u7684\u65cb\u8f6c\u5411\u91cf\u4e86\u3002 \u5bf9\u4e8e\u6211\u4eec\u7684\u6444\u50cf\u673a\u7cfb\u7edf\u6765\u8bf4\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u4fef\u4ef0\u89d2\u548c\u504f\u822a\u89d2\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u4f1a\u8ba8\u8bba\u6eda\u8f6c\u89d2\u3002\u7ed9\u5b9a\u4e00\u4e2a\u4fef\u4ef0\u89d2\u548c\u504f\u822a\u89d2\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u4eec\u8f6c\u6362\u4e3a\u4e00\u4e2a\u4ee3\u8868\u65b0\u7684\u65b9\u5411\u5411\u91cf\u76843D\u5411\u91cf\u3002\u4fef\u4ef0\u89d2\u548c\u504f\u822a\u89d2\u8f6c\u6362\u4e3a\u65b9\u5411\u5411\u91cf\u7684\u5904\u7406\u9700\u8981\u4e00\u4e9b\u4e09\u89d2\u5b66\u77e5\u8bc6\uff0c\u6211\u4eec\u5148\u4ece\u6700\u57fa\u672c\u7684\u60c5\u51b5\u5f00\u59cb\uff1a \u5982\u679c\u6211\u4eec\u628a\u659c\u8fb9\u8fb9\u957f\u5b9a\u4e49\u4e3a1\uff0c\u6211\u4eec\u5c31\u80fd\u77e5\u9053\u90bb\u8fb9\u7684\u957f\u5ea6\u662f \\cos \\ \\color{red}x/\\color{purple}h = \\cos \\ \\color{red}x/\\color{purple}1 = \\cos\\ \\color{red}x \uff0c\u5b83\u7684\u5bf9\u8fb9\u662f \\sin \\ \\color{green}y/\\color{purple}h = \\sin \\ \\color{green}y/\\color{purple}1 = \\sin\\ \\color{green}y \u3002\u8fd9\u6837\u6211\u4eec\u83b7\u5f97\u4e86\u80fd\u591f\u5f97\u5230x\u548cy\u65b9\u5411\u957f\u5ea6\u7684\u901a\u7528\u516c\u5f0f\uff0c\u5b83\u4eec\u53d6\u51b3\u4e8e\u6240\u7ed9\u7684\u89d2\u5ea6\u3002\u6211\u4eec\u4f7f\u7528\u5b83\u6765\u8ba1\u7b97\u65b9\u5411\u5411\u91cf\u7684\u5206\u91cf\uff1a \u8fd9\u4e2a\u4e09\u89d2\u5f62\u770b\u8d77\u6765\u548c\u524d\u9762\u7684\u4e09\u89d2\u5f62\u5f88\u50cf\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u60f3\u8c61\u81ea\u5df1\u5728xz\u5e73\u9762\u4e0a\uff0c\u770b\u5411y\u8f74\uff0c\u6211\u4eec\u53ef\u4ee5\u57fa\u4e8e\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u8ba1\u7b97\u6765\u8ba1\u7b97\u5b83\u7684\u957f\u5ea6/y\u65b9\u5411\u7684\u5f3a\u5ea6(Strength)\uff08\u6211\u4eec\u5f80\u4e0a\u6216\u5f80\u4e0b\u770b\u591a\u5c11\uff09\u3002\u4ece\u56fe\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u4fef\u4ef0\u89d2\u7684y\u503c\u7b49\u4e8e \\sin\\ \\theta \uff1a direction.y = sin(glm::radians(pitch)); // \u6ce8\u610f\u6211\u4eec\u5148\u628a\u89d2\u5ea6\u8f6c\u4e3a\u5f27\u5ea6 \u8fd9\u91cc\u6211\u4eec\u53ea\u66f4\u65b0\u4e86y\u503c\uff0c\u4ed4\u7ec6\u89c2\u5bdfx\u548cz\u5206\u91cf\u4e5f\u88ab\u5f71\u54cd\u4e86\u3002\u4ece\u4e09\u89d2\u5f62\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5b83\u4eec\u7684\u503c\u7b49\u4e8e\uff1a direction.x = cos(glm::radians(pitch)); direction.z = cos(glm::radians(pitch)); \u770b\u770b\u6211\u4eec\u662f\u5426\u80fd\u591f\u4e3a\u504f\u822a\u89d2\u627e\u5230\u9700\u8981\u7684\u5206\u91cf\uff1a \u5c31\u50cf\u4fef\u4ef0\u89d2\u7684\u4e09\u89d2\u5f62\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230x\u5206\u91cf\u53d6\u51b3\u4e8e cos(yaw) \u7684\u503c\uff0cz\u503c\u540c\u6837\u53d6\u51b3\u4e8e\u504f\u822a\u89d2\u7684\u6b63\u5f26\u503c\u3002\u628a\u8fd9\u4e2a\u52a0\u5230\u524d\u9762\u7684\u503c\u4e2d\uff0c\u4f1a\u5f97\u5230\u57fa\u4e8e\u4fef\u4ef0\u89d2\u548c\u504f\u822a\u89d2\u7684\u65b9\u5411\u5411\u91cf\uff1a direction.x = cos(glm::radians(pitch)) * cos(glm::radians(yaw)); // \u8bd1\u6ce8\uff1adirection\u4ee3\u8868\u6444\u50cf\u673a\u7684\u524d\u8f74(Front)\uff0c\u8fd9\u4e2a\u524d\u8f74\u662f\u548c\u672c\u6587\u7b2c\u4e00\u5e45\u56fe\u7247\u7684\u7b2c\u4e8c\u4e2a\u6444\u50cf\u673a\u7684\u65b9\u5411\u5411\u91cf\u662f\u76f8\u53cd\u7684 direction.y = sin(glm::radians(pitch)); direction.z = cos(glm::radians(pitch)) * sin(glm::radians(yaw)); \u8fd9\u6837\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u53ef\u4ee5\u628a\u4fef\u4ef0\u89d2\u548c\u504f\u822a\u89d2\u8f6c\u5316\u4e3a\u7528\u6765\u81ea\u7531\u65cb\u8f6c\u89c6\u89d2\u7684\u6444\u50cf\u673a\u76843\u7ef4\u65b9\u5411\u5411\u91cf\u4e86\u3002\u4f60\u53ef\u80fd\u4f1a\u5947\u602a\uff1a\u6211\u4eec\u600e\u4e48\u5f97\u5230\u4fef\u4ef0\u89d2\u548c\u504f\u822a\u89d2\uff1f","title":"\u6b27\u62c9\u89d2"},{"location":"01%20Getting%20started/09%20Camera/#_7","text":"\u504f\u822a\u89d2\u548c\u4fef\u4ef0\u89d2\u662f\u901a\u8fc7\u9f20\u6807\uff08\u6216\u624b\u67c4\uff09\u79fb\u52a8\u83b7\u5f97\u7684\uff0c\u6c34\u5e73\u7684\u79fb\u52a8\u5f71\u54cd\u504f\u822a\u89d2\uff0c\u7ad6\u76f4\u7684\u79fb\u52a8\u5f71\u54cd\u4fef\u4ef0\u89d2\u3002\u5b83\u7684\u539f\u7406\u5c31\u662f\uff0c\u50a8\u5b58\u4e0a\u4e00\u5e27\u9f20\u6807\u7684\u4f4d\u7f6e\uff0c\u5728\u5f53\u524d\u5e27\u4e2d\u6211\u4eec\u5f53\u524d\u8ba1\u7b97\u9f20\u6807\u4f4d\u7f6e\u4e0e\u4e0a\u4e00\u5e27\u7684\u4f4d\u7f6e\u76f8\u5dee\u591a\u5c11\u3002\u5982\u679c\u6c34\u5e73/\u7ad6\u76f4\u5dee\u522b\u8d8a\u5927\u90a3\u4e48\u4fef\u4ef0\u89d2\u6216\u504f\u822a\u89d2\u5c31\u6539\u53d8\u8d8a\u5927\uff0c\u4e5f\u5c31\u662f\u6444\u50cf\u673a\u9700\u8981\u79fb\u52a8\u66f4\u591a\u7684\u8ddd\u79bb\u3002 \u9996\u5148\u6211\u4eec\u8981\u544a\u8bc9GLFW\uff0c\u5b83\u5e94\u8be5\u9690\u85cf\u5149\u6807\uff0c\u5e76 \u6355\u6349 (Capture)\u5b83\u3002\u6355\u6349\u5149\u6807\u8868\u793a\u7684\u662f\uff0c\u5982\u679c\u7126\u70b9\u5728\u4f60\u7684\u7a0b\u5e8f\u4e0a\uff08\u8bd1\u6ce8\uff1a\u5373\u8868\u793a\u4f60\u6b63\u5728\u64cd\u4f5c\u8fd9\u4e2a\u7a0b\u5e8f\uff0cWindows\u4e2d\u62e5\u6709\u7126\u70b9\u7684\u7a0b\u5e8f\u6807\u9898\u680f\u901a\u5e38\u662f\u6709\u989c\u8272\u7684\u90a3\u4e2a\uff0c\u800c\u5931\u53bb\u7126\u70b9\u7684\u7a0b\u5e8f\u6807\u9898\u680f\u5219\u662f\u7070\u8272\u7684\uff09\uff0c\u5149\u6807\u5e94\u8be5\u505c\u7559\u5728\u7a97\u53e3\u4e2d\uff08\u9664\u975e\u7a0b\u5e8f\u5931\u53bb\u7126\u70b9\u6216\u8005\u9000\u51fa\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u7b80\u5355\u5730\u914d\u7f6e\u8c03\u7528\u6765\u5b8c\u6210\uff1a glfwSetInputMode(window, GLFW_CURSOR, GLFW_CURSOR_DISABLED); \u5728\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u4e4b\u540e\uff0c\u65e0\u8bba\u6211\u4eec\u600e\u4e48\u53bb\u79fb\u52a8\u9f20\u6807\uff0c\u5149\u6807\u90fd\u4e0d\u4f1a\u663e\u793a\u4e86\uff0c\u5b83\u4e5f\u4e0d\u4f1a\u79bb\u5f00\u7a97\u53e3\u3002\u5bf9\u4e8eFPS\u6444\u50cf\u673a\u7cfb\u7edf\u6765\u8bf4\u975e\u5e38\u5b8c\u7f8e\u3002 \u4e3a\u4e86\u8ba1\u7b97\u4fef\u4ef0\u89d2\u548c\u504f\u822a\u89d2\uff0c\u6211\u4eec\u9700\u8981\u8ba9GLFW\u76d1\u542c\u9f20\u6807\u79fb\u52a8\u4e8b\u4ef6\u3002\uff08\u548c\u952e\u76d8\u8f93\u5165\u76f8\u4f3c\uff09\u6211\u4eec\u4f1a\u7528\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u6765\u5b8c\u6210\uff0c\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a void mouse_callback(GLFWwindow* window, double xpos, double ypos); \u8fd9\u91cc\u7684 xpos \u548c ypos \u4ee3\u8868\u5f53\u524d\u9f20\u6807\u7684\u4f4d\u7f6e\u3002\u5f53\u6211\u4eec\u7528GLFW\u6ce8\u518c\u4e86\u56de\u8c03\u51fd\u6570\u4e4b\u540e\uff0c\u9f20\u6807\u4e00\u79fb\u52a8 mouse_callback \u51fd\u6570\u5c31\u4f1a\u88ab\u8c03\u7528\uff1a glfwSetCursorPosCallback(window, mouse_callback); \u5728\u5904\u7406FPS\u98ce\u683c\u6444\u50cf\u673a\u7684\u9f20\u6807\u8f93\u5165\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u6700\u7ec8\u83b7\u53d6\u65b9\u5411\u5411\u91cf\u4e4b\u524d\u505a\u4e0b\u9762\u8fd9\u51e0\u6b65\uff1a \u8ba1\u7b97\u9f20\u6807\u8ddd\u4e0a\u4e00\u5e27\u7684\u504f\u79fb\u91cf\u3002 \u628a\u504f\u79fb\u91cf\u6dfb\u52a0\u5230\u6444\u50cf\u673a\u7684\u4fef\u4ef0\u89d2\u548c\u504f\u822a\u89d2\u4e2d\u3002 \u5bf9\u504f\u822a\u89d2\u548c\u4fef\u4ef0\u89d2\u8fdb\u884c\u6700\u5927\u548c\u6700\u5c0f\u503c\u7684\u9650\u5236\u3002 \u8ba1\u7b97\u65b9\u5411\u5411\u91cf\u3002 \u7b2c\u4e00\u6b65\u662f\u8ba1\u7b97\u9f20\u6807\u81ea\u4e0a\u4e00\u5e27\u7684\u504f\u79fb\u91cf\u3002\u6211\u4eec\u5fc5\u987b\u5148\u5728\u7a0b\u5e8f\u4e2d\u50a8\u5b58\u4e0a\u4e00\u5e27\u7684\u9f20\u6807\u4f4d\u7f6e\uff0c\u6211\u4eec\u628a\u5b83\u7684\u521d\u59cb\u503c\u8bbe\u7f6e\u4e3a\u5c4f\u5e55\u7684\u4e2d\u5fc3\uff08\u5c4f\u5e55\u7684\u5c3a\u5bf8\u662f800x600\uff09\uff1a float lastX = 400, lastY = 300; \u7136\u540e\u5728\u9f20\u6807\u7684\u56de\u8c03\u51fd\u6570\u4e2d\u6211\u4eec\u8ba1\u7b97\u5f53\u524d\u5e27\u548c\u4e0a\u4e00\u5e27\u9f20\u6807\u4f4d\u7f6e\u7684\u504f\u79fb\u91cf\uff1a float xoffset = xpos - lastX; float yoffset = lastY - ypos; // \u6ce8\u610f\u8fd9\u91cc\u662f\u76f8\u53cd\u7684\uff0c\u56e0\u4e3ay\u5750\u6807\u662f\u4ece\u5e95\u90e8\u5f80\u9876\u90e8\u4f9d\u6b21\u589e\u5927\u7684 lastX = xpos; lastY = ypos; float sensitivity = 0.05f; xoffset *= sensitivity; yoffset *= sensitivity; \u6ce8\u610f\u6211\u4eec\u628a\u504f\u79fb\u91cf\u4e58\u4ee5\u4e86 sensitivity \uff08\u7075\u654f\u5ea6\uff09\u503c\u3002\u5982\u679c\u6211\u4eec\u5ffd\u7565\u8fd9\u4e2a\u503c\uff0c\u9f20\u6807\u79fb\u52a8\u5c31\u4f1a\u592a\u5927\u4e86\uff1b\u4f60\u53ef\u4ee5\u81ea\u5df1\u5b9e\u9a8c\u4e00\u4e0b\uff0c\u627e\u5230\u9002\u5408\u81ea\u5df1\u7684\u7075\u654f\u5ea6\u503c\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u628a\u504f\u79fb\u91cf\u52a0\u5230\u5168\u5c40\u53d8\u91cf pitch \u548c yaw \u4e0a\uff1a yaw += xoffset; pitch += yoffset; \u7b2c\u4e09\u6b65\uff0c\u6211\u4eec\u9700\u8981\u7ed9\u6444\u50cf\u673a\u6dfb\u52a0\u4e00\u4e9b\u9650\u5236\uff0c\u8fd9\u6837\u6444\u50cf\u673a\u5c31\u4e0d\u4f1a\u53d1\u751f\u5947\u602a\u7684\u79fb\u52a8\u4e86\uff08\u8fd9\u6837\u4e5f\u4f1a\u907f\u514d\u4e00\u4e9b\u5947\u602a\u7684\u95ee\u9898\uff09\u3002\u5bf9\u4e8e\u4fef\u4ef0\u89d2\uff0c\u8981\u8ba9\u7528\u6237\u4e0d\u80fd\u770b\u5411\u9ad8\u4e8e89\u5ea6\u7684\u5730\u65b9\uff08\u572890\u5ea6\u65f6\u89c6\u89d2\u4f1a\u53d1\u751f\u9006\u8f6c\uff0c\u6240\u4ee5\u6211\u4eec\u628a89\u5ea6\u4f5c\u4e3a\u6781\u9650\uff09\uff0c\u540c\u6837\u4e5f\u4e0d\u5141\u8bb8\u5c0f\u4e8e-89\u5ea6\u3002\u8fd9\u6837\u80fd\u591f\u4fdd\u8bc1\u7528\u6237\u53ea\u80fd\u770b\u5230\u5929\u7a7a\u6216\u811a\u4e0b\uff0c\u4f46\u662f\u4e0d\u80fd\u8d85\u8d8a\u8fd9\u4e2a\u9650\u5236\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u503c\u8d85\u8fc7\u9650\u5236\u7684\u65f6\u5019\u5c06\u5176\u6539\u4e3a\u6781\u9650\u503c\u6765\u5b9e\u73b0\uff1a if(pitch > 89.0f) pitch = 89.0f; if(pitch < -89.0f) pitch = -89.0f; \u6ce8\u610f\u6211\u4eec\u6ca1\u6709\u7ed9\u504f\u822a\u89d2\u8bbe\u7f6e\u9650\u5236\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u4e0d\u5e0c\u671b\u9650\u5236\u7528\u6237\u7684\u6c34\u5e73\u65cb\u8f6c\u3002\u5f53\u7136\uff0c\u7ed9\u504f\u822a\u89d2\u8bbe\u7f6e\u9650\u5236\u4e5f\u5f88\u5bb9\u6613\uff0c\u5982\u679c\u4f60\u613f\u610f\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0\u3002 \u7b2c\u56db\u4e5f\u662f\u6700\u540e\u4e00\u6b65\uff0c\u5c31\u662f\u901a\u8fc7\u4fef\u4ef0\u89d2\u548c\u504f\u822a\u89d2\u6765\u8ba1\u7b97\u4ee5\u5f97\u5230\u771f\u6b63\u7684\u65b9\u5411\u5411\u91cf\uff1a glm::vec3 front; front.x = cos(glm::radians(pitch)) * cos(glm::radians(yaw)); front.y = sin(glm::radians(pitch)); front.z = cos(glm::radians(pitch)) * sin(glm::radians(yaw)); cameraFront = glm::normalize(front); \u8ba1\u7b97\u51fa\u6765\u7684\u65b9\u5411\u5411\u91cf\u5c31\u4f1a\u5305\u542b\u6839\u636e\u9f20\u6807\u79fb\u52a8\u8ba1\u7b97\u51fa\u6765\u7684\u6240\u6709\u65cb\u8f6c\u4e86\u3002\u7531\u4e8e cameraFront \u5411\u91cf\u5df2\u7ecf\u5305\u542b\u5728GLM\u7684 lookAt \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u8fd9\u5c31\u6ca1\u4ec0\u4e48\u95ee\u9898\u4e86\u3002 \u5982\u679c\u4f60\u73b0\u5728\u8fd0\u884c\u4ee3\u7801\uff0c\u4f60\u4f1a\u53d1\u73b0\u5728\u7a97\u53e3\u7b2c\u4e00\u6b21\u83b7\u53d6\u7126\u70b9\u7684\u65f6\u5019\u6444\u50cf\u673a\u4f1a\u7a81\u7136\u8df3\u4e00\u4e0b\u3002\u8fd9\u4e2a\u95ee\u9898\u4ea7\u751f\u7684\u539f\u56e0\u662f\uff0c\u5728\u4f60\u7684\u9f20\u6807\u79fb\u52a8\u8fdb\u7a97\u53e3\u7684\u90a3\u4e00\u523b\uff0c\u9f20\u6807\u56de\u8c03\u51fd\u6570\u5c31\u4f1a\u88ab\u8c03\u7528\uff0c\u8fd9\u65f6\u5019\u7684 xpos \u548c ypos \u4f1a\u7b49\u4e8e\u9f20\u6807\u521a\u521a\u8fdb\u5165\u5c4f\u5e55\u7684\u90a3\u4e2a\u4f4d\u7f6e\u3002\u8fd9\u901a\u5e38\u662f\u4e00\u4e2a\u8ddd\u79bb\u5c4f\u5e55\u4e2d\u5fc3\u5f88\u8fdc\u7684\u5730\u65b9\uff0c\u56e0\u800c\u4ea7\u751f\u4e00\u4e2a\u5f88\u5927\u7684\u504f\u79fb\u91cf\uff0c\u6240\u4ee5\u5c31\u4f1a\u8df3\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u4f7f\u7528\u4e00\u4e2a bool \u53d8\u91cf\u68c0\u9a8c\u6211\u4eec\u662f\u5426\u662f\u7b2c\u4e00\u6b21\u83b7\u53d6\u9f20\u6807\u8f93\u5165\uff0c\u5982\u679c\u662f\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u628a\u9f20\u6807\u7684\u521d\u59cb\u4f4d\u7f6e\u66f4\u65b0\u4e3a xpos \u548c ypos \u503c\uff0c\u8fd9\u6837\u5c31\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1b\u63a5\u4e0b\u6765\u7684\u9f20\u6807\u79fb\u52a8\u5c31\u4f1a\u4f7f\u7528\u521a\u8fdb\u5165\u7684\u9f20\u6807\u4f4d\u7f6e\u5750\u6807\u6765\u8ba1\u7b97\u504f\u79fb\u91cf\u4e86\uff1a if(firstMouse) // \u8fd9\u4e2abool\u53d8\u91cf\u521d\u59cb\u65f6\u662f\u8bbe\u5b9a\u4e3atrue\u7684 { lastX = xpos; lastY = ypos; firstMouse = false; } \u6700\u540e\u7684\u4ee3\u7801\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff1a void mouse_callback(GLFWwindow* window, double xpos, double ypos) { if(firstMouse) { lastX = xpos; lastY = ypos; firstMouse = false; } float xoffset = xpos - lastX; float yoffset = lastY - ypos; lastX = xpos; lastY = ypos; float sensitivity = 0.05; xoffset *= sensitivity; yoffset *= sensitivity; yaw += xoffset; pitch += yoffset; if(pitch > 89.0f) pitch = 89.0f; if(pitch < -89.0f) pitch = -89.0f; glm::vec3 front; front.x = cos(glm::radians(yaw)) * cos(glm::radians(pitch)); front.y = sin(glm::radians(pitch)); front.z = sin(glm::radians(yaw)) * cos(glm::radians(pitch)); cameraFront = glm::normalize(front); } \u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u81ea\u7531\u5730\u57283D\u573a\u666f\u4e2d\u79fb\u52a8\u4e86\uff01","title":"\u9f20\u6807\u8f93\u5165"},{"location":"01%20Getting%20started/09%20Camera/#_8","text":"\u4f5c\u4e3a\u6211\u4eec\u6444\u50cf\u673a\u7cfb\u7edf\u7684\u4e00\u4e2a\u9644\u52a0\u5185\u5bb9\uff0c\u6211\u4eec\u8fd8\u4f1a\u6765\u5b9e\u73b0\u4e00\u4e2a\u7f29\u653e(Zoom)\u63a5\u53e3\u3002\u5728\u4e4b\u524d\u7684\u6559\u7a0b\u4e2d\u6211\u4eec\u8bf4 \u89c6\u91ce (Field of View)\u6216 fov \u5b9a\u4e49\u4e86\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u573a\u666f\u4e2d\u591a\u5927\u7684\u8303\u56f4\u3002\u5f53\u89c6\u91ce\u53d8\u5c0f\u65f6\uff0c\u573a\u666f\u6295\u5f71\u51fa\u6765\u7684\u7a7a\u95f4\u5c31\u4f1a\u51cf\u5c0f\uff0c\u4ea7\u751f\u653e\u5927(Zoom In)\u4e86\u7684\u611f\u89c9\u3002\u6211\u4eec\u4f1a\u4f7f\u7528\u9f20\u6807\u7684\u6eda\u8f6e\u6765\u653e\u5927\u3002\u4e0e\u9f20\u6807\u79fb\u52a8\u3001\u952e\u76d8\u8f93\u5165\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u9f20\u6807\u6eda\u8f6e\u7684\u56de\u8c03\u51fd\u6570\uff1a void scroll_callback(GLFWwindow* window, double xoffset, double yoffset) { if(fov >= 1.0f && fov <= 45.0f) fov -= yoffset; if(fov <= 1.0f) fov = 1.0f; if(fov >= 45.0f) fov = 45.0f; } \u5f53\u6eda\u52a8\u9f20\u6807\u6eda\u8f6e\u7684\u65f6\u5019\uff0c yoffset \u503c\u4ee3\u8868\u6211\u4eec\u7ad6\u76f4\u6eda\u52a8\u7684\u5927\u5c0f\u3002\u5f53 scroll_callback \u51fd\u6570\u88ab\u8c03\u7528\u540e\uff0c\u6211\u4eec\u6539\u53d8\u5168\u5c40\u53d8\u91cf fov \u53d8\u91cf\u7684\u5185\u5bb9\u3002\u56e0\u4e3a 45.0f \u662f\u9ed8\u8ba4\u7684\u89c6\u91ce\u503c\uff0c\u6211\u4eec\u5c06\u4f1a\u628a\u7f29\u653e\u7ea7\u522b(Zoom Level)\u9650\u5236\u5728 1.0f \u5230 45.0f \u3002 \u6211\u4eec\u73b0\u5728\u5728\u6bcf\u4e00\u5e27\u90fd\u5fc5\u987b\u628a\u900f\u89c6\u6295\u5f71\u77e9\u9635\u4e0a\u4f20\u5230GPU\uff0c\u4f46\u73b0\u5728\u4f7f\u7528 fov \u53d8\u91cf\u4f5c\u4e3a\u5b83\u7684\u89c6\u91ce\uff1a projection = glm::perspective(glm::radians(fov), 800.0f / 600.0f, 0.1f, 100.0f); \u6700\u540e\u4e0d\u8981\u5fd8\u8bb0\u6ce8\u518c\u9f20\u6807\u6eda\u8f6e\u7684\u56de\u8c03\u51fd\u6570\uff1a glfwSetScrollCallback(window, scroll_callback); \u73b0\u5728\uff0c\u6211\u4eec\u5c31\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u6444\u50cf\u673a\u7cfb\u7edf\u4e86\uff0c\u5b83\u80fd\u591f\u8ba9\u6211\u4eec\u57283D\u73af\u5883\u4e2d\u81ea\u7531\u79fb\u52a8\u3002 \u4f60\u53ef\u4ee5\u53bb\u81ea\u7531\u5730\u5b9e\u9a8c\uff0c\u5982\u679c\u9047\u5230\u56f0\u96be\uff0c\u53ef\u4ee5\u5bf9\u6bd4 \u6e90\u4ee3\u7801 \u3002 Important \u6ce8\u610f\uff0c\u4f7f\u7528\u6b27\u62c9\u89d2\u7684\u6444\u50cf\u673a\u7cfb\u7edf\u5e76\u4e0d\u5b8c\u7f8e\u3002\u6839\u636e\u4f60\u7684\u89c6\u89d2\u9650\u5236\u6216\u8005\u662f\u914d\u7f6e\uff0c\u4f60\u4ecd\u7136\u53ef\u80fd\u5f15\u5165 \u4e07\u5411\u8282\u6b7b\u9501 \u95ee\u9898\u3002\u6700\u597d\u7684\u6444\u50cf\u673a\u7cfb\u7edf\u662f\u4f7f\u7528\u56db\u5143\u6570(Quaternions)\u7684\uff0c\u4f46\u6211\u4eec\u5c06\u4f1a\u628a\u8fd9\u4e2a\u7559\u5230\u540e\u9762\u8ba8\u8bba\u3002\uff08\u8bd1\u6ce8\uff1a \u8fd9\u91cc \u53ef\u4ee5\u67e5\u770b\u56db\u5143\u6570\u6444\u50cf\u673a\u7684\u5b9e\u73b0\uff09","title":"\u7f29\u653e"},{"location":"01%20Getting%20started/09%20Camera/#_9","text":"\u63a5\u4e0b\u6765\u7684\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u4e00\u76f4\u4f7f\u7528\u4e00\u4e2a\u6444\u50cf\u673a\u6765\u6d4f\u89c8\u573a\u666f\uff0c\u4ece\u5404\u4e2a\u89d2\u5ea6\u89c2\u5bdf\u7ed3\u679c\u3002\u7136\u800c\uff0c\u7531\u4e8e\u4e00\u4e2a\u6444\u50cf\u673a\u4f1a\u5360\u7528\u6bcf\u7bc7\u6559\u7a0b\u5f88\u5927\u7684\u7bc7\u5e45\uff0c\u6211\u4eec\u5c06\u4f1a\u4ece\u7ec6\u8282\u62bd\u8c61\u51fa\u6765\uff0c\u521b\u5efa\u6211\u4eec\u81ea\u5df1\u7684\u6444\u50cf\u673a\u5bf9\u8c61\uff0c\u5b83\u4f1a\u5b8c\u6210\u5927\u591a\u6570\u7684\u5de5\u4f5c\uff0c\u800c\u4e14\u8fd8\u4f1a\u63d0\u4f9b\u4e00\u4e9b\u9644\u52a0\u7684\u529f\u80fd\u3002\u4e0e\u7740\u8272\u5668\u6559\u7a0b\u4e0d\u540c\uff0c\u6211\u4eec\u4e0d\u4f1a\u5e26\u4f60\u4e00\u6b65\u4e00\u6b65\u521b\u5efa\u6444\u50cf\u673a\u7c7b\uff0c\u6211\u4eec\u53ea\u4f1a\u63d0\u4f9b\u4f60\u4e00\u4efd\uff08\u6709\u5b8c\u6574\u6ce8\u91ca\u7684\uff09\u4ee3\u7801\uff0c\u5982\u679c\u4f60\u60f3\u77e5\u9053\u5b83\u7684\u5185\u90e8\u6784\u9020\u7684\u8bdd\u53ef\u4ee5\u81ea\u5df1\u53bb\u9605\u8bfb\u3002 \u548c\u7740\u8272\u5668\u5bf9\u8c61\u4e00\u6837\uff0c\u6211\u4eec\u628a\u6444\u50cf\u673a\u7c7b\u5199\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u5934\u6587\u4ef6\u4e2d\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5b83\uff0c\u4f60\u73b0\u5728\u5e94\u8be5\u80fd\u591f\u7406\u89e3\u6240\u6709\u7684\u4ee3\u7801\u4e86\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u81f3\u5c11\u770b\u4e00\u770b\u8fd9\u4e2a\u7c7b\uff0c\u770b\u770b\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u81ea\u5df1\u7684\u6444\u50cf\u673a\u7c7b\u3002 Attention \u6211\u4eec\u4ecb\u7ecd\u7684\u6444\u50cf\u673a\u7cfb\u7edf\u662f\u4e00\u4e2aFPS\u98ce\u683c\u7684\u6444\u50cf\u673a\uff0c\u5b83\u80fd\u591f\u6ee1\u8db3\u5927\u591a\u6570\u60c5\u51b5\u9700\u8981\uff0c\u800c\u4e14\u4e0e\u6b27\u62c9\u89d2\u517c\u5bb9\uff0c\u4f46\u662f\u5728\u521b\u5efa\u4e0d\u540c\u7684\u6444\u50cf\u673a\u7cfb\u7edf\uff0c\u6bd4\u5982\u98de\u884c\u6a21\u62df\u6444\u50cf\u673a\uff0c\u65f6\u5c31\u8981\u5f53\u5fc3\u3002\u6bcf\u4e2a\u6444\u50cf\u673a\u7cfb\u7edf\u90fd\u6709\u81ea\u5df1\u7684\u4f18\u70b9\u548c\u4e0d\u8db3\uff0c\u6240\u4ee5\u786e\u4fdd\u5bf9\u5b83\u4eec\u8fdb\u884c\u4e86\u8be6\u7ec6\u7814\u7a76\u3002\u6bd4\u5982\uff0c\u8fd9\u4e2aFPS\u6444\u50cf\u673a\u4e0d\u5141\u8bb8\u4fef\u4ef0\u89d2\u5927\u4e8e90\u5ea6\uff0c\u800c\u4e14\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a\u56fa\u5b9a\u7684\u4e0a\u5411\u91cf(0, 1, 0)\uff0c\u8fd9\u5728\u9700\u8981\u8003\u8651\u6eda\u8f6c\u89d2\u7684\u65f6\u5019\u5c31\u4e0d\u80fd\u7528\u4e86\u3002 \u4f7f\u7528\u65b0\u6444\u50cf\u673a\u5bf9\u8c61\uff0c\u66f4\u65b0\u540e\u7248\u672c\u7684\u6e90\u7801\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u3002","title":"\u6444\u50cf\u673a\u7c7b"},{"location":"01%20Getting%20started/09%20Camera/#_10","text":"\u770b\u770b\u4f60\u662f\u5426\u80fd\u591f\u4fee\u6539\u6444\u50cf\u673a\u7c7b\uff0c\u4f7f\u5f97\u5176\u80fd\u591f\u53d8\u6210\u4e00\u4e2a \u771f\u6b63\u7684 FPS\u6444\u50cf\u673a\uff08\u4e5f\u5c31\u662f\u8bf4\u4e0d\u80fd\u591f\u968f\u610f\u98de\u884c\uff09\uff1b\u4f60\u53ea\u80fd\u591f\u5446\u5728xz\u5e73\u9762\u4e0a\uff1a \u53c2\u8003\u89e3\u7b54 \u8bd5\u7740\u521b\u5efa\u4f60\u81ea\u5df1\u7684LookAt\u51fd\u6570\uff0c\u5176\u4e2d\u4f60\u9700\u8981\u624b\u52a8\u521b\u5efa\u4e00\u4e2a\u6211\u4eec\u5728\u4e00\u5f00\u59cb\u8ba8\u8bba\u7684\u89c2\u5bdf\u77e9\u9635\u3002\u7528\u4f60\u7684\u51fd\u6570\u5b9e\u73b0\u6765\u66ff\u6362GLM\u7684LookAt\u51fd\u6570\uff0c\u770b\u770b\u5b83\u662f\u5426\u8fd8\u80fd\u4e00\u6837\u5730\u5de5\u4f5c\uff1a \u53c2\u8003\u89e3\u7b54","title":"\u7ec3\u4e60"},{"location":"01%20Getting%20started/10%20Review/","text":"\u590d\u4e60 \u539f\u6587 Review \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 Geequlim\uff0c orbitgw \u606d\u559c\u60a8\u5b8c\u6210\u4e86\u672c\u7ae0\u7684\u5b66\u4e60\uff0c\u81f3\u6b64\u4e3a\u6b62\u4f60\u5e94\u8be5\u80fd\u591f\u521b\u5efa\u4e00\u4e2a\u7a97\u53e3\uff0c\u521b\u5efa\u5e76\u4e14\u7f16\u8bd1\u7740\u8272\u5668\uff0c\u901a\u8fc7\u7f13\u51b2\u5bf9\u8c61\u6216\u8005uniform\u53d1\u9001\u9876\u70b9\u6570\u636e\uff0c\u7ed8\u5236\u7269\u4f53\uff0c\u4f7f\u7528\u7eb9\u7406\uff0c\u7406\u89e3\u5411\u91cf\u548c\u77e9\u9635\uff0c\u5e76\u4e14\u53ef\u4ee5\u7efc\u5408\u4e0a\u8ff0\u77e5\u8bc6\u521b\u5efa\u4e00\u4e2a3D\u573a\u666f\u5e76\u53ef\u4ee5\u901a\u8fc7\u6444\u50cf\u673a\u6765\u79fb\u52a8\u3002 \u6700\u540e\u8fd9\u51e0\u7ae0\u6211\u4eec\u5b66\u4e86\u592a\u591a\u7684\u4e1c\u897f\u4e86\u3002\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u5728\u6559\u7a0b\u7684\u57fa\u7840\u4e0a\u6539\u52a8\u7a0b\u5e8f\uff0c\u6216\u8005\u5b9e\u9a8c\u4e00\u4e0b\uff0c\u6709\u4e00\u70b9\u81ea\u5df1\u7684\u60f3\u6cd5\u5e76\u89e3\u51b3\u95ee\u9898\u3002\u4e00\u65e6\u4f60\u8ba4\u4e3a\u4f60\u771f\u6b63\u719f\u6089\u4e86\u6211\u4eec\u8ba8\u8bba\u7684\u6240\u6709\u7684\u4e1c\u897f\uff0c\u4f60\u5c31\u53ef\u4ee5\u8fdb\u884c \u4e0b\u4e00\u8282 \u7684\u5b66\u4e60\u3002 \u8bcd\u6c47\u8868 OpenGL \uff1a \u4e00\u4e2a\u5b9a\u4e49\u4e86\u51fd\u6570\u5e03\u5c40\u548c\u8f93\u51fa\u7684\u56fe\u5f62API\u7684\u6b63\u5f0f\u89c4\u8303\u3002 GLAD \uff1a \u4e00\u4e2a\u6269\u5c55\u52a0\u8f7d\u5e93\uff0c\u7528\u6765\u4e3a\u6211\u4eec\u52a0\u8f7d\u5e76\u8bbe\u5b9a\u6240\u6709OpenGL\u51fd\u6570\u6307\u9488\uff0c\u4ece\u800c\u8ba9\u6211\u4eec\u80fd\u591f\u4f7f\u7528\u6240\u6709\uff08\u73b0\u4ee3\uff09OpenGL\u51fd\u6570\u3002 \u89c6\u53e3(Viewport) \uff1a \u6211\u4eec\u9700\u8981\u6e32\u67d3\u7684\u7a97\u53e3\u3002 \u56fe\u5f62\u7ba1\u7ebf(Graphics Pipeline) \uff1a \u4e00\u4e2a\u9876\u70b9\u5728\u5448\u73b0\u4e3a\u50cf\u7d20\u4e4b\u524d\u7ecf\u8fc7\u7684\u5168\u90e8\u8fc7\u7a0b\u3002 \u7740\u8272\u5668(Shader) \uff1a \u4e00\u4e2a\u8fd0\u884c\u5728\u663e\u5361\u4e0a\u7684\u5c0f\u578b\u7a0b\u5e8f\u3002\u5f88\u591a\u9636\u6bb5\u7684\u56fe\u5f62\u7ba1\u9053\u90fd\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u7740\u8272\u5668\u6765\u4ee3\u66ff\u539f\u6709\u7684\u529f\u80fd\u3002 \u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807(Normalized Device Coordinates, NDC) \uff1a \u9876\u70b9\u5728\u901a\u8fc7\u5728\u526a\u88c1\u5750\u6807\u7cfb\u4e2d\u526a\u88c1\u4e0e\u900f\u89c6\u9664\u6cd5\u540e\u6700\u7ec8\u5448\u73b0\u5728\u7684\u5750\u6807\u7cfb\u3002\u6240\u6709\u4f4d\u7f6e\u5728NDC\u4e0b-1.0\u52301.0\u7684\u9876\u70b9\u5c06\u4e0d\u4f1a\u88ab\u4e22\u5f03\u5e76\u4e14\u53ef\u89c1\u3002 \u9876\u70b9\u7f13\u51b2\u5bf9\u8c61(Vertex Buffer Object) \uff1a \u4e00\u4e2a\u8c03\u7528\u663e\u5b58\u5e76\u5b58\u50a8\u6240\u6709\u9876\u70b9\u6570\u636e\u4f9b\u663e\u5361\u4f7f\u7528\u7684\u7f13\u51b2\u5bf9\u8c61\u3002 \u9876\u70b9\u6570\u7ec4\u5bf9\u8c61(Vertex Array Object) \uff1a \u5b58\u50a8\u7f13\u51b2\u533a\u548c\u9876\u70b9\u5c5e\u6027\u72b6\u6001\u3002 \u5143\u7d20\u7f13\u51b2\u5bf9\u8c61(Element Buffer Object\uff0cEBO)\uff0c\u4e5f\u53eb\u7d22\u5f15\u7f13\u51b2\u5bf9\u8c61(Index Buffer Object\uff0cIBO) \uff1a \u4e00\u4e2a\u5b58\u50a8\u5143\u7d20\u7d22\u5f15\u4f9b\u7d22\u5f15\u5316\u7ed8\u5236\u4f7f\u7528\u7684\u7f13\u51b2\u5bf9\u8c61\u3002 Uniform \uff1a \u4e00\u4e2a\u7279\u6b8a\u7c7b\u578b\u7684GLSL\u53d8\u91cf\u3002\u5b83\u662f\u5168\u5c40\u7684\uff08\u5728\u4e00\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\u4e2d\u6bcf\u4e00\u4e2a\u7740\u8272\u5668\u90fd\u80fd\u591f\u8bbf\u95eeuniform\u53d8\u91cf\uff09\uff0c\u5e76\u4e14\u53ea\u9700\u8981\u88ab\u8bbe\u5b9a\u4e00\u6b21\u3002 \u7eb9\u7406(Texture) \uff1a \u4e00\u79cd\u5305\u88f9\u7740\u7269\u4f53\u7684\u7279\u6b8a\u7c7b\u578b\u56fe\u50cf\uff0c\u7ed9\u7269\u4f53\u7cbe\u7ec6\u7684\u89c6\u89c9\u6548\u679c\u3002 \u7eb9\u7406\u73af\u7ed5(Texture Wrapping) \uff1a \u5b9a\u4e49\u4e86\u4e00\u79cd\u5f53\u7eb9\u7406\u9876\u70b9\u8d85\u51fa\u8303\u56f4(0, 1)\u65f6\u6307\u5b9aOpenGL\u5982\u4f55\u91c7\u6837\u7eb9\u7406\u7684\u6a21\u5f0f\u3002 \u7eb9\u7406\u8fc7\u6ee4(Texture Filtering) \uff1a \u5b9a\u4e49\u4e86\u4e00\u79cd\u5f53\u6709\u591a\u79cd\u7eb9\u7d20\u9009\u62e9\u65f6\u6307\u5b9aOpenGL\u5982\u4f55\u91c7\u6837\u7eb9\u7406\u7684\u6a21\u5f0f\u3002\u8fd9\u901a\u5e38\u5728\u7eb9\u7406\u88ab\u653e\u5927\u60c5\u51b5\u4e0b\u53d1\u751f\u3002 \u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406(Mipmaps) \uff1a \u88ab\u5b58\u50a8\u7684\u6750\u8d28\u7684\u4e00\u4e9b\u7f29\u5c0f\u7248\u672c\uff0c\u6839\u636e\u8ddd\u89c2\u5bdf\u8005\u7684\u8ddd\u79bb\u4f1a\u4f7f\u7528\u6750\u8d28\u7684\u5408\u9002\u5927\u5c0f\u3002 stb_image.h \uff1a \u56fe\u50cf\u52a0\u8f7d\u5e93\u3002 \u7eb9\u7406\u5355\u5143(Texture Units) \uff1a \u901a\u8fc7\u7ed1\u5b9a\u7eb9\u7406\u5230\u4e0d\u540c\u7eb9\u7406\u5355\u5143\u4ece\u800c\u5141\u8bb8\u591a\u4e2a\u7eb9\u7406\u5728\u540c\u4e00\u5bf9\u8c61\u4e0a\u6e32\u67d3\u3002 \u5411\u91cf(Vector) \uff1a \u4e00\u4e2a\u5b9a\u4e49\u4e86\u5728\u7a7a\u95f4\u4e2d\u65b9\u5411\u548c/\u6216\u4f4d\u7f6e\u7684\u6570\u5b66\u5b9e\u4f53\u3002 \u77e9\u9635(Matrix) \uff1a \u4e00\u4e2a\u77e9\u5f62\u9635\u5217\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u3002 GLM \uff1a \u4e00\u4e2a\u4e3aOpenGL\u6253\u9020\u7684\u6570\u5b66\u5e93\u3002 \u5c40\u90e8\u7a7a\u95f4(Local Space) \uff1a \u4e00\u4e2a\u7269\u4f53\u7684\u521d\u59cb\u7a7a\u95f4\u3002\u6240\u6709\u7684\u5750\u6807\u90fd\u662f\u76f8\u5bf9\u4e8e\u7269\u4f53\u7684\u539f\u70b9\u7684\u3002 \u4e16\u754c\u7a7a\u95f4(World Space) \uff1a \u6240\u6709\u7684\u5750\u6807\u90fd\u76f8\u5bf9\u4e8e\u5168\u5c40\u539f\u70b9\u3002 \u89c2\u5bdf\u7a7a\u95f4(View Space) \uff1a \u6240\u6709\u7684\u5750\u6807\u90fd\u662f\u4ece\u6444\u50cf\u673a\u7684\u89c6\u89d2\u89c2\u5bdf\u7684\u3002 \u88c1\u526a\u7a7a\u95f4(Clip Space) \uff1a \u6240\u6709\u7684\u5750\u6807\u90fd\u662f\u4ece\u6444\u50cf\u673a\u89c6\u89d2\u89c2\u5bdf\u7684\uff0c\u4f46\u662f\u8be5\u7a7a\u95f4\u5e94\u7528\u4e86\u6295\u5f71\u3002\u8fd9\u4e2a\u7a7a\u95f4\u5e94\u8be5\u662f\u4e00\u4e2a\u9876\u70b9\u5750\u6807\u6700\u7ec8\u7684\u7a7a\u95f4\uff0c\u4f5c\u4e3a\u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u51fa\u3002OpenGL\u8d1f\u8d23\u5904\u7406\u5269\u4e0b\u7684\u4e8b\u60c5\uff08\u88c1\u526a/\u900f\u89c6\u9664\u6cd5\uff09\u3002 \u5c4f\u5e55\u7a7a\u95f4(Screen Space) \uff1a \u6240\u6709\u7684\u5750\u6807\u90fd\u7531\u5c4f\u5e55\u89c6\u89d2\u6765\u89c2\u5bdf\u3002\u5750\u6807\u7684\u8303\u56f4\u662f\u4ece0\u5230\u5c4f\u5e55\u7684\u5bbd/\u9ad8\u3002 LookAt\u77e9\u9635 \uff1a \u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u89c2\u5bdf\u77e9\u9635\uff0c\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a\u5750\u6807\u7cfb\uff0c\u5176\u4e2d\u6240\u6709\u5750\u6807\u90fd\u6839\u636e\u4ece\u4e00\u4e2a\u4f4d\u7f6e\u6b63\u5728\u89c2\u5bdf\u76ee\u6807\u7684\u7528\u6237\u65cb\u8f6c\u6216\u8005\u5e73\u79fb\u3002 \u6b27\u62c9\u89d2(Euler Angles) \uff1a \u88ab\u5b9a\u4e49\u4e3a\u504f\u822a\u89d2(Yaw)\uff0c\u4fef\u4ef0\u89d2(Pitch)\uff0c\u548c\u6eda\u8f6c\u89d2(Roll)\u4ece\u800c\u5141\u8bb8\u6211\u4eec\u901a\u8fc7\u8fd9\u4e09\u4e2a\u503c\u6784\u9020\u4efb\u4f553D\u65b9\u5411\u3002","title":"\u590d\u4e60"},{"location":"01%20Getting%20started/10%20Review/#_1","text":"\u539f\u6587 Review \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 Geequlim\uff0c orbitgw \u606d\u559c\u60a8\u5b8c\u6210\u4e86\u672c\u7ae0\u7684\u5b66\u4e60\uff0c\u81f3\u6b64\u4e3a\u6b62\u4f60\u5e94\u8be5\u80fd\u591f\u521b\u5efa\u4e00\u4e2a\u7a97\u53e3\uff0c\u521b\u5efa\u5e76\u4e14\u7f16\u8bd1\u7740\u8272\u5668\uff0c\u901a\u8fc7\u7f13\u51b2\u5bf9\u8c61\u6216\u8005uniform\u53d1\u9001\u9876\u70b9\u6570\u636e\uff0c\u7ed8\u5236\u7269\u4f53\uff0c\u4f7f\u7528\u7eb9\u7406\uff0c\u7406\u89e3\u5411\u91cf\u548c\u77e9\u9635\uff0c\u5e76\u4e14\u53ef\u4ee5\u7efc\u5408\u4e0a\u8ff0\u77e5\u8bc6\u521b\u5efa\u4e00\u4e2a3D\u573a\u666f\u5e76\u53ef\u4ee5\u901a\u8fc7\u6444\u50cf\u673a\u6765\u79fb\u52a8\u3002 \u6700\u540e\u8fd9\u51e0\u7ae0\u6211\u4eec\u5b66\u4e86\u592a\u591a\u7684\u4e1c\u897f\u4e86\u3002\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u5728\u6559\u7a0b\u7684\u57fa\u7840\u4e0a\u6539\u52a8\u7a0b\u5e8f\uff0c\u6216\u8005\u5b9e\u9a8c\u4e00\u4e0b\uff0c\u6709\u4e00\u70b9\u81ea\u5df1\u7684\u60f3\u6cd5\u5e76\u89e3\u51b3\u95ee\u9898\u3002\u4e00\u65e6\u4f60\u8ba4\u4e3a\u4f60\u771f\u6b63\u719f\u6089\u4e86\u6211\u4eec\u8ba8\u8bba\u7684\u6240\u6709\u7684\u4e1c\u897f\uff0c\u4f60\u5c31\u53ef\u4ee5\u8fdb\u884c \u4e0b\u4e00\u8282 \u7684\u5b66\u4e60\u3002","title":"\u590d\u4e60"},{"location":"01%20Getting%20started/10%20Review/#_2","text":"OpenGL \uff1a \u4e00\u4e2a\u5b9a\u4e49\u4e86\u51fd\u6570\u5e03\u5c40\u548c\u8f93\u51fa\u7684\u56fe\u5f62API\u7684\u6b63\u5f0f\u89c4\u8303\u3002 GLAD \uff1a \u4e00\u4e2a\u6269\u5c55\u52a0\u8f7d\u5e93\uff0c\u7528\u6765\u4e3a\u6211\u4eec\u52a0\u8f7d\u5e76\u8bbe\u5b9a\u6240\u6709OpenGL\u51fd\u6570\u6307\u9488\uff0c\u4ece\u800c\u8ba9\u6211\u4eec\u80fd\u591f\u4f7f\u7528\u6240\u6709\uff08\u73b0\u4ee3\uff09OpenGL\u51fd\u6570\u3002 \u89c6\u53e3(Viewport) \uff1a \u6211\u4eec\u9700\u8981\u6e32\u67d3\u7684\u7a97\u53e3\u3002 \u56fe\u5f62\u7ba1\u7ebf(Graphics Pipeline) \uff1a \u4e00\u4e2a\u9876\u70b9\u5728\u5448\u73b0\u4e3a\u50cf\u7d20\u4e4b\u524d\u7ecf\u8fc7\u7684\u5168\u90e8\u8fc7\u7a0b\u3002 \u7740\u8272\u5668(Shader) \uff1a \u4e00\u4e2a\u8fd0\u884c\u5728\u663e\u5361\u4e0a\u7684\u5c0f\u578b\u7a0b\u5e8f\u3002\u5f88\u591a\u9636\u6bb5\u7684\u56fe\u5f62\u7ba1\u9053\u90fd\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u7740\u8272\u5668\u6765\u4ee3\u66ff\u539f\u6709\u7684\u529f\u80fd\u3002 \u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807(Normalized Device Coordinates, NDC) \uff1a \u9876\u70b9\u5728\u901a\u8fc7\u5728\u526a\u88c1\u5750\u6807\u7cfb\u4e2d\u526a\u88c1\u4e0e\u900f\u89c6\u9664\u6cd5\u540e\u6700\u7ec8\u5448\u73b0\u5728\u7684\u5750\u6807\u7cfb\u3002\u6240\u6709\u4f4d\u7f6e\u5728NDC\u4e0b-1.0\u52301.0\u7684\u9876\u70b9\u5c06\u4e0d\u4f1a\u88ab\u4e22\u5f03\u5e76\u4e14\u53ef\u89c1\u3002 \u9876\u70b9\u7f13\u51b2\u5bf9\u8c61(Vertex Buffer Object) \uff1a \u4e00\u4e2a\u8c03\u7528\u663e\u5b58\u5e76\u5b58\u50a8\u6240\u6709\u9876\u70b9\u6570\u636e\u4f9b\u663e\u5361\u4f7f\u7528\u7684\u7f13\u51b2\u5bf9\u8c61\u3002 \u9876\u70b9\u6570\u7ec4\u5bf9\u8c61(Vertex Array Object) \uff1a \u5b58\u50a8\u7f13\u51b2\u533a\u548c\u9876\u70b9\u5c5e\u6027\u72b6\u6001\u3002 \u5143\u7d20\u7f13\u51b2\u5bf9\u8c61(Element Buffer Object\uff0cEBO)\uff0c\u4e5f\u53eb\u7d22\u5f15\u7f13\u51b2\u5bf9\u8c61(Index Buffer Object\uff0cIBO) \uff1a \u4e00\u4e2a\u5b58\u50a8\u5143\u7d20\u7d22\u5f15\u4f9b\u7d22\u5f15\u5316\u7ed8\u5236\u4f7f\u7528\u7684\u7f13\u51b2\u5bf9\u8c61\u3002 Uniform \uff1a \u4e00\u4e2a\u7279\u6b8a\u7c7b\u578b\u7684GLSL\u53d8\u91cf\u3002\u5b83\u662f\u5168\u5c40\u7684\uff08\u5728\u4e00\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\u4e2d\u6bcf\u4e00\u4e2a\u7740\u8272\u5668\u90fd\u80fd\u591f\u8bbf\u95eeuniform\u53d8\u91cf\uff09\uff0c\u5e76\u4e14\u53ea\u9700\u8981\u88ab\u8bbe\u5b9a\u4e00\u6b21\u3002 \u7eb9\u7406(Texture) \uff1a \u4e00\u79cd\u5305\u88f9\u7740\u7269\u4f53\u7684\u7279\u6b8a\u7c7b\u578b\u56fe\u50cf\uff0c\u7ed9\u7269\u4f53\u7cbe\u7ec6\u7684\u89c6\u89c9\u6548\u679c\u3002 \u7eb9\u7406\u73af\u7ed5(Texture Wrapping) \uff1a \u5b9a\u4e49\u4e86\u4e00\u79cd\u5f53\u7eb9\u7406\u9876\u70b9\u8d85\u51fa\u8303\u56f4(0, 1)\u65f6\u6307\u5b9aOpenGL\u5982\u4f55\u91c7\u6837\u7eb9\u7406\u7684\u6a21\u5f0f\u3002 \u7eb9\u7406\u8fc7\u6ee4(Texture Filtering) \uff1a \u5b9a\u4e49\u4e86\u4e00\u79cd\u5f53\u6709\u591a\u79cd\u7eb9\u7d20\u9009\u62e9\u65f6\u6307\u5b9aOpenGL\u5982\u4f55\u91c7\u6837\u7eb9\u7406\u7684\u6a21\u5f0f\u3002\u8fd9\u901a\u5e38\u5728\u7eb9\u7406\u88ab\u653e\u5927\u60c5\u51b5\u4e0b\u53d1\u751f\u3002 \u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406(Mipmaps) \uff1a \u88ab\u5b58\u50a8\u7684\u6750\u8d28\u7684\u4e00\u4e9b\u7f29\u5c0f\u7248\u672c\uff0c\u6839\u636e\u8ddd\u89c2\u5bdf\u8005\u7684\u8ddd\u79bb\u4f1a\u4f7f\u7528\u6750\u8d28\u7684\u5408\u9002\u5927\u5c0f\u3002 stb_image.h \uff1a \u56fe\u50cf\u52a0\u8f7d\u5e93\u3002 \u7eb9\u7406\u5355\u5143(Texture Units) \uff1a \u901a\u8fc7\u7ed1\u5b9a\u7eb9\u7406\u5230\u4e0d\u540c\u7eb9\u7406\u5355\u5143\u4ece\u800c\u5141\u8bb8\u591a\u4e2a\u7eb9\u7406\u5728\u540c\u4e00\u5bf9\u8c61\u4e0a\u6e32\u67d3\u3002 \u5411\u91cf(Vector) \uff1a \u4e00\u4e2a\u5b9a\u4e49\u4e86\u5728\u7a7a\u95f4\u4e2d\u65b9\u5411\u548c/\u6216\u4f4d\u7f6e\u7684\u6570\u5b66\u5b9e\u4f53\u3002 \u77e9\u9635(Matrix) \uff1a \u4e00\u4e2a\u77e9\u5f62\u9635\u5217\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u3002 GLM \uff1a \u4e00\u4e2a\u4e3aOpenGL\u6253\u9020\u7684\u6570\u5b66\u5e93\u3002 \u5c40\u90e8\u7a7a\u95f4(Local Space) \uff1a \u4e00\u4e2a\u7269\u4f53\u7684\u521d\u59cb\u7a7a\u95f4\u3002\u6240\u6709\u7684\u5750\u6807\u90fd\u662f\u76f8\u5bf9\u4e8e\u7269\u4f53\u7684\u539f\u70b9\u7684\u3002 \u4e16\u754c\u7a7a\u95f4(World Space) \uff1a \u6240\u6709\u7684\u5750\u6807\u90fd\u76f8\u5bf9\u4e8e\u5168\u5c40\u539f\u70b9\u3002 \u89c2\u5bdf\u7a7a\u95f4(View Space) \uff1a \u6240\u6709\u7684\u5750\u6807\u90fd\u662f\u4ece\u6444\u50cf\u673a\u7684\u89c6\u89d2\u89c2\u5bdf\u7684\u3002 \u88c1\u526a\u7a7a\u95f4(Clip Space) \uff1a \u6240\u6709\u7684\u5750\u6807\u90fd\u662f\u4ece\u6444\u50cf\u673a\u89c6\u89d2\u89c2\u5bdf\u7684\uff0c\u4f46\u662f\u8be5\u7a7a\u95f4\u5e94\u7528\u4e86\u6295\u5f71\u3002\u8fd9\u4e2a\u7a7a\u95f4\u5e94\u8be5\u662f\u4e00\u4e2a\u9876\u70b9\u5750\u6807\u6700\u7ec8\u7684\u7a7a\u95f4\uff0c\u4f5c\u4e3a\u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u51fa\u3002OpenGL\u8d1f\u8d23\u5904\u7406\u5269\u4e0b\u7684\u4e8b\u60c5\uff08\u88c1\u526a/\u900f\u89c6\u9664\u6cd5\uff09\u3002 \u5c4f\u5e55\u7a7a\u95f4(Screen Space) \uff1a \u6240\u6709\u7684\u5750\u6807\u90fd\u7531\u5c4f\u5e55\u89c6\u89d2\u6765\u89c2\u5bdf\u3002\u5750\u6807\u7684\u8303\u56f4\u662f\u4ece0\u5230\u5c4f\u5e55\u7684\u5bbd/\u9ad8\u3002 LookAt\u77e9\u9635 \uff1a \u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u89c2\u5bdf\u77e9\u9635\uff0c\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a\u5750\u6807\u7cfb\uff0c\u5176\u4e2d\u6240\u6709\u5750\u6807\u90fd\u6839\u636e\u4ece\u4e00\u4e2a\u4f4d\u7f6e\u6b63\u5728\u89c2\u5bdf\u76ee\u6807\u7684\u7528\u6237\u65cb\u8f6c\u6216\u8005\u5e73\u79fb\u3002 \u6b27\u62c9\u89d2(Euler Angles) \uff1a \u88ab\u5b9a\u4e49\u4e3a\u504f\u822a\u89d2(Yaw)\uff0c\u4fef\u4ef0\u89d2(Pitch)\uff0c\u548c\u6eda\u8f6c\u89d2(Roll)\u4ece\u800c\u5141\u8bb8\u6211\u4eec\u901a\u8fc7\u8fd9\u4e09\u4e2a\u503c\u6784\u9020\u4efb\u4f553D\u65b9\u5411\u3002","title":"\u8bcd\u6c47\u8868"},{"location":"02%20Lighting/01%20Colors/","text":"\u989c\u8272 \u539f\u6587 Colors \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Geequlim , Krasjet \u6821\u5bf9 AoZhang \u5728\u524d\u9762\u7684\u6559\u7a0b\u4e2d\u6211\u4eec\u5df2\u7ecf\u7b80\u8981\u63d0\u5230\u8fc7\u8be5\u5982\u4f55\u5728OpenGL\u4e2d\u4f7f\u7528\u989c\u8272(Color)\uff0c\u4f46\u662f\u6211\u4eec\u81f3\u4eca\u6240\u63a5\u89e6\u5230\u7684\u90fd\u662f\u5f88\u6d45\u5c42\u7684\u77e5\u8bc6\u3002\u672c\u8282\u6211\u4eec\u5c06\u4f1a\u66f4\u6df1\u5165\u5730\u8ba8\u8bba\u4ec0\u4e48\u662f\u989c\u8272\uff0c\u5e76\u4e14\u8fd8\u4f1a\u4e3a\u63a5\u4e0b\u6765\u7684\u5149\u7167(Lighting)\u6559\u7a0b\u521b\u5efa\u4e00\u4e2a\u573a\u666f\u3002 \u73b0\u5b9e\u4e16\u754c\u4e2d\u6709\u65e0\u6570\u79cd\u989c\u8272\uff0c\u6bcf\u4e00\u4e2a\u7269\u4f53\u90fd\u6709\u5b83\u4eec\u81ea\u5df1\u7684\u989c\u8272\u3002\u6211\u4eec\u9700\u8981\u4f7f\u7528\uff08\u6709\u9650\u7684\uff09\u6570\u503c\u6765\u6a21\u62df\u771f\u5b9e\u4e16\u754c\u4e2d\uff08\u65e0\u9650\uff09\u7684\u989c\u8272\uff0c\u6240\u4ee5\u5e76\u4e0d\u662f\u6240\u6709\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u989c\u8272\u90fd\u53ef\u4ee5\u7528\u6570\u503c\u6765\u8868\u793a\u7684\u3002\u7136\u800c\u6211\u4eec\u4ecd\u80fd\u901a\u8fc7\u6570\u503c\u6765\u8868\u73b0\u51fa\u975e\u5e38\u591a\u7684\u989c\u8272\uff0c\u751a\u81f3\u4f60\u53ef\u80fd\u90fd\u4e0d\u4f1a\u6ce8\u610f\u5230\u4e0e\u73b0\u5b9e\u7684\u989c\u8272\u6709\u4efb\u4f55\u7684\u5dee\u5f02\u3002\u989c\u8272\u53ef\u4ee5\u6570\u5b57\u5316\u7684\u7531\u7ea2\u8272(Red)\u3001\u7eff\u8272(Green)\u548c\u84dd\u8272(Blue)\u4e09\u4e2a\u5206\u91cf\u7ec4\u6210\uff0c\u5b83\u4eec\u901a\u5e38\u88ab\u7f29\u5199\u4e3aRGB\u3002\u4ec5\u4ec5\u7528\u8fd9\u4e09\u4e2a\u503c\u5c31\u53ef\u4ee5\u7ec4\u5408\u51fa\u4efb\u610f\u4e00\u79cd\u989c\u8272\u3002\u4f8b\u5982\uff0c\u8981\u83b7\u53d6\u4e00\u4e2a \u73ca\u745a\u7ea2(Coral) \u8272\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u8fd9\u6837\u7684\u4e00\u4e2a\u989c\u8272\u5411\u91cf\uff1a glm::vec3 coral(1.0f, 0.5f, 0.31f); \u6211\u4eec\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\u770b\u5230\u67d0\u4e00\u7269\u4f53\u7684\u989c\u8272\u5e76\u4e0d\u662f\u8fd9\u4e2a\u7269\u4f53\u771f\u6b63\u62e5\u6709\u7684\u989c\u8272\uff0c\u800c\u662f\u5b83\u6240 \u53cd\u5c04\u7684 (Reflected)\u989c\u8272\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u90a3\u4e9b\u4e0d\u80fd\u88ab\u7269\u4f53\u6240\u5438\u6536(Absorb)\u7684\u989c\u8272\uff08\u88ab\u62d2\u7edd\u7684\u989c\u8272\uff09\u5c31\u662f\u6211\u4eec\u80fd\u591f\u611f\u77e5\u5230\u7684\u7269\u4f53\u7684\u989c\u8272\u3002\u4f8b\u5982\uff0c\u592a\u9633\u5149\u80fd\u88ab\u770b\u89c1\u7684\u767d\u5149\u5176\u5b9e\u662f\u7531\u8bb8\u591a\u4e0d\u540c\u7684\u989c\u8272\u7ec4\u5408\u800c\u6210\u7684\uff08\u5982\u4e0b\u56fe\u6240\u793a\uff09\u3002\u5982\u679c\u6211\u4eec\u5c06\u767d\u5149\u7167\u5728\u4e00\u4e2a\u84dd\u8272\u7684\u73a9\u5177\u4e0a\uff0c\u8fd9\u4e2a\u84dd\u8272\u7684\u73a9\u5177\u4f1a\u5438\u6536\u767d\u5149\u4e2d\u9664\u4e86\u84dd\u8272\u4ee5\u5916\u7684\u6240\u6709\u5b50\u989c\u8272\uff0c\u4e0d\u88ab\u5438\u6536\u7684\u84dd\u8272\u5149\u88ab\u53cd\u5c04\u5230\u6211\u4eec\u7684\u773c\u4e2d\uff0c\u8ba9\u8fd9\u4e2a\u73a9\u5177\u770b\u8d77\u6765\u662f\u84dd\u8272\u7684\u3002\u4e0b\u56fe\u663e\u793a\u7684\u662f\u4e00\u4e2a\u73ca\u745a\u7ea2\u7684\u73a9\u5177\uff0c\u5b83\u4ee5\u4e0d\u540c\u5f3a\u5ea6\u53cd\u5c04\u4e86\u591a\u4e2a\u989c\u8272\u3002 \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u767d\u8272\u7684\u9633\u5149\u5b9e\u9645\u4e0a\u662f\u6240\u6709\u53ef\u89c1\u989c\u8272\u7684\u96c6\u5408\uff0c\u7269\u4f53\u5438\u6536\u4e86\u5176\u4e2d\u7684\u5927\u90e8\u5206\u989c\u8272\u3002\u5b83\u4ec5\u53cd\u5c04\u4e86\u4ee3\u8868\u7269\u4f53\u989c\u8272\u7684\u90e8\u5206\uff0c\u88ab\u53cd\u5c04\u989c\u8272\u7684\u7ec4\u5408\u5c31\u662f\u6211\u4eec\u6240\u611f\u77e5\u5230\u7684\u989c\u8272\uff08\u6b64\u4f8b\u4e2d\u4e3a\u73ca\u745a\u7ea2\uff09\u3002 Important \u4ece\u6280\u672f\u4e0a\u6765\u8bf4\uff0c\u60c5\u51b5\u4f1a\u66f4\u590d\u6742\u4e00\u4e9b\uff0c\u4f46\u6211\u4eec\u5c06\u5728PBR\u7ae0\u8282\u4e2d\u8fdb\u4e00\u6b65\u63a2\u8ba8\u3002 \u8fd9\u4e9b\u989c\u8272\u53cd\u5c04\u7684\u5b9a\u5f8b\u88ab\u76f4\u63a5\u5730\u8fd0\u7528\u5728\u56fe\u5f62\u9886\u57df\u3002\u5f53\u6211\u4eec\u5728OpenGL\u4e2d\u521b\u5efa\u4e00\u4e2a\u5149\u6e90\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u7ed9\u5149\u6e90\u4e00\u4e2a\u989c\u8272\u3002\u5728\u4e0a\u4e00\u6bb5\u4e2d\u6211\u4eec\u6709\u4e00\u4e2a\u767d\u8272\u7684\u592a\u9633\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u5c06\u5149\u6e90\u8bbe\u7f6e\u4e3a\u767d\u8272\u3002\u5f53\u6211\u4eec\u628a\u5149\u6e90\u7684\u989c\u8272\u4e0e\u7269\u4f53\u7684\u989c\u8272\u503c\u76f8\u4e58\uff0c\u6240\u5f97\u5230\u7684\u5c31\u662f\u8fd9\u4e2a\u7269\u4f53\u6240\u53cd\u5c04\u7684\u989c\u8272\uff08\u4e5f\u5c31\u662f\u6211\u4eec\u6240\u611f\u77e5\u5230\u7684\u989c\u8272\uff09\u3002\u8ba9\u6211\u4eec\u518d\u6b21\u5ba1\u89c6\u6211\u4eec\u7684\u73a9\u5177\uff08\u8fd9\u4e00\u6b21\u5b83\u8fd8\u662f\u73ca\u745a\u7ea2\uff09\uff0c\u770b\u770b\u5982\u4f55\u5728\u56fe\u5f62\u5b66\u4e2d\u8ba1\u7b97\u51fa\u5b83\u7684\u53cd\u5c04\u989c\u8272\u3002\u6211\u4eec\u5c06\u8fd9\u4e24\u4e2a\u989c\u8272\u5411\u91cf\u4f5c\u5206\u91cf\u76f8\u4e58\uff0c\u7ed3\u679c\u5c31\u662f\u6700\u7ec8\u7684\u989c\u8272\u5411\u91cf\u4e86\uff1a glm::vec3 lightColor(1.0f, 1.0f, 1.0f); glm::vec3 toyColor(1.0f, 0.5f, 0.31f); glm::vec3 result = lightColor * toyColor; // = (1.0f, 0.5f, 0.31f); \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u73a9\u5177\u7684\u989c\u8272 \u5438\u6536 \u4e86\u767d\u8272\u5149\u6e90\u4e2d\u5f88\u5927\u4e00\u90e8\u5206\u7684\u989c\u8272\uff0c\u4f46\u5b83\u6839\u636e\u81ea\u8eab\u7684\u989c\u8272\u503c\u5bf9\u7ea2\u3001\u7eff\u3001\u84dd\u4e09\u4e2a\u5206\u91cf\u90fd\u505a\u51fa\u4e86\u4e00\u5b9a\u7684\u53cd\u5c04\u3002\u8fd9\u4e5f\u8868\u73b0\u4e86\u73b0\u5b9e\u4e2d\u989c\u8272\u7684\u5de5\u4f5c\u539f\u7406\u3002\u7531\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u7269\u4f53\u7684\u989c\u8272\u4e3a \u7269\u4f53\u4ece\u4e00\u4e2a\u5149\u6e90\u53cd\u5c04\u5404\u4e2a\u989c\u8272\u5206\u91cf\u7684\u5927\u5c0f \u3002\u73b0\u5728\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u7eff\u8272\u7684\u5149\u6e90\u53c8\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f glm::vec3 lightColor(0.0f, 1.0f, 0.0f); glm::vec3 toyColor(1.0f, 0.5f, 0.31f); glm::vec3 result = lightColor * toyColor; // = (0.0f, 0.5f, 0.0f); \u53ef\u4ee5\u770b\u5230\uff0c\u5e76\u6ca1\u6709\u7ea2\u8272\u548c\u84dd\u8272\u7684\u5149\u8ba9\u6211\u4eec\u7684\u73a9\u5177\u6765\u5438\u6536\u6216\u53cd\u5c04\u3002\u8fd9\u4e2a\u73a9\u5177\u5438\u6536\u4e86\u5149\u7ebf\u4e2d\u4e00\u534a\u7684\u7eff\u8272\u503c\uff0c\u4f46\u4ecd\u7136\u4e5f\u53cd\u5c04\u4e86\u4e00\u534a\u7684\u7eff\u8272\u503c\u3002\u73a9\u5177\u73b0\u5728\u770b\u4e0a\u53bb\u662f\u6df1\u7eff\u8272(Dark-greenish)\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5982\u679c\u6211\u4eec\u7528\u7eff\u8272\u5149\u6e90\u6765\u7167\u5c04\u73a9\u5177\uff0c\u90a3\u4e48\u53ea\u6709\u7eff\u8272\u5206\u91cf\u80fd\u88ab\u53cd\u5c04\u548c\u611f\u77e5\u5230\uff0c\u7ea2\u8272\u548c\u84dd\u8272\u90fd\u4e0d\u80fd\u88ab\u6211\u4eec\u6240\u611f\u77e5\u5230\u3002\u8fd9\u6837\u505a\u7684\u7ed3\u679c\u662f\uff0c\u4e00\u4e2a\u73ca\u745a\u7ea2\u7684\u73a9\u5177\u7a81\u7136\u53d8\u6210\u4e86\u6df1\u7eff\u8272\u7269\u4f53\u3002\u73b0\u5728\u6211\u4eec\u6765\u770b\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff0c\u4f7f\u7528\u6df1\u6a44\u6984\u7eff\u8272(Dark olive-green)\u7684\u5149\u6e90\uff1a glm::vec3 lightColor(0.33f, 0.42f, 0.18f); glm::vec3 toyColor(1.0f, 0.5f, 0.31f); glm::vec3 result = lightColor * toyColor; // = (0.33f, 0.21f, 0.06f); \u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u5149\u6e90\u989c\u8272\u6765\u8ba9\u7269\u4f53\u663e\u73b0\u51fa\u610f\u60f3\u4e0d\u5230\u7684\u989c\u8272\u3002\u6709\u521b\u610f\u5730\u5229\u7528\u989c\u8272\u5176\u5b9e\u5e76\u4e0d\u96be\u3002 \u8fd9\u4e9b\u989c\u8272\u7684\u7406\u8bba\u5df2\u7ecf\u8db3\u591f\u4e86\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u6784\u9020\u4e00\u4e2a\u5b9e\u9a8c\u7528\u7684\u573a\u666f\u5427\u3002 \u521b\u5efa\u4e00\u4e2a\u5149\u7167\u573a\u666f \u5728\u63a5\u4e0b\u6765\u7684\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u5e7f\u6cdb\u5730\u4f7f\u7528\u989c\u8272\u6765\u6a21\u62df\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u5149\u7167\u6548\u679c\uff0c\u521b\u9020\u51fa\u4e00\u4e9b\u6709\u8da3\u7684\u89c6\u89c9\u6548\u679c\u3002\u7531\u4e8e\u6211\u4eec\u73b0\u5728\u5c06\u4f1a\u4f7f\u7528\u5149\u6e90\u4e86\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u5b83\u4eec\u663e\u793a\u4e3a\u53ef\u89c1\u7684\u7269\u4f53\uff0c\u5e76\u5728\u573a\u666f\u4e2d\u81f3\u5c11\u52a0\u5165\u4e00\u4e2a\u7269\u4f53\u6765\u6d4b\u8bd5\u6a21\u62df\u5149\u7167\u7684\u6548\u679c\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u7269\u4f53\u6765\u4f5c\u4e3a\u88ab\u6295\u5149(Cast the light)\u7684\u5bf9\u8c61\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u524d\u9762\u6559\u7a0b\u4e2d\u7684\u90a3\u4e2a\u8457\u540d\u7684\u7acb\u65b9\u4f53\u7bb1\u5b50\u3002\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u7269\u4f53\u6765\u4ee3\u8868\u5149\u6e90\u57283D\u573a\u666f\u4e2d\u7684\u4f4d\u7f6e\u3002\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u4f9d\u7136\u4f7f\u7528\u4e00\u4e2a\u7acb\u65b9\u4f53\u6765\u4ee3\u8868\u5149\u6e90\uff08\u6211\u4eec\u5df2\u62e5\u6709\u7acb\u65b9\u4f53\u7684 \u9876\u70b9\u6570\u636e \u662f\u5427\uff1f\uff09\u3002 \u586b\u4e00\u4e2a\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61(VBO)\uff0c\u8bbe\u5b9a\u4e00\u4e0b\u9876\u70b9\u5c5e\u6027\u6307\u9488\u548c\u5176\u5b83\u4e00\u4e9b\u4e71\u4e03\u516b\u7cdf\u7684\u4e1c\u897f\u73b0\u5728\u5bf9\u4f60\u6765\u8bf4\u5e94\u8be5\u5f88\u5bb9\u6613\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u4e0d\u518d\u8d58\u8ff0\u90a3\u4e9b\u6b65\u9aa4\u4e86\u3002\u5982\u679c\u4f60\u4ecd\u7136\u89c9\u5f97\u8fd9\u5f88\u56f0\u96be\uff0c\u6211\u5efa\u8bae\u4f60\u590d\u4e60 \u4e4b\u524d\u7684\u6559\u7a0b \uff0c\u5e76\u4e14\u5728\u7ee7\u7eed\u5b66\u4e60\u4e4b\u524d\u5148\u628a\u7ec3\u4e60\u8fc7\u4e00\u904d\u3002 \u6211\u4eec\u9996\u5148\u9700\u8981\u4e00\u4e2a\u9876\u70b9\u7740\u8272\u5668\u6765\u7ed8\u5236\u7bb1\u5b50\u3002\u4e0e\u4e4b\u524d\u7684\u9876\u70b9\u7740\u8272\u5668\u76f8\u6bd4\uff0c\u5bb9\u5668\u7684\u9876\u70b9\u4f4d\u7f6e\u662f\u4fdd\u6301\u4e0d\u53d8\u7684\uff08\u867d\u7136\u8fd9\u4e00\u6b21\u6211\u4eec\u4e0d\u9700\u8981\u7eb9\u7406\u5750\u6807\u4e86\uff09\uff0c\u56e0\u6b64\u9876\u70b9\u7740\u8272\u5668\u4e2d\u6ca1\u6709\u65b0\u7684\u4ee3\u7801\u3002\u6211\u4eec\u5c06\u4f1a\u4f7f\u7528\u4e4b\u524d\u6559\u7a0b\u9876\u70b9\u7740\u8272\u5668\u7684\u7cbe\u7b80\u7248\uff1a #version 330 core layout (location = 0) in vec3 aPos; uniform mat4 model; uniform mat4 view; uniform mat4 projection; void main() { gl_Position = projection * view * model * vec4(aPos, 1.0); } \u8bb0\u5f97\u66f4\u65b0\u4f60\u7684\u9876\u70b9\u6570\u636e\u548c\u5c5e\u6027\u6307\u9488\u4f7f\u5176\u4e0e\u65b0\u7684\u9876\u70b9\u7740\u8272\u5668\u4fdd\u6301\u4e00\u81f4\uff08\u5f53\u7136\u4f60\u53ef\u4ee5\u7ee7\u7eed\u7559\u7740\u7eb9\u7406\u6570\u636e\u548c\u5c5e\u6027\u6307\u9488\u3002\u5728\u8fd9\u4e00\u8282\u4e2d\u6211\u4eec\u5c06\u4e0d\u4f1a\u7528\u5230\u5b83\u4eec\uff0c\u4f46\u6709\u4e00\u4e2a\u5168\u65b0\u7684\u5f00\u59cb\u4e5f\u4e0d\u662f\u4ec0\u4e48\u574f\u4e3b\u610f\uff09\u3002 \u56e0\u4e3a\u6211\u4eec\u8fd8\u8981\u521b\u5efa\u4e00\u4e2a\u8868\u793a\u706f\uff08\u5149\u6e90\uff09\u7684\u7acb\u65b9\u4f53\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u4e3a\u8fd9\u4e2a\u706f\u521b\u5efa\u4e00\u4e2a\u4e13\u95e8\u7684VAO\u3002\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u8ba9\u8fd9\u4e2a\u706f\u548c\u5176\u5b83\u7269\u4f53\u4f7f\u7528\u540c\u4e00\u4e2aVAO\uff0c\u7b80\u5355\u5730\u5bf9\u5b83\u7684 model \uff08\u6a21\u578b\uff09\u77e9\u9635\u505a\u4e00\u4e9b\u53d8\u6362\u5c31\u597d\u4e86\uff0c\u7136\u800c\u63a5\u4e0b\u6765\u7684\u6559\u7a0b\u4e2d\u6211\u4eec\u4f1a\u9891\u7e41\u5730\u5bf9\u9876\u70b9\u6570\u636e\u548c\u5c5e\u6027\u6307\u9488\u505a\u51fa\u4fee\u6539\uff0c\u6211\u4eec\u5e76\u4e0d\u60f3\u8ba9\u8fd9\u4e9b\u4fee\u6539\u5f71\u54cd\u5230\u706f\uff08\u6211\u4eec\u53ea\u5173\u5fc3\u706f\u7684\u9876\u70b9\u4f4d\u7f6e\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u6709\u5fc5\u8981\u4e3a\u706f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684VAO\u3002 unsigned int lightVAO; glGenVertexArrays(1, &lightVAO); glBindVertexArray(lightVAO); // \u53ea\u9700\u8981\u7ed1\u5b9aVBO\u4e0d\u7528\u518d\u6b21\u8bbe\u7f6eVBO\u7684\u6570\u636e\uff0c\u56e0\u4e3a\u7bb1\u5b50\u7684VBO\u6570\u636e\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u6b63\u786e\u7684\u7acb\u65b9\u4f53\u9876\u70b9\u6570\u636e glBindBuffer(GL_ARRAY_BUFFER, VBO); // \u8bbe\u7f6e\u706f\u7acb\u65b9\u4f53\u7684\u9876\u70b9\u5c5e\u6027\uff08\u5bf9\u6211\u4eec\u7684\u706f\u6765\u8bf4\u4ec5\u4ec5\u53ea\u6709\u4f4d\u7f6e\u6570\u636e\uff09 glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0); glEnableVertexAttribArray(0); \u8fd9\u6bb5\u4ee3\u7801\u5bf9\u4f60\u6765\u8bf4\u5e94\u8be5\u975e\u5e38\u76f4\u89c2\u3002\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u8868\u793a\u706f\u548c\u88ab\u7167\u7269\u4f53\u7bb1\u5b50\uff0c\u6211\u4eec\u53ea\u9700\u8981\u518d\u5b9a\u4e49\u4e00\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u5c31\u884c\u4e86\uff1a #version 330 core out vec4 FragColor; uniform vec3 objectColor; uniform vec3 lightColor; void main() { FragColor = vec4(lightColor * objectColor, 1.0); } \u8fd9\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u4eceuniform\u53d8\u91cf\u4e2d\u63a5\u53d7\u7269\u4f53\u7684\u989c\u8272\u548c\u5149\u6e90\u7684\u989c\u8272\u3002\u6b63\u5982\u672c\u8282\u4e00\u5f00\u59cb\u6240\u8ba8\u8bba\u7684\u90a3\u6837\uff0c\u6211\u4eec\u5c06\u5149\u6e90\u7684\u989c\u8272\u548c\u7269\u4f53\uff08\u53cd\u5c04\u7684\uff09\u989c\u8272\u76f8\u4e58\u3002\u8fd9\u4e2a\u7740\u8272\u5668\u7406\u89e3\u8d77\u6765\u5e94\u8be5\u5f88\u5bb9\u6613\u3002\u6211\u4eec\u628a\u7269\u4f53\u7684\u989c\u8272\u8bbe\u7f6e\u4e3a\u4e4b\u524d\u63d0\u5230\u7684\u73ca\u745a\u7ea2\u8272\uff0c\u5e76\u628a\u5149\u6e90\u8bbe\u7f6e\u4e3a\u767d\u8272\u3002 // \u5728\u6b64\u4e4b\u524d\u4e0d\u8981\u5fd8\u8bb0\u9996\u5148 use \u5bf9\u5e94\u7684\u7740\u8272\u5668\u7a0b\u5e8f\uff08\u6765\u8bbe\u5b9auniform\uff09 lightingShader.use(); lightingShader.setVec3(\"objectColor\", 1.0f, 0.5f, 0.31f); lightingShader.setVec3(\"lightColor\", 1.0f, 1.0f, 1.0f); \u8981\u6ce8\u610f\u7684\u662f\uff0c\u5f53\u6211\u4eec\u4fee\u6539\u9876\u70b9\u6216\u8005\u7247\u6bb5\u7740\u8272\u5668\u540e\uff0c\u706f\u7684\u4f4d\u7f6e\u6216\u989c\u8272\u4e5f\u4f1a\u968f\u4e4b\u6539\u53d8\uff0c\u8fd9\u5e76\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u6548\u679c\u3002\u6211\u4eec\u4e0d\u5e0c\u671b\u706f\u7684\u989c\u8272\u5728\u63a5\u4e0b\u6765\u7684\u6559\u7a0b\u4e2d\u56e0\u5149\u7167\u8ba1\u7b97\u7684\u7ed3\u679c\u800c\u53d7\u5230\u5f71\u54cd\uff0c\u800c\u662f\u5e0c\u671b\u5b83\u80fd\u591f\u4e0e\u5176\u5b83\u7684\u8ba1\u7b97\u5206\u79bb\u3002\u6211\u4eec\u5e0c\u671b\u706f\u4e00\u76f4\u4fdd\u6301\u660e\u4eae\uff0c\u4e0d\u53d7\u5176\u5b83\u989c\u8272\u53d8\u5316\u7684\u5f71\u54cd\uff08\u8fd9\u6837\u5b83\u624d\u66f4\u50cf\u662f\u4e00\u4e2a\u771f\u5b9e\u7684\u5149\u6e90\uff09\u3002 \u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u6807\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u706f\u7684\u7ed8\u5236\u521b\u5efa\u53e6\u5916\u7684\u4e00\u5957\u7740\u8272\u5668\uff0c\u4ece\u800c\u80fd\u4fdd\u8bc1\u5b83\u80fd\u591f\u5728\u5176\u5b83\u5149\u7167\u7740\u8272\u5668\u53d1\u751f\u6539\u53d8\u7684\u65f6\u5019\u4e0d\u53d7\u5f71\u54cd\u3002\u9876\u70b9\u7740\u8272\u5668\u4e0e\u6211\u4eec\u5f53\u524d\u7684\u9876\u70b9\u7740\u8272\u5668\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u76f4\u63a5\u628a\u73b0\u5728\u7684\u9876\u70b9\u7740\u8272\u5668\u7528\u5728\u706f\u4e0a\u3002\u706f\u7684\u7247\u6bb5\u7740\u8272\u5668\u7ed9\u706f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4e0d\u53d8\u7684\u5e38\u91cf\u767d\u8272\uff0c\u4fdd\u8bc1\u4e86\u706f\u7684\u989c\u8272\u4e00\u76f4\u662f\u4eae\u7684\uff1a #version 330 core out vec4 FragColor; void main() { FragColor = vec4(1.0); // \u5c06\u5411\u91cf\u7684\u56db\u4e2a\u5206\u91cf\u5168\u90e8\u8bbe\u7f6e\u4e3a1.0 } \u5f53\u6211\u4eec\u60f3\u8981\u7ed8\u5236\u6211\u4eec\u7684\u7269\u4f53\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u521a\u521a\u5b9a\u4e49\u7684\u5149\u7167\u7740\u8272\u5668\u6765\u7ed8\u5236\u7bb1\u5b50\uff08\u6216\u8005\u53ef\u80fd\u662f\u5176\u5b83\u7684\u7269\u4f53\uff09\u3002\u5f53\u6211\u4eec\u60f3\u8981\u7ed8\u5236\u706f\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u706f\u7684\u7740\u8272\u5668\u3002\u5728\u4e4b\u540e\u7684\u6559\u7a0b\u91cc\u6211\u4eec\u4f1a\u9010\u6b65\u66f4\u65b0\u8fd9\u4e2a\u5149\u7167\u7740\u8272\u5668\uff0c\u4ece\u800c\u80fd\u591f\u6162\u6162\u5730\u5b9e\u73b0\u66f4\u771f\u5b9e\u7684\u6548\u679c\u3002 \u4f7f\u7528\u8fd9\u4e2a\u706f\u7acb\u65b9\u4f53\u7684\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u8ba9\u6211\u4eec\u77e5\u9053\u5149\u6e90\u5728\u573a\u666f\u4e2d\u7684\u5177\u4f53\u4f4d\u7f6e\u3002\u6211\u4eec\u901a\u5e38\u5728\u573a\u666f\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u5149\u6e90\u7684\u4f4d\u7f6e\uff0c\u4f46\u8fd9\u53ea\u662f\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5b83\u5e76\u6ca1\u6709\u89c6\u89c9\u610f\u4e49\u3002\u4e3a\u4e86\u663e\u793a\u771f\u6b63\u7684\u706f\uff0c\u6211\u4eec\u5c06\u8868\u793a\u5149\u6e90\u7684\u7acb\u65b9\u4f53\u7ed8\u5236\u5728\u4e0e\u5149\u6e90\u76f8\u540c\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u6211\u4eec\u4e3a\u5b83\u65b0\u5efa\u7684\u7247\u6bb5\u7740\u8272\u5668\u6765\u7ed8\u5236\u5b83\uff0c\u8ba9\u5b83\u4e00\u76f4\u5904\u4e8e\u767d\u8272\u7684\u72b6\u6001\uff0c\u4e0d\u53d7\u573a\u666f\u4e2d\u7684\u5149\u7167\u5f71\u54cd\u3002 \u6211\u4eec\u58f0\u660e\u4e00\u4e2a\u5168\u5c40 vec3 \u53d8\u91cf\u6765\u8868\u793a\u5149\u6e90\u5728\u573a\u666f\u7684\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\uff1a glm::vec3 lightPos(1.2f, 1.0f, 2.0f); \u7136\u540e\u6211\u4eec\u628a\u706f\u4f4d\u79fb\u5230\u8fd9\u91cc\uff0c\u7136\u540e\u5c06\u5b83\u7f29\u5c0f\u4e00\u70b9\uff0c\u8ba9\u5b83\u4e0d\u90a3\u4e48\u660e\u663e\uff1a model = glm::mat4(); model = glm::translate(model, lightPos); model = glm::scale(model, glm::vec3(0.2f)); \u7ed8\u5236\u706f\u7acb\u65b9\u4f53\u7684\u4ee3\u7801\u5e94\u8be5\u4e0e\u4e0b\u9762\u7684\u7c7b\u4f3c\uff1a lampShader.use(); // \u8bbe\u7f6e\u6a21\u578b\u3001\u89c6\u56fe\u548c\u6295\u5f71\u77e9\u9635uniform ... // \u7ed8\u5236\u706f\u7acb\u65b9\u4f53\u5bf9\u8c61 glBindVertexArray(lightVAO); glDrawArrays(GL_TRIANGLES, 0, 36); \u8bf7\u628a\u4e0a\u8ff0\u7684\u6240\u6709\u4ee3\u7801\u7247\u6bb5\u653e\u5728\u4f60\u7a0b\u5e8f\u4e2d\u5408\u9002\u7684\u4f4d\u7f6e\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u6709\u4e00\u4e2a\u5e72\u51c0\u7684\u5149\u7167\u5b9e\u9a8c\u573a\u5730\u4e86\u3002\u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u8fd0\u884c\u6548\u679c\u5c06\u4f1a\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u6ca1\u4ec0\u4e48\u597d\u770b\u7684\u662f\u5417\uff1f\u4f46\u6211\u4fdd\u8bc1\u5728\u63a5\u4e0b\u6765\u7684\u6559\u7a0b\u4e2d\u5b83\u4f1a\u53d8\u5f97\u66f4\u52a0\u6709\u8da3\u3002 \u5982\u679c\u4f60\u89c9\u5f97\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u7247\u6bb5\u6574\u5408\u5230\u4e00\u8d77\u975e\u5e38\u56f0\u96be\uff0c\u53ef\u4ee5\u6765 \u8fd9\u91cc \u770b\u4e00\u4e0b\u6e90\u4ee3\u7801\uff0c\u5e76\u4ed4\u7ec6\u7814\u7a76\u6211\u7684\u4ee3\u7801\u548c\u6ce8\u91ca\u3002 \u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u5bf9\u989c\u8272\u6709\u4e00\u5b9a\u7684\u4e86\u89e3\u4e86\uff0c\u5e76\u4e14\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u573a\u666f\u4f9b\u6211\u4eec\u4e4b\u540e\u7ed8\u5236\u52a8\u611f\u7684\u5149\u7167\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u5165 \u4e0b\u4e00\u8282 \u8fdb\u884c\u5b66\u4e60\uff0c\u771f\u6b63\u7684\u9b54\u6cd5\u5373\u5c06\u5f00\u59cb\uff01","title":"\u989c\u8272"},{"location":"02%20Lighting/01%20Colors/#_1","text":"\u539f\u6587 Colors \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Geequlim , Krasjet \u6821\u5bf9 AoZhang \u5728\u524d\u9762\u7684\u6559\u7a0b\u4e2d\u6211\u4eec\u5df2\u7ecf\u7b80\u8981\u63d0\u5230\u8fc7\u8be5\u5982\u4f55\u5728OpenGL\u4e2d\u4f7f\u7528\u989c\u8272(Color)\uff0c\u4f46\u662f\u6211\u4eec\u81f3\u4eca\u6240\u63a5\u89e6\u5230\u7684\u90fd\u662f\u5f88\u6d45\u5c42\u7684\u77e5\u8bc6\u3002\u672c\u8282\u6211\u4eec\u5c06\u4f1a\u66f4\u6df1\u5165\u5730\u8ba8\u8bba\u4ec0\u4e48\u662f\u989c\u8272\uff0c\u5e76\u4e14\u8fd8\u4f1a\u4e3a\u63a5\u4e0b\u6765\u7684\u5149\u7167(Lighting)\u6559\u7a0b\u521b\u5efa\u4e00\u4e2a\u573a\u666f\u3002 \u73b0\u5b9e\u4e16\u754c\u4e2d\u6709\u65e0\u6570\u79cd\u989c\u8272\uff0c\u6bcf\u4e00\u4e2a\u7269\u4f53\u90fd\u6709\u5b83\u4eec\u81ea\u5df1\u7684\u989c\u8272\u3002\u6211\u4eec\u9700\u8981\u4f7f\u7528\uff08\u6709\u9650\u7684\uff09\u6570\u503c\u6765\u6a21\u62df\u771f\u5b9e\u4e16\u754c\u4e2d\uff08\u65e0\u9650\uff09\u7684\u989c\u8272\uff0c\u6240\u4ee5\u5e76\u4e0d\u662f\u6240\u6709\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u989c\u8272\u90fd\u53ef\u4ee5\u7528\u6570\u503c\u6765\u8868\u793a\u7684\u3002\u7136\u800c\u6211\u4eec\u4ecd\u80fd\u901a\u8fc7\u6570\u503c\u6765\u8868\u73b0\u51fa\u975e\u5e38\u591a\u7684\u989c\u8272\uff0c\u751a\u81f3\u4f60\u53ef\u80fd\u90fd\u4e0d\u4f1a\u6ce8\u610f\u5230\u4e0e\u73b0\u5b9e\u7684\u989c\u8272\u6709\u4efb\u4f55\u7684\u5dee\u5f02\u3002\u989c\u8272\u53ef\u4ee5\u6570\u5b57\u5316\u7684\u7531\u7ea2\u8272(Red)\u3001\u7eff\u8272(Green)\u548c\u84dd\u8272(Blue)\u4e09\u4e2a\u5206\u91cf\u7ec4\u6210\uff0c\u5b83\u4eec\u901a\u5e38\u88ab\u7f29\u5199\u4e3aRGB\u3002\u4ec5\u4ec5\u7528\u8fd9\u4e09\u4e2a\u503c\u5c31\u53ef\u4ee5\u7ec4\u5408\u51fa\u4efb\u610f\u4e00\u79cd\u989c\u8272\u3002\u4f8b\u5982\uff0c\u8981\u83b7\u53d6\u4e00\u4e2a \u73ca\u745a\u7ea2(Coral) \u8272\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u8fd9\u6837\u7684\u4e00\u4e2a\u989c\u8272\u5411\u91cf\uff1a glm::vec3 coral(1.0f, 0.5f, 0.31f); \u6211\u4eec\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\u770b\u5230\u67d0\u4e00\u7269\u4f53\u7684\u989c\u8272\u5e76\u4e0d\u662f\u8fd9\u4e2a\u7269\u4f53\u771f\u6b63\u62e5\u6709\u7684\u989c\u8272\uff0c\u800c\u662f\u5b83\u6240 \u53cd\u5c04\u7684 (Reflected)\u989c\u8272\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u90a3\u4e9b\u4e0d\u80fd\u88ab\u7269\u4f53\u6240\u5438\u6536(Absorb)\u7684\u989c\u8272\uff08\u88ab\u62d2\u7edd\u7684\u989c\u8272\uff09\u5c31\u662f\u6211\u4eec\u80fd\u591f\u611f\u77e5\u5230\u7684\u7269\u4f53\u7684\u989c\u8272\u3002\u4f8b\u5982\uff0c\u592a\u9633\u5149\u80fd\u88ab\u770b\u89c1\u7684\u767d\u5149\u5176\u5b9e\u662f\u7531\u8bb8\u591a\u4e0d\u540c\u7684\u989c\u8272\u7ec4\u5408\u800c\u6210\u7684\uff08\u5982\u4e0b\u56fe\u6240\u793a\uff09\u3002\u5982\u679c\u6211\u4eec\u5c06\u767d\u5149\u7167\u5728\u4e00\u4e2a\u84dd\u8272\u7684\u73a9\u5177\u4e0a\uff0c\u8fd9\u4e2a\u84dd\u8272\u7684\u73a9\u5177\u4f1a\u5438\u6536\u767d\u5149\u4e2d\u9664\u4e86\u84dd\u8272\u4ee5\u5916\u7684\u6240\u6709\u5b50\u989c\u8272\uff0c\u4e0d\u88ab\u5438\u6536\u7684\u84dd\u8272\u5149\u88ab\u53cd\u5c04\u5230\u6211\u4eec\u7684\u773c\u4e2d\uff0c\u8ba9\u8fd9\u4e2a\u73a9\u5177\u770b\u8d77\u6765\u662f\u84dd\u8272\u7684\u3002\u4e0b\u56fe\u663e\u793a\u7684\u662f\u4e00\u4e2a\u73ca\u745a\u7ea2\u7684\u73a9\u5177\uff0c\u5b83\u4ee5\u4e0d\u540c\u5f3a\u5ea6\u53cd\u5c04\u4e86\u591a\u4e2a\u989c\u8272\u3002 \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u767d\u8272\u7684\u9633\u5149\u5b9e\u9645\u4e0a\u662f\u6240\u6709\u53ef\u89c1\u989c\u8272\u7684\u96c6\u5408\uff0c\u7269\u4f53\u5438\u6536\u4e86\u5176\u4e2d\u7684\u5927\u90e8\u5206\u989c\u8272\u3002\u5b83\u4ec5\u53cd\u5c04\u4e86\u4ee3\u8868\u7269\u4f53\u989c\u8272\u7684\u90e8\u5206\uff0c\u88ab\u53cd\u5c04\u989c\u8272\u7684\u7ec4\u5408\u5c31\u662f\u6211\u4eec\u6240\u611f\u77e5\u5230\u7684\u989c\u8272\uff08\u6b64\u4f8b\u4e2d\u4e3a\u73ca\u745a\u7ea2\uff09\u3002 Important \u4ece\u6280\u672f\u4e0a\u6765\u8bf4\uff0c\u60c5\u51b5\u4f1a\u66f4\u590d\u6742\u4e00\u4e9b\uff0c\u4f46\u6211\u4eec\u5c06\u5728PBR\u7ae0\u8282\u4e2d\u8fdb\u4e00\u6b65\u63a2\u8ba8\u3002 \u8fd9\u4e9b\u989c\u8272\u53cd\u5c04\u7684\u5b9a\u5f8b\u88ab\u76f4\u63a5\u5730\u8fd0\u7528\u5728\u56fe\u5f62\u9886\u57df\u3002\u5f53\u6211\u4eec\u5728OpenGL\u4e2d\u521b\u5efa\u4e00\u4e2a\u5149\u6e90\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u7ed9\u5149\u6e90\u4e00\u4e2a\u989c\u8272\u3002\u5728\u4e0a\u4e00\u6bb5\u4e2d\u6211\u4eec\u6709\u4e00\u4e2a\u767d\u8272\u7684\u592a\u9633\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u5c06\u5149\u6e90\u8bbe\u7f6e\u4e3a\u767d\u8272\u3002\u5f53\u6211\u4eec\u628a\u5149\u6e90\u7684\u989c\u8272\u4e0e\u7269\u4f53\u7684\u989c\u8272\u503c\u76f8\u4e58\uff0c\u6240\u5f97\u5230\u7684\u5c31\u662f\u8fd9\u4e2a\u7269\u4f53\u6240\u53cd\u5c04\u7684\u989c\u8272\uff08\u4e5f\u5c31\u662f\u6211\u4eec\u6240\u611f\u77e5\u5230\u7684\u989c\u8272\uff09\u3002\u8ba9\u6211\u4eec\u518d\u6b21\u5ba1\u89c6\u6211\u4eec\u7684\u73a9\u5177\uff08\u8fd9\u4e00\u6b21\u5b83\u8fd8\u662f\u73ca\u745a\u7ea2\uff09\uff0c\u770b\u770b\u5982\u4f55\u5728\u56fe\u5f62\u5b66\u4e2d\u8ba1\u7b97\u51fa\u5b83\u7684\u53cd\u5c04\u989c\u8272\u3002\u6211\u4eec\u5c06\u8fd9\u4e24\u4e2a\u989c\u8272\u5411\u91cf\u4f5c\u5206\u91cf\u76f8\u4e58\uff0c\u7ed3\u679c\u5c31\u662f\u6700\u7ec8\u7684\u989c\u8272\u5411\u91cf\u4e86\uff1a glm::vec3 lightColor(1.0f, 1.0f, 1.0f); glm::vec3 toyColor(1.0f, 0.5f, 0.31f); glm::vec3 result = lightColor * toyColor; // = (1.0f, 0.5f, 0.31f); \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u73a9\u5177\u7684\u989c\u8272 \u5438\u6536 \u4e86\u767d\u8272\u5149\u6e90\u4e2d\u5f88\u5927\u4e00\u90e8\u5206\u7684\u989c\u8272\uff0c\u4f46\u5b83\u6839\u636e\u81ea\u8eab\u7684\u989c\u8272\u503c\u5bf9\u7ea2\u3001\u7eff\u3001\u84dd\u4e09\u4e2a\u5206\u91cf\u90fd\u505a\u51fa\u4e86\u4e00\u5b9a\u7684\u53cd\u5c04\u3002\u8fd9\u4e5f\u8868\u73b0\u4e86\u73b0\u5b9e\u4e2d\u989c\u8272\u7684\u5de5\u4f5c\u539f\u7406\u3002\u7531\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u7269\u4f53\u7684\u989c\u8272\u4e3a \u7269\u4f53\u4ece\u4e00\u4e2a\u5149\u6e90\u53cd\u5c04\u5404\u4e2a\u989c\u8272\u5206\u91cf\u7684\u5927\u5c0f \u3002\u73b0\u5728\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u7eff\u8272\u7684\u5149\u6e90\u53c8\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f glm::vec3 lightColor(0.0f, 1.0f, 0.0f); glm::vec3 toyColor(1.0f, 0.5f, 0.31f); glm::vec3 result = lightColor * toyColor; // = (0.0f, 0.5f, 0.0f); \u53ef\u4ee5\u770b\u5230\uff0c\u5e76\u6ca1\u6709\u7ea2\u8272\u548c\u84dd\u8272\u7684\u5149\u8ba9\u6211\u4eec\u7684\u73a9\u5177\u6765\u5438\u6536\u6216\u53cd\u5c04\u3002\u8fd9\u4e2a\u73a9\u5177\u5438\u6536\u4e86\u5149\u7ebf\u4e2d\u4e00\u534a\u7684\u7eff\u8272\u503c\uff0c\u4f46\u4ecd\u7136\u4e5f\u53cd\u5c04\u4e86\u4e00\u534a\u7684\u7eff\u8272\u503c\u3002\u73a9\u5177\u73b0\u5728\u770b\u4e0a\u53bb\u662f\u6df1\u7eff\u8272(Dark-greenish)\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5982\u679c\u6211\u4eec\u7528\u7eff\u8272\u5149\u6e90\u6765\u7167\u5c04\u73a9\u5177\uff0c\u90a3\u4e48\u53ea\u6709\u7eff\u8272\u5206\u91cf\u80fd\u88ab\u53cd\u5c04\u548c\u611f\u77e5\u5230\uff0c\u7ea2\u8272\u548c\u84dd\u8272\u90fd\u4e0d\u80fd\u88ab\u6211\u4eec\u6240\u611f\u77e5\u5230\u3002\u8fd9\u6837\u505a\u7684\u7ed3\u679c\u662f\uff0c\u4e00\u4e2a\u73ca\u745a\u7ea2\u7684\u73a9\u5177\u7a81\u7136\u53d8\u6210\u4e86\u6df1\u7eff\u8272\u7269\u4f53\u3002\u73b0\u5728\u6211\u4eec\u6765\u770b\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff0c\u4f7f\u7528\u6df1\u6a44\u6984\u7eff\u8272(Dark olive-green)\u7684\u5149\u6e90\uff1a glm::vec3 lightColor(0.33f, 0.42f, 0.18f); glm::vec3 toyColor(1.0f, 0.5f, 0.31f); glm::vec3 result = lightColor * toyColor; // = (0.33f, 0.21f, 0.06f); \u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u5149\u6e90\u989c\u8272\u6765\u8ba9\u7269\u4f53\u663e\u73b0\u51fa\u610f\u60f3\u4e0d\u5230\u7684\u989c\u8272\u3002\u6709\u521b\u610f\u5730\u5229\u7528\u989c\u8272\u5176\u5b9e\u5e76\u4e0d\u96be\u3002 \u8fd9\u4e9b\u989c\u8272\u7684\u7406\u8bba\u5df2\u7ecf\u8db3\u591f\u4e86\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u6784\u9020\u4e00\u4e2a\u5b9e\u9a8c\u7528\u7684\u573a\u666f\u5427\u3002","title":"\u989c\u8272"},{"location":"02%20Lighting/01%20Colors/#_2","text":"\u5728\u63a5\u4e0b\u6765\u7684\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u5e7f\u6cdb\u5730\u4f7f\u7528\u989c\u8272\u6765\u6a21\u62df\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u5149\u7167\u6548\u679c\uff0c\u521b\u9020\u51fa\u4e00\u4e9b\u6709\u8da3\u7684\u89c6\u89c9\u6548\u679c\u3002\u7531\u4e8e\u6211\u4eec\u73b0\u5728\u5c06\u4f1a\u4f7f\u7528\u5149\u6e90\u4e86\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u5b83\u4eec\u663e\u793a\u4e3a\u53ef\u89c1\u7684\u7269\u4f53\uff0c\u5e76\u5728\u573a\u666f\u4e2d\u81f3\u5c11\u52a0\u5165\u4e00\u4e2a\u7269\u4f53\u6765\u6d4b\u8bd5\u6a21\u62df\u5149\u7167\u7684\u6548\u679c\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u7269\u4f53\u6765\u4f5c\u4e3a\u88ab\u6295\u5149(Cast the light)\u7684\u5bf9\u8c61\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u524d\u9762\u6559\u7a0b\u4e2d\u7684\u90a3\u4e2a\u8457\u540d\u7684\u7acb\u65b9\u4f53\u7bb1\u5b50\u3002\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u7269\u4f53\u6765\u4ee3\u8868\u5149\u6e90\u57283D\u573a\u666f\u4e2d\u7684\u4f4d\u7f6e\u3002\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u4f9d\u7136\u4f7f\u7528\u4e00\u4e2a\u7acb\u65b9\u4f53\u6765\u4ee3\u8868\u5149\u6e90\uff08\u6211\u4eec\u5df2\u62e5\u6709\u7acb\u65b9\u4f53\u7684 \u9876\u70b9\u6570\u636e \u662f\u5427\uff1f\uff09\u3002 \u586b\u4e00\u4e2a\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61(VBO)\uff0c\u8bbe\u5b9a\u4e00\u4e0b\u9876\u70b9\u5c5e\u6027\u6307\u9488\u548c\u5176\u5b83\u4e00\u4e9b\u4e71\u4e03\u516b\u7cdf\u7684\u4e1c\u897f\u73b0\u5728\u5bf9\u4f60\u6765\u8bf4\u5e94\u8be5\u5f88\u5bb9\u6613\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u4e0d\u518d\u8d58\u8ff0\u90a3\u4e9b\u6b65\u9aa4\u4e86\u3002\u5982\u679c\u4f60\u4ecd\u7136\u89c9\u5f97\u8fd9\u5f88\u56f0\u96be\uff0c\u6211\u5efa\u8bae\u4f60\u590d\u4e60 \u4e4b\u524d\u7684\u6559\u7a0b \uff0c\u5e76\u4e14\u5728\u7ee7\u7eed\u5b66\u4e60\u4e4b\u524d\u5148\u628a\u7ec3\u4e60\u8fc7\u4e00\u904d\u3002 \u6211\u4eec\u9996\u5148\u9700\u8981\u4e00\u4e2a\u9876\u70b9\u7740\u8272\u5668\u6765\u7ed8\u5236\u7bb1\u5b50\u3002\u4e0e\u4e4b\u524d\u7684\u9876\u70b9\u7740\u8272\u5668\u76f8\u6bd4\uff0c\u5bb9\u5668\u7684\u9876\u70b9\u4f4d\u7f6e\u662f\u4fdd\u6301\u4e0d\u53d8\u7684\uff08\u867d\u7136\u8fd9\u4e00\u6b21\u6211\u4eec\u4e0d\u9700\u8981\u7eb9\u7406\u5750\u6807\u4e86\uff09\uff0c\u56e0\u6b64\u9876\u70b9\u7740\u8272\u5668\u4e2d\u6ca1\u6709\u65b0\u7684\u4ee3\u7801\u3002\u6211\u4eec\u5c06\u4f1a\u4f7f\u7528\u4e4b\u524d\u6559\u7a0b\u9876\u70b9\u7740\u8272\u5668\u7684\u7cbe\u7b80\u7248\uff1a #version 330 core layout (location = 0) in vec3 aPos; uniform mat4 model; uniform mat4 view; uniform mat4 projection; void main() { gl_Position = projection * view * model * vec4(aPos, 1.0); } \u8bb0\u5f97\u66f4\u65b0\u4f60\u7684\u9876\u70b9\u6570\u636e\u548c\u5c5e\u6027\u6307\u9488\u4f7f\u5176\u4e0e\u65b0\u7684\u9876\u70b9\u7740\u8272\u5668\u4fdd\u6301\u4e00\u81f4\uff08\u5f53\u7136\u4f60\u53ef\u4ee5\u7ee7\u7eed\u7559\u7740\u7eb9\u7406\u6570\u636e\u548c\u5c5e\u6027\u6307\u9488\u3002\u5728\u8fd9\u4e00\u8282\u4e2d\u6211\u4eec\u5c06\u4e0d\u4f1a\u7528\u5230\u5b83\u4eec\uff0c\u4f46\u6709\u4e00\u4e2a\u5168\u65b0\u7684\u5f00\u59cb\u4e5f\u4e0d\u662f\u4ec0\u4e48\u574f\u4e3b\u610f\uff09\u3002 \u56e0\u4e3a\u6211\u4eec\u8fd8\u8981\u521b\u5efa\u4e00\u4e2a\u8868\u793a\u706f\uff08\u5149\u6e90\uff09\u7684\u7acb\u65b9\u4f53\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u4e3a\u8fd9\u4e2a\u706f\u521b\u5efa\u4e00\u4e2a\u4e13\u95e8\u7684VAO\u3002\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u8ba9\u8fd9\u4e2a\u706f\u548c\u5176\u5b83\u7269\u4f53\u4f7f\u7528\u540c\u4e00\u4e2aVAO\uff0c\u7b80\u5355\u5730\u5bf9\u5b83\u7684 model \uff08\u6a21\u578b\uff09\u77e9\u9635\u505a\u4e00\u4e9b\u53d8\u6362\u5c31\u597d\u4e86\uff0c\u7136\u800c\u63a5\u4e0b\u6765\u7684\u6559\u7a0b\u4e2d\u6211\u4eec\u4f1a\u9891\u7e41\u5730\u5bf9\u9876\u70b9\u6570\u636e\u548c\u5c5e\u6027\u6307\u9488\u505a\u51fa\u4fee\u6539\uff0c\u6211\u4eec\u5e76\u4e0d\u60f3\u8ba9\u8fd9\u4e9b\u4fee\u6539\u5f71\u54cd\u5230\u706f\uff08\u6211\u4eec\u53ea\u5173\u5fc3\u706f\u7684\u9876\u70b9\u4f4d\u7f6e\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u6709\u5fc5\u8981\u4e3a\u706f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684VAO\u3002 unsigned int lightVAO; glGenVertexArrays(1, &lightVAO); glBindVertexArray(lightVAO); // \u53ea\u9700\u8981\u7ed1\u5b9aVBO\u4e0d\u7528\u518d\u6b21\u8bbe\u7f6eVBO\u7684\u6570\u636e\uff0c\u56e0\u4e3a\u7bb1\u5b50\u7684VBO\u6570\u636e\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u6b63\u786e\u7684\u7acb\u65b9\u4f53\u9876\u70b9\u6570\u636e glBindBuffer(GL_ARRAY_BUFFER, VBO); // \u8bbe\u7f6e\u706f\u7acb\u65b9\u4f53\u7684\u9876\u70b9\u5c5e\u6027\uff08\u5bf9\u6211\u4eec\u7684\u706f\u6765\u8bf4\u4ec5\u4ec5\u53ea\u6709\u4f4d\u7f6e\u6570\u636e\uff09 glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0); glEnableVertexAttribArray(0); \u8fd9\u6bb5\u4ee3\u7801\u5bf9\u4f60\u6765\u8bf4\u5e94\u8be5\u975e\u5e38\u76f4\u89c2\u3002\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u8868\u793a\u706f\u548c\u88ab\u7167\u7269\u4f53\u7bb1\u5b50\uff0c\u6211\u4eec\u53ea\u9700\u8981\u518d\u5b9a\u4e49\u4e00\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u5c31\u884c\u4e86\uff1a #version 330 core out vec4 FragColor; uniform vec3 objectColor; uniform vec3 lightColor; void main() { FragColor = vec4(lightColor * objectColor, 1.0); } \u8fd9\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u4eceuniform\u53d8\u91cf\u4e2d\u63a5\u53d7\u7269\u4f53\u7684\u989c\u8272\u548c\u5149\u6e90\u7684\u989c\u8272\u3002\u6b63\u5982\u672c\u8282\u4e00\u5f00\u59cb\u6240\u8ba8\u8bba\u7684\u90a3\u6837\uff0c\u6211\u4eec\u5c06\u5149\u6e90\u7684\u989c\u8272\u548c\u7269\u4f53\uff08\u53cd\u5c04\u7684\uff09\u989c\u8272\u76f8\u4e58\u3002\u8fd9\u4e2a\u7740\u8272\u5668\u7406\u89e3\u8d77\u6765\u5e94\u8be5\u5f88\u5bb9\u6613\u3002\u6211\u4eec\u628a\u7269\u4f53\u7684\u989c\u8272\u8bbe\u7f6e\u4e3a\u4e4b\u524d\u63d0\u5230\u7684\u73ca\u745a\u7ea2\u8272\uff0c\u5e76\u628a\u5149\u6e90\u8bbe\u7f6e\u4e3a\u767d\u8272\u3002 // \u5728\u6b64\u4e4b\u524d\u4e0d\u8981\u5fd8\u8bb0\u9996\u5148 use \u5bf9\u5e94\u7684\u7740\u8272\u5668\u7a0b\u5e8f\uff08\u6765\u8bbe\u5b9auniform\uff09 lightingShader.use(); lightingShader.setVec3(\"objectColor\", 1.0f, 0.5f, 0.31f); lightingShader.setVec3(\"lightColor\", 1.0f, 1.0f, 1.0f); \u8981\u6ce8\u610f\u7684\u662f\uff0c\u5f53\u6211\u4eec\u4fee\u6539\u9876\u70b9\u6216\u8005\u7247\u6bb5\u7740\u8272\u5668\u540e\uff0c\u706f\u7684\u4f4d\u7f6e\u6216\u989c\u8272\u4e5f\u4f1a\u968f\u4e4b\u6539\u53d8\uff0c\u8fd9\u5e76\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u6548\u679c\u3002\u6211\u4eec\u4e0d\u5e0c\u671b\u706f\u7684\u989c\u8272\u5728\u63a5\u4e0b\u6765\u7684\u6559\u7a0b\u4e2d\u56e0\u5149\u7167\u8ba1\u7b97\u7684\u7ed3\u679c\u800c\u53d7\u5230\u5f71\u54cd\uff0c\u800c\u662f\u5e0c\u671b\u5b83\u80fd\u591f\u4e0e\u5176\u5b83\u7684\u8ba1\u7b97\u5206\u79bb\u3002\u6211\u4eec\u5e0c\u671b\u706f\u4e00\u76f4\u4fdd\u6301\u660e\u4eae\uff0c\u4e0d\u53d7\u5176\u5b83\u989c\u8272\u53d8\u5316\u7684\u5f71\u54cd\uff08\u8fd9\u6837\u5b83\u624d\u66f4\u50cf\u662f\u4e00\u4e2a\u771f\u5b9e\u7684\u5149\u6e90\uff09\u3002 \u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u6807\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u706f\u7684\u7ed8\u5236\u521b\u5efa\u53e6\u5916\u7684\u4e00\u5957\u7740\u8272\u5668\uff0c\u4ece\u800c\u80fd\u4fdd\u8bc1\u5b83\u80fd\u591f\u5728\u5176\u5b83\u5149\u7167\u7740\u8272\u5668\u53d1\u751f\u6539\u53d8\u7684\u65f6\u5019\u4e0d\u53d7\u5f71\u54cd\u3002\u9876\u70b9\u7740\u8272\u5668\u4e0e\u6211\u4eec\u5f53\u524d\u7684\u9876\u70b9\u7740\u8272\u5668\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u76f4\u63a5\u628a\u73b0\u5728\u7684\u9876\u70b9\u7740\u8272\u5668\u7528\u5728\u706f\u4e0a\u3002\u706f\u7684\u7247\u6bb5\u7740\u8272\u5668\u7ed9\u706f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4e0d\u53d8\u7684\u5e38\u91cf\u767d\u8272\uff0c\u4fdd\u8bc1\u4e86\u706f\u7684\u989c\u8272\u4e00\u76f4\u662f\u4eae\u7684\uff1a #version 330 core out vec4 FragColor; void main() { FragColor = vec4(1.0); // \u5c06\u5411\u91cf\u7684\u56db\u4e2a\u5206\u91cf\u5168\u90e8\u8bbe\u7f6e\u4e3a1.0 } \u5f53\u6211\u4eec\u60f3\u8981\u7ed8\u5236\u6211\u4eec\u7684\u7269\u4f53\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u521a\u521a\u5b9a\u4e49\u7684\u5149\u7167\u7740\u8272\u5668\u6765\u7ed8\u5236\u7bb1\u5b50\uff08\u6216\u8005\u53ef\u80fd\u662f\u5176\u5b83\u7684\u7269\u4f53\uff09\u3002\u5f53\u6211\u4eec\u60f3\u8981\u7ed8\u5236\u706f\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u706f\u7684\u7740\u8272\u5668\u3002\u5728\u4e4b\u540e\u7684\u6559\u7a0b\u91cc\u6211\u4eec\u4f1a\u9010\u6b65\u66f4\u65b0\u8fd9\u4e2a\u5149\u7167\u7740\u8272\u5668\uff0c\u4ece\u800c\u80fd\u591f\u6162\u6162\u5730\u5b9e\u73b0\u66f4\u771f\u5b9e\u7684\u6548\u679c\u3002 \u4f7f\u7528\u8fd9\u4e2a\u706f\u7acb\u65b9\u4f53\u7684\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u8ba9\u6211\u4eec\u77e5\u9053\u5149\u6e90\u5728\u573a\u666f\u4e2d\u7684\u5177\u4f53\u4f4d\u7f6e\u3002\u6211\u4eec\u901a\u5e38\u5728\u573a\u666f\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u5149\u6e90\u7684\u4f4d\u7f6e\uff0c\u4f46\u8fd9\u53ea\u662f\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5b83\u5e76\u6ca1\u6709\u89c6\u89c9\u610f\u4e49\u3002\u4e3a\u4e86\u663e\u793a\u771f\u6b63\u7684\u706f\uff0c\u6211\u4eec\u5c06\u8868\u793a\u5149\u6e90\u7684\u7acb\u65b9\u4f53\u7ed8\u5236\u5728\u4e0e\u5149\u6e90\u76f8\u540c\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u6211\u4eec\u4e3a\u5b83\u65b0\u5efa\u7684\u7247\u6bb5\u7740\u8272\u5668\u6765\u7ed8\u5236\u5b83\uff0c\u8ba9\u5b83\u4e00\u76f4\u5904\u4e8e\u767d\u8272\u7684\u72b6\u6001\uff0c\u4e0d\u53d7\u573a\u666f\u4e2d\u7684\u5149\u7167\u5f71\u54cd\u3002 \u6211\u4eec\u58f0\u660e\u4e00\u4e2a\u5168\u5c40 vec3 \u53d8\u91cf\u6765\u8868\u793a\u5149\u6e90\u5728\u573a\u666f\u7684\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\uff1a glm::vec3 lightPos(1.2f, 1.0f, 2.0f); \u7136\u540e\u6211\u4eec\u628a\u706f\u4f4d\u79fb\u5230\u8fd9\u91cc\uff0c\u7136\u540e\u5c06\u5b83\u7f29\u5c0f\u4e00\u70b9\uff0c\u8ba9\u5b83\u4e0d\u90a3\u4e48\u660e\u663e\uff1a model = glm::mat4(); model = glm::translate(model, lightPos); model = glm::scale(model, glm::vec3(0.2f)); \u7ed8\u5236\u706f\u7acb\u65b9\u4f53\u7684\u4ee3\u7801\u5e94\u8be5\u4e0e\u4e0b\u9762\u7684\u7c7b\u4f3c\uff1a lampShader.use(); // \u8bbe\u7f6e\u6a21\u578b\u3001\u89c6\u56fe\u548c\u6295\u5f71\u77e9\u9635uniform ... // \u7ed8\u5236\u706f\u7acb\u65b9\u4f53\u5bf9\u8c61 glBindVertexArray(lightVAO); glDrawArrays(GL_TRIANGLES, 0, 36); \u8bf7\u628a\u4e0a\u8ff0\u7684\u6240\u6709\u4ee3\u7801\u7247\u6bb5\u653e\u5728\u4f60\u7a0b\u5e8f\u4e2d\u5408\u9002\u7684\u4f4d\u7f6e\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u6709\u4e00\u4e2a\u5e72\u51c0\u7684\u5149\u7167\u5b9e\u9a8c\u573a\u5730\u4e86\u3002\u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u8fd0\u884c\u6548\u679c\u5c06\u4f1a\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u6ca1\u4ec0\u4e48\u597d\u770b\u7684\u662f\u5417\uff1f\u4f46\u6211\u4fdd\u8bc1\u5728\u63a5\u4e0b\u6765\u7684\u6559\u7a0b\u4e2d\u5b83\u4f1a\u53d8\u5f97\u66f4\u52a0\u6709\u8da3\u3002 \u5982\u679c\u4f60\u89c9\u5f97\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u7247\u6bb5\u6574\u5408\u5230\u4e00\u8d77\u975e\u5e38\u56f0\u96be\uff0c\u53ef\u4ee5\u6765 \u8fd9\u91cc \u770b\u4e00\u4e0b\u6e90\u4ee3\u7801\uff0c\u5e76\u4ed4\u7ec6\u7814\u7a76\u6211\u7684\u4ee3\u7801\u548c\u6ce8\u91ca\u3002 \u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u5bf9\u989c\u8272\u6709\u4e00\u5b9a\u7684\u4e86\u89e3\u4e86\uff0c\u5e76\u4e14\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u573a\u666f\u4f9b\u6211\u4eec\u4e4b\u540e\u7ed8\u5236\u52a8\u611f\u7684\u5149\u7167\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u5165 \u4e0b\u4e00\u8282 \u8fdb\u884c\u5b66\u4e60\uff0c\u771f\u6b63\u7684\u9b54\u6cd5\u5373\u5c06\u5f00\u59cb\uff01","title":"\u521b\u5efa\u4e00\u4e2a\u5149\u7167\u573a\u666f"},{"location":"02%20Lighting/02%20Basic%20Lighting/","text":"\u57fa\u7840\u5149\u7167 \u539f\u6587 Basic Lighting \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django , Krasjet, Geequlim, BLumia \u6821\u5bf9 AoZhang \u73b0\u5b9e\u4e16\u754c\u7684\u5149\u7167\u662f\u6781\u5176\u590d\u6742\u7684\uff0c\u800c\u4e14\u4f1a\u53d7\u5230\u8bf8\u591a\u56e0\u7d20\u7684\u5f71\u54cd\uff0c\u8fd9\u662f\u6211\u4eec\u6709\u9650\u7684\u8ba1\u7b97\u80fd\u529b\u6240\u65e0\u6cd5\u6a21\u62df\u7684\u3002\u56e0\u6b64OpenGL\u7684\u5149\u7167\u4f7f\u7528\u7684\u662f\u7b80\u5316\u7684\u6a21\u578b\uff0c\u5bf9\u73b0\u5b9e\u7684\u60c5\u51b5\u8fdb\u884c\u8fd1\u4f3c\uff0c\u8fd9\u6837\u5904\u7406\u8d77\u6765\u4f1a\u66f4\u5bb9\u6613\u4e00\u4e9b\uff0c\u800c\u4e14\u770b\u8d77\u6765\u4e5f\u5dee\u4e0d\u591a\u4e00\u6837\u3002\u8fd9\u4e9b\u5149\u7167\u6a21\u578b\u90fd\u662f\u57fa\u4e8e\u6211\u4eec\u5bf9\u5149\u7684\u7269\u7406\u7279\u6027\u7684\u7406\u89e3\u3002\u5176\u4e2d\u4e00\u4e2a\u6a21\u578b\u88ab\u79f0\u4e3a \u98ce\u6c0f\u5149\u7167\u6a21\u578b (Phong Lighting Model)\u3002\u98ce\u6c0f\u5149\u7167\u6a21\u578b\u7684\u4e3b\u8981\u7ed3\u6784\u75313\u4e2a\u5206\u91cf\u7ec4\u6210\uff1a\u73af\u5883(Ambient)\u3001\u6f2b\u53cd\u5c04(Diffuse)\u548c\u955c\u9762(Specular)\u5149\u7167\u3002\u4e0b\u9762\u8fd9\u5f20\u56fe\u5c55\u793a\u4e86\u8fd9\u4e9b\u5149\u7167\u5206\u91cf\u770b\u8d77\u6765\u7684\u6837\u5b50\uff1a \u73af\u5883\u5149\u7167 (Ambient Lighting)\uff1a\u5373\u4f7f\u5728\u9ed1\u6697\u7684\u60c5\u51b5\u4e0b\uff0c\u4e16\u754c\u4e0a\u901a\u5e38\u4e5f\u4ecd\u7136\u6709\u4e00\u4e9b\u5149\u4eae\uff08\u6708\u4eae\u3001\u8fdc\u5904\u7684\u5149\uff09\uff0c\u6240\u4ee5\u7269\u4f53\u51e0\u4e4e\u6c38\u8fdc\u4e0d\u4f1a\u662f\u5b8c\u5168\u9ed1\u6697\u7684\u3002\u4e3a\u4e86\u6a21\u62df\u8fd9\u4e2a\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u4e00\u4e2a\u73af\u5883\u5149\u7167\u5e38\u91cf\uff0c\u5b83\u6c38\u8fdc\u4f1a\u7ed9\u7269\u4f53\u4e00\u4e9b\u989c\u8272\u3002 \u6f2b\u53cd\u5c04\u5149\u7167 (Diffuse Lighting)\uff1a\u6a21\u62df\u5149\u6e90\u5bf9\u7269\u4f53\u7684\u65b9\u5411\u6027\u5f71\u54cd(Directional Impact)\u3002\u5b83\u662f\u98ce\u6c0f\u5149\u7167\u6a21\u578b\u4e2d\u89c6\u89c9\u4e0a\u6700\u663e\u8457\u7684\u5206\u91cf\u3002\u7269\u4f53\u7684\u67d0\u4e00\u90e8\u5206\u8d8a\u662f\u6b63\u5bf9\u7740\u5149\u6e90\uff0c\u5b83\u5c31\u4f1a\u8d8a\u4eae\u3002 \u955c\u9762\u5149\u7167 (Specular Lighting)\uff1a\u6a21\u62df\u6709\u5149\u6cfd\u7269\u4f53\u4e0a\u9762\u51fa\u73b0\u7684\u4eae\u70b9\u3002\u955c\u9762\u5149\u7167\u7684\u989c\u8272\u76f8\u6bd4\u4e8e\u7269\u4f53\u7684\u989c\u8272\u4f1a\u66f4\u503e\u5411\u4e8e\u5149\u7684\u989c\u8272\u3002 \u4e3a\u4e86\u521b\u5efa\u6709\u8da3\u7684\u89c6\u89c9\u573a\u666f\uff0c\u6211\u4eec\u5e0c\u671b\u6a21\u62df\u81f3\u5c11\u8fd9\u4e09\u79cd\u5149\u7167\u5206\u91cf\u3002\u6211\u4eec\u5c06\u4ee5\u6700\u7b80\u5355\u7684\u4e00\u4e2a\u5f00\u59cb\uff1a \u73af\u5883\u5149\u7167 \u3002 \u73af\u5883\u5149\u7167 \u5149\u901a\u5e38\u90fd\u4e0d\u662f\u6765\u81ea\u4e8e\u540c\u4e00\u4e2a\u5149\u6e90\uff0c\u800c\u662f\u6765\u81ea\u4e8e\u6211\u4eec\u5468\u56f4\u5206\u6563\u7684\u5f88\u591a\u5149\u6e90\uff0c\u5373\u4f7f\u5b83\u4eec\u53ef\u80fd\u5e76\u4e0d\u662f\u90a3\u4e48\u663e\u800c\u6613\u89c1\u3002\u5149\u7684\u4e00\u4e2a\u5c5e\u6027\u662f\uff0c\u5b83\u53ef\u4ee5\u5411\u5f88\u591a\u65b9\u5411\u53d1\u6563\u5e76\u53cd\u5f39\uff0c\u4ece\u800c\u80fd\u591f\u5230\u8fbe\u4e0d\u662f\u975e\u5e38\u76f4\u63a5\u4e34\u8fd1\u7684\u70b9\u3002\u6240\u4ee5\uff0c\u5149\u80fd\u591f\u5728\u5176\u5b83\u7684\u8868\u9762\u4e0a \u53cd\u5c04 \uff0c\u5bf9\u4e00\u4e2a\u7269\u4f53\u4ea7\u751f\u95f4\u63a5\u7684\u5f71\u54cd\u3002\u8003\u8651\u5230\u8fd9\u79cd\u60c5\u51b5\u7684\u7b97\u6cd5\u53eb\u505a \u5168\u5c40\u7167\u660e (Global Illumination)\u7b97\u6cd5\uff0c\u4f46\u662f\u8fd9\u79cd\u7b97\u6cd5\u65e2\u5f00\u9500\u9ad8\u6602\u53c8\u6781\u5176\u590d\u6742\u3002 \u7531\u4e8e\u6211\u4eec\u73b0\u5728\u5bf9\u90a3\u79cd\u53c8\u590d\u6742\u53c8\u5f00\u9500\u9ad8\u6602\u7684\u7b97\u6cd5\u4e0d\u662f\u5f88\u611f\u5174\u8da3\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u4f1a\u5148\u4f7f\u7528\u4e00\u4e2a\u7b80\u5316\u7684\u5168\u5c40\u7167\u660e\u6a21\u578b\uff0c\u5373 \u73af\u5883\u5149\u7167 \u3002\u6b63\u5982\u4f60\u5728\u4e0a\u4e00\u8282\u6240\u5b66\u5230\u7684\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u5f88\u5c0f\u7684\u5e38\u91cf\uff08\u5149\u7167\uff09\u989c\u8272\uff0c\u6dfb\u52a0\u5230\u7269\u4f53\u7247\u6bb5\u7684\u6700\u7ec8\u989c\u8272\u4e2d\uff0c\u8fd9\u6837\u5b50\u7684\u8bdd\u5373\u4fbf\u573a\u666f\u4e2d\u6ca1\u6709\u76f4\u63a5\u7684\u5149\u6e90\u4e5f\u80fd\u770b\u8d77\u6765\u5b58\u5728\u6709\u4e00\u4e9b\u53d1\u6563\u7684\u5149\u3002 \u628a\u73af\u5883\u5149\u7167\u6dfb\u52a0\u5230\u573a\u666f\u91cc\u975e\u5e38\u7b80\u5355\u3002\u6211\u4eec\u7528\u5149\u7684\u989c\u8272\u4e58\u4ee5\u4e00\u4e2a\u5f88\u5c0f\u7684\u5e38\u91cf\u73af\u5883\u56e0\u5b50\uff0c\u518d\u4e58\u4ee5\u7269\u4f53\u7684\u989c\u8272\uff0c\u7136\u540e\u5c06\u6700\u7ec8\u7ed3\u679c\u4f5c\u4e3a\u7247\u6bb5\u7684\u989c\u8272\uff1a void main() { float ambientStrength = 0.1; vec3 ambient = ambientStrength * lightColor; vec3 result = ambient * objectColor; FragColor = vec4(result, 1.0); } \u5982\u679c\u4f60\u73b0\u5728\u8fd0\u884c\u4f60\u7684\u7a0b\u5e8f\uff0c\u4f60\u4f1a\u6ce8\u610f\u5230\u98ce\u6c0f\u5149\u7167\u7684\u7b2c\u4e00\u4e2a\u9636\u6bb5\u5df2\u7ecf\u5e94\u7528\u5230\u4f60\u7684\u7269\u4f53\u4e0a\u4e86\u3002\u8fd9\u4e2a\u7269\u4f53\u975e\u5e38\u6697\uff0c\u4f46\u7531\u4e8e\u5e94\u7528\u4e86\u73af\u5883\u5149\u7167\uff08\u6ce8\u610f\u5149\u6e90\u7acb\u65b9\u4f53\u6ca1\u53d7\u5f71\u54cd\u662f\u56e0\u4e3a\u6211\u4eec\u5bf9\u5b83\u4f7f\u7528\u4e86\u53e6\u4e00\u4e2a\u7740\u8272\u5668\uff09\uff0c\u4e5f\u4e0d\u662f\u5b8c\u5168\u9ed1\u7684\u3002\u5b83\u770b\u8d77\u6765\u5e94\u8be5\u50cf\u8fd9\u6837\uff1a \u6f2b\u53cd\u5c04\u5149\u7167 \u73af\u5883\u5149\u7167\u672c\u8eab\u4e0d\u80fd\u63d0\u4f9b\u6700\u6709\u8da3\u7684\u7ed3\u679c\uff0c\u4f46\u662f\u6f2b\u53cd\u5c04\u5149\u7167\u5c31\u80fd\u5f00\u59cb\u5bf9\u7269\u4f53\u4ea7\u751f\u663e\u8457\u7684\u89c6\u89c9\u5f71\u54cd\u4e86\u3002\u6f2b\u53cd\u5c04\u5149\u7167\u4f7f\u7269\u4f53\u4e0a\u4e0e\u5149\u7ebf\u65b9\u5411\u8d8a\u63a5\u8fd1\u7684\u7247\u6bb5\u80fd\u4ece\u5149\u6e90\u5904\u83b7\u5f97\u66f4\u591a\u7684\u4eae\u5ea6\u3002\u4e3a\u4e86\u80fd\u591f\u66f4\u597d\u7684\u7406\u89e3\u6f2b\u53cd\u5c04\u5149\u7167\uff0c\u8bf7\u770b\u4e0b\u56fe\uff1a \u56fe\u5de6\u4e0a\u65b9\u6709\u4e00\u4e2a\u5149\u6e90\uff0c\u5b83\u6240\u53d1\u51fa\u7684\u5149\u7ebf\u843d\u5728\u7269\u4f53\u7684\u4e00\u4e2a\u7247\u6bb5\u4e0a\u3002\u6211\u4eec\u9700\u8981\u6d4b\u91cf\u8fd9\u4e2a\u5149\u7ebf\u662f\u4ee5\u4ec0\u4e48\u89d2\u5ea6\u63a5\u89e6\u5230\u8fd9\u4e2a\u7247\u6bb5\u7684\u3002\u5982\u679c\u5149\u7ebf\u5782\u76f4\u4e8e\u7269\u4f53\u8868\u9762\uff0c\u8fd9\u675f\u5149\u5bf9\u7269\u4f53\u7684\u5f71\u54cd\u4f1a\u6700\u5927\u5316\uff08\u8bd1\u6ce8\uff1a\u66f4\u4eae\uff09\u3002\u4e3a\u4e86\u6d4b\u91cf\u5149\u7ebf\u548c\u7247\u6bb5\u7684\u89d2\u5ea6\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u53eb\u505a \u6cd5\u5411\u91cf (Normal Vector)\u7684\u4e1c\u897f\uff0c\u5b83\u662f\u5782\u76f4\u4e8e\u7247\u6bb5\u8868\u9762\u7684\u4e00\u4e2a\u5411\u91cf\uff08\u8fd9\u91cc\u4ee5\u9ec4\u8272\u7bad\u5934\u8868\u793a\uff09\uff0c\u6211\u4eec\u5728\u540e\u9762\u518d\u8bb2\u8fd9\u4e2a\u4e1c\u897f\u3002\u8fd9\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u89d2\u5ea6\u5f88\u5bb9\u6613\u5c31\u80fd\u591f\u901a\u8fc7\u70b9\u4e58\u8ba1\u7b97\u51fa\u6765\u3002 \u4f60\u53ef\u80fd\u8bb0\u5f97\u5728 \u53d8\u6362 \u90a3\u4e00\u8282\u6559\u7a0b\u91cc\uff0c\u6211\u4eec\u77e5\u9053\u4e24\u4e2a\u5355\u4f4d\u5411\u91cf\u7684\u5939\u89d2\u8d8a\u5c0f\uff0c\u5b83\u4eec\u70b9\u4e58\u7684\u7ed3\u679c\u8d8a\u503e\u5411\u4e8e1\u3002\u5f53\u4e24\u4e2a\u5411\u91cf\u7684\u5939\u89d2\u4e3a90\u5ea6\u7684\u65f6\u5019\uff0c\u70b9\u4e58\u4f1a\u53d8\u4e3a0\u3002\u8fd9\u540c\u6837\u9002\u7528\u4e8e \\theta \uff0c \\theta \u8d8a\u5927\uff0c\u5149\u5bf9\u7247\u6bb5\u989c\u8272\u7684\u5f71\u54cd\u5c31\u5e94\u8be5\u8d8a\u5c0f\u3002 Important \u6ce8\u610f\uff0c\u4e3a\u4e86\uff08\u53ea\uff09\u5f97\u5230\u4e24\u4e2a\u5411\u91cf\u5939\u89d2\u7684\u4f59\u5f26\u503c\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f\u5355\u4f4d\u5411\u91cf\uff08\u957f\u5ea6\u4e3a1\u7684\u5411\u91cf\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u786e\u4fdd\u6240\u6709\u7684\u5411\u91cf\u90fd\u662f\u6807\u51c6\u5316\u7684\uff0c\u5426\u5219\u70b9\u4e58\u8fd4\u56de\u7684\u5c31\u4e0d\u4ec5\u4ec5\u662f\u4f59\u5f26\u503c\u4e86\uff08\u89c1 \u53d8\u6362 \uff09\u3002 \u70b9\u4e58\u8fd4\u56de\u4e00\u4e2a\u6807\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u8ba1\u7b97\u5149\u7ebf\u5bf9\u7247\u6bb5\u989c\u8272\u7684\u5f71\u54cd\u3002\u4e0d\u540c\u7247\u6bb5\u671d\u5411\u5149\u6e90\u7684\u65b9\u5411\u7684\u4e0d\u540c\uff0c\u8fd9\u4e9b\u7247\u6bb5\u88ab\u7167\u4eae\u7684\u60c5\u51b5\u4e5f\u4e0d\u540c\u3002 \u6240\u4ee5\uff0c\u8ba1\u7b97\u6f2b\u53cd\u5c04\u5149\u7167\u9700\u8981\u4ec0\u4e48\uff1f \u6cd5\u5411\u91cf\uff1a\u4e00\u4e2a\u5782\u76f4\u4e8e\u9876\u70b9\u8868\u9762\u7684\u5411\u91cf\u3002 \u5b9a\u5411\u7684\u5149\u7ebf\uff1a\u4f5c\u4e3a\u5149\u6e90\u7684\u4f4d\u7f6e\u4e0e\u7247\u6bb5\u7684\u4f4d\u7f6e\u4e4b\u95f4\u5411\u91cf\u5dee\u7684\u65b9\u5411\u5411\u91cf\u3002\u4e3a\u4e86\u8ba1\u7b97\u8fd9\u4e2a\u5149\u7ebf\uff0c\u6211\u4eec\u9700\u8981\u5149\u7684\u4f4d\u7f6e\u5411\u91cf\u548c\u7247\u6bb5\u7684\u4f4d\u7f6e\u5411\u91cf\u3002 \u6cd5\u5411\u91cf \u6cd5\u5411\u91cf\u662f\u4e00\u4e2a\u5782\u76f4\u4e8e\u9876\u70b9\u8868\u9762\u7684\uff08\u5355\u4f4d\uff09\u5411\u91cf\u3002\u7531\u4e8e\u9876\u70b9\u672c\u8eab\u5e76\u6ca1\u6709\u8868\u9762\uff08\u5b83\u53ea\u662f\u7a7a\u95f4\u4e2d\u4e00\u4e2a\u72ec\u7acb\u7684\u70b9\uff09\uff0c\u6211\u4eec\u5229\u7528\u5b83\u5468\u56f4\u7684\u9876\u70b9\u6765\u8ba1\u7b97\u51fa\u8fd9\u4e2a\u9876\u70b9\u7684\u8868\u9762\u3002\u6211\u4eec\u80fd\u591f\u4f7f\u7528\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u4f7f\u7528\u53c9\u4e58\u5bf9\u7acb\u65b9\u4f53\u6240\u6709\u7684\u9876\u70b9\u8ba1\u7b97\u6cd5\u5411\u91cf\uff0c\u4f46\u662f\u7531\u4e8e3D\u7acb\u65b9\u4f53\u4e0d\u662f\u4e00\u4e2a\u590d\u6742\u7684\u5f62\u72b6\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u628a\u6cd5\u7ebf\u6570\u636e\u624b\u5de5\u6dfb\u52a0\u5230\u9876\u70b9\u6570\u636e\u4e2d\u3002\u66f4\u65b0\u540e\u7684\u9876\u70b9\u6570\u636e\u6570\u7ec4\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u3002\u8bd5\u7740\u53bb\u60f3\u8c61\u4e00\u4e0b\uff0c\u8fd9\u4e9b\u6cd5\u5411\u91cf\u771f\u7684\u662f\u5782\u76f4\u4e8e\u7acb\u65b9\u4f53\u5404\u4e2a\u5e73\u9762\u7684\u8868\u9762\u7684\uff08\u4e00\u4e2a\u7acb\u65b9\u4f53\u75316\u4e2a\u5e73\u9762\u7ec4\u6210\uff09\u3002 \u7531\u4e8e\u6211\u4eec\u5411\u9876\u70b9\u6570\u7ec4\u6dfb\u52a0\u4e86\u989d\u5916\u7684\u6570\u636e\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u66f4\u65b0\u5149\u7167\u7684\u9876\u70b9\u7740\u8272\u5668\uff1a #version 330 core layout (location = 0) in vec3 aPos; layout (location = 1) in vec3 aNormal; ... \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5411\u6bcf\u4e2a\u9876\u70b9\u6dfb\u52a0\u4e86\u4e00\u4e2a\u6cd5\u5411\u91cf\u5e76\u66f4\u65b0\u4e86\u9876\u70b9\u7740\u8272\u5668\uff0c\u6211\u4eec\u8fd8\u8981\u66f4\u65b0\u9876\u70b9\u5c5e\u6027\u6307\u9488\u3002\u6ce8\u610f\uff0c\u706f\u4f7f\u7528\u540c\u6837\u7684\u9876\u70b9\u6570\u7ec4\u4f5c\u4e3a\u5b83\u7684\u9876\u70b9\u6570\u636e\uff0c\u7136\u800c\u706f\u7684\u7740\u8272\u5668\u5e76\u6ca1\u6709\u4f7f\u7528\u65b0\u6dfb\u52a0\u7684\u6cd5\u5411\u91cf\u3002\u6211\u4eec\u4e0d\u9700\u8981\u66f4\u65b0\u706f\u7684\u7740\u8272\u5668\u6216\u8005\u662f\u5c5e\u6027\u7684\u914d\u7f6e\uff0c\u4f46\u662f\u6211\u4eec\u5fc5\u987b\u81f3\u5c11\u4fee\u6539\u4e00\u4e0b\u9876\u70b9\u5c5e\u6027\u6307\u9488\u6765\u9002\u5e94\u65b0\u7684\u9876\u70b9\u6570\u7ec4\u7684\u5927\u5c0f\uff1a glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 6 * sizeof(float), (void*)0); glEnableVertexAttribArray(0); \u6211\u4eec\u53ea\u60f3\u4f7f\u7528\u6bcf\u4e2a\u9876\u70b9\u7684\u524d\u4e09\u4e2afloat\uff0c\u5e76\u4e14\u5ffd\u7565\u540e\u4e09\u4e2afloat\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u628a \u6b65\u957f \u53c2\u6570\u6539\u6210 float \u5927\u5c0f\u76846\u500d\u5c31\u884c\u4e86\u3002 Important \u867d\u7136\u5bf9\u706f\u7684\u7740\u8272\u5668\u4f7f\u7528\u4e0d\u80fd\u5b8c\u5168\u5229\u7528\u7684\u9876\u70b9\u6570\u636e\u770b\u8d77\u6765\u4e0d\u662f\u90a3\u4e48\u9ad8\u6548\uff0c\u4f46\u8fd9\u4e9b\u9876\u70b9\u6570\u636e\u5df2\u7ecf\u4ece\u7bb1\u5b50\u5bf9\u8c61\u8f7d\u5165\u540e\u5f00\u59cb\u5c31\u50a8\u5b58\u5728GPU\u7684\u5185\u5b58\u91cc\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u50a8\u5b58\u65b0\u6570\u636e\u5230GPU\u5185\u5b58\u4e2d\u3002\u8fd9\u5b9e\u9645\u4e0a\u6bd4\u7ed9\u706f\u4e13\u95e8\u5206\u914d\u4e00\u4e2a\u65b0\u7684VBO\u66f4\u9ad8\u6548\u4e86\u3002 \u6240\u6709\u5149\u7167\u7684\u8ba1\u7b97\u90fd\u662f\u5728\u7247\u6bb5\u7740\u8272\u5668\u91cc\u8fdb\u884c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06\u6cd5\u5411\u91cf\u7531\u9876\u70b9\u7740\u8272\u5668\u4f20\u9012\u5230\u7247\u6bb5\u7740\u8272\u5668\u3002\u6211\u4eec\u8fd9\u4e48\u505a\uff1a out vec3 Normal; void main() { gl_Position = projection * view * model * vec4(aPos, 1.0); Normal = aNormal; } \u63a5\u4e0b\u6765\uff0c\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u5b9a\u4e49\u76f8\u5e94\u7684\u8f93\u5165\u53d8\u91cf\uff1a in vec3 Normal; \u8ba1\u7b97\u6f2b\u53cd\u5c04\u5149\u7167 \u6211\u4eec\u73b0\u5728\u5bf9\u6bcf\u4e2a\u9876\u70b9\u90fd\u6709\u4e86\u6cd5\u5411\u91cf\uff0c\u4f46\u662f\u6211\u4eec\u4ecd\u7136\u9700\u8981\u5149\u6e90\u7684\u4f4d\u7f6e\u5411\u91cf\u548c\u7247\u6bb5\u7684\u4f4d\u7f6e\u5411\u91cf\u3002\u7531\u4e8e\u5149\u6e90\u7684\u4f4d\u7f6e\u662f\u4e00\u4e2a\u9759\u6001\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u628a\u5b83\u58f0\u660e\u4e3auniform\uff1a uniform vec3 lightPos; \u7136\u540e\u5728\u6e32\u67d3\u5faa\u73af\u4e2d\uff08\u6e32\u67d3\u5faa\u73af\u7684\u5916\u9762\u4e5f\u53ef\u4ee5\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u6539\u53d8\uff09\u66f4\u65b0uniform\u3002\u6211\u4eec\u4f7f\u7528\u5728\u524d\u9762\u58f0\u660e\u7684 lightPos \u5411\u91cf\u4f5c\u4e3a\u5149\u6e90\u4f4d\u7f6e\uff1a lightingShader.setVec3(\"lightPos\", lightPos); \u6700\u540e\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u7247\u6bb5\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u4f1a\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\u8fdb\u884c\u6240\u6709\u7684\u5149\u7167\u8ba1\u7b97\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u9876\u70b9\u4f4d\u7f6e\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u628a\u9876\u70b9\u4f4d\u7f6e\u5c5e\u6027\u4e58\u4ee5\u6a21\u578b\u77e9\u9635\uff08\u4e0d\u662f\u89c2\u5bdf\u548c\u6295\u5f71\u77e9\u9635\uff09\u6765\u628a\u5b83\u53d8\u6362\u5230\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u3002\u8fd9\u4e2a\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5f88\u5bb9\u6613\u5b8c\u6210\uff0c\u6240\u4ee5\u6211\u4eec\u58f0\u660e\u4e00\u4e2a\u8f93\u51fa\u53d8\u91cf\uff0c\u5e76\u8ba1\u7b97\u5b83\u7684\u4e16\u754c\u7a7a\u95f4\u5750\u6807\uff1a out vec3 FragPos; out vec3 Normal; void main() { gl_Position = projection * view * model * vec4(aPos, 1.0); FragPos = vec3(model * vec4(aPos, 1.0)); Normal = aNormal; } \u6700\u540e\uff0c\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u6dfb\u52a0\u76f8\u5e94\u7684\u8f93\u5165\u53d8\u91cf\u3002 in vec3 FragPos; \u8fd9\u4e2ain\u7c7b\u578b\u53d8\u91cf\u5c06\u88ab\u63d2\u5165\u4e09\u89d2\u5f62\u76843\u7ef4\u4e16\u754c\u4f4d\u7f6e\u5411\u91cf\u503c\uff0c\u5f62\u6210FragPos\u5411\u91cf\uff0c\u5373\u6bcf\u4e2a\u7247\u6bb5\u7684\u4e16\u754c\u4f4d\u7f6e\u3002\u73b0\u5728\uff0c\u6240\u6709\u9700\u8981\u7684\u53d8\u91cf\u90fd\u8bbe\u7f6e\u597d\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u6dfb\u52a0\u5149\u7167\u8ba1\u7b97\u4e86\u3002 \u6211\u4eec\u9700\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u8ba1\u7b97\u5149\u6e90\u548c\u7247\u6bb5\u4f4d\u7f6e\u4e4b\u95f4\u7684\u65b9\u5411\u5411\u91cf\u3002\u524d\u9762\u63d0\u5230\uff0c\u5149\u7684\u65b9\u5411\u5411\u91cf\u662f\u5149\u6e90\u4f4d\u7f6e\u5411\u91cf\u4e0e\u7247\u6bb5\u4f4d\u7f6e\u5411\u91cf\u4e4b\u95f4\u7684\u5411\u91cf\u5dee\u3002\u4f60\u53ef\u80fd\u8bb0\u5f97\u5728 \u53d8\u6362 \u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u80fd\u591f\u7b80\u5355\u5730\u901a\u8fc7\u8ba9\u4e24\u4e2a\u5411\u91cf\u76f8\u51cf\u7684\u65b9\u5f0f\u8ba1\u7b97\u5411\u91cf\u5dee\u3002\u6211\u4eec\u540c\u6837\u5e0c\u671b\u786e\u4fdd\u6240\u6709\u76f8\u5173\u5411\u91cf\u6700\u540e\u90fd\u8f6c\u6362\u4e3a\u5355\u4f4d\u5411\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u6cd5\u7ebf\u548c\u6700\u7ec8\u7684\u65b9\u5411\u5411\u91cf\u90fd\u8fdb\u884c\u6807\u51c6\u5316\uff1a vec3 norm = normalize(Normal); vec3 lightDir = normalize(lightPos - FragPos); Important \u5f53\u8ba1\u7b97\u5149\u7167\u65f6\u6211\u4eec\u901a\u5e38\u4e0d\u5173\u5fc3\u4e00\u4e2a\u5411\u91cf\u7684\u6a21\u957f\u6216\u5b83\u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u5b83\u4eec\u7684\u65b9\u5411\u3002\u6240\u4ee5\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u8ba1\u7b97\u90fd\u4f7f\u7528\u5355\u4f4d\u5411\u91cf\u5b8c\u6210\uff0c\u56e0\u4e3a\u8fd9\u7b80\u5316\u4e86\u5927\u90e8\u5206\u7684\u8ba1\u7b97\uff08\u6bd4\u5982\u70b9\u4e58\uff09\u3002\u6240\u4ee5\u5f53\u8fdb\u884c\u5149\u7167\u8ba1\u7b97\u65f6\uff0c\u786e\u4fdd\u4f60\u603b\u662f\u5bf9\u76f8\u5173\u5411\u91cf\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u6765\u4fdd\u8bc1\u5b83\u4eec\u662f\u771f\u6b63\u5730\u5355\u4f4d\u5411\u91cf\u3002\u5fd8\u8bb0\u5bf9\u5411\u91cf\u8fdb\u884c\u6807\u51c6\u5316\u662f\u4e00\u4e2a\u5341\u5206\u5e38\u89c1\u7684\u9519\u8bef\u3002 \u4e0b\u4e00\u6b65\uff0c\u6211\u4eec\u5bf9 norm \u548c lightDir \u5411\u91cf\u8fdb\u884c\u70b9\u4e58\uff0c\u8ba1\u7b97\u5149\u6e90\u5bf9\u5f53\u524d\u7247\u6bb5\u5b9e\u9645\u7684\u6f2b\u53cd\u5c04\u5f71\u54cd\u3002\u7ed3\u679c\u503c\u518d\u4e58\u4ee5\u5149\u7684\u989c\u8272\uff0c\u5f97\u5230\u6f2b\u53cd\u5c04\u5206\u91cf\u3002\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u89d2\u5ea6\u8d8a\u5927\uff0c\u6f2b\u53cd\u5c04\u5206\u91cf\u5c31\u4f1a\u8d8a\u5c0f\uff1a float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = diff * lightColor; \u5982\u679c\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u89d2\u5ea6\u5927\u4e8e90\u5ea6\uff0c\u70b9\u4e58\u7684\u7ed3\u679c\u5c31\u4f1a\u53d8\u6210\u8d1f\u6570\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u6f2b\u53cd\u5c04\u5206\u91cf\u53d8\u4e3a\u8d1f\u6570\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u4f7f\u7528 max \u51fd\u6570\u8fd4\u56de\u4e24\u4e2a\u53c2\u6570\u4e4b\u95f4\u8f83\u5927\u7684\u53c2\u6570\uff0c\u4ece\u800c\u4fdd\u8bc1\u6f2b\u53cd\u5c04\u5206\u91cf\u4e0d\u4f1a\u53d8\u6210\u8d1f\u6570\u3002\u8d1f\u6570\u989c\u8272\u7684\u5149\u7167\u662f\u6ca1\u6709\u5b9a\u4e49\u7684\uff0c\u6240\u4ee5\u6700\u597d\u907f\u514d\u5b83\uff0c\u9664\u975e\u4f60\u662f\u90a3\u79cd\u53e4\u602a\u7684\u827a\u672f\u5bb6\u3002 \u73b0\u5728\u6211\u4eec\u6709\u4e86\u73af\u5883\u5149\u5206\u91cf\u548c\u6f2b\u53cd\u5c04\u5206\u91cf\uff0c\u6211\u4eec\u628a\u5b83\u4eec\u76f8\u52a0\uff0c\u7136\u540e\u628a\u7ed3\u679c\u4e58\u4ee5\u7269\u4f53\u7684\u989c\u8272\uff0c\u6765\u83b7\u5f97\u7247\u6bb5\u6700\u540e\u7684\u8f93\u51fa\u989c\u8272\u3002 vec3 result = (ambient + diffuse) * objectColor; FragColor = vec4(result, 1.0); \u5982\u679c\u4f60\u7684\u5e94\u7528(\u548c\u7740\u8272\u5668)\u7f16\u8bd1\u6210\u529f\u4e86\uff0c\u4f60\u53ef\u80fd\u770b\u5230\u7c7b\u4f3c\u7684\u8f93\u51fa\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\u4f7f\u7528\u4e86\u6f2b\u53cd\u5c04\u5149\u7167\uff0c\u7acb\u65b9\u4f53\u770b\u8d77\u6765\u5c31\u771f\u7684\u50cf\u4e2a\u7acb\u65b9\u4f53\u4e86\u3002\u5c1d\u8bd5\u5728\u4f60\u7684\u8111\u4e2d\u60f3\u8c61\u4e00\u4e0b\u6cd5\u5411\u91cf\uff0c\u5e76\u5728\u7acb\u65b9\u4f53\u5468\u56f4\u79fb\u52a8\uff0c\u6ce8\u610f\u89c2\u5bdf\u6cd5\u5411\u91cf\u548c\u5149\u7684\u65b9\u5411\u5411\u91cf\u4e4b\u95f4\u7684\u5939\u89d2\u8d8a\u5927\uff0c\u7247\u6bb5\u5c31\u4f1a\u8d8a\u6697\u3002 \u5982\u679c\u4f60\u5728\u54ea\u5361\u4f4f\u4e86\uff0c\u53ef\u4ee5\u5728 \u8fd9\u91cc \u5bf9\u6bd4\u4e00\u4e0b\u5b8c\u6574\u7684\u6e90\u4ee3\u7801\u3002 \u6700\u540e\u4e00\u4ef6\u4e8b \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u628a\u6cd5\u5411\u91cf\u4ece\u9876\u70b9\u7740\u8272\u5668\u4f20\u5230\u4e86\u7247\u6bb5\u7740\u8272\u5668\u3002\u53ef\u662f\uff0c\u76ee\u524d\u7247\u6bb5\u7740\u8272\u5668\u91cc\u7684\u8ba1\u7b97\u90fd\u662f\u5728\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u4e2d\u8fdb\u884c\u7684\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u662f\u4e0d\u662f\u5e94\u8be5\u628a\u6cd5\u5411\u91cf\u4e5f\u8f6c\u6362\u4e3a\u4e16\u754c\u7a7a\u95f4\u5750\u6807\uff1f\u57fa\u672c\u6b63\u786e\uff0c\u4f46\u662f\u8fd9\u4e0d\u662f\u7b80\u5355\u5730\u628a\u5b83\u4e58\u4ee5\u4e00\u4e2a\u6a21\u578b\u77e9\u9635\u5c31\u80fd\u641e\u5b9a\u7684\u3002 \u9996\u5148\uff0c\u6cd5\u5411\u91cf\u53ea\u662f\u4e00\u4e2a\u65b9\u5411\u5411\u91cf\uff0c\u4e0d\u80fd\u8868\u8fbe\u7a7a\u95f4\u4e2d\u7684\u7279\u5b9a\u4f4d\u7f6e\u3002\u540c\u65f6\uff0c\u6cd5\u5411\u91cf\u6ca1\u6709\u9f50\u6b21\u5750\u6807\uff08\u9876\u70b9\u4f4d\u7f6e\u4e2d\u7684w\u5206\u91cf\uff09\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4f4d\u79fb\u4e0d\u5e94\u8be5\u5f71\u54cd\u5230\u6cd5\u5411\u91cf\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u6253\u7b97\u628a\u6cd5\u5411\u91cf\u4e58\u4ee5\u4e00\u4e2a\u6a21\u578b\u77e9\u9635\uff0c\u6211\u4eec\u5c31\u8981\u4ece\u77e9\u9635\u4e2d\u79fb\u9664\u4f4d\u79fb\u90e8\u5206\uff0c\u53ea\u9009\u7528\u6a21\u578b\u77e9\u9635\u5de6\u4e0a\u89d23\u00d73\u7684\u77e9\u9635\uff08\u6ce8\u610f\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u628a\u6cd5\u5411\u91cf\u7684w\u5206\u91cf\u8bbe\u7f6e\u4e3a0\uff0c\u518d\u4e58\u4ee54\u00d74\u77e9\u9635\uff1b\u8fd9\u540c\u6837\u53ef\u4ee5\u79fb\u9664\u4f4d\u79fb\uff09\u3002\u5bf9\u4e8e\u6cd5\u5411\u91cf\uff0c\u6211\u4eec\u53ea\u5e0c\u671b\u5bf9\u5b83\u5b9e\u65bd\u7f29\u653e\u548c\u65cb\u8f6c\u53d8\u6362\u3002 \u5176\u6b21\uff0c\u5982\u679c\u6a21\u578b\u77e9\u9635\u6267\u884c\u4e86\u4e0d\u7b49\u6bd4\u7f29\u653e\uff0c\u9876\u70b9\u7684\u6539\u53d8\u4f1a\u5bfc\u81f4\u6cd5\u5411\u91cf\u4e0d\u518d\u5782\u76f4\u4e8e\u8868\u9762\u4e86\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u80fd\u7528\u8fd9\u6837\u7684\u6a21\u578b\u77e9\u9635\u6765\u53d8\u6362\u6cd5\u5411\u91cf\u3002\u4e0b\u9762\u7684\u56fe\u5c55\u793a\u4e86\u5e94\u7528\u4e86\u4e0d\u7b49\u6bd4\u7f29\u653e\u7684\u6a21\u578b\u77e9\u9635\u5bf9\u6cd5\u5411\u91cf\u7684\u5f71\u54cd\uff1a \u6bcf\u5f53\u6211\u4eec\u5e94\u7528\u4e00\u4e2a\u4e0d\u7b49\u6bd4\u7f29\u653e\u65f6\uff08\u6ce8\u610f\uff1a\u7b49\u6bd4\u7f29\u653e\u4e0d\u4f1a\u7834\u574f\u6cd5\u7ebf\uff0c\u56e0\u4e3a\u6cd5\u7ebf\u7684\u65b9\u5411\u6ca1\u88ab\u6539\u53d8\uff0c\u4ec5\u4ec5\u6539\u53d8\u4e86\u6cd5\u7ebf\u7684\u957f\u5ea6\uff0c\u800c\u8fd9\u5f88\u5bb9\u6613\u901a\u8fc7\u6807\u51c6\u5316\u6765\u4fee\u590d\uff09\uff0c\u6cd5\u5411\u91cf\u5c31\u4e0d\u4f1a\u518d\u5782\u76f4\u4e8e\u5bf9\u5e94\u7684\u8868\u9762\u4e86\uff0c\u8fd9\u6837\u5149\u7167\u5c31\u4f1a\u88ab\u7834\u574f\u3002 \u4fee\u590d\u8fd9\u4e2a\u884c\u4e3a\u7684\u8bc0\u7a8d\u662f\u4f7f\u7528\u4e00\u4e2a\u4e3a\u6cd5\u5411\u91cf\u4e13\u95e8\u5b9a\u5236\u7684\u6a21\u578b\u77e9\u9635\u3002\u8fd9\u4e2a\u77e9\u9635\u79f0\u4e4b\u4e3a \u6cd5\u7ebf\u77e9\u9635 (Normal Matrix)\uff0c\u5b83\u4f7f\u7528\u4e86\u4e00\u4e9b\u7ebf\u6027\u4ee3\u6570\u7684\u64cd\u4f5c\u6765\u79fb\u9664\u5bf9\u6cd5\u5411\u91cf\u9519\u8bef\u7f29\u653e\u7684\u5f71\u54cd\u3002\u5982\u679c\u4f60\u60f3\u77e5\u9053\u8fd9\u4e2a\u77e9\u9635\u662f\u5982\u4f55\u8ba1\u7b97\u51fa\u6765\u7684\uff0c\u5efa\u8bae\u53bb\u9605\u8bfb\u8fd9\u4e2a \u6587\u7ae0 \u3002 \u6cd5\u7ebf\u77e9\u9635\u88ab\u5b9a\u4e49\u4e3a\u300c\u6a21\u578b\u77e9\u9635\u5de6\u4e0a\u89d23x3\u90e8\u5206\u7684\u9006\u77e9\u9635\u7684\u8f6c\u7f6e\u77e9\u9635\u300d\u3002\u771f\u662f\u62d7\u53e3\uff0c\u5982\u679c\u4f60\u4e0d\u660e\u767d\u8fd9\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u522b\u62c5\u5fc3\uff0c\u6211\u4eec\u8fd8\u6ca1\u6709\u8ba8\u8bba\u9006\u77e9\u9635(Inverse Matrix)\u548c\u8f6c\u7f6e\u77e9\u9635(Transpose Matrix)\u3002\u6ce8\u610f\uff0c\u5927\u90e8\u5206\u7684\u8d44\u6e90\u90fd\u4f1a\u5c06\u6cd5\u7ebf\u77e9\u9635\u5b9a\u4e49\u4e3a\u5e94\u7528\u5230\u6a21\u578b-\u89c2\u5bdf\u77e9\u9635(Model-view Matrix)\u4e0a\u7684\u64cd\u4f5c\uff0c\u4f46\u662f\u7531\u4e8e\u6211\u4eec\u53ea\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\u8fdb\u884c\u64cd\u4f5c\uff08\u4e0d\u662f\u5728\u89c2\u5bdf\u7a7a\u95f4\uff09\uff0c\u6211\u4eec\u53ea\u4f7f\u7528\u6a21\u578b\u77e9\u9635\u3002 \u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 inverse \u548c transpose \u51fd\u6570\u81ea\u5df1\u751f\u6210\u8fd9\u4e2a\u6cd5\u7ebf\u77e9\u9635\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u5bf9\u6240\u6709\u7c7b\u578b\u77e9\u9635\u90fd\u6709\u6548\u3002\u6ce8\u610f\u6211\u4eec\u8fd8\u8981\u628a\u88ab\u5904\u7406\u8fc7\u7684\u77e9\u9635\u5f3a\u5236\u8f6c\u6362\u4e3a3\u00d73\u77e9\u9635\uff0c\u6765\u4fdd\u8bc1\u5b83\u5931\u53bb\u4e86\u4f4d\u79fb\u5c5e\u6027\u4ee5\u53ca\u80fd\u591f\u4e58\u4ee5 vec3 \u7684\u6cd5\u5411\u91cf\u3002 Normal = mat3(transpose(inverse(model))) * aNormal; Attention \u77e9\u9635\u6c42\u9006\u662f\u4e00\u9879\u5bf9\u4e8e\u7740\u8272\u5668\u5f00\u9500\u5f88\u5927\u7684\u8fd0\u7b97\uff0c\u56e0\u4e3a\u5b83\u5fc5\u987b\u5728\u573a\u666f\u4e2d\u7684\u6bcf\u4e00\u4e2a\u9876\u70b9\u4e0a\u8fdb\u884c\uff0c\u6240\u4ee5\u5e94\u8be5\u5c3d\u53ef\u80fd\u5730\u907f\u514d\u5728\u7740\u8272\u5668\u4e2d\u8fdb\u884c\u6c42\u9006\u8fd0\u7b97\u3002\u4ee5\u5b66\u4e60\u4e3a\u76ee\u7684\u7684\u8bdd\u8fd9\u6837\u505a\u8fd8\u597d\uff0c\u4f46\u662f\u5bf9\u4e8e\u4e00\u4e2a\u9ad8\u6548\u7684\u5e94\u7528\u6765\u8bf4\uff0c\u4f60\u6700\u597d\u5148\u5728CPU\u4e0a\u8ba1\u7b97\u51fa\u6cd5\u7ebf\u77e9\u9635\uff0c\u518d\u901a\u8fc7uniform\u628a\u5b83\u4f20\u9012\u7ed9\u7740\u8272\u5668\uff08\u5c31\u50cf\u6a21\u578b\u77e9\u9635\u4e00\u6837\uff09\u3002 \u5728\u6f2b\u53cd\u5c04\u5149\u7167\u90e8\u5206\uff0c\u5149\u7167\u8868\u73b0\u5e76\u6ca1\u6709\u95ee\u9898\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u5bf9\u7269\u4f53\u8fdb\u884c\u4efb\u4f55\u7f29\u653e\u64cd\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u5e76\u4e0d\u771f\u7684\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u6cd5\u7ebf\u77e9\u9635\uff0c\u800c\u662f\u4ec5\u4ee5\u6a21\u578b\u77e9\u9635\u4e58\u4ee5\u6cd5\u7ebf\u5c31\u53ef\u4ee5\u3002\u4f46\u662f\u5982\u679c\u4f60\u4f1a\u8fdb\u884c\u4e0d\u7b49\u6bd4\u7f29\u653e\uff0c\u4f7f\u7528\u6cd5\u7ebf\u77e9\u9635\u53bb\u4e58\u4ee5\u6cd5\u5411\u91cf\u5c31\u662f\u5fc5\u987b\u7684\u4e86\u3002 \u955c\u9762\u5149\u7167 \u5982\u679c\u4f60\u8fd8\u6ca1\u88ab\u8fd9\u4e9b\u5149\u7167\u8ba1\u7b97\u641e\u5f97\u7cbe\u75b2\u529b\u5c3d\uff0c\u6211\u4eec\u5c31\u518d\u628a\u955c\u9762\u9ad8\u5149(Specular Highlight)\u52a0\u8fdb\u6765\uff0c\u8fd9\u6837\u98ce\u6c0f\u5149\u7167\u624d\u7b97\u5b8c\u6574\u3002 \u548c\u6f2b\u53cd\u5c04\u5149\u7167\u4e00\u6837\uff0c\u955c\u9762\u5149\u7167\u4e5f\u51b3\u5b9a\u4e8e\u5149\u7684\u65b9\u5411\u5411\u91cf\u548c\u7269\u4f53\u7684\u6cd5\u5411\u91cf\uff0c\u4f46\u662f\u5b83\u4e5f\u51b3\u5b9a\u4e8e\u89c2\u5bdf\u65b9\u5411\uff0c\u4f8b\u5982\u73a9\u5bb6\u662f\u4ece\u4ec0\u4e48\u65b9\u5411\u770b\u5411\u8fd9\u4e2a\u7247\u6bb5\u7684\u3002\u955c\u9762\u5149\u7167\u51b3\u5b9a\u4e8e\u8868\u9762\u7684\u53cd\u5c04\u7279\u6027\u3002\u5982\u679c\u6211\u4eec\u628a\u7269\u4f53\u8868\u9762\u8bbe\u60f3\u4e3a\u4e00\u9762\u955c\u5b50\uff0c\u90a3\u4e48\u955c\u9762\u5149\u7167\u6700\u5f3a\u7684\u5730\u65b9\u5c31\u662f\u6211\u4eec\u770b\u5230\u8868\u9762\u4e0a\u53cd\u5c04\u5149\u7684\u5730\u65b9\u3002\u4f60\u53ef\u4ee5\u5728\u4e0b\u56fe\u4e2d\u770b\u5230\u6548\u679c\uff1a \u6211\u4eec\u901a\u8fc7\u6839\u636e\u6cd5\u5411\u91cf\u7ffb\u6298\u5165\u5c04\u5149\u7684\u65b9\u5411\u6765\u8ba1\u7b97\u53cd\u5c04\u5411\u91cf\u3002\u7136\u540e\u6211\u4eec\u8ba1\u7b97\u53cd\u5c04\u5411\u91cf\u4e0e\u89c2\u5bdf\u65b9\u5411\u7684\u89d2\u5ea6\u5dee\uff0c\u5b83\u4eec\u4e4b\u95f4\u5939\u89d2\u8d8a\u5c0f\uff0c\u955c\u9762\u5149\u7684\u4f5c\u7528\u5c31\u8d8a\u5927\u3002\u7531\u6b64\u4ea7\u751f\u7684\u6548\u679c\u5c31\u662f\uff0c\u6211\u4eec\u770b\u5411\u5728\u5165\u5c04\u5149\u5728\u8868\u9762\u7684\u53cd\u5c04\u65b9\u5411\u65f6\uff0c\u4f1a\u770b\u5230\u4e00\u70b9\u9ad8\u5149\u3002 \u89c2\u5bdf\u5411\u91cf\u662f\u6211\u4eec\u8ba1\u7b97\u955c\u9762\u5149\u7167\u65f6\u9700\u8981\u7684\u4e00\u4e2a\u989d\u5916\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u89c2\u5bdf\u8005\u7684\u4e16\u754c\u7a7a\u95f4\u4f4d\u7f6e\u548c\u7247\u6bb5\u7684\u4f4d\u7f6e\u6765\u8ba1\u7b97\u5b83\u3002\u4e4b\u540e\u6211\u4eec\u8ba1\u7b97\u51fa\u955c\u9762\u5149\u7167\u5f3a\u5ea6\uff0c\u7528\u5b83\u4e58\u4ee5\u5149\u6e90\u7684\u989c\u8272\uff0c\u5e76\u5c06\u5b83\u4e0e\u73af\u5883\u5149\u7167\u548c\u6f2b\u53cd\u5c04\u5149\u7167\u90e8\u5206\u52a0\u548c\u3002 Important \u6211\u4eec\u9009\u62e9\u5728\u4e16\u754c\u7a7a\u95f4\u8fdb\u884c\u5149\u7167\u8ba1\u7b97\uff0c\u4f46\u662f\u5927\u591a\u6570\u4eba\u8d8b\u5411\u4e8e\u66f4\u504f\u5411\u5728\u89c2\u5bdf\u7a7a\u95f4\u8fdb\u884c\u5149\u7167\u8ba1\u7b97\u3002\u5728\u89c2\u5bdf\u7a7a\u95f4\u8ba1\u7b97\u7684\u4f18\u52bf\u662f\uff0c\u89c2\u5bdf\u8005\u7684\u4f4d\u7f6e\u603b\u662f\u5728(0, 0, 0)\uff0c\u6240\u4ee5\u4f60\u5df2\u7ecf\u96f6\u6210\u672c\u5730\u62ff\u5230\u4e86\u89c2\u5bdf\u8005\u7684\u4f4d\u7f6e\u3002\u7136\u800c\uff0c\u82e5\u4ee5\u5b66\u4e60\u4e3a\u76ee\u7684\uff0c\u6211\u8ba4\u4e3a\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\u8ba1\u7b97\u5149\u7167\u66f4\u7b26\u5408\u76f4\u89c9\u3002\u5982\u679c\u4f60\u4ecd\u7136\u5e0c\u671b\u5728\u89c2\u5bdf\u7a7a\u95f4\u8ba1\u7b97\u5149\u7167\u7684\u8bdd\uff0c\u4f60\u9700\u8981\u5c06\u6240\u6709\u76f8\u5173\u7684\u5411\u91cf\u4e5f\u7528\u89c2\u5bdf\u77e9\u9635\u8fdb\u884c\u53d8\u6362\uff08\u4e0d\u8981\u5fd8\u8bb0\u4e5f\u4fee\u6539\u6cd5\u7ebf\u77e9\u9635\uff09\u3002 \u8981\u5f97\u5230\u89c2\u5bdf\u8005\u7684\u4e16\u754c\u7a7a\u95f4\u5750\u6807\uff0c\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u5411\u91cf\u5373\u53ef\uff08\u5b83\u5f53\u7136\u5c31\u662f\u90a3\u4e2a\u89c2\u5bdf\u8005\uff09\u3002\u90a3\u4e48\u8ba9\u6211\u4eec\u628a\u53e6\u4e00\u4e2auniform\u6dfb\u52a0\u5230\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u5e76\u628a\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u5411\u91cf\u4f20\u7ed9\u7740\u8272\u5668\uff1a uniform vec3 viewPos; lightingShader.setVec3(\"viewPos\", camera.Position); \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u83b7\u5f97\u6240\u6709\u9700\u8981\u7684\u53d8\u91cf\uff0c\u53ef\u4ee5\u8ba1\u7b97\u9ad8\u5149\u5f3a\u5ea6\u4e86\u3002\u9996\u5148\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u955c\u9762\u5f3a\u5ea6(Specular Intensity)\u53d8\u91cf\uff0c\u7ed9\u955c\u9762\u9ad8\u5149\u4e00\u4e2a\u4e2d\u7b49\u4eae\u5ea6\u989c\u8272\uff0c\u8ba9\u5b83\u4e0d\u8981\u4ea7\u751f\u8fc7\u5ea6\u7684\u5f71\u54cd\u3002 float specularStrength = 0.5; \u5982\u679c\u6211\u4eec\u628a\u5b83\u8bbe\u7f6e\u4e3a1.0f\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2a\u975e\u5e38\u4eae\u7684\u955c\u9762\u5149\u5206\u91cf\uff0c\u8fd9\u5bf9\u4e8e\u4e00\u4e2a\u73ca\u745a\u8272\u7684\u7acb\u65b9\u4f53\u6765\u8bf4\u6709\u70b9\u592a\u591a\u4e86\u3002 \u4e0b\u4e00\u8282\u6559\u7a0b \u4e2d\u6211\u4eec\u4f1a\u8ba8\u8bba\u5982\u4f55\u5408\u7406\u8bbe\u7f6e\u8fd9\u4e9b\u5149\u7167\u5f3a\u5ea6\uff0c\u4ee5\u53ca\u5b83\u4eec\u662f\u5982\u4f55\u5f71\u54cd\u7269\u4f53\u7684\u3002\u4e0b\u4e00\u6b65\uff0c\u6211\u4eec\u8ba1\u7b97\u89c6\u7ebf\u65b9\u5411\u5411\u91cf\uff0c\u548c\u5bf9\u5e94\u7684\u6cbf\u7740\u6cd5\u7ebf\u8f74\u7684\u53cd\u5c04\u5411\u91cf\uff1a vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); \u9700\u8981\u6ce8\u610f\u7684\u662f\u6211\u4eec\u5bf9 lightDir \u5411\u91cf\u8fdb\u884c\u4e86\u53d6\u53cd\u3002 reflect \u51fd\u6570\u8981\u6c42\u7b2c\u4e00\u4e2a\u5411\u91cf\u662f \u4ece \u5149\u6e90\u6307\u5411\u7247\u6bb5\u4f4d\u7f6e\u7684\u5411\u91cf\uff0c\u4f46\u662f lightDir \u5f53\u524d\u6b63\u597d\u76f8\u53cd\uff0c\u662f\u4ece\u7247\u6bb5 \u6307\u5411 \u5149\u6e90\uff08\u7531\u5148\u524d\u6211\u4eec\u8ba1\u7b97 lightDir \u5411\u91cf\u65f6\uff0c\u51cf\u6cd5\u7684\u987a\u5e8f\u51b3\u5b9a\uff09\u3002\u4e3a\u4e86\u4fdd\u8bc1\u6211\u4eec\u5f97\u5230\u6b63\u786e\u7684 reflect \u5411\u91cf\uff0c\u6211\u4eec\u901a\u8fc7\u5bf9 lightDir \u5411\u91cf\u53d6\u53cd\u6765\u83b7\u5f97\u76f8\u53cd\u7684\u65b9\u5411\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8981\u6c42\u662f\u4e00\u4e2a\u6cd5\u5411\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u63d0\u4f9b\u7684\u662f\u5df2\u6807\u51c6\u5316\u7684 norm \u5411\u91cf\u3002 \u5269\u4e0b\u8981\u505a\u7684\u662f\u8ba1\u7b97\u955c\u9762\u5206\u91cf\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5b8c\u6210\u4e86\u8fd9\u4ef6\u4e8b\uff1a float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32); vec3 specular = specularStrength * spec * lightColor; \u6211\u4eec\u5148\u8ba1\u7b97\u89c6\u7ebf\u65b9\u5411\u4e0e\u53cd\u5c04\u65b9\u5411\u7684\u70b9\u4e58\uff08\u5e76\u786e\u4fdd\u5b83\u4e0d\u662f\u8d1f\u503c\uff09\uff0c\u7136\u540e\u53d6\u5b83\u768432\u6b21\u5e42\u3002\u8fd9\u4e2a32\u662f\u9ad8\u5149\u7684 \u53cd\u5149\u5ea6 (Shininess)\u3002\u4e00\u4e2a\u7269\u4f53\u7684\u53cd\u5149\u5ea6\u8d8a\u9ad8\uff0c\u53cd\u5c04\u5149\u7684\u80fd\u529b\u8d8a\u5f3a\uff0c\u6563\u5c04\u5f97\u8d8a\u5c11\uff0c\u9ad8\u5149\u70b9\u5c31\u4f1a\u8d8a\u5c0f\u3002\u5728\u4e0b\u9762\u7684\u56fe\u7247\u91cc\uff0c\u4f60\u4f1a\u770b\u5230\u4e0d\u540c\u53cd\u5149\u5ea6\u7684\u89c6\u89c9\u6548\u679c\u5f71\u54cd\uff1a \u6211\u4eec\u4e0d\u5e0c\u671b\u955c\u9762\u6210\u5206\u8fc7\u4e8e\u663e\u773c\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u6307\u6570\u4fdd\u6301\u4e3a32\u3002\u5269\u4e0b\u7684\u6700\u540e\u4e00\u4ef6\u4e8b\u60c5\u662f\u628a\u5b83\u52a0\u5230\u73af\u5883\u5149\u5206\u91cf\u548c\u6f2b\u53cd\u5c04\u5206\u91cf\u91cc\uff0c\u518d\u7528\u7ed3\u679c\u4e58\u4ee5\u7269\u4f53\u7684\u989c\u8272\uff1a vec3 result = (ambient + diffuse + specular) * objectColor; FragColor = vec4(result, 1.0); \u6211\u4eec\u73b0\u5728\u4e3a\u98ce\u6c0f\u5149\u7167\u8ba1\u7b97\u4e86\u5168\u90e8\u7684\u5149\u7167\u5206\u91cf\u3002\u6839\u636e\u4f60\u7684\u89c6\u89d2\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u7c7b\u4f3c\u4e0b\u9762\u7684\u753b\u9762\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5b8c\u6574\u6e90\u7801\u3002 Important \u5728\u5149\u7167\u7740\u8272\u5668\u7684\u65e9\u671f\uff0c\u5f00\u53d1\u8005\u66fe\u7ecf\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5b9e\u73b0\u98ce\u6c0f\u5149\u7167\u6a21\u578b\u3002\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u505a\u5149\u7167\u7684\u4f18\u52bf\u662f\uff0c\u76f8\u6bd4\u7247\u6bb5\u6765\u8bf4\uff0c\u9876\u70b9\u8981\u5c11\u5f97\u591a\uff0c\u56e0\u6b64\u4f1a\u66f4\u9ad8\u6548\uff0c\u6240\u4ee5\uff08\u5f00\u9500\u5927\u7684\uff09\u5149\u7167\u8ba1\u7b97\u9891\u7387\u4f1a\u66f4\u4f4e\u3002\u7136\u800c\uff0c\u9876\u70b9\u7740\u8272\u5668\u4e2d\u7684\u6700\u7ec8\u989c\u8272\u503c\u662f\u4ec5\u4ec5\u53ea\u662f\u90a3\u4e2a\u9876\u70b9\u7684\u989c\u8272\u503c\uff0c\u7247\u6bb5\u7684\u989c\u8272\u503c\u662f\u7531\u63d2\u503c\u5149\u7167\u989c\u8272\u6240\u5f97\u6765\u7684\u3002\u7ed3\u679c\u5c31\u662f\u8fd9\u79cd\u5149\u7167\u770b\u8d77\u6765\u4e0d\u4f1a\u975e\u5e38\u771f\u5b9e\uff0c\u9664\u975e\u4f7f\u7528\u4e86\u5927\u91cf\u9876\u70b9\u3002 \u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5b9e\u73b0\u7684\u98ce\u6c0f\u5149\u7167\u6a21\u578b\u53eb\u505a Gouraud\u7740\u8272 (Gouraud Shading)\uff0c\u800c\u4e0d\u662f \u98ce\u6c0f\u7740\u8272 (Phong Shading)\u3002\u8bb0\u4f4f\uff0c\u7531\u4e8e\u63d2\u503c\uff0c\u8fd9\u79cd\u5149\u7167\u770b\u8d77\u6765\u6709\u70b9\u900a\u8272\u3002\u98ce\u6c0f\u7740\u8272\u80fd\u4ea7\u751f\u66f4\u5e73\u6ed1\u7684\u5149\u7167\u6548\u679c\u3002 \u73b0\u5728\u4f60\u5e94\u8be5\u80fd\u591f\u770b\u5230\u7740\u8272\u5668\u7684\u5f3a\u5927\u4e4b\u5904\u4e86\u3002\u53ea\u7528\u5f88\u5c11\u7684\u4fe1\u606f\uff0c\u7740\u8272\u5668\u5c31\u80fd\u8ba1\u7b97\u51fa\u5149\u7167\u5982\u4f55\u5f71\u54cd\u5230\u6240\u6709\u7269\u4f53\u7684\u7247\u6bb5\u989c\u8272\u3002 \u4e0b\u4e00\u8282 \u4e2d\uff0c\u6211\u4eec\u4f1a\u66f4\u6df1\u5165\u7684\u7814\u7a76\u5149\u7167\u6a21\u578b\uff0c\u770b\u770b\u6211\u4eec\u8fd8\u80fd\u505a\u4e9b\u4ec0\u4e48\u3002 \u7ec3\u4e60 \u76ee\u524d\uff0c\u6211\u4eec\u7684\u5149\u6e90\u662f\u9759\u6b62\u7684\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528 sin \u6216 cos \u51fd\u6570\u8ba9\u5149\u6e90\u5728\u573a\u666f\u4e2d\u6765\u56de\u79fb\u52a8\u3002\u89c2\u5bdf\u5149\u7167\u968f\u65f6\u95f4\u7684\u6539\u53d8\u80fd\u8ba9\u4f60\u66f4\u5bb9\u6613\u7406\u89e3\u98ce\u6c0f\u5149\u7167\u6a21\u578b\u3002 \u53c2\u8003\u89e3\u7b54 \u3002 \u5c1d\u8bd5\u4f7f\u7528\u4e0d\u540c\u7684\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5f3a\u5ea6\uff0c\u89c2\u5bdf\u5b83\u4eec\u600e\u4e48\u662f\u5f71\u54cd\u5149\u7167\u6548\u679c\u7684\u3002\u540c\u6837\uff0c\u5c1d\u8bd5\u5b9e\u9a8c\u4e00\u4e0b\u955c\u9762\u5149\u7167\u7684\u53cd\u5149\u5ea6\u56e0\u5b50\u3002\u5c1d\u8bd5\u7406\u89e3\u4e3a\u4ec0\u4e48\u67d0\u4e00\u4e2a\u503c\u80fd\u591f\u6709\u7740\u7279\u5b9a\u89c6\u89c9\u8f93\u51fa\u3002 \u5728\u89c2\u5bdf\u7a7a\u95f4\uff08\u800c\u4e0d\u662f\u4e16\u754c\u7a7a\u95f4\uff09\u4e2d\u8ba1\u7b97\u98ce\u6c0f\u5149\u7167\uff1a \u53c2\u8003\u89e3\u7b54 \u3002 \u5c1d\u8bd5\u5b9e\u73b0\u4e00\u4e2aGouraud\u7740\u8272\uff08\u800c\u4e0d\u662f\u98ce\u6c0f\u7740\u8272\uff09\u3002\u5982\u679c\u4f60\u505a\u5bf9\u4e86\u8bdd\uff0c\u7acb\u65b9\u4f53\u7684\u5149\u7167\u5e94\u8be5\u4f1a \u770b\u8d77\u6765\u6709\u4e9b\u5947\u602a \uff0c\u5c1d\u8bd5\u63a8\u7406\u4e3a\u4ec0\u4e48\u5b83\u4f1a\u770b\u8d77\u6765\u8fd9\u4e48\u5947\u602a\uff1a \u53c2\u8003\u89e3\u7b54 \u3002","title":"\u57fa\u7840\u5149\u7167"},{"location":"02%20Lighting/02%20Basic%20Lighting/#_1","text":"\u539f\u6587 Basic Lighting \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django , Krasjet, Geequlim, BLumia \u6821\u5bf9 AoZhang \u73b0\u5b9e\u4e16\u754c\u7684\u5149\u7167\u662f\u6781\u5176\u590d\u6742\u7684\uff0c\u800c\u4e14\u4f1a\u53d7\u5230\u8bf8\u591a\u56e0\u7d20\u7684\u5f71\u54cd\uff0c\u8fd9\u662f\u6211\u4eec\u6709\u9650\u7684\u8ba1\u7b97\u80fd\u529b\u6240\u65e0\u6cd5\u6a21\u62df\u7684\u3002\u56e0\u6b64OpenGL\u7684\u5149\u7167\u4f7f\u7528\u7684\u662f\u7b80\u5316\u7684\u6a21\u578b\uff0c\u5bf9\u73b0\u5b9e\u7684\u60c5\u51b5\u8fdb\u884c\u8fd1\u4f3c\uff0c\u8fd9\u6837\u5904\u7406\u8d77\u6765\u4f1a\u66f4\u5bb9\u6613\u4e00\u4e9b\uff0c\u800c\u4e14\u770b\u8d77\u6765\u4e5f\u5dee\u4e0d\u591a\u4e00\u6837\u3002\u8fd9\u4e9b\u5149\u7167\u6a21\u578b\u90fd\u662f\u57fa\u4e8e\u6211\u4eec\u5bf9\u5149\u7684\u7269\u7406\u7279\u6027\u7684\u7406\u89e3\u3002\u5176\u4e2d\u4e00\u4e2a\u6a21\u578b\u88ab\u79f0\u4e3a \u98ce\u6c0f\u5149\u7167\u6a21\u578b (Phong Lighting Model)\u3002\u98ce\u6c0f\u5149\u7167\u6a21\u578b\u7684\u4e3b\u8981\u7ed3\u6784\u75313\u4e2a\u5206\u91cf\u7ec4\u6210\uff1a\u73af\u5883(Ambient)\u3001\u6f2b\u53cd\u5c04(Diffuse)\u548c\u955c\u9762(Specular)\u5149\u7167\u3002\u4e0b\u9762\u8fd9\u5f20\u56fe\u5c55\u793a\u4e86\u8fd9\u4e9b\u5149\u7167\u5206\u91cf\u770b\u8d77\u6765\u7684\u6837\u5b50\uff1a \u73af\u5883\u5149\u7167 (Ambient Lighting)\uff1a\u5373\u4f7f\u5728\u9ed1\u6697\u7684\u60c5\u51b5\u4e0b\uff0c\u4e16\u754c\u4e0a\u901a\u5e38\u4e5f\u4ecd\u7136\u6709\u4e00\u4e9b\u5149\u4eae\uff08\u6708\u4eae\u3001\u8fdc\u5904\u7684\u5149\uff09\uff0c\u6240\u4ee5\u7269\u4f53\u51e0\u4e4e\u6c38\u8fdc\u4e0d\u4f1a\u662f\u5b8c\u5168\u9ed1\u6697\u7684\u3002\u4e3a\u4e86\u6a21\u62df\u8fd9\u4e2a\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u4e00\u4e2a\u73af\u5883\u5149\u7167\u5e38\u91cf\uff0c\u5b83\u6c38\u8fdc\u4f1a\u7ed9\u7269\u4f53\u4e00\u4e9b\u989c\u8272\u3002 \u6f2b\u53cd\u5c04\u5149\u7167 (Diffuse Lighting)\uff1a\u6a21\u62df\u5149\u6e90\u5bf9\u7269\u4f53\u7684\u65b9\u5411\u6027\u5f71\u54cd(Directional Impact)\u3002\u5b83\u662f\u98ce\u6c0f\u5149\u7167\u6a21\u578b\u4e2d\u89c6\u89c9\u4e0a\u6700\u663e\u8457\u7684\u5206\u91cf\u3002\u7269\u4f53\u7684\u67d0\u4e00\u90e8\u5206\u8d8a\u662f\u6b63\u5bf9\u7740\u5149\u6e90\uff0c\u5b83\u5c31\u4f1a\u8d8a\u4eae\u3002 \u955c\u9762\u5149\u7167 (Specular Lighting)\uff1a\u6a21\u62df\u6709\u5149\u6cfd\u7269\u4f53\u4e0a\u9762\u51fa\u73b0\u7684\u4eae\u70b9\u3002\u955c\u9762\u5149\u7167\u7684\u989c\u8272\u76f8\u6bd4\u4e8e\u7269\u4f53\u7684\u989c\u8272\u4f1a\u66f4\u503e\u5411\u4e8e\u5149\u7684\u989c\u8272\u3002 \u4e3a\u4e86\u521b\u5efa\u6709\u8da3\u7684\u89c6\u89c9\u573a\u666f\uff0c\u6211\u4eec\u5e0c\u671b\u6a21\u62df\u81f3\u5c11\u8fd9\u4e09\u79cd\u5149\u7167\u5206\u91cf\u3002\u6211\u4eec\u5c06\u4ee5\u6700\u7b80\u5355\u7684\u4e00\u4e2a\u5f00\u59cb\uff1a \u73af\u5883\u5149\u7167 \u3002","title":"\u57fa\u7840\u5149\u7167"},{"location":"02%20Lighting/02%20Basic%20Lighting/#_2","text":"\u5149\u901a\u5e38\u90fd\u4e0d\u662f\u6765\u81ea\u4e8e\u540c\u4e00\u4e2a\u5149\u6e90\uff0c\u800c\u662f\u6765\u81ea\u4e8e\u6211\u4eec\u5468\u56f4\u5206\u6563\u7684\u5f88\u591a\u5149\u6e90\uff0c\u5373\u4f7f\u5b83\u4eec\u53ef\u80fd\u5e76\u4e0d\u662f\u90a3\u4e48\u663e\u800c\u6613\u89c1\u3002\u5149\u7684\u4e00\u4e2a\u5c5e\u6027\u662f\uff0c\u5b83\u53ef\u4ee5\u5411\u5f88\u591a\u65b9\u5411\u53d1\u6563\u5e76\u53cd\u5f39\uff0c\u4ece\u800c\u80fd\u591f\u5230\u8fbe\u4e0d\u662f\u975e\u5e38\u76f4\u63a5\u4e34\u8fd1\u7684\u70b9\u3002\u6240\u4ee5\uff0c\u5149\u80fd\u591f\u5728\u5176\u5b83\u7684\u8868\u9762\u4e0a \u53cd\u5c04 \uff0c\u5bf9\u4e00\u4e2a\u7269\u4f53\u4ea7\u751f\u95f4\u63a5\u7684\u5f71\u54cd\u3002\u8003\u8651\u5230\u8fd9\u79cd\u60c5\u51b5\u7684\u7b97\u6cd5\u53eb\u505a \u5168\u5c40\u7167\u660e (Global Illumination)\u7b97\u6cd5\uff0c\u4f46\u662f\u8fd9\u79cd\u7b97\u6cd5\u65e2\u5f00\u9500\u9ad8\u6602\u53c8\u6781\u5176\u590d\u6742\u3002 \u7531\u4e8e\u6211\u4eec\u73b0\u5728\u5bf9\u90a3\u79cd\u53c8\u590d\u6742\u53c8\u5f00\u9500\u9ad8\u6602\u7684\u7b97\u6cd5\u4e0d\u662f\u5f88\u611f\u5174\u8da3\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u4f1a\u5148\u4f7f\u7528\u4e00\u4e2a\u7b80\u5316\u7684\u5168\u5c40\u7167\u660e\u6a21\u578b\uff0c\u5373 \u73af\u5883\u5149\u7167 \u3002\u6b63\u5982\u4f60\u5728\u4e0a\u4e00\u8282\u6240\u5b66\u5230\u7684\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u5f88\u5c0f\u7684\u5e38\u91cf\uff08\u5149\u7167\uff09\u989c\u8272\uff0c\u6dfb\u52a0\u5230\u7269\u4f53\u7247\u6bb5\u7684\u6700\u7ec8\u989c\u8272\u4e2d\uff0c\u8fd9\u6837\u5b50\u7684\u8bdd\u5373\u4fbf\u573a\u666f\u4e2d\u6ca1\u6709\u76f4\u63a5\u7684\u5149\u6e90\u4e5f\u80fd\u770b\u8d77\u6765\u5b58\u5728\u6709\u4e00\u4e9b\u53d1\u6563\u7684\u5149\u3002 \u628a\u73af\u5883\u5149\u7167\u6dfb\u52a0\u5230\u573a\u666f\u91cc\u975e\u5e38\u7b80\u5355\u3002\u6211\u4eec\u7528\u5149\u7684\u989c\u8272\u4e58\u4ee5\u4e00\u4e2a\u5f88\u5c0f\u7684\u5e38\u91cf\u73af\u5883\u56e0\u5b50\uff0c\u518d\u4e58\u4ee5\u7269\u4f53\u7684\u989c\u8272\uff0c\u7136\u540e\u5c06\u6700\u7ec8\u7ed3\u679c\u4f5c\u4e3a\u7247\u6bb5\u7684\u989c\u8272\uff1a void main() { float ambientStrength = 0.1; vec3 ambient = ambientStrength * lightColor; vec3 result = ambient * objectColor; FragColor = vec4(result, 1.0); } \u5982\u679c\u4f60\u73b0\u5728\u8fd0\u884c\u4f60\u7684\u7a0b\u5e8f\uff0c\u4f60\u4f1a\u6ce8\u610f\u5230\u98ce\u6c0f\u5149\u7167\u7684\u7b2c\u4e00\u4e2a\u9636\u6bb5\u5df2\u7ecf\u5e94\u7528\u5230\u4f60\u7684\u7269\u4f53\u4e0a\u4e86\u3002\u8fd9\u4e2a\u7269\u4f53\u975e\u5e38\u6697\uff0c\u4f46\u7531\u4e8e\u5e94\u7528\u4e86\u73af\u5883\u5149\u7167\uff08\u6ce8\u610f\u5149\u6e90\u7acb\u65b9\u4f53\u6ca1\u53d7\u5f71\u54cd\u662f\u56e0\u4e3a\u6211\u4eec\u5bf9\u5b83\u4f7f\u7528\u4e86\u53e6\u4e00\u4e2a\u7740\u8272\u5668\uff09\uff0c\u4e5f\u4e0d\u662f\u5b8c\u5168\u9ed1\u7684\u3002\u5b83\u770b\u8d77\u6765\u5e94\u8be5\u50cf\u8fd9\u6837\uff1a","title":"\u73af\u5883\u5149\u7167"},{"location":"02%20Lighting/02%20Basic%20Lighting/#_3","text":"\u73af\u5883\u5149\u7167\u672c\u8eab\u4e0d\u80fd\u63d0\u4f9b\u6700\u6709\u8da3\u7684\u7ed3\u679c\uff0c\u4f46\u662f\u6f2b\u53cd\u5c04\u5149\u7167\u5c31\u80fd\u5f00\u59cb\u5bf9\u7269\u4f53\u4ea7\u751f\u663e\u8457\u7684\u89c6\u89c9\u5f71\u54cd\u4e86\u3002\u6f2b\u53cd\u5c04\u5149\u7167\u4f7f\u7269\u4f53\u4e0a\u4e0e\u5149\u7ebf\u65b9\u5411\u8d8a\u63a5\u8fd1\u7684\u7247\u6bb5\u80fd\u4ece\u5149\u6e90\u5904\u83b7\u5f97\u66f4\u591a\u7684\u4eae\u5ea6\u3002\u4e3a\u4e86\u80fd\u591f\u66f4\u597d\u7684\u7406\u89e3\u6f2b\u53cd\u5c04\u5149\u7167\uff0c\u8bf7\u770b\u4e0b\u56fe\uff1a \u56fe\u5de6\u4e0a\u65b9\u6709\u4e00\u4e2a\u5149\u6e90\uff0c\u5b83\u6240\u53d1\u51fa\u7684\u5149\u7ebf\u843d\u5728\u7269\u4f53\u7684\u4e00\u4e2a\u7247\u6bb5\u4e0a\u3002\u6211\u4eec\u9700\u8981\u6d4b\u91cf\u8fd9\u4e2a\u5149\u7ebf\u662f\u4ee5\u4ec0\u4e48\u89d2\u5ea6\u63a5\u89e6\u5230\u8fd9\u4e2a\u7247\u6bb5\u7684\u3002\u5982\u679c\u5149\u7ebf\u5782\u76f4\u4e8e\u7269\u4f53\u8868\u9762\uff0c\u8fd9\u675f\u5149\u5bf9\u7269\u4f53\u7684\u5f71\u54cd\u4f1a\u6700\u5927\u5316\uff08\u8bd1\u6ce8\uff1a\u66f4\u4eae\uff09\u3002\u4e3a\u4e86\u6d4b\u91cf\u5149\u7ebf\u548c\u7247\u6bb5\u7684\u89d2\u5ea6\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u53eb\u505a \u6cd5\u5411\u91cf (Normal Vector)\u7684\u4e1c\u897f\uff0c\u5b83\u662f\u5782\u76f4\u4e8e\u7247\u6bb5\u8868\u9762\u7684\u4e00\u4e2a\u5411\u91cf\uff08\u8fd9\u91cc\u4ee5\u9ec4\u8272\u7bad\u5934\u8868\u793a\uff09\uff0c\u6211\u4eec\u5728\u540e\u9762\u518d\u8bb2\u8fd9\u4e2a\u4e1c\u897f\u3002\u8fd9\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u89d2\u5ea6\u5f88\u5bb9\u6613\u5c31\u80fd\u591f\u901a\u8fc7\u70b9\u4e58\u8ba1\u7b97\u51fa\u6765\u3002 \u4f60\u53ef\u80fd\u8bb0\u5f97\u5728 \u53d8\u6362 \u90a3\u4e00\u8282\u6559\u7a0b\u91cc\uff0c\u6211\u4eec\u77e5\u9053\u4e24\u4e2a\u5355\u4f4d\u5411\u91cf\u7684\u5939\u89d2\u8d8a\u5c0f\uff0c\u5b83\u4eec\u70b9\u4e58\u7684\u7ed3\u679c\u8d8a\u503e\u5411\u4e8e1\u3002\u5f53\u4e24\u4e2a\u5411\u91cf\u7684\u5939\u89d2\u4e3a90\u5ea6\u7684\u65f6\u5019\uff0c\u70b9\u4e58\u4f1a\u53d8\u4e3a0\u3002\u8fd9\u540c\u6837\u9002\u7528\u4e8e \\theta \uff0c \\theta \u8d8a\u5927\uff0c\u5149\u5bf9\u7247\u6bb5\u989c\u8272\u7684\u5f71\u54cd\u5c31\u5e94\u8be5\u8d8a\u5c0f\u3002 Important \u6ce8\u610f\uff0c\u4e3a\u4e86\uff08\u53ea\uff09\u5f97\u5230\u4e24\u4e2a\u5411\u91cf\u5939\u89d2\u7684\u4f59\u5f26\u503c\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f\u5355\u4f4d\u5411\u91cf\uff08\u957f\u5ea6\u4e3a1\u7684\u5411\u91cf\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u786e\u4fdd\u6240\u6709\u7684\u5411\u91cf\u90fd\u662f\u6807\u51c6\u5316\u7684\uff0c\u5426\u5219\u70b9\u4e58\u8fd4\u56de\u7684\u5c31\u4e0d\u4ec5\u4ec5\u662f\u4f59\u5f26\u503c\u4e86\uff08\u89c1 \u53d8\u6362 \uff09\u3002 \u70b9\u4e58\u8fd4\u56de\u4e00\u4e2a\u6807\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u8ba1\u7b97\u5149\u7ebf\u5bf9\u7247\u6bb5\u989c\u8272\u7684\u5f71\u54cd\u3002\u4e0d\u540c\u7247\u6bb5\u671d\u5411\u5149\u6e90\u7684\u65b9\u5411\u7684\u4e0d\u540c\uff0c\u8fd9\u4e9b\u7247\u6bb5\u88ab\u7167\u4eae\u7684\u60c5\u51b5\u4e5f\u4e0d\u540c\u3002 \u6240\u4ee5\uff0c\u8ba1\u7b97\u6f2b\u53cd\u5c04\u5149\u7167\u9700\u8981\u4ec0\u4e48\uff1f \u6cd5\u5411\u91cf\uff1a\u4e00\u4e2a\u5782\u76f4\u4e8e\u9876\u70b9\u8868\u9762\u7684\u5411\u91cf\u3002 \u5b9a\u5411\u7684\u5149\u7ebf\uff1a\u4f5c\u4e3a\u5149\u6e90\u7684\u4f4d\u7f6e\u4e0e\u7247\u6bb5\u7684\u4f4d\u7f6e\u4e4b\u95f4\u5411\u91cf\u5dee\u7684\u65b9\u5411\u5411\u91cf\u3002\u4e3a\u4e86\u8ba1\u7b97\u8fd9\u4e2a\u5149\u7ebf\uff0c\u6211\u4eec\u9700\u8981\u5149\u7684\u4f4d\u7f6e\u5411\u91cf\u548c\u7247\u6bb5\u7684\u4f4d\u7f6e\u5411\u91cf\u3002","title":"\u6f2b\u53cd\u5c04\u5149\u7167"},{"location":"02%20Lighting/02%20Basic%20Lighting/#_4","text":"\u6cd5\u5411\u91cf\u662f\u4e00\u4e2a\u5782\u76f4\u4e8e\u9876\u70b9\u8868\u9762\u7684\uff08\u5355\u4f4d\uff09\u5411\u91cf\u3002\u7531\u4e8e\u9876\u70b9\u672c\u8eab\u5e76\u6ca1\u6709\u8868\u9762\uff08\u5b83\u53ea\u662f\u7a7a\u95f4\u4e2d\u4e00\u4e2a\u72ec\u7acb\u7684\u70b9\uff09\uff0c\u6211\u4eec\u5229\u7528\u5b83\u5468\u56f4\u7684\u9876\u70b9\u6765\u8ba1\u7b97\u51fa\u8fd9\u4e2a\u9876\u70b9\u7684\u8868\u9762\u3002\u6211\u4eec\u80fd\u591f\u4f7f\u7528\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u4f7f\u7528\u53c9\u4e58\u5bf9\u7acb\u65b9\u4f53\u6240\u6709\u7684\u9876\u70b9\u8ba1\u7b97\u6cd5\u5411\u91cf\uff0c\u4f46\u662f\u7531\u4e8e3D\u7acb\u65b9\u4f53\u4e0d\u662f\u4e00\u4e2a\u590d\u6742\u7684\u5f62\u72b6\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u628a\u6cd5\u7ebf\u6570\u636e\u624b\u5de5\u6dfb\u52a0\u5230\u9876\u70b9\u6570\u636e\u4e2d\u3002\u66f4\u65b0\u540e\u7684\u9876\u70b9\u6570\u636e\u6570\u7ec4\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u3002\u8bd5\u7740\u53bb\u60f3\u8c61\u4e00\u4e0b\uff0c\u8fd9\u4e9b\u6cd5\u5411\u91cf\u771f\u7684\u662f\u5782\u76f4\u4e8e\u7acb\u65b9\u4f53\u5404\u4e2a\u5e73\u9762\u7684\u8868\u9762\u7684\uff08\u4e00\u4e2a\u7acb\u65b9\u4f53\u75316\u4e2a\u5e73\u9762\u7ec4\u6210\uff09\u3002 \u7531\u4e8e\u6211\u4eec\u5411\u9876\u70b9\u6570\u7ec4\u6dfb\u52a0\u4e86\u989d\u5916\u7684\u6570\u636e\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u66f4\u65b0\u5149\u7167\u7684\u9876\u70b9\u7740\u8272\u5668\uff1a #version 330 core layout (location = 0) in vec3 aPos; layout (location = 1) in vec3 aNormal; ... \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5411\u6bcf\u4e2a\u9876\u70b9\u6dfb\u52a0\u4e86\u4e00\u4e2a\u6cd5\u5411\u91cf\u5e76\u66f4\u65b0\u4e86\u9876\u70b9\u7740\u8272\u5668\uff0c\u6211\u4eec\u8fd8\u8981\u66f4\u65b0\u9876\u70b9\u5c5e\u6027\u6307\u9488\u3002\u6ce8\u610f\uff0c\u706f\u4f7f\u7528\u540c\u6837\u7684\u9876\u70b9\u6570\u7ec4\u4f5c\u4e3a\u5b83\u7684\u9876\u70b9\u6570\u636e\uff0c\u7136\u800c\u706f\u7684\u7740\u8272\u5668\u5e76\u6ca1\u6709\u4f7f\u7528\u65b0\u6dfb\u52a0\u7684\u6cd5\u5411\u91cf\u3002\u6211\u4eec\u4e0d\u9700\u8981\u66f4\u65b0\u706f\u7684\u7740\u8272\u5668\u6216\u8005\u662f\u5c5e\u6027\u7684\u914d\u7f6e\uff0c\u4f46\u662f\u6211\u4eec\u5fc5\u987b\u81f3\u5c11\u4fee\u6539\u4e00\u4e0b\u9876\u70b9\u5c5e\u6027\u6307\u9488\u6765\u9002\u5e94\u65b0\u7684\u9876\u70b9\u6570\u7ec4\u7684\u5927\u5c0f\uff1a glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 6 * sizeof(float), (void*)0); glEnableVertexAttribArray(0); \u6211\u4eec\u53ea\u60f3\u4f7f\u7528\u6bcf\u4e2a\u9876\u70b9\u7684\u524d\u4e09\u4e2afloat\uff0c\u5e76\u4e14\u5ffd\u7565\u540e\u4e09\u4e2afloat\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u628a \u6b65\u957f \u53c2\u6570\u6539\u6210 float \u5927\u5c0f\u76846\u500d\u5c31\u884c\u4e86\u3002 Important \u867d\u7136\u5bf9\u706f\u7684\u7740\u8272\u5668\u4f7f\u7528\u4e0d\u80fd\u5b8c\u5168\u5229\u7528\u7684\u9876\u70b9\u6570\u636e\u770b\u8d77\u6765\u4e0d\u662f\u90a3\u4e48\u9ad8\u6548\uff0c\u4f46\u8fd9\u4e9b\u9876\u70b9\u6570\u636e\u5df2\u7ecf\u4ece\u7bb1\u5b50\u5bf9\u8c61\u8f7d\u5165\u540e\u5f00\u59cb\u5c31\u50a8\u5b58\u5728GPU\u7684\u5185\u5b58\u91cc\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u50a8\u5b58\u65b0\u6570\u636e\u5230GPU\u5185\u5b58\u4e2d\u3002\u8fd9\u5b9e\u9645\u4e0a\u6bd4\u7ed9\u706f\u4e13\u95e8\u5206\u914d\u4e00\u4e2a\u65b0\u7684VBO\u66f4\u9ad8\u6548\u4e86\u3002 \u6240\u6709\u5149\u7167\u7684\u8ba1\u7b97\u90fd\u662f\u5728\u7247\u6bb5\u7740\u8272\u5668\u91cc\u8fdb\u884c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06\u6cd5\u5411\u91cf\u7531\u9876\u70b9\u7740\u8272\u5668\u4f20\u9012\u5230\u7247\u6bb5\u7740\u8272\u5668\u3002\u6211\u4eec\u8fd9\u4e48\u505a\uff1a out vec3 Normal; void main() { gl_Position = projection * view * model * vec4(aPos, 1.0); Normal = aNormal; } \u63a5\u4e0b\u6765\uff0c\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u5b9a\u4e49\u76f8\u5e94\u7684\u8f93\u5165\u53d8\u91cf\uff1a in vec3 Normal;","title":"\u6cd5\u5411\u91cf"},{"location":"02%20Lighting/02%20Basic%20Lighting/#_5","text":"\u6211\u4eec\u73b0\u5728\u5bf9\u6bcf\u4e2a\u9876\u70b9\u90fd\u6709\u4e86\u6cd5\u5411\u91cf\uff0c\u4f46\u662f\u6211\u4eec\u4ecd\u7136\u9700\u8981\u5149\u6e90\u7684\u4f4d\u7f6e\u5411\u91cf\u548c\u7247\u6bb5\u7684\u4f4d\u7f6e\u5411\u91cf\u3002\u7531\u4e8e\u5149\u6e90\u7684\u4f4d\u7f6e\u662f\u4e00\u4e2a\u9759\u6001\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u628a\u5b83\u58f0\u660e\u4e3auniform\uff1a uniform vec3 lightPos; \u7136\u540e\u5728\u6e32\u67d3\u5faa\u73af\u4e2d\uff08\u6e32\u67d3\u5faa\u73af\u7684\u5916\u9762\u4e5f\u53ef\u4ee5\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u6539\u53d8\uff09\u66f4\u65b0uniform\u3002\u6211\u4eec\u4f7f\u7528\u5728\u524d\u9762\u58f0\u660e\u7684 lightPos \u5411\u91cf\u4f5c\u4e3a\u5149\u6e90\u4f4d\u7f6e\uff1a lightingShader.setVec3(\"lightPos\", lightPos); \u6700\u540e\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u7247\u6bb5\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u4f1a\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\u8fdb\u884c\u6240\u6709\u7684\u5149\u7167\u8ba1\u7b97\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u9876\u70b9\u4f4d\u7f6e\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u628a\u9876\u70b9\u4f4d\u7f6e\u5c5e\u6027\u4e58\u4ee5\u6a21\u578b\u77e9\u9635\uff08\u4e0d\u662f\u89c2\u5bdf\u548c\u6295\u5f71\u77e9\u9635\uff09\u6765\u628a\u5b83\u53d8\u6362\u5230\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u3002\u8fd9\u4e2a\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5f88\u5bb9\u6613\u5b8c\u6210\uff0c\u6240\u4ee5\u6211\u4eec\u58f0\u660e\u4e00\u4e2a\u8f93\u51fa\u53d8\u91cf\uff0c\u5e76\u8ba1\u7b97\u5b83\u7684\u4e16\u754c\u7a7a\u95f4\u5750\u6807\uff1a out vec3 FragPos; out vec3 Normal; void main() { gl_Position = projection * view * model * vec4(aPos, 1.0); FragPos = vec3(model * vec4(aPos, 1.0)); Normal = aNormal; } \u6700\u540e\uff0c\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u6dfb\u52a0\u76f8\u5e94\u7684\u8f93\u5165\u53d8\u91cf\u3002 in vec3 FragPos; \u8fd9\u4e2ain\u7c7b\u578b\u53d8\u91cf\u5c06\u88ab\u63d2\u5165\u4e09\u89d2\u5f62\u76843\u7ef4\u4e16\u754c\u4f4d\u7f6e\u5411\u91cf\u503c\uff0c\u5f62\u6210FragPos\u5411\u91cf\uff0c\u5373\u6bcf\u4e2a\u7247\u6bb5\u7684\u4e16\u754c\u4f4d\u7f6e\u3002\u73b0\u5728\uff0c\u6240\u6709\u9700\u8981\u7684\u53d8\u91cf\u90fd\u8bbe\u7f6e\u597d\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u6dfb\u52a0\u5149\u7167\u8ba1\u7b97\u4e86\u3002 \u6211\u4eec\u9700\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u8ba1\u7b97\u5149\u6e90\u548c\u7247\u6bb5\u4f4d\u7f6e\u4e4b\u95f4\u7684\u65b9\u5411\u5411\u91cf\u3002\u524d\u9762\u63d0\u5230\uff0c\u5149\u7684\u65b9\u5411\u5411\u91cf\u662f\u5149\u6e90\u4f4d\u7f6e\u5411\u91cf\u4e0e\u7247\u6bb5\u4f4d\u7f6e\u5411\u91cf\u4e4b\u95f4\u7684\u5411\u91cf\u5dee\u3002\u4f60\u53ef\u80fd\u8bb0\u5f97\u5728 \u53d8\u6362 \u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u80fd\u591f\u7b80\u5355\u5730\u901a\u8fc7\u8ba9\u4e24\u4e2a\u5411\u91cf\u76f8\u51cf\u7684\u65b9\u5f0f\u8ba1\u7b97\u5411\u91cf\u5dee\u3002\u6211\u4eec\u540c\u6837\u5e0c\u671b\u786e\u4fdd\u6240\u6709\u76f8\u5173\u5411\u91cf\u6700\u540e\u90fd\u8f6c\u6362\u4e3a\u5355\u4f4d\u5411\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u6cd5\u7ebf\u548c\u6700\u7ec8\u7684\u65b9\u5411\u5411\u91cf\u90fd\u8fdb\u884c\u6807\u51c6\u5316\uff1a vec3 norm = normalize(Normal); vec3 lightDir = normalize(lightPos - FragPos); Important \u5f53\u8ba1\u7b97\u5149\u7167\u65f6\u6211\u4eec\u901a\u5e38\u4e0d\u5173\u5fc3\u4e00\u4e2a\u5411\u91cf\u7684\u6a21\u957f\u6216\u5b83\u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u5b83\u4eec\u7684\u65b9\u5411\u3002\u6240\u4ee5\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u8ba1\u7b97\u90fd\u4f7f\u7528\u5355\u4f4d\u5411\u91cf\u5b8c\u6210\uff0c\u56e0\u4e3a\u8fd9\u7b80\u5316\u4e86\u5927\u90e8\u5206\u7684\u8ba1\u7b97\uff08\u6bd4\u5982\u70b9\u4e58\uff09\u3002\u6240\u4ee5\u5f53\u8fdb\u884c\u5149\u7167\u8ba1\u7b97\u65f6\uff0c\u786e\u4fdd\u4f60\u603b\u662f\u5bf9\u76f8\u5173\u5411\u91cf\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u6765\u4fdd\u8bc1\u5b83\u4eec\u662f\u771f\u6b63\u5730\u5355\u4f4d\u5411\u91cf\u3002\u5fd8\u8bb0\u5bf9\u5411\u91cf\u8fdb\u884c\u6807\u51c6\u5316\u662f\u4e00\u4e2a\u5341\u5206\u5e38\u89c1\u7684\u9519\u8bef\u3002 \u4e0b\u4e00\u6b65\uff0c\u6211\u4eec\u5bf9 norm \u548c lightDir \u5411\u91cf\u8fdb\u884c\u70b9\u4e58\uff0c\u8ba1\u7b97\u5149\u6e90\u5bf9\u5f53\u524d\u7247\u6bb5\u5b9e\u9645\u7684\u6f2b\u53cd\u5c04\u5f71\u54cd\u3002\u7ed3\u679c\u503c\u518d\u4e58\u4ee5\u5149\u7684\u989c\u8272\uff0c\u5f97\u5230\u6f2b\u53cd\u5c04\u5206\u91cf\u3002\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u89d2\u5ea6\u8d8a\u5927\uff0c\u6f2b\u53cd\u5c04\u5206\u91cf\u5c31\u4f1a\u8d8a\u5c0f\uff1a float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = diff * lightColor; \u5982\u679c\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u89d2\u5ea6\u5927\u4e8e90\u5ea6\uff0c\u70b9\u4e58\u7684\u7ed3\u679c\u5c31\u4f1a\u53d8\u6210\u8d1f\u6570\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u6f2b\u53cd\u5c04\u5206\u91cf\u53d8\u4e3a\u8d1f\u6570\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u4f7f\u7528 max \u51fd\u6570\u8fd4\u56de\u4e24\u4e2a\u53c2\u6570\u4e4b\u95f4\u8f83\u5927\u7684\u53c2\u6570\uff0c\u4ece\u800c\u4fdd\u8bc1\u6f2b\u53cd\u5c04\u5206\u91cf\u4e0d\u4f1a\u53d8\u6210\u8d1f\u6570\u3002\u8d1f\u6570\u989c\u8272\u7684\u5149\u7167\u662f\u6ca1\u6709\u5b9a\u4e49\u7684\uff0c\u6240\u4ee5\u6700\u597d\u907f\u514d\u5b83\uff0c\u9664\u975e\u4f60\u662f\u90a3\u79cd\u53e4\u602a\u7684\u827a\u672f\u5bb6\u3002 \u73b0\u5728\u6211\u4eec\u6709\u4e86\u73af\u5883\u5149\u5206\u91cf\u548c\u6f2b\u53cd\u5c04\u5206\u91cf\uff0c\u6211\u4eec\u628a\u5b83\u4eec\u76f8\u52a0\uff0c\u7136\u540e\u628a\u7ed3\u679c\u4e58\u4ee5\u7269\u4f53\u7684\u989c\u8272\uff0c\u6765\u83b7\u5f97\u7247\u6bb5\u6700\u540e\u7684\u8f93\u51fa\u989c\u8272\u3002 vec3 result = (ambient + diffuse) * objectColor; FragColor = vec4(result, 1.0); \u5982\u679c\u4f60\u7684\u5e94\u7528(\u548c\u7740\u8272\u5668)\u7f16\u8bd1\u6210\u529f\u4e86\uff0c\u4f60\u53ef\u80fd\u770b\u5230\u7c7b\u4f3c\u7684\u8f93\u51fa\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\u4f7f\u7528\u4e86\u6f2b\u53cd\u5c04\u5149\u7167\uff0c\u7acb\u65b9\u4f53\u770b\u8d77\u6765\u5c31\u771f\u7684\u50cf\u4e2a\u7acb\u65b9\u4f53\u4e86\u3002\u5c1d\u8bd5\u5728\u4f60\u7684\u8111\u4e2d\u60f3\u8c61\u4e00\u4e0b\u6cd5\u5411\u91cf\uff0c\u5e76\u5728\u7acb\u65b9\u4f53\u5468\u56f4\u79fb\u52a8\uff0c\u6ce8\u610f\u89c2\u5bdf\u6cd5\u5411\u91cf\u548c\u5149\u7684\u65b9\u5411\u5411\u91cf\u4e4b\u95f4\u7684\u5939\u89d2\u8d8a\u5927\uff0c\u7247\u6bb5\u5c31\u4f1a\u8d8a\u6697\u3002 \u5982\u679c\u4f60\u5728\u54ea\u5361\u4f4f\u4e86\uff0c\u53ef\u4ee5\u5728 \u8fd9\u91cc \u5bf9\u6bd4\u4e00\u4e0b\u5b8c\u6574\u7684\u6e90\u4ee3\u7801\u3002","title":"\u8ba1\u7b97\u6f2b\u53cd\u5c04\u5149\u7167"},{"location":"02%20Lighting/02%20Basic%20Lighting/#_6","text":"\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u628a\u6cd5\u5411\u91cf\u4ece\u9876\u70b9\u7740\u8272\u5668\u4f20\u5230\u4e86\u7247\u6bb5\u7740\u8272\u5668\u3002\u53ef\u662f\uff0c\u76ee\u524d\u7247\u6bb5\u7740\u8272\u5668\u91cc\u7684\u8ba1\u7b97\u90fd\u662f\u5728\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u4e2d\u8fdb\u884c\u7684\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u662f\u4e0d\u662f\u5e94\u8be5\u628a\u6cd5\u5411\u91cf\u4e5f\u8f6c\u6362\u4e3a\u4e16\u754c\u7a7a\u95f4\u5750\u6807\uff1f\u57fa\u672c\u6b63\u786e\uff0c\u4f46\u662f\u8fd9\u4e0d\u662f\u7b80\u5355\u5730\u628a\u5b83\u4e58\u4ee5\u4e00\u4e2a\u6a21\u578b\u77e9\u9635\u5c31\u80fd\u641e\u5b9a\u7684\u3002 \u9996\u5148\uff0c\u6cd5\u5411\u91cf\u53ea\u662f\u4e00\u4e2a\u65b9\u5411\u5411\u91cf\uff0c\u4e0d\u80fd\u8868\u8fbe\u7a7a\u95f4\u4e2d\u7684\u7279\u5b9a\u4f4d\u7f6e\u3002\u540c\u65f6\uff0c\u6cd5\u5411\u91cf\u6ca1\u6709\u9f50\u6b21\u5750\u6807\uff08\u9876\u70b9\u4f4d\u7f6e\u4e2d\u7684w\u5206\u91cf\uff09\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4f4d\u79fb\u4e0d\u5e94\u8be5\u5f71\u54cd\u5230\u6cd5\u5411\u91cf\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u6253\u7b97\u628a\u6cd5\u5411\u91cf\u4e58\u4ee5\u4e00\u4e2a\u6a21\u578b\u77e9\u9635\uff0c\u6211\u4eec\u5c31\u8981\u4ece\u77e9\u9635\u4e2d\u79fb\u9664\u4f4d\u79fb\u90e8\u5206\uff0c\u53ea\u9009\u7528\u6a21\u578b\u77e9\u9635\u5de6\u4e0a\u89d23\u00d73\u7684\u77e9\u9635\uff08\u6ce8\u610f\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u628a\u6cd5\u5411\u91cf\u7684w\u5206\u91cf\u8bbe\u7f6e\u4e3a0\uff0c\u518d\u4e58\u4ee54\u00d74\u77e9\u9635\uff1b\u8fd9\u540c\u6837\u53ef\u4ee5\u79fb\u9664\u4f4d\u79fb\uff09\u3002\u5bf9\u4e8e\u6cd5\u5411\u91cf\uff0c\u6211\u4eec\u53ea\u5e0c\u671b\u5bf9\u5b83\u5b9e\u65bd\u7f29\u653e\u548c\u65cb\u8f6c\u53d8\u6362\u3002 \u5176\u6b21\uff0c\u5982\u679c\u6a21\u578b\u77e9\u9635\u6267\u884c\u4e86\u4e0d\u7b49\u6bd4\u7f29\u653e\uff0c\u9876\u70b9\u7684\u6539\u53d8\u4f1a\u5bfc\u81f4\u6cd5\u5411\u91cf\u4e0d\u518d\u5782\u76f4\u4e8e\u8868\u9762\u4e86\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u80fd\u7528\u8fd9\u6837\u7684\u6a21\u578b\u77e9\u9635\u6765\u53d8\u6362\u6cd5\u5411\u91cf\u3002\u4e0b\u9762\u7684\u56fe\u5c55\u793a\u4e86\u5e94\u7528\u4e86\u4e0d\u7b49\u6bd4\u7f29\u653e\u7684\u6a21\u578b\u77e9\u9635\u5bf9\u6cd5\u5411\u91cf\u7684\u5f71\u54cd\uff1a \u6bcf\u5f53\u6211\u4eec\u5e94\u7528\u4e00\u4e2a\u4e0d\u7b49\u6bd4\u7f29\u653e\u65f6\uff08\u6ce8\u610f\uff1a\u7b49\u6bd4\u7f29\u653e\u4e0d\u4f1a\u7834\u574f\u6cd5\u7ebf\uff0c\u56e0\u4e3a\u6cd5\u7ebf\u7684\u65b9\u5411\u6ca1\u88ab\u6539\u53d8\uff0c\u4ec5\u4ec5\u6539\u53d8\u4e86\u6cd5\u7ebf\u7684\u957f\u5ea6\uff0c\u800c\u8fd9\u5f88\u5bb9\u6613\u901a\u8fc7\u6807\u51c6\u5316\u6765\u4fee\u590d\uff09\uff0c\u6cd5\u5411\u91cf\u5c31\u4e0d\u4f1a\u518d\u5782\u76f4\u4e8e\u5bf9\u5e94\u7684\u8868\u9762\u4e86\uff0c\u8fd9\u6837\u5149\u7167\u5c31\u4f1a\u88ab\u7834\u574f\u3002 \u4fee\u590d\u8fd9\u4e2a\u884c\u4e3a\u7684\u8bc0\u7a8d\u662f\u4f7f\u7528\u4e00\u4e2a\u4e3a\u6cd5\u5411\u91cf\u4e13\u95e8\u5b9a\u5236\u7684\u6a21\u578b\u77e9\u9635\u3002\u8fd9\u4e2a\u77e9\u9635\u79f0\u4e4b\u4e3a \u6cd5\u7ebf\u77e9\u9635 (Normal Matrix)\uff0c\u5b83\u4f7f\u7528\u4e86\u4e00\u4e9b\u7ebf\u6027\u4ee3\u6570\u7684\u64cd\u4f5c\u6765\u79fb\u9664\u5bf9\u6cd5\u5411\u91cf\u9519\u8bef\u7f29\u653e\u7684\u5f71\u54cd\u3002\u5982\u679c\u4f60\u60f3\u77e5\u9053\u8fd9\u4e2a\u77e9\u9635\u662f\u5982\u4f55\u8ba1\u7b97\u51fa\u6765\u7684\uff0c\u5efa\u8bae\u53bb\u9605\u8bfb\u8fd9\u4e2a \u6587\u7ae0 \u3002 \u6cd5\u7ebf\u77e9\u9635\u88ab\u5b9a\u4e49\u4e3a\u300c\u6a21\u578b\u77e9\u9635\u5de6\u4e0a\u89d23x3\u90e8\u5206\u7684\u9006\u77e9\u9635\u7684\u8f6c\u7f6e\u77e9\u9635\u300d\u3002\u771f\u662f\u62d7\u53e3\uff0c\u5982\u679c\u4f60\u4e0d\u660e\u767d\u8fd9\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u522b\u62c5\u5fc3\uff0c\u6211\u4eec\u8fd8\u6ca1\u6709\u8ba8\u8bba\u9006\u77e9\u9635(Inverse Matrix)\u548c\u8f6c\u7f6e\u77e9\u9635(Transpose Matrix)\u3002\u6ce8\u610f\uff0c\u5927\u90e8\u5206\u7684\u8d44\u6e90\u90fd\u4f1a\u5c06\u6cd5\u7ebf\u77e9\u9635\u5b9a\u4e49\u4e3a\u5e94\u7528\u5230\u6a21\u578b-\u89c2\u5bdf\u77e9\u9635(Model-view Matrix)\u4e0a\u7684\u64cd\u4f5c\uff0c\u4f46\u662f\u7531\u4e8e\u6211\u4eec\u53ea\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\u8fdb\u884c\u64cd\u4f5c\uff08\u4e0d\u662f\u5728\u89c2\u5bdf\u7a7a\u95f4\uff09\uff0c\u6211\u4eec\u53ea\u4f7f\u7528\u6a21\u578b\u77e9\u9635\u3002 \u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 inverse \u548c transpose \u51fd\u6570\u81ea\u5df1\u751f\u6210\u8fd9\u4e2a\u6cd5\u7ebf\u77e9\u9635\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u5bf9\u6240\u6709\u7c7b\u578b\u77e9\u9635\u90fd\u6709\u6548\u3002\u6ce8\u610f\u6211\u4eec\u8fd8\u8981\u628a\u88ab\u5904\u7406\u8fc7\u7684\u77e9\u9635\u5f3a\u5236\u8f6c\u6362\u4e3a3\u00d73\u77e9\u9635\uff0c\u6765\u4fdd\u8bc1\u5b83\u5931\u53bb\u4e86\u4f4d\u79fb\u5c5e\u6027\u4ee5\u53ca\u80fd\u591f\u4e58\u4ee5 vec3 \u7684\u6cd5\u5411\u91cf\u3002 Normal = mat3(transpose(inverse(model))) * aNormal; Attention \u77e9\u9635\u6c42\u9006\u662f\u4e00\u9879\u5bf9\u4e8e\u7740\u8272\u5668\u5f00\u9500\u5f88\u5927\u7684\u8fd0\u7b97\uff0c\u56e0\u4e3a\u5b83\u5fc5\u987b\u5728\u573a\u666f\u4e2d\u7684\u6bcf\u4e00\u4e2a\u9876\u70b9\u4e0a\u8fdb\u884c\uff0c\u6240\u4ee5\u5e94\u8be5\u5c3d\u53ef\u80fd\u5730\u907f\u514d\u5728\u7740\u8272\u5668\u4e2d\u8fdb\u884c\u6c42\u9006\u8fd0\u7b97\u3002\u4ee5\u5b66\u4e60\u4e3a\u76ee\u7684\u7684\u8bdd\u8fd9\u6837\u505a\u8fd8\u597d\uff0c\u4f46\u662f\u5bf9\u4e8e\u4e00\u4e2a\u9ad8\u6548\u7684\u5e94\u7528\u6765\u8bf4\uff0c\u4f60\u6700\u597d\u5148\u5728CPU\u4e0a\u8ba1\u7b97\u51fa\u6cd5\u7ebf\u77e9\u9635\uff0c\u518d\u901a\u8fc7uniform\u628a\u5b83\u4f20\u9012\u7ed9\u7740\u8272\u5668\uff08\u5c31\u50cf\u6a21\u578b\u77e9\u9635\u4e00\u6837\uff09\u3002 \u5728\u6f2b\u53cd\u5c04\u5149\u7167\u90e8\u5206\uff0c\u5149\u7167\u8868\u73b0\u5e76\u6ca1\u6709\u95ee\u9898\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u5bf9\u7269\u4f53\u8fdb\u884c\u4efb\u4f55\u7f29\u653e\u64cd\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u5e76\u4e0d\u771f\u7684\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u6cd5\u7ebf\u77e9\u9635\uff0c\u800c\u662f\u4ec5\u4ee5\u6a21\u578b\u77e9\u9635\u4e58\u4ee5\u6cd5\u7ebf\u5c31\u53ef\u4ee5\u3002\u4f46\u662f\u5982\u679c\u4f60\u4f1a\u8fdb\u884c\u4e0d\u7b49\u6bd4\u7f29\u653e\uff0c\u4f7f\u7528\u6cd5\u7ebf\u77e9\u9635\u53bb\u4e58\u4ee5\u6cd5\u5411\u91cf\u5c31\u662f\u5fc5\u987b\u7684\u4e86\u3002","title":"\u6700\u540e\u4e00\u4ef6\u4e8b"},{"location":"02%20Lighting/02%20Basic%20Lighting/#_7","text":"\u5982\u679c\u4f60\u8fd8\u6ca1\u88ab\u8fd9\u4e9b\u5149\u7167\u8ba1\u7b97\u641e\u5f97\u7cbe\u75b2\u529b\u5c3d\uff0c\u6211\u4eec\u5c31\u518d\u628a\u955c\u9762\u9ad8\u5149(Specular Highlight)\u52a0\u8fdb\u6765\uff0c\u8fd9\u6837\u98ce\u6c0f\u5149\u7167\u624d\u7b97\u5b8c\u6574\u3002 \u548c\u6f2b\u53cd\u5c04\u5149\u7167\u4e00\u6837\uff0c\u955c\u9762\u5149\u7167\u4e5f\u51b3\u5b9a\u4e8e\u5149\u7684\u65b9\u5411\u5411\u91cf\u548c\u7269\u4f53\u7684\u6cd5\u5411\u91cf\uff0c\u4f46\u662f\u5b83\u4e5f\u51b3\u5b9a\u4e8e\u89c2\u5bdf\u65b9\u5411\uff0c\u4f8b\u5982\u73a9\u5bb6\u662f\u4ece\u4ec0\u4e48\u65b9\u5411\u770b\u5411\u8fd9\u4e2a\u7247\u6bb5\u7684\u3002\u955c\u9762\u5149\u7167\u51b3\u5b9a\u4e8e\u8868\u9762\u7684\u53cd\u5c04\u7279\u6027\u3002\u5982\u679c\u6211\u4eec\u628a\u7269\u4f53\u8868\u9762\u8bbe\u60f3\u4e3a\u4e00\u9762\u955c\u5b50\uff0c\u90a3\u4e48\u955c\u9762\u5149\u7167\u6700\u5f3a\u7684\u5730\u65b9\u5c31\u662f\u6211\u4eec\u770b\u5230\u8868\u9762\u4e0a\u53cd\u5c04\u5149\u7684\u5730\u65b9\u3002\u4f60\u53ef\u4ee5\u5728\u4e0b\u56fe\u4e2d\u770b\u5230\u6548\u679c\uff1a \u6211\u4eec\u901a\u8fc7\u6839\u636e\u6cd5\u5411\u91cf\u7ffb\u6298\u5165\u5c04\u5149\u7684\u65b9\u5411\u6765\u8ba1\u7b97\u53cd\u5c04\u5411\u91cf\u3002\u7136\u540e\u6211\u4eec\u8ba1\u7b97\u53cd\u5c04\u5411\u91cf\u4e0e\u89c2\u5bdf\u65b9\u5411\u7684\u89d2\u5ea6\u5dee\uff0c\u5b83\u4eec\u4e4b\u95f4\u5939\u89d2\u8d8a\u5c0f\uff0c\u955c\u9762\u5149\u7684\u4f5c\u7528\u5c31\u8d8a\u5927\u3002\u7531\u6b64\u4ea7\u751f\u7684\u6548\u679c\u5c31\u662f\uff0c\u6211\u4eec\u770b\u5411\u5728\u5165\u5c04\u5149\u5728\u8868\u9762\u7684\u53cd\u5c04\u65b9\u5411\u65f6\uff0c\u4f1a\u770b\u5230\u4e00\u70b9\u9ad8\u5149\u3002 \u89c2\u5bdf\u5411\u91cf\u662f\u6211\u4eec\u8ba1\u7b97\u955c\u9762\u5149\u7167\u65f6\u9700\u8981\u7684\u4e00\u4e2a\u989d\u5916\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u89c2\u5bdf\u8005\u7684\u4e16\u754c\u7a7a\u95f4\u4f4d\u7f6e\u548c\u7247\u6bb5\u7684\u4f4d\u7f6e\u6765\u8ba1\u7b97\u5b83\u3002\u4e4b\u540e\u6211\u4eec\u8ba1\u7b97\u51fa\u955c\u9762\u5149\u7167\u5f3a\u5ea6\uff0c\u7528\u5b83\u4e58\u4ee5\u5149\u6e90\u7684\u989c\u8272\uff0c\u5e76\u5c06\u5b83\u4e0e\u73af\u5883\u5149\u7167\u548c\u6f2b\u53cd\u5c04\u5149\u7167\u90e8\u5206\u52a0\u548c\u3002 Important \u6211\u4eec\u9009\u62e9\u5728\u4e16\u754c\u7a7a\u95f4\u8fdb\u884c\u5149\u7167\u8ba1\u7b97\uff0c\u4f46\u662f\u5927\u591a\u6570\u4eba\u8d8b\u5411\u4e8e\u66f4\u504f\u5411\u5728\u89c2\u5bdf\u7a7a\u95f4\u8fdb\u884c\u5149\u7167\u8ba1\u7b97\u3002\u5728\u89c2\u5bdf\u7a7a\u95f4\u8ba1\u7b97\u7684\u4f18\u52bf\u662f\uff0c\u89c2\u5bdf\u8005\u7684\u4f4d\u7f6e\u603b\u662f\u5728(0, 0, 0)\uff0c\u6240\u4ee5\u4f60\u5df2\u7ecf\u96f6\u6210\u672c\u5730\u62ff\u5230\u4e86\u89c2\u5bdf\u8005\u7684\u4f4d\u7f6e\u3002\u7136\u800c\uff0c\u82e5\u4ee5\u5b66\u4e60\u4e3a\u76ee\u7684\uff0c\u6211\u8ba4\u4e3a\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\u8ba1\u7b97\u5149\u7167\u66f4\u7b26\u5408\u76f4\u89c9\u3002\u5982\u679c\u4f60\u4ecd\u7136\u5e0c\u671b\u5728\u89c2\u5bdf\u7a7a\u95f4\u8ba1\u7b97\u5149\u7167\u7684\u8bdd\uff0c\u4f60\u9700\u8981\u5c06\u6240\u6709\u76f8\u5173\u7684\u5411\u91cf\u4e5f\u7528\u89c2\u5bdf\u77e9\u9635\u8fdb\u884c\u53d8\u6362\uff08\u4e0d\u8981\u5fd8\u8bb0\u4e5f\u4fee\u6539\u6cd5\u7ebf\u77e9\u9635\uff09\u3002 \u8981\u5f97\u5230\u89c2\u5bdf\u8005\u7684\u4e16\u754c\u7a7a\u95f4\u5750\u6807\uff0c\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u5411\u91cf\u5373\u53ef\uff08\u5b83\u5f53\u7136\u5c31\u662f\u90a3\u4e2a\u89c2\u5bdf\u8005\uff09\u3002\u90a3\u4e48\u8ba9\u6211\u4eec\u628a\u53e6\u4e00\u4e2auniform\u6dfb\u52a0\u5230\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u5e76\u628a\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u5411\u91cf\u4f20\u7ed9\u7740\u8272\u5668\uff1a uniform vec3 viewPos; lightingShader.setVec3(\"viewPos\", camera.Position); \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u83b7\u5f97\u6240\u6709\u9700\u8981\u7684\u53d8\u91cf\uff0c\u53ef\u4ee5\u8ba1\u7b97\u9ad8\u5149\u5f3a\u5ea6\u4e86\u3002\u9996\u5148\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u955c\u9762\u5f3a\u5ea6(Specular Intensity)\u53d8\u91cf\uff0c\u7ed9\u955c\u9762\u9ad8\u5149\u4e00\u4e2a\u4e2d\u7b49\u4eae\u5ea6\u989c\u8272\uff0c\u8ba9\u5b83\u4e0d\u8981\u4ea7\u751f\u8fc7\u5ea6\u7684\u5f71\u54cd\u3002 float specularStrength = 0.5; \u5982\u679c\u6211\u4eec\u628a\u5b83\u8bbe\u7f6e\u4e3a1.0f\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2a\u975e\u5e38\u4eae\u7684\u955c\u9762\u5149\u5206\u91cf\uff0c\u8fd9\u5bf9\u4e8e\u4e00\u4e2a\u73ca\u745a\u8272\u7684\u7acb\u65b9\u4f53\u6765\u8bf4\u6709\u70b9\u592a\u591a\u4e86\u3002 \u4e0b\u4e00\u8282\u6559\u7a0b \u4e2d\u6211\u4eec\u4f1a\u8ba8\u8bba\u5982\u4f55\u5408\u7406\u8bbe\u7f6e\u8fd9\u4e9b\u5149\u7167\u5f3a\u5ea6\uff0c\u4ee5\u53ca\u5b83\u4eec\u662f\u5982\u4f55\u5f71\u54cd\u7269\u4f53\u7684\u3002\u4e0b\u4e00\u6b65\uff0c\u6211\u4eec\u8ba1\u7b97\u89c6\u7ebf\u65b9\u5411\u5411\u91cf\uff0c\u548c\u5bf9\u5e94\u7684\u6cbf\u7740\u6cd5\u7ebf\u8f74\u7684\u53cd\u5c04\u5411\u91cf\uff1a vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); \u9700\u8981\u6ce8\u610f\u7684\u662f\u6211\u4eec\u5bf9 lightDir \u5411\u91cf\u8fdb\u884c\u4e86\u53d6\u53cd\u3002 reflect \u51fd\u6570\u8981\u6c42\u7b2c\u4e00\u4e2a\u5411\u91cf\u662f \u4ece \u5149\u6e90\u6307\u5411\u7247\u6bb5\u4f4d\u7f6e\u7684\u5411\u91cf\uff0c\u4f46\u662f lightDir \u5f53\u524d\u6b63\u597d\u76f8\u53cd\uff0c\u662f\u4ece\u7247\u6bb5 \u6307\u5411 \u5149\u6e90\uff08\u7531\u5148\u524d\u6211\u4eec\u8ba1\u7b97 lightDir \u5411\u91cf\u65f6\uff0c\u51cf\u6cd5\u7684\u987a\u5e8f\u51b3\u5b9a\uff09\u3002\u4e3a\u4e86\u4fdd\u8bc1\u6211\u4eec\u5f97\u5230\u6b63\u786e\u7684 reflect \u5411\u91cf\uff0c\u6211\u4eec\u901a\u8fc7\u5bf9 lightDir \u5411\u91cf\u53d6\u53cd\u6765\u83b7\u5f97\u76f8\u53cd\u7684\u65b9\u5411\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8981\u6c42\u662f\u4e00\u4e2a\u6cd5\u5411\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u63d0\u4f9b\u7684\u662f\u5df2\u6807\u51c6\u5316\u7684 norm \u5411\u91cf\u3002 \u5269\u4e0b\u8981\u505a\u7684\u662f\u8ba1\u7b97\u955c\u9762\u5206\u91cf\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5b8c\u6210\u4e86\u8fd9\u4ef6\u4e8b\uff1a float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32); vec3 specular = specularStrength * spec * lightColor; \u6211\u4eec\u5148\u8ba1\u7b97\u89c6\u7ebf\u65b9\u5411\u4e0e\u53cd\u5c04\u65b9\u5411\u7684\u70b9\u4e58\uff08\u5e76\u786e\u4fdd\u5b83\u4e0d\u662f\u8d1f\u503c\uff09\uff0c\u7136\u540e\u53d6\u5b83\u768432\u6b21\u5e42\u3002\u8fd9\u4e2a32\u662f\u9ad8\u5149\u7684 \u53cd\u5149\u5ea6 (Shininess)\u3002\u4e00\u4e2a\u7269\u4f53\u7684\u53cd\u5149\u5ea6\u8d8a\u9ad8\uff0c\u53cd\u5c04\u5149\u7684\u80fd\u529b\u8d8a\u5f3a\uff0c\u6563\u5c04\u5f97\u8d8a\u5c11\uff0c\u9ad8\u5149\u70b9\u5c31\u4f1a\u8d8a\u5c0f\u3002\u5728\u4e0b\u9762\u7684\u56fe\u7247\u91cc\uff0c\u4f60\u4f1a\u770b\u5230\u4e0d\u540c\u53cd\u5149\u5ea6\u7684\u89c6\u89c9\u6548\u679c\u5f71\u54cd\uff1a \u6211\u4eec\u4e0d\u5e0c\u671b\u955c\u9762\u6210\u5206\u8fc7\u4e8e\u663e\u773c\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u6307\u6570\u4fdd\u6301\u4e3a32\u3002\u5269\u4e0b\u7684\u6700\u540e\u4e00\u4ef6\u4e8b\u60c5\u662f\u628a\u5b83\u52a0\u5230\u73af\u5883\u5149\u5206\u91cf\u548c\u6f2b\u53cd\u5c04\u5206\u91cf\u91cc\uff0c\u518d\u7528\u7ed3\u679c\u4e58\u4ee5\u7269\u4f53\u7684\u989c\u8272\uff1a vec3 result = (ambient + diffuse + specular) * objectColor; FragColor = vec4(result, 1.0); \u6211\u4eec\u73b0\u5728\u4e3a\u98ce\u6c0f\u5149\u7167\u8ba1\u7b97\u4e86\u5168\u90e8\u7684\u5149\u7167\u5206\u91cf\u3002\u6839\u636e\u4f60\u7684\u89c6\u89d2\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u7c7b\u4f3c\u4e0b\u9762\u7684\u753b\u9762\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5b8c\u6574\u6e90\u7801\u3002 Important \u5728\u5149\u7167\u7740\u8272\u5668\u7684\u65e9\u671f\uff0c\u5f00\u53d1\u8005\u66fe\u7ecf\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5b9e\u73b0\u98ce\u6c0f\u5149\u7167\u6a21\u578b\u3002\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u505a\u5149\u7167\u7684\u4f18\u52bf\u662f\uff0c\u76f8\u6bd4\u7247\u6bb5\u6765\u8bf4\uff0c\u9876\u70b9\u8981\u5c11\u5f97\u591a\uff0c\u56e0\u6b64\u4f1a\u66f4\u9ad8\u6548\uff0c\u6240\u4ee5\uff08\u5f00\u9500\u5927\u7684\uff09\u5149\u7167\u8ba1\u7b97\u9891\u7387\u4f1a\u66f4\u4f4e\u3002\u7136\u800c\uff0c\u9876\u70b9\u7740\u8272\u5668\u4e2d\u7684\u6700\u7ec8\u989c\u8272\u503c\u662f\u4ec5\u4ec5\u53ea\u662f\u90a3\u4e2a\u9876\u70b9\u7684\u989c\u8272\u503c\uff0c\u7247\u6bb5\u7684\u989c\u8272\u503c\u662f\u7531\u63d2\u503c\u5149\u7167\u989c\u8272\u6240\u5f97\u6765\u7684\u3002\u7ed3\u679c\u5c31\u662f\u8fd9\u79cd\u5149\u7167\u770b\u8d77\u6765\u4e0d\u4f1a\u975e\u5e38\u771f\u5b9e\uff0c\u9664\u975e\u4f7f\u7528\u4e86\u5927\u91cf\u9876\u70b9\u3002 \u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5b9e\u73b0\u7684\u98ce\u6c0f\u5149\u7167\u6a21\u578b\u53eb\u505a Gouraud\u7740\u8272 (Gouraud Shading)\uff0c\u800c\u4e0d\u662f \u98ce\u6c0f\u7740\u8272 (Phong Shading)\u3002\u8bb0\u4f4f\uff0c\u7531\u4e8e\u63d2\u503c\uff0c\u8fd9\u79cd\u5149\u7167\u770b\u8d77\u6765\u6709\u70b9\u900a\u8272\u3002\u98ce\u6c0f\u7740\u8272\u80fd\u4ea7\u751f\u66f4\u5e73\u6ed1\u7684\u5149\u7167\u6548\u679c\u3002 \u73b0\u5728\u4f60\u5e94\u8be5\u80fd\u591f\u770b\u5230\u7740\u8272\u5668\u7684\u5f3a\u5927\u4e4b\u5904\u4e86\u3002\u53ea\u7528\u5f88\u5c11\u7684\u4fe1\u606f\uff0c\u7740\u8272\u5668\u5c31\u80fd\u8ba1\u7b97\u51fa\u5149\u7167\u5982\u4f55\u5f71\u54cd\u5230\u6240\u6709\u7269\u4f53\u7684\u7247\u6bb5\u989c\u8272\u3002 \u4e0b\u4e00\u8282 \u4e2d\uff0c\u6211\u4eec\u4f1a\u66f4\u6df1\u5165\u7684\u7814\u7a76\u5149\u7167\u6a21\u578b\uff0c\u770b\u770b\u6211\u4eec\u8fd8\u80fd\u505a\u4e9b\u4ec0\u4e48\u3002","title":"\u955c\u9762\u5149\u7167"},{"location":"02%20Lighting/02%20Basic%20Lighting/#_8","text":"\u76ee\u524d\uff0c\u6211\u4eec\u7684\u5149\u6e90\u662f\u9759\u6b62\u7684\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528 sin \u6216 cos \u51fd\u6570\u8ba9\u5149\u6e90\u5728\u573a\u666f\u4e2d\u6765\u56de\u79fb\u52a8\u3002\u89c2\u5bdf\u5149\u7167\u968f\u65f6\u95f4\u7684\u6539\u53d8\u80fd\u8ba9\u4f60\u66f4\u5bb9\u6613\u7406\u89e3\u98ce\u6c0f\u5149\u7167\u6a21\u578b\u3002 \u53c2\u8003\u89e3\u7b54 \u3002 \u5c1d\u8bd5\u4f7f\u7528\u4e0d\u540c\u7684\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5f3a\u5ea6\uff0c\u89c2\u5bdf\u5b83\u4eec\u600e\u4e48\u662f\u5f71\u54cd\u5149\u7167\u6548\u679c\u7684\u3002\u540c\u6837\uff0c\u5c1d\u8bd5\u5b9e\u9a8c\u4e00\u4e0b\u955c\u9762\u5149\u7167\u7684\u53cd\u5149\u5ea6\u56e0\u5b50\u3002\u5c1d\u8bd5\u7406\u89e3\u4e3a\u4ec0\u4e48\u67d0\u4e00\u4e2a\u503c\u80fd\u591f\u6709\u7740\u7279\u5b9a\u89c6\u89c9\u8f93\u51fa\u3002 \u5728\u89c2\u5bdf\u7a7a\u95f4\uff08\u800c\u4e0d\u662f\u4e16\u754c\u7a7a\u95f4\uff09\u4e2d\u8ba1\u7b97\u98ce\u6c0f\u5149\u7167\uff1a \u53c2\u8003\u89e3\u7b54 \u3002 \u5c1d\u8bd5\u5b9e\u73b0\u4e00\u4e2aGouraud\u7740\u8272\uff08\u800c\u4e0d\u662f\u98ce\u6c0f\u7740\u8272\uff09\u3002\u5982\u679c\u4f60\u505a\u5bf9\u4e86\u8bdd\uff0c\u7acb\u65b9\u4f53\u7684\u5149\u7167\u5e94\u8be5\u4f1a \u770b\u8d77\u6765\u6709\u4e9b\u5947\u602a \uff0c\u5c1d\u8bd5\u63a8\u7406\u4e3a\u4ec0\u4e48\u5b83\u4f1a\u770b\u8d77\u6765\u8fd9\u4e48\u5947\u602a\uff1a \u53c2\u8003\u89e3\u7b54 \u3002","title":"\u7ec3\u4e60"},{"location":"02%20Lighting/03%20Materials/","text":"\u6750\u8d28 \u539f\u6587 Materials \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 AoZhang \u5728\u73b0\u5b9e\u4e16\u754c\u91cc\uff0c\u6bcf\u4e2a\u7269\u4f53\u4f1a\u5bf9\u5149\u4ea7\u751f\u4e0d\u540c\u7684\u53cd\u5e94\u3002\u6bd4\u5982\uff0c\u94a2\u5236\u7269\u4f53\u770b\u8d77\u6765\u901a\u5e38\u4f1a\u6bd4\u9676\u571f\u82b1\u74f6\u66f4\u95ea\u95ea\u53d1\u5149\uff0c\u4e00\u4e2a\u6728\u5934\u7bb1\u5b50\u4e5f\u4e0d\u4f1a\u4e0e\u4e00\u4e2a\u94a2\u5236\u7bb1\u5b50\u53cd\u5c04\u540c\u6837\u7a0b\u5ea6\u7684\u5149\u3002\u6709\u4e9b\u7269\u4f53\u53cd\u5c04\u5149\u7684\u65f6\u5019\u4e0d\u4f1a\u6709\u592a\u591a\u7684\u6563\u5c04(Scatter)\uff0c\u56e0\u800c\u4ea7\u751f\u8f83\u5c0f\u7684\u9ad8\u5149\u70b9\uff0c\u800c\u6709\u4e9b\u7269\u4f53\u5219\u4f1a\u6563\u5c04\u5f88\u591a\uff0c\u4ea7\u751f\u4e00\u4e2a\u6709\u7740\u66f4\u5927\u534a\u5f84\u7684\u9ad8\u5149\u70b9\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u5728OpenGL\u4e2d\u6a21\u62df\u591a\u79cd\u7c7b\u578b\u7684\u7269\u4f53\uff0c\u6211\u4eec\u5fc5\u987b\u9488\u5bf9\u6bcf\u79cd\u8868\u9762\u5b9a\u4e49\u4e0d\u540c\u7684 \u6750\u8d28 (Material)\u5c5e\u6027\u3002 \u5728\u4e0a\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7269\u4f53\u548c\u5149\u7684\u989c\u8272\uff0c\u5e76\u7ed3\u5408\u73af\u5883\u5149\u4e0e\u955c\u9762\u5f3a\u5ea6\u5206\u91cf\uff0c\u6765\u51b3\u5b9a\u7269\u4f53\u7684\u89c6\u89c9\u8f93\u51fa\u3002\u5f53\u63cf\u8ff0\u4e00\u4e2a\u8868\u9762\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u522b\u4e3a\u4e09\u4e2a\u5149\u7167\u5206\u91cf\u5b9a\u4e49\u4e00\u4e2a\u6750\u8d28\u989c\u8272(Material Color)\uff1a\u73af\u5883\u5149\u7167(Ambient Lighting)\u3001\u6f2b\u53cd\u5c04\u5149\u7167(Diffuse Lighting)\u548c\u955c\u9762\u5149\u7167(Specular Lighting)\u3002\u901a\u8fc7\u4e3a\u6bcf\u4e2a\u5206\u91cf\u6307\u5b9a\u4e00\u4e2a\u989c\u8272\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u5bf9\u8868\u9762\u7684\u989c\u8272\u8f93\u51fa\u6709\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\u4e86\u3002\u73b0\u5728\uff0c\u6211\u4eec\u518d\u6dfb\u52a0\u4e00\u4e2a\u53cd\u5149\u5ea6(Shininess)\u5206\u91cf\uff0c\u7ed3\u5408\u4e0a\u8ff0\u7684\u4e09\u4e2a\u989c\u8272\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u5168\u90e8\u6240\u9700\u7684\u6750\u8d28\u5c5e\u6027\u4e86\uff1a #version 330 core struct Material { vec3 ambient; vec3 diffuse; vec3 specular; float shininess; }; uniform Material material; \u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7ed3\u6784\u4f53(Struct)\u6765\u50a8\u5b58\u7269\u4f53\u7684\u6750\u8d28\u5c5e\u6027\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u628a\u5b83\u4eec\u50a8\u5b58\u4e3a\u72ec\u7acb\u7684uniform\u503c\uff0c\u4f46\u662f\u4f5c\u4e3a\u4e00\u4e2a\u7ed3\u6784\u4f53\u6765\u50a8\u5b58\u4f1a\u66f4\u6709\u6761\u7406\u4e00\u4e9b\u3002\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u7ed3\u6784\u4f53\u7684\u5e03\u5c40(Layout)\uff0c\u7136\u540e\u7b80\u5355\u5730\u4ee5\u521a\u521b\u5efa\u7684\u7ed3\u6784\u4f53\u4f5c\u4e3a\u7c7b\u578b\u58f0\u660e\u4e00\u4e2auniform\u53d8\u91cf\u3002 \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u4e3a\u98ce\u6c0f\u5149\u7167\u6a21\u578b\u7684\u6bcf\u4e2a\u5206\u91cf\u90fd\u5b9a\u4e49\u4e00\u4e2a\u989c\u8272\u5411\u91cf\u3002 ambient \u6750\u8d28\u5411\u91cf\u5b9a\u4e49\u4e86\u5728\u73af\u5883\u5149\u7167\u4e0b\u8fd9\u4e2a\u8868\u9762\u53cd\u5c04\u7684\u662f\u4ec0\u4e48\u989c\u8272\uff0c\u901a\u5e38\u4e0e\u8868\u9762\u7684\u989c\u8272\u76f8\u540c\u3002 diffuse \u6750\u8d28\u5411\u91cf\u5b9a\u4e49\u4e86\u5728\u6f2b\u53cd\u5c04\u5149\u7167\u4e0b\u8868\u9762\u7684\u989c\u8272\u3002\u6f2b\u53cd\u5c04\u989c\u8272\uff08\u548c\u73af\u5883\u5149\u7167\u4e00\u6837\uff09\u4e5f\u88ab\u8bbe\u7f6e\u4e3a\u6211\u4eec\u671f\u671b\u7684\u7269\u4f53\u989c\u8272\u3002 specular \u6750\u8d28\u5411\u91cf\u8bbe\u7f6e\u7684\u662f\u8868\u9762\u4e0a\u955c\u9762\u9ad8\u5149\u7684\u989c\u8272\uff08\u6216\u8005\u751a\u81f3\u53ef\u80fd\u53cd\u6620\u4e00\u4e2a\u7279\u5b9a\u8868\u9762\u7684\u989c\u8272\uff09\u3002\u6700\u540e\uff0c shininess \u5f71\u54cd\u955c\u9762\u9ad8\u5149\u7684\u6563\u5c04/\u534a\u5f84\u3002 \u6709\u8fd94\u4e2a\u5143\u7d20\u5b9a\u4e49\u4e00\u4e2a\u7269\u4f53\u7684\u6750\u8d28\uff0c\u6211\u4eec\u80fd\u591f\u6a21\u62df\u5f88\u591a\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u6750\u8d28\u3002 devernay.free.fr \u4e2d\u7684\u4e00\u4e2a\u8868\u683c\u5c55\u793a\u4e86\u4e00\u7cfb\u5217\u6750\u8d28\u5c5e\u6027\uff0c\u5b83\u4eec\u6a21\u62df\u4e86\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u771f\u5b9e\u6750\u8d28\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u51e0\u7ec4\u73b0\u5b9e\u4e16\u754c\u7684\u6750\u8d28\u53c2\u6570\u503c\u5bf9\u6211\u4eec\u7684\u7acb\u65b9\u4f53\u7684\u5f71\u54cd\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u901a\u8fc7\u6b63\u786e\u5730\u6307\u5b9a\u4e00\u4e2a\u7269\u4f53\u7684\u6750\u8d28\u5c5e\u6027\uff0c\u6211\u4eec\u5bf9\u8fd9\u4e2a\u7269\u4f53\u7684\u611f\u77e5\u4e5f\u5c31\u4e0d\u540c\u4e86\u3002\u6548\u679c\u975e\u5e38\u660e\u663e\uff0c\u4f46\u662f\u8981\u60f3\u83b7\u5f97\u66f4\u771f\u5b9e\u7684\u6548\u679c\uff0c\u6211\u4eec\u9700\u8981\u4ee5\u66f4\u590d\u6742\u7684\u5f62\u72b6\u66ff\u6362\u8fd9\u4e2a\u7acb\u65b9\u4f53\u3002\u5728 \u6a21\u578b\u52a0\u8f7d \u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u4f1a\u8ba8\u8bba\u66f4\u590d\u6742\u7684\u5f62\u72b6\u3002 \u641e\u6e05\u695a\u4e00\u4e2a\u7269\u4f53\u6b63\u786e\u7684\u6750\u8d28\u8bbe\u5b9a\u662f\u4e2a\u56f0\u96be\u7684\u5de5\u7a0b\uff0c\u8fd9\u4e3b\u8981\u9700\u8981\u5b9e\u9a8c\u548c\u4e30\u5bcc\u7684\u7ecf\u9a8c\u3002\u7528\u4e86\u4e0d\u5408\u9002\u7684\u6750\u8d28\u800c\u6bc1\u4e86\u7269\u4f53\u7684\u89c6\u89c9\u8d28\u91cf\u662f\u4ef6\u7ecf\u5e38\u53d1\u751f\u7684\u4e8b\u3002 \u8ba9\u6211\u4eec\u8bd5\u7740\u5728\u7740\u8272\u5668\u4e2d\u5b9e\u73b0\u8fd9\u6837\u7684\u4e00\u4e2a\u6750\u8d28\u7cfb\u7edf\u3002 \u8bbe\u7f6e\u6750\u8d28 \u6211\u4eec\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u6750\u8d28\u7ed3\u6784\u4f53\u7684uniform\uff0c\u6240\u4ee5\u4e0b\u9762\u6211\u4eec\u5e0c\u671b\u4fee\u6539\u4e00\u4e0b\u5149\u7167\u7684\u8ba1\u7b97\u6765\u9075\u4ece\u65b0\u7684\u6750\u8d28\u5c5e\u6027\u3002\u7531\u4e8e\u6240\u6709\u6750\u8d28\u53d8\u91cf\u90fd\u50a8\u5b58\u5728\u4e00\u4e2a\u7ed3\u6784\u4f53\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4eceuniform\u53d8\u91cf material \u4e2d\u8bbf\u95ee\u5b83\u4eec\uff1a void main() { // \u73af\u5883\u5149 vec3 ambient = lightColor * material.ambient; // \u6f2b\u53cd\u5c04 vec3 norm = normalize(Normal); vec3 lightDir = normalize(lightPos - FragPos); float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = lightColor * (diff * material.diffuse); // \u955c\u9762\u5149 vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); vec3 specular = lightColor * (spec * material.specular); vec3 result = ambient + diffuse + specular; FragColor = vec4(result, 1.0); } \u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u73b0\u5728\u5728\u9700\u8981\u7684\u5730\u65b9\u8bbf\u95ee\u4e86\u6750\u8d28\u7ed3\u6784\u4f53\u4e2d\u7684\u6240\u6709\u5c5e\u6027\uff0c\u5e76\u4e14\u8fd9\u6b21\u662f\u6839\u636e\u6750\u8d28\u7684\u989c\u8272\u6765\u8ba1\u7b97\u6700\u7ec8\u7684\u8f93\u51fa\u989c\u8272\u7684\u3002\u7269\u4f53\u7684\u6bcf\u4e2a\u6750\u8d28\u5c5e\u6027\u90fd\u4e58\u4e0a\u4e86\u5b83\u4eec\u5404\u81ea\u5bf9\u5e94\u7684\u5149\u7167\u5206\u91cf\u3002 \u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u9002\u5f53\u7684uniform\u6765\u8bbe\u7f6e\u5e94\u7528\u4e2d\u7269\u4f53\u7684\u6750\u8d28\u4e86\u3002GLSL\u4e2d\u4e00\u4e2a\u7ed3\u6784\u4f53\u5728\u8bbe\u7f6euniform\u65f6\u5e76\u65e0\u4efb\u4f55\u533a\u522b\uff0c\u7ed3\u6784\u4f53\u53ea\u662f\u5145\u5f53uniform\u53d8\u91cf\u4eec\u7684\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u3002\u6240\u4ee5\u5982\u679c\u60f3\u586b\u5145\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7684\u8bdd\uff0c\u6211\u4eec\u5fc5\u987b\u8bbe\u7f6e\u6bcf\u4e2a\u5355\u72ec\u7684uniform\uff0c\u4f46\u8981\u4ee5\u7ed3\u6784\u4f53\u540d\u4e3a\u524d\u7f00\uff1a lightingShader.setVec3(\"material.ambient\", 1.0f, 0.5f, 0.31f); lightingShader.setVec3(\"material.diffuse\", 1.0f, 0.5f, 0.31f); lightingShader.setVec3(\"material.specular\", 0.5f, 0.5f, 0.5f); lightingShader.setFloat(\"material.shininess\", 32.0f); \u6211\u4eec\u5c06\u73af\u5883\u5149\u548c\u6f2b\u53cd\u5c04\u5206\u91cf\u8bbe\u7f6e\u6210\u6211\u4eec\u60f3\u8981\u8ba9\u7269\u4f53\u6240\u62e5\u6709\u7684\u989c\u8272\uff0c\u800c\u5c06\u955c\u9762\u5206\u91cf\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u4e2d\u7b49\u4eae\u5ea6\u7684\u989c\u8272\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u955c\u9762\u5206\u91cf\u8fc7\u4e8e\u5f3a\u70c8\u3002\u6211\u4eec\u4ecd\u5c06\u53cd\u5149\u5ea6\u4fdd\u6301\u4e3a32\u3002 \u73b0\u5728\u6211\u4eec\u80fd\u591f\u8f7b\u677e\u5730\u5728\u5e94\u7528\u4e2d\u5f71\u54cd\u7269\u4f53\u7684\u6750\u8d28\u4e86\u3002\u8fd0\u884c\u7a0b\u5e8f\uff0c\u4f60\u4f1a\u5f97\u5230\u50cf\u8fd9\u6837\u7684\u7ed3\u679c\uff1a \u4e0d\u8fc7\u770b\u8d77\u6765\u771f\u7684\u4e0d\u592a\u5bf9\u52b2\uff1f \u5149\u7684\u5c5e\u6027 \u8fd9\u4e2a\u7269\u4f53\u592a\u4eae\u4e86\u3002\u7269\u4f53\u8fc7\u4eae\u7684\u539f\u56e0\u662f\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u8fd9\u4e09\u4e2a\u989c\u8272\u5bf9\u4efb\u4f55\u4e00\u4e2a\u5149\u6e90\u90fd\u5168\u529b\u53cd\u5c04\u3002\u5149\u6e90\u5bf9\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u5206\u91cf\u4e5f\u5206\u522b\u5177\u6709\u4e0d\u540c\u7684\u5f3a\u5ea6\u3002\u524d\u9762\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u4f7f\u7528\u4e00\u4e2a\u5f3a\u5ea6\u503c\u6539\u53d8\u73af\u5883\u5149\u548c\u955c\u9762\u5149\u5f3a\u5ea6\u7684\u65b9\u5f0f\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u6211\u4eec\u60f3\u505a\u7c7b\u4f3c\u7684\u4e8b\u60c5\uff0c\u4f46\u662f\u8fd9\u6b21\u662f\u8981\u4e3a\u6bcf\u4e2a\u5149\u7167\u5206\u91cf\u5206\u522b\u6307\u5b9a\u4e00\u4e2a\u5f3a\u5ea6\u5411\u91cf\u3002\u5982\u679c\u6211\u4eec\u5047\u8bbe lightColor \u662f vec3(1.0) \uff0c\u4ee3\u7801\u4f1a\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a vec3 ambient = vec3(1.0) * material.ambient; vec3 diffuse = vec3(1.0) * (diff * material.diffuse); vec3 specular = vec3(1.0) * (spec * material.specular); \u6240\u4ee5\u7269\u4f53\u7684\u6bcf\u4e2a\u6750\u8d28\u5c5e\u6027\u5bf9\u6bcf\u4e00\u4e2a\u5149\u7167\u5206\u91cf\u90fd\u8fd4\u56de\u4e86\u6700\u5927\u7684\u5f3a\u5ea6\u3002\u5bf9\u5355\u4e2a\u5149\u6e90\u6765\u8bf4\uff0c\u8fd9\u4e9b vec3(1.0) \u503c\u540c\u6837\u53ef\u4ee5\u5bf9\u6bcf\u79cd\u5149\u6e90\u5206\u522b\u6539\u53d8\uff0c\u800c\u8fd9\u901a\u5e38\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\u73b0\u5728\uff0c\u7269\u4f53\u7684\u73af\u5883\u5149\u5206\u91cf\u5b8c\u5168\u5730\u5f71\u54cd\u4e86\u7acb\u65b9\u4f53\u7684\u989c\u8272\uff0c\u53ef\u662f\u73af\u5883\u5149\u5206\u91cf\u5b9e\u9645\u4e0a\u4e0d\u5e94\u8be5\u5bf9\u6700\u7ec8\u7684\u989c\u8272\u6709\u8fd9\u4e48\u5927\u7684\u5f71\u54cd\uff0c\u6240\u4ee5\u6211\u4eec\u4f1a\u5c06\u5149\u6e90\u7684\u73af\u5883\u5149\u5f3a\u5ea6\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u5c0f\u4e00\u70b9\u7684\u503c\uff0c\u4ece\u800c\u9650\u5236\u73af\u5883\u5149\u989c\u8272\uff1a vec3 ambient = vec3(0.1) * material.ambient; \u6211\u4eec\u53ef\u4ee5\u7528\u540c\u6837\u7684\u65b9\u5f0f\u5f71\u54cd\u5149\u6e90\u7684\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u5f3a\u5ea6\u3002\u8fd9\u548c\u6211\u4eec\u5728 \u4e0a\u4e00\u8282 \u4e2d\u6240\u505a\u7684\u6781\u4e3a\u76f8\u4f3c\uff0c\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e9b\u5149\u7167\u5c5e\u6027\u6765\u5f71\u54cd\u5404\u4e2a\u5149\u7167\u5206\u91cf\u3002\u6211\u4eec\u5e0c\u671b\u4e3a\u5149\u7167\u5c5e\u6027\u521b\u5efa\u7c7b\u4f3c\u6750\u8d28\u7ed3\u6784\u4f53\u7684\u4e1c\u897f\uff1a struct Light { vec3 position; vec3 ambient; vec3 diffuse; vec3 specular; }; uniform Light light; \u4e00\u4e2a\u5149\u6e90\u5bf9\u5b83\u7684 ambient \u3001 diffuse \u548c specular \u5149\u7167\u5206\u91cf\u6709\u7740\u4e0d\u540c\u7684\u5f3a\u5ea6\u3002\u73af\u5883\u5149\u7167\u901a\u5e38\u88ab\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u6bd4\u8f83\u4f4e\u7684\u5f3a\u5ea6\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u5e0c\u671b\u73af\u5883\u5149\u989c\u8272\u592a\u8fc7\u4e3b\u5bfc\u3002\u5149\u6e90\u7684\u6f2b\u53cd\u5c04\u5206\u91cf\u901a\u5e38\u88ab\u8bbe\u7f6e\u4e3a\u6211\u4eec\u5e0c\u671b\u5149\u6240\u5177\u6709\u7684\u90a3\u4e2a\u989c\u8272\uff0c\u901a\u5e38\u662f\u4e00\u4e2a\u6bd4\u8f83\u660e\u4eae\u7684\u767d\u8272\u3002\u955c\u9762\u5149\u5206\u91cf\u901a\u5e38\u4f1a\u4fdd\u6301\u4e3a vec3(1.0) \uff0c\u4ee5\u6700\u5927\u5f3a\u5ea6\u53d1\u5149\u3002\u6ce8\u610f\u6211\u4eec\u4e5f\u5c06\u5149\u6e90\u7684\u4f4d\u7f6e\u5411\u91cf\u52a0\u5165\u4e86\u7ed3\u6784\u4f53\u3002 \u548c\u6750\u8d28uniform\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u66f4\u65b0\u7247\u6bb5\u7740\u8272\u5668\uff1a vec3 ambient = light.ambient * material.ambient; vec3 diffuse = light.diffuse * (diff * material.diffuse); vec3 specular = light.specular * (spec * material.specular); \u6211\u4eec\u63a5\u4e0b\u6765\u5728\u5e94\u7528\u4e2d\u8bbe\u7f6e\u5149\u7167\u5f3a\u5ea6\uff1a lightingShader.setVec3(\"light.ambient\", 0.2f, 0.2f, 0.2f); lightingShader.setVec3(\"light.diffuse\", 0.5f, 0.5f, 0.5f); // \u5c06\u5149\u7167\u8c03\u6697\u4e86\u4e00\u4e9b\u4ee5\u642d\u914d\u573a\u666f lightingShader.setVec3(\"light.specular\", 1.0f, 1.0f, 1.0f); \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u8c03\u6574\u4e86\u5149\u7167\u5bf9\u7269\u4f53\u6750\u8d28\u7684\u5f71\u54cd\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u4e0e\u4e0a\u4e00\u8282\u5f88\u76f8\u4f3c\u7684\u89c6\u89c9\u6548\u679c\u3002\u4f46\u8fd9\u6b21\u6211\u4eec\u6709\u4e86\u5bf9\u5149\u7167\u548c\u7269\u4f53\u6750\u8d28\u7684\u5b8c\u5168\u638c\u63a7\uff1a \u6539\u53d8\u7269\u4f53\u7684\u89c6\u89c9\u6548\u679c\u73b0\u5728\u53d8\u5f97\u76f8\u5bf9\u5bb9\u6613\u4e86\u3002\u8ba9\u6211\u4eec\u505a\u70b9\u66f4\u6709\u8da3\u7684\u4e8b\uff01 \u4e0d\u540c\u7684\u5149\u6e90\u989c\u8272 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u90fd\u53ea\u5bf9\u5149\u6e90\u8bbe\u7f6e\u4e86\u4ece\u767d\u5230\u7070\u5230\u9ed1\u8303\u56f4\u5185\u7684\u989c\u8272\uff0c\u8fd9\u6837\u53ea\u4f1a\u6539\u53d8\u7269\u4f53\u5404\u4e2a\u5206\u91cf\u7684\u5f3a\u5ea6\uff0c\u800c\u4e0d\u662f\u5b83\u7684\u771f\u6b63\u989c\u8272\u3002\u7531\u4e8e\u73b0\u5728\u80fd\u591f\u975e\u5e38\u5bb9\u6613\u5730\u8bbf\u95ee\u5149\u7167\u7684\u5c5e\u6027\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u968f\u7740\u65f6\u95f4\u6539\u53d8\u5b83\u4eec\u7684\u989c\u8272\uff0c\u4ece\u800c\u83b7\u5f97\u4e00\u4e9b\u975e\u5e38\u6709\u610f\u601d\u7684\u6548\u679c\u3002\u7531\u4e8e\u6240\u6709\u7684\u4e1c\u897f\u90fd\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u914d\u7f6e\u597d\u4e86\uff0c\u4fee\u6539\u5149\u6e90\u7684\u989c\u8272\u975e\u5e38\u7b80\u5355\uff0c\u5e76\u7acb\u523b\u521b\u9020\u4e00\u4e9b\u5f88\u6709\u8da3\u7684\u6548\u679c\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u4e0d\u540c\u7684\u5149\u7167\u989c\u8272\u80fd\u591f\u6781\u5927\u5730\u5f71\u54cd\u7269\u4f53\u7684\u6700\u7ec8\u989c\u8272\u8f93\u51fa\u3002\u7531\u4e8e\u5149\u7167\u989c\u8272\u80fd\u591f\u76f4\u63a5\u5f71\u54cd\u7269\u4f53\u80fd\u591f\u53cd\u5c04\u7684\u989c\u8272\uff08\u56de\u60f3 \u989c\u8272 \u8fd9\u4e00\u8282\uff09\uff0c\u8fd9\u5bf9\u89c6\u89c9\u8f93\u51fa\u6709\u7740\u663e\u8457\u7684\u5f71\u54cd\u3002 \u6211\u4eec\u53ef\u4ee5\u5229\u7528 sin \u548c glfwGetTime \u51fd\u6570\u6539\u53d8\u5149\u6e90\u7684\u73af\u5883\u5149\u548c\u6f2b\u53cd\u5c04\u989c\u8272\uff0c\u4ece\u800c\u5f88\u5bb9\u6613\u5730\u8ba9\u5149\u6e90\u7684\u989c\u8272\u968f\u7740\u65f6\u95f4\u53d8\u5316\uff1a glm::vec3 lightColor; lightColor.x = sin(glfwGetTime() * 2.0f); lightColor.y = sin(glfwGetTime() * 0.7f); lightColor.z = sin(glfwGetTime() * 1.3f); glm::vec3 diffuseColor = lightColor * glm::vec3(0.5f); // \u964d\u4f4e\u5f71\u54cd glm::vec3 ambientColor = diffuseColor * glm::vec3(0.2f); // \u5f88\u4f4e\u7684\u5f71\u54cd lightingShader.setVec3(\"light.ambient\", ambientColor); lightingShader.setVec3(\"light.diffuse\", diffuseColor); \u5c1d\u8bd5\u5e76\u5b9e\u9a8c\u4e00\u4e9b\u5149\u7167\u548c\u6750\u8d28\u503c\uff0c\u770b\u770b\u5b83\u4eec\u662f\u600e\u6837\u5f71\u54cd\u89c6\u89c9\u8f93\u51fa\u7684\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5e94\u7528\u7684\u6e90\u7801\u3002 \u7ec3\u4e60 \u4f60\u80fd\u505a\u5230\u8fd9\u4ef6\u4e8b\u5417\uff0c\u6539\u53d8\u5149\u7167\u989c\u8272\u5bfc\u81f4\u6539\u53d8\u5149\u6e90\u7acb\u65b9\u4f53\u7684\u989c\u8272\uff1f \u4f60\u80fd\u50cf\u6559\u7a0b\u4e00\u5f00\u59cb\u90a3\u6837\uff0c\u901a\u8fc7\u5b9a\u4e49\u76f8\u5e94\u7684\u6750\u8d28\u6765\u6a21\u62df\u73b0\u5b9e\u4e16\u754c\u7684\u7269\u4f53\u5417\uff1f\u6ce8\u610f \u6750\u8d28\u8868\u683c \u4e2d\u7684\u73af\u5883\u5149\u503c\u4e0e\u6f2b\u53cd\u5c04\u503c\u4e0d\u4e00\u6837\uff0c\u5b83\u4eec\u6ca1\u6709\u8003\u8651\u5149\u7167\u7684\u5f3a\u5ea6\u3002\u8981\u60f3\u6b63\u786e\u5730\u8bbe\u7f6e\u5b83\u4eec\u7684\u503c\uff0c\u4f60\u9700\u8981\u5c06\u6240\u6709\u7684\u5149\u7167\u5f3a\u5ea6\u90fd\u8bbe\u7f6e\u4e3a vec3(1.0) \uff0c\u8fd9\u6837\u624d\u80fd\u5f97\u5230\u4e00\u81f4\u7684\u8f93\u51fa\uff1a \u53c2\u8003\u89e3\u7b54 \uff1a\u9752\u8272\u5851\u6599(Cyan Plastic)\u5bb9\u5668\u3002","title":"\u6750\u8d28"},{"location":"02%20Lighting/03%20Materials/#_1","text":"\u539f\u6587 Materials \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 AoZhang \u5728\u73b0\u5b9e\u4e16\u754c\u91cc\uff0c\u6bcf\u4e2a\u7269\u4f53\u4f1a\u5bf9\u5149\u4ea7\u751f\u4e0d\u540c\u7684\u53cd\u5e94\u3002\u6bd4\u5982\uff0c\u94a2\u5236\u7269\u4f53\u770b\u8d77\u6765\u901a\u5e38\u4f1a\u6bd4\u9676\u571f\u82b1\u74f6\u66f4\u95ea\u95ea\u53d1\u5149\uff0c\u4e00\u4e2a\u6728\u5934\u7bb1\u5b50\u4e5f\u4e0d\u4f1a\u4e0e\u4e00\u4e2a\u94a2\u5236\u7bb1\u5b50\u53cd\u5c04\u540c\u6837\u7a0b\u5ea6\u7684\u5149\u3002\u6709\u4e9b\u7269\u4f53\u53cd\u5c04\u5149\u7684\u65f6\u5019\u4e0d\u4f1a\u6709\u592a\u591a\u7684\u6563\u5c04(Scatter)\uff0c\u56e0\u800c\u4ea7\u751f\u8f83\u5c0f\u7684\u9ad8\u5149\u70b9\uff0c\u800c\u6709\u4e9b\u7269\u4f53\u5219\u4f1a\u6563\u5c04\u5f88\u591a\uff0c\u4ea7\u751f\u4e00\u4e2a\u6709\u7740\u66f4\u5927\u534a\u5f84\u7684\u9ad8\u5149\u70b9\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u5728OpenGL\u4e2d\u6a21\u62df\u591a\u79cd\u7c7b\u578b\u7684\u7269\u4f53\uff0c\u6211\u4eec\u5fc5\u987b\u9488\u5bf9\u6bcf\u79cd\u8868\u9762\u5b9a\u4e49\u4e0d\u540c\u7684 \u6750\u8d28 (Material)\u5c5e\u6027\u3002 \u5728\u4e0a\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7269\u4f53\u548c\u5149\u7684\u989c\u8272\uff0c\u5e76\u7ed3\u5408\u73af\u5883\u5149\u4e0e\u955c\u9762\u5f3a\u5ea6\u5206\u91cf\uff0c\u6765\u51b3\u5b9a\u7269\u4f53\u7684\u89c6\u89c9\u8f93\u51fa\u3002\u5f53\u63cf\u8ff0\u4e00\u4e2a\u8868\u9762\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u522b\u4e3a\u4e09\u4e2a\u5149\u7167\u5206\u91cf\u5b9a\u4e49\u4e00\u4e2a\u6750\u8d28\u989c\u8272(Material Color)\uff1a\u73af\u5883\u5149\u7167(Ambient Lighting)\u3001\u6f2b\u53cd\u5c04\u5149\u7167(Diffuse Lighting)\u548c\u955c\u9762\u5149\u7167(Specular Lighting)\u3002\u901a\u8fc7\u4e3a\u6bcf\u4e2a\u5206\u91cf\u6307\u5b9a\u4e00\u4e2a\u989c\u8272\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u5bf9\u8868\u9762\u7684\u989c\u8272\u8f93\u51fa\u6709\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\u4e86\u3002\u73b0\u5728\uff0c\u6211\u4eec\u518d\u6dfb\u52a0\u4e00\u4e2a\u53cd\u5149\u5ea6(Shininess)\u5206\u91cf\uff0c\u7ed3\u5408\u4e0a\u8ff0\u7684\u4e09\u4e2a\u989c\u8272\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u5168\u90e8\u6240\u9700\u7684\u6750\u8d28\u5c5e\u6027\u4e86\uff1a #version 330 core struct Material { vec3 ambient; vec3 diffuse; vec3 specular; float shininess; }; uniform Material material; \u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7ed3\u6784\u4f53(Struct)\u6765\u50a8\u5b58\u7269\u4f53\u7684\u6750\u8d28\u5c5e\u6027\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u628a\u5b83\u4eec\u50a8\u5b58\u4e3a\u72ec\u7acb\u7684uniform\u503c\uff0c\u4f46\u662f\u4f5c\u4e3a\u4e00\u4e2a\u7ed3\u6784\u4f53\u6765\u50a8\u5b58\u4f1a\u66f4\u6709\u6761\u7406\u4e00\u4e9b\u3002\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u7ed3\u6784\u4f53\u7684\u5e03\u5c40(Layout)\uff0c\u7136\u540e\u7b80\u5355\u5730\u4ee5\u521a\u521b\u5efa\u7684\u7ed3\u6784\u4f53\u4f5c\u4e3a\u7c7b\u578b\u58f0\u660e\u4e00\u4e2auniform\u53d8\u91cf\u3002 \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u4e3a\u98ce\u6c0f\u5149\u7167\u6a21\u578b\u7684\u6bcf\u4e2a\u5206\u91cf\u90fd\u5b9a\u4e49\u4e00\u4e2a\u989c\u8272\u5411\u91cf\u3002 ambient \u6750\u8d28\u5411\u91cf\u5b9a\u4e49\u4e86\u5728\u73af\u5883\u5149\u7167\u4e0b\u8fd9\u4e2a\u8868\u9762\u53cd\u5c04\u7684\u662f\u4ec0\u4e48\u989c\u8272\uff0c\u901a\u5e38\u4e0e\u8868\u9762\u7684\u989c\u8272\u76f8\u540c\u3002 diffuse \u6750\u8d28\u5411\u91cf\u5b9a\u4e49\u4e86\u5728\u6f2b\u53cd\u5c04\u5149\u7167\u4e0b\u8868\u9762\u7684\u989c\u8272\u3002\u6f2b\u53cd\u5c04\u989c\u8272\uff08\u548c\u73af\u5883\u5149\u7167\u4e00\u6837\uff09\u4e5f\u88ab\u8bbe\u7f6e\u4e3a\u6211\u4eec\u671f\u671b\u7684\u7269\u4f53\u989c\u8272\u3002 specular \u6750\u8d28\u5411\u91cf\u8bbe\u7f6e\u7684\u662f\u8868\u9762\u4e0a\u955c\u9762\u9ad8\u5149\u7684\u989c\u8272\uff08\u6216\u8005\u751a\u81f3\u53ef\u80fd\u53cd\u6620\u4e00\u4e2a\u7279\u5b9a\u8868\u9762\u7684\u989c\u8272\uff09\u3002\u6700\u540e\uff0c shininess \u5f71\u54cd\u955c\u9762\u9ad8\u5149\u7684\u6563\u5c04/\u534a\u5f84\u3002 \u6709\u8fd94\u4e2a\u5143\u7d20\u5b9a\u4e49\u4e00\u4e2a\u7269\u4f53\u7684\u6750\u8d28\uff0c\u6211\u4eec\u80fd\u591f\u6a21\u62df\u5f88\u591a\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u6750\u8d28\u3002 devernay.free.fr \u4e2d\u7684\u4e00\u4e2a\u8868\u683c\u5c55\u793a\u4e86\u4e00\u7cfb\u5217\u6750\u8d28\u5c5e\u6027\uff0c\u5b83\u4eec\u6a21\u62df\u4e86\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u771f\u5b9e\u6750\u8d28\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u51e0\u7ec4\u73b0\u5b9e\u4e16\u754c\u7684\u6750\u8d28\u53c2\u6570\u503c\u5bf9\u6211\u4eec\u7684\u7acb\u65b9\u4f53\u7684\u5f71\u54cd\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u901a\u8fc7\u6b63\u786e\u5730\u6307\u5b9a\u4e00\u4e2a\u7269\u4f53\u7684\u6750\u8d28\u5c5e\u6027\uff0c\u6211\u4eec\u5bf9\u8fd9\u4e2a\u7269\u4f53\u7684\u611f\u77e5\u4e5f\u5c31\u4e0d\u540c\u4e86\u3002\u6548\u679c\u975e\u5e38\u660e\u663e\uff0c\u4f46\u662f\u8981\u60f3\u83b7\u5f97\u66f4\u771f\u5b9e\u7684\u6548\u679c\uff0c\u6211\u4eec\u9700\u8981\u4ee5\u66f4\u590d\u6742\u7684\u5f62\u72b6\u66ff\u6362\u8fd9\u4e2a\u7acb\u65b9\u4f53\u3002\u5728 \u6a21\u578b\u52a0\u8f7d \u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u4f1a\u8ba8\u8bba\u66f4\u590d\u6742\u7684\u5f62\u72b6\u3002 \u641e\u6e05\u695a\u4e00\u4e2a\u7269\u4f53\u6b63\u786e\u7684\u6750\u8d28\u8bbe\u5b9a\u662f\u4e2a\u56f0\u96be\u7684\u5de5\u7a0b\uff0c\u8fd9\u4e3b\u8981\u9700\u8981\u5b9e\u9a8c\u548c\u4e30\u5bcc\u7684\u7ecf\u9a8c\u3002\u7528\u4e86\u4e0d\u5408\u9002\u7684\u6750\u8d28\u800c\u6bc1\u4e86\u7269\u4f53\u7684\u89c6\u89c9\u8d28\u91cf\u662f\u4ef6\u7ecf\u5e38\u53d1\u751f\u7684\u4e8b\u3002 \u8ba9\u6211\u4eec\u8bd5\u7740\u5728\u7740\u8272\u5668\u4e2d\u5b9e\u73b0\u8fd9\u6837\u7684\u4e00\u4e2a\u6750\u8d28\u7cfb\u7edf\u3002","title":"\u6750\u8d28"},{"location":"02%20Lighting/03%20Materials/#_2","text":"\u6211\u4eec\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u6750\u8d28\u7ed3\u6784\u4f53\u7684uniform\uff0c\u6240\u4ee5\u4e0b\u9762\u6211\u4eec\u5e0c\u671b\u4fee\u6539\u4e00\u4e0b\u5149\u7167\u7684\u8ba1\u7b97\u6765\u9075\u4ece\u65b0\u7684\u6750\u8d28\u5c5e\u6027\u3002\u7531\u4e8e\u6240\u6709\u6750\u8d28\u53d8\u91cf\u90fd\u50a8\u5b58\u5728\u4e00\u4e2a\u7ed3\u6784\u4f53\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4eceuniform\u53d8\u91cf material \u4e2d\u8bbf\u95ee\u5b83\u4eec\uff1a void main() { // \u73af\u5883\u5149 vec3 ambient = lightColor * material.ambient; // \u6f2b\u53cd\u5c04 vec3 norm = normalize(Normal); vec3 lightDir = normalize(lightPos - FragPos); float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = lightColor * (diff * material.diffuse); // \u955c\u9762\u5149 vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); vec3 specular = lightColor * (spec * material.specular); vec3 result = ambient + diffuse + specular; FragColor = vec4(result, 1.0); } \u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u73b0\u5728\u5728\u9700\u8981\u7684\u5730\u65b9\u8bbf\u95ee\u4e86\u6750\u8d28\u7ed3\u6784\u4f53\u4e2d\u7684\u6240\u6709\u5c5e\u6027\uff0c\u5e76\u4e14\u8fd9\u6b21\u662f\u6839\u636e\u6750\u8d28\u7684\u989c\u8272\u6765\u8ba1\u7b97\u6700\u7ec8\u7684\u8f93\u51fa\u989c\u8272\u7684\u3002\u7269\u4f53\u7684\u6bcf\u4e2a\u6750\u8d28\u5c5e\u6027\u90fd\u4e58\u4e0a\u4e86\u5b83\u4eec\u5404\u81ea\u5bf9\u5e94\u7684\u5149\u7167\u5206\u91cf\u3002 \u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u9002\u5f53\u7684uniform\u6765\u8bbe\u7f6e\u5e94\u7528\u4e2d\u7269\u4f53\u7684\u6750\u8d28\u4e86\u3002GLSL\u4e2d\u4e00\u4e2a\u7ed3\u6784\u4f53\u5728\u8bbe\u7f6euniform\u65f6\u5e76\u65e0\u4efb\u4f55\u533a\u522b\uff0c\u7ed3\u6784\u4f53\u53ea\u662f\u5145\u5f53uniform\u53d8\u91cf\u4eec\u7684\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u3002\u6240\u4ee5\u5982\u679c\u60f3\u586b\u5145\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7684\u8bdd\uff0c\u6211\u4eec\u5fc5\u987b\u8bbe\u7f6e\u6bcf\u4e2a\u5355\u72ec\u7684uniform\uff0c\u4f46\u8981\u4ee5\u7ed3\u6784\u4f53\u540d\u4e3a\u524d\u7f00\uff1a lightingShader.setVec3(\"material.ambient\", 1.0f, 0.5f, 0.31f); lightingShader.setVec3(\"material.diffuse\", 1.0f, 0.5f, 0.31f); lightingShader.setVec3(\"material.specular\", 0.5f, 0.5f, 0.5f); lightingShader.setFloat(\"material.shininess\", 32.0f); \u6211\u4eec\u5c06\u73af\u5883\u5149\u548c\u6f2b\u53cd\u5c04\u5206\u91cf\u8bbe\u7f6e\u6210\u6211\u4eec\u60f3\u8981\u8ba9\u7269\u4f53\u6240\u62e5\u6709\u7684\u989c\u8272\uff0c\u800c\u5c06\u955c\u9762\u5206\u91cf\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u4e2d\u7b49\u4eae\u5ea6\u7684\u989c\u8272\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u955c\u9762\u5206\u91cf\u8fc7\u4e8e\u5f3a\u70c8\u3002\u6211\u4eec\u4ecd\u5c06\u53cd\u5149\u5ea6\u4fdd\u6301\u4e3a32\u3002 \u73b0\u5728\u6211\u4eec\u80fd\u591f\u8f7b\u677e\u5730\u5728\u5e94\u7528\u4e2d\u5f71\u54cd\u7269\u4f53\u7684\u6750\u8d28\u4e86\u3002\u8fd0\u884c\u7a0b\u5e8f\uff0c\u4f60\u4f1a\u5f97\u5230\u50cf\u8fd9\u6837\u7684\u7ed3\u679c\uff1a \u4e0d\u8fc7\u770b\u8d77\u6765\u771f\u7684\u4e0d\u592a\u5bf9\u52b2\uff1f","title":"\u8bbe\u7f6e\u6750\u8d28"},{"location":"02%20Lighting/03%20Materials/#_3","text":"\u8fd9\u4e2a\u7269\u4f53\u592a\u4eae\u4e86\u3002\u7269\u4f53\u8fc7\u4eae\u7684\u539f\u56e0\u662f\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u8fd9\u4e09\u4e2a\u989c\u8272\u5bf9\u4efb\u4f55\u4e00\u4e2a\u5149\u6e90\u90fd\u5168\u529b\u53cd\u5c04\u3002\u5149\u6e90\u5bf9\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u5206\u91cf\u4e5f\u5206\u522b\u5177\u6709\u4e0d\u540c\u7684\u5f3a\u5ea6\u3002\u524d\u9762\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u4f7f\u7528\u4e00\u4e2a\u5f3a\u5ea6\u503c\u6539\u53d8\u73af\u5883\u5149\u548c\u955c\u9762\u5149\u5f3a\u5ea6\u7684\u65b9\u5f0f\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u6211\u4eec\u60f3\u505a\u7c7b\u4f3c\u7684\u4e8b\u60c5\uff0c\u4f46\u662f\u8fd9\u6b21\u662f\u8981\u4e3a\u6bcf\u4e2a\u5149\u7167\u5206\u91cf\u5206\u522b\u6307\u5b9a\u4e00\u4e2a\u5f3a\u5ea6\u5411\u91cf\u3002\u5982\u679c\u6211\u4eec\u5047\u8bbe lightColor \u662f vec3(1.0) \uff0c\u4ee3\u7801\u4f1a\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a vec3 ambient = vec3(1.0) * material.ambient; vec3 diffuse = vec3(1.0) * (diff * material.diffuse); vec3 specular = vec3(1.0) * (spec * material.specular); \u6240\u4ee5\u7269\u4f53\u7684\u6bcf\u4e2a\u6750\u8d28\u5c5e\u6027\u5bf9\u6bcf\u4e00\u4e2a\u5149\u7167\u5206\u91cf\u90fd\u8fd4\u56de\u4e86\u6700\u5927\u7684\u5f3a\u5ea6\u3002\u5bf9\u5355\u4e2a\u5149\u6e90\u6765\u8bf4\uff0c\u8fd9\u4e9b vec3(1.0) \u503c\u540c\u6837\u53ef\u4ee5\u5bf9\u6bcf\u79cd\u5149\u6e90\u5206\u522b\u6539\u53d8\uff0c\u800c\u8fd9\u901a\u5e38\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\u73b0\u5728\uff0c\u7269\u4f53\u7684\u73af\u5883\u5149\u5206\u91cf\u5b8c\u5168\u5730\u5f71\u54cd\u4e86\u7acb\u65b9\u4f53\u7684\u989c\u8272\uff0c\u53ef\u662f\u73af\u5883\u5149\u5206\u91cf\u5b9e\u9645\u4e0a\u4e0d\u5e94\u8be5\u5bf9\u6700\u7ec8\u7684\u989c\u8272\u6709\u8fd9\u4e48\u5927\u7684\u5f71\u54cd\uff0c\u6240\u4ee5\u6211\u4eec\u4f1a\u5c06\u5149\u6e90\u7684\u73af\u5883\u5149\u5f3a\u5ea6\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u5c0f\u4e00\u70b9\u7684\u503c\uff0c\u4ece\u800c\u9650\u5236\u73af\u5883\u5149\u989c\u8272\uff1a vec3 ambient = vec3(0.1) * material.ambient; \u6211\u4eec\u53ef\u4ee5\u7528\u540c\u6837\u7684\u65b9\u5f0f\u5f71\u54cd\u5149\u6e90\u7684\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u5f3a\u5ea6\u3002\u8fd9\u548c\u6211\u4eec\u5728 \u4e0a\u4e00\u8282 \u4e2d\u6240\u505a\u7684\u6781\u4e3a\u76f8\u4f3c\uff0c\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e9b\u5149\u7167\u5c5e\u6027\u6765\u5f71\u54cd\u5404\u4e2a\u5149\u7167\u5206\u91cf\u3002\u6211\u4eec\u5e0c\u671b\u4e3a\u5149\u7167\u5c5e\u6027\u521b\u5efa\u7c7b\u4f3c\u6750\u8d28\u7ed3\u6784\u4f53\u7684\u4e1c\u897f\uff1a struct Light { vec3 position; vec3 ambient; vec3 diffuse; vec3 specular; }; uniform Light light; \u4e00\u4e2a\u5149\u6e90\u5bf9\u5b83\u7684 ambient \u3001 diffuse \u548c specular \u5149\u7167\u5206\u91cf\u6709\u7740\u4e0d\u540c\u7684\u5f3a\u5ea6\u3002\u73af\u5883\u5149\u7167\u901a\u5e38\u88ab\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u6bd4\u8f83\u4f4e\u7684\u5f3a\u5ea6\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u5e0c\u671b\u73af\u5883\u5149\u989c\u8272\u592a\u8fc7\u4e3b\u5bfc\u3002\u5149\u6e90\u7684\u6f2b\u53cd\u5c04\u5206\u91cf\u901a\u5e38\u88ab\u8bbe\u7f6e\u4e3a\u6211\u4eec\u5e0c\u671b\u5149\u6240\u5177\u6709\u7684\u90a3\u4e2a\u989c\u8272\uff0c\u901a\u5e38\u662f\u4e00\u4e2a\u6bd4\u8f83\u660e\u4eae\u7684\u767d\u8272\u3002\u955c\u9762\u5149\u5206\u91cf\u901a\u5e38\u4f1a\u4fdd\u6301\u4e3a vec3(1.0) \uff0c\u4ee5\u6700\u5927\u5f3a\u5ea6\u53d1\u5149\u3002\u6ce8\u610f\u6211\u4eec\u4e5f\u5c06\u5149\u6e90\u7684\u4f4d\u7f6e\u5411\u91cf\u52a0\u5165\u4e86\u7ed3\u6784\u4f53\u3002 \u548c\u6750\u8d28uniform\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u66f4\u65b0\u7247\u6bb5\u7740\u8272\u5668\uff1a vec3 ambient = light.ambient * material.ambient; vec3 diffuse = light.diffuse * (diff * material.diffuse); vec3 specular = light.specular * (spec * material.specular); \u6211\u4eec\u63a5\u4e0b\u6765\u5728\u5e94\u7528\u4e2d\u8bbe\u7f6e\u5149\u7167\u5f3a\u5ea6\uff1a lightingShader.setVec3(\"light.ambient\", 0.2f, 0.2f, 0.2f); lightingShader.setVec3(\"light.diffuse\", 0.5f, 0.5f, 0.5f); // \u5c06\u5149\u7167\u8c03\u6697\u4e86\u4e00\u4e9b\u4ee5\u642d\u914d\u573a\u666f lightingShader.setVec3(\"light.specular\", 1.0f, 1.0f, 1.0f); \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u8c03\u6574\u4e86\u5149\u7167\u5bf9\u7269\u4f53\u6750\u8d28\u7684\u5f71\u54cd\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u4e0e\u4e0a\u4e00\u8282\u5f88\u76f8\u4f3c\u7684\u89c6\u89c9\u6548\u679c\u3002\u4f46\u8fd9\u6b21\u6211\u4eec\u6709\u4e86\u5bf9\u5149\u7167\u548c\u7269\u4f53\u6750\u8d28\u7684\u5b8c\u5168\u638c\u63a7\uff1a \u6539\u53d8\u7269\u4f53\u7684\u89c6\u89c9\u6548\u679c\u73b0\u5728\u53d8\u5f97\u76f8\u5bf9\u5bb9\u6613\u4e86\u3002\u8ba9\u6211\u4eec\u505a\u70b9\u66f4\u6709\u8da3\u7684\u4e8b\uff01","title":"\u5149\u7684\u5c5e\u6027"},{"location":"02%20Lighting/03%20Materials/#_4","text":"\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u90fd\u53ea\u5bf9\u5149\u6e90\u8bbe\u7f6e\u4e86\u4ece\u767d\u5230\u7070\u5230\u9ed1\u8303\u56f4\u5185\u7684\u989c\u8272\uff0c\u8fd9\u6837\u53ea\u4f1a\u6539\u53d8\u7269\u4f53\u5404\u4e2a\u5206\u91cf\u7684\u5f3a\u5ea6\uff0c\u800c\u4e0d\u662f\u5b83\u7684\u771f\u6b63\u989c\u8272\u3002\u7531\u4e8e\u73b0\u5728\u80fd\u591f\u975e\u5e38\u5bb9\u6613\u5730\u8bbf\u95ee\u5149\u7167\u7684\u5c5e\u6027\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u968f\u7740\u65f6\u95f4\u6539\u53d8\u5b83\u4eec\u7684\u989c\u8272\uff0c\u4ece\u800c\u83b7\u5f97\u4e00\u4e9b\u975e\u5e38\u6709\u610f\u601d\u7684\u6548\u679c\u3002\u7531\u4e8e\u6240\u6709\u7684\u4e1c\u897f\u90fd\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u914d\u7f6e\u597d\u4e86\uff0c\u4fee\u6539\u5149\u6e90\u7684\u989c\u8272\u975e\u5e38\u7b80\u5355\uff0c\u5e76\u7acb\u523b\u521b\u9020\u4e00\u4e9b\u5f88\u6709\u8da3\u7684\u6548\u679c\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u4e0d\u540c\u7684\u5149\u7167\u989c\u8272\u80fd\u591f\u6781\u5927\u5730\u5f71\u54cd\u7269\u4f53\u7684\u6700\u7ec8\u989c\u8272\u8f93\u51fa\u3002\u7531\u4e8e\u5149\u7167\u989c\u8272\u80fd\u591f\u76f4\u63a5\u5f71\u54cd\u7269\u4f53\u80fd\u591f\u53cd\u5c04\u7684\u989c\u8272\uff08\u56de\u60f3 \u989c\u8272 \u8fd9\u4e00\u8282\uff09\uff0c\u8fd9\u5bf9\u89c6\u89c9\u8f93\u51fa\u6709\u7740\u663e\u8457\u7684\u5f71\u54cd\u3002 \u6211\u4eec\u53ef\u4ee5\u5229\u7528 sin \u548c glfwGetTime \u51fd\u6570\u6539\u53d8\u5149\u6e90\u7684\u73af\u5883\u5149\u548c\u6f2b\u53cd\u5c04\u989c\u8272\uff0c\u4ece\u800c\u5f88\u5bb9\u6613\u5730\u8ba9\u5149\u6e90\u7684\u989c\u8272\u968f\u7740\u65f6\u95f4\u53d8\u5316\uff1a glm::vec3 lightColor; lightColor.x = sin(glfwGetTime() * 2.0f); lightColor.y = sin(glfwGetTime() * 0.7f); lightColor.z = sin(glfwGetTime() * 1.3f); glm::vec3 diffuseColor = lightColor * glm::vec3(0.5f); // \u964d\u4f4e\u5f71\u54cd glm::vec3 ambientColor = diffuseColor * glm::vec3(0.2f); // \u5f88\u4f4e\u7684\u5f71\u54cd lightingShader.setVec3(\"light.ambient\", ambientColor); lightingShader.setVec3(\"light.diffuse\", diffuseColor); \u5c1d\u8bd5\u5e76\u5b9e\u9a8c\u4e00\u4e9b\u5149\u7167\u548c\u6750\u8d28\u503c\uff0c\u770b\u770b\u5b83\u4eec\u662f\u600e\u6837\u5f71\u54cd\u89c6\u89c9\u8f93\u51fa\u7684\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5e94\u7528\u7684\u6e90\u7801\u3002","title":"\u4e0d\u540c\u7684\u5149\u6e90\u989c\u8272"},{"location":"02%20Lighting/03%20Materials/#_5","text":"\u4f60\u80fd\u505a\u5230\u8fd9\u4ef6\u4e8b\u5417\uff0c\u6539\u53d8\u5149\u7167\u989c\u8272\u5bfc\u81f4\u6539\u53d8\u5149\u6e90\u7acb\u65b9\u4f53\u7684\u989c\u8272\uff1f \u4f60\u80fd\u50cf\u6559\u7a0b\u4e00\u5f00\u59cb\u90a3\u6837\uff0c\u901a\u8fc7\u5b9a\u4e49\u76f8\u5e94\u7684\u6750\u8d28\u6765\u6a21\u62df\u73b0\u5b9e\u4e16\u754c\u7684\u7269\u4f53\u5417\uff1f\u6ce8\u610f \u6750\u8d28\u8868\u683c \u4e2d\u7684\u73af\u5883\u5149\u503c\u4e0e\u6f2b\u53cd\u5c04\u503c\u4e0d\u4e00\u6837\uff0c\u5b83\u4eec\u6ca1\u6709\u8003\u8651\u5149\u7167\u7684\u5f3a\u5ea6\u3002\u8981\u60f3\u6b63\u786e\u5730\u8bbe\u7f6e\u5b83\u4eec\u7684\u503c\uff0c\u4f60\u9700\u8981\u5c06\u6240\u6709\u7684\u5149\u7167\u5f3a\u5ea6\u90fd\u8bbe\u7f6e\u4e3a vec3(1.0) \uff0c\u8fd9\u6837\u624d\u80fd\u5f97\u5230\u4e00\u81f4\u7684\u8f93\u51fa\uff1a \u53c2\u8003\u89e3\u7b54 \uff1a\u9752\u8272\u5851\u6599(Cyan Plastic)\u5bb9\u5668\u3002","title":"\u7ec3\u4e60"},{"location":"02%20Lighting/04%20Lighting%20maps/","text":"\u5149\u7167\u8d34\u56fe \u539f\u6587 Lighting maps \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 AoZhang \u5728 \u4e0a\u4e00\u8282 \u4e2d\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u8ba9\u6bcf\u4e2a\u7269\u4f53\u90fd\u62e5\u6709\u81ea\u5df1\u72ec\u7279\u7684\u6750\u8d28\u4ece\u800c\u5bf9\u5149\u7167\u505a\u51fa\u4e0d\u540c\u7684\u53cd\u5e94\u7684\u65b9\u6cd5\u3002\u8fd9\u6837\u5b50\u80fd\u591f\u5f88\u5bb9\u6613\u5728\u4e00\u4e2a\u5149\u7167\u7684\u573a\u666f\u4e2d\u7ed9\u6bcf\u4e2a\u7269\u4f53\u4e00\u4e2a\u72ec\u7279\u7684\u5916\u89c2\uff0c\u4f46\u662f\u8fd9\u4ecd\u4e0d\u80fd\u5bf9\u4e00\u4e2a\u7269\u4f53\u7684\u89c6\u89c9\u8f93\u51fa\u63d0\u4f9b\u8db3\u591f\u591a\u7684\u7075\u6d3b\u6027\u3002 \u5728\u4e0a\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u6574\u4e2a\u7269\u4f53\u7684\u6750\u8d28\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u4f46\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u7269\u4f53\u901a\u5e38\u5e76\u4e0d\u53ea\u5305\u542b\u6709\u4e00\u79cd\u6750\u8d28\uff0c\u800c\u662f\u7531\u591a\u79cd\u6750\u8d28\u6240\u7ec4\u6210\u3002\u60f3\u60f3\u4e00\u8f86\u6c7d\u8f66\uff1a\u5b83\u7684\u5916\u58f3\u975e\u5e38\u6709\u5149\u6cfd\uff0c\u8f66\u7a97\u4f1a\u90e8\u5206\u53cd\u5c04\u5468\u56f4\u7684\u73af\u5883\uff0c\u8f6e\u80ce\u4e0d\u4f1a\u90a3\u4e48\u6709\u5149\u6cfd\uff0c\u6240\u4ee5\u5b83\u6ca1\u6709\u955c\u9762\u9ad8\u5149\uff0c\u8f6e\u6bc2\u975e\u5e38\u95ea\u4eae\uff08\u5982\u679c\u4f60\u6d17\u8f66\u4e86\u7684\u8bdd\uff09\u3002\u6c7d\u8f66\u540c\u6837\u4f1a\u6709\u6f2b\u53cd\u5c04\u548c\u73af\u5883\u5149\u989c\u8272\uff0c\u5b83\u4eec\u5728\u6574\u4e2a\u7269\u4f53\u4e0a\u4e5f\u4e0d\u4f1a\u662f\u4e00\u6837\u7684\uff0c\u6c7d\u8f66\u6709\u7740\u8bb8\u591a\u79cd\u4e0d\u540c\u7684\u73af\u5883\u5149/\u6f2b\u53cd\u5c04\u989c\u8272\u3002\u603b\u4e4b\uff0c\u8fd9\u6837\u7684\u7269\u4f53\u5728\u4e0d\u540c\u7684\u90e8\u4ef6\u4e0a\u90fd\u6709\u4e0d\u540c\u7684\u6750\u8d28\u5c5e\u6027\u3002 \u6240\u4ee5\uff0c\u4e0a\u4e00\u8282\u4e2d\u7684\u90a3\u4e2a\u6750\u8d28\u7cfb\u7edf\u662f\u80af\u5b9a\u4e0d\u591f\u7684\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u6a21\u578b\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u62d3\u5c55\u4e4b\u524d\u7684\u7cfb\u7edf\uff0c\u5f15\u5165 \u6f2b\u53cd\u5c04 \u548c \u955c\u9762\u5149 \u8d34\u56fe(Map)\u3002\u8fd9\u5141\u8bb8\u6211\u4eec\u5bf9\u7269\u4f53\u7684\u6f2b\u53cd\u5c04\u5206\u91cf\uff08\u4ee5\u53ca\u95f4\u63a5\u5730\u5bf9\u73af\u5883\u5149\u5206\u91cf\uff0c\u5b83\u4eec\u51e0\u4e4e\u603b\u662f\u4e00\u6837\u7684\uff09\u548c\u955c\u9762\u5149\u5206\u91cf\u6709\u7740\u66f4\u7cbe\u786e\u7684\u63a7\u5236\u3002 \u6f2b\u53cd\u5c04\u8d34\u56fe \u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u5bf9\u7269\u4f53\u7684\u6bcf\u4e2a\u7247\u6bb5\u5355\u72ec\u8bbe\u7f6e\u6f2b\u53cd\u5c04\u989c\u8272\u3002\u6709\u80fd\u591f\u8ba9\u6211\u4eec\u6839\u636e\u7247\u6bb5\u5728\u7269\u4f53\u4e0a\u7684\u4f4d\u7f6e\u6765\u83b7\u53d6\u989c\u8272\u503c\u7684\u7cfb\u7edf\u5417\uff1f \u8fd9\u53ef\u80fd\u542c\u8d77\u6765\u5f88\u719f\u6089\uff0c\u800c\u4e14\u4e8b\u5b9e\u4e0a\u8fd9\u4e2a\u7cfb\u7edf\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u5f88\u957f\u65f6\u95f4\u4e86\u3002\u8fd9\u542c\u8d77\u6765\u5f88\u50cf\u5728 \u4e4b\u524d \u6559\u7a0b\u4e2d\u8be6\u7ec6\u8ba8\u8bba\u8fc7\u7684 \u7eb9\u7406 \uff0c\u800c\u8fd9\u57fa\u672c\u5c31\u662f\u8fd9\u6837\uff1a\u4e00\u4e2a\u7eb9\u7406\u3002\u6211\u4eec\u4ec5\u4ec5\u662f\u5bf9\u540c\u6837\u7684\u539f\u7406\u4f7f\u7528\u4e86\u4e0d\u540c\u7684\u540d\u5b57\uff1a\u5176\u5b9e\u90fd\u662f\u4f7f\u7528\u4e00\u5f20\u8986\u76d6\u7269\u4f53\u7684\u56fe\u50cf\uff0c\u8ba9\u6211\u4eec\u80fd\u591f\u9010\u7247\u6bb5\u7d22\u5f15\u5176\u72ec\u7acb\u7684\u989c\u8272\u503c\u3002\u5728\u5149\u7167\u573a\u666f\u4e2d\uff0c\u5b83\u901a\u5e38\u53eb\u505a\u4e00\u4e2a \u6f2b\u53cd\u5c04\u8d34\u56fe (Diffuse Map)\uff08\u5728PBR\u4e4b\u524d3D\u827a\u672f\u5bb6\u901a\u5e38\u90fd\u8fd9\u4e48\u53eb\u5b83\uff09\uff0c\u5b83\u662f\u4e00\u4e2a\u8868\u73b0\u4e86\u7269\u4f53\u6240\u6709\u7684\u6f2b\u53cd\u5c04\u989c\u8272\u7684\u7eb9\u7406\u56fe\u50cf\u3002 \u4e3a\u4e86\u6f14\u793a\u6f2b\u53cd\u5c04\u8d34\u56fe\uff0c\u6211\u4eec\u5c06\u4f1a\u4f7f\u7528 \u4e0b\u9762\u7684\u56fe\u7247 \uff0c\u5b83\u662f\u4e00\u4e2a\u6709\u94a2\u8fb9\u6846\u7684\u6728\u7bb1\uff1a \u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u6f2b\u53cd\u5c04\u8d34\u56fe\u7684\u65b9\u6cd5\u548c\u7eb9\u7406\u6559\u7a0b\u4e2d\u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002\u4f46\u8fd9\u6b21\u6211\u4eec\u4f1a\u5c06\u7eb9\u7406\u50a8\u5b58\u4e3a Material \u7ed3\u6784\u4f53\u4e2d\u7684\u4e00\u4e2a sampler2D \u3002\u6211\u4eec\u5c06\u4e4b\u524d\u5b9a\u4e49\u7684 vec3 \u6f2b\u53cd\u5c04\u989c\u8272\u5411\u91cf\u66ff\u6362\u4e3a\u6f2b\u53cd\u5c04\u8d34\u56fe\u3002 Attention \u6ce8\u610f sampler2D \u662f\u6240\u8c13\u7684 \u4e0d\u900f\u660e\u7c7b\u578b (Opaque Type)\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u4e0d\u80fd\u5c06\u5b83\u5b9e\u4f8b\u5316\uff0c\u53ea\u80fd\u901a\u8fc7uniform\u6765\u5b9a\u4e49\u5b83\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u9664uniform\u4ee5\u5916\u7684\u65b9\u6cd5\uff08\u6bd4\u5982\u51fd\u6570\u7684\u53c2\u6570\uff09\u5b9e\u4f8b\u5316\u8fd9\u4e2a\u7ed3\u6784\u4f53\uff0cGLSL\u4f1a\u629b\u51fa\u4e00\u4e9b\u5947\u602a\u7684\u9519\u8bef\u3002\u8fd9\u540c\u6837\u4e5f\u9002\u7528\u4e8e\u4efb\u4f55\u5c01\u88c5\u4e86\u4e0d\u900f\u660e\u7c7b\u578b\u7684\u7ed3\u6784\u4f53\u3002 \u6211\u4eec\u4e5f\u79fb\u9664\u4e86\u73af\u5883\u5149\u6750\u8d28\u989c\u8272\u5411\u91cf\uff0c\u56e0\u4e3a\u73af\u5883\u5149\u989c\u8272\u5728\u51e0\u4e4e\u6240\u6709\u60c5\u51b5\u4e0b\u90fd\u7b49\u4e8e\u6f2b\u53cd\u5c04\u989c\u8272\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u5c06\u5b83\u4eec\u5206\u5f00\u50a8\u5b58\uff1a struct Material { sampler2D diffuse; vec3 specular; float shininess; }; ... in vec2 TexCoords; Important \u5982\u679c\u4f60\u975e\u5e38\u56fa\u6267\uff0c\u4ecd\u60f3\u5c06\u73af\u5883\u5149\u989c\u8272\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\uff08\u6f2b\u53cd\u5c04\u503c\u4e4b\u5916\uff09\u4e0d\u540c\u7684\u503c\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4fdd\u7559\u8fd9\u4e2a\u73af\u5883\u5149\u7684 vec3 \uff0c\u4f46\u6574\u4e2a\u7269\u4f53\u4ecd\u53ea\u80fd\u62e5\u6709\u4e00\u4e2a\u73af\u5883\u5149\u989c\u8272\u3002\u5982\u679c\u60f3\u8981\u5bf9\u4e0d\u540c\u7247\u6bb5\u6709\u4e0d\u540c\u7684\u73af\u5883\u5149\u503c\uff0c\u4f60\u9700\u8981\u5bf9\u73af\u5883\u5149\u503c\u5355\u72ec\u4f7f\u7528\u53e6\u5916\u4e00\u4e2a\u7eb9\u7406\u3002 \u6ce8\u610f\u6211\u4eec\u5c06\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u518d\u6b21\u9700\u8981\u7eb9\u7406\u5750\u6807\uff0c\u6240\u4ee5\u6211\u4eec\u58f0\u660e\u4e00\u4e2a\u989d\u5916\u7684\u8f93\u5165\u53d8\u91cf\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u53ea\u9700\u8981\u4ece\u7eb9\u7406\u4e2d\u91c7\u6837\u7247\u6bb5\u7684\u6f2b\u53cd\u5c04\u989c\u8272\u503c\u5373\u53ef\uff1a vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); \u4e0d\u8981\u5fd8\u8bb0\u5c06\u73af\u5883\u5149\u7684\u6750\u8d28\u989c\u8272\u8bbe\u7f6e\u4e3a\u6f2b\u53cd\u5c04\u6750\u8d28\u989c\u8272\u540c\u6837\u7684\u503c\u3002 vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); \u8fd9\u5c31\u662f\u4f7f\u7528\u6f2b\u53cd\u5c04\u8d34\u56fe\u7684\u5168\u90e8\u6b65\u9aa4\u4e86\u3002\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u5e76\u4e0d\u662f\u4ec0\u4e48\u65b0\u7684\u4e1c\u897f\uff0c\u4f46\u8fd9\u80fd\u591f\u6781\u5927\u5730\u63d0\u9ad8\u89c6\u89c9\u54c1\u8d28\u3002\u4e3a\u4e86\u8ba9\u5b83\u6b63\u5e38\u5de5\u4f5c\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4f7f\u7528\u7eb9\u7406\u5750\u6807\u66f4\u65b0\u9876\u70b9\u6570\u636e\uff0c\u5c06\u5b83\u4eec\u4f5c\u4e3a\u9876\u70b9\u5c5e\u6027\u4f20\u9012\u5230\u7247\u6bb5\u7740\u8272\u5668\uff0c\u52a0\u8f7d\u6750\u8d28\u5e76\u7ed1\u5b9a\u6750\u8d28\u5230\u5408\u9002\u7684\u7eb9\u7406\u5355\u5143\u3002 \u66f4\u65b0\u540e\u7684\u9876\u70b9\u6570\u636e\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u3002\u9876\u70b9\u6570\u636e\u73b0\u5728\u5305\u542b\u4e86\u9876\u70b9\u4f4d\u7f6e\u3001\u6cd5\u5411\u91cf\u548c\u7acb\u65b9\u4f53\u9876\u70b9\u5904\u7684\u7eb9\u7406\u5750\u6807\u3002\u8ba9\u6211\u4eec\u66f4\u65b0\u9876\u70b9\u7740\u8272\u5668\u6765\u4ee5\u9876\u70b9\u5c5e\u6027\u7684\u5f62\u5f0f\u63a5\u53d7\u7eb9\u7406\u5750\u6807\uff0c\u5e76\u5c06\u5b83\u4eec\u4f20\u9012\u5230\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff1a #version 330 core layout (location = 0) in vec3 aPos; layout (location = 1) in vec3 aNormal; layout (location = 2) in vec2 aTexCoords; ... out vec2 TexCoords; void main() { ... TexCoords = aTexCoords; } \u8bb0\u5f97\u53bb\u66f4\u65b0\u4e24\u4e2aVAO\u7684\u9876\u70b9\u5c5e\u6027\u6307\u9488\u6765\u5339\u914d\u65b0\u7684\u9876\u70b9\u6570\u636e\uff0c\u5e76\u52a0\u8f7d\u7bb1\u5b50\u56fe\u50cf\u4e3a\u4e00\u4e2a\u7eb9\u7406\u3002\u5728\u7ed8\u5236\u7bb1\u5b50\u4e4b\u524d\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u8981\u7528\u7684\u7eb9\u7406\u5355\u5143\u8d4b\u503c\u5230 material.diffuse \u8fd9\u4e2auniform\u91c7\u6837\u5668\uff0c\u5e76\u7ed1\u5b9a\u7bb1\u5b50\u7684\u7eb9\u7406\u5230\u8fd9\u4e2a\u7eb9\u7406\u5355\u5143\uff1a lightingShader.setInt(\"material.diffuse\", 0); ... glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_2D, diffuseMap); \u4f7f\u7528\u4e86\u6f2b\u53cd\u5c04\u8d34\u56fe\u4e4b\u540e\uff0c\u7ec6\u8282\u518d\u4e00\u6b21\u5f97\u5230\u60ca\u4eba\u7684\u63d0\u5347\uff0c\u8fd9\u6b21\u7bb1\u5b50\u6709\u4e86\u5149\u7167\u5f00\u59cb\u95ea\u95ea\u53d1\u5149\uff08\u5b57\u9762\u610f\u601d\u4e5f\u662f\uff09\u4e86\u3002\u4f60\u7684\u7bb1\u5b50\u770b\u8d77\u6765\u53ef\u80fd\u50cf\u8fd9\u6837\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u7a0b\u5e8f\u7684\u5168\u90e8\u4ee3\u7801\u3002 \u955c\u9762\u5149\u8d34\u56fe \u4f60\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\uff0c\u955c\u9762\u9ad8\u5149\u770b\u8d77\u6765\u6709\u4e9b\u5947\u602a\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u7269\u4f53\u5927\u90e8\u5206\u90fd\u662f\u6728\u5934\uff0c\u6211\u4eec\u77e5\u9053\u6728\u5934\u4e0d\u5e94\u8be5\u6709\u8fd9\u4e48\u5f3a\u7684\u955c\u9762\u9ad8\u5149\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u7269\u4f53\u7684\u955c\u9762\u5149\u6750\u8d28\u8bbe\u7f6e\u4e3a vec3(0.0) \u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u8fd9\u4e5f\u610f\u5473\u7740\u7bb1\u5b50\u94a2\u5236\u7684\u8fb9\u6846\u5c06\u4e0d\u518d\u80fd\u591f\u663e\u793a\u955c\u9762\u9ad8\u5149\u4e86\uff0c\u6211\u4eec\u77e5\u9053\u94a2\u94c1 \u5e94\u8be5 \u662f\u6709\u4e00\u4e9b\u955c\u9762\u9ad8\u5149\u7684\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u60f3\u8981\u8ba9\u7269\u4f53\u7684\u67d0\u4e9b\u90e8\u5206\u4ee5\u4e0d\u540c\u7684\u5f3a\u5ea6\u663e\u793a\u955c\u9762\u9ad8\u5149\u3002\u8fd9\u4e2a\u95ee\u9898\u770b\u8d77\u6765\u548c\u6f2b\u53cd\u5c04\u8d34\u56fe\u975e\u5e38\u76f8\u4f3c\u3002\u662f\u5de7\u5408\u5417\uff1f\u6211\u60f3\u4e0d\u662f\u3002 \u6211\u4eec\u540c\u6837\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u4e13\u95e8\u7528\u4e8e\u955c\u9762\u9ad8\u5149\u7684\u7eb9\u7406\u8d34\u56fe\u3002\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u751f\u6210\u4e00\u4e2a\u9ed1\u767d\u7684\uff08\u5982\u679c\u4f60\u60f3\u5f97\u8bdd\u4e5f\u53ef\u4ee5\u662f\u5f69\u8272\u7684\uff09\u7eb9\u7406\uff0c\u6765\u5b9a\u4e49\u7269\u4f53\u6bcf\u90e8\u5206\u7684\u955c\u9762\u5149\u5f3a\u5ea6\u3002\u4e0b\u9762\u662f\u4e00\u4e2a \u955c\u9762\u5149\u8d34\u56fe (Specular Map)\u7684\u4f8b\u5b50\uff1a \u955c\u9762\u9ad8\u5149\u7684\u5f3a\u5ea6\u53ef\u4ee5\u901a\u8fc7\u56fe\u50cf\u6bcf\u4e2a\u50cf\u7d20\u7684\u4eae\u5ea6\u6765\u83b7\u53d6\u3002\u955c\u9762\u5149\u8d34\u56fe\u4e0a\u7684\u6bcf\u4e2a\u50cf\u7d20\u90fd\u53ef\u4ee5\u7531\u4e00\u4e2a\u989c\u8272\u5411\u91cf\u6765\u8868\u793a\uff0c\u6bd4\u5982\u8bf4\u9ed1\u8272\u4ee3\u8868\u989c\u8272\u5411\u91cf vec3(0.0) \uff0c\u7070\u8272\u4ee3\u8868\u989c\u8272\u5411\u91cf vec3(0.5) \u3002\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u4f1a\u53d6\u6837\u5bf9\u5e94\u7684\u989c\u8272\u503c\u5e76\u5c06\u5b83\u4e58\u4ee5\u5149\u6e90\u7684\u955c\u9762\u5f3a\u5ea6\u3002\u4e00\u4e2a\u50cf\u7d20\u8d8a\u300c\u767d\u300d\uff0c\u4e58\u79ef\u5c31\u4f1a\u8d8a\u5927\uff0c\u7269\u4f53\u7684\u955c\u9762\u5149\u5206\u91cf\u5c31\u4f1a\u8d8a\u4eae\u3002 \u7531\u4e8e\u7bb1\u5b50\u5927\u90e8\u5206\u90fd\u7531\u6728\u5934\u6240\u7ec4\u6210\uff0c\u800c\u4e14\u6728\u5934\u6750\u8d28\u5e94\u8be5\u6ca1\u6709\u955c\u9762\u9ad8\u5149\uff0c\u6240\u4ee5\u6f2b\u53cd\u5c04\u7eb9\u7406\u7684\u6574\u4e2a\u6728\u5934\u90e8\u5206\u5168\u90e8\u90fd\u8f6c\u6362\u6210\u4e86\u9ed1\u8272\u3002\u7bb1\u5b50\u94a2\u5236\u8fb9\u6846\u7684\u955c\u9762\u5149\u5f3a\u5ea6\u662f\u6709\u7ec6\u5fae\u53d8\u5316\u7684\uff0c\u94a2\u94c1\u672c\u8eab\u4f1a\u6bd4\u8f83\u5bb9\u6613\u53d7\u5230\u955c\u9762\u9ad8\u5149\u7684\u5f71\u54cd\uff0c\u800c\u88c2\u7f1d\u5219\u4e0d\u4f1a\u3002 Important \u4ece\u5b9e\u9645\u89d2\u5ea6\u6765\u8bf4\uff0c\u6728\u5934\u5176\u5b9e\u4e5f\u6709\u955c\u9762\u9ad8\u5149\uff0c\u5c3d\u7ba1\u5b83\u7684\u53cd\u5149\u5ea6(Shininess)\u5f88\u5c0f\uff08\u66f4\u591a\u7684\u5149\u88ab\u6563\u5c04\uff09\uff0c\u5f71\u54cd\u4e5f\u6bd4\u8f83\u5c0f\uff0c\u4f46\u662f\u4e3a\u4e86\u6559\u5b66\u76ee\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u6728\u5934\u4e0d\u4f1a\u5bf9\u955c\u9762\u5149\u6709\u4efb\u4f55\u53cd\u5e94\u3002 \u4f7f\u7528 Photoshop \u6216 Gimp \u4e4b\u7c7b\u7684\u5de5\u5177\uff0c\u5c06\u6f2b\u53cd\u5c04\u7eb9\u7406\u8f6c\u6362\u4e3a\u955c\u9762\u5149\u7eb9\u7406\u8fd8\u662f\u6bd4\u8f83\u5bb9\u6613\u7684\uff0c\u53ea\u9700\u8981\u526a\u5207\u6389\u4e00\u4e9b\u90e8\u5206\uff0c\u5c06\u56fe\u50cf\u8f6c\u6362\u4e3a\u9ed1\u767d\u7684\uff0c\u5e76\u589e\u52a0\u4eae\u5ea6/\u5bf9\u6bd4\u5ea6\u5c31\u597d\u4e86\u3002 \u91c7\u6837\u955c\u9762\u5149\u8d34\u56fe \u955c\u9762\u5149\u8d34\u56fe\u548c\u5176\u5b83\u7684\u7eb9\u7406\u975e\u5e38\u7c7b\u4f3c\uff0c\u6240\u4ee5\u4ee3\u7801\u4e5f\u548c\u6f2b\u53cd\u5c04\u8d34\u56fe\u7684\u4ee3\u7801\u5f88\u7c7b\u4f3c\u3002\u8bb0\u5f97\u8981\u4fdd\u8bc1\u6b63\u786e\u5730\u52a0\u8f7d\u56fe\u50cf\u5e76\u751f\u6210\u4e00\u4e2a\u7eb9\u7406\u5bf9\u8c61\u3002\u7531\u4e8e\u6211\u4eec\u6b63\u5728\u540c\u4e00\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u53e6\u4e00\u4e2a\u7eb9\u7406\u91c7\u6837\u5668\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u5bf9\u955c\u9762\u5149\u8d34\u56fe\u4f7f\u7528\u4e00\u4e2a\u4e0d\u540c\u7684\u7eb9\u7406\u5355\u5143\uff08\u89c1 \u7eb9\u7406 \uff09\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u6e32\u67d3\u4e4b\u524d\u5148\u628a\u5b83\u7ed1\u5b9a\u5230\u5408\u9002\u7684\u7eb9\u7406\u5355\u5143\u4e0a\uff1a lightingShader.setInt(\"material.specular\", 1); ... glActiveTexture(GL_TEXTURE1); glBindTexture(GL_TEXTURE_2D, specularMap); \u63a5\u4e0b\u6765\u66f4\u65b0\u7247\u6bb5\u7740\u8272\u5668\u7684\u6750\u8d28\u5c5e\u6027\uff0c\u8ba9\u5176\u63a5\u53d7\u4e00\u4e2a sampler2D \u800c\u4e0d\u662f vec3 \u4f5c\u4e3a\u955c\u9762\u5149\u5206\u91cf\uff1a struct Material { sampler2D diffuse; sampler2D specular; float shininess; }; \u6700\u540e\u6211\u4eec\u5e0c\u671b\u91c7\u6837\u955c\u9762\u5149\u8d34\u56fe\uff0c\u6765\u83b7\u53d6\u7247\u6bb5\u6240\u5bf9\u5e94\u7684\u955c\u9762\u5149\u5f3a\u5ea6\uff1a vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); vec3 specular = light.specular * spec * vec3(texture(material.specular, TexCoords)); FragColor = vec4(ambient + diffuse + specular, 1.0); \u901a\u8fc7\u4f7f\u7528\u955c\u9762\u5149\u8d34\u56fe\u6211\u4eec\u53ef\u4ee5\u53ef\u4ee5\u5bf9\u7269\u4f53\u8bbe\u7f6e\u5927\u91cf\u7684\u7ec6\u8282\uff0c\u6bd4\u5982\u7269\u4f53\u7684\u54ea\u4e9b\u90e8\u5206\u9700\u8981\u6709 \u95ea\u95ea\u53d1\u5149 \u7684\u5c5e\u6027\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u8bbe\u7f6e\u5b83\u4eec\u5bf9\u5e94\u7684\u5f3a\u5ea6\u3002\u955c\u9762\u5149\u8d34\u56fe\u80fd\u591f\u5728\u6f2b\u53cd\u5c04\u8d34\u56fe\u4e4b\u4e0a\u7ed9\u4e88\u6211\u4eec\u66f4\u9ad8\u4e00\u5c42\u7684\u63a7\u5236\u3002 Important \u5982\u679c\u4f60\u60f3\u53e6\u8f9f\u8e4a\u5f84\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5728\u955c\u9762\u5149\u8d34\u56fe\u4e2d\u4f7f\u7528\u771f\u6b63\u7684\u989c\u8272\uff0c\u4e0d\u4ec5\u8bbe\u7f6e\u6bcf\u4e2a\u7247\u6bb5\u7684\u955c\u9762\u5149\u5f3a\u5ea6\uff0c\u8fd8\u8bbe\u7f6e\u4e86\u955c\u9762\u9ad8\u5149\u7684\u989c\u8272\u3002\u4ece\u73b0\u5b9e\u89d2\u5ea6\u6765\u8bf4\uff0c\u955c\u9762\u9ad8\u5149\u7684\u989c\u8272\u5927\u90e8\u5206\uff08\u751a\u81f3\u5168\u90e8\uff09\u90fd\u662f\u7531\u5149\u6e90\u672c\u8eab\u6240\u51b3\u5b9a\u7684\uff0c\u6240\u4ee5\u8fd9\u6837\u5e76\u4e0d\u80fd\u751f\u6210\u975e\u5e38\u771f\u5b9e\u7684\u89c6\u89c9\u6548\u679c\uff08\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u56fe\u50cf\u901a\u5e38\u662f\u9ed1\u767d\u7684\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u5f3a\u5ea6\uff09\u3002 \u5982\u679c\u4f60\u73b0\u5728\u8fd0\u884c\u7a0b\u5e8f\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u5230\u7bb1\u5b50\u7684\u6750\u8d28\u73b0\u5728\u548c\u771f\u5b9e\u7684\u94a2\u5236\u8fb9\u6846\u7bb1\u5b50\u975e\u5e38\u7c7b\u4f3c\u4e86\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u7a0b\u5e8f\u7684\u5168\u90e8\u6e90\u7801\u3002 \u901a\u8fc7\u4f7f\u7528\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u8d34\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u76f8\u5bf9\u7b80\u5355\u7684\u7269\u4f53\u6dfb\u52a0\u5927\u91cf\u7684\u7ec6\u8282\u3002\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u4f7f\u7528 \u6cd5\u7ebf/\u51f9\u51f8\u8d34\u56fe (Normal/Bump Map)\u6216\u8005 \u53cd\u5c04\u8d34\u56fe (Reflection Map)\u7ed9\u7269\u4f53\u6dfb\u52a0\u66f4\u591a\u7684\u7ec6\u8282\uff0c\u4f46\u8fd9\u4e9b\u5c06\u4f1a\u7559\u5230\u4e4b\u540e\u7684\u6559\u7a0b\u4e2d\u3002\u628a\u4f60\u7684\u7bb1\u5b50\u7ed9\u4f60\u7684\u670b\u53cb\u6216\u8005\u5bb6\u4eba\u770b\u770b\uff0c\u5e76\u4e14\u575a\u4fe1\u6211\u4eec\u7684\u7bb1\u5b50\u6709\u4e00\u5929\u4f1a\u6bd4\u73b0\u5728\u66f4\u52a0\u6f02\u4eae\uff01 \u7ec3\u4e60 \u8c03\u6574\u5149\u6e90\u7684\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u5411\u91cf\uff0c\u770b\u770b\u5b83\u4eec\u5982\u4f55\u5f71\u54cd\u7bb1\u5b50\u7684\u89c6\u89c9\u8f93\u51fa\u3002 \u5c1d\u8bd5\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u53cd\u8f6c\u955c\u9762\u5149\u8d34\u56fe\u7684\u989c\u8272\u503c\uff0c\u8ba9\u6728\u5934\u663e\u793a\u955c\u9762\u9ad8\u5149\u800c\u94a2\u5236\u8fb9\u7f18\u4e0d\u53cd\u5149\uff08\u7531\u4e8e\u94a2\u5236\u8fb9\u7f18\u4e2d\u6709\u4e00\u4e9b\u88c2\u7f1d\uff0c\u8fb9\u7f18\u4ecd\u4f1a\u663e\u793a\u4e00\u4e9b\u955c\u9762\u9ad8\u5149\uff0c\u867d\u7136\u5f3a\u5ea6\u4f1a\u5c0f\u5f88\u591a\uff09\uff1a \u53c2\u8003\u89e3\u7b54 \u4f7f\u7528\u6f2b\u53cd\u5c04\u8d34\u56fe\u521b\u5efa\u4e00\u4e2a\u5f69\u8272\u800c\u4e0d\u662f\u9ed1\u767d\u7684\u955c\u9762\u5149\u8d34\u56fe\uff0c\u770b\u770b\u7ed3\u679c\u770b\u8d77\u6765\u5e76\u4e0d\u662f\u90a3\u4e48\u771f\u5b9e\u4e86\u3002\u5982\u679c\u4f60\u4e0d\u4f1a\u751f\u6210\u7684\u8bdd\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u5f20 \u5f69\u8272\u7684\u955c\u9762\u5149\u8d34\u56fe \uff1a \u6700\u7ec8\u6548\u679c \u6dfb\u52a0\u4e00\u4e2a\u53eb\u505a \u653e\u5c04\u5149\u8d34\u56fe (Emission Map)\u7684\u4e1c\u897f\uff0c\u5b83\u662f\u4e00\u4e2a\u50a8\u5b58\u4e86\u6bcf\u4e2a\u7247\u6bb5\u7684\u53d1\u5149\u503c(Emission Value)\u7684\u8d34\u56fe\u3002\u53d1\u5149\u503c\u662f\u4e00\u4e2a\u5305\u542b\uff08\u5047\u8bbe\uff09\u5149\u6e90\u7684\u7269\u4f53\u53d1\u5149(Emit)\u65f6\u53ef\u80fd\u663e\u73b0\u7684\u989c\u8272\uff0c\u8fd9\u6837\u7684\u8bdd\u7269\u4f53\u5c31\u80fd\u591f\u5ffd\u7565\u5149\u7167\u6761\u4ef6\u8fdb\u884c\u53d1\u5149(Glow)\u3002\u6e38\u620f\u4e2d\u67d0\u4e2a\u7269\u4f53\u5728\u53d1\u5149\u7684\u65f6\u5019\uff0c\u4f60\u901a\u5e38\u770b\u5230\u7684\u5c31\u662f\u653e\u5c04\u5149\u8d34\u56fe\uff08\u6bd4\u5982 \u673a\u5668\u4eba\u7684\u773c \uff0c\u6216\u662f \u7bb1\u5b50\u4e0a\u7684\u706f\u5e26 \uff09\u3002\u5c06 \u8fd9\u4e2a \u7eb9\u7406\uff08\u4f5c\u8005\u4e3a creativesam\uff09\u4f5c\u4e3a\u653e\u5c04\u5149\u8d34\u56fe\u6dfb\u52a0\u5230\u7bb1\u5b50\u4e0a\uff0c\u4ea7\u751f\u8fd9\u4e9b\u5b57\u6bcd\u90fd\u5728\u53d1\u5149\u7684\u6548\u679c\uff1a \u53c2\u8003\u89e3\u7b54 \uff0c \u6700\u7ec8\u6548\u679c","title":"\u5149\u7167\u8d34\u56fe"},{"location":"02%20Lighting/04%20Lighting%20maps/#_1","text":"\u539f\u6587 Lighting maps \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 AoZhang \u5728 \u4e0a\u4e00\u8282 \u4e2d\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u8ba9\u6bcf\u4e2a\u7269\u4f53\u90fd\u62e5\u6709\u81ea\u5df1\u72ec\u7279\u7684\u6750\u8d28\u4ece\u800c\u5bf9\u5149\u7167\u505a\u51fa\u4e0d\u540c\u7684\u53cd\u5e94\u7684\u65b9\u6cd5\u3002\u8fd9\u6837\u5b50\u80fd\u591f\u5f88\u5bb9\u6613\u5728\u4e00\u4e2a\u5149\u7167\u7684\u573a\u666f\u4e2d\u7ed9\u6bcf\u4e2a\u7269\u4f53\u4e00\u4e2a\u72ec\u7279\u7684\u5916\u89c2\uff0c\u4f46\u662f\u8fd9\u4ecd\u4e0d\u80fd\u5bf9\u4e00\u4e2a\u7269\u4f53\u7684\u89c6\u89c9\u8f93\u51fa\u63d0\u4f9b\u8db3\u591f\u591a\u7684\u7075\u6d3b\u6027\u3002 \u5728\u4e0a\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u6574\u4e2a\u7269\u4f53\u7684\u6750\u8d28\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u4f46\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u7269\u4f53\u901a\u5e38\u5e76\u4e0d\u53ea\u5305\u542b\u6709\u4e00\u79cd\u6750\u8d28\uff0c\u800c\u662f\u7531\u591a\u79cd\u6750\u8d28\u6240\u7ec4\u6210\u3002\u60f3\u60f3\u4e00\u8f86\u6c7d\u8f66\uff1a\u5b83\u7684\u5916\u58f3\u975e\u5e38\u6709\u5149\u6cfd\uff0c\u8f66\u7a97\u4f1a\u90e8\u5206\u53cd\u5c04\u5468\u56f4\u7684\u73af\u5883\uff0c\u8f6e\u80ce\u4e0d\u4f1a\u90a3\u4e48\u6709\u5149\u6cfd\uff0c\u6240\u4ee5\u5b83\u6ca1\u6709\u955c\u9762\u9ad8\u5149\uff0c\u8f6e\u6bc2\u975e\u5e38\u95ea\u4eae\uff08\u5982\u679c\u4f60\u6d17\u8f66\u4e86\u7684\u8bdd\uff09\u3002\u6c7d\u8f66\u540c\u6837\u4f1a\u6709\u6f2b\u53cd\u5c04\u548c\u73af\u5883\u5149\u989c\u8272\uff0c\u5b83\u4eec\u5728\u6574\u4e2a\u7269\u4f53\u4e0a\u4e5f\u4e0d\u4f1a\u662f\u4e00\u6837\u7684\uff0c\u6c7d\u8f66\u6709\u7740\u8bb8\u591a\u79cd\u4e0d\u540c\u7684\u73af\u5883\u5149/\u6f2b\u53cd\u5c04\u989c\u8272\u3002\u603b\u4e4b\uff0c\u8fd9\u6837\u7684\u7269\u4f53\u5728\u4e0d\u540c\u7684\u90e8\u4ef6\u4e0a\u90fd\u6709\u4e0d\u540c\u7684\u6750\u8d28\u5c5e\u6027\u3002 \u6240\u4ee5\uff0c\u4e0a\u4e00\u8282\u4e2d\u7684\u90a3\u4e2a\u6750\u8d28\u7cfb\u7edf\u662f\u80af\u5b9a\u4e0d\u591f\u7684\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u6a21\u578b\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u62d3\u5c55\u4e4b\u524d\u7684\u7cfb\u7edf\uff0c\u5f15\u5165 \u6f2b\u53cd\u5c04 \u548c \u955c\u9762\u5149 \u8d34\u56fe(Map)\u3002\u8fd9\u5141\u8bb8\u6211\u4eec\u5bf9\u7269\u4f53\u7684\u6f2b\u53cd\u5c04\u5206\u91cf\uff08\u4ee5\u53ca\u95f4\u63a5\u5730\u5bf9\u73af\u5883\u5149\u5206\u91cf\uff0c\u5b83\u4eec\u51e0\u4e4e\u603b\u662f\u4e00\u6837\u7684\uff09\u548c\u955c\u9762\u5149\u5206\u91cf\u6709\u7740\u66f4\u7cbe\u786e\u7684\u63a7\u5236\u3002","title":"\u5149\u7167\u8d34\u56fe"},{"location":"02%20Lighting/04%20Lighting%20maps/#_2","text":"\u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u5bf9\u7269\u4f53\u7684\u6bcf\u4e2a\u7247\u6bb5\u5355\u72ec\u8bbe\u7f6e\u6f2b\u53cd\u5c04\u989c\u8272\u3002\u6709\u80fd\u591f\u8ba9\u6211\u4eec\u6839\u636e\u7247\u6bb5\u5728\u7269\u4f53\u4e0a\u7684\u4f4d\u7f6e\u6765\u83b7\u53d6\u989c\u8272\u503c\u7684\u7cfb\u7edf\u5417\uff1f \u8fd9\u53ef\u80fd\u542c\u8d77\u6765\u5f88\u719f\u6089\uff0c\u800c\u4e14\u4e8b\u5b9e\u4e0a\u8fd9\u4e2a\u7cfb\u7edf\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u5f88\u957f\u65f6\u95f4\u4e86\u3002\u8fd9\u542c\u8d77\u6765\u5f88\u50cf\u5728 \u4e4b\u524d \u6559\u7a0b\u4e2d\u8be6\u7ec6\u8ba8\u8bba\u8fc7\u7684 \u7eb9\u7406 \uff0c\u800c\u8fd9\u57fa\u672c\u5c31\u662f\u8fd9\u6837\uff1a\u4e00\u4e2a\u7eb9\u7406\u3002\u6211\u4eec\u4ec5\u4ec5\u662f\u5bf9\u540c\u6837\u7684\u539f\u7406\u4f7f\u7528\u4e86\u4e0d\u540c\u7684\u540d\u5b57\uff1a\u5176\u5b9e\u90fd\u662f\u4f7f\u7528\u4e00\u5f20\u8986\u76d6\u7269\u4f53\u7684\u56fe\u50cf\uff0c\u8ba9\u6211\u4eec\u80fd\u591f\u9010\u7247\u6bb5\u7d22\u5f15\u5176\u72ec\u7acb\u7684\u989c\u8272\u503c\u3002\u5728\u5149\u7167\u573a\u666f\u4e2d\uff0c\u5b83\u901a\u5e38\u53eb\u505a\u4e00\u4e2a \u6f2b\u53cd\u5c04\u8d34\u56fe (Diffuse Map)\uff08\u5728PBR\u4e4b\u524d3D\u827a\u672f\u5bb6\u901a\u5e38\u90fd\u8fd9\u4e48\u53eb\u5b83\uff09\uff0c\u5b83\u662f\u4e00\u4e2a\u8868\u73b0\u4e86\u7269\u4f53\u6240\u6709\u7684\u6f2b\u53cd\u5c04\u989c\u8272\u7684\u7eb9\u7406\u56fe\u50cf\u3002 \u4e3a\u4e86\u6f14\u793a\u6f2b\u53cd\u5c04\u8d34\u56fe\uff0c\u6211\u4eec\u5c06\u4f1a\u4f7f\u7528 \u4e0b\u9762\u7684\u56fe\u7247 \uff0c\u5b83\u662f\u4e00\u4e2a\u6709\u94a2\u8fb9\u6846\u7684\u6728\u7bb1\uff1a \u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u6f2b\u53cd\u5c04\u8d34\u56fe\u7684\u65b9\u6cd5\u548c\u7eb9\u7406\u6559\u7a0b\u4e2d\u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002\u4f46\u8fd9\u6b21\u6211\u4eec\u4f1a\u5c06\u7eb9\u7406\u50a8\u5b58\u4e3a Material \u7ed3\u6784\u4f53\u4e2d\u7684\u4e00\u4e2a sampler2D \u3002\u6211\u4eec\u5c06\u4e4b\u524d\u5b9a\u4e49\u7684 vec3 \u6f2b\u53cd\u5c04\u989c\u8272\u5411\u91cf\u66ff\u6362\u4e3a\u6f2b\u53cd\u5c04\u8d34\u56fe\u3002 Attention \u6ce8\u610f sampler2D \u662f\u6240\u8c13\u7684 \u4e0d\u900f\u660e\u7c7b\u578b (Opaque Type)\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u4e0d\u80fd\u5c06\u5b83\u5b9e\u4f8b\u5316\uff0c\u53ea\u80fd\u901a\u8fc7uniform\u6765\u5b9a\u4e49\u5b83\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u9664uniform\u4ee5\u5916\u7684\u65b9\u6cd5\uff08\u6bd4\u5982\u51fd\u6570\u7684\u53c2\u6570\uff09\u5b9e\u4f8b\u5316\u8fd9\u4e2a\u7ed3\u6784\u4f53\uff0cGLSL\u4f1a\u629b\u51fa\u4e00\u4e9b\u5947\u602a\u7684\u9519\u8bef\u3002\u8fd9\u540c\u6837\u4e5f\u9002\u7528\u4e8e\u4efb\u4f55\u5c01\u88c5\u4e86\u4e0d\u900f\u660e\u7c7b\u578b\u7684\u7ed3\u6784\u4f53\u3002 \u6211\u4eec\u4e5f\u79fb\u9664\u4e86\u73af\u5883\u5149\u6750\u8d28\u989c\u8272\u5411\u91cf\uff0c\u56e0\u4e3a\u73af\u5883\u5149\u989c\u8272\u5728\u51e0\u4e4e\u6240\u6709\u60c5\u51b5\u4e0b\u90fd\u7b49\u4e8e\u6f2b\u53cd\u5c04\u989c\u8272\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u5c06\u5b83\u4eec\u5206\u5f00\u50a8\u5b58\uff1a struct Material { sampler2D diffuse; vec3 specular; float shininess; }; ... in vec2 TexCoords; Important \u5982\u679c\u4f60\u975e\u5e38\u56fa\u6267\uff0c\u4ecd\u60f3\u5c06\u73af\u5883\u5149\u989c\u8272\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\uff08\u6f2b\u53cd\u5c04\u503c\u4e4b\u5916\uff09\u4e0d\u540c\u7684\u503c\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4fdd\u7559\u8fd9\u4e2a\u73af\u5883\u5149\u7684 vec3 \uff0c\u4f46\u6574\u4e2a\u7269\u4f53\u4ecd\u53ea\u80fd\u62e5\u6709\u4e00\u4e2a\u73af\u5883\u5149\u989c\u8272\u3002\u5982\u679c\u60f3\u8981\u5bf9\u4e0d\u540c\u7247\u6bb5\u6709\u4e0d\u540c\u7684\u73af\u5883\u5149\u503c\uff0c\u4f60\u9700\u8981\u5bf9\u73af\u5883\u5149\u503c\u5355\u72ec\u4f7f\u7528\u53e6\u5916\u4e00\u4e2a\u7eb9\u7406\u3002 \u6ce8\u610f\u6211\u4eec\u5c06\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u518d\u6b21\u9700\u8981\u7eb9\u7406\u5750\u6807\uff0c\u6240\u4ee5\u6211\u4eec\u58f0\u660e\u4e00\u4e2a\u989d\u5916\u7684\u8f93\u5165\u53d8\u91cf\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u53ea\u9700\u8981\u4ece\u7eb9\u7406\u4e2d\u91c7\u6837\u7247\u6bb5\u7684\u6f2b\u53cd\u5c04\u989c\u8272\u503c\u5373\u53ef\uff1a vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); \u4e0d\u8981\u5fd8\u8bb0\u5c06\u73af\u5883\u5149\u7684\u6750\u8d28\u989c\u8272\u8bbe\u7f6e\u4e3a\u6f2b\u53cd\u5c04\u6750\u8d28\u989c\u8272\u540c\u6837\u7684\u503c\u3002 vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); \u8fd9\u5c31\u662f\u4f7f\u7528\u6f2b\u53cd\u5c04\u8d34\u56fe\u7684\u5168\u90e8\u6b65\u9aa4\u4e86\u3002\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u5e76\u4e0d\u662f\u4ec0\u4e48\u65b0\u7684\u4e1c\u897f\uff0c\u4f46\u8fd9\u80fd\u591f\u6781\u5927\u5730\u63d0\u9ad8\u89c6\u89c9\u54c1\u8d28\u3002\u4e3a\u4e86\u8ba9\u5b83\u6b63\u5e38\u5de5\u4f5c\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4f7f\u7528\u7eb9\u7406\u5750\u6807\u66f4\u65b0\u9876\u70b9\u6570\u636e\uff0c\u5c06\u5b83\u4eec\u4f5c\u4e3a\u9876\u70b9\u5c5e\u6027\u4f20\u9012\u5230\u7247\u6bb5\u7740\u8272\u5668\uff0c\u52a0\u8f7d\u6750\u8d28\u5e76\u7ed1\u5b9a\u6750\u8d28\u5230\u5408\u9002\u7684\u7eb9\u7406\u5355\u5143\u3002 \u66f4\u65b0\u540e\u7684\u9876\u70b9\u6570\u636e\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u3002\u9876\u70b9\u6570\u636e\u73b0\u5728\u5305\u542b\u4e86\u9876\u70b9\u4f4d\u7f6e\u3001\u6cd5\u5411\u91cf\u548c\u7acb\u65b9\u4f53\u9876\u70b9\u5904\u7684\u7eb9\u7406\u5750\u6807\u3002\u8ba9\u6211\u4eec\u66f4\u65b0\u9876\u70b9\u7740\u8272\u5668\u6765\u4ee5\u9876\u70b9\u5c5e\u6027\u7684\u5f62\u5f0f\u63a5\u53d7\u7eb9\u7406\u5750\u6807\uff0c\u5e76\u5c06\u5b83\u4eec\u4f20\u9012\u5230\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff1a #version 330 core layout (location = 0) in vec3 aPos; layout (location = 1) in vec3 aNormal; layout (location = 2) in vec2 aTexCoords; ... out vec2 TexCoords; void main() { ... TexCoords = aTexCoords; } \u8bb0\u5f97\u53bb\u66f4\u65b0\u4e24\u4e2aVAO\u7684\u9876\u70b9\u5c5e\u6027\u6307\u9488\u6765\u5339\u914d\u65b0\u7684\u9876\u70b9\u6570\u636e\uff0c\u5e76\u52a0\u8f7d\u7bb1\u5b50\u56fe\u50cf\u4e3a\u4e00\u4e2a\u7eb9\u7406\u3002\u5728\u7ed8\u5236\u7bb1\u5b50\u4e4b\u524d\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u8981\u7528\u7684\u7eb9\u7406\u5355\u5143\u8d4b\u503c\u5230 material.diffuse \u8fd9\u4e2auniform\u91c7\u6837\u5668\uff0c\u5e76\u7ed1\u5b9a\u7bb1\u5b50\u7684\u7eb9\u7406\u5230\u8fd9\u4e2a\u7eb9\u7406\u5355\u5143\uff1a lightingShader.setInt(\"material.diffuse\", 0); ... glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_2D, diffuseMap); \u4f7f\u7528\u4e86\u6f2b\u53cd\u5c04\u8d34\u56fe\u4e4b\u540e\uff0c\u7ec6\u8282\u518d\u4e00\u6b21\u5f97\u5230\u60ca\u4eba\u7684\u63d0\u5347\uff0c\u8fd9\u6b21\u7bb1\u5b50\u6709\u4e86\u5149\u7167\u5f00\u59cb\u95ea\u95ea\u53d1\u5149\uff08\u5b57\u9762\u610f\u601d\u4e5f\u662f\uff09\u4e86\u3002\u4f60\u7684\u7bb1\u5b50\u770b\u8d77\u6765\u53ef\u80fd\u50cf\u8fd9\u6837\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u7a0b\u5e8f\u7684\u5168\u90e8\u4ee3\u7801\u3002","title":"\u6f2b\u53cd\u5c04\u8d34\u56fe"},{"location":"02%20Lighting/04%20Lighting%20maps/#_3","text":"\u4f60\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\uff0c\u955c\u9762\u9ad8\u5149\u770b\u8d77\u6765\u6709\u4e9b\u5947\u602a\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u7269\u4f53\u5927\u90e8\u5206\u90fd\u662f\u6728\u5934\uff0c\u6211\u4eec\u77e5\u9053\u6728\u5934\u4e0d\u5e94\u8be5\u6709\u8fd9\u4e48\u5f3a\u7684\u955c\u9762\u9ad8\u5149\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u7269\u4f53\u7684\u955c\u9762\u5149\u6750\u8d28\u8bbe\u7f6e\u4e3a vec3(0.0) \u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u8fd9\u4e5f\u610f\u5473\u7740\u7bb1\u5b50\u94a2\u5236\u7684\u8fb9\u6846\u5c06\u4e0d\u518d\u80fd\u591f\u663e\u793a\u955c\u9762\u9ad8\u5149\u4e86\uff0c\u6211\u4eec\u77e5\u9053\u94a2\u94c1 \u5e94\u8be5 \u662f\u6709\u4e00\u4e9b\u955c\u9762\u9ad8\u5149\u7684\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u60f3\u8981\u8ba9\u7269\u4f53\u7684\u67d0\u4e9b\u90e8\u5206\u4ee5\u4e0d\u540c\u7684\u5f3a\u5ea6\u663e\u793a\u955c\u9762\u9ad8\u5149\u3002\u8fd9\u4e2a\u95ee\u9898\u770b\u8d77\u6765\u548c\u6f2b\u53cd\u5c04\u8d34\u56fe\u975e\u5e38\u76f8\u4f3c\u3002\u662f\u5de7\u5408\u5417\uff1f\u6211\u60f3\u4e0d\u662f\u3002 \u6211\u4eec\u540c\u6837\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u4e13\u95e8\u7528\u4e8e\u955c\u9762\u9ad8\u5149\u7684\u7eb9\u7406\u8d34\u56fe\u3002\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u751f\u6210\u4e00\u4e2a\u9ed1\u767d\u7684\uff08\u5982\u679c\u4f60\u60f3\u5f97\u8bdd\u4e5f\u53ef\u4ee5\u662f\u5f69\u8272\u7684\uff09\u7eb9\u7406\uff0c\u6765\u5b9a\u4e49\u7269\u4f53\u6bcf\u90e8\u5206\u7684\u955c\u9762\u5149\u5f3a\u5ea6\u3002\u4e0b\u9762\u662f\u4e00\u4e2a \u955c\u9762\u5149\u8d34\u56fe (Specular Map)\u7684\u4f8b\u5b50\uff1a \u955c\u9762\u9ad8\u5149\u7684\u5f3a\u5ea6\u53ef\u4ee5\u901a\u8fc7\u56fe\u50cf\u6bcf\u4e2a\u50cf\u7d20\u7684\u4eae\u5ea6\u6765\u83b7\u53d6\u3002\u955c\u9762\u5149\u8d34\u56fe\u4e0a\u7684\u6bcf\u4e2a\u50cf\u7d20\u90fd\u53ef\u4ee5\u7531\u4e00\u4e2a\u989c\u8272\u5411\u91cf\u6765\u8868\u793a\uff0c\u6bd4\u5982\u8bf4\u9ed1\u8272\u4ee3\u8868\u989c\u8272\u5411\u91cf vec3(0.0) \uff0c\u7070\u8272\u4ee3\u8868\u989c\u8272\u5411\u91cf vec3(0.5) \u3002\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u4f1a\u53d6\u6837\u5bf9\u5e94\u7684\u989c\u8272\u503c\u5e76\u5c06\u5b83\u4e58\u4ee5\u5149\u6e90\u7684\u955c\u9762\u5f3a\u5ea6\u3002\u4e00\u4e2a\u50cf\u7d20\u8d8a\u300c\u767d\u300d\uff0c\u4e58\u79ef\u5c31\u4f1a\u8d8a\u5927\uff0c\u7269\u4f53\u7684\u955c\u9762\u5149\u5206\u91cf\u5c31\u4f1a\u8d8a\u4eae\u3002 \u7531\u4e8e\u7bb1\u5b50\u5927\u90e8\u5206\u90fd\u7531\u6728\u5934\u6240\u7ec4\u6210\uff0c\u800c\u4e14\u6728\u5934\u6750\u8d28\u5e94\u8be5\u6ca1\u6709\u955c\u9762\u9ad8\u5149\uff0c\u6240\u4ee5\u6f2b\u53cd\u5c04\u7eb9\u7406\u7684\u6574\u4e2a\u6728\u5934\u90e8\u5206\u5168\u90e8\u90fd\u8f6c\u6362\u6210\u4e86\u9ed1\u8272\u3002\u7bb1\u5b50\u94a2\u5236\u8fb9\u6846\u7684\u955c\u9762\u5149\u5f3a\u5ea6\u662f\u6709\u7ec6\u5fae\u53d8\u5316\u7684\uff0c\u94a2\u94c1\u672c\u8eab\u4f1a\u6bd4\u8f83\u5bb9\u6613\u53d7\u5230\u955c\u9762\u9ad8\u5149\u7684\u5f71\u54cd\uff0c\u800c\u88c2\u7f1d\u5219\u4e0d\u4f1a\u3002 Important \u4ece\u5b9e\u9645\u89d2\u5ea6\u6765\u8bf4\uff0c\u6728\u5934\u5176\u5b9e\u4e5f\u6709\u955c\u9762\u9ad8\u5149\uff0c\u5c3d\u7ba1\u5b83\u7684\u53cd\u5149\u5ea6(Shininess)\u5f88\u5c0f\uff08\u66f4\u591a\u7684\u5149\u88ab\u6563\u5c04\uff09\uff0c\u5f71\u54cd\u4e5f\u6bd4\u8f83\u5c0f\uff0c\u4f46\u662f\u4e3a\u4e86\u6559\u5b66\u76ee\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u6728\u5934\u4e0d\u4f1a\u5bf9\u955c\u9762\u5149\u6709\u4efb\u4f55\u53cd\u5e94\u3002 \u4f7f\u7528 Photoshop \u6216 Gimp \u4e4b\u7c7b\u7684\u5de5\u5177\uff0c\u5c06\u6f2b\u53cd\u5c04\u7eb9\u7406\u8f6c\u6362\u4e3a\u955c\u9762\u5149\u7eb9\u7406\u8fd8\u662f\u6bd4\u8f83\u5bb9\u6613\u7684\uff0c\u53ea\u9700\u8981\u526a\u5207\u6389\u4e00\u4e9b\u90e8\u5206\uff0c\u5c06\u56fe\u50cf\u8f6c\u6362\u4e3a\u9ed1\u767d\u7684\uff0c\u5e76\u589e\u52a0\u4eae\u5ea6/\u5bf9\u6bd4\u5ea6\u5c31\u597d\u4e86\u3002","title":"\u955c\u9762\u5149\u8d34\u56fe"},{"location":"02%20Lighting/04%20Lighting%20maps/#_4","text":"\u955c\u9762\u5149\u8d34\u56fe\u548c\u5176\u5b83\u7684\u7eb9\u7406\u975e\u5e38\u7c7b\u4f3c\uff0c\u6240\u4ee5\u4ee3\u7801\u4e5f\u548c\u6f2b\u53cd\u5c04\u8d34\u56fe\u7684\u4ee3\u7801\u5f88\u7c7b\u4f3c\u3002\u8bb0\u5f97\u8981\u4fdd\u8bc1\u6b63\u786e\u5730\u52a0\u8f7d\u56fe\u50cf\u5e76\u751f\u6210\u4e00\u4e2a\u7eb9\u7406\u5bf9\u8c61\u3002\u7531\u4e8e\u6211\u4eec\u6b63\u5728\u540c\u4e00\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u53e6\u4e00\u4e2a\u7eb9\u7406\u91c7\u6837\u5668\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u5bf9\u955c\u9762\u5149\u8d34\u56fe\u4f7f\u7528\u4e00\u4e2a\u4e0d\u540c\u7684\u7eb9\u7406\u5355\u5143\uff08\u89c1 \u7eb9\u7406 \uff09\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u6e32\u67d3\u4e4b\u524d\u5148\u628a\u5b83\u7ed1\u5b9a\u5230\u5408\u9002\u7684\u7eb9\u7406\u5355\u5143\u4e0a\uff1a lightingShader.setInt(\"material.specular\", 1); ... glActiveTexture(GL_TEXTURE1); glBindTexture(GL_TEXTURE_2D, specularMap); \u63a5\u4e0b\u6765\u66f4\u65b0\u7247\u6bb5\u7740\u8272\u5668\u7684\u6750\u8d28\u5c5e\u6027\uff0c\u8ba9\u5176\u63a5\u53d7\u4e00\u4e2a sampler2D \u800c\u4e0d\u662f vec3 \u4f5c\u4e3a\u955c\u9762\u5149\u5206\u91cf\uff1a struct Material { sampler2D diffuse; sampler2D specular; float shininess; }; \u6700\u540e\u6211\u4eec\u5e0c\u671b\u91c7\u6837\u955c\u9762\u5149\u8d34\u56fe\uff0c\u6765\u83b7\u53d6\u7247\u6bb5\u6240\u5bf9\u5e94\u7684\u955c\u9762\u5149\u5f3a\u5ea6\uff1a vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); vec3 specular = light.specular * spec * vec3(texture(material.specular, TexCoords)); FragColor = vec4(ambient + diffuse + specular, 1.0); \u901a\u8fc7\u4f7f\u7528\u955c\u9762\u5149\u8d34\u56fe\u6211\u4eec\u53ef\u4ee5\u53ef\u4ee5\u5bf9\u7269\u4f53\u8bbe\u7f6e\u5927\u91cf\u7684\u7ec6\u8282\uff0c\u6bd4\u5982\u7269\u4f53\u7684\u54ea\u4e9b\u90e8\u5206\u9700\u8981\u6709 \u95ea\u95ea\u53d1\u5149 \u7684\u5c5e\u6027\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u8bbe\u7f6e\u5b83\u4eec\u5bf9\u5e94\u7684\u5f3a\u5ea6\u3002\u955c\u9762\u5149\u8d34\u56fe\u80fd\u591f\u5728\u6f2b\u53cd\u5c04\u8d34\u56fe\u4e4b\u4e0a\u7ed9\u4e88\u6211\u4eec\u66f4\u9ad8\u4e00\u5c42\u7684\u63a7\u5236\u3002 Important \u5982\u679c\u4f60\u60f3\u53e6\u8f9f\u8e4a\u5f84\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5728\u955c\u9762\u5149\u8d34\u56fe\u4e2d\u4f7f\u7528\u771f\u6b63\u7684\u989c\u8272\uff0c\u4e0d\u4ec5\u8bbe\u7f6e\u6bcf\u4e2a\u7247\u6bb5\u7684\u955c\u9762\u5149\u5f3a\u5ea6\uff0c\u8fd8\u8bbe\u7f6e\u4e86\u955c\u9762\u9ad8\u5149\u7684\u989c\u8272\u3002\u4ece\u73b0\u5b9e\u89d2\u5ea6\u6765\u8bf4\uff0c\u955c\u9762\u9ad8\u5149\u7684\u989c\u8272\u5927\u90e8\u5206\uff08\u751a\u81f3\u5168\u90e8\uff09\u90fd\u662f\u7531\u5149\u6e90\u672c\u8eab\u6240\u51b3\u5b9a\u7684\uff0c\u6240\u4ee5\u8fd9\u6837\u5e76\u4e0d\u80fd\u751f\u6210\u975e\u5e38\u771f\u5b9e\u7684\u89c6\u89c9\u6548\u679c\uff08\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u56fe\u50cf\u901a\u5e38\u662f\u9ed1\u767d\u7684\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u5f3a\u5ea6\uff09\u3002 \u5982\u679c\u4f60\u73b0\u5728\u8fd0\u884c\u7a0b\u5e8f\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u5230\u7bb1\u5b50\u7684\u6750\u8d28\u73b0\u5728\u548c\u771f\u5b9e\u7684\u94a2\u5236\u8fb9\u6846\u7bb1\u5b50\u975e\u5e38\u7c7b\u4f3c\u4e86\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u7a0b\u5e8f\u7684\u5168\u90e8\u6e90\u7801\u3002 \u901a\u8fc7\u4f7f\u7528\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u8d34\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u76f8\u5bf9\u7b80\u5355\u7684\u7269\u4f53\u6dfb\u52a0\u5927\u91cf\u7684\u7ec6\u8282\u3002\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u4f7f\u7528 \u6cd5\u7ebf/\u51f9\u51f8\u8d34\u56fe (Normal/Bump Map)\u6216\u8005 \u53cd\u5c04\u8d34\u56fe (Reflection Map)\u7ed9\u7269\u4f53\u6dfb\u52a0\u66f4\u591a\u7684\u7ec6\u8282\uff0c\u4f46\u8fd9\u4e9b\u5c06\u4f1a\u7559\u5230\u4e4b\u540e\u7684\u6559\u7a0b\u4e2d\u3002\u628a\u4f60\u7684\u7bb1\u5b50\u7ed9\u4f60\u7684\u670b\u53cb\u6216\u8005\u5bb6\u4eba\u770b\u770b\uff0c\u5e76\u4e14\u575a\u4fe1\u6211\u4eec\u7684\u7bb1\u5b50\u6709\u4e00\u5929\u4f1a\u6bd4\u73b0\u5728\u66f4\u52a0\u6f02\u4eae\uff01","title":"\u91c7\u6837\u955c\u9762\u5149\u8d34\u56fe"},{"location":"02%20Lighting/04%20Lighting%20maps/#_5","text":"\u8c03\u6574\u5149\u6e90\u7684\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u5411\u91cf\uff0c\u770b\u770b\u5b83\u4eec\u5982\u4f55\u5f71\u54cd\u7bb1\u5b50\u7684\u89c6\u89c9\u8f93\u51fa\u3002 \u5c1d\u8bd5\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u53cd\u8f6c\u955c\u9762\u5149\u8d34\u56fe\u7684\u989c\u8272\u503c\uff0c\u8ba9\u6728\u5934\u663e\u793a\u955c\u9762\u9ad8\u5149\u800c\u94a2\u5236\u8fb9\u7f18\u4e0d\u53cd\u5149\uff08\u7531\u4e8e\u94a2\u5236\u8fb9\u7f18\u4e2d\u6709\u4e00\u4e9b\u88c2\u7f1d\uff0c\u8fb9\u7f18\u4ecd\u4f1a\u663e\u793a\u4e00\u4e9b\u955c\u9762\u9ad8\u5149\uff0c\u867d\u7136\u5f3a\u5ea6\u4f1a\u5c0f\u5f88\u591a\uff09\uff1a \u53c2\u8003\u89e3\u7b54 \u4f7f\u7528\u6f2b\u53cd\u5c04\u8d34\u56fe\u521b\u5efa\u4e00\u4e2a\u5f69\u8272\u800c\u4e0d\u662f\u9ed1\u767d\u7684\u955c\u9762\u5149\u8d34\u56fe\uff0c\u770b\u770b\u7ed3\u679c\u770b\u8d77\u6765\u5e76\u4e0d\u662f\u90a3\u4e48\u771f\u5b9e\u4e86\u3002\u5982\u679c\u4f60\u4e0d\u4f1a\u751f\u6210\u7684\u8bdd\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u5f20 \u5f69\u8272\u7684\u955c\u9762\u5149\u8d34\u56fe \uff1a \u6700\u7ec8\u6548\u679c \u6dfb\u52a0\u4e00\u4e2a\u53eb\u505a \u653e\u5c04\u5149\u8d34\u56fe (Emission Map)\u7684\u4e1c\u897f\uff0c\u5b83\u662f\u4e00\u4e2a\u50a8\u5b58\u4e86\u6bcf\u4e2a\u7247\u6bb5\u7684\u53d1\u5149\u503c(Emission Value)\u7684\u8d34\u56fe\u3002\u53d1\u5149\u503c\u662f\u4e00\u4e2a\u5305\u542b\uff08\u5047\u8bbe\uff09\u5149\u6e90\u7684\u7269\u4f53\u53d1\u5149(Emit)\u65f6\u53ef\u80fd\u663e\u73b0\u7684\u989c\u8272\uff0c\u8fd9\u6837\u7684\u8bdd\u7269\u4f53\u5c31\u80fd\u591f\u5ffd\u7565\u5149\u7167\u6761\u4ef6\u8fdb\u884c\u53d1\u5149(Glow)\u3002\u6e38\u620f\u4e2d\u67d0\u4e2a\u7269\u4f53\u5728\u53d1\u5149\u7684\u65f6\u5019\uff0c\u4f60\u901a\u5e38\u770b\u5230\u7684\u5c31\u662f\u653e\u5c04\u5149\u8d34\u56fe\uff08\u6bd4\u5982 \u673a\u5668\u4eba\u7684\u773c \uff0c\u6216\u662f \u7bb1\u5b50\u4e0a\u7684\u706f\u5e26 \uff09\u3002\u5c06 \u8fd9\u4e2a \u7eb9\u7406\uff08\u4f5c\u8005\u4e3a creativesam\uff09\u4f5c\u4e3a\u653e\u5c04\u5149\u8d34\u56fe\u6dfb\u52a0\u5230\u7bb1\u5b50\u4e0a\uff0c\u4ea7\u751f\u8fd9\u4e9b\u5b57\u6bcd\u90fd\u5728\u53d1\u5149\u7684\u6548\u679c\uff1a \u53c2\u8003\u89e3\u7b54 \uff0c \u6700\u7ec8\u6548\u679c","title":"\u7ec3\u4e60"},{"location":"02%20Lighting/05%20Light%20casters/","text":"\u6295\u5149\u7269 \u539f\u6587 Light casters \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 AoZhang \u6211\u4eec\u76ee\u524d\u4f7f\u7528\u7684\u5149\u7167\u90fd\u6765\u81ea\u4e8e\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u70b9\u3002\u5b83\u80fd\u7ed9\u6211\u4eec\u4e0d\u9519\u7684\u6548\u679c\uff0c\u4f46\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u6211\u4eec\u6709\u5f88\u591a\u79cd\u7c7b\u7684\u5149\u7167\uff0c\u6bcf\u79cd\u7684\u8868\u73b0\u90fd\u4e0d\u540c\u3002\u5c06\u5149 \u6295\u5c04 (Cast)\u5230\u7269\u4f53\u7684\u5149\u6e90\u53eb\u505a \u6295\u5149\u7269 (Light Caster)\u3002\u5728\u8fd9\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u8ba8\u8bba\u51e0\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u6295\u5149\u7269\u3002\u5b66\u4f1a\u6a21\u62df\u4e0d\u540c\u79cd\u7c7b\u7684\u5149\u6e90\u662f\u53c8\u4e00\u4e2a\u80fd\u591f\u8fdb\u4e00\u6b65\u4e30\u5bcc\u573a\u666f\u7684\u5de5\u5177\u3002 \u6211\u4eec\u9996\u5148\u5c06\u4f1a\u8ba8\u8bba\u5b9a\u5411\u5149(Directional Light)\uff0c\u63a5\u4e0b\u6765\u662f\u70b9\u5149\u6e90(Point Light)\uff0c\u5b83\u662f\u6211\u4eec\u4e4b\u524d\u5b66\u4e60\u7684\u5149\u6e90\u7684\u62d3\u5c55\uff0c\u6700\u540e\u6211\u4eec\u5c06\u4f1a\u8ba8\u8bba\u805a\u5149(Spotlight)\u3002\u5728 \u4e0b\u4e00\u8282 \u4e2d\u6211\u4eec\u5c06\u8ba8\u8bba\u5982\u4f55\u5c06\u8fd9\u4e9b\u4e0d\u540c\u79cd\u7c7b\u7684\u5149\u7167\u7c7b\u578b\u6574\u5408\u5230\u4e00\u4e2a\u573a\u666f\u4e4b\u4e2d\u3002 \u5e73\u884c\u5149 \u5f53\u4e00\u4e2a\u5149\u6e90\u5904\u4e8e\u5f88\u8fdc\u7684\u5730\u65b9\u65f6\uff0c\u6765\u81ea\u5149\u6e90\u7684\u6bcf\u6761\u5149\u7ebf\u5c31\u4f1a\u8fd1\u4f3c\u4e8e\u4e92\u76f8\u5e73\u884c\u3002\u4e0d\u8bba\u7269\u4f53\u548c/\u6216\u8005\u89c2\u5bdf\u8005\u7684\u4f4d\u7f6e\uff0c\u770b\u8d77\u6765\u597d\u50cf\u6240\u6709\u7684\u5149\u90fd\u6765\u81ea\u4e8e\u540c\u4e00\u4e2a\u65b9\u5411\u3002\u5f53\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u5047\u8bbe\u5149\u6e90\u5904\u4e8e \u65e0\u9650 \u8fdc\u5904\u7684\u6a21\u578b\u65f6\uff0c\u5b83\u5c31\u88ab\u79f0\u4e3a \u5b9a\u5411\u5149 \uff0c\u56e0\u4e3a\u5b83\u7684\u6240\u6709\u5149\u7ebf\u90fd\u6709\u7740\u76f8\u540c\u7684\u65b9\u5411\uff0c\u5b83\u4e0e\u5149\u6e90\u7684\u4f4d\u7f6e\u662f\u6ca1\u6709\u5173\u7cfb\u7684\u3002 \u5b9a\u5411\u5149\u975e\u5e38\u597d\u7684\u4e00\u4e2a\u4f8b\u5b50\u5c31\u662f\u592a\u9633\u3002\u592a\u9633\u8ddd\u79bb\u6211\u4eec\u5e76\u4e0d\u662f\u65e0\u9650\u8fdc\uff0c\u4f46\u5b83\u5df2\u7ecf\u8fdc\u5230\u5728\u5149\u7167\u8ba1\u7b97\u4e2d\u53ef\u4ee5\u628a\u5b83\u89c6\u4e3a\u65e0\u9650\u8fdc\u4e86\u3002\u6240\u4ee5\u6765\u81ea\u592a\u9633\u7684\u6240\u6709\u5149\u7ebf\u5c06\u88ab\u6a21\u62df\u4e3a\u5e73\u884c\u5149\u7ebf\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e0b\u56fe\u770b\u5230\uff1a \u56e0\u4e3a\u6240\u6709\u7684\u5149\u7ebf\u90fd\u662f\u5e73\u884c\u7684\uff0c\u6240\u4ee5\u7269\u4f53\u4e0e\u5149\u6e90\u7684\u76f8\u5bf9\u4f4d\u7f6e\u662f\u4e0d\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u5bf9\u573a\u666f\u4e2d\u6bcf\u4e00\u4e2a\u7269\u4f53\u5149\u7684\u65b9\u5411\u90fd\u662f\u4e00\u81f4\u7684\u3002\u7531\u4e8e\u5149\u7684\u4f4d\u7f6e\u5411\u91cf\u4fdd\u6301\u4e00\u81f4\uff0c\u573a\u666f\u4e2d\u6bcf\u4e2a\u7269\u4f53\u7684\u5149\u7167\u8ba1\u7b97\u5c06\u4f1a\u662f\u7c7b\u4f3c\u7684\u3002 \u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u5149\u7ebf\u65b9\u5411\u5411\u91cf\u800c\u4e0d\u662f\u4f4d\u7f6e\u5411\u91cf\u6765\u6a21\u62df\u4e00\u4e2a\u5b9a\u5411\u5149\u3002\u7740\u8272\u5668\u7684\u8ba1\u7b97\u57fa\u672c\u4fdd\u6301\u4e0d\u53d8\uff0c\u4f46\u8fd9\u6b21\u6211\u4eec\u5c06\u76f4\u63a5\u4f7f\u7528\u5149\u7684 direction \u5411\u91cf\u800c\u4e0d\u662f\u901a\u8fc7 position \u6765\u8ba1\u7b97 lightDir \u5411\u91cf\u3002 struct Light { // vec3 position; // \u4f7f\u7528\u5b9a\u5411\u5149\u5c31\u4e0d\u518d\u9700\u8981\u4e86 vec3 direction; vec3 ambient; vec3 diffuse; vec3 specular; }; ... void main() { vec3 lightDir = normalize(-light.direction); ... } \u6ce8\u610f\u6211\u4eec\u9996\u5148\u5bf9 light.direction \u5411\u91cf\u53d6\u53cd\u3002\u6211\u4eec\u76ee\u524d\u4f7f\u7528\u7684\u5149\u7167\u8ba1\u7b97\u9700\u6c42\u4e00\u4e2a\u4ece\u7247\u6bb5 \u81f3 \u5149\u6e90\u7684\u5149\u7ebf\u65b9\u5411\uff0c\u4f46\u4eba\u4eec\u66f4\u4e60\u60ef\u5b9a\u4e49\u5b9a\u5411\u5149\u4e3a\u4e00\u4e2a \u4ece \u5149\u6e90\u51fa\u53d1\u7684\u5168\u5c40\u65b9\u5411\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bf9\u5168\u5c40\u5149\u7167\u65b9\u5411\u5411\u91cf\u53d6\u53cd\u6765\u6539\u53d8\u5b83\u7684\u65b9\u5411\uff0c\u5b83\u73b0\u5728\u662f\u4e00\u4e2a\u6307\u5411\u5149\u6e90\u7684\u65b9\u5411\u5411\u91cf\u4e86\u3002\u800c\u4e14\uff0c\u8bb0\u5f97\u5bf9\u5411\u91cf\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u5047\u8bbe\u8f93\u5165\u5411\u91cf\u4e3a\u4e00\u4e2a\u5355\u4f4d\u5411\u91cf\u662f\u5f88\u4e0d\u660e\u667a\u7684\u3002 \u6700\u7ec8\u7684 lightDir \u5411\u91cf\u5c06\u548c\u4ee5\u524d\u4e00\u6837\u7528\u5728\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u8ba1\u7b97\u4e2d\u3002 \u4e3a\u4e86\u6e05\u695a\u5730\u5c55\u793a\u5b9a\u5411\u5149\u5bf9\u591a\u4e2a\u7269\u4f53\u5177\u6709\u76f8\u540c\u7684\u5f71\u54cd\uff0c\u6211\u4eec\u5c06\u4f1a\u518d\u6b21\u4f7f\u7528 \u5750\u6807\u7cfb\u7edf \u7ae0\u8282\u6700\u540e\u7684\u90a3\u4e2a\u7bb1\u5b50\u6d3e\u5bf9\u7684\u573a\u666f\u3002\u5982\u679c\u4f60\u9519\u8fc7\u4e86\u6d3e\u5bf9\uff0c\u6211\u4eec\u5148\u5b9a\u4e49\u4e86\u5341\u4e2a\u4e0d\u540c\u7684 \u7bb1\u5b50\u4f4d\u7f6e \uff0c\u5e76\u5bf9\u6bcf\u4e2a\u7bb1\u5b50\u90fd\u751f\u6210\u4e86\u4e00\u4e2a\u4e0d\u540c\u7684\u6a21\u578b\u77e9\u9635\uff0c\u6bcf\u4e2a\u6a21\u578b\u77e9\u9635\u90fd\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u5c40\u90e8-\u4e16\u754c\u5750\u6807\u53d8\u6362\uff1a for(unsigned int i = 0; i < 10; i++) { glm::mat4 model; model = glm::translate(model, cubePositions[i]); float angle = 20.0f * i; model = glm::rotate(model, glm::radians(angle), glm::vec3(1.0f, 0.3f, 0.5f)); lightingShader.setMat4(\"model\", model); glDrawArrays(GL_TRIANGLES, 0, 36); } \u540c\u65f6\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5b9a\u4e49\u5149\u6e90\u7684\u65b9\u5411\uff08\u6ce8\u610f\u6211\u4eec\u5c06\u65b9\u5411\u5b9a\u4e49\u4e3a \u4ece \u5149\u6e90\u51fa\u53d1\u7684\u65b9\u5411\uff0c\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u770b\u5230\u5149\u7684\u65b9\u5411\u671d\u4e0b\uff09\u3002 lightingShader.setVec3(\"light.direction\", -0.2f, -1.0f, -0.3f); Important \u6211\u4eec\u4e00\u76f4\u5c06\u5149\u7684\u4f4d\u7f6e\u548c\u4f4d\u7f6e\u5411\u91cf\u5b9a\u4e49\u4e3a vec3 \uff0c\u4f46\u4e00\u4e9b\u4eba\u4f1a\u559c\u6b22\u5c06\u6240\u6709\u7684\u5411\u91cf\u90fd\u5b9a\u4e49\u4e3a vec4 \u3002\u5f53\u6211\u4eec\u5c06\u4f4d\u7f6e\u5411\u91cf\u5b9a\u4e49\u4e3a\u4e00\u4e2a vec4 \u65f6\uff0c\u5f88\u91cd\u8981\u7684\u4e00\u70b9\u662f\u8981\u5c06w\u5206\u91cf\u8bbe\u7f6e\u4e3a1.0\uff0c\u8fd9\u6837\u53d8\u6362\u548c\u6295\u5f71\u624d\u80fd\u6b63\u786e\u5e94\u7528\u3002\u7136\u800c\uff0c\u5f53\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u65b9\u5411\u5411\u91cf\u4e3a vec4 \u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e0d\u60f3\u8ba9\u4f4d\u79fb\u6709\u4efb\u4f55\u7684\u6548\u679c\uff08\u56e0\u4e3a\u5b83\u4ec5\u4ec5\u4ee3\u8868\u7684\u662f\u65b9\u5411\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u5c06w\u5206\u91cf\u8bbe\u7f6e\u4e3a0.0\u3002 \u65b9\u5411\u5411\u91cf\u5c31\u4f1a\u50cf\u8fd9\u6837\u6765\u8868\u793a\uff1a vec4(0.2f, 1.0f, 0.3f, 0.0f) \u3002\u8fd9\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u5feb\u901f\u68c0\u6d4b\u5149\u7167\u7c7b\u578b\u7684\u5de5\u5177\uff1a\u4f60\u53ef\u4ee5\u68c0\u6d4bw\u5206\u91cf\u662f\u5426\u7b49\u4e8e1.0\uff0c\u6765\u68c0\u6d4b\u5b83\u662f\u5426\u662f\u5149\u7684\u4f4d\u7f6e\u5411\u91cf\uff1bw\u5206\u91cf\u7b49\u4e8e0.0\uff0c\u5219\u5b83\u662f\u5149\u7684\u65b9\u5411\u5411\u91cf\uff0c\u8fd9\u6837\u5c31\u80fd\u6839\u636e\u8fd9\u4e2a\u6765\u8c03\u6574\u5149\u7167\u8ba1\u7b97\u4e86\uff1a if(lightVector.w == 0.0) // \u6ce8\u610f\u6d6e\u70b9\u6570\u636e\u7c7b\u578b\u7684\u8bef\u5dee // \u6267\u884c\u5b9a\u5411\u5149\u7167\u8ba1\u7b97 else if(lightVector.w == 1.0) // \u6839\u636e\u5149\u6e90\u7684\u4f4d\u7f6e\u505a\u5149\u7167\u8ba1\u7b97\uff08\u4e0e\u4e0a\u4e00\u8282\u4e00\u6837\uff09 \u4f60\u77e5\u9053\u5417\uff1a\u8fd9\u6b63\u662f\u65e7OpenGL\uff08\u56fa\u5b9a\u51fd\u6570\u5f0f\uff09\u51b3\u5b9a\u5149\u6e90\u662f\u5b9a\u5411\u5149\u8fd8\u662f\u4f4d\u7f6e\u5149\u6e90(Positional Light Source)\u7684\u65b9\u6cd5\uff0c\u5e76\u6839\u636e\u5b83\u6765\u8c03\u6574\u5149\u7167\u3002 \u5982\u679c\u4f60\u73b0\u5728\u7f16\u8bd1\u7a0b\u5e8f\uff0c\u5728\u573a\u666f\u4e2d\u81ea\u7531\u79fb\u52a8\uff0c\u4f60\u5c31\u53ef\u4ee5\u770b\u5230\u597d\u50cf\u6709\u4e00\u4e2a\u592a\u9633\u4e00\u6837\u7684\u5149\u6e90\u5bf9\u6240\u6709\u7684\u7269\u4f53\u6295\u5149\u3002\u4f60\u80fd\u6ce8\u610f\u5230\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u5206\u91cf\u7684\u53cd\u5e94\u90fd\u597d\u50cf\u5728\u5929\u7a7a\u4e2d\u6709\u4e00\u4e2a\u5149\u6e90\u7684\u611f\u89c9\u5417\uff1f\u5b83\u4f1a\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u7a0b\u5e8f\u7684\u6240\u6709\u4ee3\u7801\u3002 \u70b9\u5149\u6e90 \u5b9a\u5411\u5149\u5bf9\u4e8e\u7167\u4eae\u6574\u4e2a\u573a\u666f\u7684\u5168\u5c40\u5149\u6e90\u662f\u975e\u5e38\u68d2\u7684\uff0c\u4f46\u9664\u4e86\u5b9a\u5411\u5149\u4e4b\u5916\u6211\u4eec\u4e5f\u9700\u8981\u4e00\u4e9b\u5206\u6563\u5728\u573a\u666f\u4e2d\u7684 \u70b9\u5149\u6e90 (Point Light)\u3002\u70b9\u5149\u6e90\u662f\u5904\u4e8e\u4e16\u754c\u4e2d\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5149\u6e90\uff0c\u5b83\u4f1a\u671d\u7740\u6240\u6709\u65b9\u5411\u53d1\u5149\uff0c\u4f46\u5149\u7ebf\u4f1a\u968f\u7740\u8ddd\u79bb\u9010\u6e10\u8870\u51cf\u3002\u60f3\u8c61\u4f5c\u4e3a\u6295\u5149\u7269\u7684\u706f\u6ce1\u548c\u706b\u628a\uff0c\u5b83\u4eec\u90fd\u662f\u70b9\u5149\u6e90\u3002 \u5728\u4e4b\u524d\u7684\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u4e00\u76f4\u90fd\u5728\u4f7f\u7528\u4e00\u4e2a\uff08\u7b80\u5316\u7684\uff09\u70b9\u5149\u6e90\u3002\u6211\u4eec\u5728\u7ed9\u5b9a\u4f4d\u7f6e\u6709\u4e00\u4e2a\u5149\u6e90\uff0c\u5b83\u4f1a\u4ece\u5b83\u7684\u5149\u6e90\u4f4d\u7f6e\u5f00\u59cb\u671d\u7740\u6240\u6709\u65b9\u5411\u6563\u5c04\u5149\u7ebf\u3002\u7136\u800c\uff0c\u6211\u4eec\u5b9a\u4e49\u7684\u5149\u6e90\u6a21\u62df\u7684\u662f\u6c38\u8fdc\u4e0d\u4f1a\u8870\u51cf\u7684\u5149\u7ebf\uff0c\u8fd9\u770b\u8d77\u6765\u50cf\u662f\u5149\u6e90\u4eae\u5ea6\u975e\u5e38\u7684\u5f3a\u3002\u5728\u5927\u90e8\u5206\u76843D\u6a21\u62df\u4e2d\uff0c\u6211\u4eec\u90fd\u5e0c\u671b\u6a21\u62df\u7684\u5149\u6e90\u4ec5\u7167\u4eae\u5149\u6e90\u9644\u8fd1\u7684\u533a\u57df\u800c\u4e0d\u662f\u6574\u4e2a\u573a\u666f\u3002 \u5982\u679c\u4f60\u5c0610\u4e2a\u7bb1\u5b50\u52a0\u5165\u5230\u4e0a\u4e00\u8282\u5149\u7167\u573a\u666f\u4e2d\uff0c\u4f60\u4f1a\u6ce8\u610f\u5230\u5728\u6700\u540e\u9762\u7684\u7bb1\u5b50\u548c\u5728\u706f\u9762\u524d\u7684\u7bb1\u5b50\u90fd\u4ee5\u76f8\u540c\u7684\u5f3a\u5ea6\u88ab\u7167\u4eae\uff0c\u5e76\u6ca1\u6709\u5b9a\u4e49\u4e00\u4e2a\u516c\u5f0f\u6765\u5c06\u5149\u968f\u8ddd\u79bb\u8870\u51cf\u3002\u6211\u4eec\u5e0c\u671b\u5728\u540e\u6392\u7684\u7bb1\u5b50\u4e0e\u524d\u6392\u7684\u7bb1\u5b50\u76f8\u6bd4\u4ec5\u4ec5\u662f\u88ab\u8f7b\u5fae\u5730\u7167\u4eae\u3002 \u8870\u51cf \u968f\u7740\u5149\u7ebf\u4f20\u64ad\u8ddd\u79bb\u7684\u589e\u957f\u9010\u6e10\u524a\u51cf\u5149\u7684\u5f3a\u5ea6\u901a\u5e38\u53eb\u505a \u8870\u51cf (Attenuation)\u3002\u968f\u8ddd\u79bb\u51cf\u5c11\u5149\u5f3a\u5ea6\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u4f7f\u7528\u4e00\u4e2a\u7ebf\u6027\u65b9\u7a0b\u3002\u8fd9\u6837\u7684\u65b9\u7a0b\u80fd\u591f\u968f\u7740\u8ddd\u79bb\u7684\u589e\u957f\u7ebf\u6027\u5730\u51cf\u5c11\u5149\u7684\u5f3a\u5ea6\uff0c\u4ece\u800c\u8ba9\u8fdc\u5904\u7684\u7269\u4f53\u66f4\u6697\u3002\u7136\u800c\uff0c\u8fd9\u6837\u7684\u7ebf\u6027\u65b9\u7a0b\u901a\u5e38\u4f1a\u770b\u8d77\u6765\u6bd4\u8f83\u5047\u3002\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u706f\u5728\u8fd1\u5904\u901a\u5e38\u4f1a\u975e\u5e38\u4eae\uff0c\u4f46\u968f\u7740\u8ddd\u79bb\u7684\u589e\u52a0\u5149\u6e90\u7684\u4eae\u5ea6\u4e00\u5f00\u59cb\u4f1a\u4e0b\u964d\u975e\u5e38\u5feb\uff0c\u4f46\u5728\u8fdc\u5904\u65f6\u5269\u4f59\u7684\u5149\u5f3a\u5ea6\u5c31\u4f1a\u4e0b\u964d\u7684\u975e\u5e38\u7f13\u6162\u4e86\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u4e0d\u540c\u7684\u516c\u5f0f\u6765\u51cf\u5c11\u5149\u7684\u5f3a\u5ea6\u3002 \u5e78\u8fd0\u7684\u662f\u4e00\u4e9b\u806a\u660e\u7684\u4eba\u5df2\u7ecf\u5e2e\u6211\u4eec\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u4e0b\u9762\u8fd9\u4e2a\u516c\u5f0f\u6839\u636e\u7247\u6bb5\u8ddd\u5149\u6e90\u7684\u8ddd\u79bb\u8ba1\u7b97\u4e86\u8870\u51cf\u503c\uff0c\u4e4b\u540e\u6211\u4eec\u4f1a\u5c06\u5b83\u4e58\u4ee5\u5149\u7684\u5f3a\u5ea6\u5411\u91cf\uff1a \\begin{equation} F_{att} = \\frac{1.0}{K_c + K_l * d + K_q * d^2} \\end{equation} \u5728\u8fd9\u91cc d \u4ee3\u8868\u4e86\u7247\u6bb5\u8ddd\u5149\u6e90\u7684\u8ddd\u79bb\u3002\u63a5\u4e0b\u6765\u4e3a\u4e86\u8ba1\u7b97\u8870\u51cf\u503c\uff0c\u6211\u4eec\u5b9a\u4e493\u4e2a\uff08\u53ef\u914d\u7f6e\u7684\uff09\u9879\uff1a \u5e38\u6570 \u9879 K_c \u3001 \u4e00\u6b21 \u9879 K_l \u548c \u4e8c\u6b21 \u9879 K_q \u3002 \u5e38\u6570\u9879\u901a\u5e38\u4fdd\u6301\u4e3a1.0\uff0c\u5b83\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u4fdd\u8bc1\u5206\u6bcd\u6c38\u8fdc\u4e0d\u4f1a\u6bd41\u5c0f\uff0c\u5426\u5219\u7684\u8bdd\u5728\u67d0\u4e9b\u8ddd\u79bb\u4e0a\u5b83\u53cd\u800c\u4f1a\u589e\u52a0\u5f3a\u5ea6\uff0c\u8fd9\u80af\u5b9a\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u6548\u679c\u3002 \u4e00\u6b21\u9879\u4f1a\u4e0e\u8ddd\u79bb\u503c\u76f8\u4e58\uff0c\u4ee5\u7ebf\u6027\u7684\u65b9\u5f0f\u51cf\u5c11\u5f3a\u5ea6\u3002 \u4e8c\u6b21\u9879\u4f1a\u4e0e\u8ddd\u79bb\u7684\u5e73\u65b9\u76f8\u4e58\uff0c\u8ba9\u5149\u6e90\u4ee5\u4e8c\u6b21\u9012\u51cf\u7684\u65b9\u5f0f\u51cf\u5c11\u5f3a\u5ea6\u3002\u4e8c\u6b21\u9879\u5728\u8ddd\u79bb\u6bd4\u8f83\u5c0f\u7684\u65f6\u5019\u5f71\u54cd\u4f1a\u6bd4\u4e00\u6b21\u9879\u5c0f\u5f88\u591a\uff0c\u4f46\u5f53\u8ddd\u79bb\u503c\u6bd4\u8f83\u5927\u7684\u65f6\u5019\u5b83\u5c31\u4f1a\u6bd4\u4e00\u6b21\u9879\u66f4\u5927\u4e86\u3002 \u7531\u4e8e\u4e8c\u6b21\u9879\u7684\u5b58\u5728\uff0c\u5149\u7ebf\u4f1a\u5728\u5927\u90e8\u5206\u65f6\u5019\u4ee5\u7ebf\u6027\u7684\u65b9\u5f0f\u8870\u9000\uff0c\u76f4\u5230\u8ddd\u79bb\u53d8\u5f97\u8db3\u591f\u5927\uff0c\u8ba9\u4e8c\u6b21\u9879\u8d85\u8fc7\u4e00\u6b21\u9879\uff0c\u5149\u7684\u5f3a\u5ea6\u4f1a\u4ee5\u66f4\u5feb\u7684\u901f\u5ea6\u4e0b\u964d\u3002\u8fd9\u6837\u7684\u7ed3\u679c\u5c31\u662f\uff0c\u5149\u5728\u8fd1\u8ddd\u79bb\u65f6\u4eae\u5ea6\u5f88\u9ad8\uff0c\u4f46\u968f\u7740\u8ddd\u79bb\u53d8\u8fdc\u4eae\u5ea6\u8fc5\u901f\u964d\u4f4e\uff0c\u6700\u540e\u4f1a\u4ee5\u66f4\u6162\u7684\u901f\u5ea6\u51cf\u5c11\u4eae\u5ea6\u3002\u4e0b\u9762\u8fd9\u5f20\u56fe\u663e\u793a\u4e86\u5728100\u7684\u8ddd\u79bb\u5185\u8870\u51cf\u7684\u6548\u679c\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\u5149\u5728\u8fd1\u8ddd\u79bb\u7684\u65f6\u5019\u6709\u7740\u6700\u9ad8\u7684\u5f3a\u5ea6\uff0c\u4f46\u968f\u7740\u8ddd\u79bb\u589e\u957f\uff0c\u5b83\u7684\u5f3a\u5ea6\u660e\u663e\u51cf\u5f31\uff0c\u5e76\u7f13\u6162\u5730\u5728\u8ddd\u79bb\u5927\u7ea6100\u7684\u65f6\u5019\u5f3a\u5ea6\u63a5\u8fd10\u3002\u8fd9\u6b63\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002 \u9009\u62e9\u6b63\u786e\u7684\u503c \u4f46\u662f\uff0c\u8be5\u5bf9\u8fd9\u4e09\u4e2a\u9879\u8bbe\u7f6e\u4ec0\u4e48\u503c\u5462\uff1f\u6b63\u786e\u5730\u8bbe\u5b9a\u5b83\u4eec\u7684\u503c\u53d6\u51b3\u4e8e\u5f88\u591a\u56e0\u7d20\uff1a\u73af\u5883\u3001\u5e0c\u671b\u5149\u8986\u76d6\u7684\u8ddd\u79bb\u3001\u5149\u7684\u7c7b\u578b\u7b49\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8fd9\u90fd\u662f\u7ecf\u9a8c\u7684\u95ee\u9898\uff0c\u4ee5\u53ca\u9002\u91cf\u7684\u8c03\u6574\u3002\u4e0b\u9762\u8fd9\u4e2a\u8868\u683c\u663e\u793a\u4e86\u6a21\u62df\u4e00\u4e2a\uff08\u5927\u6982\uff09\u771f\u5b9e\u7684\uff0c\u8986\u76d6\u7279\u5b9a\u534a\u5f84\uff08\u8ddd\u79bb\uff09\u7684\u5149\u6e90\u65f6\uff0c\u8fd9\u4e9b\u9879\u53ef\u80fd\u53d6\u7684\u4e00\u4e9b\u503c\u3002\u7b2c\u4e00\u5217\u6307\u5b9a\u7684\u662f\u5728\u7ed9\u5b9a\u7684\u4e09\u9879\u65f6\u5149\u6240\u80fd\u8986\u76d6\u7684\u8ddd\u79bb\u3002\u8fd9\u4e9b\u503c\u662f\u5927\u591a\u6570\u5149\u6e90\u5f88\u597d\u7684\u8d77\u59cb\u70b9\uff0c\u5b83\u4eec\u7531 Ogre3D\u7684Wiki \u6240\u63d0\u4f9b\uff1a \u8ddd\u79bb \u5e38\u6570\u9879 \u4e00\u6b21\u9879 \u4e8c\u6b21\u9879 7 1.0 0.7 1.8 13 1.0 0.35 0.44 20 1.0 0.22 0.20 32 1.0 0.14 0.07 50 1.0 0.09 0.032 65 1.0 0.07 0.017 100 1.0 0.045 0.0075 160 1.0 0.027 0.0028 200 1.0 0.022 0.0019 325 1.0 0.014 0.0007 600 1.0 0.007 0.0002 3250 1.0 0.0014 0.000007 \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u5e38\u6570\u9879 K_c \u5728\u6240\u6709\u7684\u60c5\u51b5\u4e0b\u90fd\u662f1.0\u3002\u4e00\u6b21\u9879 K_l \u4e3a\u4e86\u8986\u76d6\u66f4\u8fdc\u7684\u8ddd\u79bb\u901a\u5e38\u90fd\u5f88\u5c0f\uff0c\u4e8c\u6b21\u9879 K_q \u751a\u81f3\u66f4\u5c0f\u3002\u5c1d\u8bd5\u5bf9\u8fd9\u4e9b\u503c\u8fdb\u884c\u5b9e\u9a8c\uff0c\u770b\u770b\u5b83\u4eec\u5728\u4f60\u7684\u5b9e\u73b0\u4e2d\u6709\u4ec0\u4e48\u6548\u679c\u3002\u5728\u6211\u4eec\u7684\u73af\u5883\u4e2d\uff0c32\u5230100\u7684\u8ddd\u79bb\u5bf9\u5927\u591a\u6570\u7684\u5149\u6e90\u90fd\u8db3\u591f\u4e86\u3002 \u5b9e\u73b0\u8870\u51cf \u4e3a\u4e86\u5b9e\u73b0\u8870\u51cf\uff0c\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u6211\u4eec\u8fd8\u9700\u8981\u4e09\u4e2a\u989d\u5916\u7684\u503c\uff1a\u4e5f\u5c31\u662f\u516c\u5f0f\u4e2d\u7684\u5e38\u6570\u9879\u3001\u4e00\u6b21\u9879\u548c\u4e8c\u6b21\u9879\u3002\u5b83\u4eec\u6700\u597d\u50a8\u5b58\u5728\u4e4b\u524d\u5b9a\u4e49\u7684 Light \u7ed3\u6784\u4f53\u4e2d\u3002\u6ce8\u610f\u6211\u4eec\u4f7f\u7528\u4e0a\u4e00\u8282\u4e2d\u8ba1\u7b97 lightDir \u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u4e0a\u9762 \u5b9a\u5411\u5149 \u90e8\u5206\u7684\u3002 struct Light { vec3 position; vec3 ambient; vec3 diffuse; vec3 specular; float constant; float linear; float quadratic; }; \u7136\u540e\u6211\u4eec\u5c06\u5728OpenGL\u4e2d\u8bbe\u7f6e\u8fd9\u4e9b\u9879\uff1a\u6211\u4eec\u5e0c\u671b\u5149\u6e90\u80fd\u591f\u8986\u76d650\u7684\u8ddd\u79bb\uff0c\u6240\u4ee5\u6211\u4eec\u4f1a\u4f7f\u7528\u8868\u683c\u4e2d\u5bf9\u5e94\u7684\u5e38\u6570\u9879\u3001\u4e00\u6b21\u9879\u548c\u4e8c\u6b21\u9879\uff1a lightingShader.setFloat(\"light.constant\", 1.0f); lightingShader.setFloat(\"light.linear\", 0.09f); lightingShader.setFloat(\"light.quadratic\", 0.032f); \u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u5b9e\u73b0\u8870\u51cf\u8fd8\u662f\u6bd4\u8f83\u76f4\u63a5\u7684\uff1a\u6211\u4eec\u6839\u636e\u516c\u5f0f\u8ba1\u7b97\u8870\u51cf\u503c\uff0c\u4e4b\u540e\u518d\u5206\u522b\u4e58\u4ee5\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u5206\u91cf\u3002 \u6211\u4eec\u4ecd\u9700\u8981\u516c\u5f0f\u4e2d\u8ddd\u5149\u6e90\u7684\u8ddd\u79bb\uff0c\u8fd8\u8bb0\u5f97\u6211\u4eec\u662f\u600e\u4e48\u8ba1\u7b97\u4e00\u4e2a\u5411\u91cf\u7684\u957f\u5ea6\u7684\u5417\uff1f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u83b7\u53d6\u7247\u6bb5\u548c\u5149\u6e90\u4e4b\u95f4\u7684\u5411\u91cf\u5dee\uff0c\u5e76\u83b7\u53d6\u7ed3\u679c\u5411\u91cf\u7684\u957f\u5ea6\u4f5c\u4e3a\u8ddd\u79bb\u9879\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528GLSL\u5185\u5efa\u7684 length \u51fd\u6570\u6765\u5b8c\u6210\u8fd9\u4e00\u70b9\uff1a float distance = length(light.position - FragPos); float attenuation = 1.0 / (light.constant + light.linear * distance + light.quadratic * (distance * distance)); \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u5305\u542b\u8fd9\u4e2a\u8870\u51cf\u503c\u5230\u5149\u7167\u8ba1\u7b97\u4e2d\uff0c\u5c06\u5b83\u5206\u522b\u4e58\u4ee5\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u989c\u8272\u3002 Important \u6211\u4eec\u53ef\u4ee5\u5c06\u73af\u5883\u5149\u5206\u91cf\u4fdd\u6301\u4e0d\u53d8\uff0c\u8ba9\u73af\u5883\u5149\u7167\u4e0d\u4f1a\u968f\u7740\u8ddd\u79bb\u51cf\u5c11\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u4f7f\u7528\u591a\u4e8e\u4e00\u4e2a\u7684\u5149\u6e90\uff0c\u6240\u6709\u7684\u73af\u5883\u5149\u5206\u91cf\u5c06\u4f1a\u5f00\u59cb\u53e0\u52a0\uff0c\u6240\u4ee5\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u4e5f\u5e0c\u671b\u8870\u51cf\u73af\u5883\u5149\u7167\u3002\u7b80\u5355\u5b9e\u9a8c\u4e00\u4e0b\uff0c\u770b\u770b\u4ec0\u4e48\u624d\u80fd\u5728\u4f60\u7684\u73af\u5883\u4e2d\u6548\u679c\u6700\u597d\u3002 ambient *= attenuation; diffuse *= attenuation; specular *= attenuation; \u5982\u679c\u4f60\u8fd0\u884c\u7a0b\u5e8f\u7684\u8bdd\uff0c\u4f60\u4f1a\u83b7\u5f97\u8fd9\u6837\u7684\u7ed3\u679c\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u53ea\u6709\u524d\u6392\u7684\u7bb1\u5b50\u88ab\u7167\u4eae\u7684\uff0c\u8ddd\u79bb\u6700\u8fd1\u7684\u7bb1\u5b50\u662f\u6700\u4eae\u7684\u3002\u540e\u6392\u7684\u7bb1\u5b50\u4e00\u70b9\u90fd\u6ca1\u6709\u7167\u4eae\uff0c\u56e0\u4e3a\u5b83\u4eec\u79bb\u5149\u6e90\u5b9e\u5728\u662f\u592a\u8fdc\u4e86\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u7a0b\u5e8f\u7684\u4ee3\u7801\u3002 \u70b9\u5149\u6e90\u5c31\u662f\u4e00\u4e2a\u80fd\u591f\u914d\u7f6e\u4f4d\u7f6e\u548c\u8870\u51cf\u7684\u5149\u6e90\u3002\u5b83\u662f\u6211\u4eec\u5149\u7167\u5de5\u5177\u7bb1\u4e2d\u7684\u53c8\u4e00\u4e2a\u5149\u7167\u7c7b\u578b\u3002 \u805a\u5149 \u6211\u4eec\u8981\u8ba8\u8bba\u7684\u6700\u540e\u4e00\u79cd\u7c7b\u578b\u7684\u5149\u662f \u805a\u5149 (Spotlight)\u3002\u805a\u5149\u662f\u4f4d\u4e8e\u73af\u5883\u4e2d\u67d0\u4e2a\u4f4d\u7f6e\u7684\u5149\u6e90\uff0c\u5b83\u53ea\u671d\u4e00\u4e2a\u7279\u5b9a\u65b9\u5411\u800c\u4e0d\u662f\u6240\u6709\u65b9\u5411\u7167\u5c04\u5149\u7ebf\u3002\u8fd9\u6837\u7684\u7ed3\u679c\u5c31\u662f\u53ea\u6709\u5728\u805a\u5149\u65b9\u5411\u7684\u7279\u5b9a\u534a\u5f84\u5185\u7684\u7269\u4f53\u624d\u4f1a\u88ab\u7167\u4eae\uff0c\u5176\u5b83\u7684\u7269\u4f53\u90fd\u4f1a\u4fdd\u6301\u9ed1\u6697\u3002\u805a\u5149\u5f88\u597d\u7684\u4f8b\u5b50\u5c31\u662f\u8def\u706f\u6216\u624b\u7535\u7b52\u3002 OpenGL\u4e2d\u805a\u5149\u662f\u7528\u4e00\u4e2a\u4e16\u754c\u7a7a\u95f4\u4f4d\u7f6e\u3001\u4e00\u4e2a\u65b9\u5411\u548c\u4e00\u4e2a \u5207\u5149 \u89d2(Cutoff Angle)\u6765\u8868\u793a\u7684\uff0c\u5207\u5149\u89d2\u6307\u5b9a\u4e86\u805a\u5149\u7684\u534a\u5f84\uff08\u8bd1\u6ce8\uff1a\u662f\u5706\u9525\u7684\u534a\u5f84\u4e0d\u662f\u8ddd\u5149\u6e90\u8ddd\u79bb\u90a3\u4e2a\u534a\u5f84\uff09\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u7247\u6bb5\uff0c\u6211\u4eec\u4f1a\u8ba1\u7b97\u7247\u6bb5\u662f\u5426\u4f4d\u4e8e\u805a\u5149\u7684\u5207\u5149\u65b9\u5411\u4e4b\u95f4\uff08\u4e5f\u5c31\u662f\u5728\u9525\u5f62\u5185\uff09\uff0c\u5982\u679c\u662f\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u4f1a\u76f8\u5e94\u5730\u7167\u4eae\u7247\u6bb5\u3002\u4e0b\u9762\u8fd9\u5f20\u56fe\u4f1a\u8ba9\u4f60\u660e\u767d\u805a\u5149\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1a LightDir \uff1a\u4ece\u7247\u6bb5\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u3002 SpotDir \uff1a\u805a\u5149\u6240\u6307\u5411\u7684\u65b9\u5411\u3002 Phi \\phi \uff1a\u6307\u5b9a\u4e86\u805a\u5149\u534a\u5f84\u7684\u5207\u5149\u89d2\u3002\u843d\u5728\u8fd9\u4e2a\u89d2\u5ea6\u4e4b\u5916\u7684\u7269\u4f53\u90fd\u4e0d\u4f1a\u88ab\u8fd9\u4e2a\u805a\u5149\u6240\u7167\u4eae\u3002 Theta \\theta \uff1a LightDir \u5411\u91cf\u548c SpotDir \u5411\u91cf\u4e4b\u95f4\u7684\u5939\u89d2\u3002\u5728\u805a\u5149\u5185\u90e8\u7684\u8bdd \\theta \u503c\u5e94\u8be5\u6bd4 \\phi \u503c\u5c0f\u3002 \u6240\u4ee5\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u8ba1\u7b97 LightDir \u5411\u91cf\u548c SpotDir \u5411\u91cf\u4e4b\u95f4\u7684\u70b9\u79ef\uff08\u8fd8\u8bb0\u5f97\u5b83\u4f1a\u8fd4\u56de\u4e24\u4e2a\u5355\u4f4d\u5411\u91cf\u5939\u89d2\u7684\u4f59\u5f26\u503c\u5417\uff1f\uff09\uff0c\u5e76\u5c06\u5b83\u4e0e\u5207\u5149\u89d2 \\phi \u503c\u5bf9\u6bd4\u3002\u4f60\u73b0\u5728\u5e94\u8be5\u4e86\u89e3\u805a\u5149\u7a76\u7adf\u662f\u4ec0\u4e48\u4e86\uff0c\u4e0b\u9762\u6211\u4eec\u5c06\u4ee5\u624b\u7535\u7b52\u7684\u5f62\u5f0f\u521b\u5efa\u4e00\u4e2a\u805a\u5149\u3002 \u624b\u7535\u7b52 \u624b\u7535\u7b52(Flashlight)\u662f\u4e00\u4e2a\u4f4d\u4e8e\u89c2\u5bdf\u8005\u4f4d\u7f6e\u7684\u805a\u5149\uff0c\u901a\u5e38\u5b83\u90fd\u4f1a\u7784\u51c6\u73a9\u5bb6\u89c6\u89d2\u7684\u6b63\u524d\u65b9\u3002\u57fa\u672c\u4e0a\u8bf4\uff0c\u624b\u7535\u7b52\u5c31\u662f\u666e\u901a\u7684\u805a\u5149\uff0c\u4f46\u5b83\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\u4f1a\u968f\u7740\u73a9\u5bb6\u7684\u4f4d\u7f6e\u548c\u671d\u5411\u4e0d\u65ad\u66f4\u65b0\u3002 \u6240\u4ee5\uff0c\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u6211\u4eec\u9700\u8981\u7684\u503c\u6709\u805a\u5149\u7684\u4f4d\u7f6e\u5411\u91cf\uff08\u6765\u8ba1\u7b97\u5149\u7684\u65b9\u5411\u5411\u91cf\uff09\u3001\u805a\u5149\u7684\u65b9\u5411\u5411\u91cf\u548c\u4e00\u4e2a\u5207\u5149\u89d2\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u4eec\u50a8\u5b58\u5728 Light \u7ed3\u6784\u4f53\u4e2d\uff1a struct Light { vec3 position; vec3 direction; float cutOff; ... }; \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u5408\u9002\u7684\u503c\u4f20\u5230\u7740\u8272\u5668\u4e2d\uff1a lightingShader.setVec3(\"light.position\", camera.Position); lightingShader.setVec3(\"light.direction\", camera.Front); lightingShader.setFloat(\"light.cutOff\", glm::cos(glm::radians(12.5f))); \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u7ed9\u5207\u5149\u89d2\u8bbe\u7f6e\u4e00\u4e2a\u89d2\u5ea6\u503c\uff0c\u53cd\u800c\u662f\u7528\u89d2\u5ea6\u503c\u8ba1\u7b97\u4e86\u4e00\u4e2a\u4f59\u5f26\u503c\uff0c\u5c06\u4f59\u5f26\u7ed3\u679c\u4f20\u9012\u5230\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u3002\u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u4f1a\u8ba1\u7b97 LightDir \u548c SpotDir \u5411\u91cf\u7684\u70b9\u79ef\uff0c\u8fd9\u4e2a\u70b9\u79ef\u8fd4\u56de\u7684\u5c06\u662f\u4e00\u4e2a\u4f59\u5f26\u503c\u800c\u4e0d\u662f\u89d2\u5ea6\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u89d2\u5ea6\u503c\u548c\u4f59\u5f26\u503c\u8fdb\u884c\u6bd4\u8f83\u3002\u4e3a\u4e86\u83b7\u53d6\u89d2\u5ea6\u503c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u70b9\u79ef\u7ed3\u679c\u7684\u53cd\u4f59\u5f26\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f00\u9500\u5f88\u5927\u7684\u8ba1\u7b97\u3002\u6240\u4ee5\u4e3a\u4e86\u8282\u7ea6\u4e00\u70b9\u6027\u80fd\u5f00\u9500\uff0c\u6211\u4eec\u5c06\u4f1a\u8ba1\u7b97\u5207\u5149\u89d2\u5bf9\u5e94\u7684\u4f59\u5f26\u503c\uff0c\u5e76\u5c06\u5b83\u7684\u7ed3\u679c\u4f20\u5165\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u3002\u7531\u4e8e\u8fd9\u4e24\u4e2a\u89d2\u5ea6\u73b0\u5728\u90fd\u7531\u4f59\u5f26\u89d2\u6765\u8868\u793a\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5bf9\u5b83\u4eec\u8fdb\u884c\u6bd4\u8f83\u800c\u4e0d\u7528\u8fdb\u884c\u4efb\u4f55\u5f00\u9500\u9ad8\u6602\u7684\u8ba1\u7b97\u3002 \u63a5\u4e0b\u6765\u5c31\u662f\u8ba1\u7b97 \\theta \u503c\uff0c\u5e76\u5c06\u5b83\u548c\u5207\u5149\u89d2 \\phi \u5bf9\u6bd4\uff0c\u6765\u51b3\u5b9a\u662f\u5426\u5728\u805a\u5149\u7684\u5185\u90e8\uff1a float theta = dot(lightDir, normalize(-light.direction)); if(theta > light.cutOff) { // \u6267\u884c\u5149\u7167\u8ba1\u7b97 } else // \u5426\u5219\uff0c\u4f7f\u7528\u73af\u5883\u5149\uff0c\u8ba9\u573a\u666f\u5728\u805a\u5149\u4e4b\u5916\u65f6\u4e0d\u81f3\u4e8e\u5b8c\u5168\u9ed1\u6697 color = vec4(light.ambient * vec3(texture(material.diffuse, TexCoords)), 1.0); \u6211\u4eec\u9996\u5148\u8ba1\u7b97\u4e86 lightDir \u548c\u53d6\u53cd\u7684 direction \u5411\u91cf\uff08\u53d6\u53cd\u7684\u662f\u56e0\u4e3a\u6211\u4eec\u60f3\u8ba9\u5411\u91cf\u6307\u5411\u5149\u6e90\u800c\u4e0d\u662f\u4ece\u5149\u6e90\u51fa\u53d1\uff09\u4e4b\u95f4\u7684\u70b9\u79ef\u3002\u8bb0\u4f4f\u8981\u5bf9\u6240\u6709\u7684\u76f8\u5173\u5411\u91cf\u6807\u51c6\u5316\u3002 Important \u4f60\u53ef\u80fd\u5947\u602a\u4e3a\u4ec0\u4e48\u5728if\u6761\u4ef6\u4e2d\u4f7f\u7528\u7684\u662f > \u7b26\u53f7\u800c\u4e0d\u662f < \u7b26\u53f7\u3002 theta \u4e0d\u5e94\u8be5\u6bd4\u5149\u7684\u5207\u5149\u89d2\u66f4\u5c0f\u624d\u662f\u5728\u805a\u5149\u5185\u90e8\u5417\uff1f\u8fd9\u5e76\u6ca1\u6709\u9519\uff0c\u4f46\u4e0d\u8981\u5fd8\u8bb0\u89d2\u5ea6\u503c\u73b0\u5728\u90fd\u7531\u4f59\u5f26\u503c\u6765\u8868\u793a\u7684\u3002\u4e00\u4e2a0\u5ea6\u7684\u89d2\u5ea6\u8868\u793a\u7684\u662f1.0\u7684\u4f59\u5f26\u503c\uff0c\u800c\u4e00\u4e2a90\u5ea6\u7684\u89d2\u5ea6\u8868\u793a\u7684\u662f0.0\u7684\u4f59\u5f26\u503c\uff0c\u4f60\u53ef\u4ee5\u5728\u4e0b\u56fe\u4e2d\u770b\u5230\uff1a \u4f60\u73b0\u5728\u53ef\u4ee5\u770b\u5230\uff0c\u4f59\u5f26\u503c\u8d8a\u63a5\u8fd11.0\uff0c\u5b83\u7684\u89d2\u5ea6\u5c31\u8d8a\u5c0f\u3002\u8fd9\u4e5f\u5c31\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48 theta \u8981\u6bd4\u5207\u5149\u503c\u66f4\u5927\u4e86\u3002\u5207\u5149\u503c\u76ee\u524d\u8bbe\u7f6e\u4e3a12.5\u7684\u4f59\u5f26\uff0c\u7ea6\u7b49\u4e8e0.9978\uff0c\u6240\u4ee5\u57280.9979\u52301.0\u5185\u7684 theta \u503c\u624d\u80fd\u4fdd\u8bc1\u7247\u6bb5\u5728\u805a\u5149\u5185\uff0c\u4ece\u800c\u88ab\u7167\u4eae\u3002 \u8fd0\u884c\u7a0b\u5e8f\uff0c\u4f60\u5c06\u4f1a\u770b\u5230\u4e00\u4e2a\u805a\u5149\uff0c\u5b83\u4ec5\u4f1a\u7167\u4eae\u805a\u5149\u5706\u9525\u5185\u7684\u7247\u6bb5\u3002\u770b\u8d77\u6765\u50cf\u662f\u8fd9\u6837\u7684\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u83b7\u5f97\u5168\u90e8\u6e90\u7801\u3002 \u4f46\u8fd9\u4ecd\u770b\u8d77\u6765\u6709\u4e9b\u5047\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u805a\u5149\u6709\u4e00\u5708\u786c\u8fb9\u3002\u5f53\u4e00\u4e2a\u7247\u6bb5\u9047\u5230\u805a\u5149\u5706\u9525\u7684\u8fb9\u7f18\u65f6\uff0c\u5b83\u4f1a\u5b8c\u5168\u53d8\u6697\uff0c\u6ca1\u6709\u4e00\u70b9\u5e73\u6ed1\u7684\u8fc7\u6e21\u3002\u4e00\u4e2a\u771f\u5b9e\u7684\u805a\u5149\u5c06\u4f1a\u5728\u8fb9\u7f18\u5904\u9010\u6e10\u51cf\u5c11\u4eae\u5ea6\u3002 \u5e73\u6ed1/\u8f6f\u5316\u8fb9\u7f18 \u4e3a\u4e86\u521b\u5efa\u4e00\u79cd\u770b\u8d77\u6765\u8fb9\u7f18\u5e73\u6ed1\u7684\u805a\u5149\uff0c\u6211\u4eec\u9700\u8981\u6a21\u62df\u805a\u5149\u6709\u4e00\u4e2a \u5185 \u5706\u9525(Inner Cone)\u548c\u4e00\u4e2a \u5916 \u5706\u9525(Outer Cone)\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u5185\u5706\u9525\u8bbe\u7f6e\u4e3a\u4e0a\u4e00\u90e8\u5206\u4e2d\u7684\u90a3\u4e2a\u5706\u9525\uff0c\u4f46\u6211\u4eec\u4e5f\u9700\u8981\u4e00\u4e2a\u5916\u5706\u9525\uff0c\u6765\u8ba9\u5149\u4ece\u5185\u5706\u9525\u9010\u6e10\u51cf\u6697\uff0c\u76f4\u5230\u5916\u5706\u9525\u7684\u8fb9\u754c\u3002 \u4e3a\u4e86\u521b\u5efa\u4e00\u4e2a\u5916\u5706\u9525\uff0c\u6211\u4eec\u53ea\u9700\u8981\u518d\u5b9a\u4e49\u4e00\u4e2a\u4f59\u5f26\u503c\u6765\u4ee3\u8868\u805a\u5149\u65b9\u5411\u5411\u91cf\u548c\u5916\u5706\u9525\u5411\u91cf\uff08\u7b49\u4e8e\u5b83\u7684\u534a\u5f84\uff09\u7684\u5939\u89d2\u3002\u7136\u540e\uff0c\u5982\u679c\u4e00\u4e2a\u7247\u6bb5\u5904\u4e8e\u5185\u5916\u5706\u9525\u4e4b\u95f4\uff0c\u5c06\u4f1a\u7ed9\u5b83\u8ba1\u7b97\u51fa\u4e00\u4e2a0.0\u52301.0\u4e4b\u95f4\u7684\u5f3a\u5ea6\u503c\u3002\u5982\u679c\u7247\u6bb5\u5728\u5185\u5706\u9525\u4e4b\u5185\uff0c\u5b83\u7684\u5f3a\u5ea6\u5c31\u662f1.0\uff0c\u5982\u679c\u5728\u5916\u5706\u9525\u4e4b\u5916\u5f3a\u5ea6\u503c\u5c31\u662f0.0\u3002 \u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u9762\u8fd9\u4e2a\u516c\u5f0f\u6765\u8ba1\u7b97\u8fd9\u4e2a\u503c\uff1a \\begin{equation} I = \\frac{\\theta - \\gamma}{\\epsilon} \\end{equation} \u8fd9\u91cc \\epsilon (Epsilon)\u662f\u5185\uff08 \\phi \uff09\u548c\u5916\u5706\u9525\uff08 \\gamma \uff09\u4e4b\u95f4\u7684\u4f59\u5f26\u503c\u5dee\uff08 \\epsilon = \\phi - \\gamma \uff09\u3002\u6700\u7ec8\u7684 I \u503c\u5c31\u662f\u5728\u5f53\u524d\u7247\u6bb5\u805a\u5149\u7684\u5f3a\u5ea6\u3002 \u5f88\u96be\u53bb\u8868\u73b0\u8fd9\u4e2a\u516c\u5f0f\u662f\u600e\u4e48\u5de5\u4f5c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u4e00\u4e9b\u5b9e\u4f8b\u503c\u6765\u770b\u770b\uff1a \\theta \\theta \uff08\u89d2\u5ea6\uff09 \\phi \uff08\u5185\u5149\u5207\uff09 \\phi \uff08\u89d2\u5ea6\uff09 \\gamma \uff08\u5916\u5149\u5207\uff09 \\gamma \uff08\u89d2\u5ea6\uff09 \\epsilon I 0.87 30 0.91 25 0.82 35 0.91 - 0.82 = 0.09 0.87 - 0.82 / 0.09 = 0.56 0.9 26 0.91 25 0.82 35 0.91 - 0.82 = 0.09 0.9 - 0.82 / 0.09 = 0.89 0.97 14 0.91 25 0.82 35 0.91 - 0.82 = 0.09 0.97 - 0.82 / 0.09 = 1.67 0.83 34 0.91 25 0.82 35 0.91 - 0.82 = 0.09 0.83 - 0.82 / 0.09 = 0.11 0.64 50 0.91 25 0.82 35 0.91 - 0.82 = 0.09 0.64 - 0.82 / 0.09 = -2.0 0.966 15 0.9978 12.5 0.953 17.5 0.9978 - 0.953 = 0.0448 0.966 - 0.953 / 0.0448 = 0.29 \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u57fa\u672c\u662f\u5728\u5185\u5916\u4f59\u5f26\u503c\u4e4b\u95f4\u6839\u636e \\theta \u63d2\u503c\u3002\u5982\u679c\u4f60\u4ecd\u4e0d\u660e\u767d\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u4e0d\u5fc5\u62c5\u5fc3\uff0c\u53ea\u9700\u8981\u8bb0\u4f4f\u8fd9\u4e2a\u516c\u5f0f\u5c31\u597d\u4e86\uff0c\u5728\u4f60\u66f4\u806a\u660e\u7684\u65f6\u5019\u518d\u56de\u6765\u770b\u770b\u3002 \u6211\u4eec\u73b0\u5728\u6709\u4e86\u4e00\u4e2a\u5728\u805a\u5149\u5916\u662f\u8d1f\u7684\uff0c\u5728\u5185\u5706\u9525\u5185\u5927\u4e8e1.0\u7684\uff0c\u5728\u8fb9\u7f18\u5904\u4e8e\u4e24\u8005\u4e4b\u95f4\u7684\u5f3a\u5ea6\u503c\u4e86\u3002\u5982\u679c\u6211\u4eec\u6b63\u786e\u5730\u7ea6\u675f(Clamp)\u8fd9\u4e2a\u503c\uff0c\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u5c31\u4e0d\u518d\u9700\u8981 if-else \u4e86\uff0c\u6211\u4eec\u80fd\u591f\u4f7f\u7528\u8ba1\u7b97\u51fa\u6765\u7684\u5f3a\u5ea6\u503c\u76f4\u63a5\u4e58\u4ee5\u5149\u7167\u5206\u91cf\uff1a float theta = dot(lightDir, normalize(-light.direction)); float epsilon = light.cutOff - light.outerCutOff; float intensity = clamp((theta - light.outerCutOff) / epsilon, 0.0, 1.0); ... // \u5c06\u4e0d\u5bf9\u73af\u5883\u5149\u505a\u51fa\u5f71\u54cd\uff0c\u8ba9\u5b83\u603b\u662f\u80fd\u6709\u4e00\u70b9\u5149 diffuse *= intensity; specular *= intensity; ... \u6ce8\u610f\u6211\u4eec\u4f7f\u7528\u4e86 clamp \u51fd\u6570\uff0c\u5b83\u628a\u7b2c\u4e00\u4e2a\u53c2\u6570\u7ea6\u675f(Clamp)\u5728\u4e860.0\u52301.0\u4e4b\u95f4\u3002\u8fd9\u4fdd\u8bc1\u5f3a\u5ea6\u503c\u4e0d\u4f1a\u5728[0, 1]\u533a\u95f4\u4e4b\u5916\u3002 \u786e\u5b9a\u4f60\u5c06 outerCutOff \u503c\u6dfb\u52a0\u5230\u4e86 Light \u7ed3\u6784\u4f53\u4e4b\u4e2d\uff0c\u5e76\u5728\u7a0b\u5e8f\u4e2d\u8bbe\u7f6e\u5b83\u7684uniform\u503c\u3002\u4e0b\u9762\u7684\u56fe\u7247\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u5185\u5207\u5149\u89d2\u662f12.5\uff0c\u5916\u5207\u5149\u89d2\u662f17.5\uff1a \u554a\uff0c\u8fd9\u6837\u770b\u8d77\u6765\u5c31\u597d\u591a\u4e86\u3002\u7a0d\u5fae\u5bf9\u5185\u5916\u5207\u5149\u89d2\u5b9e\u9a8c\u4e00\u4e0b\uff0c\u5c1d\u8bd5\u521b\u5efa\u4e00\u4e2a\u66f4\u80fd\u7b26\u5408\u4f60\u9700\u6c42\u7684\u805a\u5149\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u7a0b\u5e8f\u7684\u6e90\u7801\u3002 \u8fd9\u6837\u7684\u624b\u7535\u7b52/\u805a\u5149\u7c7b\u578b\u7684\u706f\u5149\u975e\u5e38\u9002\u5408\u6050\u6016\u6e38\u620f\uff0c\u7ed3\u5408\u5b9a\u5411\u5149\u548c\u70b9\u5149\u6e90\uff0c\u73af\u5883\u5c31\u4f1a\u5f00\u59cb\u88ab\u7167\u4eae\u4e86\u3002\u5728 \u4e0b\u4e00\u8282 \u7684\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u7ed3\u5408\u6211\u4eec\u81f3\u4eca\u8ba8\u8bba\u7684\u6240\u6709\u5149\u7167\u548c\u6280\u5de7\u3002 \u7ec3\u4e60 \u5c1d\u8bd5\u5b9e\u9a8c\u4e00\u4e0b\u4e0a\u9762\u7684\u6240\u6709\u5149\u7167\u7c7b\u578b\u548c\u5b83\u4eec\u7684\u7247\u6bb5\u7740\u8272\u5668\u3002\u8bd5\u7740\u5bf9\u4e00\u4e9b\u5411\u91cf\u8fdb\u884c\u53d6\u53cd\uff0c\u5e76\u4f7f\u7528 < \u6765\u4ee3\u66ff >\u3002\u8bd5\u7740\u89e3\u91ca\u4e0d\u540c\u89c6\u89c9\u6548\u679c\u4ea7\u751f\u7684\u539f\u56e0\u3002","title":"\u6295\u5149\u7269"},{"location":"02%20Lighting/05%20Light%20casters/#_1","text":"\u539f\u6587 Light casters \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 AoZhang \u6211\u4eec\u76ee\u524d\u4f7f\u7528\u7684\u5149\u7167\u90fd\u6765\u81ea\u4e8e\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u70b9\u3002\u5b83\u80fd\u7ed9\u6211\u4eec\u4e0d\u9519\u7684\u6548\u679c\uff0c\u4f46\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u6211\u4eec\u6709\u5f88\u591a\u79cd\u7c7b\u7684\u5149\u7167\uff0c\u6bcf\u79cd\u7684\u8868\u73b0\u90fd\u4e0d\u540c\u3002\u5c06\u5149 \u6295\u5c04 (Cast)\u5230\u7269\u4f53\u7684\u5149\u6e90\u53eb\u505a \u6295\u5149\u7269 (Light Caster)\u3002\u5728\u8fd9\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u8ba8\u8bba\u51e0\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u6295\u5149\u7269\u3002\u5b66\u4f1a\u6a21\u62df\u4e0d\u540c\u79cd\u7c7b\u7684\u5149\u6e90\u662f\u53c8\u4e00\u4e2a\u80fd\u591f\u8fdb\u4e00\u6b65\u4e30\u5bcc\u573a\u666f\u7684\u5de5\u5177\u3002 \u6211\u4eec\u9996\u5148\u5c06\u4f1a\u8ba8\u8bba\u5b9a\u5411\u5149(Directional Light)\uff0c\u63a5\u4e0b\u6765\u662f\u70b9\u5149\u6e90(Point Light)\uff0c\u5b83\u662f\u6211\u4eec\u4e4b\u524d\u5b66\u4e60\u7684\u5149\u6e90\u7684\u62d3\u5c55\uff0c\u6700\u540e\u6211\u4eec\u5c06\u4f1a\u8ba8\u8bba\u805a\u5149(Spotlight)\u3002\u5728 \u4e0b\u4e00\u8282 \u4e2d\u6211\u4eec\u5c06\u8ba8\u8bba\u5982\u4f55\u5c06\u8fd9\u4e9b\u4e0d\u540c\u79cd\u7c7b\u7684\u5149\u7167\u7c7b\u578b\u6574\u5408\u5230\u4e00\u4e2a\u573a\u666f\u4e4b\u4e2d\u3002","title":"\u6295\u5149\u7269"},{"location":"02%20Lighting/05%20Light%20casters/#_2","text":"\u5f53\u4e00\u4e2a\u5149\u6e90\u5904\u4e8e\u5f88\u8fdc\u7684\u5730\u65b9\u65f6\uff0c\u6765\u81ea\u5149\u6e90\u7684\u6bcf\u6761\u5149\u7ebf\u5c31\u4f1a\u8fd1\u4f3c\u4e8e\u4e92\u76f8\u5e73\u884c\u3002\u4e0d\u8bba\u7269\u4f53\u548c/\u6216\u8005\u89c2\u5bdf\u8005\u7684\u4f4d\u7f6e\uff0c\u770b\u8d77\u6765\u597d\u50cf\u6240\u6709\u7684\u5149\u90fd\u6765\u81ea\u4e8e\u540c\u4e00\u4e2a\u65b9\u5411\u3002\u5f53\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u5047\u8bbe\u5149\u6e90\u5904\u4e8e \u65e0\u9650 \u8fdc\u5904\u7684\u6a21\u578b\u65f6\uff0c\u5b83\u5c31\u88ab\u79f0\u4e3a \u5b9a\u5411\u5149 \uff0c\u56e0\u4e3a\u5b83\u7684\u6240\u6709\u5149\u7ebf\u90fd\u6709\u7740\u76f8\u540c\u7684\u65b9\u5411\uff0c\u5b83\u4e0e\u5149\u6e90\u7684\u4f4d\u7f6e\u662f\u6ca1\u6709\u5173\u7cfb\u7684\u3002 \u5b9a\u5411\u5149\u975e\u5e38\u597d\u7684\u4e00\u4e2a\u4f8b\u5b50\u5c31\u662f\u592a\u9633\u3002\u592a\u9633\u8ddd\u79bb\u6211\u4eec\u5e76\u4e0d\u662f\u65e0\u9650\u8fdc\uff0c\u4f46\u5b83\u5df2\u7ecf\u8fdc\u5230\u5728\u5149\u7167\u8ba1\u7b97\u4e2d\u53ef\u4ee5\u628a\u5b83\u89c6\u4e3a\u65e0\u9650\u8fdc\u4e86\u3002\u6240\u4ee5\u6765\u81ea\u592a\u9633\u7684\u6240\u6709\u5149\u7ebf\u5c06\u88ab\u6a21\u62df\u4e3a\u5e73\u884c\u5149\u7ebf\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e0b\u56fe\u770b\u5230\uff1a \u56e0\u4e3a\u6240\u6709\u7684\u5149\u7ebf\u90fd\u662f\u5e73\u884c\u7684\uff0c\u6240\u4ee5\u7269\u4f53\u4e0e\u5149\u6e90\u7684\u76f8\u5bf9\u4f4d\u7f6e\u662f\u4e0d\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u5bf9\u573a\u666f\u4e2d\u6bcf\u4e00\u4e2a\u7269\u4f53\u5149\u7684\u65b9\u5411\u90fd\u662f\u4e00\u81f4\u7684\u3002\u7531\u4e8e\u5149\u7684\u4f4d\u7f6e\u5411\u91cf\u4fdd\u6301\u4e00\u81f4\uff0c\u573a\u666f\u4e2d\u6bcf\u4e2a\u7269\u4f53\u7684\u5149\u7167\u8ba1\u7b97\u5c06\u4f1a\u662f\u7c7b\u4f3c\u7684\u3002 \u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u5149\u7ebf\u65b9\u5411\u5411\u91cf\u800c\u4e0d\u662f\u4f4d\u7f6e\u5411\u91cf\u6765\u6a21\u62df\u4e00\u4e2a\u5b9a\u5411\u5149\u3002\u7740\u8272\u5668\u7684\u8ba1\u7b97\u57fa\u672c\u4fdd\u6301\u4e0d\u53d8\uff0c\u4f46\u8fd9\u6b21\u6211\u4eec\u5c06\u76f4\u63a5\u4f7f\u7528\u5149\u7684 direction \u5411\u91cf\u800c\u4e0d\u662f\u901a\u8fc7 position \u6765\u8ba1\u7b97 lightDir \u5411\u91cf\u3002 struct Light { // vec3 position; // \u4f7f\u7528\u5b9a\u5411\u5149\u5c31\u4e0d\u518d\u9700\u8981\u4e86 vec3 direction; vec3 ambient; vec3 diffuse; vec3 specular; }; ... void main() { vec3 lightDir = normalize(-light.direction); ... } \u6ce8\u610f\u6211\u4eec\u9996\u5148\u5bf9 light.direction \u5411\u91cf\u53d6\u53cd\u3002\u6211\u4eec\u76ee\u524d\u4f7f\u7528\u7684\u5149\u7167\u8ba1\u7b97\u9700\u6c42\u4e00\u4e2a\u4ece\u7247\u6bb5 \u81f3 \u5149\u6e90\u7684\u5149\u7ebf\u65b9\u5411\uff0c\u4f46\u4eba\u4eec\u66f4\u4e60\u60ef\u5b9a\u4e49\u5b9a\u5411\u5149\u4e3a\u4e00\u4e2a \u4ece \u5149\u6e90\u51fa\u53d1\u7684\u5168\u5c40\u65b9\u5411\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bf9\u5168\u5c40\u5149\u7167\u65b9\u5411\u5411\u91cf\u53d6\u53cd\u6765\u6539\u53d8\u5b83\u7684\u65b9\u5411\uff0c\u5b83\u73b0\u5728\u662f\u4e00\u4e2a\u6307\u5411\u5149\u6e90\u7684\u65b9\u5411\u5411\u91cf\u4e86\u3002\u800c\u4e14\uff0c\u8bb0\u5f97\u5bf9\u5411\u91cf\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u5047\u8bbe\u8f93\u5165\u5411\u91cf\u4e3a\u4e00\u4e2a\u5355\u4f4d\u5411\u91cf\u662f\u5f88\u4e0d\u660e\u667a\u7684\u3002 \u6700\u7ec8\u7684 lightDir \u5411\u91cf\u5c06\u548c\u4ee5\u524d\u4e00\u6837\u7528\u5728\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u8ba1\u7b97\u4e2d\u3002 \u4e3a\u4e86\u6e05\u695a\u5730\u5c55\u793a\u5b9a\u5411\u5149\u5bf9\u591a\u4e2a\u7269\u4f53\u5177\u6709\u76f8\u540c\u7684\u5f71\u54cd\uff0c\u6211\u4eec\u5c06\u4f1a\u518d\u6b21\u4f7f\u7528 \u5750\u6807\u7cfb\u7edf \u7ae0\u8282\u6700\u540e\u7684\u90a3\u4e2a\u7bb1\u5b50\u6d3e\u5bf9\u7684\u573a\u666f\u3002\u5982\u679c\u4f60\u9519\u8fc7\u4e86\u6d3e\u5bf9\uff0c\u6211\u4eec\u5148\u5b9a\u4e49\u4e86\u5341\u4e2a\u4e0d\u540c\u7684 \u7bb1\u5b50\u4f4d\u7f6e \uff0c\u5e76\u5bf9\u6bcf\u4e2a\u7bb1\u5b50\u90fd\u751f\u6210\u4e86\u4e00\u4e2a\u4e0d\u540c\u7684\u6a21\u578b\u77e9\u9635\uff0c\u6bcf\u4e2a\u6a21\u578b\u77e9\u9635\u90fd\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u5c40\u90e8-\u4e16\u754c\u5750\u6807\u53d8\u6362\uff1a for(unsigned int i = 0; i < 10; i++) { glm::mat4 model; model = glm::translate(model, cubePositions[i]); float angle = 20.0f * i; model = glm::rotate(model, glm::radians(angle), glm::vec3(1.0f, 0.3f, 0.5f)); lightingShader.setMat4(\"model\", model); glDrawArrays(GL_TRIANGLES, 0, 36); } \u540c\u65f6\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5b9a\u4e49\u5149\u6e90\u7684\u65b9\u5411\uff08\u6ce8\u610f\u6211\u4eec\u5c06\u65b9\u5411\u5b9a\u4e49\u4e3a \u4ece \u5149\u6e90\u51fa\u53d1\u7684\u65b9\u5411\uff0c\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u770b\u5230\u5149\u7684\u65b9\u5411\u671d\u4e0b\uff09\u3002 lightingShader.setVec3(\"light.direction\", -0.2f, -1.0f, -0.3f); Important \u6211\u4eec\u4e00\u76f4\u5c06\u5149\u7684\u4f4d\u7f6e\u548c\u4f4d\u7f6e\u5411\u91cf\u5b9a\u4e49\u4e3a vec3 \uff0c\u4f46\u4e00\u4e9b\u4eba\u4f1a\u559c\u6b22\u5c06\u6240\u6709\u7684\u5411\u91cf\u90fd\u5b9a\u4e49\u4e3a vec4 \u3002\u5f53\u6211\u4eec\u5c06\u4f4d\u7f6e\u5411\u91cf\u5b9a\u4e49\u4e3a\u4e00\u4e2a vec4 \u65f6\uff0c\u5f88\u91cd\u8981\u7684\u4e00\u70b9\u662f\u8981\u5c06w\u5206\u91cf\u8bbe\u7f6e\u4e3a1.0\uff0c\u8fd9\u6837\u53d8\u6362\u548c\u6295\u5f71\u624d\u80fd\u6b63\u786e\u5e94\u7528\u3002\u7136\u800c\uff0c\u5f53\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u65b9\u5411\u5411\u91cf\u4e3a vec4 \u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e0d\u60f3\u8ba9\u4f4d\u79fb\u6709\u4efb\u4f55\u7684\u6548\u679c\uff08\u56e0\u4e3a\u5b83\u4ec5\u4ec5\u4ee3\u8868\u7684\u662f\u65b9\u5411\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u5c06w\u5206\u91cf\u8bbe\u7f6e\u4e3a0.0\u3002 \u65b9\u5411\u5411\u91cf\u5c31\u4f1a\u50cf\u8fd9\u6837\u6765\u8868\u793a\uff1a vec4(0.2f, 1.0f, 0.3f, 0.0f) \u3002\u8fd9\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u5feb\u901f\u68c0\u6d4b\u5149\u7167\u7c7b\u578b\u7684\u5de5\u5177\uff1a\u4f60\u53ef\u4ee5\u68c0\u6d4bw\u5206\u91cf\u662f\u5426\u7b49\u4e8e1.0\uff0c\u6765\u68c0\u6d4b\u5b83\u662f\u5426\u662f\u5149\u7684\u4f4d\u7f6e\u5411\u91cf\uff1bw\u5206\u91cf\u7b49\u4e8e0.0\uff0c\u5219\u5b83\u662f\u5149\u7684\u65b9\u5411\u5411\u91cf\uff0c\u8fd9\u6837\u5c31\u80fd\u6839\u636e\u8fd9\u4e2a\u6765\u8c03\u6574\u5149\u7167\u8ba1\u7b97\u4e86\uff1a if(lightVector.w == 0.0) // \u6ce8\u610f\u6d6e\u70b9\u6570\u636e\u7c7b\u578b\u7684\u8bef\u5dee // \u6267\u884c\u5b9a\u5411\u5149\u7167\u8ba1\u7b97 else if(lightVector.w == 1.0) // \u6839\u636e\u5149\u6e90\u7684\u4f4d\u7f6e\u505a\u5149\u7167\u8ba1\u7b97\uff08\u4e0e\u4e0a\u4e00\u8282\u4e00\u6837\uff09 \u4f60\u77e5\u9053\u5417\uff1a\u8fd9\u6b63\u662f\u65e7OpenGL\uff08\u56fa\u5b9a\u51fd\u6570\u5f0f\uff09\u51b3\u5b9a\u5149\u6e90\u662f\u5b9a\u5411\u5149\u8fd8\u662f\u4f4d\u7f6e\u5149\u6e90(Positional Light Source)\u7684\u65b9\u6cd5\uff0c\u5e76\u6839\u636e\u5b83\u6765\u8c03\u6574\u5149\u7167\u3002 \u5982\u679c\u4f60\u73b0\u5728\u7f16\u8bd1\u7a0b\u5e8f\uff0c\u5728\u573a\u666f\u4e2d\u81ea\u7531\u79fb\u52a8\uff0c\u4f60\u5c31\u53ef\u4ee5\u770b\u5230\u597d\u50cf\u6709\u4e00\u4e2a\u592a\u9633\u4e00\u6837\u7684\u5149\u6e90\u5bf9\u6240\u6709\u7684\u7269\u4f53\u6295\u5149\u3002\u4f60\u80fd\u6ce8\u610f\u5230\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u5206\u91cf\u7684\u53cd\u5e94\u90fd\u597d\u50cf\u5728\u5929\u7a7a\u4e2d\u6709\u4e00\u4e2a\u5149\u6e90\u7684\u611f\u89c9\u5417\uff1f\u5b83\u4f1a\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u7a0b\u5e8f\u7684\u6240\u6709\u4ee3\u7801\u3002","title":"\u5e73\u884c\u5149"},{"location":"02%20Lighting/05%20Light%20casters/#_3","text":"\u5b9a\u5411\u5149\u5bf9\u4e8e\u7167\u4eae\u6574\u4e2a\u573a\u666f\u7684\u5168\u5c40\u5149\u6e90\u662f\u975e\u5e38\u68d2\u7684\uff0c\u4f46\u9664\u4e86\u5b9a\u5411\u5149\u4e4b\u5916\u6211\u4eec\u4e5f\u9700\u8981\u4e00\u4e9b\u5206\u6563\u5728\u573a\u666f\u4e2d\u7684 \u70b9\u5149\u6e90 (Point Light)\u3002\u70b9\u5149\u6e90\u662f\u5904\u4e8e\u4e16\u754c\u4e2d\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5149\u6e90\uff0c\u5b83\u4f1a\u671d\u7740\u6240\u6709\u65b9\u5411\u53d1\u5149\uff0c\u4f46\u5149\u7ebf\u4f1a\u968f\u7740\u8ddd\u79bb\u9010\u6e10\u8870\u51cf\u3002\u60f3\u8c61\u4f5c\u4e3a\u6295\u5149\u7269\u7684\u706f\u6ce1\u548c\u706b\u628a\uff0c\u5b83\u4eec\u90fd\u662f\u70b9\u5149\u6e90\u3002 \u5728\u4e4b\u524d\u7684\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u4e00\u76f4\u90fd\u5728\u4f7f\u7528\u4e00\u4e2a\uff08\u7b80\u5316\u7684\uff09\u70b9\u5149\u6e90\u3002\u6211\u4eec\u5728\u7ed9\u5b9a\u4f4d\u7f6e\u6709\u4e00\u4e2a\u5149\u6e90\uff0c\u5b83\u4f1a\u4ece\u5b83\u7684\u5149\u6e90\u4f4d\u7f6e\u5f00\u59cb\u671d\u7740\u6240\u6709\u65b9\u5411\u6563\u5c04\u5149\u7ebf\u3002\u7136\u800c\uff0c\u6211\u4eec\u5b9a\u4e49\u7684\u5149\u6e90\u6a21\u62df\u7684\u662f\u6c38\u8fdc\u4e0d\u4f1a\u8870\u51cf\u7684\u5149\u7ebf\uff0c\u8fd9\u770b\u8d77\u6765\u50cf\u662f\u5149\u6e90\u4eae\u5ea6\u975e\u5e38\u7684\u5f3a\u3002\u5728\u5927\u90e8\u5206\u76843D\u6a21\u62df\u4e2d\uff0c\u6211\u4eec\u90fd\u5e0c\u671b\u6a21\u62df\u7684\u5149\u6e90\u4ec5\u7167\u4eae\u5149\u6e90\u9644\u8fd1\u7684\u533a\u57df\u800c\u4e0d\u662f\u6574\u4e2a\u573a\u666f\u3002 \u5982\u679c\u4f60\u5c0610\u4e2a\u7bb1\u5b50\u52a0\u5165\u5230\u4e0a\u4e00\u8282\u5149\u7167\u573a\u666f\u4e2d\uff0c\u4f60\u4f1a\u6ce8\u610f\u5230\u5728\u6700\u540e\u9762\u7684\u7bb1\u5b50\u548c\u5728\u706f\u9762\u524d\u7684\u7bb1\u5b50\u90fd\u4ee5\u76f8\u540c\u7684\u5f3a\u5ea6\u88ab\u7167\u4eae\uff0c\u5e76\u6ca1\u6709\u5b9a\u4e49\u4e00\u4e2a\u516c\u5f0f\u6765\u5c06\u5149\u968f\u8ddd\u79bb\u8870\u51cf\u3002\u6211\u4eec\u5e0c\u671b\u5728\u540e\u6392\u7684\u7bb1\u5b50\u4e0e\u524d\u6392\u7684\u7bb1\u5b50\u76f8\u6bd4\u4ec5\u4ec5\u662f\u88ab\u8f7b\u5fae\u5730\u7167\u4eae\u3002","title":"\u70b9\u5149\u6e90"},{"location":"02%20Lighting/05%20Light%20casters/#_4","text":"\u968f\u7740\u5149\u7ebf\u4f20\u64ad\u8ddd\u79bb\u7684\u589e\u957f\u9010\u6e10\u524a\u51cf\u5149\u7684\u5f3a\u5ea6\u901a\u5e38\u53eb\u505a \u8870\u51cf (Attenuation)\u3002\u968f\u8ddd\u79bb\u51cf\u5c11\u5149\u5f3a\u5ea6\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u4f7f\u7528\u4e00\u4e2a\u7ebf\u6027\u65b9\u7a0b\u3002\u8fd9\u6837\u7684\u65b9\u7a0b\u80fd\u591f\u968f\u7740\u8ddd\u79bb\u7684\u589e\u957f\u7ebf\u6027\u5730\u51cf\u5c11\u5149\u7684\u5f3a\u5ea6\uff0c\u4ece\u800c\u8ba9\u8fdc\u5904\u7684\u7269\u4f53\u66f4\u6697\u3002\u7136\u800c\uff0c\u8fd9\u6837\u7684\u7ebf\u6027\u65b9\u7a0b\u901a\u5e38\u4f1a\u770b\u8d77\u6765\u6bd4\u8f83\u5047\u3002\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u706f\u5728\u8fd1\u5904\u901a\u5e38\u4f1a\u975e\u5e38\u4eae\uff0c\u4f46\u968f\u7740\u8ddd\u79bb\u7684\u589e\u52a0\u5149\u6e90\u7684\u4eae\u5ea6\u4e00\u5f00\u59cb\u4f1a\u4e0b\u964d\u975e\u5e38\u5feb\uff0c\u4f46\u5728\u8fdc\u5904\u65f6\u5269\u4f59\u7684\u5149\u5f3a\u5ea6\u5c31\u4f1a\u4e0b\u964d\u7684\u975e\u5e38\u7f13\u6162\u4e86\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u4e0d\u540c\u7684\u516c\u5f0f\u6765\u51cf\u5c11\u5149\u7684\u5f3a\u5ea6\u3002 \u5e78\u8fd0\u7684\u662f\u4e00\u4e9b\u806a\u660e\u7684\u4eba\u5df2\u7ecf\u5e2e\u6211\u4eec\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u4e0b\u9762\u8fd9\u4e2a\u516c\u5f0f\u6839\u636e\u7247\u6bb5\u8ddd\u5149\u6e90\u7684\u8ddd\u79bb\u8ba1\u7b97\u4e86\u8870\u51cf\u503c\uff0c\u4e4b\u540e\u6211\u4eec\u4f1a\u5c06\u5b83\u4e58\u4ee5\u5149\u7684\u5f3a\u5ea6\u5411\u91cf\uff1a \\begin{equation} F_{att} = \\frac{1.0}{K_c + K_l * d + K_q * d^2} \\end{equation} \u5728\u8fd9\u91cc d \u4ee3\u8868\u4e86\u7247\u6bb5\u8ddd\u5149\u6e90\u7684\u8ddd\u79bb\u3002\u63a5\u4e0b\u6765\u4e3a\u4e86\u8ba1\u7b97\u8870\u51cf\u503c\uff0c\u6211\u4eec\u5b9a\u4e493\u4e2a\uff08\u53ef\u914d\u7f6e\u7684\uff09\u9879\uff1a \u5e38\u6570 \u9879 K_c \u3001 \u4e00\u6b21 \u9879 K_l \u548c \u4e8c\u6b21 \u9879 K_q \u3002 \u5e38\u6570\u9879\u901a\u5e38\u4fdd\u6301\u4e3a1.0\uff0c\u5b83\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u4fdd\u8bc1\u5206\u6bcd\u6c38\u8fdc\u4e0d\u4f1a\u6bd41\u5c0f\uff0c\u5426\u5219\u7684\u8bdd\u5728\u67d0\u4e9b\u8ddd\u79bb\u4e0a\u5b83\u53cd\u800c\u4f1a\u589e\u52a0\u5f3a\u5ea6\uff0c\u8fd9\u80af\u5b9a\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u6548\u679c\u3002 \u4e00\u6b21\u9879\u4f1a\u4e0e\u8ddd\u79bb\u503c\u76f8\u4e58\uff0c\u4ee5\u7ebf\u6027\u7684\u65b9\u5f0f\u51cf\u5c11\u5f3a\u5ea6\u3002 \u4e8c\u6b21\u9879\u4f1a\u4e0e\u8ddd\u79bb\u7684\u5e73\u65b9\u76f8\u4e58\uff0c\u8ba9\u5149\u6e90\u4ee5\u4e8c\u6b21\u9012\u51cf\u7684\u65b9\u5f0f\u51cf\u5c11\u5f3a\u5ea6\u3002\u4e8c\u6b21\u9879\u5728\u8ddd\u79bb\u6bd4\u8f83\u5c0f\u7684\u65f6\u5019\u5f71\u54cd\u4f1a\u6bd4\u4e00\u6b21\u9879\u5c0f\u5f88\u591a\uff0c\u4f46\u5f53\u8ddd\u79bb\u503c\u6bd4\u8f83\u5927\u7684\u65f6\u5019\u5b83\u5c31\u4f1a\u6bd4\u4e00\u6b21\u9879\u66f4\u5927\u4e86\u3002 \u7531\u4e8e\u4e8c\u6b21\u9879\u7684\u5b58\u5728\uff0c\u5149\u7ebf\u4f1a\u5728\u5927\u90e8\u5206\u65f6\u5019\u4ee5\u7ebf\u6027\u7684\u65b9\u5f0f\u8870\u9000\uff0c\u76f4\u5230\u8ddd\u79bb\u53d8\u5f97\u8db3\u591f\u5927\uff0c\u8ba9\u4e8c\u6b21\u9879\u8d85\u8fc7\u4e00\u6b21\u9879\uff0c\u5149\u7684\u5f3a\u5ea6\u4f1a\u4ee5\u66f4\u5feb\u7684\u901f\u5ea6\u4e0b\u964d\u3002\u8fd9\u6837\u7684\u7ed3\u679c\u5c31\u662f\uff0c\u5149\u5728\u8fd1\u8ddd\u79bb\u65f6\u4eae\u5ea6\u5f88\u9ad8\uff0c\u4f46\u968f\u7740\u8ddd\u79bb\u53d8\u8fdc\u4eae\u5ea6\u8fc5\u901f\u964d\u4f4e\uff0c\u6700\u540e\u4f1a\u4ee5\u66f4\u6162\u7684\u901f\u5ea6\u51cf\u5c11\u4eae\u5ea6\u3002\u4e0b\u9762\u8fd9\u5f20\u56fe\u663e\u793a\u4e86\u5728100\u7684\u8ddd\u79bb\u5185\u8870\u51cf\u7684\u6548\u679c\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\u5149\u5728\u8fd1\u8ddd\u79bb\u7684\u65f6\u5019\u6709\u7740\u6700\u9ad8\u7684\u5f3a\u5ea6\uff0c\u4f46\u968f\u7740\u8ddd\u79bb\u589e\u957f\uff0c\u5b83\u7684\u5f3a\u5ea6\u660e\u663e\u51cf\u5f31\uff0c\u5e76\u7f13\u6162\u5730\u5728\u8ddd\u79bb\u5927\u7ea6100\u7684\u65f6\u5019\u5f3a\u5ea6\u63a5\u8fd10\u3002\u8fd9\u6b63\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002","title":"\u8870\u51cf"},{"location":"02%20Lighting/05%20Light%20casters/#_5","text":"\u4f46\u662f\uff0c\u8be5\u5bf9\u8fd9\u4e09\u4e2a\u9879\u8bbe\u7f6e\u4ec0\u4e48\u503c\u5462\uff1f\u6b63\u786e\u5730\u8bbe\u5b9a\u5b83\u4eec\u7684\u503c\u53d6\u51b3\u4e8e\u5f88\u591a\u56e0\u7d20\uff1a\u73af\u5883\u3001\u5e0c\u671b\u5149\u8986\u76d6\u7684\u8ddd\u79bb\u3001\u5149\u7684\u7c7b\u578b\u7b49\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8fd9\u90fd\u662f\u7ecf\u9a8c\u7684\u95ee\u9898\uff0c\u4ee5\u53ca\u9002\u91cf\u7684\u8c03\u6574\u3002\u4e0b\u9762\u8fd9\u4e2a\u8868\u683c\u663e\u793a\u4e86\u6a21\u62df\u4e00\u4e2a\uff08\u5927\u6982\uff09\u771f\u5b9e\u7684\uff0c\u8986\u76d6\u7279\u5b9a\u534a\u5f84\uff08\u8ddd\u79bb\uff09\u7684\u5149\u6e90\u65f6\uff0c\u8fd9\u4e9b\u9879\u53ef\u80fd\u53d6\u7684\u4e00\u4e9b\u503c\u3002\u7b2c\u4e00\u5217\u6307\u5b9a\u7684\u662f\u5728\u7ed9\u5b9a\u7684\u4e09\u9879\u65f6\u5149\u6240\u80fd\u8986\u76d6\u7684\u8ddd\u79bb\u3002\u8fd9\u4e9b\u503c\u662f\u5927\u591a\u6570\u5149\u6e90\u5f88\u597d\u7684\u8d77\u59cb\u70b9\uff0c\u5b83\u4eec\u7531 Ogre3D\u7684Wiki \u6240\u63d0\u4f9b\uff1a \u8ddd\u79bb \u5e38\u6570\u9879 \u4e00\u6b21\u9879 \u4e8c\u6b21\u9879 7 1.0 0.7 1.8 13 1.0 0.35 0.44 20 1.0 0.22 0.20 32 1.0 0.14 0.07 50 1.0 0.09 0.032 65 1.0 0.07 0.017 100 1.0 0.045 0.0075 160 1.0 0.027 0.0028 200 1.0 0.022 0.0019 325 1.0 0.014 0.0007 600 1.0 0.007 0.0002 3250 1.0 0.0014 0.000007 \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u5e38\u6570\u9879 K_c \u5728\u6240\u6709\u7684\u60c5\u51b5\u4e0b\u90fd\u662f1.0\u3002\u4e00\u6b21\u9879 K_l \u4e3a\u4e86\u8986\u76d6\u66f4\u8fdc\u7684\u8ddd\u79bb\u901a\u5e38\u90fd\u5f88\u5c0f\uff0c\u4e8c\u6b21\u9879 K_q \u751a\u81f3\u66f4\u5c0f\u3002\u5c1d\u8bd5\u5bf9\u8fd9\u4e9b\u503c\u8fdb\u884c\u5b9e\u9a8c\uff0c\u770b\u770b\u5b83\u4eec\u5728\u4f60\u7684\u5b9e\u73b0\u4e2d\u6709\u4ec0\u4e48\u6548\u679c\u3002\u5728\u6211\u4eec\u7684\u73af\u5883\u4e2d\uff0c32\u5230100\u7684\u8ddd\u79bb\u5bf9\u5927\u591a\u6570\u7684\u5149\u6e90\u90fd\u8db3\u591f\u4e86\u3002","title":"\u9009\u62e9\u6b63\u786e\u7684\u503c"},{"location":"02%20Lighting/05%20Light%20casters/#_6","text":"\u4e3a\u4e86\u5b9e\u73b0\u8870\u51cf\uff0c\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u6211\u4eec\u8fd8\u9700\u8981\u4e09\u4e2a\u989d\u5916\u7684\u503c\uff1a\u4e5f\u5c31\u662f\u516c\u5f0f\u4e2d\u7684\u5e38\u6570\u9879\u3001\u4e00\u6b21\u9879\u548c\u4e8c\u6b21\u9879\u3002\u5b83\u4eec\u6700\u597d\u50a8\u5b58\u5728\u4e4b\u524d\u5b9a\u4e49\u7684 Light \u7ed3\u6784\u4f53\u4e2d\u3002\u6ce8\u610f\u6211\u4eec\u4f7f\u7528\u4e0a\u4e00\u8282\u4e2d\u8ba1\u7b97 lightDir \u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u4e0a\u9762 \u5b9a\u5411\u5149 \u90e8\u5206\u7684\u3002 struct Light { vec3 position; vec3 ambient; vec3 diffuse; vec3 specular; float constant; float linear; float quadratic; }; \u7136\u540e\u6211\u4eec\u5c06\u5728OpenGL\u4e2d\u8bbe\u7f6e\u8fd9\u4e9b\u9879\uff1a\u6211\u4eec\u5e0c\u671b\u5149\u6e90\u80fd\u591f\u8986\u76d650\u7684\u8ddd\u79bb\uff0c\u6240\u4ee5\u6211\u4eec\u4f1a\u4f7f\u7528\u8868\u683c\u4e2d\u5bf9\u5e94\u7684\u5e38\u6570\u9879\u3001\u4e00\u6b21\u9879\u548c\u4e8c\u6b21\u9879\uff1a lightingShader.setFloat(\"light.constant\", 1.0f); lightingShader.setFloat(\"light.linear\", 0.09f); lightingShader.setFloat(\"light.quadratic\", 0.032f); \u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u5b9e\u73b0\u8870\u51cf\u8fd8\u662f\u6bd4\u8f83\u76f4\u63a5\u7684\uff1a\u6211\u4eec\u6839\u636e\u516c\u5f0f\u8ba1\u7b97\u8870\u51cf\u503c\uff0c\u4e4b\u540e\u518d\u5206\u522b\u4e58\u4ee5\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u5206\u91cf\u3002 \u6211\u4eec\u4ecd\u9700\u8981\u516c\u5f0f\u4e2d\u8ddd\u5149\u6e90\u7684\u8ddd\u79bb\uff0c\u8fd8\u8bb0\u5f97\u6211\u4eec\u662f\u600e\u4e48\u8ba1\u7b97\u4e00\u4e2a\u5411\u91cf\u7684\u957f\u5ea6\u7684\u5417\uff1f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u83b7\u53d6\u7247\u6bb5\u548c\u5149\u6e90\u4e4b\u95f4\u7684\u5411\u91cf\u5dee\uff0c\u5e76\u83b7\u53d6\u7ed3\u679c\u5411\u91cf\u7684\u957f\u5ea6\u4f5c\u4e3a\u8ddd\u79bb\u9879\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528GLSL\u5185\u5efa\u7684 length \u51fd\u6570\u6765\u5b8c\u6210\u8fd9\u4e00\u70b9\uff1a float distance = length(light.position - FragPos); float attenuation = 1.0 / (light.constant + light.linear * distance + light.quadratic * (distance * distance)); \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u5305\u542b\u8fd9\u4e2a\u8870\u51cf\u503c\u5230\u5149\u7167\u8ba1\u7b97\u4e2d\uff0c\u5c06\u5b83\u5206\u522b\u4e58\u4ee5\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u989c\u8272\u3002 Important \u6211\u4eec\u53ef\u4ee5\u5c06\u73af\u5883\u5149\u5206\u91cf\u4fdd\u6301\u4e0d\u53d8\uff0c\u8ba9\u73af\u5883\u5149\u7167\u4e0d\u4f1a\u968f\u7740\u8ddd\u79bb\u51cf\u5c11\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u4f7f\u7528\u591a\u4e8e\u4e00\u4e2a\u7684\u5149\u6e90\uff0c\u6240\u6709\u7684\u73af\u5883\u5149\u5206\u91cf\u5c06\u4f1a\u5f00\u59cb\u53e0\u52a0\uff0c\u6240\u4ee5\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u4e5f\u5e0c\u671b\u8870\u51cf\u73af\u5883\u5149\u7167\u3002\u7b80\u5355\u5b9e\u9a8c\u4e00\u4e0b\uff0c\u770b\u770b\u4ec0\u4e48\u624d\u80fd\u5728\u4f60\u7684\u73af\u5883\u4e2d\u6548\u679c\u6700\u597d\u3002 ambient *= attenuation; diffuse *= attenuation; specular *= attenuation; \u5982\u679c\u4f60\u8fd0\u884c\u7a0b\u5e8f\u7684\u8bdd\uff0c\u4f60\u4f1a\u83b7\u5f97\u8fd9\u6837\u7684\u7ed3\u679c\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u53ea\u6709\u524d\u6392\u7684\u7bb1\u5b50\u88ab\u7167\u4eae\u7684\uff0c\u8ddd\u79bb\u6700\u8fd1\u7684\u7bb1\u5b50\u662f\u6700\u4eae\u7684\u3002\u540e\u6392\u7684\u7bb1\u5b50\u4e00\u70b9\u90fd\u6ca1\u6709\u7167\u4eae\uff0c\u56e0\u4e3a\u5b83\u4eec\u79bb\u5149\u6e90\u5b9e\u5728\u662f\u592a\u8fdc\u4e86\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u7a0b\u5e8f\u7684\u4ee3\u7801\u3002 \u70b9\u5149\u6e90\u5c31\u662f\u4e00\u4e2a\u80fd\u591f\u914d\u7f6e\u4f4d\u7f6e\u548c\u8870\u51cf\u7684\u5149\u6e90\u3002\u5b83\u662f\u6211\u4eec\u5149\u7167\u5de5\u5177\u7bb1\u4e2d\u7684\u53c8\u4e00\u4e2a\u5149\u7167\u7c7b\u578b\u3002","title":"\u5b9e\u73b0\u8870\u51cf"},{"location":"02%20Lighting/05%20Light%20casters/#_7","text":"\u6211\u4eec\u8981\u8ba8\u8bba\u7684\u6700\u540e\u4e00\u79cd\u7c7b\u578b\u7684\u5149\u662f \u805a\u5149 (Spotlight)\u3002\u805a\u5149\u662f\u4f4d\u4e8e\u73af\u5883\u4e2d\u67d0\u4e2a\u4f4d\u7f6e\u7684\u5149\u6e90\uff0c\u5b83\u53ea\u671d\u4e00\u4e2a\u7279\u5b9a\u65b9\u5411\u800c\u4e0d\u662f\u6240\u6709\u65b9\u5411\u7167\u5c04\u5149\u7ebf\u3002\u8fd9\u6837\u7684\u7ed3\u679c\u5c31\u662f\u53ea\u6709\u5728\u805a\u5149\u65b9\u5411\u7684\u7279\u5b9a\u534a\u5f84\u5185\u7684\u7269\u4f53\u624d\u4f1a\u88ab\u7167\u4eae\uff0c\u5176\u5b83\u7684\u7269\u4f53\u90fd\u4f1a\u4fdd\u6301\u9ed1\u6697\u3002\u805a\u5149\u5f88\u597d\u7684\u4f8b\u5b50\u5c31\u662f\u8def\u706f\u6216\u624b\u7535\u7b52\u3002 OpenGL\u4e2d\u805a\u5149\u662f\u7528\u4e00\u4e2a\u4e16\u754c\u7a7a\u95f4\u4f4d\u7f6e\u3001\u4e00\u4e2a\u65b9\u5411\u548c\u4e00\u4e2a \u5207\u5149 \u89d2(Cutoff Angle)\u6765\u8868\u793a\u7684\uff0c\u5207\u5149\u89d2\u6307\u5b9a\u4e86\u805a\u5149\u7684\u534a\u5f84\uff08\u8bd1\u6ce8\uff1a\u662f\u5706\u9525\u7684\u534a\u5f84\u4e0d\u662f\u8ddd\u5149\u6e90\u8ddd\u79bb\u90a3\u4e2a\u534a\u5f84\uff09\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u7247\u6bb5\uff0c\u6211\u4eec\u4f1a\u8ba1\u7b97\u7247\u6bb5\u662f\u5426\u4f4d\u4e8e\u805a\u5149\u7684\u5207\u5149\u65b9\u5411\u4e4b\u95f4\uff08\u4e5f\u5c31\u662f\u5728\u9525\u5f62\u5185\uff09\uff0c\u5982\u679c\u662f\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u4f1a\u76f8\u5e94\u5730\u7167\u4eae\u7247\u6bb5\u3002\u4e0b\u9762\u8fd9\u5f20\u56fe\u4f1a\u8ba9\u4f60\u660e\u767d\u805a\u5149\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1a LightDir \uff1a\u4ece\u7247\u6bb5\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u3002 SpotDir \uff1a\u805a\u5149\u6240\u6307\u5411\u7684\u65b9\u5411\u3002 Phi \\phi \uff1a\u6307\u5b9a\u4e86\u805a\u5149\u534a\u5f84\u7684\u5207\u5149\u89d2\u3002\u843d\u5728\u8fd9\u4e2a\u89d2\u5ea6\u4e4b\u5916\u7684\u7269\u4f53\u90fd\u4e0d\u4f1a\u88ab\u8fd9\u4e2a\u805a\u5149\u6240\u7167\u4eae\u3002 Theta \\theta \uff1a LightDir \u5411\u91cf\u548c SpotDir \u5411\u91cf\u4e4b\u95f4\u7684\u5939\u89d2\u3002\u5728\u805a\u5149\u5185\u90e8\u7684\u8bdd \\theta \u503c\u5e94\u8be5\u6bd4 \\phi \u503c\u5c0f\u3002 \u6240\u4ee5\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u8ba1\u7b97 LightDir \u5411\u91cf\u548c SpotDir \u5411\u91cf\u4e4b\u95f4\u7684\u70b9\u79ef\uff08\u8fd8\u8bb0\u5f97\u5b83\u4f1a\u8fd4\u56de\u4e24\u4e2a\u5355\u4f4d\u5411\u91cf\u5939\u89d2\u7684\u4f59\u5f26\u503c\u5417\uff1f\uff09\uff0c\u5e76\u5c06\u5b83\u4e0e\u5207\u5149\u89d2 \\phi \u503c\u5bf9\u6bd4\u3002\u4f60\u73b0\u5728\u5e94\u8be5\u4e86\u89e3\u805a\u5149\u7a76\u7adf\u662f\u4ec0\u4e48\u4e86\uff0c\u4e0b\u9762\u6211\u4eec\u5c06\u4ee5\u624b\u7535\u7b52\u7684\u5f62\u5f0f\u521b\u5efa\u4e00\u4e2a\u805a\u5149\u3002","title":"\u805a\u5149"},{"location":"02%20Lighting/05%20Light%20casters/#_8","text":"\u624b\u7535\u7b52(Flashlight)\u662f\u4e00\u4e2a\u4f4d\u4e8e\u89c2\u5bdf\u8005\u4f4d\u7f6e\u7684\u805a\u5149\uff0c\u901a\u5e38\u5b83\u90fd\u4f1a\u7784\u51c6\u73a9\u5bb6\u89c6\u89d2\u7684\u6b63\u524d\u65b9\u3002\u57fa\u672c\u4e0a\u8bf4\uff0c\u624b\u7535\u7b52\u5c31\u662f\u666e\u901a\u7684\u805a\u5149\uff0c\u4f46\u5b83\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\u4f1a\u968f\u7740\u73a9\u5bb6\u7684\u4f4d\u7f6e\u548c\u671d\u5411\u4e0d\u65ad\u66f4\u65b0\u3002 \u6240\u4ee5\uff0c\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u6211\u4eec\u9700\u8981\u7684\u503c\u6709\u805a\u5149\u7684\u4f4d\u7f6e\u5411\u91cf\uff08\u6765\u8ba1\u7b97\u5149\u7684\u65b9\u5411\u5411\u91cf\uff09\u3001\u805a\u5149\u7684\u65b9\u5411\u5411\u91cf\u548c\u4e00\u4e2a\u5207\u5149\u89d2\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u4eec\u50a8\u5b58\u5728 Light \u7ed3\u6784\u4f53\u4e2d\uff1a struct Light { vec3 position; vec3 direction; float cutOff; ... }; \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u5408\u9002\u7684\u503c\u4f20\u5230\u7740\u8272\u5668\u4e2d\uff1a lightingShader.setVec3(\"light.position\", camera.Position); lightingShader.setVec3(\"light.direction\", camera.Front); lightingShader.setFloat(\"light.cutOff\", glm::cos(glm::radians(12.5f))); \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u7ed9\u5207\u5149\u89d2\u8bbe\u7f6e\u4e00\u4e2a\u89d2\u5ea6\u503c\uff0c\u53cd\u800c\u662f\u7528\u89d2\u5ea6\u503c\u8ba1\u7b97\u4e86\u4e00\u4e2a\u4f59\u5f26\u503c\uff0c\u5c06\u4f59\u5f26\u7ed3\u679c\u4f20\u9012\u5230\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u3002\u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u4f1a\u8ba1\u7b97 LightDir \u548c SpotDir \u5411\u91cf\u7684\u70b9\u79ef\uff0c\u8fd9\u4e2a\u70b9\u79ef\u8fd4\u56de\u7684\u5c06\u662f\u4e00\u4e2a\u4f59\u5f26\u503c\u800c\u4e0d\u662f\u89d2\u5ea6\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u89d2\u5ea6\u503c\u548c\u4f59\u5f26\u503c\u8fdb\u884c\u6bd4\u8f83\u3002\u4e3a\u4e86\u83b7\u53d6\u89d2\u5ea6\u503c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u70b9\u79ef\u7ed3\u679c\u7684\u53cd\u4f59\u5f26\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f00\u9500\u5f88\u5927\u7684\u8ba1\u7b97\u3002\u6240\u4ee5\u4e3a\u4e86\u8282\u7ea6\u4e00\u70b9\u6027\u80fd\u5f00\u9500\uff0c\u6211\u4eec\u5c06\u4f1a\u8ba1\u7b97\u5207\u5149\u89d2\u5bf9\u5e94\u7684\u4f59\u5f26\u503c\uff0c\u5e76\u5c06\u5b83\u7684\u7ed3\u679c\u4f20\u5165\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u3002\u7531\u4e8e\u8fd9\u4e24\u4e2a\u89d2\u5ea6\u73b0\u5728\u90fd\u7531\u4f59\u5f26\u89d2\u6765\u8868\u793a\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5bf9\u5b83\u4eec\u8fdb\u884c\u6bd4\u8f83\u800c\u4e0d\u7528\u8fdb\u884c\u4efb\u4f55\u5f00\u9500\u9ad8\u6602\u7684\u8ba1\u7b97\u3002 \u63a5\u4e0b\u6765\u5c31\u662f\u8ba1\u7b97 \\theta \u503c\uff0c\u5e76\u5c06\u5b83\u548c\u5207\u5149\u89d2 \\phi \u5bf9\u6bd4\uff0c\u6765\u51b3\u5b9a\u662f\u5426\u5728\u805a\u5149\u7684\u5185\u90e8\uff1a float theta = dot(lightDir, normalize(-light.direction)); if(theta > light.cutOff) { // \u6267\u884c\u5149\u7167\u8ba1\u7b97 } else // \u5426\u5219\uff0c\u4f7f\u7528\u73af\u5883\u5149\uff0c\u8ba9\u573a\u666f\u5728\u805a\u5149\u4e4b\u5916\u65f6\u4e0d\u81f3\u4e8e\u5b8c\u5168\u9ed1\u6697 color = vec4(light.ambient * vec3(texture(material.diffuse, TexCoords)), 1.0); \u6211\u4eec\u9996\u5148\u8ba1\u7b97\u4e86 lightDir \u548c\u53d6\u53cd\u7684 direction \u5411\u91cf\uff08\u53d6\u53cd\u7684\u662f\u56e0\u4e3a\u6211\u4eec\u60f3\u8ba9\u5411\u91cf\u6307\u5411\u5149\u6e90\u800c\u4e0d\u662f\u4ece\u5149\u6e90\u51fa\u53d1\uff09\u4e4b\u95f4\u7684\u70b9\u79ef\u3002\u8bb0\u4f4f\u8981\u5bf9\u6240\u6709\u7684\u76f8\u5173\u5411\u91cf\u6807\u51c6\u5316\u3002 Important \u4f60\u53ef\u80fd\u5947\u602a\u4e3a\u4ec0\u4e48\u5728if\u6761\u4ef6\u4e2d\u4f7f\u7528\u7684\u662f > \u7b26\u53f7\u800c\u4e0d\u662f < \u7b26\u53f7\u3002 theta \u4e0d\u5e94\u8be5\u6bd4\u5149\u7684\u5207\u5149\u89d2\u66f4\u5c0f\u624d\u662f\u5728\u805a\u5149\u5185\u90e8\u5417\uff1f\u8fd9\u5e76\u6ca1\u6709\u9519\uff0c\u4f46\u4e0d\u8981\u5fd8\u8bb0\u89d2\u5ea6\u503c\u73b0\u5728\u90fd\u7531\u4f59\u5f26\u503c\u6765\u8868\u793a\u7684\u3002\u4e00\u4e2a0\u5ea6\u7684\u89d2\u5ea6\u8868\u793a\u7684\u662f1.0\u7684\u4f59\u5f26\u503c\uff0c\u800c\u4e00\u4e2a90\u5ea6\u7684\u89d2\u5ea6\u8868\u793a\u7684\u662f0.0\u7684\u4f59\u5f26\u503c\uff0c\u4f60\u53ef\u4ee5\u5728\u4e0b\u56fe\u4e2d\u770b\u5230\uff1a \u4f60\u73b0\u5728\u53ef\u4ee5\u770b\u5230\uff0c\u4f59\u5f26\u503c\u8d8a\u63a5\u8fd11.0\uff0c\u5b83\u7684\u89d2\u5ea6\u5c31\u8d8a\u5c0f\u3002\u8fd9\u4e5f\u5c31\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48 theta \u8981\u6bd4\u5207\u5149\u503c\u66f4\u5927\u4e86\u3002\u5207\u5149\u503c\u76ee\u524d\u8bbe\u7f6e\u4e3a12.5\u7684\u4f59\u5f26\uff0c\u7ea6\u7b49\u4e8e0.9978\uff0c\u6240\u4ee5\u57280.9979\u52301.0\u5185\u7684 theta \u503c\u624d\u80fd\u4fdd\u8bc1\u7247\u6bb5\u5728\u805a\u5149\u5185\uff0c\u4ece\u800c\u88ab\u7167\u4eae\u3002 \u8fd0\u884c\u7a0b\u5e8f\uff0c\u4f60\u5c06\u4f1a\u770b\u5230\u4e00\u4e2a\u805a\u5149\uff0c\u5b83\u4ec5\u4f1a\u7167\u4eae\u805a\u5149\u5706\u9525\u5185\u7684\u7247\u6bb5\u3002\u770b\u8d77\u6765\u50cf\u662f\u8fd9\u6837\u7684\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u83b7\u5f97\u5168\u90e8\u6e90\u7801\u3002 \u4f46\u8fd9\u4ecd\u770b\u8d77\u6765\u6709\u4e9b\u5047\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u805a\u5149\u6709\u4e00\u5708\u786c\u8fb9\u3002\u5f53\u4e00\u4e2a\u7247\u6bb5\u9047\u5230\u805a\u5149\u5706\u9525\u7684\u8fb9\u7f18\u65f6\uff0c\u5b83\u4f1a\u5b8c\u5168\u53d8\u6697\uff0c\u6ca1\u6709\u4e00\u70b9\u5e73\u6ed1\u7684\u8fc7\u6e21\u3002\u4e00\u4e2a\u771f\u5b9e\u7684\u805a\u5149\u5c06\u4f1a\u5728\u8fb9\u7f18\u5904\u9010\u6e10\u51cf\u5c11\u4eae\u5ea6\u3002","title":"\u624b\u7535\u7b52"},{"location":"02%20Lighting/05%20Light%20casters/#_9","text":"\u4e3a\u4e86\u521b\u5efa\u4e00\u79cd\u770b\u8d77\u6765\u8fb9\u7f18\u5e73\u6ed1\u7684\u805a\u5149\uff0c\u6211\u4eec\u9700\u8981\u6a21\u62df\u805a\u5149\u6709\u4e00\u4e2a \u5185 \u5706\u9525(Inner Cone)\u548c\u4e00\u4e2a \u5916 \u5706\u9525(Outer Cone)\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u5185\u5706\u9525\u8bbe\u7f6e\u4e3a\u4e0a\u4e00\u90e8\u5206\u4e2d\u7684\u90a3\u4e2a\u5706\u9525\uff0c\u4f46\u6211\u4eec\u4e5f\u9700\u8981\u4e00\u4e2a\u5916\u5706\u9525\uff0c\u6765\u8ba9\u5149\u4ece\u5185\u5706\u9525\u9010\u6e10\u51cf\u6697\uff0c\u76f4\u5230\u5916\u5706\u9525\u7684\u8fb9\u754c\u3002 \u4e3a\u4e86\u521b\u5efa\u4e00\u4e2a\u5916\u5706\u9525\uff0c\u6211\u4eec\u53ea\u9700\u8981\u518d\u5b9a\u4e49\u4e00\u4e2a\u4f59\u5f26\u503c\u6765\u4ee3\u8868\u805a\u5149\u65b9\u5411\u5411\u91cf\u548c\u5916\u5706\u9525\u5411\u91cf\uff08\u7b49\u4e8e\u5b83\u7684\u534a\u5f84\uff09\u7684\u5939\u89d2\u3002\u7136\u540e\uff0c\u5982\u679c\u4e00\u4e2a\u7247\u6bb5\u5904\u4e8e\u5185\u5916\u5706\u9525\u4e4b\u95f4\uff0c\u5c06\u4f1a\u7ed9\u5b83\u8ba1\u7b97\u51fa\u4e00\u4e2a0.0\u52301.0\u4e4b\u95f4\u7684\u5f3a\u5ea6\u503c\u3002\u5982\u679c\u7247\u6bb5\u5728\u5185\u5706\u9525\u4e4b\u5185\uff0c\u5b83\u7684\u5f3a\u5ea6\u5c31\u662f1.0\uff0c\u5982\u679c\u5728\u5916\u5706\u9525\u4e4b\u5916\u5f3a\u5ea6\u503c\u5c31\u662f0.0\u3002 \u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u9762\u8fd9\u4e2a\u516c\u5f0f\u6765\u8ba1\u7b97\u8fd9\u4e2a\u503c\uff1a \\begin{equation} I = \\frac{\\theta - \\gamma}{\\epsilon} \\end{equation} \u8fd9\u91cc \\epsilon (Epsilon)\u662f\u5185\uff08 \\phi \uff09\u548c\u5916\u5706\u9525\uff08 \\gamma \uff09\u4e4b\u95f4\u7684\u4f59\u5f26\u503c\u5dee\uff08 \\epsilon = \\phi - \\gamma \uff09\u3002\u6700\u7ec8\u7684 I \u503c\u5c31\u662f\u5728\u5f53\u524d\u7247\u6bb5\u805a\u5149\u7684\u5f3a\u5ea6\u3002 \u5f88\u96be\u53bb\u8868\u73b0\u8fd9\u4e2a\u516c\u5f0f\u662f\u600e\u4e48\u5de5\u4f5c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u4e00\u4e9b\u5b9e\u4f8b\u503c\u6765\u770b\u770b\uff1a \\theta \\theta \uff08\u89d2\u5ea6\uff09 \\phi \uff08\u5185\u5149\u5207\uff09 \\phi \uff08\u89d2\u5ea6\uff09 \\gamma \uff08\u5916\u5149\u5207\uff09 \\gamma \uff08\u89d2\u5ea6\uff09 \\epsilon I 0.87 30 0.91 25 0.82 35 0.91 - 0.82 = 0.09 0.87 - 0.82 / 0.09 = 0.56 0.9 26 0.91 25 0.82 35 0.91 - 0.82 = 0.09 0.9 - 0.82 / 0.09 = 0.89 0.97 14 0.91 25 0.82 35 0.91 - 0.82 = 0.09 0.97 - 0.82 / 0.09 = 1.67 0.83 34 0.91 25 0.82 35 0.91 - 0.82 = 0.09 0.83 - 0.82 / 0.09 = 0.11 0.64 50 0.91 25 0.82 35 0.91 - 0.82 = 0.09 0.64 - 0.82 / 0.09 = -2.0 0.966 15 0.9978 12.5 0.953 17.5 0.9978 - 0.953 = 0.0448 0.966 - 0.953 / 0.0448 = 0.29 \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u57fa\u672c\u662f\u5728\u5185\u5916\u4f59\u5f26\u503c\u4e4b\u95f4\u6839\u636e \\theta \u63d2\u503c\u3002\u5982\u679c\u4f60\u4ecd\u4e0d\u660e\u767d\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u4e0d\u5fc5\u62c5\u5fc3\uff0c\u53ea\u9700\u8981\u8bb0\u4f4f\u8fd9\u4e2a\u516c\u5f0f\u5c31\u597d\u4e86\uff0c\u5728\u4f60\u66f4\u806a\u660e\u7684\u65f6\u5019\u518d\u56de\u6765\u770b\u770b\u3002 \u6211\u4eec\u73b0\u5728\u6709\u4e86\u4e00\u4e2a\u5728\u805a\u5149\u5916\u662f\u8d1f\u7684\uff0c\u5728\u5185\u5706\u9525\u5185\u5927\u4e8e1.0\u7684\uff0c\u5728\u8fb9\u7f18\u5904\u4e8e\u4e24\u8005\u4e4b\u95f4\u7684\u5f3a\u5ea6\u503c\u4e86\u3002\u5982\u679c\u6211\u4eec\u6b63\u786e\u5730\u7ea6\u675f(Clamp)\u8fd9\u4e2a\u503c\uff0c\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u5c31\u4e0d\u518d\u9700\u8981 if-else \u4e86\uff0c\u6211\u4eec\u80fd\u591f\u4f7f\u7528\u8ba1\u7b97\u51fa\u6765\u7684\u5f3a\u5ea6\u503c\u76f4\u63a5\u4e58\u4ee5\u5149\u7167\u5206\u91cf\uff1a float theta = dot(lightDir, normalize(-light.direction)); float epsilon = light.cutOff - light.outerCutOff; float intensity = clamp((theta - light.outerCutOff) / epsilon, 0.0, 1.0); ... // \u5c06\u4e0d\u5bf9\u73af\u5883\u5149\u505a\u51fa\u5f71\u54cd\uff0c\u8ba9\u5b83\u603b\u662f\u80fd\u6709\u4e00\u70b9\u5149 diffuse *= intensity; specular *= intensity; ... \u6ce8\u610f\u6211\u4eec\u4f7f\u7528\u4e86 clamp \u51fd\u6570\uff0c\u5b83\u628a\u7b2c\u4e00\u4e2a\u53c2\u6570\u7ea6\u675f(Clamp)\u5728\u4e860.0\u52301.0\u4e4b\u95f4\u3002\u8fd9\u4fdd\u8bc1\u5f3a\u5ea6\u503c\u4e0d\u4f1a\u5728[0, 1]\u533a\u95f4\u4e4b\u5916\u3002 \u786e\u5b9a\u4f60\u5c06 outerCutOff \u503c\u6dfb\u52a0\u5230\u4e86 Light \u7ed3\u6784\u4f53\u4e4b\u4e2d\uff0c\u5e76\u5728\u7a0b\u5e8f\u4e2d\u8bbe\u7f6e\u5b83\u7684uniform\u503c\u3002\u4e0b\u9762\u7684\u56fe\u7247\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u5185\u5207\u5149\u89d2\u662f12.5\uff0c\u5916\u5207\u5149\u89d2\u662f17.5\uff1a \u554a\uff0c\u8fd9\u6837\u770b\u8d77\u6765\u5c31\u597d\u591a\u4e86\u3002\u7a0d\u5fae\u5bf9\u5185\u5916\u5207\u5149\u89d2\u5b9e\u9a8c\u4e00\u4e0b\uff0c\u5c1d\u8bd5\u521b\u5efa\u4e00\u4e2a\u66f4\u80fd\u7b26\u5408\u4f60\u9700\u6c42\u7684\u805a\u5149\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u7a0b\u5e8f\u7684\u6e90\u7801\u3002 \u8fd9\u6837\u7684\u624b\u7535\u7b52/\u805a\u5149\u7c7b\u578b\u7684\u706f\u5149\u975e\u5e38\u9002\u5408\u6050\u6016\u6e38\u620f\uff0c\u7ed3\u5408\u5b9a\u5411\u5149\u548c\u70b9\u5149\u6e90\uff0c\u73af\u5883\u5c31\u4f1a\u5f00\u59cb\u88ab\u7167\u4eae\u4e86\u3002\u5728 \u4e0b\u4e00\u8282 \u7684\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u7ed3\u5408\u6211\u4eec\u81f3\u4eca\u8ba8\u8bba\u7684\u6240\u6709\u5149\u7167\u548c\u6280\u5de7\u3002","title":"\u5e73\u6ed1/\u8f6f\u5316\u8fb9\u7f18"},{"location":"02%20Lighting/05%20Light%20casters/#_10","text":"\u5c1d\u8bd5\u5b9e\u9a8c\u4e00\u4e0b\u4e0a\u9762\u7684\u6240\u6709\u5149\u7167\u7c7b\u578b\u548c\u5b83\u4eec\u7684\u7247\u6bb5\u7740\u8272\u5668\u3002\u8bd5\u7740\u5bf9\u4e00\u4e9b\u5411\u91cf\u8fdb\u884c\u53d6\u53cd\uff0c\u5e76\u4f7f\u7528 < \u6765\u4ee3\u66ff >\u3002\u8bd5\u7740\u89e3\u91ca\u4e0d\u540c\u89c6\u89c9\u6548\u679c\u4ea7\u751f\u7684\u539f\u56e0\u3002","title":"\u7ec3\u4e60"},{"location":"02%20Lighting/06%20Multiple%20lights/","text":"\u591a\u5149\u6e90 \u539f\u6587 Multiple lights \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Geequlim , Krasjet \u6821\u5bf9 AoZhang \u6211\u4eec\u5728\u524d\u9762\u7684\u6559\u7a0b\u4e2d\u5df2\u7ecf\u5b66\u4e60\u4e86\u8bb8\u591a\u5173\u4e8eOpenGL\u4e2d\u5149\u7167\u7684\u77e5\u8bc6\uff0c\u5176\u4e2d\u5305\u62ec\u98ce\u6c0f\u7740\u8272(Phong Shading)\u3001\u6750\u8d28(Material)\u3001\u5149\u7167\u8d34\u56fe(Lighting Map)\u4ee5\u53ca\u4e0d\u540c\u79cd\u7c7b\u7684\u6295\u5149\u7269(Light Caster)\u3002\u5728\u8fd9\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u7ed3\u5408\u4e4b\u524d\u5b66\u8fc7\u7684\u6240\u6709\u77e5\u8bc6\uff0c\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u516d\u4e2a\u5149\u6e90\u7684\u5b8c\u5168\u7167\u660e\u573a\u666f\u3002\u6211\u4eec\u5c06\u6a21\u62df\u4e00\u4e2a\u7c7b\u4f3c\u592a\u9633\u7684\u5b9a\u5411\u5149(Directional Light)\u5149\u6e90\uff0c\u56db\u4e2a\u5206\u6563\u5728\u573a\u666f\u4e2d\u7684\u70b9\u5149\u6e90(Point Light)\uff0c\u4ee5\u53ca\u4e00\u4e2a\u624b\u7535\u7b52(Flashlight)\u3002 \u4e3a\u4e86\u5728\u573a\u666f\u4e2d\u4f7f\u7528\u591a\u4e2a\u5149\u6e90\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u5149\u7167\u8ba1\u7b97\u5c01\u88c5\u5230GLSL \u51fd\u6570 \u4e2d\u3002\u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f\uff0c\u6bcf\u4e00\u79cd\u5149\u6e90\u90fd\u9700\u8981\u4e00\u79cd\u4e0d\u540c\u7684\u8ba1\u7b97\u65b9\u6cd5\uff0c\u800c\u4e00\u65e6\u6211\u4eec\u60f3\u5bf9\u591a\u4e2a\u5149\u6e90\u8fdb\u884c\u5149\u7167\u8ba1\u7b97\u65f6\uff0c\u4ee3\u7801\u5f88\u5feb\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u590d\u6742\u3002\u5982\u679c\u6211\u4eec\u53ea\u5728 main \u51fd\u6570\u4e2d\u8fdb\u884c\u6240\u6709\u7684\u8fd9\u4e9b\u8ba1\u7b97\uff0c\u4ee3\u7801\u5f88\u5feb\u5c31\u4f1a\u53d8\u5f97\u96be\u4ee5\u7406\u89e3\u3002 GLSL\u4e2d\u7684\u51fd\u6570\u548cC\u51fd\u6570\u5f88\u76f8\u4f3c\uff0c\u5b83\u6709\u4e00\u4e2a\u51fd\u6570\u540d\u3001\u4e00\u4e2a\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u5982\u679c\u51fd\u6570\u4e0d\u662f\u5728main\u51fd\u6570\u4e4b\u524d\u58f0\u660e\u7684\uff0c\u6211\u4eec\u8fd8\u5fc5\u987b\u5728\u4ee3\u7801\u6587\u4ef6\u9876\u90e8\u58f0\u660e\u4e00\u4e2a\u539f\u578b\u3002\u6211\u4eec\u5bf9\u6bcf\u4e2a\u5149\u7167\u7c7b\u578b\u90fd\u521b\u5efa\u4e00\u4e2a\u4e0d\u540c\u7684\u51fd\u6570\uff1a\u5b9a\u5411\u5149\u3001\u70b9\u5149\u6e90\u548c\u805a\u5149\u3002 \u5f53\u6211\u4eec\u5728\u573a\u666f\u4e2d\u4f7f\u7528\u591a\u4e2a\u5149\u6e90\u65f6\uff0c\u901a\u5e38\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\uff1a\u6211\u4eec\u9700\u8981\u6709\u4e00\u4e2a\u5355\u72ec\u7684\u989c\u8272\u5411\u91cf\u4ee3\u8868\u7247\u6bb5\u7684\u8f93\u51fa\u989c\u8272\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5149\u6e90\uff0c\u5b83\u5bf9\u7247\u6bb5\u7684\u8d21\u732e\u989c\u8272\u5c06\u4f1a\u52a0\u5230\u7247\u6bb5\u7684\u8f93\u51fa\u989c\u8272\u5411\u91cf\u4e0a\u3002\u6240\u4ee5\u573a\u666f\u4e2d\u7684\u6bcf\u4e2a\u5149\u6e90\u90fd\u4f1a\u8ba1\u7b97\u5b83\u4eec\u5404\u81ea\u5bf9\u7247\u6bb5\u7684\u5f71\u54cd\uff0c\u5e76\u7ed3\u5408\u4e3a\u4e00\u4e2a\u6700\u7ec8\u7684\u8f93\u51fa\u989c\u8272\u3002\u5927\u4f53\u7684\u7ed3\u6784\u4f1a\u50cf\u662f\u8fd9\u6837\uff1a out vec4 FragColor; void main() { // \u5b9a\u4e49\u4e00\u4e2a\u8f93\u51fa\u989c\u8272\u503c vec3 output; // \u5c06\u5b9a\u5411\u5149\u7684\u8d21\u732e\u52a0\u5230\u8f93\u51fa\u4e2d output += someFunctionToCalculateDirectionalLight(); // \u5bf9\u6240\u6709\u7684\u70b9\u5149\u6e90\u4e5f\u505a\u76f8\u540c\u7684\u4e8b\u60c5 for(int i = 0; i < nr_of_point_lights; i++) output += someFunctionToCalculatePointLight(); // \u4e5f\u52a0\u4e0a\u5176\u5b83\u7684\u5149\u6e90\uff08\u6bd4\u5982\u805a\u5149\uff09 output += someFunctionToCalculateSpotLight(); FragColor = vec4(output, 1.0); } \u5b9e\u9645\u7684\u4ee3\u7801\u5bf9\u6bcf\u4e00\u79cd\u5b9e\u73b0\u90fd\u53ef\u80fd\u4e0d\u540c\uff0c\u4f46\u5927\u4f53\u7684\u7ed3\u6784\u90fd\u662f\u5dee\u4e0d\u591a\u7684\u3002\u6211\u4eec\u5b9a\u4e49\u4e86\u51e0\u4e2a\u51fd\u6570\uff0c\u7528\u6765\u8ba1\u7b97\u6bcf\u4e2a\u5149\u6e90\u7684\u5f71\u54cd\uff0c\u5e76\u5c06\u6700\u7ec8\u7684\u7ed3\u679c\u989c\u8272\u52a0\u5230\u8f93\u51fa\u989c\u8272\u5411\u91cf\u4e0a\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4e24\u4e2a\u5149\u6e90\u90fd\u5f88\u9760\u8fd1\u4e00\u4e2a\u7247\u6bb5\uff0c\u90a3\u4e48\u5b83\u4eec\u6240\u7ed3\u5408\u7684\u8d21\u732e\u5c06\u4f1a\u5f62\u6210\u4e00\u4e2a\u6bd4\u5355\u4e2a\u5149\u6e90\u7167\u4eae\u65f6\u66f4\u52a0\u660e\u4eae\u7684\u7247\u6bb5\u3002 \u5b9a\u5411\u5149 \u6211\u4eec\u9700\u8981\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\u5b9a\u5411\u5149\u5bf9\u76f8\u5e94\u7247\u6bb5\u7684\u8d21\u732e\uff1a\u5b83\u63a5\u53d7\u4e00\u4e9b\u53c2\u6570\u5e76\u8ba1\u7b97\u4e00\u4e2a\u5b9a\u5411\u5149\u7167\u989c\u8272\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u5b9a\u5411\u5149\u6e90\u6700\u5c11\u6240\u9700\u8981\u7684\u53d8\u91cf\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u53d8\u91cf\u50a8\u5b58\u5728\u4e00\u4e2a\u53eb\u505a DirLight \u7684\u7ed3\u6784\u4f53\u4e2d\uff0c\u5e76\u5c06\u5b83\u5b9a\u4e49\u4e3a\u4e00\u4e2auniform\u3002\u9700\u8981\u7684\u53d8\u91cf\u5728 \u4e0a\u4e00\u8282 \u4e2d\u90fd\u4ecb\u7ecd\u8fc7\uff1a struct DirLight { vec3 direction; vec3 ambient; vec3 diffuse; vec3 specular; }; uniform DirLight dirLight; \u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u5c06 dirLight \u4f20\u5165\u4e00\u4e2a\u6709\u7740\u4ee5\u4e0b\u539f\u578b\u7684\u51fd\u6570\u3002 vec3 CalcDirLight(DirLight light, vec3 normal, vec3 viewDir); Important \u548cC/C++\u4e00\u6837\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\uff08\u8fd9\u91cc\u662f\u5728 main \u51fd\u6570\u4e2d\u8c03\u7528\uff09\uff0c\u8fd9\u4e2a\u51fd\u6570\u9700\u8981\u5728\u8c03\u7528\u8005\u7684\u884c\u6570\u4e4b\u524d\u88ab\u5b9a\u4e49\u8fc7\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6211\u4eec\u66f4\u559c\u6b22\u5728 main \u51fd\u6570\u4ee5\u4e0b\u5b9a\u4e49\u51fd\u6570\uff0c\u6240\u4ee5\u4e0a\u9762\u8981\u6c42\u5c31\u4e0d\u6ee1\u8db3\u4e86\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u5728 main \u51fd\u6570\u4e4b\u4e0a\u5b9a\u4e49\u51fd\u6570\u7684\u539f\u578b\uff0c\u8fd9\u548cC\u8bed\u8a00\u4e2d\u662f\u4e00\u6837\u7684\u3002 \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e2a\u51fd\u6570\u9700\u8981\u4e00\u4e2a DirLight \u7ed3\u6784\u4f53\u548c\u5176\u5b83\u4e24\u4e2a\u5411\u91cf\u6765\u8fdb\u884c\u8ba1\u7b97\u3002\u5982\u679c\u4f60\u8ba4\u771f\u5b8c\u6210\u4e86\u4e0a\u4e00\u8282\u7684\u8bdd\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u5185\u5bb9\u5e94\u8be5\u7406\u89e3\u8d77\u6765\u5f88\u5bb9\u6613\uff1a vec3 CalcDirLight(DirLight light, vec3 normal, vec3 viewDir) { vec3 lightDir = normalize(-light.direction); // \u6f2b\u53cd\u5c04\u7740\u8272 float diff = max(dot(normal, lightDir), 0.0); // \u955c\u9762\u5149\u7740\u8272 vec3 reflectDir = reflect(-lightDir, normal); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); // \u5408\u5e76\u7ed3\u679c vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); vec3 specular = light.specular * spec * vec3(texture(material.specular, TexCoords)); return (ambient + diffuse + specular); } \u6211\u4eec\u57fa\u672c\u4e0a\u53ea\u662f\u4ece\u4e0a\u4e00\u8282\u4e2d\u590d\u5236\u4e86\u4ee3\u7801\uff0c\u5e76\u4f7f\u7528\u51fd\u6570\u53c2\u6570\u7684\u4e24\u4e2a\u5411\u91cf\u6765\u8ba1\u7b97\u5b9a\u5411\u5149\u7684\u8d21\u732e\u5411\u91cf\u3002\u6700\u7ec8\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u7684\u8d21\u732e\u5c06\u4f1a\u5408\u5e76\u4e3a\u5355\u4e2a\u989c\u8272\u5411\u91cf\u8fd4\u56de\u3002 \u70b9\u5149\u6e90 \u548c\u5b9a\u5411\u5149\u4e00\u6837\uff0c\u6211\u4eec\u4e5f\u5e0c\u671b\u5b9a\u4e49\u4e00\u4e2a\u7528\u4e8e\u8ba1\u7b97\u70b9\u5149\u6e90\u5bf9\u76f8\u5e94\u7247\u6bb5\u8d21\u732e\uff0c\u4ee5\u53ca\u8870\u51cf\uff0c\u7684\u51fd\u6570\u3002\u540c\u6837\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5305\u542b\u4e86\u70b9\u5149\u6e90\u6240\u9700\u6240\u6709\u53d8\u91cf\u7684\u7ed3\u6784\u4f53\uff1a struct PointLight { vec3 position; float constant; float linear; float quadratic; vec3 ambient; vec3 diffuse; vec3 specular; }; #define NR_POINT_LIGHTS 4 uniform PointLight pointLights[NR_POINT_LIGHTS]; \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u5728GLSL\u4e2d\u4f7f\u7528\u4e86\u9884\u5904\u7406\u6307\u4ee4\u6765\u5b9a\u4e49\u4e86\u6211\u4eec\u573a\u666f\u4e2d\u70b9\u5149\u6e90\u7684\u6570\u91cf\u3002\u63a5\u7740\u6211\u4eec\u4f7f\u7528\u4e86\u8fd9\u4e2a NR_POINT_LIGHTS \u5e38\u91cf\u6765\u521b\u5efa\u4e86\u4e00\u4e2a PointLight \u7ed3\u6784\u4f53\u7684\u6570\u7ec4\u3002GLSL\u4e2d\u7684\u6570\u7ec4\u548cC\u6570\u7ec4\u4e00\u6837\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u5bf9\u65b9\u62ec\u53f7\u6765\u521b\u5efa\u3002\u73b0\u5728\u6211\u4eec\u6709\u56db\u4e2a\u5f85\u586b\u5145\u6570\u636e\u7684 PointLight \u7ed3\u6784\u4f53\u3002 Important \u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9a\u4e49 \u4e00\u4e2a \u5927\u7684\u7ed3\u6784\u4f53\uff08\u800c\u4e0d\u662f\u4e3a\u6bcf\u79cd\u7c7b\u578b\u7684\u5149\u6e90\u5b9a\u4e49\u4e0d\u540c\u7684\u7ed3\u6784\u4f53\uff09\uff0c\u5305\u542b \u6240\u6709 \u4e0d\u540c\u79cd\u5149\u7167\u7c7b\u578b\u6240\u9700\u7684\u53d8\u91cf\uff0c\u5e76\u5c06\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7528\u5230\u6240\u6709\u7684\u51fd\u6570\u4e2d\uff0c\u53ea\u9700\u8981\u5ffd\u7565\u7528\u4e0d\u5230\u7684\u53d8\u91cf\u5c31\u884c\u4e86\u3002\u7136\u800c\uff0c\u6211\u4e2a\u4eba\u89c9\u5f97\u5f53\u524d\u7684\u65b9\u6cd5\u4f1a\u66f4\u76f4\u89c2\u4e00\u70b9\uff0c\u4e0d\u4ec5\u80fd\u591f\u8282\u7701\u4e00\u4e9b\u4ee3\u7801\uff0c\u800c\u4e14\u7531\u4e8e\u4e0d\u662f\u6240\u6709\u5149\u7167\u7c7b\u578b\u90fd\u9700\u8981\u6240\u6709\u7684\u53d8\u91cf\uff0c\u8fd9\u6837\u4e5f\u80fd\u8282\u7701\u4e00\u4e9b\u5185\u5b58\u3002 \u70b9\u5149\u6e90\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a vec3 CalcPointLight(PointLight light, vec3 normal, vec3 fragPos, vec3 viewDir); \u8fd9\u4e2a\u51fd\u6570\u4ece\u53c2\u6570\u4e2d\u83b7\u53d6\u6240\u9700\u7684\u6240\u6709\u6570\u636e\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u4ee3\u8868\u8be5\u70b9\u5149\u6e90\u5bf9\u7247\u6bb5\u7684\u989c\u8272\u8d21\u732e\u7684 vec3 \u3002\u6211\u4eec\u518d\u4e00\u6b21\u806a\u660e\u5730\u4ece\u4e4b\u524d\u7684\u6559\u7a0b\u4e2d\u590d\u5236\u7c98\u8d34\u4ee3\u7801\uff0c\u5b8c\u6210\u4e86\u4e0b\u9762\u8fd9\u6837\u7684\u51fd\u6570\uff1a vec3 CalcPointLight(PointLight light, vec3 normal, vec3 fragPos, vec3 viewDir) { vec3 lightDir = normalize(light.position - fragPos); // \u6f2b\u53cd\u5c04\u7740\u8272 float diff = max(dot(normal, lightDir), 0.0); // \u955c\u9762\u5149\u7740\u8272 vec3 reflectDir = reflect(-lightDir, normal); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); // \u8870\u51cf float distance = length(light.position - fragPos); float attenuation = 1.0 / (light.constant + light.linear * distance + light.quadratic * (distance * distance)); // \u5408\u5e76\u7ed3\u679c vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); vec3 specular = light.specular * spec * vec3(texture(material.specular, TexCoords)); ambient *= attenuation; diffuse *= attenuation; specular *= attenuation; return (ambient + diffuse + specular); } \u5c06\u8fd9\u4e9b\u529f\u80fd\u62bd\u8c61\u5230\u8fd9\u6837\u4e00\u4e2a\u51fd\u6570\u4e2d\u7684\u4f18\u70b9\u662f\uff0c\u6211\u4eec\u80fd\u591f\u4e0d\u7528\u91cd\u590d\u7684\u4ee3\u7801\u800c\u5f88\u5bb9\u6613\u5730\u8ba1\u7b97\u591a\u4e2a\u70b9\u5149\u6e90\u7684\u5149\u7167\u4e86\u3002\u5728 main \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u5faa\u73af\uff0c\u904d\u5386\u6574\u4e2a\u70b9\u5149\u6e90\u6570\u7ec4\uff0c\u5bf9\u6bcf\u4e2a\u70b9\u5149\u6e90\u8c03\u7528 CalcPointLight \u5c31\u53ef\u4ee5\u4e86\u3002 \u5408\u5e76\u7ed3\u679c \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8ba1\u7b97\u5b9a\u5411\u5149\u7684\u51fd\u6570\u548c\u4e00\u4e2a\u8ba1\u7b97\u70b9\u5149\u6e90\u7684\u51fd\u6570\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u4eec\u5408\u5e76\u653e\u5230 main \u51fd\u6570\u4e2d\u3002 void main() { // \u5c5e\u6027 vec3 norm = normalize(Normal); vec3 viewDir = normalize(viewPos - FragPos); // \u7b2c\u4e00\u9636\u6bb5\uff1a\u5b9a\u5411\u5149\u7167 vec3 result = CalcDirLight(dirLight, norm, viewDir); // \u7b2c\u4e8c\u9636\u6bb5\uff1a\u70b9\u5149\u6e90 for(int i = 0; i < NR_POINT_LIGHTS; i++) result += CalcPointLight(pointLights[i], norm, FragPos, viewDir); // \u7b2c\u4e09\u9636\u6bb5\uff1a\u805a\u5149 //result += CalcSpotLight(spotLight, norm, FragPos, viewDir); FragColor = vec4(result, 1.0); } \u6bcf\u4e2a\u5149\u6e90\u7c7b\u578b\u90fd\u5c06\u5b83\u4eec\u7684\u8d21\u732e\u52a0\u5230\u4e86\u6700\u7ec8\u7684\u8f93\u51fa\u989c\u8272\u4e0a\uff0c\u76f4\u5230\u6240\u6709\u7684\u5149\u6e90\u90fd\u5904\u7406\u5b8c\u4e86\u3002\u6700\u7ec8\u7684\u989c\u8272\u5305\u542b\u4e86\u573a\u666f\u4e2d\u6240\u6709\u5149\u6e90\u7684\u989c\u8272\u5f71\u54cd\u6240\u5408\u5e76\u7684\u7ed3\u679c\u3002\u5982\u679c\u4f60\u60f3\u7684\u8bdd\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u805a\u5149\uff0c\u5e76\u5c06\u5b83\u7684\u6548\u679c\u52a0\u5230\u8f93\u51fa\u989c\u8272\u4e2d\u3002\u6211\u4eec\u4f1a\u5c06 CalcSpotLight \u51fd\u6570\u7559\u7ed9\u8bfb\u8005\u4f5c\u4e3a\u7ec3\u4e60\u3002 Important \u5728\u8fd9\u79cd\u65b9\u6cd5\u4e2d\u6709\u5f88\u591a\u91cd\u590d\u7684\u8ba1\u7b97\u5728\u5149\u7c7b\u578b\u51fd\u6570\u4e0a(\u4f8b\u5982\u8ba1\u7b97\u53cd\u5c04\u5411\u91cf\uff0c\u6f2b\u53cd\u5c04\u548c\u9ad8\u5149\u9879\uff0c\u4ee5\u53ca\u5bf9\u6750\u6599\u7eb9\u7406\u8fdb\u884c\u91c7\u6837)\uff0c\u6240\u4ee5\u8fd9\u91cc\u6709\u4f18\u5316\u7684\u7a7a\u95f4\u3002 \u8bbe\u7f6e\u5b9a\u5411\u5149\u7ed3\u6784\u4f53\u7684uniform\u5e94\u8be5\u975e\u5e38\u719f\u6089\u4e86\uff0c\u4f46\u662f\u4f60\u53ef\u80fd\u4f1a\u5728\u60f3\u6211\u4eec\u8be5\u5982\u4f55\u8bbe\u7f6e\u70b9\u5149\u6e90\u7684uniform\u503c\uff0c\u56e0\u4e3a\u70b9\u5149\u6e90\u7684uniform\u73b0\u5728\u662f\u4e00\u4e2a PointLight \u7684\u6570\u7ec4\u4e86\u3002\u8fd9\u5e76\u4e0d\u662f\u6211\u4eec\u4ee5\u524d\u8ba8\u8bba\u8fc7\u7684\u8bdd\u9898\u3002 \u5f88\u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u5e76\u4e0d\u662f\u5f88\u590d\u6742\uff0c\u8bbe\u7f6e\u4e00\u4e2a\u7ed3\u6784\u4f53\u6570\u7ec4\u7684uniform\u548c\u8bbe\u7f6e\u4e00\u4e2a\u7ed3\u6784\u4f53\u7684uniform\u662f\u5f88\u76f8\u4f3c\u7684\uff0c\u4f46\u662f\u8fd9\u4e00\u6b21\u5728\u8bbf\u95eeuniform\u4f4d\u7f6e\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u5bf9\u5e94\u7684\u6570\u7ec4\u4e0b\u6807\u503c\uff1a lightingShader.setFloat(\"pointLights[0].constant\", 1.0f); \u5728\u8fd9\u91cc\u6211\u4eec\u7d22\u5f15\u4e86 pointLights \u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a PointLight \uff0c\u5e76\u83b7\u53d6\u4e86 constant \u53d8\u91cf\u7684\u4f4d\u7f6e\u3002\u4f46\u8fd9\u4e5f\u610f\u5473\u7740\u4e0d\u5e78\u7684\u662f\u6211\u4eec\u5fc5\u987b\u5bf9\u8fd9\u56db\u4e2a\u70b9\u5149\u6e90\u624b\u52a8\u8bbe\u7f6euniform\u503c\uff0c\u8fd9\u8ba9\u70b9\u5149\u6e90\u672c\u8eab\u5c31\u4ea7\u751f\u4e8628\u4e2auniform\u8c03\u7528\uff0c\u975e\u5e38\u5197\u957f\u3002\u4f60\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u5c06\u8fd9\u4e9b\u62bd\u8c61\u51fa\u53bb\u4e00\u70b9\uff0c\u5b9a\u4e49\u4e00\u4e2a\u70b9\u5149\u6e90\u7c7b\uff0c\u8ba9\u5b83\u6765\u4e3a\u4f60\u8bbe\u7f6euniform\u503c\uff0c\u4f46\u6700\u540e\u4f60\u4ecd\u7136\u8981\u7528\u8fd9\u79cd\u65b9\u5f0f\u8bbe\u7f6e\u6240\u6709\u5149\u6e90\u7684uniform\u503c\u3002 \u522b\u5fd8\u4e86\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4e3a\u6bcf\u4e2a\u70b9\u5149\u6e90\u5b9a\u4e49\u4e00\u4e2a\u4f4d\u7f6e\u5411\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u8ba9\u5b83\u4eec\u5728\u573a\u666f\u4e2d\u5206\u6563\u4e00\u70b9\u3002\u6211\u4eec\u4f1a\u5b9a\u4e49\u53e6\u4e00\u4e2a glm::vec3 \u6570\u7ec4\u6765\u5305\u542b\u70b9\u5149\u6e90\u7684\u4f4d\u7f6e\uff1a glm::vec3 pointLightPositions[] = { glm::vec3( 0.7f, 0.2f, 2.0f), glm::vec3( 2.3f, -3.3f, -4.0f), glm::vec3(-4.0f, 2.0f, -12.0f), glm::vec3( 0.0f, 0.0f, -3.0f) }; \u63a5\u4e0b\u6765\u6211\u4eec\u4ece pointLights \u6570\u7ec4\u4e2d\u7d22\u5f15\u5bf9\u5e94\u7684 PointLight \uff0c\u5c06\u5b83\u7684 position \u503c\u8bbe\u7f6e\u4e3a\u521a\u521a\u5b9a\u4e49\u7684\u4f4d\u7f6e\u503c\u6570\u7ec4\u4e2d\u7684\u5176\u4e2d\u4e00\u4e2a\u3002\u540c\u65f6\u6211\u4eec\u8fd8\u8981\u4fdd\u8bc1\u73b0\u5728\u7ed8\u5236\u7684\u662f\u56db\u4e2a\u706f\u7acb\u65b9\u4f53\u800c\u4e0d\u662f\u4ec5\u4ec5\u4e00\u4e2a\u3002\u53ea\u8981\u5bf9\u6bcf\u4e2a\u706f\u7269\u4f53\u521b\u5efa\u4e00\u4e2a\u4e0d\u540c\u7684\u6a21\u578b\u77e9\u9635\u5c31\u53ef\u4ee5\u4e86\uff0c\u548c\u6211\u4eec\u4e4b\u524d\u5bf9\u7bb1\u5b50\u7684\u5904\u7406\u7c7b\u4f3c\u3002 \u5982\u679c\u4f60\u8fd8\u4f7f\u7528\u4e86\u624b\u7535\u7b52\u7684\u8bdd\uff0c\u6240\u6709\u5149\u6e90\u7ec4\u5408\u7684\u6548\u679c\u5c06\u770b\u8d77\u6765\u548c\u4e0b\u56fe\u5dee\u4e0d\u591a\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u5f88\u663e\u7136\u5929\u7a7a\u4e2d\u6709\u4e00\u4e2a\u5168\u5c40\u7167\u660e\uff08\u50cf\u4e00\u4e2a\u592a\u9633\uff09\uff0c\u6211\u4eec\u6709\u56db\u4e2a\u5149\u6e90\u5206\u6563\u5728\u573a\u666f\u4e2d\uff0c\u4ee5\u53ca\u73a9\u5bb6\u89c6\u89d2\u7684\u624b\u7535\u7b52\u3002\u770b\u8d77\u6765\u662f\u4e0d\u662f\u975e\u5e38\u4e0d\u9519\uff1f \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u6700\u7ec8\u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801\u3002 \u4e0a\u9762\u56fe\u7247\u4e2d\u7684\u6240\u6709\u5149\u6e90\u90fd\u662f\u4f7f\u7528\u4e0a\u4e00\u8282\u4e2d\u6240\u4f7f\u7528\u7684\u9ed8\u8ba4\u5c5e\u6027\uff0c\u4f46\u5982\u679c\u4f60\u613f\u610f\u5b9e\u9a8c\u8fd9\u4e9b\u6570\u503c\u7684\u8bdd\uff0c\u4f60\u80fd\u591f\u5f97\u5230\u5f88\u591a\u6709\u610f\u601d\u7684\u7ed3\u679c\u3002\u827a\u672f\u5bb6\u548c\u5173\u5361\u8bbe\u8ba1\u5e08\u901a\u5e38\u90fd\u5728\u7f16\u8f91\u5668\u4e2d\u4e0d\u65ad\u7684\u8c03\u6574\u8fd9\u4e9b\u5149\u7167\u53c2\u6570\uff0c\u4fdd\u8bc1\u5149\u7167\u4e0e\u73af\u5883\u76f8\u5339\u914d\u3002\u5728\u6211\u4eec\u521a\u521a\u521b\u5efa\u7684\u7b80\u5355\u5149\u7167\u73af\u5883\u4e2d\uff0c\u4f60\u53ef\u4ee5\u7b80\u5355\u5730\u8c03\u6574\u4e00\u4e0b\u5149\u6e90\u7684\u5c5e\u6027\uff0c\u521b\u5efa\u5f88\u591a\u6709\u610f\u601d\u7684\u89c6\u89c9\u6548\u679c\uff1a \u6211\u4eec\u4e5f\u6539\u53d8\u4e86\u6e05\u5c4f\u7684\u989c\u8272\u6765\u66f4\u597d\u5730\u53cd\u5e94\u5149\u7167\u3002\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u53ea\u9700\u8981\u7b80\u5355\u5730\u8c03\u6574\u4e00\u4e9b\u5149\u7167\u53c2\u6570\uff0c\u4f60\u5c31\u80fd\u521b\u5efa\u5b8c\u5168\u4e0d\u540c\u7684\u6c1b\u56f4\u3002 \u76f8\u4fe1\u4f60\u73b0\u5728\u5df2\u7ecf\u5bf9OpenGL\u7684\u5149\u7167\u6709\u5f88\u597d\u7684\u7406\u89e3\u4e86\u3002\u6709\u4e86\u76ee\u524d\u6240\u5b66\u7684\u8fd9\u4e9b\u77e5\u8bc6\uff0c\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u521b\u5efa\u51fa\u4e30\u5bcc\u6709\u8da3\u7684\u73af\u5883\u548c\u6c1b\u56f4\u4e86\u3002\u5c1d\u8bd5\u5b9e\u9a8c\u4e00\u4e0b\u4e0d\u540c\u7684\u503c\uff0c\u521b\u5efa\u51fa\u4f60\u81ea\u5df1\u7684\u6c1b\u56f4\u5427\u3002 \u7ec3\u4e60 \u4f60\u80fd\u901a\u8fc7\u8c03\u8282\u5149\u7167\u5c5e\u6027\u53d8\u91cf\uff0c\uff08\u5927\u6982\u5730\uff09\u91cd\u73b0\u6700\u540e\u4e00\u5f20\u56fe\u7247\u4e0a\u4e0d\u540c\u7684\u6c1b\u56f4\u5417\uff1f \u53c2\u8003\u89e3\u7b54","title":"\u591a\u5149\u6e90"},{"location":"02%20Lighting/06%20Multiple%20lights/#_1","text":"\u539f\u6587 Multiple lights \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Geequlim , Krasjet \u6821\u5bf9 AoZhang \u6211\u4eec\u5728\u524d\u9762\u7684\u6559\u7a0b\u4e2d\u5df2\u7ecf\u5b66\u4e60\u4e86\u8bb8\u591a\u5173\u4e8eOpenGL\u4e2d\u5149\u7167\u7684\u77e5\u8bc6\uff0c\u5176\u4e2d\u5305\u62ec\u98ce\u6c0f\u7740\u8272(Phong Shading)\u3001\u6750\u8d28(Material)\u3001\u5149\u7167\u8d34\u56fe(Lighting Map)\u4ee5\u53ca\u4e0d\u540c\u79cd\u7c7b\u7684\u6295\u5149\u7269(Light Caster)\u3002\u5728\u8fd9\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u7ed3\u5408\u4e4b\u524d\u5b66\u8fc7\u7684\u6240\u6709\u77e5\u8bc6\uff0c\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u516d\u4e2a\u5149\u6e90\u7684\u5b8c\u5168\u7167\u660e\u573a\u666f\u3002\u6211\u4eec\u5c06\u6a21\u62df\u4e00\u4e2a\u7c7b\u4f3c\u592a\u9633\u7684\u5b9a\u5411\u5149(Directional Light)\u5149\u6e90\uff0c\u56db\u4e2a\u5206\u6563\u5728\u573a\u666f\u4e2d\u7684\u70b9\u5149\u6e90(Point Light)\uff0c\u4ee5\u53ca\u4e00\u4e2a\u624b\u7535\u7b52(Flashlight)\u3002 \u4e3a\u4e86\u5728\u573a\u666f\u4e2d\u4f7f\u7528\u591a\u4e2a\u5149\u6e90\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u5149\u7167\u8ba1\u7b97\u5c01\u88c5\u5230GLSL \u51fd\u6570 \u4e2d\u3002\u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f\uff0c\u6bcf\u4e00\u79cd\u5149\u6e90\u90fd\u9700\u8981\u4e00\u79cd\u4e0d\u540c\u7684\u8ba1\u7b97\u65b9\u6cd5\uff0c\u800c\u4e00\u65e6\u6211\u4eec\u60f3\u5bf9\u591a\u4e2a\u5149\u6e90\u8fdb\u884c\u5149\u7167\u8ba1\u7b97\u65f6\uff0c\u4ee3\u7801\u5f88\u5feb\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u590d\u6742\u3002\u5982\u679c\u6211\u4eec\u53ea\u5728 main \u51fd\u6570\u4e2d\u8fdb\u884c\u6240\u6709\u7684\u8fd9\u4e9b\u8ba1\u7b97\uff0c\u4ee3\u7801\u5f88\u5feb\u5c31\u4f1a\u53d8\u5f97\u96be\u4ee5\u7406\u89e3\u3002 GLSL\u4e2d\u7684\u51fd\u6570\u548cC\u51fd\u6570\u5f88\u76f8\u4f3c\uff0c\u5b83\u6709\u4e00\u4e2a\u51fd\u6570\u540d\u3001\u4e00\u4e2a\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u5982\u679c\u51fd\u6570\u4e0d\u662f\u5728main\u51fd\u6570\u4e4b\u524d\u58f0\u660e\u7684\uff0c\u6211\u4eec\u8fd8\u5fc5\u987b\u5728\u4ee3\u7801\u6587\u4ef6\u9876\u90e8\u58f0\u660e\u4e00\u4e2a\u539f\u578b\u3002\u6211\u4eec\u5bf9\u6bcf\u4e2a\u5149\u7167\u7c7b\u578b\u90fd\u521b\u5efa\u4e00\u4e2a\u4e0d\u540c\u7684\u51fd\u6570\uff1a\u5b9a\u5411\u5149\u3001\u70b9\u5149\u6e90\u548c\u805a\u5149\u3002 \u5f53\u6211\u4eec\u5728\u573a\u666f\u4e2d\u4f7f\u7528\u591a\u4e2a\u5149\u6e90\u65f6\uff0c\u901a\u5e38\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\uff1a\u6211\u4eec\u9700\u8981\u6709\u4e00\u4e2a\u5355\u72ec\u7684\u989c\u8272\u5411\u91cf\u4ee3\u8868\u7247\u6bb5\u7684\u8f93\u51fa\u989c\u8272\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5149\u6e90\uff0c\u5b83\u5bf9\u7247\u6bb5\u7684\u8d21\u732e\u989c\u8272\u5c06\u4f1a\u52a0\u5230\u7247\u6bb5\u7684\u8f93\u51fa\u989c\u8272\u5411\u91cf\u4e0a\u3002\u6240\u4ee5\u573a\u666f\u4e2d\u7684\u6bcf\u4e2a\u5149\u6e90\u90fd\u4f1a\u8ba1\u7b97\u5b83\u4eec\u5404\u81ea\u5bf9\u7247\u6bb5\u7684\u5f71\u54cd\uff0c\u5e76\u7ed3\u5408\u4e3a\u4e00\u4e2a\u6700\u7ec8\u7684\u8f93\u51fa\u989c\u8272\u3002\u5927\u4f53\u7684\u7ed3\u6784\u4f1a\u50cf\u662f\u8fd9\u6837\uff1a out vec4 FragColor; void main() { // \u5b9a\u4e49\u4e00\u4e2a\u8f93\u51fa\u989c\u8272\u503c vec3 output; // \u5c06\u5b9a\u5411\u5149\u7684\u8d21\u732e\u52a0\u5230\u8f93\u51fa\u4e2d output += someFunctionToCalculateDirectionalLight(); // \u5bf9\u6240\u6709\u7684\u70b9\u5149\u6e90\u4e5f\u505a\u76f8\u540c\u7684\u4e8b\u60c5 for(int i = 0; i < nr_of_point_lights; i++) output += someFunctionToCalculatePointLight(); // \u4e5f\u52a0\u4e0a\u5176\u5b83\u7684\u5149\u6e90\uff08\u6bd4\u5982\u805a\u5149\uff09 output += someFunctionToCalculateSpotLight(); FragColor = vec4(output, 1.0); } \u5b9e\u9645\u7684\u4ee3\u7801\u5bf9\u6bcf\u4e00\u79cd\u5b9e\u73b0\u90fd\u53ef\u80fd\u4e0d\u540c\uff0c\u4f46\u5927\u4f53\u7684\u7ed3\u6784\u90fd\u662f\u5dee\u4e0d\u591a\u7684\u3002\u6211\u4eec\u5b9a\u4e49\u4e86\u51e0\u4e2a\u51fd\u6570\uff0c\u7528\u6765\u8ba1\u7b97\u6bcf\u4e2a\u5149\u6e90\u7684\u5f71\u54cd\uff0c\u5e76\u5c06\u6700\u7ec8\u7684\u7ed3\u679c\u989c\u8272\u52a0\u5230\u8f93\u51fa\u989c\u8272\u5411\u91cf\u4e0a\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4e24\u4e2a\u5149\u6e90\u90fd\u5f88\u9760\u8fd1\u4e00\u4e2a\u7247\u6bb5\uff0c\u90a3\u4e48\u5b83\u4eec\u6240\u7ed3\u5408\u7684\u8d21\u732e\u5c06\u4f1a\u5f62\u6210\u4e00\u4e2a\u6bd4\u5355\u4e2a\u5149\u6e90\u7167\u4eae\u65f6\u66f4\u52a0\u660e\u4eae\u7684\u7247\u6bb5\u3002","title":"\u591a\u5149\u6e90"},{"location":"02%20Lighting/06%20Multiple%20lights/#_2","text":"\u6211\u4eec\u9700\u8981\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\u5b9a\u5411\u5149\u5bf9\u76f8\u5e94\u7247\u6bb5\u7684\u8d21\u732e\uff1a\u5b83\u63a5\u53d7\u4e00\u4e9b\u53c2\u6570\u5e76\u8ba1\u7b97\u4e00\u4e2a\u5b9a\u5411\u5149\u7167\u989c\u8272\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u5b9a\u5411\u5149\u6e90\u6700\u5c11\u6240\u9700\u8981\u7684\u53d8\u91cf\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u53d8\u91cf\u50a8\u5b58\u5728\u4e00\u4e2a\u53eb\u505a DirLight \u7684\u7ed3\u6784\u4f53\u4e2d\uff0c\u5e76\u5c06\u5b83\u5b9a\u4e49\u4e3a\u4e00\u4e2auniform\u3002\u9700\u8981\u7684\u53d8\u91cf\u5728 \u4e0a\u4e00\u8282 \u4e2d\u90fd\u4ecb\u7ecd\u8fc7\uff1a struct DirLight { vec3 direction; vec3 ambient; vec3 diffuse; vec3 specular; }; uniform DirLight dirLight; \u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u5c06 dirLight \u4f20\u5165\u4e00\u4e2a\u6709\u7740\u4ee5\u4e0b\u539f\u578b\u7684\u51fd\u6570\u3002 vec3 CalcDirLight(DirLight light, vec3 normal, vec3 viewDir); Important \u548cC/C++\u4e00\u6837\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\uff08\u8fd9\u91cc\u662f\u5728 main \u51fd\u6570\u4e2d\u8c03\u7528\uff09\uff0c\u8fd9\u4e2a\u51fd\u6570\u9700\u8981\u5728\u8c03\u7528\u8005\u7684\u884c\u6570\u4e4b\u524d\u88ab\u5b9a\u4e49\u8fc7\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6211\u4eec\u66f4\u559c\u6b22\u5728 main \u51fd\u6570\u4ee5\u4e0b\u5b9a\u4e49\u51fd\u6570\uff0c\u6240\u4ee5\u4e0a\u9762\u8981\u6c42\u5c31\u4e0d\u6ee1\u8db3\u4e86\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u5728 main \u51fd\u6570\u4e4b\u4e0a\u5b9a\u4e49\u51fd\u6570\u7684\u539f\u578b\uff0c\u8fd9\u548cC\u8bed\u8a00\u4e2d\u662f\u4e00\u6837\u7684\u3002 \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e2a\u51fd\u6570\u9700\u8981\u4e00\u4e2a DirLight \u7ed3\u6784\u4f53\u548c\u5176\u5b83\u4e24\u4e2a\u5411\u91cf\u6765\u8fdb\u884c\u8ba1\u7b97\u3002\u5982\u679c\u4f60\u8ba4\u771f\u5b8c\u6210\u4e86\u4e0a\u4e00\u8282\u7684\u8bdd\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u5185\u5bb9\u5e94\u8be5\u7406\u89e3\u8d77\u6765\u5f88\u5bb9\u6613\uff1a vec3 CalcDirLight(DirLight light, vec3 normal, vec3 viewDir) { vec3 lightDir = normalize(-light.direction); // \u6f2b\u53cd\u5c04\u7740\u8272 float diff = max(dot(normal, lightDir), 0.0); // \u955c\u9762\u5149\u7740\u8272 vec3 reflectDir = reflect(-lightDir, normal); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); // \u5408\u5e76\u7ed3\u679c vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); vec3 specular = light.specular * spec * vec3(texture(material.specular, TexCoords)); return (ambient + diffuse + specular); } \u6211\u4eec\u57fa\u672c\u4e0a\u53ea\u662f\u4ece\u4e0a\u4e00\u8282\u4e2d\u590d\u5236\u4e86\u4ee3\u7801\uff0c\u5e76\u4f7f\u7528\u51fd\u6570\u53c2\u6570\u7684\u4e24\u4e2a\u5411\u91cf\u6765\u8ba1\u7b97\u5b9a\u5411\u5149\u7684\u8d21\u732e\u5411\u91cf\u3002\u6700\u7ec8\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u7684\u8d21\u732e\u5c06\u4f1a\u5408\u5e76\u4e3a\u5355\u4e2a\u989c\u8272\u5411\u91cf\u8fd4\u56de\u3002","title":"\u5b9a\u5411\u5149"},{"location":"02%20Lighting/06%20Multiple%20lights/#_3","text":"\u548c\u5b9a\u5411\u5149\u4e00\u6837\uff0c\u6211\u4eec\u4e5f\u5e0c\u671b\u5b9a\u4e49\u4e00\u4e2a\u7528\u4e8e\u8ba1\u7b97\u70b9\u5149\u6e90\u5bf9\u76f8\u5e94\u7247\u6bb5\u8d21\u732e\uff0c\u4ee5\u53ca\u8870\u51cf\uff0c\u7684\u51fd\u6570\u3002\u540c\u6837\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5305\u542b\u4e86\u70b9\u5149\u6e90\u6240\u9700\u6240\u6709\u53d8\u91cf\u7684\u7ed3\u6784\u4f53\uff1a struct PointLight { vec3 position; float constant; float linear; float quadratic; vec3 ambient; vec3 diffuse; vec3 specular; }; #define NR_POINT_LIGHTS 4 uniform PointLight pointLights[NR_POINT_LIGHTS]; \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u5728GLSL\u4e2d\u4f7f\u7528\u4e86\u9884\u5904\u7406\u6307\u4ee4\u6765\u5b9a\u4e49\u4e86\u6211\u4eec\u573a\u666f\u4e2d\u70b9\u5149\u6e90\u7684\u6570\u91cf\u3002\u63a5\u7740\u6211\u4eec\u4f7f\u7528\u4e86\u8fd9\u4e2a NR_POINT_LIGHTS \u5e38\u91cf\u6765\u521b\u5efa\u4e86\u4e00\u4e2a PointLight \u7ed3\u6784\u4f53\u7684\u6570\u7ec4\u3002GLSL\u4e2d\u7684\u6570\u7ec4\u548cC\u6570\u7ec4\u4e00\u6837\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u5bf9\u65b9\u62ec\u53f7\u6765\u521b\u5efa\u3002\u73b0\u5728\u6211\u4eec\u6709\u56db\u4e2a\u5f85\u586b\u5145\u6570\u636e\u7684 PointLight \u7ed3\u6784\u4f53\u3002 Important \u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9a\u4e49 \u4e00\u4e2a \u5927\u7684\u7ed3\u6784\u4f53\uff08\u800c\u4e0d\u662f\u4e3a\u6bcf\u79cd\u7c7b\u578b\u7684\u5149\u6e90\u5b9a\u4e49\u4e0d\u540c\u7684\u7ed3\u6784\u4f53\uff09\uff0c\u5305\u542b \u6240\u6709 \u4e0d\u540c\u79cd\u5149\u7167\u7c7b\u578b\u6240\u9700\u7684\u53d8\u91cf\uff0c\u5e76\u5c06\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7528\u5230\u6240\u6709\u7684\u51fd\u6570\u4e2d\uff0c\u53ea\u9700\u8981\u5ffd\u7565\u7528\u4e0d\u5230\u7684\u53d8\u91cf\u5c31\u884c\u4e86\u3002\u7136\u800c\uff0c\u6211\u4e2a\u4eba\u89c9\u5f97\u5f53\u524d\u7684\u65b9\u6cd5\u4f1a\u66f4\u76f4\u89c2\u4e00\u70b9\uff0c\u4e0d\u4ec5\u80fd\u591f\u8282\u7701\u4e00\u4e9b\u4ee3\u7801\uff0c\u800c\u4e14\u7531\u4e8e\u4e0d\u662f\u6240\u6709\u5149\u7167\u7c7b\u578b\u90fd\u9700\u8981\u6240\u6709\u7684\u53d8\u91cf\uff0c\u8fd9\u6837\u4e5f\u80fd\u8282\u7701\u4e00\u4e9b\u5185\u5b58\u3002 \u70b9\u5149\u6e90\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a vec3 CalcPointLight(PointLight light, vec3 normal, vec3 fragPos, vec3 viewDir); \u8fd9\u4e2a\u51fd\u6570\u4ece\u53c2\u6570\u4e2d\u83b7\u53d6\u6240\u9700\u7684\u6240\u6709\u6570\u636e\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u4ee3\u8868\u8be5\u70b9\u5149\u6e90\u5bf9\u7247\u6bb5\u7684\u989c\u8272\u8d21\u732e\u7684 vec3 \u3002\u6211\u4eec\u518d\u4e00\u6b21\u806a\u660e\u5730\u4ece\u4e4b\u524d\u7684\u6559\u7a0b\u4e2d\u590d\u5236\u7c98\u8d34\u4ee3\u7801\uff0c\u5b8c\u6210\u4e86\u4e0b\u9762\u8fd9\u6837\u7684\u51fd\u6570\uff1a vec3 CalcPointLight(PointLight light, vec3 normal, vec3 fragPos, vec3 viewDir) { vec3 lightDir = normalize(light.position - fragPos); // \u6f2b\u53cd\u5c04\u7740\u8272 float diff = max(dot(normal, lightDir), 0.0); // \u955c\u9762\u5149\u7740\u8272 vec3 reflectDir = reflect(-lightDir, normal); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); // \u8870\u51cf float distance = length(light.position - fragPos); float attenuation = 1.0 / (light.constant + light.linear * distance + light.quadratic * (distance * distance)); // \u5408\u5e76\u7ed3\u679c vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); vec3 specular = light.specular * spec * vec3(texture(material.specular, TexCoords)); ambient *= attenuation; diffuse *= attenuation; specular *= attenuation; return (ambient + diffuse + specular); } \u5c06\u8fd9\u4e9b\u529f\u80fd\u62bd\u8c61\u5230\u8fd9\u6837\u4e00\u4e2a\u51fd\u6570\u4e2d\u7684\u4f18\u70b9\u662f\uff0c\u6211\u4eec\u80fd\u591f\u4e0d\u7528\u91cd\u590d\u7684\u4ee3\u7801\u800c\u5f88\u5bb9\u6613\u5730\u8ba1\u7b97\u591a\u4e2a\u70b9\u5149\u6e90\u7684\u5149\u7167\u4e86\u3002\u5728 main \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u5faa\u73af\uff0c\u904d\u5386\u6574\u4e2a\u70b9\u5149\u6e90\u6570\u7ec4\uff0c\u5bf9\u6bcf\u4e2a\u70b9\u5149\u6e90\u8c03\u7528 CalcPointLight \u5c31\u53ef\u4ee5\u4e86\u3002","title":"\u70b9\u5149\u6e90"},{"location":"02%20Lighting/06%20Multiple%20lights/#_4","text":"\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8ba1\u7b97\u5b9a\u5411\u5149\u7684\u51fd\u6570\u548c\u4e00\u4e2a\u8ba1\u7b97\u70b9\u5149\u6e90\u7684\u51fd\u6570\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u4eec\u5408\u5e76\u653e\u5230 main \u51fd\u6570\u4e2d\u3002 void main() { // \u5c5e\u6027 vec3 norm = normalize(Normal); vec3 viewDir = normalize(viewPos - FragPos); // \u7b2c\u4e00\u9636\u6bb5\uff1a\u5b9a\u5411\u5149\u7167 vec3 result = CalcDirLight(dirLight, norm, viewDir); // \u7b2c\u4e8c\u9636\u6bb5\uff1a\u70b9\u5149\u6e90 for(int i = 0; i < NR_POINT_LIGHTS; i++) result += CalcPointLight(pointLights[i], norm, FragPos, viewDir); // \u7b2c\u4e09\u9636\u6bb5\uff1a\u805a\u5149 //result += CalcSpotLight(spotLight, norm, FragPos, viewDir); FragColor = vec4(result, 1.0); } \u6bcf\u4e2a\u5149\u6e90\u7c7b\u578b\u90fd\u5c06\u5b83\u4eec\u7684\u8d21\u732e\u52a0\u5230\u4e86\u6700\u7ec8\u7684\u8f93\u51fa\u989c\u8272\u4e0a\uff0c\u76f4\u5230\u6240\u6709\u7684\u5149\u6e90\u90fd\u5904\u7406\u5b8c\u4e86\u3002\u6700\u7ec8\u7684\u989c\u8272\u5305\u542b\u4e86\u573a\u666f\u4e2d\u6240\u6709\u5149\u6e90\u7684\u989c\u8272\u5f71\u54cd\u6240\u5408\u5e76\u7684\u7ed3\u679c\u3002\u5982\u679c\u4f60\u60f3\u7684\u8bdd\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u805a\u5149\uff0c\u5e76\u5c06\u5b83\u7684\u6548\u679c\u52a0\u5230\u8f93\u51fa\u989c\u8272\u4e2d\u3002\u6211\u4eec\u4f1a\u5c06 CalcSpotLight \u51fd\u6570\u7559\u7ed9\u8bfb\u8005\u4f5c\u4e3a\u7ec3\u4e60\u3002 Important \u5728\u8fd9\u79cd\u65b9\u6cd5\u4e2d\u6709\u5f88\u591a\u91cd\u590d\u7684\u8ba1\u7b97\u5728\u5149\u7c7b\u578b\u51fd\u6570\u4e0a(\u4f8b\u5982\u8ba1\u7b97\u53cd\u5c04\u5411\u91cf\uff0c\u6f2b\u53cd\u5c04\u548c\u9ad8\u5149\u9879\uff0c\u4ee5\u53ca\u5bf9\u6750\u6599\u7eb9\u7406\u8fdb\u884c\u91c7\u6837)\uff0c\u6240\u4ee5\u8fd9\u91cc\u6709\u4f18\u5316\u7684\u7a7a\u95f4\u3002 \u8bbe\u7f6e\u5b9a\u5411\u5149\u7ed3\u6784\u4f53\u7684uniform\u5e94\u8be5\u975e\u5e38\u719f\u6089\u4e86\uff0c\u4f46\u662f\u4f60\u53ef\u80fd\u4f1a\u5728\u60f3\u6211\u4eec\u8be5\u5982\u4f55\u8bbe\u7f6e\u70b9\u5149\u6e90\u7684uniform\u503c\uff0c\u56e0\u4e3a\u70b9\u5149\u6e90\u7684uniform\u73b0\u5728\u662f\u4e00\u4e2a PointLight \u7684\u6570\u7ec4\u4e86\u3002\u8fd9\u5e76\u4e0d\u662f\u6211\u4eec\u4ee5\u524d\u8ba8\u8bba\u8fc7\u7684\u8bdd\u9898\u3002 \u5f88\u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u5e76\u4e0d\u662f\u5f88\u590d\u6742\uff0c\u8bbe\u7f6e\u4e00\u4e2a\u7ed3\u6784\u4f53\u6570\u7ec4\u7684uniform\u548c\u8bbe\u7f6e\u4e00\u4e2a\u7ed3\u6784\u4f53\u7684uniform\u662f\u5f88\u76f8\u4f3c\u7684\uff0c\u4f46\u662f\u8fd9\u4e00\u6b21\u5728\u8bbf\u95eeuniform\u4f4d\u7f6e\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u5bf9\u5e94\u7684\u6570\u7ec4\u4e0b\u6807\u503c\uff1a lightingShader.setFloat(\"pointLights[0].constant\", 1.0f); \u5728\u8fd9\u91cc\u6211\u4eec\u7d22\u5f15\u4e86 pointLights \u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a PointLight \uff0c\u5e76\u83b7\u53d6\u4e86 constant \u53d8\u91cf\u7684\u4f4d\u7f6e\u3002\u4f46\u8fd9\u4e5f\u610f\u5473\u7740\u4e0d\u5e78\u7684\u662f\u6211\u4eec\u5fc5\u987b\u5bf9\u8fd9\u56db\u4e2a\u70b9\u5149\u6e90\u624b\u52a8\u8bbe\u7f6euniform\u503c\uff0c\u8fd9\u8ba9\u70b9\u5149\u6e90\u672c\u8eab\u5c31\u4ea7\u751f\u4e8628\u4e2auniform\u8c03\u7528\uff0c\u975e\u5e38\u5197\u957f\u3002\u4f60\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u5c06\u8fd9\u4e9b\u62bd\u8c61\u51fa\u53bb\u4e00\u70b9\uff0c\u5b9a\u4e49\u4e00\u4e2a\u70b9\u5149\u6e90\u7c7b\uff0c\u8ba9\u5b83\u6765\u4e3a\u4f60\u8bbe\u7f6euniform\u503c\uff0c\u4f46\u6700\u540e\u4f60\u4ecd\u7136\u8981\u7528\u8fd9\u79cd\u65b9\u5f0f\u8bbe\u7f6e\u6240\u6709\u5149\u6e90\u7684uniform\u503c\u3002 \u522b\u5fd8\u4e86\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4e3a\u6bcf\u4e2a\u70b9\u5149\u6e90\u5b9a\u4e49\u4e00\u4e2a\u4f4d\u7f6e\u5411\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u8ba9\u5b83\u4eec\u5728\u573a\u666f\u4e2d\u5206\u6563\u4e00\u70b9\u3002\u6211\u4eec\u4f1a\u5b9a\u4e49\u53e6\u4e00\u4e2a glm::vec3 \u6570\u7ec4\u6765\u5305\u542b\u70b9\u5149\u6e90\u7684\u4f4d\u7f6e\uff1a glm::vec3 pointLightPositions[] = { glm::vec3( 0.7f, 0.2f, 2.0f), glm::vec3( 2.3f, -3.3f, -4.0f), glm::vec3(-4.0f, 2.0f, -12.0f), glm::vec3( 0.0f, 0.0f, -3.0f) }; \u63a5\u4e0b\u6765\u6211\u4eec\u4ece pointLights \u6570\u7ec4\u4e2d\u7d22\u5f15\u5bf9\u5e94\u7684 PointLight \uff0c\u5c06\u5b83\u7684 position \u503c\u8bbe\u7f6e\u4e3a\u521a\u521a\u5b9a\u4e49\u7684\u4f4d\u7f6e\u503c\u6570\u7ec4\u4e2d\u7684\u5176\u4e2d\u4e00\u4e2a\u3002\u540c\u65f6\u6211\u4eec\u8fd8\u8981\u4fdd\u8bc1\u73b0\u5728\u7ed8\u5236\u7684\u662f\u56db\u4e2a\u706f\u7acb\u65b9\u4f53\u800c\u4e0d\u662f\u4ec5\u4ec5\u4e00\u4e2a\u3002\u53ea\u8981\u5bf9\u6bcf\u4e2a\u706f\u7269\u4f53\u521b\u5efa\u4e00\u4e2a\u4e0d\u540c\u7684\u6a21\u578b\u77e9\u9635\u5c31\u53ef\u4ee5\u4e86\uff0c\u548c\u6211\u4eec\u4e4b\u524d\u5bf9\u7bb1\u5b50\u7684\u5904\u7406\u7c7b\u4f3c\u3002 \u5982\u679c\u4f60\u8fd8\u4f7f\u7528\u4e86\u624b\u7535\u7b52\u7684\u8bdd\uff0c\u6240\u6709\u5149\u6e90\u7ec4\u5408\u7684\u6548\u679c\u5c06\u770b\u8d77\u6765\u548c\u4e0b\u56fe\u5dee\u4e0d\u591a\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u5f88\u663e\u7136\u5929\u7a7a\u4e2d\u6709\u4e00\u4e2a\u5168\u5c40\u7167\u660e\uff08\u50cf\u4e00\u4e2a\u592a\u9633\uff09\uff0c\u6211\u4eec\u6709\u56db\u4e2a\u5149\u6e90\u5206\u6563\u5728\u573a\u666f\u4e2d\uff0c\u4ee5\u53ca\u73a9\u5bb6\u89c6\u89d2\u7684\u624b\u7535\u7b52\u3002\u770b\u8d77\u6765\u662f\u4e0d\u662f\u975e\u5e38\u4e0d\u9519\uff1f \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u6700\u7ec8\u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801\u3002 \u4e0a\u9762\u56fe\u7247\u4e2d\u7684\u6240\u6709\u5149\u6e90\u90fd\u662f\u4f7f\u7528\u4e0a\u4e00\u8282\u4e2d\u6240\u4f7f\u7528\u7684\u9ed8\u8ba4\u5c5e\u6027\uff0c\u4f46\u5982\u679c\u4f60\u613f\u610f\u5b9e\u9a8c\u8fd9\u4e9b\u6570\u503c\u7684\u8bdd\uff0c\u4f60\u80fd\u591f\u5f97\u5230\u5f88\u591a\u6709\u610f\u601d\u7684\u7ed3\u679c\u3002\u827a\u672f\u5bb6\u548c\u5173\u5361\u8bbe\u8ba1\u5e08\u901a\u5e38\u90fd\u5728\u7f16\u8f91\u5668\u4e2d\u4e0d\u65ad\u7684\u8c03\u6574\u8fd9\u4e9b\u5149\u7167\u53c2\u6570\uff0c\u4fdd\u8bc1\u5149\u7167\u4e0e\u73af\u5883\u76f8\u5339\u914d\u3002\u5728\u6211\u4eec\u521a\u521a\u521b\u5efa\u7684\u7b80\u5355\u5149\u7167\u73af\u5883\u4e2d\uff0c\u4f60\u53ef\u4ee5\u7b80\u5355\u5730\u8c03\u6574\u4e00\u4e0b\u5149\u6e90\u7684\u5c5e\u6027\uff0c\u521b\u5efa\u5f88\u591a\u6709\u610f\u601d\u7684\u89c6\u89c9\u6548\u679c\uff1a \u6211\u4eec\u4e5f\u6539\u53d8\u4e86\u6e05\u5c4f\u7684\u989c\u8272\u6765\u66f4\u597d\u5730\u53cd\u5e94\u5149\u7167\u3002\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u53ea\u9700\u8981\u7b80\u5355\u5730\u8c03\u6574\u4e00\u4e9b\u5149\u7167\u53c2\u6570\uff0c\u4f60\u5c31\u80fd\u521b\u5efa\u5b8c\u5168\u4e0d\u540c\u7684\u6c1b\u56f4\u3002 \u76f8\u4fe1\u4f60\u73b0\u5728\u5df2\u7ecf\u5bf9OpenGL\u7684\u5149\u7167\u6709\u5f88\u597d\u7684\u7406\u89e3\u4e86\u3002\u6709\u4e86\u76ee\u524d\u6240\u5b66\u7684\u8fd9\u4e9b\u77e5\u8bc6\uff0c\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u521b\u5efa\u51fa\u4e30\u5bcc\u6709\u8da3\u7684\u73af\u5883\u548c\u6c1b\u56f4\u4e86\u3002\u5c1d\u8bd5\u5b9e\u9a8c\u4e00\u4e0b\u4e0d\u540c\u7684\u503c\uff0c\u521b\u5efa\u51fa\u4f60\u81ea\u5df1\u7684\u6c1b\u56f4\u5427\u3002","title":"\u5408\u5e76\u7ed3\u679c"},{"location":"02%20Lighting/06%20Multiple%20lights/#_5","text":"\u4f60\u80fd\u901a\u8fc7\u8c03\u8282\u5149\u7167\u5c5e\u6027\u53d8\u91cf\uff0c\uff08\u5927\u6982\u5730\uff09\u91cd\u73b0\u6700\u540e\u4e00\u5f20\u56fe\u7247\u4e0a\u4e0d\u540c\u7684\u6c1b\u56f4\u5417\uff1f \u53c2\u8003\u89e3\u7b54","title":"\u7ec3\u4e60"},{"location":"02%20Lighting/07%20Review/","text":"\u590d\u4e60 \u539f\u6587 Review \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 Geequlim , Krasjet, orbitgw , AoZhang \u606d\u559c\u60a8\u5df2\u7ecf\u5b66\u4e60\u5230\u4e86\u8fd9\u4e2a\u5730\u65b9\uff01\u8f9b\u82e6\u5566\uff01\u4e0d\u77e5\u9053\u4f60\u6709\u6ca1\u6709\u6ce8\u610f\u5230\uff0c\u603b\u7684\u6765\u8bf4\u6211\u4eec\u5728\u5b66\u4e60\u5149\u7167\u6559\u7a0b\u7684\u65f6\u5019\u5173\u4e8eOpenGL\u672c\u8eab\u5e76\u6ca1\u6709\u4ec0\u4e48\u65b0\u4e1c\u897f\uff0c\u9664\u4e86\u50cf\u8bbf\u95eeuniform\u6570\u7ec4\u8fd9\u6837\u7ec6\u679d\u672b\u8282\u7684\u77e5\u8bc6\u3002\u76ee\u524d\u4e3a\u6b62\u7684\u6240\u6709\u6559\u7a0b\u90fd\u662f\u5173\u4e8e\u4f7f\u7528\u4e00\u4e9b\u6280\u5de7\u6216\u8005\u516c\u5f0f\u6765\u64cd\u4f5c\u7740\u8272\u5668\uff0c\u8fbe\u5230\u771f\u5b9e\u7684\u5149\u7167\u6548\u679c\u3002\u8fd9\u518d\u4e00\u6b21\u5411\u4f60\u5c55\u793a\u4e86\u7740\u8272\u5668\u7684\u5a01\u529b\u3002\u7740\u8272\u5668\u662f\u975e\u5e38\u7075\u6d3b\u7684\uff0c\u4f60\u4e5f\u4eb2\u773c\u89c1\u8bc1\u4e86\u6211\u4eec\u4ec5\u4ec5\u4f7f\u7528\u4e00\u4e9b3D\u5411\u91cf\u548c\u53ef\u914d\u7f6e\u7684\u53d8\u91cf\u5c31\u80fd\u591f\u521b\u9020\u51fa\u60ca\u4eba\u7684\u56fe\u50cf\u8fd9\u4e00\u70b9\u3002 \u5728\u524d\u9762\u7684\u51e0\u4e2a\u6559\u7a0b\u4e2d\uff0c\u4f60\u5b66\u4e60\u4e86\u989c\u8272\u3001\u98ce\u6c0f\u5149\u7167\u6a21\u578b\uff08\u5305\u62ec\u73af\u5883\u5149\u7167\u3001\u6f2b\u53cd\u5c04\u5149\u7167\u548c\u955c\u9762\u5149\u7167\uff09\u3001\u7269\u4f53\u7684\u6750\u8d28\u3001\u53ef\u914d\u7f6e\u7684\u5149\u7167\u5c5e\u6027\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u8d34\u56fe\u3001\u4e0d\u540c\u79cd\u7c7b\u7684\u5149\uff0c\u5e76\u4e14\u5b66\u4e60\u4e86\u600e\u6837\u5c06\u6240\u6709\u6240\u5b66\u77e5\u8bc6\u878d\u4f1a\u8d2f\u901a\uff0c\u7ed3\u5408\u5230\u4e00\u4e2a\u5b8c\u5168\u7167\u660e\u7684\u573a\u666f\u4e2d\u3002\u8bb0\u5f97\u53bb\u5b9e\u9a8c\u4e00\u4e0b\u4e0d\u540c\u7684\u5149\u7167\u3001\u6750\u8d28\u989c\u8272\u3001\u5149\u7167\u5c5e\u6027\uff0c\u5e76\u4e14\u8bd5\u7740\u5229\u7528\u4f60\u65e0\u7a77\u7684\u521b\u9020\u529b\u521b\u5efa\u81ea\u5df1\u7684\u73af\u5883\u3002 \u5728 \u4e0b\u4e00\u8282 \u5f53\u4e2d\uff0c\u6211\u4eec\u5728\u6211\u4eec\u7684\u573a\u666f\u5f53\u4e2d\u52a0\u5165\u66f4\u9ad8\u7ea7\u7684\u51e0\u4f55\u5f62\u72b6\uff0c\u8fd9\u4e9b\u5f62\u72b6\u5c06\u4f1a\u5728\u6211\u4eec\u4e4b\u524d\u8ba8\u8bba\u8fc7\u7684\u5149\u7167\u6a21\u578b\u4e2d\u975e\u5e38\u597d\u770b\u3002 \u8bcd\u6c47\u8868 \u989c\u8272\u5411\u91cf(Color Vector) \uff1a\u4e00\u4e2a\u901a\u8fc7\u7ea2\u7eff\u84dd(RGB)\u5206\u91cf\u7684\u7ec4\u5408\u63cf\u7ed8\u5927\u90e8\u5206\u771f\u5b9e\u989c\u8272\u7684\u5411\u91cf\u3002\u4e00\u4e2a\u7269\u4f53\u7684\u989c\u8272\u5b9e\u9645\u4e0a\u662f\u8be5\u7269\u4f53\u6240\u4e0d\u80fd\u5438\u6536\u7684\u53cd\u5c04\u989c\u8272\u5206\u91cf\u3002 \u98ce\u6c0f\u5149\u7167\u6a21\u578b(Phong Lighting Model) \uff1a\u4e00\u4e2a\u901a\u8fc7\u8ba1\u7b97\u73af\u5883\u5149\uff0c\u6f2b\u53cd\u5c04\uff0c\u548c\u955c\u9762\u5149\u5206\u91cf\u7684\u503c\u6765\u8fd1\u4f3c\u771f\u5b9e\u5149\u7167\u7684\u6a21\u578b\u3002 \u73af\u5883\u5149\u7167(Ambient Lighting) \uff1a\u901a\u8fc7\u7ed9\u6bcf\u4e2a\u6ca1\u6709\u88ab\u5149\u7167\u7684\u7269\u4f53\u5f88\u5c0f\u7684\u4eae\u5ea6\uff0c\u4f7f\u5176\u4e0d\u662f\u5b8c\u5168\u9ed1\u6697\u7684\uff0c\u4ece\u800c\u5bf9\u5168\u5c40\u5149\u7167\u8fdb\u884c\u8fd1\u4f3c\u3002 \u6f2b\u53cd\u5c04\u7740\u8272(Diffuse Shading) \uff1a\u4e00\u4e2a\u9876\u70b9/\u7247\u6bb5\u4e0e\u5149\u7ebf\u65b9\u5411\u8d8a\u63a5\u8fd1\uff0c\u5149\u7167\u4f1a\u8d8a\u5f3a\u3002\u4f7f\u7528\u4e86\u6cd5\u5411\u91cf\u6765\u8ba1\u7b97\u89d2\u5ea6\u3002 \u6cd5\u5411\u91cf(Normal Vector) \uff1a\u4e00\u4e2a\u5782\u76f4\u4e8e\u5e73\u9762\u7684\u5355\u4f4d\u5411\u91cf\u3002 \u6cd5\u7ebf\u77e9\u9635(Normal Matrix) \uff1a\u4e00\u4e2a3x3\u77e9\u9635\uff0c\u6216\u8005\u8bf4\u662f\u6ca1\u6709\u5e73\u79fb\u7684\u6a21\u578b\uff08\u6216\u8005\u6a21\u578b-\u89c2\u5bdf\uff09\u77e9\u9635\u3002\u5b83\u4e5f\u88ab\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4fee\u6539\uff08\u9006\u8f6c\u7f6e\uff09\uff0c\u4ece\u800c\u5728\u5e94\u7528\u975e\u7edf\u4e00\u7f29\u653e\u65f6\uff0c\u4fdd\u6301\u6cd5\u5411\u91cf\u671d\u5411\u6b63\u786e\u7684\u65b9\u5411\u3002\u5426\u5219\u6cd5\u5411\u91cf\u4f1a\u5728\u4f7f\u7528\u975e\u7edf\u4e00\u7f29\u653e\u65f6\u88ab\u626d\u66f2\u3002 \u955c\u9762\u5149\u7167(Specular Lighting) \uff1a\u5f53\u89c2\u5bdf\u8005\u89c6\u7ebf\u9760\u8fd1\u5149\u6e90\u5728\u8868\u9762\u7684\u53cd\u5c04\u7ebf\u65f6\u4f1a\u663e\u793a\u7684\u955c\u9762\u9ad8\u5149\u3002\u955c\u9762\u5149\u7167\u662f\u7531\u89c2\u5bdf\u8005\u7684\u65b9\u5411\uff0c\u5149\u6e90\u7684\u65b9\u5411\u548c\u8bbe\u5b9a\u9ad8\u5149\u5206\u6563\u91cf\u7684\u53cd\u5149\u5ea6\u503c\u4e09\u4e2a\u91cf\u5171\u540c\u51b3\u5b9a\u7684\u3002 \u98ce\u6c0f\u7740\u8272(Phong Shading) \uff1a\u98ce\u6c0f\u5149\u7167\u6a21\u578b\u5e94\u7528\u5728\u7247\u6bb5\u7740\u8272\u5668\u3002 Gouraud\u7740\u8272(Gouraud shading) \uff1a\u98ce\u6c0f\u5149\u7167\u6a21\u578b\u5e94\u7528\u5728\u9876\u70b9\u7740\u8272\u5668\u4e0a\u3002\u5728\u4f7f\u7528\u5f88\u5c11\u6570\u91cf\u7684\u9876\u70b9\u65f6\u4f1a\u4ea7\u751f\u660e\u663e\u7684\u7455\u75b5\u3002\u4f1a\u5f97\u5230\u6548\u7387\u63d0\u5347\u4f46\u662f\u635f\u5931\u4e86\u89c6\u89c9\u8d28\u91cf\u3002 GLSL\u7ed3\u6784\u4f53(GLSL struct) \uff1a\u4e00\u4e2a\u7c7b\u4f3c\u4e8eC\u7684\u7ed3\u6784\u4f53\uff0c\u7528\u4f5c\u7740\u8272\u5668\u53d8\u91cf\u7684\u5bb9\u5668\u3002\u5927\u90e8\u5206\u65f6\u95f4\u7528\u6765\u7ba1\u7406\u8f93\u5165/\u8f93\u51fa/uniform\u3002 \u6750\u8d28(Material) \uff1a\u4e00\u4e2a\u7269\u4f53\u53cd\u5c04\u7684\u73af\u5883\u5149\uff0c\u6f2b\u53cd\u5c04\uff0c\u955c\u9762\u5149\u989c\u8272\u3002\u8fd9\u4e9b\u4e1c\u897f\u8bbe\u5b9a\u4e86\u7269\u4f53\u6240\u62e5\u6709\u7684\u989c\u8272\u3002 \u5149\u7167\u5c5e\u6027(Light(properties)) \uff1a\u4e00\u4e2a\u5149\u7684\u73af\u5883\u5149\uff0c\u6f2b\u53cd\u5c04\uff0c\u955c\u9762\u5149\u7684\u5f3a\u5ea6\u3002\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u989c\u8272\u503c\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u98ce\u6c0f\u5206\u91cf(Phong Component)\u5b9a\u4e49\u5149\u6e90\u53d1\u51fa\u7684\u989c\u8272/\u5f3a\u5ea6\u3002 \u6f2b\u53cd\u5c04\u8d34\u56fe(Diffuse Map) \uff1a\u4e00\u4e2a\u8bbe\u5b9a\u4e86\u6bcf\u4e2a\u7247\u6bb5\u4e2d\u6f2b\u53cd\u5c04\u989c\u8272\u7684\u7eb9\u7406\u56fe\u7247\u3002 \u955c\u9762\u5149\u8d34\u56fe(Specular Map) \uff1a\u4e00\u4e2a\u8bbe\u5b9a\u4e86\u6bcf\u4e00\u4e2a\u7247\u6bb5\u7684\u955c\u9762\u5149\u5f3a\u5ea6/\u989c\u8272\u7684\u7eb9\u7406\u8d34\u56fe\u3002\u4ec5\u5728\u7269\u4f53\u7684\u7279\u5b9a\u533a\u57df\u663e\u793a\u955c\u9762\u9ad8\u5149\u3002 \u5b9a\u5411\u5149(Directional Light) \uff1a\u53ea\u6709\u65b9\u5411\u7684\u5149\u6e90\u3002\u5b83\u88ab\u5efa\u6a21\u4e3a\u65e0\u9650\u8ddd\u79bb\uff0c\u8fd9\u4f7f\u5f97\u5b83\u7684\u6240\u6709\u5149\u7ebf\u770b\u8d77\u6765\u90fd\u662f\u5e73\u884c\u7684\uff0c\u56e0\u6b64\u5b83\u7684\u65b9\u5411\u77e2\u91cf\u5728\u6574\u4e2a\u573a\u666f\u4e2d\u4fdd\u6301\u4e0d\u53d8\u3002 \u70b9\u5149\u6e90(Point Light) \uff1a\u4e00\u4e2a\u5728\u573a\u666f\u4e2d\u6709\u4f4d\u7f6e\u7684\uff0c\u5149\u7ebf\u9010\u6e10\u8870\u51cf\u7684\u5149\u6e90\u3002 \u8870\u51cf(Attenuation) \uff1a\u5149\u968f\u7740\u8ddd\u79bb\u51cf\u5c11\u5f3a\u5ea6\u51cf\u5c0f\u7684\u8fc7\u7a0b\uff0c\u901a\u5e38\u4f7f\u7528\u5728\u70b9\u5149\u6e90\u548c\u805a\u5149\u4e0b\u3002 \u805a\u5149(Spotlight) \uff1a\u4e00\u4e2a\u88ab\u5b9a\u4e49\u4e3a\u5728\u67d0\u4e00\u4e2a\u65b9\u5411\u4e0a\u7684\u9525\u5f62\u7684\u5149\u6e90\u3002 \u624b\u7535\u7b52(Flashlight) \uff1a\u4e00\u4e2a\u6446\u653e\u5728\u89c2\u5bdf\u8005\u89c6\u89d2\u7684\u805a\u5149\u3002 GLSL Uniform\u6570\u7ec4(GLSL Uniform Array) \uff1a\u4e00\u4e2auniform\u503c\u6570\u7ec4\u3002\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u548cC\u8bed\u8a00\u6570\u7ec4\u5927\u81f4\u4e00\u6837\uff0c\u53ea\u662f\u4e0d\u80fd\u52a8\u6001\u5206\u914d\u5185\u5b58\u3002","title":"\u590d\u4e60"},{"location":"02%20Lighting/07%20Review/#_1","text":"\u539f\u6587 Review \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 Geequlim , Krasjet, orbitgw , AoZhang \u606d\u559c\u60a8\u5df2\u7ecf\u5b66\u4e60\u5230\u4e86\u8fd9\u4e2a\u5730\u65b9\uff01\u8f9b\u82e6\u5566\uff01\u4e0d\u77e5\u9053\u4f60\u6709\u6ca1\u6709\u6ce8\u610f\u5230\uff0c\u603b\u7684\u6765\u8bf4\u6211\u4eec\u5728\u5b66\u4e60\u5149\u7167\u6559\u7a0b\u7684\u65f6\u5019\u5173\u4e8eOpenGL\u672c\u8eab\u5e76\u6ca1\u6709\u4ec0\u4e48\u65b0\u4e1c\u897f\uff0c\u9664\u4e86\u50cf\u8bbf\u95eeuniform\u6570\u7ec4\u8fd9\u6837\u7ec6\u679d\u672b\u8282\u7684\u77e5\u8bc6\u3002\u76ee\u524d\u4e3a\u6b62\u7684\u6240\u6709\u6559\u7a0b\u90fd\u662f\u5173\u4e8e\u4f7f\u7528\u4e00\u4e9b\u6280\u5de7\u6216\u8005\u516c\u5f0f\u6765\u64cd\u4f5c\u7740\u8272\u5668\uff0c\u8fbe\u5230\u771f\u5b9e\u7684\u5149\u7167\u6548\u679c\u3002\u8fd9\u518d\u4e00\u6b21\u5411\u4f60\u5c55\u793a\u4e86\u7740\u8272\u5668\u7684\u5a01\u529b\u3002\u7740\u8272\u5668\u662f\u975e\u5e38\u7075\u6d3b\u7684\uff0c\u4f60\u4e5f\u4eb2\u773c\u89c1\u8bc1\u4e86\u6211\u4eec\u4ec5\u4ec5\u4f7f\u7528\u4e00\u4e9b3D\u5411\u91cf\u548c\u53ef\u914d\u7f6e\u7684\u53d8\u91cf\u5c31\u80fd\u591f\u521b\u9020\u51fa\u60ca\u4eba\u7684\u56fe\u50cf\u8fd9\u4e00\u70b9\u3002 \u5728\u524d\u9762\u7684\u51e0\u4e2a\u6559\u7a0b\u4e2d\uff0c\u4f60\u5b66\u4e60\u4e86\u989c\u8272\u3001\u98ce\u6c0f\u5149\u7167\u6a21\u578b\uff08\u5305\u62ec\u73af\u5883\u5149\u7167\u3001\u6f2b\u53cd\u5c04\u5149\u7167\u548c\u955c\u9762\u5149\u7167\uff09\u3001\u7269\u4f53\u7684\u6750\u8d28\u3001\u53ef\u914d\u7f6e\u7684\u5149\u7167\u5c5e\u6027\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u8d34\u56fe\u3001\u4e0d\u540c\u79cd\u7c7b\u7684\u5149\uff0c\u5e76\u4e14\u5b66\u4e60\u4e86\u600e\u6837\u5c06\u6240\u6709\u6240\u5b66\u77e5\u8bc6\u878d\u4f1a\u8d2f\u901a\uff0c\u7ed3\u5408\u5230\u4e00\u4e2a\u5b8c\u5168\u7167\u660e\u7684\u573a\u666f\u4e2d\u3002\u8bb0\u5f97\u53bb\u5b9e\u9a8c\u4e00\u4e0b\u4e0d\u540c\u7684\u5149\u7167\u3001\u6750\u8d28\u989c\u8272\u3001\u5149\u7167\u5c5e\u6027\uff0c\u5e76\u4e14\u8bd5\u7740\u5229\u7528\u4f60\u65e0\u7a77\u7684\u521b\u9020\u529b\u521b\u5efa\u81ea\u5df1\u7684\u73af\u5883\u3002 \u5728 \u4e0b\u4e00\u8282 \u5f53\u4e2d\uff0c\u6211\u4eec\u5728\u6211\u4eec\u7684\u573a\u666f\u5f53\u4e2d\u52a0\u5165\u66f4\u9ad8\u7ea7\u7684\u51e0\u4f55\u5f62\u72b6\uff0c\u8fd9\u4e9b\u5f62\u72b6\u5c06\u4f1a\u5728\u6211\u4eec\u4e4b\u524d\u8ba8\u8bba\u8fc7\u7684\u5149\u7167\u6a21\u578b\u4e2d\u975e\u5e38\u597d\u770b\u3002","title":"\u590d\u4e60"},{"location":"02%20Lighting/07%20Review/#_2","text":"\u989c\u8272\u5411\u91cf(Color Vector) \uff1a\u4e00\u4e2a\u901a\u8fc7\u7ea2\u7eff\u84dd(RGB)\u5206\u91cf\u7684\u7ec4\u5408\u63cf\u7ed8\u5927\u90e8\u5206\u771f\u5b9e\u989c\u8272\u7684\u5411\u91cf\u3002\u4e00\u4e2a\u7269\u4f53\u7684\u989c\u8272\u5b9e\u9645\u4e0a\u662f\u8be5\u7269\u4f53\u6240\u4e0d\u80fd\u5438\u6536\u7684\u53cd\u5c04\u989c\u8272\u5206\u91cf\u3002 \u98ce\u6c0f\u5149\u7167\u6a21\u578b(Phong Lighting Model) \uff1a\u4e00\u4e2a\u901a\u8fc7\u8ba1\u7b97\u73af\u5883\u5149\uff0c\u6f2b\u53cd\u5c04\uff0c\u548c\u955c\u9762\u5149\u5206\u91cf\u7684\u503c\u6765\u8fd1\u4f3c\u771f\u5b9e\u5149\u7167\u7684\u6a21\u578b\u3002 \u73af\u5883\u5149\u7167(Ambient Lighting) \uff1a\u901a\u8fc7\u7ed9\u6bcf\u4e2a\u6ca1\u6709\u88ab\u5149\u7167\u7684\u7269\u4f53\u5f88\u5c0f\u7684\u4eae\u5ea6\uff0c\u4f7f\u5176\u4e0d\u662f\u5b8c\u5168\u9ed1\u6697\u7684\uff0c\u4ece\u800c\u5bf9\u5168\u5c40\u5149\u7167\u8fdb\u884c\u8fd1\u4f3c\u3002 \u6f2b\u53cd\u5c04\u7740\u8272(Diffuse Shading) \uff1a\u4e00\u4e2a\u9876\u70b9/\u7247\u6bb5\u4e0e\u5149\u7ebf\u65b9\u5411\u8d8a\u63a5\u8fd1\uff0c\u5149\u7167\u4f1a\u8d8a\u5f3a\u3002\u4f7f\u7528\u4e86\u6cd5\u5411\u91cf\u6765\u8ba1\u7b97\u89d2\u5ea6\u3002 \u6cd5\u5411\u91cf(Normal Vector) \uff1a\u4e00\u4e2a\u5782\u76f4\u4e8e\u5e73\u9762\u7684\u5355\u4f4d\u5411\u91cf\u3002 \u6cd5\u7ebf\u77e9\u9635(Normal Matrix) \uff1a\u4e00\u4e2a3x3\u77e9\u9635\uff0c\u6216\u8005\u8bf4\u662f\u6ca1\u6709\u5e73\u79fb\u7684\u6a21\u578b\uff08\u6216\u8005\u6a21\u578b-\u89c2\u5bdf\uff09\u77e9\u9635\u3002\u5b83\u4e5f\u88ab\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4fee\u6539\uff08\u9006\u8f6c\u7f6e\uff09\uff0c\u4ece\u800c\u5728\u5e94\u7528\u975e\u7edf\u4e00\u7f29\u653e\u65f6\uff0c\u4fdd\u6301\u6cd5\u5411\u91cf\u671d\u5411\u6b63\u786e\u7684\u65b9\u5411\u3002\u5426\u5219\u6cd5\u5411\u91cf\u4f1a\u5728\u4f7f\u7528\u975e\u7edf\u4e00\u7f29\u653e\u65f6\u88ab\u626d\u66f2\u3002 \u955c\u9762\u5149\u7167(Specular Lighting) \uff1a\u5f53\u89c2\u5bdf\u8005\u89c6\u7ebf\u9760\u8fd1\u5149\u6e90\u5728\u8868\u9762\u7684\u53cd\u5c04\u7ebf\u65f6\u4f1a\u663e\u793a\u7684\u955c\u9762\u9ad8\u5149\u3002\u955c\u9762\u5149\u7167\u662f\u7531\u89c2\u5bdf\u8005\u7684\u65b9\u5411\uff0c\u5149\u6e90\u7684\u65b9\u5411\u548c\u8bbe\u5b9a\u9ad8\u5149\u5206\u6563\u91cf\u7684\u53cd\u5149\u5ea6\u503c\u4e09\u4e2a\u91cf\u5171\u540c\u51b3\u5b9a\u7684\u3002 \u98ce\u6c0f\u7740\u8272(Phong Shading) \uff1a\u98ce\u6c0f\u5149\u7167\u6a21\u578b\u5e94\u7528\u5728\u7247\u6bb5\u7740\u8272\u5668\u3002 Gouraud\u7740\u8272(Gouraud shading) \uff1a\u98ce\u6c0f\u5149\u7167\u6a21\u578b\u5e94\u7528\u5728\u9876\u70b9\u7740\u8272\u5668\u4e0a\u3002\u5728\u4f7f\u7528\u5f88\u5c11\u6570\u91cf\u7684\u9876\u70b9\u65f6\u4f1a\u4ea7\u751f\u660e\u663e\u7684\u7455\u75b5\u3002\u4f1a\u5f97\u5230\u6548\u7387\u63d0\u5347\u4f46\u662f\u635f\u5931\u4e86\u89c6\u89c9\u8d28\u91cf\u3002 GLSL\u7ed3\u6784\u4f53(GLSL struct) \uff1a\u4e00\u4e2a\u7c7b\u4f3c\u4e8eC\u7684\u7ed3\u6784\u4f53\uff0c\u7528\u4f5c\u7740\u8272\u5668\u53d8\u91cf\u7684\u5bb9\u5668\u3002\u5927\u90e8\u5206\u65f6\u95f4\u7528\u6765\u7ba1\u7406\u8f93\u5165/\u8f93\u51fa/uniform\u3002 \u6750\u8d28(Material) \uff1a\u4e00\u4e2a\u7269\u4f53\u53cd\u5c04\u7684\u73af\u5883\u5149\uff0c\u6f2b\u53cd\u5c04\uff0c\u955c\u9762\u5149\u989c\u8272\u3002\u8fd9\u4e9b\u4e1c\u897f\u8bbe\u5b9a\u4e86\u7269\u4f53\u6240\u62e5\u6709\u7684\u989c\u8272\u3002 \u5149\u7167\u5c5e\u6027(Light(properties)) \uff1a\u4e00\u4e2a\u5149\u7684\u73af\u5883\u5149\uff0c\u6f2b\u53cd\u5c04\uff0c\u955c\u9762\u5149\u7684\u5f3a\u5ea6\u3002\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u989c\u8272\u503c\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u98ce\u6c0f\u5206\u91cf(Phong Component)\u5b9a\u4e49\u5149\u6e90\u53d1\u51fa\u7684\u989c\u8272/\u5f3a\u5ea6\u3002 \u6f2b\u53cd\u5c04\u8d34\u56fe(Diffuse Map) \uff1a\u4e00\u4e2a\u8bbe\u5b9a\u4e86\u6bcf\u4e2a\u7247\u6bb5\u4e2d\u6f2b\u53cd\u5c04\u989c\u8272\u7684\u7eb9\u7406\u56fe\u7247\u3002 \u955c\u9762\u5149\u8d34\u56fe(Specular Map) \uff1a\u4e00\u4e2a\u8bbe\u5b9a\u4e86\u6bcf\u4e00\u4e2a\u7247\u6bb5\u7684\u955c\u9762\u5149\u5f3a\u5ea6/\u989c\u8272\u7684\u7eb9\u7406\u8d34\u56fe\u3002\u4ec5\u5728\u7269\u4f53\u7684\u7279\u5b9a\u533a\u57df\u663e\u793a\u955c\u9762\u9ad8\u5149\u3002 \u5b9a\u5411\u5149(Directional Light) \uff1a\u53ea\u6709\u65b9\u5411\u7684\u5149\u6e90\u3002\u5b83\u88ab\u5efa\u6a21\u4e3a\u65e0\u9650\u8ddd\u79bb\uff0c\u8fd9\u4f7f\u5f97\u5b83\u7684\u6240\u6709\u5149\u7ebf\u770b\u8d77\u6765\u90fd\u662f\u5e73\u884c\u7684\uff0c\u56e0\u6b64\u5b83\u7684\u65b9\u5411\u77e2\u91cf\u5728\u6574\u4e2a\u573a\u666f\u4e2d\u4fdd\u6301\u4e0d\u53d8\u3002 \u70b9\u5149\u6e90(Point Light) \uff1a\u4e00\u4e2a\u5728\u573a\u666f\u4e2d\u6709\u4f4d\u7f6e\u7684\uff0c\u5149\u7ebf\u9010\u6e10\u8870\u51cf\u7684\u5149\u6e90\u3002 \u8870\u51cf(Attenuation) \uff1a\u5149\u968f\u7740\u8ddd\u79bb\u51cf\u5c11\u5f3a\u5ea6\u51cf\u5c0f\u7684\u8fc7\u7a0b\uff0c\u901a\u5e38\u4f7f\u7528\u5728\u70b9\u5149\u6e90\u548c\u805a\u5149\u4e0b\u3002 \u805a\u5149(Spotlight) \uff1a\u4e00\u4e2a\u88ab\u5b9a\u4e49\u4e3a\u5728\u67d0\u4e00\u4e2a\u65b9\u5411\u4e0a\u7684\u9525\u5f62\u7684\u5149\u6e90\u3002 \u624b\u7535\u7b52(Flashlight) \uff1a\u4e00\u4e2a\u6446\u653e\u5728\u89c2\u5bdf\u8005\u89c6\u89d2\u7684\u805a\u5149\u3002 GLSL Uniform\u6570\u7ec4(GLSL Uniform Array) \uff1a\u4e00\u4e2auniform\u503c\u6570\u7ec4\u3002\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u548cC\u8bed\u8a00\u6570\u7ec4\u5927\u81f4\u4e00\u6837\uff0c\u53ea\u662f\u4e0d\u80fd\u52a8\u6001\u5206\u914d\u5185\u5b58\u3002","title":"\u8bcd\u6c47\u8868"},{"location":"03%20Model%20Loading/01%20Assimp/","text":"Assimp \u539f\u6587 Assimp \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Cocoonshu, Krasjet, Geequlim \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u5230\u76ee\u524d\u4e3a\u6b62\u7684\u6240\u6709\u573a\u666f\u4e2d\uff0c\u6211\u4eec\u4e00\u76f4\u90fd\u5728\u6ee5\u7528\u6211\u4eec\u7684\u7bb1\u5b50\u670b\u53cb\uff0c\u4f46\u65f6\u95f4\u4e45\u4e86\u751a\u81f3\u662f\u6211\u4eec\u6700\u597d\u7684\u670b\u53cb\u4e5f\u4f1a\u611f\u5230\u65e0\u804a\u3002\u5728\u65e5\u5e38\u7684\u56fe\u5f62\u7a0b\u5e8f\u4e2d\uff0c\u901a\u5e38\u90fd\u4f1a\u4f7f\u7528\u975e\u5e38\u590d\u6742\u4e14\u597d\u73a9\u7684\u6a21\u578b\uff0c\u5b83\u4eec\u6bd4\u9759\u6001\u7684\u7bb1\u5b50\u8981\u597d\u770b\u591a\u4e86\u3002\u7136\u800c\uff0c\u548c\u7bb1\u5b50\u5bf9\u8c61\u4e0d\u540c\uff0c\u6211\u4eec\u4e0d\u592a\u80fd\u591f\u5bf9\u50cf\u662f\u623f\u5b50\u3001\u6c7d\u8f66\u6216\u8005\u4eba\u5f62\u89d2\u8272\u8fd9\u6837\u7684\u590d\u6742\u5f62\u72b6\u624b\u5de5\u5b9a\u4e49\u6240\u6709\u7684\u9876\u70b9\u3001\u6cd5\u7ebf\u548c\u7eb9\u7406\u5750\u6807\u3002\u6211\u4eec\u60f3\u8981\u7684\u662f\u5c06\u8fd9\u4e9b\u6a21\u578b(Model) \u5bfc\u5165 (Import)\u5230\u7a0b\u5e8f\u5f53\u4e2d\u3002\u6a21\u578b\u901a\u5e38\u90fd\u75313D\u827a\u672f\u5bb6\u5728 Blender \u3001 3DS Max \u6216\u8005 Maya \u8fd9\u6837\u7684\u5de5\u5177\u4e2d\u7cbe\u5fc3\u5236\u4f5c\u3002 \u8fd9\u4e9b\u6240\u8c13\u7684 3D\u5efa\u6a21\u5de5\u5177 (3D Modeling Tool)\u53ef\u4ee5\u8ba9\u827a\u672f\u5bb6\u521b\u5efa\u590d\u6742\u7684\u5f62\u72b6\uff0c\u5e76\u4f7f\u7528\u4e00\u79cd\u53eb\u505a UV\u6620\u5c04 (uv-mapping)\u7684\u624b\u6bb5\u6765\u5e94\u7528\u8d34\u56fe\u3002\u8fd9\u4e9b\u5de5\u5177\u5c06\u4f1a\u5728\u5bfc\u51fa\u5230\u6a21\u578b\u6587\u4ef6\u7684\u65f6\u5019\u81ea\u52a8\u751f\u6210\u6240\u6709\u7684\u9876\u70b9\u5750\u6807\u3001\u9876\u70b9\u6cd5\u7ebf\u4ee5\u53ca\u7eb9\u7406\u5750\u6807\u3002\u8fd9\u6837\u5b50\u827a\u672f\u5bb6\u4eec\u5373\u4f7f\u4e0d\u4e86\u89e3\u56fe\u5f62\u6280\u672f\u7ec6\u8282\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u80fd\u62e5\u6709\u4e00\u5957\u5f3a\u5927\u7684\u5de5\u5177\u6765\u6784\u5efa\u9ad8\u54c1\u8d28\u7684\u6a21\u578b\u4e86\u3002\u6240\u6709\u7684\u6280\u672f\u7ec6\u8282\u90fd\u9690\u85cf\u5728\u4e86\u5bfc\u51fa\u7684\u6a21\u578b\u6587\u4ef6\u4e2d\u3002\u4f46\u662f\uff0c\u4f5c\u4e3a\u56fe\u5f62\u5f00\u53d1\u8005\uff0c\u6211\u4eec\u5c31 \u5fc5\u987b \u8981\u4e86\u89e3\u8fd9\u4e9b\u6280\u672f\u7ec6\u8282\u4e86\u3002 \u6240\u4ee5\uff0c\u6211\u4eec\u7684\u5de5\u4f5c\u5c31\u662f\u89e3\u6790\u8fd9\u4e9b\u5bfc\u51fa\u7684\u6a21\u578b\u6587\u4ef6\u4ee5\u53ca\u63d0\u53d6\u6240\u6709\u6709\u7528\u7684\u4fe1\u606f\uff0c\u5c06\u5b83\u4eec\u50a8\u5b58\u4e3aOpenGL\u80fd\u591f\u7406\u89e3\u7684\u683c\u5f0f\u3002\u4e00\u4e2a\u5f88\u5e38\u89c1\u7684\u95ee\u9898\u662f\uff0c\u6a21\u578b\u7684\u6587\u4ef6\u683c\u5f0f\u6709\u5f88\u591a\u79cd\uff0c\u6bcf\u4e00\u79cd\u90fd\u4f1a\u4ee5\u5b83\u4eec\u81ea\u5df1\u7684\u65b9\u5f0f\u6765\u5bfc\u51fa\u6a21\u578b\u6570\u636e\u3002\u50cf\u662f Wavefront\u7684.obj \u8fd9\u6837\u7684\u6a21\u578b\u683c\u5f0f\uff0c\u53ea\u5305\u542b\u4e86\u6a21\u578b\u6570\u636e\u4ee5\u53ca\u6750\u8d28\u4fe1\u606f\uff0c\u50cf\u662f\u6a21\u578b\u989c\u8272\u548c\u6f2b\u53cd\u5c04/\u955c\u9762\u5149\u8d34\u56fe\u3002\u800c\u4ee5XML\u4e3a\u57fa\u7840\u7684 Collada\u6587\u4ef6\u683c\u5f0f \u5219\u975e\u5e38\u7684\u4e30\u5bcc\uff0c\u5305\u542b\u6a21\u578b\u3001\u5149\u7167\u3001\u591a\u79cd\u6750\u8d28\u3001\u52a8\u753b\u6570\u636e\u3001\u6444\u50cf\u673a\u3001\u5b8c\u6574\u7684\u573a\u666f\u4fe1\u606f\u7b49\u7b49\u3002Wavefront\u7684.obj\u683c\u5f0f\u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u6613\u4e8e\u89e3\u6790\u7684\u6a21\u578b\u683c\u5f0f\u3002\u5efa\u8bae\u81f3\u5c11\u53bbWavefront\u7684wiki\u9875\u9762\u4e0a\u770b\u770b\u6587\u4ef6\u683c\u5f0f\u7684\u4fe1\u606f\u662f\u5982\u4f55\u5c01\u88c5\u7684\u3002\u8fd9\u5e94\u8be5\u80fd\u8ba9\u4f60\u8ba4\u8bc6\u5230\u6a21\u578b\u6587\u4ef6\u7684\u57fa\u672c\u7ed3\u6784\u3002 \u603b\u800c\u8a00\u4e4b\uff0c\u4e0d\u540c\u79cd\u7c7b\u7684\u6587\u4ef6\u683c\u5f0f\u6709\u5f88\u591a\uff0c\u5b83\u4eec\u4e4b\u95f4\u901a\u5e38\u5e76\u6ca1\u6709\u4e00\u4e2a\u901a\u7528\u7684\u7ed3\u6784\u3002\u6240\u4ee5\u5982\u679c\u6211\u4eec\u60f3\u4ece\u8fd9\u4e9b\u6587\u4ef6\u683c\u5f0f\u4e2d\u5bfc\u5165\u6a21\u578b\u7684\u8bdd\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u53bb\u81ea\u5df1\u5bf9\u6bcf\u4e00\u79cd\u9700\u8981\u5bfc\u5165\u7684\u6587\u4ef6\u683c\u5f0f\u5199\u4e00\u4e2a\u5bfc\u5165\u5668\u3002\u5f88\u5e78\u8fd0\u7684\u662f\uff0c\u6b63\u597d\u6709\u4e00\u4e2a\u5e93\u4e13\u95e8\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002 \u6a21\u578b\u52a0\u8f7d\u5e93 \u4e00\u4e2a\u975e\u5e38\u6d41\u884c\u7684\u6a21\u578b\u5bfc\u5165\u5e93\u662f Assimp \uff0c\u5b83\u662f Open Asset Import Library \uff08\u5f00\u653e\u7684\u8d44\u4ea7\u5bfc\u5165\u5e93\uff09\u7684\u7f29\u5199\u3002Assimp\u80fd\u591f\u5bfc\u5165\u5f88\u591a\u79cd\u4e0d\u540c\u7684\u6a21\u578b\u6587\u4ef6\u683c\u5f0f\uff08\u5e76\u4e5f\u80fd\u591f\u5bfc\u51fa\u90e8\u5206\u7684\u683c\u5f0f\uff09\uff0c\u5b83\u4f1a\u5c06\u6240\u6709\u7684\u6a21\u578b\u6570\u636e\u52a0\u8f7d\u81f3Assimp\u7684\u901a\u7528\u6570\u636e\u7ed3\u6784\u4e2d\u3002\u5f53Assimp\u52a0\u8f7d\u5b8c\u6a21\u578b\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u4eceAssimp\u7684\u6570\u636e\u7ed3\u6784\u4e2d\u63d0\u53d6\u6211\u4eec\u6240\u9700\u7684\u6240\u6709\u6570\u636e\u4e86\u3002\u7531\u4e8eAssimp\u7684\u6570\u636e\u7ed3\u6784\u4fdd\u6301\u4e0d\u53d8\uff0c\u4e0d\u8bba\u5bfc\u5165\u7684\u662f\u4ec0\u4e48\u79cd\u7c7b\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u5b83\u90fd\u80fd\u591f\u5c06\u6211\u4eec\u4ece\u8fd9\u4e9b\u4e0d\u540c\u7684\u6587\u4ef6\u683c\u5f0f\u4e2d\u62bd\u8c61\u51fa\u6765\uff0c\u7528\u540c\u4e00\u79cd\u65b9\u5f0f\u8bbf\u95ee\u6211\u4eec\u9700\u8981\u7684\u6570\u636e\u3002 \u5f53\u4f7f\u7528Assimp\u5bfc\u5165\u4e00\u4e2a\u6a21\u578b\u7684\u65f6\u5019\uff0c\u5b83\u901a\u5e38\u4f1a\u5c06\u6574\u4e2a\u6a21\u578b\u52a0\u8f7d\u8fdb\u4e00\u4e2a \u573a\u666f (Scene)\u5bf9\u8c61\uff0c\u5b83\u4f1a\u5305\u542b\u5bfc\u5165\u7684\u6a21\u578b/\u573a\u666f\u4e2d\u7684\u6240\u6709\u6570\u636e\u3002Assimp\u4f1a\u5c06\u573a\u666f\u8f7d\u5165\u4e3a\u4e00\u7cfb\u5217\u7684\u8282\u70b9(Node)\uff0c\u6bcf\u4e2a\u8282\u70b9\u5305\u542b\u4e86\u573a\u666f\u5bf9\u8c61\u4e2d\u6240\u50a8\u5b58\u6570\u636e\u7684\u7d22\u5f15\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u53ef\u4ee5\u6709\u4efb\u610f\u6570\u91cf\u7684\u5b50\u8282\u70b9\u3002Assimp\u6570\u636e\u7ed3\u6784\u7684\uff08\u7b80\u5316\uff09\u6a21\u578b\u5982\u4e0b\uff1a \u548c\u6750\u8d28\u548c\u7f51\u683c(Mesh)\u4e00\u6837\uff0c\u6240\u6709\u7684\u573a\u666f/\u6a21\u578b\u6570\u636e\u90fd\u5305\u542b\u5728 Scene \u5bf9\u8c61\u4e2d\u3002 Scene \u5bf9\u8c61\u4e5f\u5305\u542b\u4e86\u573a\u666f\u6839\u8282\u70b9\u7684\u5f15\u7528\u3002 \u573a\u666f\u7684 Root node \uff08\u6839\u8282\u70b9\uff09\u53ef\u80fd\u5305\u542b\u5b50\u8282\u70b9\uff08\u548c\u5176\u5b83\u7684\u8282\u70b9\u4e00\u6837\uff09\uff0c\u5b83\u4f1a\u6709\u4e00\u7cfb\u5217\u6307\u5411\u573a\u666f\u5bf9\u8c61\u4e2d mMeshes \u6570\u7ec4\u4e2d\u50a8\u5b58\u7684\u7f51\u683c\u6570\u636e\u7684\u7d22\u5f15\u3002 Scene \u4e0b\u7684 mMeshes \u6570\u7ec4\u50a8\u5b58\u4e86\u771f\u6b63\u7684 Mesh \u5bf9\u8c61\uff0c\u8282\u70b9\u4e2d\u7684 mMeshes \u6570\u7ec4\u4fdd\u5b58\u7684\u53ea\u662f\u573a\u666f\u4e2d\u7f51\u683c\u6570\u7ec4\u7684\u7d22\u5f15\u3002 \u4e00\u4e2a Mesh \u5bf9\u8c61\u672c\u8eab\u5305\u542b\u4e86\u6e32\u67d3\u6240\u9700\u8981\u7684\u6240\u6709\u76f8\u5173\u6570\u636e\uff0c\u50cf\u662f\u9876\u70b9\u4f4d\u7f6e\u3001\u6cd5\u5411\u91cf\u3001\u7eb9\u7406\u5750\u6807\u3001\u9762(Face)\u548c\u7269\u4f53\u7684\u6750\u8d28\u3002 \u4e00\u4e2a\u7f51\u683c\u5305\u542b\u4e86\u591a\u4e2a\u9762\u3002 Face \u4ee3\u8868\u7684\u662f\u7269\u4f53\u7684\u6e32\u67d3\u56fe\u5143(Primitive)\uff08\u4e09\u89d2\u5f62\u3001\u65b9\u5f62\u3001\u70b9\uff09\u3002\u4e00\u4e2a\u9762\u5305\u542b\u4e86\u7ec4\u6210\u56fe\u5143\u7684\u9876\u70b9\u7684\u7d22\u5f15\u3002\u7531\u4e8e\u9876\u70b9\u548c\u7d22\u5f15\u662f\u5206\u5f00\u7684\uff0c\u4f7f\u7528\u4e00\u4e2a\u7d22\u5f15\u7f13\u51b2\u6765\u6e32\u67d3\u662f\u975e\u5e38\u7b80\u5355\u7684\uff08\u89c1 \u4f60\u597d\uff0c\u4e09\u89d2\u5f62 \uff09\u3002 \u6700\u540e\uff0c\u4e00\u4e2a\u7f51\u683c\u4e5f\u5305\u542b\u4e86\u4e00\u4e2a Material \u5bf9\u8c61\uff0c\u5b83\u5305\u542b\u4e86\u4e00\u4e9b\u51fd\u6570\u80fd\u8ba9\u6211\u4eec\u83b7\u53d6\u7269\u4f53\u7684\u6750\u8d28\u5c5e\u6027\uff0c\u6bd4\u5982\u8bf4\u989c\u8272\u548c\u7eb9\u7406\u8d34\u56fe\uff08\u6bd4\u5982\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u8d34\u56fe\uff09\u3002 \u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u5c06\u4e00\u4e2a\u7269\u4f53\u52a0\u8f7d\u5230 Scene \u5bf9\u8c61\u4e2d\uff0c\u904d\u5386\u8282\u70b9\uff0c\u83b7\u53d6\u5bf9\u5e94\u7684 Mesh \u5bf9\u8c61\uff08\u6211\u4eec\u9700\u8981\u9012\u5f52\u641c\u7d22\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff09\uff0c\u5e76\u5904\u7406\u6bcf\u4e2a Mesh \u5bf9\u8c61\u6765\u83b7\u53d6\u9876\u70b9\u6570\u636e\u3001\u7d22\u5f15\u4ee5\u53ca\u5b83\u7684\u6750\u8d28\u5c5e\u6027\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u662f\u4e00\u7cfb\u5217\u7684\u7f51\u683c\u6570\u636e\uff0c\u6211\u4eec\u4f1a\u5c06\u5b83\u4eec\u5305\u542b\u5728\u4e00\u4e2a Model \u5bf9\u8c61\u4e2d\u3002 Important \u7f51\u683c \u5f53\u4f7f\u7528\u5efa\u6a21\u5de5\u5177\u5bf9\u7269\u4f53\u5efa\u6a21\u7684\u65f6\u5019\uff0c\u827a\u672f\u5bb6\u901a\u5e38\u4e0d\u4f1a\u7528\u5355\u4e2a\u5f62\u72b6\u521b\u5efa\u51fa\u6574\u4e2a\u6a21\u578b\u3002\u901a\u5e38\u6bcf\u4e2a\u6a21\u578b\u90fd\u7531\u51e0\u4e2a\u5b50\u6a21\u578b/\u5f62\u72b6\u7ec4\u5408\u800c\u6210\u3002\u7ec4\u5408\u6a21\u578b\u7684\u6bcf\u4e2a\u5355\u72ec\u7684\u5f62\u72b6\u5c31\u53eb\u505a\u4e00\u4e2a \u7f51\u683c (Mesh)\u3002\u6bd4\u5982\u8bf4\u6709\u4e00\u4e2a\u4eba\u5f62\u7684\u89d2\u8272\uff1a\u827a\u672f\u5bb6\u901a\u5e38\u4f1a\u5c06\u5934\u90e8\u3001\u56db\u80a2\u3001\u8863\u670d\u3001\u6b66\u5668\u5efa\u6a21\u4e3a\u5206\u5f00\u7684\u7ec4\u4ef6\uff0c\u5e76\u5c06\u8fd9\u4e9b\u7f51\u683c\u7ec4\u5408\u800c\u6210\u7684\u7ed3\u679c\u8868\u73b0\u4e3a\u6700\u7ec8\u7684\u6a21\u578b\u3002\u4e00\u4e2a\u7f51\u683c\u662f\u6211\u4eec\u5728OpenGL\u4e2d\u7ed8\u5236\u7269\u4f53\u6240\u9700\u7684\u6700\u5c0f\u5355\u4f4d\uff08\u9876\u70b9\u6570\u636e\u3001\u7d22\u5f15\u548c\u6750\u8d28\u5c5e\u6027\uff09\u3002\u4e00\u4e2a\u6a21\u578b\uff08\u901a\u5e38\uff09\u4f1a\u5305\u62ec\u591a\u4e2a\u7f51\u683c\u3002 \u5728 \u4e0b\u4e00\u8282 \u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u6211\u4eec\u81ea\u5df1\u7684 Model \u548c Mesh \u7c7b\u6765\u52a0\u8f7d\u5e76\u4f7f\u7528\u521a\u521a\u4ecb\u7ecd\u7684\u7ed3\u6784\u50a8\u5b58\u5bfc\u5165\u540e\u7684\u6a21\u578b\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u7ed8\u5236\u4e00\u4e2a\u6a21\u578b\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5c06\u6574\u4e2a\u6a21\u578b\u6e32\u67d3\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u53ea\u9700\u8981\u6e32\u67d3\u7ec4\u6210\u6a21\u578b\u7684\u6bcf\u4e2a\u72ec\u7acb\u7684\u7f51\u683c\u5c31\u53ef\u4ee5\u4e86\u3002\u7136\u800c\uff0c\u5728\u6211\u4eec\u5f00\u59cb\u5bfc\u5165\u6a21\u578b\u4e4b\u524d\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u5c06Assimp\u5305\u542b\u5230\u6211\u4eec\u7684\u5de5\u7a0b\u5f53\u4e2d\u3002 \u6784\u5efaAssimp \u4f60\u53ef\u4ee5\u5728Assimp\u7684 GitHub\u9875\u9762 \u4e2d\u9009\u62e9\u76f8\u5e94\u7684\u7248\u672c\u3002\u672c\u6587\u4f7f\u7528\u7684Assimp\u6700\u9ad8\u7248\u672c\u4e3a3.1.1\u3002\u6211\u4eec\u5efa\u8bae\u4f60\u81ea\u5df1\u7f16\u8bd1Assimp\u5e93\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u9884\u7f16\u8bd1\u5e93\u5e76\u4e0d\u4e00\u5b9a\u80fd\u9002\u7528\u4e8e\u6240\u6709\u7cfb\u7edf\u3002\u5982\u679c\u4f60\u5fd8\u8bb0\u5982\u4f55\u4f7f\u7528CMake\u81ea\u5df1\u7f16\u8bd1\u4e00\u4e2a\u5e93\u7684\u8bdd\uff0c\u53ef\u4ee5\u590d\u4e60 \u521b\u5efa\u7a97\u53e3 \u5c0f\u8282\u3002 \u6784\u5efaAssimp\u65f6\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4f1a\u5c06\u5b83\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u5217\u5728\u8fd9\u91cc\uff0c\u4fbf\u4e8e\u5927\u5bb6\u6392\u9664\u9519\u8bef\uff1a CMake\u5728\u8bfb\u53d6\u914d\u7f6e\u5217\u8868\u65f6\uff0c\u4e0d\u65ad\u62a5\u51faDirectX\u5e93\u4e22\u5931\u7684\u9519\u8bef\u3002\u62a5\u9519\u5982\u4e0b\uff1a Could not locate DirectX CMake Error at cmake-modules/FindPkgMacros.cmake:110 (message): Required library DirectX not found! Install the library (including dev packages) and try again. If the library is already installed, set the missing variables manually in cmake. \u5982\u679c\u4f60\u4e4b\u524d\u6ca1\u5b89\u88c5\u8fc7\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5b89\u88c5DirectX SDK\u3002\u4f60\u53ef\u4ee5\u4ece \u8fd9\u91cc \u4e0b\u8f7dSDK\u3002 \u5b89\u88c5DirectX SDK\u65f6\uff0c\u53ef\u80fd\u9047\u5230\u4e00\u4e2a\u9519\u8bef\u7801\u4e3a s1023 \u7684\u9519\u8bef\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bf7\u5728\u5b89\u88c5SDK\u4e4b\u524d\u5148\u5378\u8f7dC++ Redistributable package(s)\u3002 \u4e00\u65e6\u914d\u7f6e\u5b8c\u6210\uff0c\u4f60\u5c31\u53ef\u4ee5\u751f\u6210\u89e3\u51b3\u65b9\u6848\u6587\u4ef6\u4e86\uff0c\u6253\u5f00\u89e3\u51b3\u65b9\u6848\u6587\u4ef6\u5e76\u7f16\u8bd1Assimp\u5e93\uff08\u53ef\u4ee5\u7f16\u8bd1\u4e3aDebug\u7248\u672c\u4e5f\u53ef\u4ee5\u7f16\u8bd1\u4e3aRelease\u7248\u672c\uff0c\u53ea\u8981\u80fd\u5de5\u4f5c\u5c31\u884c\uff09\u3002\u56e0\u4e3a\u6240\u6709\u7684LearnOpenGL\u4ee3\u7801\u90fd\u662f64\u4f4d\u9879\u76ee\uff0c\u6240\u4ee5\u8bf7\u786e\u4fdd\u572864\u4f4d\u4e0b\u7f16\u8bd1\u8fd9\u4e2a\u5e93\u3002 \u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\u6784\u5efa\u7684Assimp\u662f\u4e00\u4e2a\u52a8\u6001\u5e93(Dynamic Library)\uff0c\u6240\u4ee5\u6240\u751f\u6210\u7684 assimp.dll \u6587\u4ef6\uff08\u6587\u4ef6\u540d\u53ef\u80fd\u5e26\u6709\u540e\u7f00\uff09\u9700\u8981\u968f\u6211\u4eec\u7684\u7a0b\u5e8f\u53ef\u6267\u884c\u6587\u4ef6\u4e00\u5e76\u5305\u542b\uff0c\u4f60\u53ef\u4ee5\u7b80\u5355\u5730\u5c06DLL\u590d\u5236\u5230\u6211\u4eec\u7a0b\u5e8f\u53ef\u6267\u884c\u6587\u4ef6\u7684\u540c\u4e00\u76ee\u5f55\u4e2d\u3002 Assimp\u7f16\u8bd1\u4e4b\u540e\uff0c\u751f\u6210\u7684\u5e93\u548cDLL\u6587\u4ef6\u4f4d\u4e8e code/Debug \u6216\u8005 code/Release \u6587\u4ef6\u5939\u4e2d\u3002\u63a5\u7740\u628a\u7f16\u8bd1\u597d\u7684LIB\u6587\u4ef6\u548cDLL\u6587\u4ef6\u62f7\u8d1d\u5230\u5de5\u7a0b\u7684\u76f8\u5e94\u76ee\u5f55\u4e0b\uff0c\u7136\u540e\u5728\u89e3\u51b3\u65b9\u6848\u4e2d\u94fe\u63a5\u5b83\u4eec\u3002\u5e76\u4e14\u8bb0\u5f97\u628aAssimp\u7684\u5934\u6587\u4ef6\u4e5f\u590d\u5236\u5230\u4f60\u7684 include \u76ee\u5f55\u4e2d\uff08\u5934\u6587\u4ef6\u53ef\u4ee5\u5728\u4e0b\u8f7d\u7684Assimp\u6587\u4ef6\u4e2d\u7684 include \u76ee\u5f55\u91cc\u627e\u5230\uff09\u3002 \u5982\u679c\u4f60\u4ecd\u9047\u5230\u4e86\u672a\u62a5\u544a\u7684\u9519\u8bef\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u4e2d\u5bfb\u6c42\u5e2e\u52a9\u3002 \u73b0\u5728\uff0c\u4f60\u5e94\u8be5\u5df2\u7ecf\u7f16\u8bd1\u5b8cAssimp\u5e93\u5e76\u5c06\u5b83\u94fe\u63a5\u5230\u4f60\u7684\u7a0b\u5e8f\u4e2d\u4e86\u3002\u4e0b\u4e00\u6b65\uff1a \u5bfc\u5165 \u6f02\u4eae\u76843D\u7269\u4f53\uff01","title":"Assimp"},{"location":"03%20Model%20Loading/01%20Assimp/#assimp","text":"\u539f\u6587 Assimp \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Cocoonshu, Krasjet, Geequlim \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u5230\u76ee\u524d\u4e3a\u6b62\u7684\u6240\u6709\u573a\u666f\u4e2d\uff0c\u6211\u4eec\u4e00\u76f4\u90fd\u5728\u6ee5\u7528\u6211\u4eec\u7684\u7bb1\u5b50\u670b\u53cb\uff0c\u4f46\u65f6\u95f4\u4e45\u4e86\u751a\u81f3\u662f\u6211\u4eec\u6700\u597d\u7684\u670b\u53cb\u4e5f\u4f1a\u611f\u5230\u65e0\u804a\u3002\u5728\u65e5\u5e38\u7684\u56fe\u5f62\u7a0b\u5e8f\u4e2d\uff0c\u901a\u5e38\u90fd\u4f1a\u4f7f\u7528\u975e\u5e38\u590d\u6742\u4e14\u597d\u73a9\u7684\u6a21\u578b\uff0c\u5b83\u4eec\u6bd4\u9759\u6001\u7684\u7bb1\u5b50\u8981\u597d\u770b\u591a\u4e86\u3002\u7136\u800c\uff0c\u548c\u7bb1\u5b50\u5bf9\u8c61\u4e0d\u540c\uff0c\u6211\u4eec\u4e0d\u592a\u80fd\u591f\u5bf9\u50cf\u662f\u623f\u5b50\u3001\u6c7d\u8f66\u6216\u8005\u4eba\u5f62\u89d2\u8272\u8fd9\u6837\u7684\u590d\u6742\u5f62\u72b6\u624b\u5de5\u5b9a\u4e49\u6240\u6709\u7684\u9876\u70b9\u3001\u6cd5\u7ebf\u548c\u7eb9\u7406\u5750\u6807\u3002\u6211\u4eec\u60f3\u8981\u7684\u662f\u5c06\u8fd9\u4e9b\u6a21\u578b(Model) \u5bfc\u5165 (Import)\u5230\u7a0b\u5e8f\u5f53\u4e2d\u3002\u6a21\u578b\u901a\u5e38\u90fd\u75313D\u827a\u672f\u5bb6\u5728 Blender \u3001 3DS Max \u6216\u8005 Maya \u8fd9\u6837\u7684\u5de5\u5177\u4e2d\u7cbe\u5fc3\u5236\u4f5c\u3002 \u8fd9\u4e9b\u6240\u8c13\u7684 3D\u5efa\u6a21\u5de5\u5177 (3D Modeling Tool)\u53ef\u4ee5\u8ba9\u827a\u672f\u5bb6\u521b\u5efa\u590d\u6742\u7684\u5f62\u72b6\uff0c\u5e76\u4f7f\u7528\u4e00\u79cd\u53eb\u505a UV\u6620\u5c04 (uv-mapping)\u7684\u624b\u6bb5\u6765\u5e94\u7528\u8d34\u56fe\u3002\u8fd9\u4e9b\u5de5\u5177\u5c06\u4f1a\u5728\u5bfc\u51fa\u5230\u6a21\u578b\u6587\u4ef6\u7684\u65f6\u5019\u81ea\u52a8\u751f\u6210\u6240\u6709\u7684\u9876\u70b9\u5750\u6807\u3001\u9876\u70b9\u6cd5\u7ebf\u4ee5\u53ca\u7eb9\u7406\u5750\u6807\u3002\u8fd9\u6837\u5b50\u827a\u672f\u5bb6\u4eec\u5373\u4f7f\u4e0d\u4e86\u89e3\u56fe\u5f62\u6280\u672f\u7ec6\u8282\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u80fd\u62e5\u6709\u4e00\u5957\u5f3a\u5927\u7684\u5de5\u5177\u6765\u6784\u5efa\u9ad8\u54c1\u8d28\u7684\u6a21\u578b\u4e86\u3002\u6240\u6709\u7684\u6280\u672f\u7ec6\u8282\u90fd\u9690\u85cf\u5728\u4e86\u5bfc\u51fa\u7684\u6a21\u578b\u6587\u4ef6\u4e2d\u3002\u4f46\u662f\uff0c\u4f5c\u4e3a\u56fe\u5f62\u5f00\u53d1\u8005\uff0c\u6211\u4eec\u5c31 \u5fc5\u987b \u8981\u4e86\u89e3\u8fd9\u4e9b\u6280\u672f\u7ec6\u8282\u4e86\u3002 \u6240\u4ee5\uff0c\u6211\u4eec\u7684\u5de5\u4f5c\u5c31\u662f\u89e3\u6790\u8fd9\u4e9b\u5bfc\u51fa\u7684\u6a21\u578b\u6587\u4ef6\u4ee5\u53ca\u63d0\u53d6\u6240\u6709\u6709\u7528\u7684\u4fe1\u606f\uff0c\u5c06\u5b83\u4eec\u50a8\u5b58\u4e3aOpenGL\u80fd\u591f\u7406\u89e3\u7684\u683c\u5f0f\u3002\u4e00\u4e2a\u5f88\u5e38\u89c1\u7684\u95ee\u9898\u662f\uff0c\u6a21\u578b\u7684\u6587\u4ef6\u683c\u5f0f\u6709\u5f88\u591a\u79cd\uff0c\u6bcf\u4e00\u79cd\u90fd\u4f1a\u4ee5\u5b83\u4eec\u81ea\u5df1\u7684\u65b9\u5f0f\u6765\u5bfc\u51fa\u6a21\u578b\u6570\u636e\u3002\u50cf\u662f Wavefront\u7684.obj \u8fd9\u6837\u7684\u6a21\u578b\u683c\u5f0f\uff0c\u53ea\u5305\u542b\u4e86\u6a21\u578b\u6570\u636e\u4ee5\u53ca\u6750\u8d28\u4fe1\u606f\uff0c\u50cf\u662f\u6a21\u578b\u989c\u8272\u548c\u6f2b\u53cd\u5c04/\u955c\u9762\u5149\u8d34\u56fe\u3002\u800c\u4ee5XML\u4e3a\u57fa\u7840\u7684 Collada\u6587\u4ef6\u683c\u5f0f \u5219\u975e\u5e38\u7684\u4e30\u5bcc\uff0c\u5305\u542b\u6a21\u578b\u3001\u5149\u7167\u3001\u591a\u79cd\u6750\u8d28\u3001\u52a8\u753b\u6570\u636e\u3001\u6444\u50cf\u673a\u3001\u5b8c\u6574\u7684\u573a\u666f\u4fe1\u606f\u7b49\u7b49\u3002Wavefront\u7684.obj\u683c\u5f0f\u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u6613\u4e8e\u89e3\u6790\u7684\u6a21\u578b\u683c\u5f0f\u3002\u5efa\u8bae\u81f3\u5c11\u53bbWavefront\u7684wiki\u9875\u9762\u4e0a\u770b\u770b\u6587\u4ef6\u683c\u5f0f\u7684\u4fe1\u606f\u662f\u5982\u4f55\u5c01\u88c5\u7684\u3002\u8fd9\u5e94\u8be5\u80fd\u8ba9\u4f60\u8ba4\u8bc6\u5230\u6a21\u578b\u6587\u4ef6\u7684\u57fa\u672c\u7ed3\u6784\u3002 \u603b\u800c\u8a00\u4e4b\uff0c\u4e0d\u540c\u79cd\u7c7b\u7684\u6587\u4ef6\u683c\u5f0f\u6709\u5f88\u591a\uff0c\u5b83\u4eec\u4e4b\u95f4\u901a\u5e38\u5e76\u6ca1\u6709\u4e00\u4e2a\u901a\u7528\u7684\u7ed3\u6784\u3002\u6240\u4ee5\u5982\u679c\u6211\u4eec\u60f3\u4ece\u8fd9\u4e9b\u6587\u4ef6\u683c\u5f0f\u4e2d\u5bfc\u5165\u6a21\u578b\u7684\u8bdd\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u53bb\u81ea\u5df1\u5bf9\u6bcf\u4e00\u79cd\u9700\u8981\u5bfc\u5165\u7684\u6587\u4ef6\u683c\u5f0f\u5199\u4e00\u4e2a\u5bfc\u5165\u5668\u3002\u5f88\u5e78\u8fd0\u7684\u662f\uff0c\u6b63\u597d\u6709\u4e00\u4e2a\u5e93\u4e13\u95e8\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002","title":"Assimp"},{"location":"03%20Model%20Loading/01%20Assimp/#_1","text":"\u4e00\u4e2a\u975e\u5e38\u6d41\u884c\u7684\u6a21\u578b\u5bfc\u5165\u5e93\u662f Assimp \uff0c\u5b83\u662f Open Asset Import Library \uff08\u5f00\u653e\u7684\u8d44\u4ea7\u5bfc\u5165\u5e93\uff09\u7684\u7f29\u5199\u3002Assimp\u80fd\u591f\u5bfc\u5165\u5f88\u591a\u79cd\u4e0d\u540c\u7684\u6a21\u578b\u6587\u4ef6\u683c\u5f0f\uff08\u5e76\u4e5f\u80fd\u591f\u5bfc\u51fa\u90e8\u5206\u7684\u683c\u5f0f\uff09\uff0c\u5b83\u4f1a\u5c06\u6240\u6709\u7684\u6a21\u578b\u6570\u636e\u52a0\u8f7d\u81f3Assimp\u7684\u901a\u7528\u6570\u636e\u7ed3\u6784\u4e2d\u3002\u5f53Assimp\u52a0\u8f7d\u5b8c\u6a21\u578b\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u4eceAssimp\u7684\u6570\u636e\u7ed3\u6784\u4e2d\u63d0\u53d6\u6211\u4eec\u6240\u9700\u7684\u6240\u6709\u6570\u636e\u4e86\u3002\u7531\u4e8eAssimp\u7684\u6570\u636e\u7ed3\u6784\u4fdd\u6301\u4e0d\u53d8\uff0c\u4e0d\u8bba\u5bfc\u5165\u7684\u662f\u4ec0\u4e48\u79cd\u7c7b\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u5b83\u90fd\u80fd\u591f\u5c06\u6211\u4eec\u4ece\u8fd9\u4e9b\u4e0d\u540c\u7684\u6587\u4ef6\u683c\u5f0f\u4e2d\u62bd\u8c61\u51fa\u6765\uff0c\u7528\u540c\u4e00\u79cd\u65b9\u5f0f\u8bbf\u95ee\u6211\u4eec\u9700\u8981\u7684\u6570\u636e\u3002 \u5f53\u4f7f\u7528Assimp\u5bfc\u5165\u4e00\u4e2a\u6a21\u578b\u7684\u65f6\u5019\uff0c\u5b83\u901a\u5e38\u4f1a\u5c06\u6574\u4e2a\u6a21\u578b\u52a0\u8f7d\u8fdb\u4e00\u4e2a \u573a\u666f (Scene)\u5bf9\u8c61\uff0c\u5b83\u4f1a\u5305\u542b\u5bfc\u5165\u7684\u6a21\u578b/\u573a\u666f\u4e2d\u7684\u6240\u6709\u6570\u636e\u3002Assimp\u4f1a\u5c06\u573a\u666f\u8f7d\u5165\u4e3a\u4e00\u7cfb\u5217\u7684\u8282\u70b9(Node)\uff0c\u6bcf\u4e2a\u8282\u70b9\u5305\u542b\u4e86\u573a\u666f\u5bf9\u8c61\u4e2d\u6240\u50a8\u5b58\u6570\u636e\u7684\u7d22\u5f15\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u53ef\u4ee5\u6709\u4efb\u610f\u6570\u91cf\u7684\u5b50\u8282\u70b9\u3002Assimp\u6570\u636e\u7ed3\u6784\u7684\uff08\u7b80\u5316\uff09\u6a21\u578b\u5982\u4e0b\uff1a \u548c\u6750\u8d28\u548c\u7f51\u683c(Mesh)\u4e00\u6837\uff0c\u6240\u6709\u7684\u573a\u666f/\u6a21\u578b\u6570\u636e\u90fd\u5305\u542b\u5728 Scene \u5bf9\u8c61\u4e2d\u3002 Scene \u5bf9\u8c61\u4e5f\u5305\u542b\u4e86\u573a\u666f\u6839\u8282\u70b9\u7684\u5f15\u7528\u3002 \u573a\u666f\u7684 Root node \uff08\u6839\u8282\u70b9\uff09\u53ef\u80fd\u5305\u542b\u5b50\u8282\u70b9\uff08\u548c\u5176\u5b83\u7684\u8282\u70b9\u4e00\u6837\uff09\uff0c\u5b83\u4f1a\u6709\u4e00\u7cfb\u5217\u6307\u5411\u573a\u666f\u5bf9\u8c61\u4e2d mMeshes \u6570\u7ec4\u4e2d\u50a8\u5b58\u7684\u7f51\u683c\u6570\u636e\u7684\u7d22\u5f15\u3002 Scene \u4e0b\u7684 mMeshes \u6570\u7ec4\u50a8\u5b58\u4e86\u771f\u6b63\u7684 Mesh \u5bf9\u8c61\uff0c\u8282\u70b9\u4e2d\u7684 mMeshes \u6570\u7ec4\u4fdd\u5b58\u7684\u53ea\u662f\u573a\u666f\u4e2d\u7f51\u683c\u6570\u7ec4\u7684\u7d22\u5f15\u3002 \u4e00\u4e2a Mesh \u5bf9\u8c61\u672c\u8eab\u5305\u542b\u4e86\u6e32\u67d3\u6240\u9700\u8981\u7684\u6240\u6709\u76f8\u5173\u6570\u636e\uff0c\u50cf\u662f\u9876\u70b9\u4f4d\u7f6e\u3001\u6cd5\u5411\u91cf\u3001\u7eb9\u7406\u5750\u6807\u3001\u9762(Face)\u548c\u7269\u4f53\u7684\u6750\u8d28\u3002 \u4e00\u4e2a\u7f51\u683c\u5305\u542b\u4e86\u591a\u4e2a\u9762\u3002 Face \u4ee3\u8868\u7684\u662f\u7269\u4f53\u7684\u6e32\u67d3\u56fe\u5143(Primitive)\uff08\u4e09\u89d2\u5f62\u3001\u65b9\u5f62\u3001\u70b9\uff09\u3002\u4e00\u4e2a\u9762\u5305\u542b\u4e86\u7ec4\u6210\u56fe\u5143\u7684\u9876\u70b9\u7684\u7d22\u5f15\u3002\u7531\u4e8e\u9876\u70b9\u548c\u7d22\u5f15\u662f\u5206\u5f00\u7684\uff0c\u4f7f\u7528\u4e00\u4e2a\u7d22\u5f15\u7f13\u51b2\u6765\u6e32\u67d3\u662f\u975e\u5e38\u7b80\u5355\u7684\uff08\u89c1 \u4f60\u597d\uff0c\u4e09\u89d2\u5f62 \uff09\u3002 \u6700\u540e\uff0c\u4e00\u4e2a\u7f51\u683c\u4e5f\u5305\u542b\u4e86\u4e00\u4e2a Material \u5bf9\u8c61\uff0c\u5b83\u5305\u542b\u4e86\u4e00\u4e9b\u51fd\u6570\u80fd\u8ba9\u6211\u4eec\u83b7\u53d6\u7269\u4f53\u7684\u6750\u8d28\u5c5e\u6027\uff0c\u6bd4\u5982\u8bf4\u989c\u8272\u548c\u7eb9\u7406\u8d34\u56fe\uff08\u6bd4\u5982\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u8d34\u56fe\uff09\u3002 \u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u5c06\u4e00\u4e2a\u7269\u4f53\u52a0\u8f7d\u5230 Scene \u5bf9\u8c61\u4e2d\uff0c\u904d\u5386\u8282\u70b9\uff0c\u83b7\u53d6\u5bf9\u5e94\u7684 Mesh \u5bf9\u8c61\uff08\u6211\u4eec\u9700\u8981\u9012\u5f52\u641c\u7d22\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff09\uff0c\u5e76\u5904\u7406\u6bcf\u4e2a Mesh \u5bf9\u8c61\u6765\u83b7\u53d6\u9876\u70b9\u6570\u636e\u3001\u7d22\u5f15\u4ee5\u53ca\u5b83\u7684\u6750\u8d28\u5c5e\u6027\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u662f\u4e00\u7cfb\u5217\u7684\u7f51\u683c\u6570\u636e\uff0c\u6211\u4eec\u4f1a\u5c06\u5b83\u4eec\u5305\u542b\u5728\u4e00\u4e2a Model \u5bf9\u8c61\u4e2d\u3002 Important \u7f51\u683c \u5f53\u4f7f\u7528\u5efa\u6a21\u5de5\u5177\u5bf9\u7269\u4f53\u5efa\u6a21\u7684\u65f6\u5019\uff0c\u827a\u672f\u5bb6\u901a\u5e38\u4e0d\u4f1a\u7528\u5355\u4e2a\u5f62\u72b6\u521b\u5efa\u51fa\u6574\u4e2a\u6a21\u578b\u3002\u901a\u5e38\u6bcf\u4e2a\u6a21\u578b\u90fd\u7531\u51e0\u4e2a\u5b50\u6a21\u578b/\u5f62\u72b6\u7ec4\u5408\u800c\u6210\u3002\u7ec4\u5408\u6a21\u578b\u7684\u6bcf\u4e2a\u5355\u72ec\u7684\u5f62\u72b6\u5c31\u53eb\u505a\u4e00\u4e2a \u7f51\u683c (Mesh)\u3002\u6bd4\u5982\u8bf4\u6709\u4e00\u4e2a\u4eba\u5f62\u7684\u89d2\u8272\uff1a\u827a\u672f\u5bb6\u901a\u5e38\u4f1a\u5c06\u5934\u90e8\u3001\u56db\u80a2\u3001\u8863\u670d\u3001\u6b66\u5668\u5efa\u6a21\u4e3a\u5206\u5f00\u7684\u7ec4\u4ef6\uff0c\u5e76\u5c06\u8fd9\u4e9b\u7f51\u683c\u7ec4\u5408\u800c\u6210\u7684\u7ed3\u679c\u8868\u73b0\u4e3a\u6700\u7ec8\u7684\u6a21\u578b\u3002\u4e00\u4e2a\u7f51\u683c\u662f\u6211\u4eec\u5728OpenGL\u4e2d\u7ed8\u5236\u7269\u4f53\u6240\u9700\u7684\u6700\u5c0f\u5355\u4f4d\uff08\u9876\u70b9\u6570\u636e\u3001\u7d22\u5f15\u548c\u6750\u8d28\u5c5e\u6027\uff09\u3002\u4e00\u4e2a\u6a21\u578b\uff08\u901a\u5e38\uff09\u4f1a\u5305\u62ec\u591a\u4e2a\u7f51\u683c\u3002 \u5728 \u4e0b\u4e00\u8282 \u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u6211\u4eec\u81ea\u5df1\u7684 Model \u548c Mesh \u7c7b\u6765\u52a0\u8f7d\u5e76\u4f7f\u7528\u521a\u521a\u4ecb\u7ecd\u7684\u7ed3\u6784\u50a8\u5b58\u5bfc\u5165\u540e\u7684\u6a21\u578b\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u7ed8\u5236\u4e00\u4e2a\u6a21\u578b\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5c06\u6574\u4e2a\u6a21\u578b\u6e32\u67d3\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u53ea\u9700\u8981\u6e32\u67d3\u7ec4\u6210\u6a21\u578b\u7684\u6bcf\u4e2a\u72ec\u7acb\u7684\u7f51\u683c\u5c31\u53ef\u4ee5\u4e86\u3002\u7136\u800c\uff0c\u5728\u6211\u4eec\u5f00\u59cb\u5bfc\u5165\u6a21\u578b\u4e4b\u524d\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u5c06Assimp\u5305\u542b\u5230\u6211\u4eec\u7684\u5de5\u7a0b\u5f53\u4e2d\u3002","title":"\u6a21\u578b\u52a0\u8f7d\u5e93"},{"location":"03%20Model%20Loading/01%20Assimp/#assimp_1","text":"\u4f60\u53ef\u4ee5\u5728Assimp\u7684 GitHub\u9875\u9762 \u4e2d\u9009\u62e9\u76f8\u5e94\u7684\u7248\u672c\u3002\u672c\u6587\u4f7f\u7528\u7684Assimp\u6700\u9ad8\u7248\u672c\u4e3a3.1.1\u3002\u6211\u4eec\u5efa\u8bae\u4f60\u81ea\u5df1\u7f16\u8bd1Assimp\u5e93\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u9884\u7f16\u8bd1\u5e93\u5e76\u4e0d\u4e00\u5b9a\u80fd\u9002\u7528\u4e8e\u6240\u6709\u7cfb\u7edf\u3002\u5982\u679c\u4f60\u5fd8\u8bb0\u5982\u4f55\u4f7f\u7528CMake\u81ea\u5df1\u7f16\u8bd1\u4e00\u4e2a\u5e93\u7684\u8bdd\uff0c\u53ef\u4ee5\u590d\u4e60 \u521b\u5efa\u7a97\u53e3 \u5c0f\u8282\u3002 \u6784\u5efaAssimp\u65f6\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4f1a\u5c06\u5b83\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u5217\u5728\u8fd9\u91cc\uff0c\u4fbf\u4e8e\u5927\u5bb6\u6392\u9664\u9519\u8bef\uff1a CMake\u5728\u8bfb\u53d6\u914d\u7f6e\u5217\u8868\u65f6\uff0c\u4e0d\u65ad\u62a5\u51faDirectX\u5e93\u4e22\u5931\u7684\u9519\u8bef\u3002\u62a5\u9519\u5982\u4e0b\uff1a Could not locate DirectX CMake Error at cmake-modules/FindPkgMacros.cmake:110 (message): Required library DirectX not found! Install the library (including dev packages) and try again. If the library is already installed, set the missing variables manually in cmake. \u5982\u679c\u4f60\u4e4b\u524d\u6ca1\u5b89\u88c5\u8fc7\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5b89\u88c5DirectX SDK\u3002\u4f60\u53ef\u4ee5\u4ece \u8fd9\u91cc \u4e0b\u8f7dSDK\u3002 \u5b89\u88c5DirectX SDK\u65f6\uff0c\u53ef\u80fd\u9047\u5230\u4e00\u4e2a\u9519\u8bef\u7801\u4e3a s1023 \u7684\u9519\u8bef\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bf7\u5728\u5b89\u88c5SDK\u4e4b\u524d\u5148\u5378\u8f7dC++ Redistributable package(s)\u3002 \u4e00\u65e6\u914d\u7f6e\u5b8c\u6210\uff0c\u4f60\u5c31\u53ef\u4ee5\u751f\u6210\u89e3\u51b3\u65b9\u6848\u6587\u4ef6\u4e86\uff0c\u6253\u5f00\u89e3\u51b3\u65b9\u6848\u6587\u4ef6\u5e76\u7f16\u8bd1Assimp\u5e93\uff08\u53ef\u4ee5\u7f16\u8bd1\u4e3aDebug\u7248\u672c\u4e5f\u53ef\u4ee5\u7f16\u8bd1\u4e3aRelease\u7248\u672c\uff0c\u53ea\u8981\u80fd\u5de5\u4f5c\u5c31\u884c\uff09\u3002\u56e0\u4e3a\u6240\u6709\u7684LearnOpenGL\u4ee3\u7801\u90fd\u662f64\u4f4d\u9879\u76ee\uff0c\u6240\u4ee5\u8bf7\u786e\u4fdd\u572864\u4f4d\u4e0b\u7f16\u8bd1\u8fd9\u4e2a\u5e93\u3002 \u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\u6784\u5efa\u7684Assimp\u662f\u4e00\u4e2a\u52a8\u6001\u5e93(Dynamic Library)\uff0c\u6240\u4ee5\u6240\u751f\u6210\u7684 assimp.dll \u6587\u4ef6\uff08\u6587\u4ef6\u540d\u53ef\u80fd\u5e26\u6709\u540e\u7f00\uff09\u9700\u8981\u968f\u6211\u4eec\u7684\u7a0b\u5e8f\u53ef\u6267\u884c\u6587\u4ef6\u4e00\u5e76\u5305\u542b\uff0c\u4f60\u53ef\u4ee5\u7b80\u5355\u5730\u5c06DLL\u590d\u5236\u5230\u6211\u4eec\u7a0b\u5e8f\u53ef\u6267\u884c\u6587\u4ef6\u7684\u540c\u4e00\u76ee\u5f55\u4e2d\u3002 Assimp\u7f16\u8bd1\u4e4b\u540e\uff0c\u751f\u6210\u7684\u5e93\u548cDLL\u6587\u4ef6\u4f4d\u4e8e code/Debug \u6216\u8005 code/Release \u6587\u4ef6\u5939\u4e2d\u3002\u63a5\u7740\u628a\u7f16\u8bd1\u597d\u7684LIB\u6587\u4ef6\u548cDLL\u6587\u4ef6\u62f7\u8d1d\u5230\u5de5\u7a0b\u7684\u76f8\u5e94\u76ee\u5f55\u4e0b\uff0c\u7136\u540e\u5728\u89e3\u51b3\u65b9\u6848\u4e2d\u94fe\u63a5\u5b83\u4eec\u3002\u5e76\u4e14\u8bb0\u5f97\u628aAssimp\u7684\u5934\u6587\u4ef6\u4e5f\u590d\u5236\u5230\u4f60\u7684 include \u76ee\u5f55\u4e2d\uff08\u5934\u6587\u4ef6\u53ef\u4ee5\u5728\u4e0b\u8f7d\u7684Assimp\u6587\u4ef6\u4e2d\u7684 include \u76ee\u5f55\u91cc\u627e\u5230\uff09\u3002 \u5982\u679c\u4f60\u4ecd\u9047\u5230\u4e86\u672a\u62a5\u544a\u7684\u9519\u8bef\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u4e2d\u5bfb\u6c42\u5e2e\u52a9\u3002 \u73b0\u5728\uff0c\u4f60\u5e94\u8be5\u5df2\u7ecf\u7f16\u8bd1\u5b8cAssimp\u5e93\u5e76\u5c06\u5b83\u94fe\u63a5\u5230\u4f60\u7684\u7a0b\u5e8f\u4e2d\u4e86\u3002\u4e0b\u4e00\u6b65\uff1a \u5bfc\u5165 \u6f02\u4eae\u76843D\u7269\u4f53\uff01","title":"\u6784\u5efaAssimp"},{"location":"03%20Model%20Loading/02%20Mesh/","text":"\u7f51\u683c \u539f\u6587 Mesh \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 AoZhang \u901a\u8fc7\u4f7f\u7528Assimp\uff0c\u6211\u4eec\u53ef\u4ee5\u52a0\u8f7d\u4e0d\u540c\u7684\u6a21\u578b\u5230\u7a0b\u5e8f\u4e2d\uff0c\u4f46\u662f\u8f7d\u5165\u540e\u5b83\u4eec\u90fd\u88ab\u50a8\u5b58\u4e3aAssimp\u7684\u6570\u636e\u7ed3\u6784\u3002\u6211\u4eec\u6700\u7ec8\u4ecd\u8981\u5c06\u8fd9\u4e9b\u6570\u636e\u8f6c\u6362\u4e3aOpenGL\u80fd\u591f\u7406\u89e3\u7684\u683c\u5f0f\uff0c\u8fd9\u6837\u624d\u80fd\u6e32\u67d3\u8fd9\u4e2a\u7269\u4f53\u3002\u6211\u4eec\u4ece\u4e0a\u4e00\u8282\u4e2d\u5b66\u5230\uff0c\u7f51\u683c(Mesh)\u4ee3\u8868\u7684\u662f\u5355\u4e2a\u7684\u53ef\u7ed8\u5236\u5b9e\u4f53\uff0c\u6211\u4eec\u73b0\u5728\u5148\u6765\u5b9a\u4e49\u4e00\u4e2a\u6211\u4eec\u81ea\u5df1\u7684\u7f51\u683c\u7c7b\u3002 \u9996\u5148\u6211\u4eec\u6765\u56de\u987e\u4e00\u4e0b\u6211\u4eec\u76ee\u524d\u5b66\u5230\u7684\u77e5\u8bc6\uff0c\u60f3\u60f3\u4e00\u4e2a\u7f51\u683c\u6700\u5c11\u9700\u8981\u4ec0\u4e48\u6570\u636e\u3002\u4e00\u4e2a\u7f51\u683c\u5e94\u8be5\u81f3\u5c11\u9700\u8981\u4e00\u7cfb\u5217\u7684\u9876\u70b9\uff0c\u6bcf\u4e2a\u9876\u70b9\u5305\u542b\u4e00\u4e2a\u4f4d\u7f6e\u5411\u91cf\u3001\u4e00\u4e2a\u6cd5\u5411\u91cf\u548c\u4e00\u4e2a\u7eb9\u7406\u5750\u6807\u5411\u91cf\u3002\u4e00\u4e2a\u7f51\u683c\u8fd8\u5e94\u8be5\u5305\u542b\u7528\u4e8e\u7d22\u5f15\u7ed8\u5236\u7684\u7d22\u5f15\u4ee5\u53ca\u7eb9\u7406\u5f62\u5f0f\u7684\u6750\u8d28\u6570\u636e\uff08\u6f2b\u53cd\u5c04/\u955c\u9762\u5149\u8d34\u56fe\uff09\u3002 \u65e2\u7136\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u7f51\u683c\u7c7b\u7684\u6700\u4f4e\u9700\u6c42\uff0c\u6211\u4eec\u53ef\u4ee5\u5728OpenGL\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u9876\u70b9\u4e86\uff1a struct Vertex { glm::vec3 Position; glm::vec3 Normal; glm::vec2 TexCoords; }; \u6211\u4eec\u5c06\u6240\u6709\u9700\u8981\u7684\u5411\u91cf\u50a8\u5b58\u5230\u4e00\u4e2a\u53eb\u505a Vertex \u7684\u7ed3\u6784\u4f53\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u6765\u7d22\u5f15\u6bcf\u4e2a\u9876\u70b9\u5c5e\u6027\u3002\u9664\u4e86 Vertex \u7ed3\u6784\u4f53\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u7eb9\u7406\u6570\u636e\u6574\u7406\u5230\u4e00\u4e2a Texture \u7ed3\u6784\u4f53\u4e2d\u3002 struct Texture { unsigned int id; string type; }; \u6211\u4eec\u50a8\u5b58\u4e86\u7eb9\u7406\u7684id\u4ee5\u53ca\u5b83\u7684\u7c7b\u578b\uff0c\u6bd4\u5982\u662f\u6f2b\u53cd\u5c04\u8d34\u56fe\u6216\u8005\u662f\u955c\u9762\u5149\u8d34\u56fe\u3002 \u77e5\u9053\u4e86\u9876\u70b9\u548c\u7eb9\u7406\u7684\u5b9e\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u5b9a\u4e49\u7f51\u683c\u7c7b\u7684\u7ed3\u6784\u4e86\uff1a class Mesh { public: /* \u7f51\u683c\u6570\u636e */ vector<Vertex> vertices; vector<unsigned int> indices; vector<Texture> textures; /* \u51fd\u6570 */ Mesh(vector<Vertex> vertices, vector<unsigned int> indices, vector<Texture> textures); void Draw(Shader &shader); private: /* \u6e32\u67d3\u6570\u636e */ unsigned int VAO, VBO, EBO; /* \u51fd\u6570 */ void setupMesh(); }; \u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u7c7b\u5e76\u4e0d\u590d\u6742\u3002\u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u5c06\u6240\u6709\u5fc5\u987b\u7684\u6570\u636e\u8d4b\u4e88\u4e86\u7f51\u683c\uff0c\u6211\u4eec\u5728 setupMesh \u51fd\u6570\u4e2d\u521d\u59cb\u5316\u7f13\u51b2\uff0c\u5e76\u6700\u7ec8\u4f7f\u7528 Draw \u51fd\u6570\u6765\u7ed8\u5236\u7f51\u683c\u3002\u6ce8\u610f\u6211\u4eec\u5c06\u4e00\u4e2a\u7740\u8272\u5668\u4f20\u5165\u4e86 Draw \u51fd\u6570\u4e2d\uff0c\u5c06\u7740\u8272\u5668\u4f20\u5165\u7f51\u683c\u7c7b\u4e2d\u53ef\u4ee5\u8ba9\u6211\u4eec\u5728\u7ed8\u5236\u4e4b\u524d\u8bbe\u7f6e\u4e00\u4e9buniform\uff08\u50cf\u662f\u94fe\u63a5\u91c7\u6837\u5668\u5230\u7eb9\u7406\u5355\u5143\uff09\u3002 \u6784\u9020\u51fd\u6570\u7684\u5185\u5bb9\u975e\u5e38\u6613\u4e8e\u7406\u89e3\u3002\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\u8bbe\u7f6e\u7c7b\u7684\u516c\u6709\u53d8\u91cf\u5c31\u53ef\u4ee5\u4e86\u3002\u6211\u4eec\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8fd8\u8c03\u7528\u4e86 setupMesh \u51fd\u6570\uff1a Mesh(vector<Vertex> vertices, vector<unsigned int> indices, vector<Texture> textures) { this->vertices = vertices; this->indices = indices; this->textures = textures; setupMesh(); } \u8fd9\u91cc\u6ca1\u4ec0\u4e48\u53ef\u8bf4\u7684\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u8ba8\u8bba setupMesh \u51fd\u6570\u3002 \u521d\u59cb\u5316 \u591a\u4e8f\u4e86\u6784\u9020\u51fd\u6570\uff0c\u6211\u4eec\u73b0\u5728\u6709\u4e00\u5927\u5217\u7684\u7f51\u683c\u6570\u636e\u53ef\u4ee5\u7528\u4e8e\u6e32\u67d3\u3002\u5728\u6b64\u4e4b\u524d\u6211\u4eec\u8fd8\u5fc5\u987b\u914d\u7f6e\u6b63\u786e\u7684\u7f13\u51b2\uff0c\u5e76\u901a\u8fc7\u9876\u70b9\u5c5e\u6027\u6307\u9488\u5b9a\u4e49\u9876\u70b9\u7740\u8272\u5668\u7684\u5e03\u5c40\u3002\u73b0\u5728\u4f60\u5e94\u8be5\u5bf9\u8fd9\u4e9b\u6982\u5ff5\u90fd\u5f88\u719f\u6089\u4e86\uff0c\u4f46\u6211\u4eec\u8fd9\u6b21\u4f1a\u7a0d\u5fae\u6709\u4e00\u70b9\u53d8\u52a8:\u4f7f\u7528\u7ed3\u6784\u4f53\u4e2d\u7684\u9876\u70b9\u6570\u636e\uff1a void setupMesh() { glGenVertexArrays(1, &VAO); glGenBuffers(1, &VBO); glGenBuffers(1, &EBO); glBindVertexArray(VAO); glBindBuffer(GL_ARRAY_BUFFER, VBO); glBufferData(GL_ARRAY_BUFFER, vertices.size() * sizeof(Vertex), &vertices[0], GL_STATIC_DRAW); glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO); glBufferData(GL_ELEMENT_ARRAY_BUFFER, indices.size() * sizeof(unsigned int), &indices[0], GL_STATIC_DRAW); // \u9876\u70b9\u4f4d\u7f6e glEnableVertexAttribArray(0); glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, sizeof(Vertex), (void*)0); // \u9876\u70b9\u6cd5\u7ebf glEnableVertexAttribArray(1); glVertexAttribPointer(1, 3, GL_FLOAT, GL_FALSE, sizeof(Vertex), (void*)offsetof(Vertex, Normal)); // \u9876\u70b9\u7eb9\u7406\u5750\u6807 glEnableVertexAttribArray(2); glVertexAttribPointer(2, 2, GL_FLOAT, GL_FALSE, sizeof(Vertex), (void*)offsetof(Vertex, TexCoords)); glBindVertexArray(0); } \u4ee3\u7801\u5e94\u8be5\u548c\u4f60\u6240\u60f3\u5f97\u6ca1\u4ec0\u4e48\u4e0d\u540c\uff0c\u4f46\u6709\u4e86 Vertex \u7ed3\u6784\u4f53\u7684\u5e2e\u52a9\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e9b\u5c0f\u6280\u5de7\u3002 C++\u7ed3\u6784\u4f53\u6709\u4e00\u4e2a\u5f88\u68d2\u7684\u7279\u6027\uff0c\u5b83\u4eec\u7684\u5185\u5b58\u5e03\u5c40\u662f\u8fde\u7eed\u7684(Sequential)\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u5c06\u7ed3\u6784\u4f53\u4f5c\u4e3a\u4e00\u4e2a\u6570\u636e\u6570\u7ec4\u4f7f\u7528\uff0c\u90a3\u4e48\u5b83\u5c06\u4f1a\u4ee5\u987a\u5e8f\u6392\u5217\u7ed3\u6784\u4f53\u7684\u53d8\u91cf\uff0c\u8fd9\u5c06\u4f1a\u76f4\u63a5\u8f6c\u6362\u4e3a\u6211\u4eec\u5728\u6570\u7ec4\u7f13\u51b2\u4e2d\u6240\u9700\u8981\u7684float\uff08\u5b9e\u9645\u4e0a\u662f\u5b57\u8282\uff09\u6570\u7ec4\u3002\u6bd4\u5982\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u586b\u5145\u540e\u7684 Vertex \u7ed3\u6784\u4f53\uff0c\u90a3\u4e48\u5b83\u7684\u5185\u5b58\u5e03\u5c40\u5c06\u4f1a\u7b49\u4e8e\uff1a Vertex vertex; vertex.Position = glm::vec3(0.2f, 0.4f, 0.6f); vertex.Normal = glm::vec3(0.0f, 1.0f, 0.0f); vertex.TexCoords = glm::vec2(1.0f, 0.0f); // = [0.2f, 0.4f, 0.6f, 0.0f, 1.0f, 0.0f, 1.0f, 0.0f]; \u7531\u4e8e\u6709\u4e86\u8fd9\u4e2a\u6709\u7528\u7684\u7279\u6027\uff0c\u6211\u4eec\u80fd\u591f\u76f4\u63a5\u4f20\u5165\u4e00\u5927\u5217\u7684 Vertex \u7ed3\u6784\u4f53\u7684\u6307\u9488\u4f5c\u4e3a\u7f13\u51b2\u7684\u6570\u636e\uff0c\u5b83\u4eec\u5c06\u4f1a\u5b8c\u7f8e\u5730\u8f6c\u6362\u4e3a glBufferData \u6240\u80fd\u7528\u7684\u53c2\u6570\uff1a glBufferData(GL_ARRAY_BUFFER, vertices.size() * sizeof(Vertex), &vertices[0], GL_STATIC_DRAW); \u81ea\u7136 sizeof \u8fd0\u7b97\u4e5f\u53ef\u4ee5\u7528\u5728\u7ed3\u6784\u4f53\u4e0a\u6765\u8ba1\u7b97\u5b83\u7684\u5b57\u8282\u5927\u5c0f\u3002\u8fd9\u4e2a\u5e94\u8be5\u662f32\u5b57\u8282\u7684\uff088\u4e2afloat * \u6bcf\u4e2a4\u5b57\u8282\uff09\u3002 \u7ed3\u6784\u4f53\u7684\u53e6\u5916\u4e00\u4e2a\u5f88\u597d\u7684\u7528\u9014\u662f\u5b83\u7684\u9884\u5904\u7406\u6307\u4ee4 offsetof(s, m) \uff0c\u5b83\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8fd9\u4e2a\u7ed3\u6784\u4f53\u4e2d\u53d8\u91cf\u7684\u540d\u5b57\u3002\u8fd9\u4e2a\u5b8f\u4f1a\u8fd4\u56de\u90a3\u4e2a\u53d8\u91cf\u8ddd\u7ed3\u6784\u4f53\u5934\u90e8\u7684\u5b57\u8282\u504f\u79fb\u91cf(Byte Offset)\u3002\u8fd9\u6b63\u597d\u53ef\u4ee5\u7528\u5728\u5b9a\u4e49 glVertexAttribPointer \u51fd\u6570\u4e2d\u7684\u504f\u79fb\u53c2\u6570\uff1a glVertexAttribPointer(1, 3, GL_FLOAT, GL_FALSE, sizeof(Vertex), (void*)offsetof(Vertex, Normal)); \u504f\u79fb\u91cf\u73b0\u5728\u662f\u4f7f\u7528 offsetof \u6765\u5b9a\u4e49\u4e86\uff0c\u5728\u8fd9\u91cc\u5b83\u4f1a\u5c06\u6cd5\u5411\u91cf\u7684\u5b57\u8282\u504f\u79fb\u91cf\u8bbe\u7f6e\u4e3a\u7ed3\u6784\u4f53\u4e2d\u6cd5\u5411\u91cf\u7684\u504f\u79fb\u91cf\uff0c\u4e5f\u5c31\u662f3\u4e2afloat\uff0c\u537312\u5b57\u8282\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u540c\u6837\u5c06\u6b65\u957f\u53c2\u6570\u8bbe\u7f6e\u4e3a\u4e86 Vertex \u7ed3\u6784\u4f53\u7684\u5927\u5c0f\u3002 \u4f7f\u7528\u8fd9\u6837\u7684\u4e00\u4e2a\u7ed3\u6784\u4f53\u4e0d\u4ec5\u80fd\u591f\u63d0\u4f9b\u53ef\u8bfb\u6027\u66f4\u9ad8\u7684\u4ee3\u7801\uff0c\u4e5f\u5141\u8bb8\u6211\u4eec\u5f88\u5bb9\u6613\u5730\u62d3\u5c55\u8fd9\u4e2a\u7ed3\u6784\u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u6dfb\u52a0\u53e6\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u5b83\u6dfb\u52a0\u5230\u7ed3\u6784\u4f53\u4e2d\u5c31\u53ef\u4ee5\u4e86\u3002\u7531\u4e8e\u5b83\u7684\u7075\u6d3b\u6027\uff0c\u6e32\u67d3\u7684\u4ee3\u7801\u4e0d\u4f1a\u88ab\u7834\u574f\u3002 \u6e32\u67d3 \u6211\u4eec\u9700\u8981\u4e3a Mesh \u7c7b\u5b9a\u4e49\u6700\u540e\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u7684 Draw \u51fd\u6570\u3002\u5728\u771f\u6b63\u6e32\u67d3\u8fd9\u4e2a\u7f51\u683c\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5728\u8c03\u7528 glDrawElements \u51fd\u6570\u4e4b\u524d\u5148\u7ed1\u5b9a\u76f8\u5e94\u7684\u7eb9\u7406\u3002\u7136\u800c\uff0c\u8fd9\u5b9e\u9645\u4e0a\u6709\u4e9b\u56f0\u96be\uff0c\u6211\u4eec\u4e00\u5f00\u59cb\u5e76\u4e0d\u77e5\u9053\u8fd9\u4e2a\u7f51\u683c\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u6709\u591a\u5c11\u7eb9\u7406\u3001\u7eb9\u7406\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\u3002\u6240\u4ee5\u6211\u4eec\u8be5\u5982\u4f55\u5728\u7740\u8272\u5668\u4e2d\u8bbe\u7f6e\u7eb9\u7406\u5355\u5143\u548c\u91c7\u6837\u5668\u5462\uff1f \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u8bbe\u5b9a\u4e00\u4e2a\u547d\u540d\u6807\u51c6\uff1a\u6bcf\u4e2a\u6f2b\u53cd\u5c04\u7eb9\u7406\u88ab\u547d\u540d\u4e3a texture_diffuseN \uff0c\u6bcf\u4e2a\u955c\u9762\u5149\u7eb9\u7406\u5e94\u8be5\u88ab\u547d\u540d\u4e3a texture_specularN \uff0c\u5176\u4e2d N \u7684\u8303\u56f4\u662f1\u5230\u7eb9\u7406\u91c7\u6837\u5668\u6700\u5927\u5141\u8bb8\u7684\u6570\u5b57\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u5bf9\u67d0\u4e00\u4e2a\u7f51\u683c\u67093\u4e2a\u6f2b\u53cd\u5c04\u7eb9\u7406\uff0c2\u4e2a\u955c\u9762\u5149\u7eb9\u7406\uff0c\u5b83\u4eec\u7684\u7eb9\u7406\u91c7\u6837\u5668\u5e94\u8be5\u4e4b\u540e\u4f1a\u88ab\u8c03\u7528\uff1a uniform sampler2D texture_diffuse1; uniform sampler2D texture_diffuse2; uniform sampler2D texture_diffuse3; uniform sampler2D texture_specular1; uniform sampler2D texture_specular2; \u6839\u636e\u8fd9\u4e2a\u6807\u51c6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7740\u8272\u5668\u4e2d\u5b9a\u4e49\u4efb\u610f\u9700\u8981\u6570\u91cf\u7684\u7eb9\u7406\u91c7\u6837\u5668\uff0c\u5982\u679c\u4e00\u4e2a\u7f51\u683c\u771f\u7684\u5305\u542b\u4e86\uff08\u8fd9\u4e48\u591a\uff09\u7eb9\u7406\uff0c\u6211\u4eec\u4e5f\u80fd\u77e5\u9053\u5b83\u4eec\u7684\u540d\u5b57\u662f\u4ec0\u4e48\u3002\u6839\u636e\u8fd9\u4e2a\u6807\u51c6\uff0c\u6211\u4eec\u4e5f\u80fd\u5728\u4e00\u4e2a\u7f51\u683c\u4e2d\u5904\u7406\u4efb\u610f\u6570\u91cf\u7684\u7eb9\u7406\uff0c\u5f00\u53d1\u8005\u4e5f\u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u9700\u8981\u4f7f\u7528\u7684\u6570\u91cf\uff0c\u4ed6\u53ea\u9700\u8981\u5b9a\u4e49\u6b63\u786e\u7684\u91c7\u6837\u5668\u5c31\u53ef\u4ee5\u4e86\uff08\u867d\u7136\u5b9a\u4e49\u5c11\u7684\u8bdd\u4f1a\u6709\u70b9\u6d6a\u8d39\u7ed1\u5b9a\u548cuniform\u8c03\u7528\uff09\u3002 Important \u50cf\u8fd9\u6837\u7684\u95ee\u9898\u6709\u5f88\u591a\u79cd\u4e0d\u540c\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5982\u679c\u4f60\u4e0d\u559c\u6b22\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u4f60\u53ef\u4ee5\u81ea\u5df1\u60f3\u4e00\u4e2a\u4f60\u81ea\u5df1\u7684\u89e3\u51b3\u529e\u6cd5\u3002 \u6700\u7ec8\u7684\u6e32\u67d3\u4ee3\u7801\u662f\u8fd9\u6837\u7684\uff1a void Draw(Shader shader) { unsigned int diffuseNr = 1; unsigned int specularNr = 1; for(unsigned int i = 0; i < textures.size(); i++) { glActiveTexture(GL_TEXTURE0 + i); // \u5728\u7ed1\u5b9a\u4e4b\u524d\u6fc0\u6d3b\u76f8\u5e94\u7684\u7eb9\u7406\u5355\u5143 // \u83b7\u53d6\u7eb9\u7406\u5e8f\u53f7\uff08diffuse_textureN \u4e2d\u7684 N\uff09 string number; string name = textures[i].type; if(name == \"texture_diffuse\") number = std::to_string(diffuseNr++); else if(name == \"texture_specular\") number = std::to_string(specularNr++); shader.setInt((\"material.\" + name + number).c_str(), i); glBindTexture(GL_TEXTURE_2D, textures[i].id); } glActiveTexture(GL_TEXTURE0); // \u7ed8\u5236\u7f51\u683c glBindVertexArray(VAO); glDrawElements(GL_TRIANGLES, indices.size(), GL_UNSIGNED_INT, 0); glBindVertexArray(0); } \u6211\u4eec\u9996\u5148\u8ba1\u7b97\u4e86\u6bcf\u4e2a\u7eb9\u7406\u7c7b\u578b\u7684N-\u5206\u91cf\uff0c\u5e76\u5c06\u5176\u62fc\u63a5\u5230\u7eb9\u7406\u7c7b\u578b\u5b57\u7b26\u4e32\u4e0a\uff0c\u6765\u83b7\u53d6\u5bf9\u5e94\u7684uniform\u540d\u79f0\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u67e5\u627e\u5bf9\u5e94\u7684\u91c7\u6837\u5668\uff0c\u5c06\u5b83\u7684\u4f4d\u7f6e\u503c\u8bbe\u7f6e\u4e3a\u5f53\u524d\u6fc0\u6d3b\u7684\u7eb9\u7406\u5355\u5143\uff0c\u5e76\u7ed1\u5b9a\u7eb9\u7406\u3002\u8fd9\u4e5f\u662f\u6211\u4eec\u5728 Draw \u51fd\u6570\u4e2d\u9700\u8981\u7740\u8272\u5668\u7684\u539f\u56e0\u3002\u6211\u4eec\u4e5f\u5c06 \"material.\" \u6dfb\u52a0\u5230\u4e86\u6700\u7ec8\u7684uniform\u540d\u79f0\u4e2d\uff0c\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u5c06\u7eb9\u7406\u50a8\u5b58\u5728\u4e00\u4e2a\u6750\u8d28\u7ed3\u6784\u4f53\u4e2d\uff08\u8fd9\u5728\u6bcf\u4e2a\u5b9e\u73b0\u4e2d\u53ef\u80fd\u90fd\u4e0d\u540c\uff09\u3002 Important \u6ce8\u610f\u6211\u4eec\u5728\u5c06\u6f2b\u53cd\u5c04\u8ba1\u6570\u5668\u548c\u955c\u9762\u5149\u8ba1\u6570\u5668\u63d2\u5165 stringstream \u65f6\uff0c\u5bf9\u5b83\u4eec\u8fdb\u884c\u4e86\u9012\u589e\u3002\u5728C++\u4e2d\uff0c\u8fd9\u4e2a\u9012\u589e\u64cd\u4f5c\uff1a variable++ \u5c06\u4f1a\u8fd4\u56de\u53d8\u91cf\u672c\u8eab\uff0c \u4e4b\u540e \u518d\u9012\u589e\uff0c\u800c ++variable \u5219\u662f \u5148 \u9012\u589e\uff0c\u518d\u8fd4\u56de\u503c\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u662f\u9996\u5148\u5c06\u539f\u672c\u7684\u8ba1\u6570\u5668\u503c\u63d2\u5165 stringstream \uff0c\u4e4b\u540e\u518d\u9012\u589e\u5b83\uff0c\u4f9b\u4e0b\u4e00\u6b21\u5faa\u73af\u4f7f\u7528\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230 Mesh \u7c7b\u7684\u5b8c\u6574\u6e90\u4ee3\u7801 \u6211\u4eec\u521a\u5b9a\u4e49\u7684 Mesh \u7c7b\u662f\u6211\u4eec\u4e4b\u524d\u8ba8\u8bba\u7684\u5f88\u591a\u8bdd\u9898\u7684\u62bd\u8c61\u7ed3\u679c\u3002\u5728 \u4e0b\u4e00\u8282 \u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u6a21\u578b\uff0c\u4f5c\u4e3a\u591a\u4e2a\u7f51\u683c\u5bf9\u8c61\u7684\u5bb9\u5668\uff0c\u5e76\u771f\u6b63\u5730\u5b9e\u73b0Assimp\u7684\u52a0\u8f7d\u63a5\u53e3\u3002","title":"\u7f51\u683c"},{"location":"03%20Model%20Loading/02%20Mesh/#_1","text":"\u539f\u6587 Mesh \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 AoZhang \u901a\u8fc7\u4f7f\u7528Assimp\uff0c\u6211\u4eec\u53ef\u4ee5\u52a0\u8f7d\u4e0d\u540c\u7684\u6a21\u578b\u5230\u7a0b\u5e8f\u4e2d\uff0c\u4f46\u662f\u8f7d\u5165\u540e\u5b83\u4eec\u90fd\u88ab\u50a8\u5b58\u4e3aAssimp\u7684\u6570\u636e\u7ed3\u6784\u3002\u6211\u4eec\u6700\u7ec8\u4ecd\u8981\u5c06\u8fd9\u4e9b\u6570\u636e\u8f6c\u6362\u4e3aOpenGL\u80fd\u591f\u7406\u89e3\u7684\u683c\u5f0f\uff0c\u8fd9\u6837\u624d\u80fd\u6e32\u67d3\u8fd9\u4e2a\u7269\u4f53\u3002\u6211\u4eec\u4ece\u4e0a\u4e00\u8282\u4e2d\u5b66\u5230\uff0c\u7f51\u683c(Mesh)\u4ee3\u8868\u7684\u662f\u5355\u4e2a\u7684\u53ef\u7ed8\u5236\u5b9e\u4f53\uff0c\u6211\u4eec\u73b0\u5728\u5148\u6765\u5b9a\u4e49\u4e00\u4e2a\u6211\u4eec\u81ea\u5df1\u7684\u7f51\u683c\u7c7b\u3002 \u9996\u5148\u6211\u4eec\u6765\u56de\u987e\u4e00\u4e0b\u6211\u4eec\u76ee\u524d\u5b66\u5230\u7684\u77e5\u8bc6\uff0c\u60f3\u60f3\u4e00\u4e2a\u7f51\u683c\u6700\u5c11\u9700\u8981\u4ec0\u4e48\u6570\u636e\u3002\u4e00\u4e2a\u7f51\u683c\u5e94\u8be5\u81f3\u5c11\u9700\u8981\u4e00\u7cfb\u5217\u7684\u9876\u70b9\uff0c\u6bcf\u4e2a\u9876\u70b9\u5305\u542b\u4e00\u4e2a\u4f4d\u7f6e\u5411\u91cf\u3001\u4e00\u4e2a\u6cd5\u5411\u91cf\u548c\u4e00\u4e2a\u7eb9\u7406\u5750\u6807\u5411\u91cf\u3002\u4e00\u4e2a\u7f51\u683c\u8fd8\u5e94\u8be5\u5305\u542b\u7528\u4e8e\u7d22\u5f15\u7ed8\u5236\u7684\u7d22\u5f15\u4ee5\u53ca\u7eb9\u7406\u5f62\u5f0f\u7684\u6750\u8d28\u6570\u636e\uff08\u6f2b\u53cd\u5c04/\u955c\u9762\u5149\u8d34\u56fe\uff09\u3002 \u65e2\u7136\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u7f51\u683c\u7c7b\u7684\u6700\u4f4e\u9700\u6c42\uff0c\u6211\u4eec\u53ef\u4ee5\u5728OpenGL\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u9876\u70b9\u4e86\uff1a struct Vertex { glm::vec3 Position; glm::vec3 Normal; glm::vec2 TexCoords; }; \u6211\u4eec\u5c06\u6240\u6709\u9700\u8981\u7684\u5411\u91cf\u50a8\u5b58\u5230\u4e00\u4e2a\u53eb\u505a Vertex \u7684\u7ed3\u6784\u4f53\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u6765\u7d22\u5f15\u6bcf\u4e2a\u9876\u70b9\u5c5e\u6027\u3002\u9664\u4e86 Vertex \u7ed3\u6784\u4f53\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u7eb9\u7406\u6570\u636e\u6574\u7406\u5230\u4e00\u4e2a Texture \u7ed3\u6784\u4f53\u4e2d\u3002 struct Texture { unsigned int id; string type; }; \u6211\u4eec\u50a8\u5b58\u4e86\u7eb9\u7406\u7684id\u4ee5\u53ca\u5b83\u7684\u7c7b\u578b\uff0c\u6bd4\u5982\u662f\u6f2b\u53cd\u5c04\u8d34\u56fe\u6216\u8005\u662f\u955c\u9762\u5149\u8d34\u56fe\u3002 \u77e5\u9053\u4e86\u9876\u70b9\u548c\u7eb9\u7406\u7684\u5b9e\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u5b9a\u4e49\u7f51\u683c\u7c7b\u7684\u7ed3\u6784\u4e86\uff1a class Mesh { public: /* \u7f51\u683c\u6570\u636e */ vector<Vertex> vertices; vector<unsigned int> indices; vector<Texture> textures; /* \u51fd\u6570 */ Mesh(vector<Vertex> vertices, vector<unsigned int> indices, vector<Texture> textures); void Draw(Shader &shader); private: /* \u6e32\u67d3\u6570\u636e */ unsigned int VAO, VBO, EBO; /* \u51fd\u6570 */ void setupMesh(); }; \u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u7c7b\u5e76\u4e0d\u590d\u6742\u3002\u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u5c06\u6240\u6709\u5fc5\u987b\u7684\u6570\u636e\u8d4b\u4e88\u4e86\u7f51\u683c\uff0c\u6211\u4eec\u5728 setupMesh \u51fd\u6570\u4e2d\u521d\u59cb\u5316\u7f13\u51b2\uff0c\u5e76\u6700\u7ec8\u4f7f\u7528 Draw \u51fd\u6570\u6765\u7ed8\u5236\u7f51\u683c\u3002\u6ce8\u610f\u6211\u4eec\u5c06\u4e00\u4e2a\u7740\u8272\u5668\u4f20\u5165\u4e86 Draw \u51fd\u6570\u4e2d\uff0c\u5c06\u7740\u8272\u5668\u4f20\u5165\u7f51\u683c\u7c7b\u4e2d\u53ef\u4ee5\u8ba9\u6211\u4eec\u5728\u7ed8\u5236\u4e4b\u524d\u8bbe\u7f6e\u4e00\u4e9buniform\uff08\u50cf\u662f\u94fe\u63a5\u91c7\u6837\u5668\u5230\u7eb9\u7406\u5355\u5143\uff09\u3002 \u6784\u9020\u51fd\u6570\u7684\u5185\u5bb9\u975e\u5e38\u6613\u4e8e\u7406\u89e3\u3002\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\u8bbe\u7f6e\u7c7b\u7684\u516c\u6709\u53d8\u91cf\u5c31\u53ef\u4ee5\u4e86\u3002\u6211\u4eec\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8fd8\u8c03\u7528\u4e86 setupMesh \u51fd\u6570\uff1a Mesh(vector<Vertex> vertices, vector<unsigned int> indices, vector<Texture> textures) { this->vertices = vertices; this->indices = indices; this->textures = textures; setupMesh(); } \u8fd9\u91cc\u6ca1\u4ec0\u4e48\u53ef\u8bf4\u7684\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u8ba8\u8bba setupMesh \u51fd\u6570\u3002","title":"\u7f51\u683c"},{"location":"03%20Model%20Loading/02%20Mesh/#_2","text":"\u591a\u4e8f\u4e86\u6784\u9020\u51fd\u6570\uff0c\u6211\u4eec\u73b0\u5728\u6709\u4e00\u5927\u5217\u7684\u7f51\u683c\u6570\u636e\u53ef\u4ee5\u7528\u4e8e\u6e32\u67d3\u3002\u5728\u6b64\u4e4b\u524d\u6211\u4eec\u8fd8\u5fc5\u987b\u914d\u7f6e\u6b63\u786e\u7684\u7f13\u51b2\uff0c\u5e76\u901a\u8fc7\u9876\u70b9\u5c5e\u6027\u6307\u9488\u5b9a\u4e49\u9876\u70b9\u7740\u8272\u5668\u7684\u5e03\u5c40\u3002\u73b0\u5728\u4f60\u5e94\u8be5\u5bf9\u8fd9\u4e9b\u6982\u5ff5\u90fd\u5f88\u719f\u6089\u4e86\uff0c\u4f46\u6211\u4eec\u8fd9\u6b21\u4f1a\u7a0d\u5fae\u6709\u4e00\u70b9\u53d8\u52a8:\u4f7f\u7528\u7ed3\u6784\u4f53\u4e2d\u7684\u9876\u70b9\u6570\u636e\uff1a void setupMesh() { glGenVertexArrays(1, &VAO); glGenBuffers(1, &VBO); glGenBuffers(1, &EBO); glBindVertexArray(VAO); glBindBuffer(GL_ARRAY_BUFFER, VBO); glBufferData(GL_ARRAY_BUFFER, vertices.size() * sizeof(Vertex), &vertices[0], GL_STATIC_DRAW); glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO); glBufferData(GL_ELEMENT_ARRAY_BUFFER, indices.size() * sizeof(unsigned int), &indices[0], GL_STATIC_DRAW); // \u9876\u70b9\u4f4d\u7f6e glEnableVertexAttribArray(0); glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, sizeof(Vertex), (void*)0); // \u9876\u70b9\u6cd5\u7ebf glEnableVertexAttribArray(1); glVertexAttribPointer(1, 3, GL_FLOAT, GL_FALSE, sizeof(Vertex), (void*)offsetof(Vertex, Normal)); // \u9876\u70b9\u7eb9\u7406\u5750\u6807 glEnableVertexAttribArray(2); glVertexAttribPointer(2, 2, GL_FLOAT, GL_FALSE, sizeof(Vertex), (void*)offsetof(Vertex, TexCoords)); glBindVertexArray(0); } \u4ee3\u7801\u5e94\u8be5\u548c\u4f60\u6240\u60f3\u5f97\u6ca1\u4ec0\u4e48\u4e0d\u540c\uff0c\u4f46\u6709\u4e86 Vertex \u7ed3\u6784\u4f53\u7684\u5e2e\u52a9\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e9b\u5c0f\u6280\u5de7\u3002 C++\u7ed3\u6784\u4f53\u6709\u4e00\u4e2a\u5f88\u68d2\u7684\u7279\u6027\uff0c\u5b83\u4eec\u7684\u5185\u5b58\u5e03\u5c40\u662f\u8fde\u7eed\u7684(Sequential)\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u5c06\u7ed3\u6784\u4f53\u4f5c\u4e3a\u4e00\u4e2a\u6570\u636e\u6570\u7ec4\u4f7f\u7528\uff0c\u90a3\u4e48\u5b83\u5c06\u4f1a\u4ee5\u987a\u5e8f\u6392\u5217\u7ed3\u6784\u4f53\u7684\u53d8\u91cf\uff0c\u8fd9\u5c06\u4f1a\u76f4\u63a5\u8f6c\u6362\u4e3a\u6211\u4eec\u5728\u6570\u7ec4\u7f13\u51b2\u4e2d\u6240\u9700\u8981\u7684float\uff08\u5b9e\u9645\u4e0a\u662f\u5b57\u8282\uff09\u6570\u7ec4\u3002\u6bd4\u5982\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u586b\u5145\u540e\u7684 Vertex \u7ed3\u6784\u4f53\uff0c\u90a3\u4e48\u5b83\u7684\u5185\u5b58\u5e03\u5c40\u5c06\u4f1a\u7b49\u4e8e\uff1a Vertex vertex; vertex.Position = glm::vec3(0.2f, 0.4f, 0.6f); vertex.Normal = glm::vec3(0.0f, 1.0f, 0.0f); vertex.TexCoords = glm::vec2(1.0f, 0.0f); // = [0.2f, 0.4f, 0.6f, 0.0f, 1.0f, 0.0f, 1.0f, 0.0f]; \u7531\u4e8e\u6709\u4e86\u8fd9\u4e2a\u6709\u7528\u7684\u7279\u6027\uff0c\u6211\u4eec\u80fd\u591f\u76f4\u63a5\u4f20\u5165\u4e00\u5927\u5217\u7684 Vertex \u7ed3\u6784\u4f53\u7684\u6307\u9488\u4f5c\u4e3a\u7f13\u51b2\u7684\u6570\u636e\uff0c\u5b83\u4eec\u5c06\u4f1a\u5b8c\u7f8e\u5730\u8f6c\u6362\u4e3a glBufferData \u6240\u80fd\u7528\u7684\u53c2\u6570\uff1a glBufferData(GL_ARRAY_BUFFER, vertices.size() * sizeof(Vertex), &vertices[0], GL_STATIC_DRAW); \u81ea\u7136 sizeof \u8fd0\u7b97\u4e5f\u53ef\u4ee5\u7528\u5728\u7ed3\u6784\u4f53\u4e0a\u6765\u8ba1\u7b97\u5b83\u7684\u5b57\u8282\u5927\u5c0f\u3002\u8fd9\u4e2a\u5e94\u8be5\u662f32\u5b57\u8282\u7684\uff088\u4e2afloat * \u6bcf\u4e2a4\u5b57\u8282\uff09\u3002 \u7ed3\u6784\u4f53\u7684\u53e6\u5916\u4e00\u4e2a\u5f88\u597d\u7684\u7528\u9014\u662f\u5b83\u7684\u9884\u5904\u7406\u6307\u4ee4 offsetof(s, m) \uff0c\u5b83\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8fd9\u4e2a\u7ed3\u6784\u4f53\u4e2d\u53d8\u91cf\u7684\u540d\u5b57\u3002\u8fd9\u4e2a\u5b8f\u4f1a\u8fd4\u56de\u90a3\u4e2a\u53d8\u91cf\u8ddd\u7ed3\u6784\u4f53\u5934\u90e8\u7684\u5b57\u8282\u504f\u79fb\u91cf(Byte Offset)\u3002\u8fd9\u6b63\u597d\u53ef\u4ee5\u7528\u5728\u5b9a\u4e49 glVertexAttribPointer \u51fd\u6570\u4e2d\u7684\u504f\u79fb\u53c2\u6570\uff1a glVertexAttribPointer(1, 3, GL_FLOAT, GL_FALSE, sizeof(Vertex), (void*)offsetof(Vertex, Normal)); \u504f\u79fb\u91cf\u73b0\u5728\u662f\u4f7f\u7528 offsetof \u6765\u5b9a\u4e49\u4e86\uff0c\u5728\u8fd9\u91cc\u5b83\u4f1a\u5c06\u6cd5\u5411\u91cf\u7684\u5b57\u8282\u504f\u79fb\u91cf\u8bbe\u7f6e\u4e3a\u7ed3\u6784\u4f53\u4e2d\u6cd5\u5411\u91cf\u7684\u504f\u79fb\u91cf\uff0c\u4e5f\u5c31\u662f3\u4e2afloat\uff0c\u537312\u5b57\u8282\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u540c\u6837\u5c06\u6b65\u957f\u53c2\u6570\u8bbe\u7f6e\u4e3a\u4e86 Vertex \u7ed3\u6784\u4f53\u7684\u5927\u5c0f\u3002 \u4f7f\u7528\u8fd9\u6837\u7684\u4e00\u4e2a\u7ed3\u6784\u4f53\u4e0d\u4ec5\u80fd\u591f\u63d0\u4f9b\u53ef\u8bfb\u6027\u66f4\u9ad8\u7684\u4ee3\u7801\uff0c\u4e5f\u5141\u8bb8\u6211\u4eec\u5f88\u5bb9\u6613\u5730\u62d3\u5c55\u8fd9\u4e2a\u7ed3\u6784\u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u6dfb\u52a0\u53e6\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u5b83\u6dfb\u52a0\u5230\u7ed3\u6784\u4f53\u4e2d\u5c31\u53ef\u4ee5\u4e86\u3002\u7531\u4e8e\u5b83\u7684\u7075\u6d3b\u6027\uff0c\u6e32\u67d3\u7684\u4ee3\u7801\u4e0d\u4f1a\u88ab\u7834\u574f\u3002","title":"\u521d\u59cb\u5316"},{"location":"03%20Model%20Loading/02%20Mesh/#_3","text":"\u6211\u4eec\u9700\u8981\u4e3a Mesh \u7c7b\u5b9a\u4e49\u6700\u540e\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u7684 Draw \u51fd\u6570\u3002\u5728\u771f\u6b63\u6e32\u67d3\u8fd9\u4e2a\u7f51\u683c\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5728\u8c03\u7528 glDrawElements \u51fd\u6570\u4e4b\u524d\u5148\u7ed1\u5b9a\u76f8\u5e94\u7684\u7eb9\u7406\u3002\u7136\u800c\uff0c\u8fd9\u5b9e\u9645\u4e0a\u6709\u4e9b\u56f0\u96be\uff0c\u6211\u4eec\u4e00\u5f00\u59cb\u5e76\u4e0d\u77e5\u9053\u8fd9\u4e2a\u7f51\u683c\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u6709\u591a\u5c11\u7eb9\u7406\u3001\u7eb9\u7406\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\u3002\u6240\u4ee5\u6211\u4eec\u8be5\u5982\u4f55\u5728\u7740\u8272\u5668\u4e2d\u8bbe\u7f6e\u7eb9\u7406\u5355\u5143\u548c\u91c7\u6837\u5668\u5462\uff1f \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u8bbe\u5b9a\u4e00\u4e2a\u547d\u540d\u6807\u51c6\uff1a\u6bcf\u4e2a\u6f2b\u53cd\u5c04\u7eb9\u7406\u88ab\u547d\u540d\u4e3a texture_diffuseN \uff0c\u6bcf\u4e2a\u955c\u9762\u5149\u7eb9\u7406\u5e94\u8be5\u88ab\u547d\u540d\u4e3a texture_specularN \uff0c\u5176\u4e2d N \u7684\u8303\u56f4\u662f1\u5230\u7eb9\u7406\u91c7\u6837\u5668\u6700\u5927\u5141\u8bb8\u7684\u6570\u5b57\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u5bf9\u67d0\u4e00\u4e2a\u7f51\u683c\u67093\u4e2a\u6f2b\u53cd\u5c04\u7eb9\u7406\uff0c2\u4e2a\u955c\u9762\u5149\u7eb9\u7406\uff0c\u5b83\u4eec\u7684\u7eb9\u7406\u91c7\u6837\u5668\u5e94\u8be5\u4e4b\u540e\u4f1a\u88ab\u8c03\u7528\uff1a uniform sampler2D texture_diffuse1; uniform sampler2D texture_diffuse2; uniform sampler2D texture_diffuse3; uniform sampler2D texture_specular1; uniform sampler2D texture_specular2; \u6839\u636e\u8fd9\u4e2a\u6807\u51c6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7740\u8272\u5668\u4e2d\u5b9a\u4e49\u4efb\u610f\u9700\u8981\u6570\u91cf\u7684\u7eb9\u7406\u91c7\u6837\u5668\uff0c\u5982\u679c\u4e00\u4e2a\u7f51\u683c\u771f\u7684\u5305\u542b\u4e86\uff08\u8fd9\u4e48\u591a\uff09\u7eb9\u7406\uff0c\u6211\u4eec\u4e5f\u80fd\u77e5\u9053\u5b83\u4eec\u7684\u540d\u5b57\u662f\u4ec0\u4e48\u3002\u6839\u636e\u8fd9\u4e2a\u6807\u51c6\uff0c\u6211\u4eec\u4e5f\u80fd\u5728\u4e00\u4e2a\u7f51\u683c\u4e2d\u5904\u7406\u4efb\u610f\u6570\u91cf\u7684\u7eb9\u7406\uff0c\u5f00\u53d1\u8005\u4e5f\u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u9700\u8981\u4f7f\u7528\u7684\u6570\u91cf\uff0c\u4ed6\u53ea\u9700\u8981\u5b9a\u4e49\u6b63\u786e\u7684\u91c7\u6837\u5668\u5c31\u53ef\u4ee5\u4e86\uff08\u867d\u7136\u5b9a\u4e49\u5c11\u7684\u8bdd\u4f1a\u6709\u70b9\u6d6a\u8d39\u7ed1\u5b9a\u548cuniform\u8c03\u7528\uff09\u3002 Important \u50cf\u8fd9\u6837\u7684\u95ee\u9898\u6709\u5f88\u591a\u79cd\u4e0d\u540c\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5982\u679c\u4f60\u4e0d\u559c\u6b22\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u4f60\u53ef\u4ee5\u81ea\u5df1\u60f3\u4e00\u4e2a\u4f60\u81ea\u5df1\u7684\u89e3\u51b3\u529e\u6cd5\u3002 \u6700\u7ec8\u7684\u6e32\u67d3\u4ee3\u7801\u662f\u8fd9\u6837\u7684\uff1a void Draw(Shader shader) { unsigned int diffuseNr = 1; unsigned int specularNr = 1; for(unsigned int i = 0; i < textures.size(); i++) { glActiveTexture(GL_TEXTURE0 + i); // \u5728\u7ed1\u5b9a\u4e4b\u524d\u6fc0\u6d3b\u76f8\u5e94\u7684\u7eb9\u7406\u5355\u5143 // \u83b7\u53d6\u7eb9\u7406\u5e8f\u53f7\uff08diffuse_textureN \u4e2d\u7684 N\uff09 string number; string name = textures[i].type; if(name == \"texture_diffuse\") number = std::to_string(diffuseNr++); else if(name == \"texture_specular\") number = std::to_string(specularNr++); shader.setInt((\"material.\" + name + number).c_str(), i); glBindTexture(GL_TEXTURE_2D, textures[i].id); } glActiveTexture(GL_TEXTURE0); // \u7ed8\u5236\u7f51\u683c glBindVertexArray(VAO); glDrawElements(GL_TRIANGLES, indices.size(), GL_UNSIGNED_INT, 0); glBindVertexArray(0); } \u6211\u4eec\u9996\u5148\u8ba1\u7b97\u4e86\u6bcf\u4e2a\u7eb9\u7406\u7c7b\u578b\u7684N-\u5206\u91cf\uff0c\u5e76\u5c06\u5176\u62fc\u63a5\u5230\u7eb9\u7406\u7c7b\u578b\u5b57\u7b26\u4e32\u4e0a\uff0c\u6765\u83b7\u53d6\u5bf9\u5e94\u7684uniform\u540d\u79f0\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u67e5\u627e\u5bf9\u5e94\u7684\u91c7\u6837\u5668\uff0c\u5c06\u5b83\u7684\u4f4d\u7f6e\u503c\u8bbe\u7f6e\u4e3a\u5f53\u524d\u6fc0\u6d3b\u7684\u7eb9\u7406\u5355\u5143\uff0c\u5e76\u7ed1\u5b9a\u7eb9\u7406\u3002\u8fd9\u4e5f\u662f\u6211\u4eec\u5728 Draw \u51fd\u6570\u4e2d\u9700\u8981\u7740\u8272\u5668\u7684\u539f\u56e0\u3002\u6211\u4eec\u4e5f\u5c06 \"material.\" \u6dfb\u52a0\u5230\u4e86\u6700\u7ec8\u7684uniform\u540d\u79f0\u4e2d\uff0c\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u5c06\u7eb9\u7406\u50a8\u5b58\u5728\u4e00\u4e2a\u6750\u8d28\u7ed3\u6784\u4f53\u4e2d\uff08\u8fd9\u5728\u6bcf\u4e2a\u5b9e\u73b0\u4e2d\u53ef\u80fd\u90fd\u4e0d\u540c\uff09\u3002 Important \u6ce8\u610f\u6211\u4eec\u5728\u5c06\u6f2b\u53cd\u5c04\u8ba1\u6570\u5668\u548c\u955c\u9762\u5149\u8ba1\u6570\u5668\u63d2\u5165 stringstream \u65f6\uff0c\u5bf9\u5b83\u4eec\u8fdb\u884c\u4e86\u9012\u589e\u3002\u5728C++\u4e2d\uff0c\u8fd9\u4e2a\u9012\u589e\u64cd\u4f5c\uff1a variable++ \u5c06\u4f1a\u8fd4\u56de\u53d8\u91cf\u672c\u8eab\uff0c \u4e4b\u540e \u518d\u9012\u589e\uff0c\u800c ++variable \u5219\u662f \u5148 \u9012\u589e\uff0c\u518d\u8fd4\u56de\u503c\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u662f\u9996\u5148\u5c06\u539f\u672c\u7684\u8ba1\u6570\u5668\u503c\u63d2\u5165 stringstream \uff0c\u4e4b\u540e\u518d\u9012\u589e\u5b83\uff0c\u4f9b\u4e0b\u4e00\u6b21\u5faa\u73af\u4f7f\u7528\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230 Mesh \u7c7b\u7684\u5b8c\u6574\u6e90\u4ee3\u7801 \u6211\u4eec\u521a\u5b9a\u4e49\u7684 Mesh \u7c7b\u662f\u6211\u4eec\u4e4b\u524d\u8ba8\u8bba\u7684\u5f88\u591a\u8bdd\u9898\u7684\u62bd\u8c61\u7ed3\u679c\u3002\u5728 \u4e0b\u4e00\u8282 \u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u6a21\u578b\uff0c\u4f5c\u4e3a\u591a\u4e2a\u7f51\u683c\u5bf9\u8c61\u7684\u5bb9\u5668\uff0c\u5e76\u771f\u6b63\u5730\u5b9e\u73b0Assimp\u7684\u52a0\u8f7d\u63a5\u53e3\u3002","title":"\u6e32\u67d3"},{"location":"03%20Model%20Loading/03%20Model/","text":"\u6a21\u578b \u539f\u6587 Model \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 AoZhang \u73b0\u5728\u662f\u65f6\u5019\u63a5\u89e6Assimp\u5e76\u521b\u5efa\u5b9e\u9645\u7684\u52a0\u8f7d\u548c\u8f6c\u6362\u4ee3\u7801\u4e86\u3002\u8fd9\u4e2a\u6559\u7a0b\u7684\u76ee\u6807\u662f\u521b\u5efa\u53e6\u4e00\u4e2a\u7c7b\u6765\u5b8c\u6574\u5730\u8868\u793a\u4e00\u4e2a\u6a21\u578b\uff0c\u6216\u8005\u8bf4\u662f\u5305\u542b\u591a\u4e2a\u7f51\u683c\uff0c\u591a\u4e2a\u7eb9\u7406\u7684\u6a21\u578b\u3002\u4e00\u4e2a\u5305\u542b\u6728\u5236\u9633\u53f0\u3001\u5854\u697c\u3001\u751a\u81f3\u6e38\u6cf3\u6c60\u7684\u623f\u5b50\u53ef\u80fd\u4ecd\u4f1a\u88ab\u52a0\u8f7d\u4e3a\u4e00\u4e2a\u6a21\u578b\u3002\u6211\u4eec\u4f1a\u4f7f\u7528Assimp\u6765\u52a0\u8f7d\u6a21\u578b\uff0c\u5e76\u5c06\u5b83\u8f6c\u6362(Translate)\u81f3\u591a\u4e2a\u5728 \u4e0a\u4e00\u8282 \u4e2d\u521b\u5efa\u7684 Mesh \u5bf9\u8c61\u3002 \u4e8b\u4e0d\u5b9c\u8fdf\uff0c\u6211\u4f1a\u5148\u628a Model \u7c7b\u7684\u7ed3\u6784\u7ed9\u4f60\uff1a class Model { public: /* \u51fd\u6570 */ Model(char *path) { loadModel(path); } void Draw(Shader shader); private: /* \u6a21\u578b\u6570\u636e */ vector<Mesh> meshes; string directory; /* \u51fd\u6570 */ void loadModel(string path); void processNode(aiNode *node, const aiScene *scene); Mesh processMesh(aiMesh *mesh, const aiScene *scene); vector<Texture> loadMaterialTextures(aiMaterial *mat, aiTextureType type, string typeName); }; Model \u7c7b\u5305\u542b\u4e86\u4e00\u4e2a Mesh \u5bf9\u8c61\u7684vector\uff08\u8bd1\u6ce8\uff1a\u8fd9\u91cc\u6307\u7684\u662fC++\u4e2d\u7684vector\u6a21\u677f\u7c7b\uff0c\u4e4b\u540e\u9047\u5230\u5747\u4e0d\u8bd1\uff09\uff0c\u6784\u9020\u51fd\u6570\u9700\u8981\u6211\u4eec\u7ed9\u5b83\u4e00\u4e2a\u6587\u4ef6\u8def\u5f84\u3002\u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u5b83\u4f1a\u76f4\u63a5\u901a\u8fc7 loadModel \u6765\u52a0\u8f7d\u6587\u4ef6\u3002\u79c1\u6709\u51fd\u6570\u5c06\u4f1a\u5904\u7406Assimp\u5bfc\u5165\u8fc7\u7a0b\u4e2d\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u4ecb\u7ecd\u5b83\u4eec\u3002\u6211\u4eec\u8fd8\u5c06\u50a8\u5b58\u6587\u4ef6\u8def\u5f84\u7684\u76ee\u5f55\uff0c\u5728\u4e4b\u540e\u52a0\u8f7d\u7eb9\u7406\u7684\u65f6\u5019\u8fd8\u4f1a\u7528\u5230\u5b83\u3002 Draw \u51fd\u6570\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u4e4b\u5904\uff0c\u57fa\u672c\u4e0a\u5c31\u662f\u904d\u5386\u4e86\u6240\u6709\u7f51\u683c\uff0c\u5e76\u8c03\u7528\u5b83\u4eec\u5404\u81ea\u7684 Draw \u51fd\u6570\u3002 void Draw(Shader &shader) { for(unsigned int i = 0; i < meshes.size(); i++) meshes[i].Draw(shader); } \u5bfc\u51653D\u6a21\u578b\u5230OpenGL \u8981\u60f3\u5bfc\u5165\u4e00\u4e2a\u6a21\u578b\uff0c\u5e76\u5c06\u5b83\u8f6c\u6362\u5230\u6211\u4eec\u81ea\u5df1\u7684\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u8bdd\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u5305\u542bAssimp\u5bf9\u5e94\u7684\u5934\u6587\u4ef6\uff1a #include <assimp/Importer.hpp> #include <assimp/scene.h> #include <assimp/postprocess.h> \u9996\u5148\u9700\u8981\u8c03\u7528\u7684\u51fd\u6570\u662f loadModel \uff0c\u5b83\u4f1a\u4ece\u6784\u9020\u51fd\u6570\u4e2d\u76f4\u63a5\u8c03\u7528\u3002\u5728 loadModel \u4e2d\uff0c\u6211\u4eec\u4f7f\u7528Assimp\u6765\u52a0\u8f7d\u6a21\u578b\u81f3Assimp\u7684\u4e00\u4e2a\u53eb\u505a scene \u7684\u6570\u636e\u7ed3\u6784\u4e2d\u3002\u4f60\u53ef\u80fd\u8fd8\u8bb0\u5f97\u5728\u6a21\u578b\u52a0\u8f7d\u7ae0\u8282\u7684 \u7b2c\u4e00\u8282 \u6559\u7a0b\u4e2d\uff0c\u8fd9\u662fAssimp\u6570\u636e\u63a5\u53e3\u7684\u6839\u5bf9\u8c61\u3002\u4e00\u65e6\u6211\u4eec\u6709\u4e86\u8fd9\u4e2a\u573a\u666f\u5bf9\u8c61\uff0c\u6211\u4eec\u5c31\u80fd\u8bbf\u95ee\u5230\u52a0\u8f7d\u540e\u7684\u6a21\u578b\u4e2d\u6240\u6709\u6240\u9700\u7684\u6570\u636e\u4e86\u3002 Assimp\u5f88\u68d2\u7684\u4e00\u70b9\u5728\u4e8e\uff0c\u5b83\u62bd\u8c61\u6389\u4e86\u52a0\u8f7d\u4e0d\u540c\u6587\u4ef6\u683c\u5f0f\u7684\u6240\u6709\u6280\u672f\u7ec6\u8282\uff0c\u53ea\u9700\u8981\u4e00\u884c\u4ee3\u7801\u5c31\u80fd\u5b8c\u6210\u6240\u6709\u7684\u5de5\u4f5c\uff1a Assimp::Importer importer; const aiScene *scene = importer.ReadFile(path, aiProcess_Triangulate | aiProcess_FlipUVs); \u6211\u4eec\u9996\u5148\u58f0\u660e\u4e86Assimp\u547d\u540d\u7a7a\u95f4\u5185\u7684\u4e00\u4e2a Importer \uff0c\u4e4b\u540e\u8c03\u7528\u4e86\u5b83\u7684 ReadFile \u51fd\u6570\u3002\u8fd9\u4e2a\u51fd\u6570\u9700\u8981\u4e00\u4e2a\u6587\u4ef6\u8def\u5f84\uff0c\u5b83\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4e00\u4e9b \u540e\u671f\u5904\u7406 (Post-processing)\u7684\u9009\u9879\u3002\u9664\u4e86\u52a0\u8f7d\u6587\u4ef6\u4e4b\u5916\uff0cAssimp\u5141\u8bb8\u6211\u4eec\u8bbe\u5b9a\u4e00\u4e9b\u9009\u9879\u6765\u5f3a\u5236\u5b83\u5bf9\u5bfc\u5165\u7684\u6570\u636e\u505a\u4e00\u4e9b\u989d\u5916\u7684\u8ba1\u7b97\u6216\u64cd\u4f5c\u3002\u901a\u8fc7\u8bbe\u5b9a aiProcess_Triangulate \uff0c\u6211\u4eec\u544a\u8bc9Assimp\uff0c\u5982\u679c\u6a21\u578b\u4e0d\u662f\uff08\u5168\u90e8\uff09\u7531\u4e09\u89d2\u5f62\u7ec4\u6210\uff0c\u5b83\u9700\u8981\u5c06\u6a21\u578b\u6240\u6709\u7684\u56fe\u5143\u5f62\u72b6\u53d8\u6362\u4e3a\u4e09\u89d2\u5f62\u3002 aiProcess_FlipUVs \u5c06\u5728\u5904\u7406\u7684\u65f6\u5019\u7ffb\u8f6cy\u8f74\u7684\u7eb9\u7406\u5750\u6807\uff08\u4f60\u53ef\u80fd\u8fd8\u8bb0\u5f97\u6211\u4eec\u5728 \u7eb9\u7406 \u6559\u7a0b\u4e2d\u8bf4\u8fc7\uff0c\u5728OpenGL\u4e2d\u5927\u90e8\u5206\u7684\u56fe\u50cf\u7684y\u8f74\u90fd\u662f\u53cd\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u540e\u671f\u5904\u7406\u9009\u9879\u5c06\u4f1a\u4fee\u590d\u8fd9\u4e2a\uff09\u3002\u5176\u5b83\u4e00\u4e9b\u6bd4\u8f83\u6709\u7528\u7684\u9009\u9879\u6709\uff1a aiProcess_GenNormals \uff1a\u5982\u679c\u6a21\u578b\u4e0d\u5305\u542b\u6cd5\u5411\u91cf\u7684\u8bdd\uff0c\u5c31\u4e3a\u6bcf\u4e2a\u9876\u70b9\u521b\u5efa\u6cd5\u7ebf\u3002 aiProcess_SplitLargeMeshes \uff1a\u5c06\u6bd4\u8f83\u5927\u7684\u7f51\u683c\u5206\u5272\u6210\u66f4\u5c0f\u7684\u5b50\u7f51\u683c\uff0c\u5982\u679c\u4f60\u7684\u6e32\u67d3\u6709\u6700\u5927\u9876\u70b9\u6570\u9650\u5236\uff0c\u53ea\u80fd\u6e32\u67d3\u8f83\u5c0f\u7684\u7f51\u683c\uff0c\u90a3\u4e48\u5b83\u4f1a\u975e\u5e38\u6709\u7528\u3002 aiProcess_OptimizeMeshes \uff1a\u548c\u4e0a\u4e2a\u9009\u9879\u76f8\u53cd\uff0c\u5b83\u4f1a\u5c06\u591a\u4e2a\u5c0f\u7f51\u683c\u62fc\u63a5\u4e3a\u4e00\u4e2a\u5927\u7684\u7f51\u683c\uff0c\u51cf\u5c11\u7ed8\u5236\u8c03\u7528\u4ece\u800c\u8fdb\u884c\u4f18\u5316\u3002 Assimp\u63d0\u4f9b\u4e86\u5f88\u591a\u6709\u7528\u7684\u540e\u671f\u5904\u7406\u6307\u4ee4\uff0c\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5168\u90e8\u7684\u6307\u4ee4\u3002\u5b9e\u9645\u4e0a\u4f7f\u7528Assimp\u52a0\u8f7d\u6a21\u578b\u662f\u975e\u5e38\u5bb9\u6613\u7684\uff08\u4f60\u4e5f\u53ef\u4ee5\u770b\u5230\uff09\u3002\u56f0\u96be\u7684\u662f\u4e4b\u540e\u4f7f\u7528\u8fd4\u56de\u7684\u573a\u666f\u5bf9\u8c61\u5c06\u52a0\u8f7d\u7684\u6570\u636e\u8f6c\u6362\u5230\u4e00\u4e2a Mesh \u5bf9\u8c61\u7684\u6570\u7ec4\u3002 \u5b8c\u6574\u7684 loadModel \u51fd\u6570\u5c06\u4f1a\u662f\u8fd9\u6837\u7684\uff1a void loadModel(string path) { Assimp::Importer import; const aiScene *scene = import.ReadFile(path, aiProcess_Triangulate | aiProcess_FlipUVs); if(!scene || scene->mFlags & AI_SCENE_FLAGS_INCOMPLETE || !scene->mRootNode) { cout << \"ERROR::ASSIMP::\" << import.GetErrorString() << endl; return; } directory = path.substr(0, path.find_last_of('/')); processNode(scene->mRootNode, scene); } \u5728\u6211\u4eec\u52a0\u8f7d\u4e86\u6a21\u578b\u4e4b\u540e\uff0c\u6211\u4eec\u4f1a\u68c0\u67e5\u573a\u666f\u548c\u5176\u6839\u8282\u70b9\u4e0d\u4e3anull\uff0c\u5e76\u4e14\u68c0\u67e5\u4e86\u5b83\u7684\u4e00\u4e2a\u6807\u8bb0(Flag)\uff0c\u6765\u67e5\u770b\u8fd4\u56de\u7684\u6570\u636e\u662f\u4e0d\u662f\u4e0d\u5b8c\u6574\u7684\u3002\u5982\u679c\u9047\u5230\u4e86\u4efb\u4f55\u9519\u8bef\uff0c\u6211\u4eec\u90fd\u4f1a\u901a\u8fc7\u5bfc\u5165\u5668\u7684 GetErrorString \u51fd\u6570\u6765\u62a5\u544a\u9519\u8bef\u5e76\u8fd4\u56de\u3002\u6211\u4eec\u4e5f\u83b7\u53d6\u4e86\u6587\u4ef6\u8def\u5f84\u7684\u76ee\u5f55\u8def\u5f84\u3002 \u5982\u679c\u4ec0\u4e48\u9519\u8bef\u90fd\u6ca1\u6709\u53d1\u751f\uff0c\u6211\u4eec\u5e0c\u671b\u5904\u7406\u573a\u666f\u4e2d\u7684\u6240\u6709\u8282\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u7b2c\u4e00\u4e2a\u8282\u70b9\uff08\u6839\u8282\u70b9\uff09\u4f20\u5165\u4e86\u9012\u5f52\u7684 processNode \u51fd\u6570\u3002\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9\uff08\u53ef\u80fd\uff09\u5305\u542b\u6709\u591a\u4e2a\u5b50\u8282\u70b9\uff0c\u6211\u4eec\u5e0c\u671b\u9996\u5148\u5904\u7406\u53c2\u6570\u4e2d\u7684\u8282\u70b9\uff0c\u518d\u7ee7\u7eed\u5904\u7406\u8be5\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u8fd9\u6b63\u7b26\u5408\u4e00\u4e2a\u9012\u5f52\u7ed3\u6784\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5b9a\u4e49\u4e00\u4e2a\u9012\u5f52\u51fd\u6570\u3002\u9012\u5f52\u51fd\u6570\u5728\u505a\u4e00\u4e9b\u5904\u7406\u4e4b\u540e\uff0c\u4f7f\u7528\u4e0d\u540c\u7684\u53c2\u6570 \u9012\u5f52 \u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u81ea\u8eab\uff0c\u76f4\u5230\u67d0\u4e2a\u6761\u4ef6\u88ab\u6ee1\u8db3\u505c\u6b62\u9012\u5f52\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d \u9000\u51fa\u6761\u4ef6 (Exit Condition)\u662f\u6240\u6709\u7684\u8282\u70b9\u90fd\u88ab\u5904\u7406\u5b8c\u6bd5\u3002 \u4f60\u53ef\u80fd\u8fd8\u8bb0\u5f97Assimp\u7684\u7ed3\u6784\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u5305\u542b\u4e86\u4e00\u7cfb\u5217\u7684\u7f51\u683c\u7d22\u5f15\uff0c\u6bcf\u4e2a\u7d22\u5f15\u6307\u5411\u573a\u666f\u5bf9\u8c61\u4e2d\u7684\u90a3\u4e2a\u7279\u5b9a\u7f51\u683c\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u5c31\u60f3\u53bb\u83b7\u53d6\u8fd9\u4e9b\u7f51\u683c\u7d22\u5f15\uff0c\u83b7\u53d6\u6bcf\u4e2a\u7f51\u683c\uff0c\u5904\u7406\u6bcf\u4e2a\u7f51\u683c\uff0c\u63a5\u7740\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\u91cd\u590d\u8fd9\u4e00\u8fc7\u7a0b\u3002 processNode \u51fd\u6570\u7684\u5185\u5bb9\u5982\u4e0b\uff1a void processNode(aiNode *node, const aiScene *scene) { // \u5904\u7406\u8282\u70b9\u6240\u6709\u7684\u7f51\u683c\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09 for(unsigned int i = 0; i < node->mNumMeshes; i++) { aiMesh *mesh = scene->mMeshes[node->mMeshes[i]]; meshes.push_back(processMesh(mesh, scene)); } // \u63a5\u4e0b\u6765\u5bf9\u5b83\u7684\u5b50\u8282\u70b9\u91cd\u590d\u8fd9\u4e00\u8fc7\u7a0b for(unsigned int i = 0; i < node->mNumChildren; i++) { processNode(node->mChildren[i], scene); } } \u6211\u4eec\u9996\u5148\u68c0\u67e5\u6bcf\u4e2a\u8282\u70b9\u7684\u7f51\u683c\u7d22\u5f15\uff0c\u5e76\u7d22\u5f15\u573a\u666f\u7684 mMeshes \u6570\u7ec4\u6765\u83b7\u53d6\u5bf9\u5e94\u7684\u7f51\u683c\u3002\u8fd4\u56de\u7684\u7f51\u683c\u5c06\u4f1a\u4f20\u9012\u5230 processMesh \u51fd\u6570\u4e2d\uff0c\u5b83\u4f1a\u8fd4\u56de\u4e00\u4e2a Mesh \u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u5b58\u50a8\u5728 meshes \u5217\u8868/vector\u3002 \u6240\u6709\u7f51\u683c\u90fd\u88ab\u5904\u7406\u4e4b\u540e\uff0c\u6211\u4eec\u4f1a\u904d\u5386\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\uff0c\u5e76\u5bf9\u5b83\u4eec\u8c03\u7528\u76f8\u540c\u7684 processMesh \u51fd\u6570\u3002\u5f53\u4e00\u4e2a\u8282\u70b9\u4e0d\u518d\u6709\u4efb\u4f55\u5b50\u8282\u70b9\u4e4b\u540e\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c06\u4f1a\u505c\u6b62\u6267\u884c\u3002 Important \u8ba4\u771f\u7684\u8bfb\u8005\u53ef\u80fd\u4f1a\u53d1\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u57fa\u672c\u4e0a\u5fd8\u6389\u5904\u7406\u4efb\u4f55\u7684\u8282\u70b9\uff0c\u53ea\u9700\u8981\u904d\u5386\u573a\u666f\u5bf9\u8c61\u7684\u6240\u6709\u7f51\u683c\uff0c\u5c31\u4e0d\u9700\u8981\u4e3a\u4e86\u7d22\u5f15\u505a\u8fd9\u4e00\u5806\u590d\u6742\u7684\u4e1c\u897f\u4e86\u3002\u6211\u4eec\u4ecd\u8fd9\u4e48\u505a\u7684\u539f\u56e0\u662f\uff0c\u4f7f\u7528\u8282\u70b9\u7684\u6700\u521d\u60f3\u6cd5\u662f\u5c06\u7f51\u683c\u4e4b\u95f4\u5b9a\u4e49\u4e00\u4e2a\u7236\u5b50\u5173\u7cfb\u3002\u901a\u8fc7\u8fd9\u6837\u9012\u5f52\u5730\u904d\u5386\u8fd9\u5c42\u5173\u7cfb\uff0c\u6211\u4eec\u5c31\u80fd\u5c06\u67d0\u4e2a\u7f51\u683c\u5b9a\u4e49\u4e3a\u53e6\u4e00\u4e2a\u7f51\u683c\u7684\u7236\u7f51\u683c\u4e86\u3002 \u8fd9\u4e2a\u7cfb\u7edf\u7684\u4e00\u4e2a\u4f7f\u7528\u6848\u4f8b\u662f\uff0c\u5f53\u4f60\u60f3\u4f4d\u79fb\u4e00\u4e2a\u6c7d\u8f66\u7684\u7f51\u683c\u65f6\uff0c\u4f60\u53ef\u4ee5\u4fdd\u8bc1\u5b83\u7684\u6240\u6709\u5b50\u7f51\u683c\uff08\u6bd4\u5982\u5f15\u64ce\u7f51\u683c\u3001\u65b9\u5411\u76d8\u7f51\u683c\u3001\u8f6e\u80ce\u7f51\u683c\uff09\u90fd\u4f1a\u968f\u7740\u4e00\u8d77\u4f4d\u79fb\u3002\u8fd9\u6837\u7684\u7cfb\u7edf\u80fd\u591f\u7528\u7236\u5b50\u5173\u7cfb\u5f88\u5bb9\u6613\u5730\u521b\u5efa\u51fa\u6765\u3002 \u7136\u800c\uff0c\u73b0\u5728\u6211\u4eec\u5e76\u6ca1\u6709\u4f7f\u7528\u8fd9\u6837\u4e00\u79cd\u7cfb\u7edf\uff0c\u4f46\u5982\u679c\u4f60\u60f3\u5bf9\u4f60\u7684\u7f51\u683c\u6570\u636e\u6709\u66f4\u591a\u7684\u63a7\u5236\uff0c\u901a\u5e38\u90fd\u662f\u5efa\u8bae\u4f7f\u7528\u8fd9\u4e00\u79cd\u65b9\u6cd5\u7684\u3002\u8fd9\u79cd\u7c7b\u8282\u70b9\u7684\u5173\u7cfb\u6bd5\u7adf\u662f\u7531\u521b\u5efa\u4e86\u8fd9\u4e2a\u6a21\u578b\u7684\u827a\u672f\u5bb6\u6240\u5b9a\u4e49\u3002 \u4e0b\u4e00\u6b65\u5c31\u662f\u5c06Assimp\u7684\u6570\u636e\u89e3\u6790\u5230\u4e0a\u4e00\u8282\u4e2d\u521b\u5efa\u7684 Mesh \u7c7b\u4e2d\u3002 \u4eceAssimp\u5230\u7f51\u683c \u5c06\u4e00\u4e2a aiMesh \u5bf9\u8c61\u8f6c\u5316\u4e3a\u6211\u4eec\u81ea\u5df1\u7684\u7f51\u683c\u5bf9\u8c61\u4e0d\u662f\u90a3\u4e48\u56f0\u96be\u3002\u6211\u4eec\u8981\u505a\u7684\u53ea\u662f\u8bbf\u95ee\u7f51\u683c\u7684\u76f8\u5173\u5c5e\u6027\u5e76\u5c06\u5b83\u4eec\u50a8\u5b58\u5230\u6211\u4eec\u81ea\u5df1\u7684\u5bf9\u8c61\u4e2d\u3002 processMesh \u51fd\u6570\u7684\u5927\u4f53\u7ed3\u6784\u5982\u4e0b\uff1a Mesh processMesh(aiMesh *mesh, const aiScene *scene) { vector<Vertex> vertices; vector<unsigned int> indices; vector<Texture> textures; for(unsigned int i = 0; i < mesh->mNumVertices; i++) { Vertex vertex; // \u5904\u7406\u9876\u70b9\u4f4d\u7f6e\u3001\u6cd5\u7ebf\u548c\u7eb9\u7406\u5750\u6807 ... vertices.push_back(vertex); } // \u5904\u7406\u7d22\u5f15 ... // \u5904\u7406\u6750\u8d28 if(mesh->mMaterialIndex >= 0) { ... } return Mesh(vertices, indices, textures); } \u5904\u7406\u7f51\u683c\u7684\u8fc7\u7a0b\u4e3b\u8981\u6709\u4e09\u90e8\u5206\uff1a\u83b7\u53d6\u6240\u6709\u7684\u9876\u70b9\u6570\u636e\uff0c\u83b7\u53d6\u5b83\u4eec\u7684\u7f51\u683c\u7d22\u5f15\uff0c\u5e76\u83b7\u53d6\u76f8\u5173\u7684\u6750\u8d28\u6570\u636e\u3002\u5904\u7406\u540e\u7684\u6570\u636e\u5c06\u4f1a\u50a8\u5b58\u5728\u4e09\u4e2avector\u5f53\u4e2d\uff0c\u6211\u4eec\u4f1a\u5229\u7528\u5b83\u4eec\u6784\u5efa\u4e00\u4e2a Mesh \u5bf9\u8c61\uff0c\u5e76\u8fd4\u56de\u5b83\u5230\u51fd\u6570\u7684\u8c03\u7528\u8005\u90a3\u91cc\u3002 \u83b7\u53d6\u9876\u70b9\u6570\u636e\u975e\u5e38\u7b80\u5355\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a Vertex \u7ed3\u6784\u4f53\uff0c\u6211\u4eec\u5c06\u5728\u6bcf\u4e2a\u8fed\u4ee3\u4e4b\u540e\u5c06\u5b83\u52a0\u5230 vertices \u6570\u7ec4\u4e2d\u3002\u6211\u4eec\u4f1a\u904d\u5386\u7f51\u683c\u4e2d\u7684\u6240\u6709\u9876\u70b9\uff08\u4f7f\u7528 mesh->mNumVertices \u6765\u83b7\u53d6\uff09\u3002\u5728\u6bcf\u4e2a\u8fed\u4ee3\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u4f7f\u7528\u6240\u6709\u7684\u76f8\u5173\u6570\u636e\u586b\u5145\u8fd9\u4e2a\u7ed3\u6784\u4f53\u3002\u9876\u70b9\u7684\u4f4d\u7f6e\u662f\u8fd9\u6837\u5904\u7406\u7684\uff1a glm::vec3 vector; vector.x = mesh->mVertices[i].x; vector.y = mesh->mVertices[i].y; vector.z = mesh->mVertices[i].z; vertex.Position = vector; \u6ce8\u610f\u6211\u4eec\u4e3a\u4e86\u4f20\u8f93Assimp\u7684\u6570\u636e\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a vec3 \u7684\u4e34\u65f6\u53d8\u91cf\u3002\u4f7f\u7528\u8fd9\u6837\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u7684\u539f\u56e0\u662fAssimp\u5bf9\u5411\u91cf\u3001\u77e9\u9635\u3001\u5b57\u7b26\u4e32\u7b49\u90fd\u6709\u81ea\u5df1\u7684\u4e00\u5957\u6570\u636e\u7c7b\u578b\uff0c\u5b83\u4eec\u5e76\u4e0d\u80fd\u5b8c\u7f8e\u5730\u8f6c\u6362\u5230GLM\u7684\u6570\u636e\u7c7b\u578b\u4e2d\u3002 Important Assimp\u5c06\u5b83\u7684\u9876\u70b9\u4f4d\u7f6e\u6570\u7ec4\u53eb\u505a mVertices \uff0c\u8fd9\u5176\u5b9e\u5e76\u4e0d\u662f\u90a3\u4e48\u76f4\u89c2\u3002 \u5904\u7406\u6cd5\u7ebf\u7684\u6b65\u9aa4\u4e5f\u662f\u5dee\u4e0d\u591a\u7684\uff1a vector.x = mesh->mNormals[i].x; vector.y = mesh->mNormals[i].y; vector.z = mesh->mNormals[i].z; vertex.Normal = vector; \u7eb9\u7406\u5750\u6807\u7684\u5904\u7406\u4e5f\u5927\u4f53\u76f8\u4f3c\uff0c\u4f46Assimp\u5141\u8bb8\u4e00\u4e2a\u6a21\u578b\u5728\u4e00\u4e2a\u9876\u70b9\u4e0a\u6709\u6700\u591a8\u4e2a\u4e0d\u540c\u7684\u7eb9\u7406\u5750\u6807\uff0c\u6211\u4eec\u4e0d\u4f1a\u7528\u5230\u90a3\u4e48\u591a\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u7b2c\u4e00\u7ec4\u7eb9\u7406\u5750\u6807\u3002\u6211\u4eec\u540c\u6837\u4e5f\u60f3\u68c0\u67e5\u7f51\u683c\u662f\u5426\u771f\u7684\u5305\u542b\u4e86\u7eb9\u7406\u5750\u6807\uff08\u53ef\u80fd\u5e76\u4e0d\u4f1a\u4e00\u76f4\u5982\u6b64\uff09 if(mesh->mTextureCoords[0]) // \u7f51\u683c\u662f\u5426\u6709\u7eb9\u7406\u5750\u6807\uff1f { glm::vec2 vec; vec.x = mesh->mTextureCoords[0][i].x; vec.y = mesh->mTextureCoords[0][i].y; vertex.TexCoords = vec; } else vertex.TexCoords = glm::vec2(0.0f, 0.0f); vertex \u7ed3\u6784\u4f53\u73b0\u5728\u5df2\u7ecf\u586b\u5145\u597d\u4e86\u9700\u8981\u7684\u9876\u70b9\u5c5e\u6027\uff0c\u6211\u4eec\u4f1a\u5728\u8fed\u4ee3\u7684\u6700\u540e\u5c06\u5b83\u538b\u5165 vertices \u8fd9\u4e2avector\u7684\u5c3e\u90e8\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4f1a\u5bf9\u6bcf\u4e2a\u7f51\u683c\u7684\u9876\u70b9\u90fd\u91cd\u590d\u4e00\u904d\u3002 \u7d22\u5f15 Assimp\u7684\u63a5\u53e3\u5b9a\u4e49\u4e86\u6bcf\u4e2a\u7f51\u683c\u90fd\u6709\u4e00\u4e2a\u9762(Face)\u6570\u7ec4\uff0c\u6bcf\u4e2a\u9762\u4ee3\u8868\u4e86\u4e00\u4e2a\u56fe\u5143\uff0c\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff08\u7531\u4e8e\u4f7f\u7528\u4e86 aiProcess_Triangulate \u9009\u9879\uff09\u5b83\u603b\u662f\u4e09\u89d2\u5f62\u3002\u4e00\u4e2a\u9762\u5305\u542b\u4e86\u591a\u4e2a\u7d22\u5f15\uff0c\u5b83\u4eec\u5b9a\u4e49\u4e86\u5728\u6bcf\u4e2a\u56fe\u5143\u4e2d\uff0c\u6211\u4eec\u5e94\u8be5\u7ed8\u5236\u54ea\u4e2a\u9876\u70b9\uff0c\u5e76\u4ee5\u4ec0\u4e48\u987a\u5e8f\u7ed8\u5236\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u904d\u5386\u4e86\u6240\u6709\u7684\u9762\uff0c\u5e76\u50a8\u5b58\u4e86\u9762\u7684\u7d22\u5f15\u5230 indices \u8fd9\u4e2avector\u4e2d\u5c31\u53ef\u4ee5\u4e86\u3002 for(unsigned int i = 0; i < mesh->mNumFaces; i++) { aiFace face = mesh->mFaces[i]; for(unsigned int j = 0; j < face.mNumIndices; j++) indices.push_back(face.mIndices[j]); } \u6240\u6709\u7684\u5916\u90e8\u5faa\u73af\u90fd\u7ed3\u675f\u4e86\uff0c\u6211\u4eec\u73b0\u5728\u6709\u4e86\u4e00\u7cfb\u5217\u7684\u9876\u70b9\u548c\u7d22\u5f15\u6570\u636e\uff0c\u5b83\u4eec\u53ef\u4ee5\u7528\u6765\u901a\u8fc7 glDrawElements \u51fd\u6570\u6765\u7ed8\u5236\u7f51\u683c\u3002\u7136\u800c\uff0c\u4e3a\u4e86\u7ed3\u675f\u8fd9\u4e2a\u8bdd\u9898\uff0c\u5e76\u4e14\u5bf9\u7f51\u683c\u63d0\u4f9b\u4e00\u4e9b\u7ec6\u8282\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5904\u7406\u7f51\u683c\u7684\u6750\u8d28\u3002 \u6750\u8d28 \u548c\u8282\u70b9\u4e00\u6837\uff0c\u4e00\u4e2a\u7f51\u683c\u53ea\u5305\u542b\u4e86\u4e00\u4e2a\u6307\u5411\u6750\u8d28\u5bf9\u8c61\u7684\u7d22\u5f15\u3002\u5982\u679c\u60f3\u8981\u83b7\u53d6\u7f51\u683c\u771f\u6b63\u7684\u6750\u8d28\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u7d22\u5f15\u573a\u666f\u7684 mMaterials \u6570\u7ec4\u3002\u7f51\u683c\u6750\u8d28\u7d22\u5f15\u4f4d\u4e8e\u5b83\u7684 mMaterialIndex \u5c5e\u6027\u4e2d\uff0c\u6211\u4eec\u540c\u6837\u53ef\u4ee5\u7528\u5b83\u6765\u68c0\u6d4b\u4e00\u4e2a\u7f51\u683c\u662f\u5426\u5305\u542b\u6709\u6750\u8d28\uff1a if(mesh->mMaterialIndex >= 0) { aiMaterial *material = scene->mMaterials[mesh->mMaterialIndex]; vector<Texture> diffuseMaps = loadMaterialTextures(material, aiTextureType_DIFFUSE, \"texture_diffuse\"); textures.insert(textures.end(), diffuseMaps.begin(), diffuseMaps.end()); vector<Texture> specularMaps = loadMaterialTextures(material, aiTextureType_SPECULAR, \"texture_specular\"); textures.insert(textures.end(), specularMaps.begin(), specularMaps.end()); } \u6211\u4eec\u9996\u5148\u4ece\u573a\u666f\u7684 mMaterials \u6570\u7ec4\u4e2d\u83b7\u53d6 aiMaterial \u5bf9\u8c61\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5e0c\u671b\u52a0\u8f7d\u7f51\u683c\u7684\u6f2b\u53cd\u5c04\u548c/\u6216\u955c\u9762\u5149\u8d34\u56fe\u3002\u4e00\u4e2a\u6750\u8d28\u5bf9\u8c61\u7684\u5185\u90e8\u5bf9\u6bcf\u79cd\u7eb9\u7406\u7c7b\u578b\u90fd\u5b58\u50a8\u4e86\u4e00\u4e2a\u7eb9\u7406\u4f4d\u7f6e\u6570\u7ec4\u3002\u4e0d\u540c\u7684\u7eb9\u7406\u7c7b\u578b\u90fd\u4ee5 aiTextureType_ \u4e3a\u524d\u7f00\u3002\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u53eb\u505a loadMaterialTextures \u7684\u5de5\u5177\u51fd\u6570\u6765\u4ece\u6750\u8d28\u4e2d\u83b7\u53d6\u7eb9\u7406\u3002\u8fd9\u4e2a\u51fd\u6570\u5c06\u4f1a\u8fd4\u56de\u4e00\u4e2a Texture \u7ed3\u6784\u4f53\u7684vector\uff0c\u6211\u4eec\u5c06\u5728\u6a21\u578b\u7684 textures vector\u7684\u5c3e\u90e8\u4e4b\u540e\u5b58\u50a8\u5b83\u3002 loadMaterialTextures \u51fd\u6570\u904d\u5386\u4e86\u7ed9\u5b9a\u7eb9\u7406\u7c7b\u578b\u7684\u6240\u6709\u7eb9\u7406\u4f4d\u7f6e\uff0c\u83b7\u53d6\u4e86\u7eb9\u7406\u7684\u6587\u4ef6\u4f4d\u7f6e\uff0c\u5e76\u52a0\u8f7d\u5e76\u548c\u751f\u6210\u4e86\u7eb9\u7406\uff0c\u5c06\u4fe1\u606f\u50a8\u5b58\u5728\u4e86\u4e00\u4e2a Vertex \u7ed3\u6784\u4f53\u4e2d\u3002\u5b83\u770b\u8d77\u6765\u4f1a\u50cf\u8fd9\u6837\uff1a vector<Texture> loadMaterialTextures(aiMaterial *mat, aiTextureType type, string typeName) { vector<Texture> textures; for(unsigned int i = 0; i < mat->GetTextureCount(type); i++) { aiString str; mat->GetTexture(type, i, &str); Texture texture; texture.id = TextureFromFile(str.C_Str(), directory); texture.type = typeName; texture.path = str; textures.push_back(texture); } return textures; } \u6211\u4eec\u9996\u5148\u901a\u8fc7 GetTextureCount \u51fd\u6570\u68c0\u67e5\u50a8\u5b58\u5728\u6750\u8d28\u4e2d\u7eb9\u7406\u7684\u6570\u91cf\uff0c\u8fd9\u4e2a\u51fd\u6570\u9700\u8981\u4e00\u4e2a\u7eb9\u7406\u7c7b\u578b\u3002\u6211\u4eec\u4f1a\u4f7f\u7528 GetTexture \u83b7\u53d6\u6bcf\u4e2a\u7eb9\u7406\u7684\u6587\u4ef6\u4f4d\u7f6e\uff0c\u5b83\u4f1a\u5c06\u7ed3\u679c\u50a8\u5b58\u5728\u4e00\u4e2a aiString \u4e2d\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u4f7f\u7528\u53e6\u5916\u4e00\u4e2a\u53eb\u505a TextureFromFile \u7684\u5de5\u5177\u51fd\u6570\uff0c\u5b83\u5c06\u4f1a\uff08\u7528 stb_image.h \uff09\u52a0\u8f7d\u4e00\u4e2a\u7eb9\u7406\u5e76\u8fd4\u56de\u8be5\u7eb9\u7406\u7684ID\u3002\u5982\u679c\u4f60\u4e0d\u786e\u5b9a\u8fd9\u6837\u7684\u4ee3\u7801\u662f\u5982\u4f55\u5199\u51fa\u6765\u7684\u8bdd\uff0c\u53ef\u4ee5\u67e5\u770b\u6700\u540e\u7684\u5b8c\u6574\u4ee3\u7801\u3002 Important \u6ce8\u610f\uff0c\u6211\u4eec\u5047\u8bbe\u4e86\u6a21\u578b\u6587\u4ef6\u4e2d\u7eb9\u7406\u6587\u4ef6\u7684\u8def\u5f84\u662f\u76f8\u5bf9\u4e8e\u6a21\u578b\u6587\u4ef6\u7684\u672c\u5730(Local)\u8def\u5f84\uff0c\u6bd4\u5982\u8bf4\u4e0e\u6a21\u578b\u6587\u4ef6\u5904\u4e8e\u540c\u4e00\u76ee\u5f55\u4e0b\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u7eb9\u7406\u4f4d\u7f6e\u5b57\u7b26\u4e32\u62fc\u63a5\u5230\u4e4b\u524d\uff08\u5728 loadModel \u4e2d\uff09\u83b7\u53d6\u7684\u76ee\u5f55\u5b57\u7b26\u4e32\u4e0a\uff0c\u6765\u83b7\u53d6\u5b8c\u6574\u7684\u7eb9\u7406\u8def\u5f84\uff08\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48 GetTexture \u51fd\u6570\u4e5f\u9700\u8981\u4e00\u4e2a\u76ee\u5f55\u5b57\u7b26\u4e32\uff09\u3002 \u5728\u7f51\u7edc\u4e0a\u627e\u5230\u7684\u67d0\u4e9b\u6a21\u578b\u4f1a\u5bf9\u7eb9\u7406\u4f4d\u7f6e\u4f7f\u7528\u7edd\u5bf9(Absolute)\u8def\u5f84\uff0c\u8fd9\u5c31\u4e0d\u80fd\u5728\u6bcf\u53f0\u673a\u5668\u4e0a\u90fd\u5de5\u4f5c\u4e86\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u80fd\u4f1a\u9700\u8981\u624b\u52a8\u4fee\u6539\u8fd9\u4e2a\u6587\u4ef6\uff0c\u6765\u8ba9\u5b83\u5bf9\u7eb9\u7406\u4f7f\u7528\u672c\u5730\u8def\u5f84\uff08\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff09\u3002 \u8fd9\u5c31\u662f\u4f7f\u7528Assimp\u5bfc\u5165\u6a21\u578b\u7684\u5168\u90e8\u4e86\u3002 \u91cd\u5927\u4f18\u5316 \u8fd9\u8fd8\u6ca1\u6709\u5b8c\u5168\u7ed3\u675f\uff0c\u56e0\u4e3a\u6211\u4eec\u8fd8\u60f3\u505a\u51fa\u4e00\u4e2a\u91cd\u5927\u7684\uff08\u4f46\u4e0d\u662f\u5b8c\u5168\u5fc5\u987b\u7684\uff09\u4f18\u5316\u3002\u5927\u591a\u6570\u573a\u666f\u90fd\u4f1a\u5728\u591a\u4e2a\u7f51\u683c\u4e2d\u91cd\u7528\u90e8\u5206\u7eb9\u7406\u3002\u8fd8\u662f\u60f3\u60f3\u4e00\u4e2a\u623f\u5b50\uff0c\u5b83\u7684\u5899\u58c1\u6709\u7740\u82b1\u5c97\u5ca9\u7684\u7eb9\u7406\u3002\u8fd9\u4e2a\u7eb9\u7406\u4e5f\u53ef\u4ee5\u88ab\u5e94\u7528\u5230\u5730\u677f\u3001\u5929\u82b1\u677f\u3001\u697c\u68af\u3001\u684c\u5b50\uff0c\u751a\u81f3\u662f\u9644\u8fd1\u7684\u4e00\u53e3\u4e95\u4e0a\u3002\u52a0\u8f7d\u7eb9\u7406\u5e76\u4e0d\u662f\u4e00\u4e2a\u4f4e\u5f00\u9500\u7684\u64cd\u4f5c\uff0c\u5728\u6211\u4eec\u5f53\u524d\u7684\u5b9e\u73b0\u4e2d\uff0c\u5373\u4fbf\u540c\u6837\u7684\u7eb9\u7406\u5df2\u7ecf\u88ab\u52a0\u8f7d\u8fc7\u5f88\u591a\u904d\u4e86\uff0c\u5bf9\u6bcf\u4e2a\u7f51\u683c\u4ecd\u4f1a\u52a0\u8f7d\u5e76\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u7eb9\u7406\u3002\u8fd9\u5f88\u5feb\u5c31\u4f1a\u53d8\u6210\u6a21\u578b\u52a0\u8f7d\u5b9e\u73b0\u7684\u6027\u80fd\u74f6\u9888\u3002 \u6240\u4ee5\u6211\u4eec\u4f1a\u5bf9\u6a21\u578b\u7684\u4ee3\u7801\u8fdb\u884c\u5fae\u8c03\uff0c\u5c06\u6240\u6709\u52a0\u8f7d\u8fc7\u7684\u7eb9\u7406\u5168\u5c40\u50a8\u5b58\uff0c\u6bcf\u5f53\u6211\u4eec\u60f3\u52a0\u8f7d\u4e00\u4e2a\u7eb9\u7406\u7684\u65f6\u5019\uff0c\u9996\u5148\u53bb\u68c0\u67e5\u5b83\u6709\u6ca1\u6709\u88ab\u52a0\u8f7d\u8fc7\u3002\u5982\u679c\u6709\u7684\u8bdd\uff0c\u6211\u4eec\u4f1a\u76f4\u63a5\u4f7f\u7528\u90a3\u4e2a\u7eb9\u7406\uff0c\u5e76\u8df3\u8fc7\u6574\u4e2a\u52a0\u8f7d\u6d41\u7a0b\uff0c\u6765\u4e3a\u6211\u4eec\u7701\u4e0b\u5f88\u591a\u5904\u7406\u80fd\u529b\u3002\u4e3a\u4e86\u80fd\u591f\u6bd4\u8f83\u7eb9\u7406\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u50a8\u5b58\u5b83\u4eec\u7684\u8def\u5f84\uff1a struct Texture { unsigned int id; string type; aiString path; // \u6211\u4eec\u50a8\u5b58\u7eb9\u7406\u7684\u8def\u5f84\u7528\u4e8e\u4e0e\u5176\u5b83\u7eb9\u7406\u8fdb\u884c\u6bd4\u8f83 }; \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u6240\u6709\u52a0\u8f7d\u8fc7\u7684\u7eb9\u7406\u50a8\u5b58\u5728\u53e6\u4e00\u4e2avector\u4e2d\uff0c\u5728\u6a21\u578b\u7c7b\u7684\u9876\u90e8\u58f0\u660e\u4e3a\u4e00\u4e2a\u79c1\u6709\u53d8\u91cf\uff1a vector<Texture> textures_loaded; \u4e4b\u540e\uff0c\u5728 loadMaterialTextures \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u7eb9\u7406\u7684\u8def\u5f84\u4e0e\u50a8\u5b58\u5728 textures_loaded \u8fd9\u4e2avector\u4e2d\u7684\u6240\u6709\u7eb9\u7406\u8fdb\u884c\u6bd4\u8f83\uff0c\u770b\u770b\u5f53\u524d\u7eb9\u7406\u7684\u8def\u5f84\u662f\u5426\u4e0e\u5176\u4e2d\u7684\u4e00\u4e2a\u76f8\u540c\u3002\u5982\u679c\u662f\u7684\u8bdd\uff0c\u5219\u8df3\u8fc7\u7eb9\u7406\u52a0\u8f7d/\u751f\u6210\u7684\u90e8\u5206\uff0c\u76f4\u63a5\u4f7f\u7528\u5b9a\u4f4d\u5230\u7684\u7eb9\u7406\u7ed3\u6784\u4f53\u4e3a\u7f51\u683c\u7684\u7eb9\u7406\u3002\u66f4\u65b0\u540e\u7684\u51fd\u6570\u5982\u4e0b\uff1a vector<Texture> loadMaterialTextures(aiMaterial *mat, aiTextureType type, string typeName) { vector<Texture> textures; for(unsigned int i = 0; i < mat->GetTextureCount(type); i++) { aiString str; mat->GetTexture(type, i, &str); bool skip = false; for(unsigned int j = 0; j < textures_loaded.size(); j++) { if(std::strcmp(textures_loaded[j].path.data(), str.C_Str()) == 0) { textures.push_back(textures_loaded[j]); skip = true; break; } } if(!skip) { // \u5982\u679c\u7eb9\u7406\u8fd8\u6ca1\u6709\u88ab\u52a0\u8f7d\uff0c\u5219\u52a0\u8f7d\u5b83 Texture texture; texture.id = TextureFromFile(str.C_Str(), directory); texture.type = typeName; texture.path = str.C_Str(); textures.push_back(texture); textures_loaded.push_back(texture); // \u6dfb\u52a0\u5230\u5df2\u52a0\u8f7d\u7684\u7eb9\u7406\u4e2d } } return textures; } \u6240\u4ee5\u73b0\u5728\u6211\u4eec\u4e0d\u4ec5\u6709\u4e86\u4e2a\u7075\u6d3b\u7684\u6a21\u578b\u52a0\u8f7d\u7cfb\u7edf\uff0c\u6211\u4eec\u4e5f\u83b7\u5f97\u4e86\u4e00\u4e2a\u52a0\u8f7d\u5bf9\u8c61\u5f88\u5feb\u7684\u4f18\u5316\u7248\u672c\u3002 Attention \u6709\u4e9b\u7248\u672c\u7684Assimp\u5728\u4f7f\u7528\u8c03\u8bd5\u7248\u672c\u6216\u8005\u4f7f\u7528IDE\u7684\u8c03\u8bd5\u6a21\u5f0f\u4e0b\u52a0\u8f7d\u6a21\u578b\u4f1a\u975e\u5e38\u7f13\u6162\uff0c\u6240\u4ee5\u5728\u4f60\u9047\u5230\u7f13\u6162\u7684\u52a0\u8f7d\u901f\u5ea6\u65f6\uff0c\u53ef\u4ee5\u8bd5\u8bd5\u4f7f\u7528\u53d1\u5e03\u7248\u672c\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u4f18\u5316\u540e Model \u7c7b\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002 \u548c\u7bb1\u5b50\u6a21\u578b\u544a\u522b \u6240\u4ee5\uff0c\u8ba9\u6211\u4eec\u5bfc\u5165\u4e00\u4e2a\u7531\u771f\u6b63\u7684\u827a\u672f\u5bb6\u6240\u521b\u9020\u7684\u6a21\u578b\uff0c\u66ff\u4ee3\u6211\u8fd9\u4e2a\u5929\u624d\u7684\u4f5c\u54c1\uff08\u4f60\u8981\u627f\u8ba4\uff0c\u8fd9\u4e9b\u7bb1\u5b50\u53ef\u80fd\u662f\u4f60\u770b\u8fc7\u7684\u6700\u6f02\u4eae\u7684\u7acb\u65b9\u4f53\u4e86\uff09\uff0c\u6d4b\u8bd5\u4e00\u4e0b\u6211\u4eec\u7684\u5b9e\u73b0\u5427\u3002\u7531\u4e8e\u6211\u4e0d\u60f3\u8ba9\u6211\u5360\u592a\u591a\u7684\u529f\u52b3\uff0c\u6211\u4f1a\u5076\u5c14\u8ba9\u522b\u7684\u827a\u672f\u5bb6\u4e5f\u52a0\u5165\u6211\u4eec\uff0c\u8fd9\u6b21\u6211\u4eec\u5c06\u4f1a\u52a0\u8f7d\u7531Berk Gedik\u8bbe\u8ba1\u7684 \u5409\u4ed6\u751f\u5b58\u80cc\u5305 (Survival Guitar Backpack)\u3002\u6211\u7a0d\u5fae\u4fee\u6539\u4e86\u6750\u8d28\u548c\u8def\u5f84\uff0c\u8fd9\u6837\u4fbf\u53ef\u4e0e\u6211\u4eec\u7684\u6a21\u578b\u52a0\u8f7d\u4ee3\u7801\u517c\u5bb9\u3002\u8fd9\u4e2a\u6a21\u578b\u88ab\u8f93\u51fa\u4e3a\u4e00\u4e2a.obj\u6587\u4ef6\u4ee5\u53ca\u4e00\u4e2a.mtl\u6587\u4ef6\uff0c.mtl\u6587\u4ef6\u5305\u542b\u4e86\u6a21\u578b\u7684\u6f2b\u53cd\u5c04\u3001\u955c\u9762\u5149\u548c\u6cd5\u7ebf\u8d34\u56fe\uff08\u8fd9\u4e2a\u4f1a\u5728\u540e\u9762\u5b66\u4e60\u5230\uff09\uff0c\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u4e0b\u8f7d\u5230\u7a0d\u5fae\u4fee\u6539\u4e4b\u540e\u7684\u6a21\u578b\uff0c\u6ce8\u610f\uff0c\u6211\u4eec\u4e0d\u4f1a\u7528\u5230\u5b83\u7684\u4e00\u4e9b\u989d\u5916\u7684\u7eb9\u7406\u7c7b\u578b\uff0c\u5e76\u4e14\u6240\u6709\u7684\u7eb9\u7406\u548c\u6a21\u578b\u6587\u4ef6\u5e94\u8be5\u4f4d\u4e8e\u540c\u4e00\u4e2a\u76ee\u5f55\u4e0b\uff0c\u4ee5\u4f9b\u52a0\u8f7d\u7eb9\u7406\u3002 Important \u4f60\u4ece\u672c\u7f51\u7ad9\u4e2d\u4e0b\u8f7d\u5230\u7684\u7248\u672c\u662f\u4fee\u6539\u8fc7\u7684\u7248\u672c\uff0c\u6bcf\u4e2a\u7eb9\u7406\u7684\u8def\u5f84\u90fd\u88ab\u4fee\u6539\u4e3a\u4e86\u4e00\u4e2a\u672c\u5730\u7684\u76f8\u5bf9\u8def\u5f84\uff0c\u800c\u4e0d\u662f\u539f\u8d44\u6e90\u7684\u7edd\u5bf9\u8def\u5f84\u3002 \u73b0\u5728\u5728\u4ee3\u7801\u4e2d\uff0c\u58f0\u660e\u4e00\u4e2a Model \u5bf9\u8c61\uff0c\u5c06\u6a21\u578b\u7684\u6587\u4ef6\u4f4d\u7f6e\u4f20\u5165\u3002\u63a5\u4e0b\u6765\u6a21\u578b\u5e94\u8be5\u4f1a\u81ea\u52a8\u52a0\u8f7d\u5e76\uff08\u5982\u679c\u6ca1\u6709\u9519\u8bef\u7684\u8bdd\uff09\u5728\u6e32\u67d3\u5faa\u73af\u4e2d\u4f7f\u7528\u5b83\u7684 Draw \u51fd\u6570\u6765\u7ed8\u5236\u7269\u4f53\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e86\u3002\u4e0d\u518d\u9700\u8981\u7f13\u51b2\u5206\u914d\u3001\u5c5e\u6027\u6307\u9488\u548c\u6e32\u67d3\u6307\u4ee4\uff0c\u53ea\u9700\u8981\u4e00\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u4e86\u3002\u63a5\u4e0b\u6765\u5982\u679c\u4f60\u521b\u5efa\u4e00\u7cfb\u5217\u7740\u8272\u5668\uff0c\u5176\u4e2d\u7247\u6bb5\u7740\u8272\u5668\u4ec5\u4ec5\u8f93\u51fa\u7269\u4f53\u7684\u6f2b\u53cd\u5c04\u7eb9\u7406\u989c\u8272\uff0c\u6700\u7ec8\u7684\u7ed3\u679c\u770b\u4e0a\u53bb\u4f1a\u662f\u8fd9\u6837\u7684\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5b8c\u6574\u7684\u6e90\u7801\u3002\u6ce8\u610f\u6211\u4eec\u901a\u8fc7stb_image.h\u6765\u5782\u76f4\u7ffb\u8f6c\u7eb9\u7406\uff0c\u5982\u679c\u4f60\u5728\u6211\u4eec\u52a0\u8f7d\u6a21\u578b\u4e4b\u524d\u6ca1\u6709\u8fd9\u6837\u505a\u4f1a\u5bfc\u81f4\u7eb9\u7406\u770b\u8d77\u6765\u5b8c\u5168\u6df7\u4e71\u3002 \u6211\u4eec\u53ef\u4ee5\u53d8\u5f97\u66f4\u6709\u521b\u9020\u529b\u4e00\u70b9\uff0c\u6839\u636e\u6211\u4eec\u4e4b\u524d\u5728 \u5149\u7167 \u6559\u7a0b\u4e2d\u5b66\u8fc7\u7684\u77e5\u8bc6\uff0c\u5f15\u5165\u4e24\u4e2a\u70b9\u5149\u6e90\u5230\u6e32\u67d3\u65b9\u7a0b\u4e2d\uff0c\u7ed3\u5408\u955c\u9762\u5149\u8d34\u56fe\uff0c\u6211\u4eec\u80fd\u5f97\u5230\u5f88\u60ca\u4eba\u7684\u6548\u679c\u3002 \u751a\u81f3\u6211\u90fd\u5fc5\u987b\u8981\u627f\u8ba4\u8fd9\u4e2a\u53ef\u80fd\u662f\u6bd4\u4e00\u76f4\u4f7f\u7528\u7684\u7bb1\u5b50\u8981\u597d\u770b\u591a\u4e86\u3002\u4f7f\u7528Assimp\uff0c\u4f60\u80fd\u591f\u52a0\u8f7d\u4e92\u8054\u7f51\u4e0a\u7684\u65e0\u6570\u6a21\u578b\u3002\u6709\u5f88\u591a\u8d44\u6e90\u7f51\u7ad9\u90fd\u63d0\u4f9b\u4e86\u591a\u79cd\u683c\u5f0f\u7684\u514d\u8d393D\u6a21\u578b\u4f9b\u4f60\u4e0b\u8f7d\u3002\u4f46\u8fd8\u662f\u8981\u6ce8\u610f\uff0c\u6709\u4e9b\u6a21\u578b\u4f1a\u4e0d\u80fd\u6b63\u5e38\u5730\u8f7d\u5165\uff0c\u7eb9\u7406\u7684\u8def\u5f84\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u6216\u8005Assimp\u5e76\u4e0d\u652f\u6301\u5b83\u7684\u683c\u5f0f\u3002 \u5ef6\u4f38\u9605\u8bfb \u5982\u4f55\u5c06Wavefront(.obj)\u6a21\u578b\u7eb9\u7406\u52a0\u8f7d\u5230OpenGL :\u7531Matthew Early\u5236\u4f5c\u7684\u5982\u4f55\u5728Blender\u4e2d\u8bbe\u7f6e3D\u6a21\u578b\u7684\u89c6\u9891\u6559\u7a0b\uff0c\u8ba9\u5b83\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u5f53\u524d\u7684\u6a21\u578b\u52a0\u8f7d\u5668\u4e0b\u6b63\u786e\u5de5\u4f5c(\u56e0\u4e3a\u6211\u4eec\u9009\u62e9\u7684\u7eb9\u7406\u8bbe\u7f6e\u5e76\u4e0d\u603b\u80fd\u505a\u5230\u5f00\u7bb1\u5373\u7528)\u3002","title":"\u6a21\u578b"},{"location":"03%20Model%20Loading/03%20Model/#_1","text":"\u539f\u6587 Model \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 AoZhang \u73b0\u5728\u662f\u65f6\u5019\u63a5\u89e6Assimp\u5e76\u521b\u5efa\u5b9e\u9645\u7684\u52a0\u8f7d\u548c\u8f6c\u6362\u4ee3\u7801\u4e86\u3002\u8fd9\u4e2a\u6559\u7a0b\u7684\u76ee\u6807\u662f\u521b\u5efa\u53e6\u4e00\u4e2a\u7c7b\u6765\u5b8c\u6574\u5730\u8868\u793a\u4e00\u4e2a\u6a21\u578b\uff0c\u6216\u8005\u8bf4\u662f\u5305\u542b\u591a\u4e2a\u7f51\u683c\uff0c\u591a\u4e2a\u7eb9\u7406\u7684\u6a21\u578b\u3002\u4e00\u4e2a\u5305\u542b\u6728\u5236\u9633\u53f0\u3001\u5854\u697c\u3001\u751a\u81f3\u6e38\u6cf3\u6c60\u7684\u623f\u5b50\u53ef\u80fd\u4ecd\u4f1a\u88ab\u52a0\u8f7d\u4e3a\u4e00\u4e2a\u6a21\u578b\u3002\u6211\u4eec\u4f1a\u4f7f\u7528Assimp\u6765\u52a0\u8f7d\u6a21\u578b\uff0c\u5e76\u5c06\u5b83\u8f6c\u6362(Translate)\u81f3\u591a\u4e2a\u5728 \u4e0a\u4e00\u8282 \u4e2d\u521b\u5efa\u7684 Mesh \u5bf9\u8c61\u3002 \u4e8b\u4e0d\u5b9c\u8fdf\uff0c\u6211\u4f1a\u5148\u628a Model \u7c7b\u7684\u7ed3\u6784\u7ed9\u4f60\uff1a class Model { public: /* \u51fd\u6570 */ Model(char *path) { loadModel(path); } void Draw(Shader shader); private: /* \u6a21\u578b\u6570\u636e */ vector<Mesh> meshes; string directory; /* \u51fd\u6570 */ void loadModel(string path); void processNode(aiNode *node, const aiScene *scene); Mesh processMesh(aiMesh *mesh, const aiScene *scene); vector<Texture> loadMaterialTextures(aiMaterial *mat, aiTextureType type, string typeName); }; Model \u7c7b\u5305\u542b\u4e86\u4e00\u4e2a Mesh \u5bf9\u8c61\u7684vector\uff08\u8bd1\u6ce8\uff1a\u8fd9\u91cc\u6307\u7684\u662fC++\u4e2d\u7684vector\u6a21\u677f\u7c7b\uff0c\u4e4b\u540e\u9047\u5230\u5747\u4e0d\u8bd1\uff09\uff0c\u6784\u9020\u51fd\u6570\u9700\u8981\u6211\u4eec\u7ed9\u5b83\u4e00\u4e2a\u6587\u4ef6\u8def\u5f84\u3002\u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u5b83\u4f1a\u76f4\u63a5\u901a\u8fc7 loadModel \u6765\u52a0\u8f7d\u6587\u4ef6\u3002\u79c1\u6709\u51fd\u6570\u5c06\u4f1a\u5904\u7406Assimp\u5bfc\u5165\u8fc7\u7a0b\u4e2d\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u4ecb\u7ecd\u5b83\u4eec\u3002\u6211\u4eec\u8fd8\u5c06\u50a8\u5b58\u6587\u4ef6\u8def\u5f84\u7684\u76ee\u5f55\uff0c\u5728\u4e4b\u540e\u52a0\u8f7d\u7eb9\u7406\u7684\u65f6\u5019\u8fd8\u4f1a\u7528\u5230\u5b83\u3002 Draw \u51fd\u6570\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u4e4b\u5904\uff0c\u57fa\u672c\u4e0a\u5c31\u662f\u904d\u5386\u4e86\u6240\u6709\u7f51\u683c\uff0c\u5e76\u8c03\u7528\u5b83\u4eec\u5404\u81ea\u7684 Draw \u51fd\u6570\u3002 void Draw(Shader &shader) { for(unsigned int i = 0; i < meshes.size(); i++) meshes[i].Draw(shader); }","title":"\u6a21\u578b"},{"location":"03%20Model%20Loading/03%20Model/#3dopengl","text":"\u8981\u60f3\u5bfc\u5165\u4e00\u4e2a\u6a21\u578b\uff0c\u5e76\u5c06\u5b83\u8f6c\u6362\u5230\u6211\u4eec\u81ea\u5df1\u7684\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u8bdd\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u5305\u542bAssimp\u5bf9\u5e94\u7684\u5934\u6587\u4ef6\uff1a #include <assimp/Importer.hpp> #include <assimp/scene.h> #include <assimp/postprocess.h> \u9996\u5148\u9700\u8981\u8c03\u7528\u7684\u51fd\u6570\u662f loadModel \uff0c\u5b83\u4f1a\u4ece\u6784\u9020\u51fd\u6570\u4e2d\u76f4\u63a5\u8c03\u7528\u3002\u5728 loadModel \u4e2d\uff0c\u6211\u4eec\u4f7f\u7528Assimp\u6765\u52a0\u8f7d\u6a21\u578b\u81f3Assimp\u7684\u4e00\u4e2a\u53eb\u505a scene \u7684\u6570\u636e\u7ed3\u6784\u4e2d\u3002\u4f60\u53ef\u80fd\u8fd8\u8bb0\u5f97\u5728\u6a21\u578b\u52a0\u8f7d\u7ae0\u8282\u7684 \u7b2c\u4e00\u8282 \u6559\u7a0b\u4e2d\uff0c\u8fd9\u662fAssimp\u6570\u636e\u63a5\u53e3\u7684\u6839\u5bf9\u8c61\u3002\u4e00\u65e6\u6211\u4eec\u6709\u4e86\u8fd9\u4e2a\u573a\u666f\u5bf9\u8c61\uff0c\u6211\u4eec\u5c31\u80fd\u8bbf\u95ee\u5230\u52a0\u8f7d\u540e\u7684\u6a21\u578b\u4e2d\u6240\u6709\u6240\u9700\u7684\u6570\u636e\u4e86\u3002 Assimp\u5f88\u68d2\u7684\u4e00\u70b9\u5728\u4e8e\uff0c\u5b83\u62bd\u8c61\u6389\u4e86\u52a0\u8f7d\u4e0d\u540c\u6587\u4ef6\u683c\u5f0f\u7684\u6240\u6709\u6280\u672f\u7ec6\u8282\uff0c\u53ea\u9700\u8981\u4e00\u884c\u4ee3\u7801\u5c31\u80fd\u5b8c\u6210\u6240\u6709\u7684\u5de5\u4f5c\uff1a Assimp::Importer importer; const aiScene *scene = importer.ReadFile(path, aiProcess_Triangulate | aiProcess_FlipUVs); \u6211\u4eec\u9996\u5148\u58f0\u660e\u4e86Assimp\u547d\u540d\u7a7a\u95f4\u5185\u7684\u4e00\u4e2a Importer \uff0c\u4e4b\u540e\u8c03\u7528\u4e86\u5b83\u7684 ReadFile \u51fd\u6570\u3002\u8fd9\u4e2a\u51fd\u6570\u9700\u8981\u4e00\u4e2a\u6587\u4ef6\u8def\u5f84\uff0c\u5b83\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4e00\u4e9b \u540e\u671f\u5904\u7406 (Post-processing)\u7684\u9009\u9879\u3002\u9664\u4e86\u52a0\u8f7d\u6587\u4ef6\u4e4b\u5916\uff0cAssimp\u5141\u8bb8\u6211\u4eec\u8bbe\u5b9a\u4e00\u4e9b\u9009\u9879\u6765\u5f3a\u5236\u5b83\u5bf9\u5bfc\u5165\u7684\u6570\u636e\u505a\u4e00\u4e9b\u989d\u5916\u7684\u8ba1\u7b97\u6216\u64cd\u4f5c\u3002\u901a\u8fc7\u8bbe\u5b9a aiProcess_Triangulate \uff0c\u6211\u4eec\u544a\u8bc9Assimp\uff0c\u5982\u679c\u6a21\u578b\u4e0d\u662f\uff08\u5168\u90e8\uff09\u7531\u4e09\u89d2\u5f62\u7ec4\u6210\uff0c\u5b83\u9700\u8981\u5c06\u6a21\u578b\u6240\u6709\u7684\u56fe\u5143\u5f62\u72b6\u53d8\u6362\u4e3a\u4e09\u89d2\u5f62\u3002 aiProcess_FlipUVs \u5c06\u5728\u5904\u7406\u7684\u65f6\u5019\u7ffb\u8f6cy\u8f74\u7684\u7eb9\u7406\u5750\u6807\uff08\u4f60\u53ef\u80fd\u8fd8\u8bb0\u5f97\u6211\u4eec\u5728 \u7eb9\u7406 \u6559\u7a0b\u4e2d\u8bf4\u8fc7\uff0c\u5728OpenGL\u4e2d\u5927\u90e8\u5206\u7684\u56fe\u50cf\u7684y\u8f74\u90fd\u662f\u53cd\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u540e\u671f\u5904\u7406\u9009\u9879\u5c06\u4f1a\u4fee\u590d\u8fd9\u4e2a\uff09\u3002\u5176\u5b83\u4e00\u4e9b\u6bd4\u8f83\u6709\u7528\u7684\u9009\u9879\u6709\uff1a aiProcess_GenNormals \uff1a\u5982\u679c\u6a21\u578b\u4e0d\u5305\u542b\u6cd5\u5411\u91cf\u7684\u8bdd\uff0c\u5c31\u4e3a\u6bcf\u4e2a\u9876\u70b9\u521b\u5efa\u6cd5\u7ebf\u3002 aiProcess_SplitLargeMeshes \uff1a\u5c06\u6bd4\u8f83\u5927\u7684\u7f51\u683c\u5206\u5272\u6210\u66f4\u5c0f\u7684\u5b50\u7f51\u683c\uff0c\u5982\u679c\u4f60\u7684\u6e32\u67d3\u6709\u6700\u5927\u9876\u70b9\u6570\u9650\u5236\uff0c\u53ea\u80fd\u6e32\u67d3\u8f83\u5c0f\u7684\u7f51\u683c\uff0c\u90a3\u4e48\u5b83\u4f1a\u975e\u5e38\u6709\u7528\u3002 aiProcess_OptimizeMeshes \uff1a\u548c\u4e0a\u4e2a\u9009\u9879\u76f8\u53cd\uff0c\u5b83\u4f1a\u5c06\u591a\u4e2a\u5c0f\u7f51\u683c\u62fc\u63a5\u4e3a\u4e00\u4e2a\u5927\u7684\u7f51\u683c\uff0c\u51cf\u5c11\u7ed8\u5236\u8c03\u7528\u4ece\u800c\u8fdb\u884c\u4f18\u5316\u3002 Assimp\u63d0\u4f9b\u4e86\u5f88\u591a\u6709\u7528\u7684\u540e\u671f\u5904\u7406\u6307\u4ee4\uff0c\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5168\u90e8\u7684\u6307\u4ee4\u3002\u5b9e\u9645\u4e0a\u4f7f\u7528Assimp\u52a0\u8f7d\u6a21\u578b\u662f\u975e\u5e38\u5bb9\u6613\u7684\uff08\u4f60\u4e5f\u53ef\u4ee5\u770b\u5230\uff09\u3002\u56f0\u96be\u7684\u662f\u4e4b\u540e\u4f7f\u7528\u8fd4\u56de\u7684\u573a\u666f\u5bf9\u8c61\u5c06\u52a0\u8f7d\u7684\u6570\u636e\u8f6c\u6362\u5230\u4e00\u4e2a Mesh \u5bf9\u8c61\u7684\u6570\u7ec4\u3002 \u5b8c\u6574\u7684 loadModel \u51fd\u6570\u5c06\u4f1a\u662f\u8fd9\u6837\u7684\uff1a void loadModel(string path) { Assimp::Importer import; const aiScene *scene = import.ReadFile(path, aiProcess_Triangulate | aiProcess_FlipUVs); if(!scene || scene->mFlags & AI_SCENE_FLAGS_INCOMPLETE || !scene->mRootNode) { cout << \"ERROR::ASSIMP::\" << import.GetErrorString() << endl; return; } directory = path.substr(0, path.find_last_of('/')); processNode(scene->mRootNode, scene); } \u5728\u6211\u4eec\u52a0\u8f7d\u4e86\u6a21\u578b\u4e4b\u540e\uff0c\u6211\u4eec\u4f1a\u68c0\u67e5\u573a\u666f\u548c\u5176\u6839\u8282\u70b9\u4e0d\u4e3anull\uff0c\u5e76\u4e14\u68c0\u67e5\u4e86\u5b83\u7684\u4e00\u4e2a\u6807\u8bb0(Flag)\uff0c\u6765\u67e5\u770b\u8fd4\u56de\u7684\u6570\u636e\u662f\u4e0d\u662f\u4e0d\u5b8c\u6574\u7684\u3002\u5982\u679c\u9047\u5230\u4e86\u4efb\u4f55\u9519\u8bef\uff0c\u6211\u4eec\u90fd\u4f1a\u901a\u8fc7\u5bfc\u5165\u5668\u7684 GetErrorString \u51fd\u6570\u6765\u62a5\u544a\u9519\u8bef\u5e76\u8fd4\u56de\u3002\u6211\u4eec\u4e5f\u83b7\u53d6\u4e86\u6587\u4ef6\u8def\u5f84\u7684\u76ee\u5f55\u8def\u5f84\u3002 \u5982\u679c\u4ec0\u4e48\u9519\u8bef\u90fd\u6ca1\u6709\u53d1\u751f\uff0c\u6211\u4eec\u5e0c\u671b\u5904\u7406\u573a\u666f\u4e2d\u7684\u6240\u6709\u8282\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u7b2c\u4e00\u4e2a\u8282\u70b9\uff08\u6839\u8282\u70b9\uff09\u4f20\u5165\u4e86\u9012\u5f52\u7684 processNode \u51fd\u6570\u3002\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9\uff08\u53ef\u80fd\uff09\u5305\u542b\u6709\u591a\u4e2a\u5b50\u8282\u70b9\uff0c\u6211\u4eec\u5e0c\u671b\u9996\u5148\u5904\u7406\u53c2\u6570\u4e2d\u7684\u8282\u70b9\uff0c\u518d\u7ee7\u7eed\u5904\u7406\u8be5\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u8fd9\u6b63\u7b26\u5408\u4e00\u4e2a\u9012\u5f52\u7ed3\u6784\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5b9a\u4e49\u4e00\u4e2a\u9012\u5f52\u51fd\u6570\u3002\u9012\u5f52\u51fd\u6570\u5728\u505a\u4e00\u4e9b\u5904\u7406\u4e4b\u540e\uff0c\u4f7f\u7528\u4e0d\u540c\u7684\u53c2\u6570 \u9012\u5f52 \u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u81ea\u8eab\uff0c\u76f4\u5230\u67d0\u4e2a\u6761\u4ef6\u88ab\u6ee1\u8db3\u505c\u6b62\u9012\u5f52\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d \u9000\u51fa\u6761\u4ef6 (Exit Condition)\u662f\u6240\u6709\u7684\u8282\u70b9\u90fd\u88ab\u5904\u7406\u5b8c\u6bd5\u3002 \u4f60\u53ef\u80fd\u8fd8\u8bb0\u5f97Assimp\u7684\u7ed3\u6784\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u5305\u542b\u4e86\u4e00\u7cfb\u5217\u7684\u7f51\u683c\u7d22\u5f15\uff0c\u6bcf\u4e2a\u7d22\u5f15\u6307\u5411\u573a\u666f\u5bf9\u8c61\u4e2d\u7684\u90a3\u4e2a\u7279\u5b9a\u7f51\u683c\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u5c31\u60f3\u53bb\u83b7\u53d6\u8fd9\u4e9b\u7f51\u683c\u7d22\u5f15\uff0c\u83b7\u53d6\u6bcf\u4e2a\u7f51\u683c\uff0c\u5904\u7406\u6bcf\u4e2a\u7f51\u683c\uff0c\u63a5\u7740\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\u91cd\u590d\u8fd9\u4e00\u8fc7\u7a0b\u3002 processNode \u51fd\u6570\u7684\u5185\u5bb9\u5982\u4e0b\uff1a void processNode(aiNode *node, const aiScene *scene) { // \u5904\u7406\u8282\u70b9\u6240\u6709\u7684\u7f51\u683c\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09 for(unsigned int i = 0; i < node->mNumMeshes; i++) { aiMesh *mesh = scene->mMeshes[node->mMeshes[i]]; meshes.push_back(processMesh(mesh, scene)); } // \u63a5\u4e0b\u6765\u5bf9\u5b83\u7684\u5b50\u8282\u70b9\u91cd\u590d\u8fd9\u4e00\u8fc7\u7a0b for(unsigned int i = 0; i < node->mNumChildren; i++) { processNode(node->mChildren[i], scene); } } \u6211\u4eec\u9996\u5148\u68c0\u67e5\u6bcf\u4e2a\u8282\u70b9\u7684\u7f51\u683c\u7d22\u5f15\uff0c\u5e76\u7d22\u5f15\u573a\u666f\u7684 mMeshes \u6570\u7ec4\u6765\u83b7\u53d6\u5bf9\u5e94\u7684\u7f51\u683c\u3002\u8fd4\u56de\u7684\u7f51\u683c\u5c06\u4f1a\u4f20\u9012\u5230 processMesh \u51fd\u6570\u4e2d\uff0c\u5b83\u4f1a\u8fd4\u56de\u4e00\u4e2a Mesh \u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u5b58\u50a8\u5728 meshes \u5217\u8868/vector\u3002 \u6240\u6709\u7f51\u683c\u90fd\u88ab\u5904\u7406\u4e4b\u540e\uff0c\u6211\u4eec\u4f1a\u904d\u5386\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\uff0c\u5e76\u5bf9\u5b83\u4eec\u8c03\u7528\u76f8\u540c\u7684 processMesh \u51fd\u6570\u3002\u5f53\u4e00\u4e2a\u8282\u70b9\u4e0d\u518d\u6709\u4efb\u4f55\u5b50\u8282\u70b9\u4e4b\u540e\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c06\u4f1a\u505c\u6b62\u6267\u884c\u3002 Important \u8ba4\u771f\u7684\u8bfb\u8005\u53ef\u80fd\u4f1a\u53d1\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u57fa\u672c\u4e0a\u5fd8\u6389\u5904\u7406\u4efb\u4f55\u7684\u8282\u70b9\uff0c\u53ea\u9700\u8981\u904d\u5386\u573a\u666f\u5bf9\u8c61\u7684\u6240\u6709\u7f51\u683c\uff0c\u5c31\u4e0d\u9700\u8981\u4e3a\u4e86\u7d22\u5f15\u505a\u8fd9\u4e00\u5806\u590d\u6742\u7684\u4e1c\u897f\u4e86\u3002\u6211\u4eec\u4ecd\u8fd9\u4e48\u505a\u7684\u539f\u56e0\u662f\uff0c\u4f7f\u7528\u8282\u70b9\u7684\u6700\u521d\u60f3\u6cd5\u662f\u5c06\u7f51\u683c\u4e4b\u95f4\u5b9a\u4e49\u4e00\u4e2a\u7236\u5b50\u5173\u7cfb\u3002\u901a\u8fc7\u8fd9\u6837\u9012\u5f52\u5730\u904d\u5386\u8fd9\u5c42\u5173\u7cfb\uff0c\u6211\u4eec\u5c31\u80fd\u5c06\u67d0\u4e2a\u7f51\u683c\u5b9a\u4e49\u4e3a\u53e6\u4e00\u4e2a\u7f51\u683c\u7684\u7236\u7f51\u683c\u4e86\u3002 \u8fd9\u4e2a\u7cfb\u7edf\u7684\u4e00\u4e2a\u4f7f\u7528\u6848\u4f8b\u662f\uff0c\u5f53\u4f60\u60f3\u4f4d\u79fb\u4e00\u4e2a\u6c7d\u8f66\u7684\u7f51\u683c\u65f6\uff0c\u4f60\u53ef\u4ee5\u4fdd\u8bc1\u5b83\u7684\u6240\u6709\u5b50\u7f51\u683c\uff08\u6bd4\u5982\u5f15\u64ce\u7f51\u683c\u3001\u65b9\u5411\u76d8\u7f51\u683c\u3001\u8f6e\u80ce\u7f51\u683c\uff09\u90fd\u4f1a\u968f\u7740\u4e00\u8d77\u4f4d\u79fb\u3002\u8fd9\u6837\u7684\u7cfb\u7edf\u80fd\u591f\u7528\u7236\u5b50\u5173\u7cfb\u5f88\u5bb9\u6613\u5730\u521b\u5efa\u51fa\u6765\u3002 \u7136\u800c\uff0c\u73b0\u5728\u6211\u4eec\u5e76\u6ca1\u6709\u4f7f\u7528\u8fd9\u6837\u4e00\u79cd\u7cfb\u7edf\uff0c\u4f46\u5982\u679c\u4f60\u60f3\u5bf9\u4f60\u7684\u7f51\u683c\u6570\u636e\u6709\u66f4\u591a\u7684\u63a7\u5236\uff0c\u901a\u5e38\u90fd\u662f\u5efa\u8bae\u4f7f\u7528\u8fd9\u4e00\u79cd\u65b9\u6cd5\u7684\u3002\u8fd9\u79cd\u7c7b\u8282\u70b9\u7684\u5173\u7cfb\u6bd5\u7adf\u662f\u7531\u521b\u5efa\u4e86\u8fd9\u4e2a\u6a21\u578b\u7684\u827a\u672f\u5bb6\u6240\u5b9a\u4e49\u3002 \u4e0b\u4e00\u6b65\u5c31\u662f\u5c06Assimp\u7684\u6570\u636e\u89e3\u6790\u5230\u4e0a\u4e00\u8282\u4e2d\u521b\u5efa\u7684 Mesh \u7c7b\u4e2d\u3002","title":"\u5bfc\u51653D\u6a21\u578b\u5230OpenGL"},{"location":"03%20Model%20Loading/03%20Model/#assimp","text":"\u5c06\u4e00\u4e2a aiMesh \u5bf9\u8c61\u8f6c\u5316\u4e3a\u6211\u4eec\u81ea\u5df1\u7684\u7f51\u683c\u5bf9\u8c61\u4e0d\u662f\u90a3\u4e48\u56f0\u96be\u3002\u6211\u4eec\u8981\u505a\u7684\u53ea\u662f\u8bbf\u95ee\u7f51\u683c\u7684\u76f8\u5173\u5c5e\u6027\u5e76\u5c06\u5b83\u4eec\u50a8\u5b58\u5230\u6211\u4eec\u81ea\u5df1\u7684\u5bf9\u8c61\u4e2d\u3002 processMesh \u51fd\u6570\u7684\u5927\u4f53\u7ed3\u6784\u5982\u4e0b\uff1a Mesh processMesh(aiMesh *mesh, const aiScene *scene) { vector<Vertex> vertices; vector<unsigned int> indices; vector<Texture> textures; for(unsigned int i = 0; i < mesh->mNumVertices; i++) { Vertex vertex; // \u5904\u7406\u9876\u70b9\u4f4d\u7f6e\u3001\u6cd5\u7ebf\u548c\u7eb9\u7406\u5750\u6807 ... vertices.push_back(vertex); } // \u5904\u7406\u7d22\u5f15 ... // \u5904\u7406\u6750\u8d28 if(mesh->mMaterialIndex >= 0) { ... } return Mesh(vertices, indices, textures); } \u5904\u7406\u7f51\u683c\u7684\u8fc7\u7a0b\u4e3b\u8981\u6709\u4e09\u90e8\u5206\uff1a\u83b7\u53d6\u6240\u6709\u7684\u9876\u70b9\u6570\u636e\uff0c\u83b7\u53d6\u5b83\u4eec\u7684\u7f51\u683c\u7d22\u5f15\uff0c\u5e76\u83b7\u53d6\u76f8\u5173\u7684\u6750\u8d28\u6570\u636e\u3002\u5904\u7406\u540e\u7684\u6570\u636e\u5c06\u4f1a\u50a8\u5b58\u5728\u4e09\u4e2avector\u5f53\u4e2d\uff0c\u6211\u4eec\u4f1a\u5229\u7528\u5b83\u4eec\u6784\u5efa\u4e00\u4e2a Mesh \u5bf9\u8c61\uff0c\u5e76\u8fd4\u56de\u5b83\u5230\u51fd\u6570\u7684\u8c03\u7528\u8005\u90a3\u91cc\u3002 \u83b7\u53d6\u9876\u70b9\u6570\u636e\u975e\u5e38\u7b80\u5355\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a Vertex \u7ed3\u6784\u4f53\uff0c\u6211\u4eec\u5c06\u5728\u6bcf\u4e2a\u8fed\u4ee3\u4e4b\u540e\u5c06\u5b83\u52a0\u5230 vertices \u6570\u7ec4\u4e2d\u3002\u6211\u4eec\u4f1a\u904d\u5386\u7f51\u683c\u4e2d\u7684\u6240\u6709\u9876\u70b9\uff08\u4f7f\u7528 mesh->mNumVertices \u6765\u83b7\u53d6\uff09\u3002\u5728\u6bcf\u4e2a\u8fed\u4ee3\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u4f7f\u7528\u6240\u6709\u7684\u76f8\u5173\u6570\u636e\u586b\u5145\u8fd9\u4e2a\u7ed3\u6784\u4f53\u3002\u9876\u70b9\u7684\u4f4d\u7f6e\u662f\u8fd9\u6837\u5904\u7406\u7684\uff1a glm::vec3 vector; vector.x = mesh->mVertices[i].x; vector.y = mesh->mVertices[i].y; vector.z = mesh->mVertices[i].z; vertex.Position = vector; \u6ce8\u610f\u6211\u4eec\u4e3a\u4e86\u4f20\u8f93Assimp\u7684\u6570\u636e\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a vec3 \u7684\u4e34\u65f6\u53d8\u91cf\u3002\u4f7f\u7528\u8fd9\u6837\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u7684\u539f\u56e0\u662fAssimp\u5bf9\u5411\u91cf\u3001\u77e9\u9635\u3001\u5b57\u7b26\u4e32\u7b49\u90fd\u6709\u81ea\u5df1\u7684\u4e00\u5957\u6570\u636e\u7c7b\u578b\uff0c\u5b83\u4eec\u5e76\u4e0d\u80fd\u5b8c\u7f8e\u5730\u8f6c\u6362\u5230GLM\u7684\u6570\u636e\u7c7b\u578b\u4e2d\u3002 Important Assimp\u5c06\u5b83\u7684\u9876\u70b9\u4f4d\u7f6e\u6570\u7ec4\u53eb\u505a mVertices \uff0c\u8fd9\u5176\u5b9e\u5e76\u4e0d\u662f\u90a3\u4e48\u76f4\u89c2\u3002 \u5904\u7406\u6cd5\u7ebf\u7684\u6b65\u9aa4\u4e5f\u662f\u5dee\u4e0d\u591a\u7684\uff1a vector.x = mesh->mNormals[i].x; vector.y = mesh->mNormals[i].y; vector.z = mesh->mNormals[i].z; vertex.Normal = vector; \u7eb9\u7406\u5750\u6807\u7684\u5904\u7406\u4e5f\u5927\u4f53\u76f8\u4f3c\uff0c\u4f46Assimp\u5141\u8bb8\u4e00\u4e2a\u6a21\u578b\u5728\u4e00\u4e2a\u9876\u70b9\u4e0a\u6709\u6700\u591a8\u4e2a\u4e0d\u540c\u7684\u7eb9\u7406\u5750\u6807\uff0c\u6211\u4eec\u4e0d\u4f1a\u7528\u5230\u90a3\u4e48\u591a\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u7b2c\u4e00\u7ec4\u7eb9\u7406\u5750\u6807\u3002\u6211\u4eec\u540c\u6837\u4e5f\u60f3\u68c0\u67e5\u7f51\u683c\u662f\u5426\u771f\u7684\u5305\u542b\u4e86\u7eb9\u7406\u5750\u6807\uff08\u53ef\u80fd\u5e76\u4e0d\u4f1a\u4e00\u76f4\u5982\u6b64\uff09 if(mesh->mTextureCoords[0]) // \u7f51\u683c\u662f\u5426\u6709\u7eb9\u7406\u5750\u6807\uff1f { glm::vec2 vec; vec.x = mesh->mTextureCoords[0][i].x; vec.y = mesh->mTextureCoords[0][i].y; vertex.TexCoords = vec; } else vertex.TexCoords = glm::vec2(0.0f, 0.0f); vertex \u7ed3\u6784\u4f53\u73b0\u5728\u5df2\u7ecf\u586b\u5145\u597d\u4e86\u9700\u8981\u7684\u9876\u70b9\u5c5e\u6027\uff0c\u6211\u4eec\u4f1a\u5728\u8fed\u4ee3\u7684\u6700\u540e\u5c06\u5b83\u538b\u5165 vertices \u8fd9\u4e2avector\u7684\u5c3e\u90e8\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4f1a\u5bf9\u6bcf\u4e2a\u7f51\u683c\u7684\u9876\u70b9\u90fd\u91cd\u590d\u4e00\u904d\u3002","title":"\u4eceAssimp\u5230\u7f51\u683c"},{"location":"03%20Model%20Loading/03%20Model/#_2","text":"Assimp\u7684\u63a5\u53e3\u5b9a\u4e49\u4e86\u6bcf\u4e2a\u7f51\u683c\u90fd\u6709\u4e00\u4e2a\u9762(Face)\u6570\u7ec4\uff0c\u6bcf\u4e2a\u9762\u4ee3\u8868\u4e86\u4e00\u4e2a\u56fe\u5143\uff0c\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff08\u7531\u4e8e\u4f7f\u7528\u4e86 aiProcess_Triangulate \u9009\u9879\uff09\u5b83\u603b\u662f\u4e09\u89d2\u5f62\u3002\u4e00\u4e2a\u9762\u5305\u542b\u4e86\u591a\u4e2a\u7d22\u5f15\uff0c\u5b83\u4eec\u5b9a\u4e49\u4e86\u5728\u6bcf\u4e2a\u56fe\u5143\u4e2d\uff0c\u6211\u4eec\u5e94\u8be5\u7ed8\u5236\u54ea\u4e2a\u9876\u70b9\uff0c\u5e76\u4ee5\u4ec0\u4e48\u987a\u5e8f\u7ed8\u5236\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u904d\u5386\u4e86\u6240\u6709\u7684\u9762\uff0c\u5e76\u50a8\u5b58\u4e86\u9762\u7684\u7d22\u5f15\u5230 indices \u8fd9\u4e2avector\u4e2d\u5c31\u53ef\u4ee5\u4e86\u3002 for(unsigned int i = 0; i < mesh->mNumFaces; i++) { aiFace face = mesh->mFaces[i]; for(unsigned int j = 0; j < face.mNumIndices; j++) indices.push_back(face.mIndices[j]); } \u6240\u6709\u7684\u5916\u90e8\u5faa\u73af\u90fd\u7ed3\u675f\u4e86\uff0c\u6211\u4eec\u73b0\u5728\u6709\u4e86\u4e00\u7cfb\u5217\u7684\u9876\u70b9\u548c\u7d22\u5f15\u6570\u636e\uff0c\u5b83\u4eec\u53ef\u4ee5\u7528\u6765\u901a\u8fc7 glDrawElements \u51fd\u6570\u6765\u7ed8\u5236\u7f51\u683c\u3002\u7136\u800c\uff0c\u4e3a\u4e86\u7ed3\u675f\u8fd9\u4e2a\u8bdd\u9898\uff0c\u5e76\u4e14\u5bf9\u7f51\u683c\u63d0\u4f9b\u4e00\u4e9b\u7ec6\u8282\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5904\u7406\u7f51\u683c\u7684\u6750\u8d28\u3002","title":"\u7d22\u5f15"},{"location":"03%20Model%20Loading/03%20Model/#_3","text":"\u548c\u8282\u70b9\u4e00\u6837\uff0c\u4e00\u4e2a\u7f51\u683c\u53ea\u5305\u542b\u4e86\u4e00\u4e2a\u6307\u5411\u6750\u8d28\u5bf9\u8c61\u7684\u7d22\u5f15\u3002\u5982\u679c\u60f3\u8981\u83b7\u53d6\u7f51\u683c\u771f\u6b63\u7684\u6750\u8d28\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u7d22\u5f15\u573a\u666f\u7684 mMaterials \u6570\u7ec4\u3002\u7f51\u683c\u6750\u8d28\u7d22\u5f15\u4f4d\u4e8e\u5b83\u7684 mMaterialIndex \u5c5e\u6027\u4e2d\uff0c\u6211\u4eec\u540c\u6837\u53ef\u4ee5\u7528\u5b83\u6765\u68c0\u6d4b\u4e00\u4e2a\u7f51\u683c\u662f\u5426\u5305\u542b\u6709\u6750\u8d28\uff1a if(mesh->mMaterialIndex >= 0) { aiMaterial *material = scene->mMaterials[mesh->mMaterialIndex]; vector<Texture> diffuseMaps = loadMaterialTextures(material, aiTextureType_DIFFUSE, \"texture_diffuse\"); textures.insert(textures.end(), diffuseMaps.begin(), diffuseMaps.end()); vector<Texture> specularMaps = loadMaterialTextures(material, aiTextureType_SPECULAR, \"texture_specular\"); textures.insert(textures.end(), specularMaps.begin(), specularMaps.end()); } \u6211\u4eec\u9996\u5148\u4ece\u573a\u666f\u7684 mMaterials \u6570\u7ec4\u4e2d\u83b7\u53d6 aiMaterial \u5bf9\u8c61\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5e0c\u671b\u52a0\u8f7d\u7f51\u683c\u7684\u6f2b\u53cd\u5c04\u548c/\u6216\u955c\u9762\u5149\u8d34\u56fe\u3002\u4e00\u4e2a\u6750\u8d28\u5bf9\u8c61\u7684\u5185\u90e8\u5bf9\u6bcf\u79cd\u7eb9\u7406\u7c7b\u578b\u90fd\u5b58\u50a8\u4e86\u4e00\u4e2a\u7eb9\u7406\u4f4d\u7f6e\u6570\u7ec4\u3002\u4e0d\u540c\u7684\u7eb9\u7406\u7c7b\u578b\u90fd\u4ee5 aiTextureType_ \u4e3a\u524d\u7f00\u3002\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u53eb\u505a loadMaterialTextures \u7684\u5de5\u5177\u51fd\u6570\u6765\u4ece\u6750\u8d28\u4e2d\u83b7\u53d6\u7eb9\u7406\u3002\u8fd9\u4e2a\u51fd\u6570\u5c06\u4f1a\u8fd4\u56de\u4e00\u4e2a Texture \u7ed3\u6784\u4f53\u7684vector\uff0c\u6211\u4eec\u5c06\u5728\u6a21\u578b\u7684 textures vector\u7684\u5c3e\u90e8\u4e4b\u540e\u5b58\u50a8\u5b83\u3002 loadMaterialTextures \u51fd\u6570\u904d\u5386\u4e86\u7ed9\u5b9a\u7eb9\u7406\u7c7b\u578b\u7684\u6240\u6709\u7eb9\u7406\u4f4d\u7f6e\uff0c\u83b7\u53d6\u4e86\u7eb9\u7406\u7684\u6587\u4ef6\u4f4d\u7f6e\uff0c\u5e76\u52a0\u8f7d\u5e76\u548c\u751f\u6210\u4e86\u7eb9\u7406\uff0c\u5c06\u4fe1\u606f\u50a8\u5b58\u5728\u4e86\u4e00\u4e2a Vertex \u7ed3\u6784\u4f53\u4e2d\u3002\u5b83\u770b\u8d77\u6765\u4f1a\u50cf\u8fd9\u6837\uff1a vector<Texture> loadMaterialTextures(aiMaterial *mat, aiTextureType type, string typeName) { vector<Texture> textures; for(unsigned int i = 0; i < mat->GetTextureCount(type); i++) { aiString str; mat->GetTexture(type, i, &str); Texture texture; texture.id = TextureFromFile(str.C_Str(), directory); texture.type = typeName; texture.path = str; textures.push_back(texture); } return textures; } \u6211\u4eec\u9996\u5148\u901a\u8fc7 GetTextureCount \u51fd\u6570\u68c0\u67e5\u50a8\u5b58\u5728\u6750\u8d28\u4e2d\u7eb9\u7406\u7684\u6570\u91cf\uff0c\u8fd9\u4e2a\u51fd\u6570\u9700\u8981\u4e00\u4e2a\u7eb9\u7406\u7c7b\u578b\u3002\u6211\u4eec\u4f1a\u4f7f\u7528 GetTexture \u83b7\u53d6\u6bcf\u4e2a\u7eb9\u7406\u7684\u6587\u4ef6\u4f4d\u7f6e\uff0c\u5b83\u4f1a\u5c06\u7ed3\u679c\u50a8\u5b58\u5728\u4e00\u4e2a aiString \u4e2d\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u4f7f\u7528\u53e6\u5916\u4e00\u4e2a\u53eb\u505a TextureFromFile \u7684\u5de5\u5177\u51fd\u6570\uff0c\u5b83\u5c06\u4f1a\uff08\u7528 stb_image.h \uff09\u52a0\u8f7d\u4e00\u4e2a\u7eb9\u7406\u5e76\u8fd4\u56de\u8be5\u7eb9\u7406\u7684ID\u3002\u5982\u679c\u4f60\u4e0d\u786e\u5b9a\u8fd9\u6837\u7684\u4ee3\u7801\u662f\u5982\u4f55\u5199\u51fa\u6765\u7684\u8bdd\uff0c\u53ef\u4ee5\u67e5\u770b\u6700\u540e\u7684\u5b8c\u6574\u4ee3\u7801\u3002 Important \u6ce8\u610f\uff0c\u6211\u4eec\u5047\u8bbe\u4e86\u6a21\u578b\u6587\u4ef6\u4e2d\u7eb9\u7406\u6587\u4ef6\u7684\u8def\u5f84\u662f\u76f8\u5bf9\u4e8e\u6a21\u578b\u6587\u4ef6\u7684\u672c\u5730(Local)\u8def\u5f84\uff0c\u6bd4\u5982\u8bf4\u4e0e\u6a21\u578b\u6587\u4ef6\u5904\u4e8e\u540c\u4e00\u76ee\u5f55\u4e0b\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u7eb9\u7406\u4f4d\u7f6e\u5b57\u7b26\u4e32\u62fc\u63a5\u5230\u4e4b\u524d\uff08\u5728 loadModel \u4e2d\uff09\u83b7\u53d6\u7684\u76ee\u5f55\u5b57\u7b26\u4e32\u4e0a\uff0c\u6765\u83b7\u53d6\u5b8c\u6574\u7684\u7eb9\u7406\u8def\u5f84\uff08\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48 GetTexture \u51fd\u6570\u4e5f\u9700\u8981\u4e00\u4e2a\u76ee\u5f55\u5b57\u7b26\u4e32\uff09\u3002 \u5728\u7f51\u7edc\u4e0a\u627e\u5230\u7684\u67d0\u4e9b\u6a21\u578b\u4f1a\u5bf9\u7eb9\u7406\u4f4d\u7f6e\u4f7f\u7528\u7edd\u5bf9(Absolute)\u8def\u5f84\uff0c\u8fd9\u5c31\u4e0d\u80fd\u5728\u6bcf\u53f0\u673a\u5668\u4e0a\u90fd\u5de5\u4f5c\u4e86\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u80fd\u4f1a\u9700\u8981\u624b\u52a8\u4fee\u6539\u8fd9\u4e2a\u6587\u4ef6\uff0c\u6765\u8ba9\u5b83\u5bf9\u7eb9\u7406\u4f7f\u7528\u672c\u5730\u8def\u5f84\uff08\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff09\u3002 \u8fd9\u5c31\u662f\u4f7f\u7528Assimp\u5bfc\u5165\u6a21\u578b\u7684\u5168\u90e8\u4e86\u3002","title":"\u6750\u8d28"},{"location":"03%20Model%20Loading/03%20Model/#_4","text":"\u8fd9\u8fd8\u6ca1\u6709\u5b8c\u5168\u7ed3\u675f\uff0c\u56e0\u4e3a\u6211\u4eec\u8fd8\u60f3\u505a\u51fa\u4e00\u4e2a\u91cd\u5927\u7684\uff08\u4f46\u4e0d\u662f\u5b8c\u5168\u5fc5\u987b\u7684\uff09\u4f18\u5316\u3002\u5927\u591a\u6570\u573a\u666f\u90fd\u4f1a\u5728\u591a\u4e2a\u7f51\u683c\u4e2d\u91cd\u7528\u90e8\u5206\u7eb9\u7406\u3002\u8fd8\u662f\u60f3\u60f3\u4e00\u4e2a\u623f\u5b50\uff0c\u5b83\u7684\u5899\u58c1\u6709\u7740\u82b1\u5c97\u5ca9\u7684\u7eb9\u7406\u3002\u8fd9\u4e2a\u7eb9\u7406\u4e5f\u53ef\u4ee5\u88ab\u5e94\u7528\u5230\u5730\u677f\u3001\u5929\u82b1\u677f\u3001\u697c\u68af\u3001\u684c\u5b50\uff0c\u751a\u81f3\u662f\u9644\u8fd1\u7684\u4e00\u53e3\u4e95\u4e0a\u3002\u52a0\u8f7d\u7eb9\u7406\u5e76\u4e0d\u662f\u4e00\u4e2a\u4f4e\u5f00\u9500\u7684\u64cd\u4f5c\uff0c\u5728\u6211\u4eec\u5f53\u524d\u7684\u5b9e\u73b0\u4e2d\uff0c\u5373\u4fbf\u540c\u6837\u7684\u7eb9\u7406\u5df2\u7ecf\u88ab\u52a0\u8f7d\u8fc7\u5f88\u591a\u904d\u4e86\uff0c\u5bf9\u6bcf\u4e2a\u7f51\u683c\u4ecd\u4f1a\u52a0\u8f7d\u5e76\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u7eb9\u7406\u3002\u8fd9\u5f88\u5feb\u5c31\u4f1a\u53d8\u6210\u6a21\u578b\u52a0\u8f7d\u5b9e\u73b0\u7684\u6027\u80fd\u74f6\u9888\u3002 \u6240\u4ee5\u6211\u4eec\u4f1a\u5bf9\u6a21\u578b\u7684\u4ee3\u7801\u8fdb\u884c\u5fae\u8c03\uff0c\u5c06\u6240\u6709\u52a0\u8f7d\u8fc7\u7684\u7eb9\u7406\u5168\u5c40\u50a8\u5b58\uff0c\u6bcf\u5f53\u6211\u4eec\u60f3\u52a0\u8f7d\u4e00\u4e2a\u7eb9\u7406\u7684\u65f6\u5019\uff0c\u9996\u5148\u53bb\u68c0\u67e5\u5b83\u6709\u6ca1\u6709\u88ab\u52a0\u8f7d\u8fc7\u3002\u5982\u679c\u6709\u7684\u8bdd\uff0c\u6211\u4eec\u4f1a\u76f4\u63a5\u4f7f\u7528\u90a3\u4e2a\u7eb9\u7406\uff0c\u5e76\u8df3\u8fc7\u6574\u4e2a\u52a0\u8f7d\u6d41\u7a0b\uff0c\u6765\u4e3a\u6211\u4eec\u7701\u4e0b\u5f88\u591a\u5904\u7406\u80fd\u529b\u3002\u4e3a\u4e86\u80fd\u591f\u6bd4\u8f83\u7eb9\u7406\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u50a8\u5b58\u5b83\u4eec\u7684\u8def\u5f84\uff1a struct Texture { unsigned int id; string type; aiString path; // \u6211\u4eec\u50a8\u5b58\u7eb9\u7406\u7684\u8def\u5f84\u7528\u4e8e\u4e0e\u5176\u5b83\u7eb9\u7406\u8fdb\u884c\u6bd4\u8f83 }; \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u6240\u6709\u52a0\u8f7d\u8fc7\u7684\u7eb9\u7406\u50a8\u5b58\u5728\u53e6\u4e00\u4e2avector\u4e2d\uff0c\u5728\u6a21\u578b\u7c7b\u7684\u9876\u90e8\u58f0\u660e\u4e3a\u4e00\u4e2a\u79c1\u6709\u53d8\u91cf\uff1a vector<Texture> textures_loaded; \u4e4b\u540e\uff0c\u5728 loadMaterialTextures \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u7eb9\u7406\u7684\u8def\u5f84\u4e0e\u50a8\u5b58\u5728 textures_loaded \u8fd9\u4e2avector\u4e2d\u7684\u6240\u6709\u7eb9\u7406\u8fdb\u884c\u6bd4\u8f83\uff0c\u770b\u770b\u5f53\u524d\u7eb9\u7406\u7684\u8def\u5f84\u662f\u5426\u4e0e\u5176\u4e2d\u7684\u4e00\u4e2a\u76f8\u540c\u3002\u5982\u679c\u662f\u7684\u8bdd\uff0c\u5219\u8df3\u8fc7\u7eb9\u7406\u52a0\u8f7d/\u751f\u6210\u7684\u90e8\u5206\uff0c\u76f4\u63a5\u4f7f\u7528\u5b9a\u4f4d\u5230\u7684\u7eb9\u7406\u7ed3\u6784\u4f53\u4e3a\u7f51\u683c\u7684\u7eb9\u7406\u3002\u66f4\u65b0\u540e\u7684\u51fd\u6570\u5982\u4e0b\uff1a vector<Texture> loadMaterialTextures(aiMaterial *mat, aiTextureType type, string typeName) { vector<Texture> textures; for(unsigned int i = 0; i < mat->GetTextureCount(type); i++) { aiString str; mat->GetTexture(type, i, &str); bool skip = false; for(unsigned int j = 0; j < textures_loaded.size(); j++) { if(std::strcmp(textures_loaded[j].path.data(), str.C_Str()) == 0) { textures.push_back(textures_loaded[j]); skip = true; break; } } if(!skip) { // \u5982\u679c\u7eb9\u7406\u8fd8\u6ca1\u6709\u88ab\u52a0\u8f7d\uff0c\u5219\u52a0\u8f7d\u5b83 Texture texture; texture.id = TextureFromFile(str.C_Str(), directory); texture.type = typeName; texture.path = str.C_Str(); textures.push_back(texture); textures_loaded.push_back(texture); // \u6dfb\u52a0\u5230\u5df2\u52a0\u8f7d\u7684\u7eb9\u7406\u4e2d } } return textures; } \u6240\u4ee5\u73b0\u5728\u6211\u4eec\u4e0d\u4ec5\u6709\u4e86\u4e2a\u7075\u6d3b\u7684\u6a21\u578b\u52a0\u8f7d\u7cfb\u7edf\uff0c\u6211\u4eec\u4e5f\u83b7\u5f97\u4e86\u4e00\u4e2a\u52a0\u8f7d\u5bf9\u8c61\u5f88\u5feb\u7684\u4f18\u5316\u7248\u672c\u3002 Attention \u6709\u4e9b\u7248\u672c\u7684Assimp\u5728\u4f7f\u7528\u8c03\u8bd5\u7248\u672c\u6216\u8005\u4f7f\u7528IDE\u7684\u8c03\u8bd5\u6a21\u5f0f\u4e0b\u52a0\u8f7d\u6a21\u578b\u4f1a\u975e\u5e38\u7f13\u6162\uff0c\u6240\u4ee5\u5728\u4f60\u9047\u5230\u7f13\u6162\u7684\u52a0\u8f7d\u901f\u5ea6\u65f6\uff0c\u53ef\u4ee5\u8bd5\u8bd5\u4f7f\u7528\u53d1\u5e03\u7248\u672c\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u4f18\u5316\u540e Model \u7c7b\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002","title":"\u91cd\u5927\u4f18\u5316"},{"location":"03%20Model%20Loading/03%20Model/#_5","text":"\u6240\u4ee5\uff0c\u8ba9\u6211\u4eec\u5bfc\u5165\u4e00\u4e2a\u7531\u771f\u6b63\u7684\u827a\u672f\u5bb6\u6240\u521b\u9020\u7684\u6a21\u578b\uff0c\u66ff\u4ee3\u6211\u8fd9\u4e2a\u5929\u624d\u7684\u4f5c\u54c1\uff08\u4f60\u8981\u627f\u8ba4\uff0c\u8fd9\u4e9b\u7bb1\u5b50\u53ef\u80fd\u662f\u4f60\u770b\u8fc7\u7684\u6700\u6f02\u4eae\u7684\u7acb\u65b9\u4f53\u4e86\uff09\uff0c\u6d4b\u8bd5\u4e00\u4e0b\u6211\u4eec\u7684\u5b9e\u73b0\u5427\u3002\u7531\u4e8e\u6211\u4e0d\u60f3\u8ba9\u6211\u5360\u592a\u591a\u7684\u529f\u52b3\uff0c\u6211\u4f1a\u5076\u5c14\u8ba9\u522b\u7684\u827a\u672f\u5bb6\u4e5f\u52a0\u5165\u6211\u4eec\uff0c\u8fd9\u6b21\u6211\u4eec\u5c06\u4f1a\u52a0\u8f7d\u7531Berk Gedik\u8bbe\u8ba1\u7684 \u5409\u4ed6\u751f\u5b58\u80cc\u5305 (Survival Guitar Backpack)\u3002\u6211\u7a0d\u5fae\u4fee\u6539\u4e86\u6750\u8d28\u548c\u8def\u5f84\uff0c\u8fd9\u6837\u4fbf\u53ef\u4e0e\u6211\u4eec\u7684\u6a21\u578b\u52a0\u8f7d\u4ee3\u7801\u517c\u5bb9\u3002\u8fd9\u4e2a\u6a21\u578b\u88ab\u8f93\u51fa\u4e3a\u4e00\u4e2a.obj\u6587\u4ef6\u4ee5\u53ca\u4e00\u4e2a.mtl\u6587\u4ef6\uff0c.mtl\u6587\u4ef6\u5305\u542b\u4e86\u6a21\u578b\u7684\u6f2b\u53cd\u5c04\u3001\u955c\u9762\u5149\u548c\u6cd5\u7ebf\u8d34\u56fe\uff08\u8fd9\u4e2a\u4f1a\u5728\u540e\u9762\u5b66\u4e60\u5230\uff09\uff0c\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u4e0b\u8f7d\u5230\u7a0d\u5fae\u4fee\u6539\u4e4b\u540e\u7684\u6a21\u578b\uff0c\u6ce8\u610f\uff0c\u6211\u4eec\u4e0d\u4f1a\u7528\u5230\u5b83\u7684\u4e00\u4e9b\u989d\u5916\u7684\u7eb9\u7406\u7c7b\u578b\uff0c\u5e76\u4e14\u6240\u6709\u7684\u7eb9\u7406\u548c\u6a21\u578b\u6587\u4ef6\u5e94\u8be5\u4f4d\u4e8e\u540c\u4e00\u4e2a\u76ee\u5f55\u4e0b\uff0c\u4ee5\u4f9b\u52a0\u8f7d\u7eb9\u7406\u3002 Important \u4f60\u4ece\u672c\u7f51\u7ad9\u4e2d\u4e0b\u8f7d\u5230\u7684\u7248\u672c\u662f\u4fee\u6539\u8fc7\u7684\u7248\u672c\uff0c\u6bcf\u4e2a\u7eb9\u7406\u7684\u8def\u5f84\u90fd\u88ab\u4fee\u6539\u4e3a\u4e86\u4e00\u4e2a\u672c\u5730\u7684\u76f8\u5bf9\u8def\u5f84\uff0c\u800c\u4e0d\u662f\u539f\u8d44\u6e90\u7684\u7edd\u5bf9\u8def\u5f84\u3002 \u73b0\u5728\u5728\u4ee3\u7801\u4e2d\uff0c\u58f0\u660e\u4e00\u4e2a Model \u5bf9\u8c61\uff0c\u5c06\u6a21\u578b\u7684\u6587\u4ef6\u4f4d\u7f6e\u4f20\u5165\u3002\u63a5\u4e0b\u6765\u6a21\u578b\u5e94\u8be5\u4f1a\u81ea\u52a8\u52a0\u8f7d\u5e76\uff08\u5982\u679c\u6ca1\u6709\u9519\u8bef\u7684\u8bdd\uff09\u5728\u6e32\u67d3\u5faa\u73af\u4e2d\u4f7f\u7528\u5b83\u7684 Draw \u51fd\u6570\u6765\u7ed8\u5236\u7269\u4f53\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e86\u3002\u4e0d\u518d\u9700\u8981\u7f13\u51b2\u5206\u914d\u3001\u5c5e\u6027\u6307\u9488\u548c\u6e32\u67d3\u6307\u4ee4\uff0c\u53ea\u9700\u8981\u4e00\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u4e86\u3002\u63a5\u4e0b\u6765\u5982\u679c\u4f60\u521b\u5efa\u4e00\u7cfb\u5217\u7740\u8272\u5668\uff0c\u5176\u4e2d\u7247\u6bb5\u7740\u8272\u5668\u4ec5\u4ec5\u8f93\u51fa\u7269\u4f53\u7684\u6f2b\u53cd\u5c04\u7eb9\u7406\u989c\u8272\uff0c\u6700\u7ec8\u7684\u7ed3\u679c\u770b\u4e0a\u53bb\u4f1a\u662f\u8fd9\u6837\u7684\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5b8c\u6574\u7684\u6e90\u7801\u3002\u6ce8\u610f\u6211\u4eec\u901a\u8fc7stb_image.h\u6765\u5782\u76f4\u7ffb\u8f6c\u7eb9\u7406\uff0c\u5982\u679c\u4f60\u5728\u6211\u4eec\u52a0\u8f7d\u6a21\u578b\u4e4b\u524d\u6ca1\u6709\u8fd9\u6837\u505a\u4f1a\u5bfc\u81f4\u7eb9\u7406\u770b\u8d77\u6765\u5b8c\u5168\u6df7\u4e71\u3002 \u6211\u4eec\u53ef\u4ee5\u53d8\u5f97\u66f4\u6709\u521b\u9020\u529b\u4e00\u70b9\uff0c\u6839\u636e\u6211\u4eec\u4e4b\u524d\u5728 \u5149\u7167 \u6559\u7a0b\u4e2d\u5b66\u8fc7\u7684\u77e5\u8bc6\uff0c\u5f15\u5165\u4e24\u4e2a\u70b9\u5149\u6e90\u5230\u6e32\u67d3\u65b9\u7a0b\u4e2d\uff0c\u7ed3\u5408\u955c\u9762\u5149\u8d34\u56fe\uff0c\u6211\u4eec\u80fd\u5f97\u5230\u5f88\u60ca\u4eba\u7684\u6548\u679c\u3002 \u751a\u81f3\u6211\u90fd\u5fc5\u987b\u8981\u627f\u8ba4\u8fd9\u4e2a\u53ef\u80fd\u662f\u6bd4\u4e00\u76f4\u4f7f\u7528\u7684\u7bb1\u5b50\u8981\u597d\u770b\u591a\u4e86\u3002\u4f7f\u7528Assimp\uff0c\u4f60\u80fd\u591f\u52a0\u8f7d\u4e92\u8054\u7f51\u4e0a\u7684\u65e0\u6570\u6a21\u578b\u3002\u6709\u5f88\u591a\u8d44\u6e90\u7f51\u7ad9\u90fd\u63d0\u4f9b\u4e86\u591a\u79cd\u683c\u5f0f\u7684\u514d\u8d393D\u6a21\u578b\u4f9b\u4f60\u4e0b\u8f7d\u3002\u4f46\u8fd8\u662f\u8981\u6ce8\u610f\uff0c\u6709\u4e9b\u6a21\u578b\u4f1a\u4e0d\u80fd\u6b63\u5e38\u5730\u8f7d\u5165\uff0c\u7eb9\u7406\u7684\u8def\u5f84\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u6216\u8005Assimp\u5e76\u4e0d\u652f\u6301\u5b83\u7684\u683c\u5f0f\u3002","title":"\u548c\u7bb1\u5b50\u6a21\u578b\u544a\u522b"},{"location":"03%20Model%20Loading/03%20Model/#_6","text":"\u5982\u4f55\u5c06Wavefront(.obj)\u6a21\u578b\u7eb9\u7406\u52a0\u8f7d\u5230OpenGL :\u7531Matthew Early\u5236\u4f5c\u7684\u5982\u4f55\u5728Blender\u4e2d\u8bbe\u7f6e3D\u6a21\u578b\u7684\u89c6\u9891\u6559\u7a0b\uff0c\u8ba9\u5b83\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u5f53\u524d\u7684\u6a21\u578b\u52a0\u8f7d\u5668\u4e0b\u6b63\u786e\u5de5\u4f5c(\u56e0\u4e3a\u6211\u4eec\u9009\u62e9\u7684\u7eb9\u7406\u8bbe\u7f6e\u5e76\u4e0d\u603b\u80fd\u505a\u5230\u5f00\u7bb1\u5373\u7528)\u3002","title":"\u5ef6\u4f38\u9605\u8bfb"},{"location":"04%20Advanced%20OpenGL/01%20Depth%20testing/","text":"\u6df1\u5ea6\u6d4b\u8bd5 \u539f\u6587 Depth testing \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u5728 \u5750\u6807\u7cfb\u7edf \u5c0f\u8282\u4e2d\uff0c\u6211\u4eec\u6e32\u67d3\u4e86\u4e00\u4e2a3D\u7bb1\u5b50\uff0c\u5e76\u4e14\u8fd0\u7528\u4e86 \u6df1\u5ea6\u7f13\u51b2 (Depth Buffer)\u6765\u9632\u6b62\u88ab\u963b\u6321\u7684\u9762\u6e32\u67d3\u5230\u5176\u5b83\u9762\u7684\u524d\u9762\u3002\u5728\u8fd9\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u66f4\u52a0\u6df1\u5165\u5730\u8ba8\u8bba\u8fd9\u4e9b\u50a8\u5b58\u5728\u6df1\u5ea6\u7f13\u51b2\uff08\u6216z\u7f13\u51b2(z-buffer)\uff09\u4e2d\u7684 \u6df1\u5ea6\u503c (Depth Value)\uff0c\u4ee5\u53ca\u5b83\u4eec\u662f\u5982\u4f55\u786e\u5b9a\u4e00\u4e2a\u7247\u6bb5\u662f\u5904\u4e8e\u5176\u5b83\u7247\u6bb5\u540e\u65b9\u7684\u3002 \u6df1\u5ea6\u7f13\u51b2\u5c31\u50cf \u989c\u8272\u7f13\u51b2 (Color Buffer)\uff08\u50a8\u5b58\u6240\u6709\u7684\u7247\u6bb5\u989c\u8272\uff1a\u89c6\u89c9\u8f93\u51fa\uff09\u4e00\u6837\uff0c\u5728\u6bcf\u4e2a\u7247\u6bb5\u4e2d\u50a8\u5b58\u4e86\u4fe1\u606f\uff0c\u5e76\u4e14\uff08\u901a\u5e38\uff09\u548c\u989c\u8272\u7f13\u51b2\u6709\u7740\u4e00\u6837\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002\u6df1\u5ea6\u7f13\u51b2\u662f\u7531\u7a97\u53e3\u7cfb\u7edf\u81ea\u52a8\u521b\u5efa\u7684\uff0c\u5b83\u4f1a\u4ee516\u300124\u621632\u4f4dfloat\u7684\u5f62\u5f0f\u50a8\u5b58\u5b83\u7684\u6df1\u5ea6\u503c\u3002\u5728\u5927\u90e8\u5206\u7684\u7cfb\u7edf\u4e2d\uff0c\u6df1\u5ea6\u7f13\u51b2\u7684\u7cbe\u5ea6\u90fd\u662f24\u4f4d\u7684\u3002 \u5f53\u6df1\u5ea6\u6d4b\u8bd5(Depth Testing)\u88ab\u542f\u7528\u7684\u65f6\u5019\uff0cOpenGL\u4f1a\u5c06\u4e00\u4e2a\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u4e0e\u6df1\u5ea6\u7f13\u51b2\u7684\u5185\u5bb9\u8fdb\u884c\u5bf9\u6bd4\u3002OpenGL\u4f1a\u6267\u884c\u4e00\u4e2a\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u5982\u679c\u8fd9\u4e2a\u6d4b\u8bd5\u901a\u8fc7\u4e86\u7684\u8bdd\uff0c\u6df1\u5ea6\u7f13\u51b2\u5c06\u4f1a\u66f4\u65b0\u4e3a\u65b0\u7684\u6df1\u5ea6\u503c\u3002\u5982\u679c\u6df1\u5ea6\u6d4b\u8bd5\u5931\u8d25\u4e86\uff0c\u7247\u6bb5\u5c06\u4f1a\u88ab\u4e22\u5f03\u3002 \u6df1\u5ea6\u7f13\u51b2\u662f\u5728\u7247\u6bb5\u7740\u8272\u5668\u8fd0\u884c\u4e4b\u540e\uff08\u4ee5\u53ca\u6a21\u677f\u6d4b\u8bd5(Stencil Testing)\u8fd0\u884c\u4e4b\u540e\uff0c\u6211\u4eec\u5c06\u5728 \u4e0b\u4e00\u8282 \u4e2d\u8ba8\u8bba\uff09\u5728\u5c4f\u5e55\u7a7a\u95f4\u4e2d\u8fd0\u884c\u7684\u3002\u5c4f\u5e55\u7a7a\u95f4\u5750\u6807\u4e0e\u901a\u8fc7OpenGL\u7684 glViewport \u6240\u5b9a\u4e49\u7684\u89c6\u53e3\u5bc6\u5207\u76f8\u5173\uff0c\u5e76\u4e14\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528GLSL\u5185\u5efa\u53d8\u91cf gl_FragCoord \u4ece\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u76f4\u63a5\u8bbf\u95ee\u3002 gl_FragCoord \u7684x\u548cy\u5206\u91cf\u4ee3\u8868\u4e86\u7247\u6bb5\u7684\u5c4f\u5e55\u7a7a\u95f4\u5750\u6807\uff08\u5176\u4e2d(0, 0)\u4f4d\u4e8e\u5de6\u4e0b\u89d2\uff09\u3002 gl_FragCoord \u4e2d\u4e5f\u5305\u542b\u4e86\u4e00\u4e2az\u5206\u91cf\uff0c\u5b83\u5305\u542b\u4e86\u7247\u6bb5\u771f\u6b63\u7684\u6df1\u5ea6\u503c\u3002z\u503c\u5c31\u662f\u9700\u8981\u4e0e\u6df1\u5ea6\u7f13\u51b2\u5185\u5bb9\u6240\u5bf9\u6bd4\u7684\u90a3\u4e2a\u503c\u3002 Important \u73b0\u5728\u5927\u90e8\u5206\u7684GPU\u90fd\u63d0\u4f9b\u4e00\u4e2a\u53eb\u505a\u63d0\u524d\u6df1\u5ea6\u6d4b\u8bd5(Early Depth Testing)\u7684\u786c\u4ef6\u7279\u6027\u3002\u63d0\u524d\u6df1\u5ea6\u6d4b\u8bd5\u5141\u8bb8\u6df1\u5ea6\u6d4b\u8bd5\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e4b\u524d\u8fd0\u884c\u3002\u53ea\u8981\u6211\u4eec\u6e05\u695a\u4e00\u4e2a\u7247\u6bb5\u6c38\u8fdc\u4e0d\u4f1a\u662f\u53ef\u89c1\u7684\uff08\u5b83\u5728\u5176\u4ed6\u7269\u4f53\u4e4b\u540e\uff09\uff0c\u6211\u4eec\u5c31\u80fd\u63d0\u524d\u4e22\u5f03\u8fd9\u4e2a\u7247\u6bb5\u3002 \u7247\u6bb5\u7740\u8272\u5668\u901a\u5e38\u5f00\u9500\u90fd\u662f\u5f88\u5927\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u5c3d\u53ef\u80fd\u907f\u514d\u8fd0\u884c\u5b83\u4eec\u3002\u5f53\u4f7f\u7528\u63d0\u524d\u6df1\u5ea6\u6d4b\u8bd5\u65f6\uff0c\u7247\u6bb5\u7740\u8272\u5668\u7684\u4e00\u4e2a\u9650\u5236\u662f\u4f60\u4e0d\u80fd\u5199\u5165\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u3002\u5982\u679c\u4e00\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u5bf9\u5b83\u7684\u6df1\u5ea6\u503c\u8fdb\u884c\u4e86\u5199\u5165\uff0c\u63d0\u524d\u6df1\u5ea6\u6d4b\u8bd5\u662f\u4e0d\u53ef\u80fd\u7684\u3002OpenGL\u4e0d\u80fd\u63d0\u524d\u77e5\u9053\u6df1\u5ea6\u503c\u3002 \u6df1\u5ea6\u6d4b\u8bd5\u9ed8\u8ba4\u662f\u7981\u7528\u7684\uff0c\u6240\u4ee5\u5982\u679c\u8981\u542f\u7528\u6df1\u5ea6\u6d4b\u8bd5\u7684\u8bdd\uff0c\u6211\u4eec\u9700\u8981\u7528 GL_DEPTH_TEST \u9009\u9879\u6765\u542f\u7528\u5b83\uff1a glEnable(GL_DEPTH_TEST); \u5f53\u5b83\u542f\u7528\u7684\u65f6\u5019\uff0c\u5982\u679c\u4e00\u4e2a\u7247\u6bb5\u901a\u8fc7\u4e86\u6df1\u5ea6\u6d4b\u8bd5\u7684\u8bdd\uff0cOpenGL\u4f1a\u5728\u6df1\u5ea6\u7f13\u51b2\u4e2d\u50a8\u5b58\u8be5\u7247\u6bb5\u7684z\u503c\uff1b\u5982\u679c\u6ca1\u6709\u901a\u8fc7\u6df1\u5ea6\u7f13\u51b2\uff0c\u5219\u4f1a\u4e22\u5f03\u8be5\u7247\u6bb5\u3002\u5982\u679c\u4f60\u542f\u7528\u4e86\u6df1\u5ea6\u7f13\u51b2\uff0c\u4f60\u8fd8\u5e94\u8be5\u5728\u6bcf\u4e2a\u6e32\u67d3\u8fed\u4ee3\u4e4b\u524d\u4f7f\u7528 GL_DEPTH_BUFFER_BIT \u6765\u6e05\u9664\u6df1\u5ea6\u7f13\u51b2\uff0c\u5426\u5219\u4f60\u4f1a\u4ecd\u5728\u4f7f\u7528\u4e0a\u4e00\u6b21\u6e32\u67d3\u8fed\u4ee3\u4e2d\u7684\u5199\u5165\u7684\u6df1\u5ea6\u503c\uff1a glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); \u53ef\u4ee5\u60f3\u8c61\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4f60\u4f1a\u9700\u8981\u5bf9\u6240\u6709\u7247\u6bb5\u90fd\u6267\u884c\u6df1\u5ea6\u6d4b\u8bd5\u5e76\u4e22\u5f03\u76f8\u5e94\u7684\u7247\u6bb5\uff0c\u4f46 \u4e0d \u5e0c\u671b\u66f4\u65b0\u6df1\u5ea6\u7f13\u51b2\u3002\u57fa\u672c\u4e0a\u6765\u8bf4\uff0c\u4f60\u5728\u4f7f\u7528\u4e00\u4e2a \u53ea\u8bfb\u7684 (Read-only)\u6df1\u5ea6\u7f13\u51b2\u3002OpenGL\u5141\u8bb8\u6211\u4eec\u7981\u7528\u6df1\u5ea6\u7f13\u51b2\u7684\u5199\u5165\uff0c\u53ea\u9700\u8981\u8bbe\u7f6e\u5b83\u7684\u6df1\u5ea6\u63a9\u7801(Depth Mask)\u8bbe\u7f6e\u4e3a GL_FALSE \u5c31\u53ef\u4ee5\u4e86\uff1a glDepthMask(GL_FALSE); \u6ce8\u610f\u8fd9\u53ea\u5728\u6df1\u5ea6\u6d4b\u8bd5\u88ab\u542f\u7528\u7684\u65f6\u5019\u624d\u6709\u6548\u679c\u3002 \u6df1\u5ea6\u6d4b\u8bd5\u51fd\u6570 OpenGL\u5141\u8bb8\u6211\u4eec\u4fee\u6539\u6df1\u5ea6\u6d4b\u8bd5\u4e2d\u4f7f\u7528\u7684\u6bd4\u8f83\u8fd0\u7b97\u7b26\u3002\u8fd9\u5141\u8bb8\u6211\u4eec\u6765\u63a7\u5236OpenGL\u4ec0\u4e48\u65f6\u5019\u8be5\u901a\u8fc7\u6216\u4e22\u5f03\u4e00\u4e2a\u7247\u6bb5\uff0c\u4ec0\u4e48\u65f6\u5019\u53bb\u66f4\u65b0\u6df1\u5ea6\u7f13\u51b2\u3002\u6211\u4eec\u53ef\u4ee5\u8c03\u7528 glDepthFunc \u51fd\u6570\u6765\u8bbe\u7f6e\u6bd4\u8f83\u8fd0\u7b97\u7b26\uff08\u6216\u8005\u8bf4\u6df1\u5ea6\u51fd\u6570(Depth Function)\uff09\uff1a glDepthFunc(GL_LESS); \u8fd9\u4e2a\u51fd\u6570\u63a5\u53d7\u4e0b\u9762\u8868\u683c\u4e2d\u7684\u6bd4\u8f83\u8fd0\u7b97\u7b26\uff1a \u51fd\u6570 \u63cf\u8ff0 GL_ALWAYS \u6c38\u8fdc\u901a\u8fc7\u6df1\u5ea6\u6d4b\u8bd5 GL_NEVER \u6c38\u8fdc\u4e0d\u901a\u8fc7\u6df1\u5ea6\u6d4b\u8bd5 GL_LESS \u5728\u7247\u6bb5\u6df1\u5ea6\u503c\u5c0f\u4e8e\u7f13\u51b2\u7684\u6df1\u5ea6\u503c\u65f6\u901a\u8fc7\u6d4b\u8bd5 GL_EQUAL \u5728\u7247\u6bb5\u6df1\u5ea6\u503c\u7b49\u4e8e\u7f13\u51b2\u533a\u7684\u6df1\u5ea6\u503c\u65f6\u901a\u8fc7\u6d4b\u8bd5 GL_LEQUAL \u5728\u7247\u6bb5\u6df1\u5ea6\u503c\u5c0f\u4e8e\u7b49\u4e8e\u7f13\u51b2\u533a\u7684\u6df1\u5ea6\u503c\u65f6\u901a\u8fc7\u6d4b\u8bd5 GL_GREATER \u5728\u7247\u6bb5\u6df1\u5ea6\u503c\u5927\u4e8e\u7f13\u51b2\u533a\u7684\u6df1\u5ea6\u503c\u65f6\u901a\u8fc7\u6d4b\u8bd5 GL_NOTEQUAL \u5728\u7247\u6bb5\u6df1\u5ea6\u503c\u4e0d\u7b49\u4e8e\u7f13\u51b2\u533a\u7684\u6df1\u5ea6\u503c\u65f6\u901a\u8fc7\u6d4b\u8bd5 GL_GEQUAL \u5728\u7247\u6bb5\u6df1\u5ea6\u503c\u5927\u4e8e\u7b49\u4e8e\u7f13\u51b2\u533a\u7684\u6df1\u5ea6\u503c\u65f6\u901a\u8fc7\u6d4b\u8bd5 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u7684\u6df1\u5ea6\u51fd\u6570\u662f GL_LESS \uff0c\u5b83\u5c06\u4f1a\u4e22\u5f03\u6df1\u5ea6\u503c\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u6df1\u5ea6\u7f13\u51b2\u503c\u7684\u6240\u6709\u7247\u6bb5\u3002 \u8ba9\u6211\u4eec\u770b\u770b\u6539\u53d8\u6df1\u5ea6\u51fd\u6570\u4f1a\u5bf9\u89c6\u89c9\u8f93\u51fa\u6709\u4ec0\u4e48\u5f71\u54cd\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u65b0\u7684\u4ee3\u7801\u914d\u7f6e\uff0c\u5b83\u4f1a\u663e\u793a\u4e00\u4e2a\u6ca1\u6709\u5149\u7167\u7684\u57fa\u672c\u573a\u666f\uff0c\u91cc\u9762\u6709\u4e24\u4e2a\u6709\u7eb9\u7406\u7684\u7acb\u65b9\u4f53\uff0c\u653e\u7f6e\u5728\u4e00\u4e2a\u6709\u7eb9\u7406\u7684\u5730\u677f\u4e0a\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u6e90\u4ee3\u7801\u3002 \u5728\u6e90\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5c06\u6df1\u5ea6\u51fd\u6570\u6539\u4e3a GL_ALWAYS \uff1a glEnable(GL_DEPTH_TEST); glDepthFunc(GL_ALWAYS); \u8fd9\u5c06\u4f1a\u6a21\u62df\u6211\u4eec\u6ca1\u6709\u542f\u7528\u6df1\u5ea6\u6d4b\u8bd5\u65f6\u6240\u5f97\u5230\u7684\u7ed3\u679c\u3002\u6df1\u5ea6\u6d4b\u8bd5\u5c06\u4f1a\u6c38\u8fdc\u901a\u8fc7\uff0c\u6240\u4ee5\u6700\u540e\u7ed8\u5236\u7684\u7247\u6bb5\u5c06\u4f1a\u603b\u662f\u4f1a\u6e32\u67d3\u5728\u4e4b\u524d\u7ed8\u5236\u7247\u6bb5\u7684\u4e0a\u9762\uff0c\u5373\u4f7f\u4e4b\u524d\u7ed8\u5236\u7684\u7247\u6bb5\u672c\u5c31\u5e94\u8be5\u6e32\u67d3\u5728\u6700\u524d\u9762\u3002\u56e0\u4e3a\u6211\u4eec\u662f\u6700\u540e\u6e32\u67d3\u5730\u677f\u7684\uff0c\u5b83\u4f1a\u8986\u76d6\u6240\u6709\u7684\u7bb1\u5b50\u7247\u6bb5\uff1a \u5c06\u5b83\u91cd\u65b0\u8bbe\u7f6e\u4e3a GL_LESS \uff0c\u8fd9\u4f1a\u5c06\u573a\u666f\u8fd8\u539f\u4e3a\u539f\u6709\u7684\u6837\u5b50\uff1a \u6df1\u5ea6\u503c\u7cbe\u5ea6 \u6df1\u5ea6\u7f13\u51b2\u5305\u542b\u4e86\u4e00\u4e2a\u4ecb\u4e8e0.0\u548c1.0\u4e4b\u95f4\u7684\u6df1\u5ea6\u503c\uff0c\u5b83\u5c06\u4f1a\u4e0e\u89c2\u5bdf\u8005\u89c6\u89d2\u6240\u770b\u89c1\u7684\u573a\u666f\u4e2d\u6240\u6709\u7269\u4f53\u7684z\u503c\u8fdb\u884c\u6bd4\u8f83\u3002\u89c2\u5bdf\u7a7a\u95f4\u7684z\u503c\u53ef\u80fd\u662f\u6295\u5f71\u5e73\u622a\u5934\u4f53\u7684 \u8fd1\u5e73\u9762 (Near)\u548c \u8fdc\u5e73\u9762 (Far)\u4e4b\u95f4\u7684\u4efb\u4f55\u503c\u3002\u6211\u4eec\u9700\u8981\u4e00\u79cd\u65b9\u5f0f\u6765\u5c06\u8fd9\u4e9b\u89c2\u5bdf\u7a7a\u95f4\u7684z\u503c\u53d8\u6362\u5230[0, 1]\u8303\u56f4\u4e4b\u95f4\uff0c\u5176\u4e2d\u7684\u4e00\u79cd\u65b9\u5f0f\u5c31\u662f\u5c06\u5b83\u4eec\u7ebf\u6027\u53d8\u6362\u5230[0, 1]\u8303\u56f4\u4e4b\u95f4\u3002\u4e0b\u9762\u8fd9\u4e2a\uff08\u7ebf\u6027\uff09\u65b9\u7a0b\u5c06z\u503c\u53d8\u6362\u5230\u4e860.0\u52301.0\u4e4b\u95f4\u7684\u6df1\u5ea6\u503c\uff1a \\begin{equation} F_{depth} = \\frac{z - near}{far - near} \\end{equation} \u8fd9\u91cc\u7684 near \u548c far \u503c\u662f\u6211\u4eec\u4e4b\u524d\u63d0\u4f9b\u7ed9\u6295\u5f71\u77e9\u9635\u8bbe\u7f6e\u53ef\u89c6\u5e73\u622a\u5934\u4f53\u7684\uff08\u89c1 \u5750\u6807\u7cfb\u7edf \uff09\u90a3\u4e2a near \u548c far \u503c\u3002\u8fd9\u4e2a\u65b9\u7a0b\u9700\u8981\u5e73\u622a\u5934\u4f53\u4e2d\u7684\u4e00\u4e2az\u503c\uff0c\u5e76\u5c06\u5b83\u53d8\u6362\u5230\u4e86[0, 1]\u7684\u8303\u56f4\u4e2d\u3002z\u503c\u548c\u5bf9\u5e94\u7684\u6df1\u5ea6\u503c\u4e4b\u95f4\u7684\u5173\u7cfb\u53ef\u4ee5\u5728\u4e0b\u56fe\u4e2d\u770b\u5230\uff1a Important \u6ce8\u610f\u6240\u6709\u7684\u65b9\u7a0b\u90fd\u4f1a\u5c06\u975e\u5e38\u8fd1\u7684\u7269\u4f53\u7684\u6df1\u5ea6\u503c\u8bbe\u7f6e\u4e3a\u63a5\u8fd10.0\u7684\u503c\uff0c\u800c\u5f53\u7269\u4f53\u975e\u5e38\u63a5\u8fd1\u8fdc\u5e73\u9762\u7684\u65f6\u5019\uff0c\u5b83\u7684\u6df1\u5ea6\u503c\u4f1a\u975e\u5e38\u63a5\u8fd11.0\u3002 \u7136\u800c\uff0c\u5728\u5b9e\u8df5\u4e2d\u662f\u51e0\u4e4e\u6c38\u8fdc\u4e0d\u4f1a\u4f7f\u7528\u8fd9\u6837\u7684 \u7ebf\u6027\u6df1\u5ea6\u7f13\u51b2 (Linear Depth Buffer)\u7684\u3002\u8981\u60f3\u6709\u6b63\u786e\u7684\u6295\u5f71\u6027\u8d28\uff0c\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u975e\u7ebf\u6027\u7684\u6df1\u5ea6\u65b9\u7a0b\uff0c\u5b83\u662f\u4e0e 1/z \u6210\u6b63\u6bd4\u7684\u3002\u5b83\u505a\u7684\u5c31\u662f\u5728z\u503c\u5f88\u5c0f\u7684\u65f6\u5019\u63d0\u4f9b\u975e\u5e38\u9ad8\u7684\u7cbe\u5ea6\uff0c\u800c\u5728z\u503c\u5f88\u8fdc\u7684\u65f6\u5019\u63d0\u4f9b\u66f4\u5c11\u7684\u7cbe\u5ea6\u3002\u82b1\u65f6\u95f4\u60f3\u60f3\u8fd9\u4e2a\uff1a\u6211\u4eec\u771f\u7684\u9700\u8981\u5bf91000\u5355\u4f4d\u8fdc\u7684\u6df1\u5ea6\u503c\u548c\u53ea\u67091\u5355\u4f4d\u8fdc\u7684\u5145\u6ee1\u7ec6\u8282\u7684\u7269\u4f53\u4f7f\u7528\u76f8\u540c\u7684\u7cbe\u5ea6\u5417\uff1f\u7ebf\u6027\u65b9\u7a0b\u5e76\u4e0d\u4f1a\u8003\u8651\u8fd9\u4e00\u70b9\u3002 \u7531\u4e8e\u975e\u7ebf\u6027\u65b9\u7a0b\u4e0e 1/z \u6210\u6b63\u6bd4\uff0c\u57281.0\u548c2.0\u4e4b\u95f4\u7684z\u503c\u5c06\u4f1a\u53d8\u6362\u81f31.0\u52300.5\u4e4b\u95f4\u7684\u6df1\u5ea6\u503c\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2afloat\u63d0\u4f9b\u7ed9\u6211\u4eec\u7684\u4e00\u534a\u7cbe\u5ea6\u4e86\uff0c\u8fd9\u5728z\u503c\u5f88\u5c0f\u7684\u60c5\u51b5\u4e0b\u63d0\u4f9b\u4e86\u975e\u5e38\u5927\u7684\u7cbe\u5ea6\u3002\u572850.0\u548c100.0\u4e4b\u95f4\u7684z\u503c\u5c06\u4f1a\u53ea\u53602%\u7684float\u7cbe\u5ea6\uff0c\u8fd9\u6b63\u662f\u6211\u4eec\u6240\u9700\u8981\u7684\u3002\u8fd9\u6837\u7684\u4e00\u4e2a\u8003\u8651\u4e86\u8fdc\u8fd1\u8ddd\u79bb\u7684\u65b9\u7a0b\u662f\u8fd9\u6837\u7684\uff1a \\begin{equation} F_{depth} = \\frac{1/z - 1/near}{1/far - 1/near} \\end{equation} \u5982\u679c\u4f60\u4e0d\u77e5\u9053\u8fd9\u4e2a\u65b9\u7a0b\u662f\u600e\u4e48\u56de\u4e8b\u4e5f\u4e0d\u7528\u62c5\u5fc3\u3002\u91cd\u8981\u7684\u662f\u8981\u8bb0\u4f4f\u6df1\u5ea6\u7f13\u51b2\u4e2d\u7684\u503c\u5728\u5c4f\u5e55\u7a7a\u95f4\u4e2d\u4e0d\u662f\u7ebf\u6027\u7684\uff08\u5728\u900f\u89c6\u77e9\u9635\u5e94\u7528\u4e4b\u524d\u5728\u89c2\u5bdf\u7a7a\u95f4\u4e2d\u662f\u7ebf\u6027\u7684\uff09\u3002\u6df1\u5ea6\u7f13\u51b2\u4e2d0.5\u7684\u503c\u5e76\u4e0d\u4ee3\u8868\u7740\u7269\u4f53\u7684z\u503c\u662f\u4f4d\u4e8e\u5e73\u622a\u5934\u4f53\u7684\u4e2d\u95f4\u4e86\uff0c\u8fd9\u4e2a\u9876\u70b9\u7684z\u503c\u5b9e\u9645\u4e0a\u975e\u5e38\u63a5\u8fd1\u8fd1\u5e73\u9762\uff01\u4f60\u53ef\u4ee5\u5728\u4e0b\u56fe\u4e2d\u770b\u5230z\u503c\u548c\u6700\u7ec8\u7684\u6df1\u5ea6\u7f13\u51b2\u503c\u4e4b\u95f4\u7684\u975e\u7ebf\u6027\u5173\u7cfb\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u6df1\u5ea6\u503c\u5f88\u5927\u4e00\u90e8\u5206\u662f\u7531\u5f88\u5c0f\u7684z\u503c\u6240\u51b3\u5b9a\u7684\uff0c\u8fd9\u7ed9\u4e86\u8fd1\u5904\u7684\u7269\u4f53\u5f88\u5927\u7684\u6df1\u5ea6\u7cbe\u5ea6\u3002\u8fd9\u4e2a\uff08\u4ece\u89c2\u5bdf\u8005\u7684\u89c6\u89d2\uff09\u53d8\u6362z\u503c\u7684\u65b9\u7a0b\u662f\u5d4c\u5165\u5728\u6295\u5f71\u77e9\u9635\u4e2d\u7684\uff0c\u6240\u4ee5\u5f53\u6211\u4eec\u60f3\u5c06\u4e00\u4e2a\u9876\u70b9\u5750\u6807\u4ece\u89c2\u5bdf\u7a7a\u95f4\u81f3\u88c1\u526a\u7a7a\u95f4\u7684\u65f6\u5019\u8fd9\u4e2a\u975e\u7ebf\u6027\u65b9\u7a0b\u5c31\u88ab\u5e94\u7528\u4e86\u3002\u5982\u679c\u4f60\u60f3\u6df1\u5ea6\u4e86\u89e3\u6295\u5f71\u77e9\u9635\u7a76\u7adf\u505a\u4e86\u4ec0\u4e48\uff0c\u6211\u5efa\u8bae\u9605\u8bfb \u8fd9\u7bc7\u6587\u7ae0 \u3002 \u5982\u679c\u6211\u4eec\u60f3\u8981\u53ef\u89c6\u5316\u6df1\u5ea6\u7f13\u51b2\u7684\u8bdd\uff0c\u975e\u7ebf\u6027\u65b9\u7a0b\u7684\u6548\u679c\u5f88\u5feb\u5c31\u4f1a\u53d8\u5f97\u5f88\u6e05\u695a\u3002 \u6df1\u5ea6\u7f13\u51b2\u7684\u53ef\u89c6\u5316 \u6211\u4eec\u77e5\u9053\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u5185\u5efa gl_FragCoord \u5411\u91cf\u7684z\u503c\u5305\u542b\u4e86\u90a3\u4e2a\u7279\u5b9a\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u3002\u5982\u679c\u6211\u4eec\u5c06\u8fd9\u4e2a\u6df1\u5ea6\u503c\u8f93\u51fa\u4e3a\u989c\u8272\uff0c\u6211\u4eec\u53ef\u4ee5\u663e\u793a\u573a\u666f\u4e2d\u6240\u6709\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u3002\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u8fd4\u56de\u4e00\u4e2a\u989c\u8272\u5411\u91cf\u6765\u5b8c\u6210\u8fd9\u4e00\u5de5\u4f5c\uff1a void main() { FragColor = vec4(vec3(gl_FragCoord.z), 1.0); } \u5982\u679c\u4f60\u518d\u6b21\u8fd0\u884c\u7a0b\u5e8f\u7684\u8bdd\uff0c\u4f60\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u6240\u6709\u4e1c\u897f\u90fd\u662f\u767d\u8272\u7684\uff0c\u770b\u8d77\u6765\u5c31\u60f3\u6211\u4eec\u6240\u6709\u7684\u6df1\u5ea6\u503c\u90fd\u662f\u6700\u5927\u76841.0\u3002\u6240\u4ee5\u4e3a\u4ec0\u4e48\u6ca1\u6709\u9760\u8fd10.0\uff08\u5373\u53d8\u6697\uff09\u7684\u6df1\u5ea6\u503c\u5462\uff1f \u4f60\u53ef\u80fd\u8fd8\u8bb0\u5f97\u5728\u4e0a\u4e00\u90e8\u5206\u4e2d\u8bf4\u5230\uff0c\u5c4f\u5e55\u7a7a\u95f4\u4e2d\u7684\u6df1\u5ea6\u503c\u662f\u975e\u7ebf\u6027\u7684\uff0c\u5373\u5b83\u5728z\u503c\u5f88\u5c0f\u7684\u65f6\u5019\u6709\u5f88\u9ad8\u7684\u7cbe\u5ea6\uff0c\u800cz\u503c\u5f88\u5927\u7684\u65f6\u5019\u6709\u8f83\u4f4e\u7684\u7cbe\u5ea6\u3002\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u4f1a\u968f\u7740\u8ddd\u79bb\u8fc5\u901f\u589e\u52a0\uff0c\u6240\u4ee5\u51e0\u4e4e\u6240\u6709\u7684\u9876\u70b9\u7684\u6df1\u5ea6\u503c\u90fd\u662f\u63a5\u8fd1\u4e8e1.0\u7684\u3002\u5982\u679c\u6211\u4eec\u5c0f\u5fc3\u5730\u9760\u8fd1\u7269\u4f53\uff0c\u4f60\u53ef\u80fd\u4f1a\u6700\u7ec8\u6ce8\u610f\u5230\u989c\u8272\u4f1a\u6e10\u6e10\u53d8\u6697\uff0c\u663e\u793a\u5b83\u4eec\u7684z\u503c\u5728\u9010\u6e10\u53d8\u5c0f\uff1a \u8fd9\u5f88\u6e05\u695a\u5730\u5c55\u793a\u4e86\u6df1\u5ea6\u503c\u7684\u975e\u7ebf\u6027\u6027\u8d28\u3002\u8fd1\u5904\u7684\u7269\u4f53\u6bd4\u8d77\u8fdc\u5904\u7684\u7269\u4f53\u5bf9\u6df1\u5ea6\u503c\u6709\u7740\u66f4\u5927\u7684\u5f71\u54cd\u3002\u53ea\u9700\u8981\u79fb\u52a8\u51e0\u5398\u7c73\u5c31\u80fd\u8ba9\u989c\u8272\u4ece\u6697\u5b8c\u5168\u53d8\u767d\u3002 \u7136\u800c\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8ba9\u7247\u6bb5\u975e\u7ebf\u6027\u7684\u6df1\u5ea6\u503c\u53d8\u6362\u4e3a\u7ebf\u6027\u7684\u3002\u8981\u5b9e\u73b0\u8fd9\u4e2a\uff0c\u6211\u4eec\u9700\u8981\u4ec5\u4ec5\u53cd\u8f6c\u6df1\u5ea6\u503c\u7684\u6295\u5f71\u53d8\u6362\u3002\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u9996\u5148\u5c06\u6df1\u5ea6\u503c\u4ece[0, 1]\u8303\u56f4\u91cd\u65b0\u53d8\u6362\u5230[-1, 1]\u8303\u56f4\u7684\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\uff08\u88c1\u526a\u7a7a\u95f4\uff09\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u50cf\u6295\u5f71\u77e9\u9635\u90a3\u6837\u53cd\u8f6c\u8fd9\u4e2a\u975e\u7ebf\u6027\u65b9\u7a0b\uff08\u65b9\u7a0b2\uff09\uff0c\u5e76\u5c06\u8fd9\u4e2a\u53cd\u8f6c\u7684\u65b9\u7a0b\u5e94\u7528\u5230\u6700\u7ec8\u7684\u6df1\u5ea6\u503c\u4e0a\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u5c31\u662f\u4e00\u4e2a\u7ebf\u6027\u7684\u6df1\u5ea6\u503c\u4e86\u3002\u542c\u8d77\u6765\u662f\u53ef\u884c\u7684\uff0c\u5bf9\u5427\uff1f \u9996\u5148\u6211\u4eec\u5c06\u6df1\u5ea6\u503c\u53d8\u6362\u4e3aNDC\uff0c\u4e0d\u662f\u975e\u5e38\u56f0\u96be\uff1a float ndc = depth * 2.0 - 1.0; \u63a5\u4e0b\u6765\u4f7f\u7528\u83b7\u53d6\u5230\u7684NDC\u503c\uff0c\u5e94\u7528\u9006\u53d8\u6362\u6765\u83b7\u53d6\u7ebf\u6027\u7684\u6df1\u5ea6\u503c\uff1a float linearDepth = (2.0 * near * far) / (far + near - ndc * (far - near)); \u8fd9\u4e2a\u65b9\u7a0b\u662f\u7528\u6295\u5f71\u77e9\u9635\u63a8\u5bfc\u5f97\u51fa\u7684\uff0c\u5b83\u4f7f\u7528\u4e86\u65b9\u7a0b2\u6765\u975e\u7ebf\u6027\u5316\u6df1\u5ea6\u503c\uff0c\u8fd4\u56de\u4e00\u4e2a near \u4e0e far \u4e4b\u95f4\u7684\u6df1\u5ea6\u503c\u3002\u8fd9\u7bc7\u6ce8\u91cd\u6570\u5b66\u7684 \u6587\u7ae0 \u4e3a\u611f\u5174\u8da3\u7684\u8bfb\u8005\u8be6\u7ec6\u89e3\u91ca\u4e86\u6295\u5f71\u77e9\u9635\uff0c\u5b83\u4e5f\u5c55\u793a\u4e86\u8fd9\u4e9b\u65b9\u7a0b\u662f\u600e\u4e48\u6765\u7684\u3002 \u5c06\u5c4f\u5e55\u7a7a\u95f4\u4e2d\u975e\u7ebf\u6027\u7684\u6df1\u5ea6\u503c\u53d8\u6362\u81f3\u7ebf\u6027\u6df1\u5ea6\u503c\u7684\u5b8c\u6574\u7247\u6bb5\u7740\u8272\u5668\u5982\u4e0b\uff1a #version 330 core out vec4 FragColor; float near = 0.1; float far = 100.0; float LinearizeDepth(float depth) { float z = depth * 2.0 - 1.0; // \u8f6c\u6362\u4e3a NDC return (2.0 * near * far) / (far + near - z * (far - near)); } void main() { float depth = LinearizeDepth(gl_FragCoord.z) / far; // \u4e3a\u4e86\u6f14\u793a\u9664\u4ee5 far FragColor = vec4(vec3(depth), 1.0); } \u7531\u4e8e\u7ebf\u6027\u5316\u7684\u6df1\u5ea6\u503c\u5904\u4e8e near \u4e0e far \u4e4b\u95f4\uff0c\u5b83\u7684\u5927\u90e8\u5206\u503c\u90fd\u4f1a\u5927\u4e8e1.0\u5e76\u663e\u793a\u4e3a\u5b8c\u5168\u7684\u767d\u8272\u3002\u901a\u8fc7\u5728 main \u51fd\u6570\u4e2d\u5c06\u7ebf\u6027\u6df1\u5ea6\u503c\u9664\u4ee5 far \uff0c\u6211\u4eec\u8fd1\u4f3c\u5730\u5c06\u7ebf\u6027\u6df1\u5ea6\u503c\u8f6c\u5316\u5230[0, 1]\u7684\u8303\u56f4\u4e4b\u95f4\u3002\u8fd9\u6837\u5b50\u6211\u4eec\u5c31\u80fd\u9010\u6e10\u770b\u5230\u4e00\u4e2a\u7247\u6bb5\u8d8a\u63a5\u8fd1\u6295\u5f71\u5e73\u622a\u5934\u4f53\u7684\u8fdc\u5e73\u9762\uff0c\u5b83\u5c31\u4f1a\u53d8\u5f97\u8d8a\u4eae\uff0c\u66f4\u9002\u7528\u4e8e\u5c55\u793a\u76ee\u7684\u3002 \u5982\u679c\u6211\u4eec\u73b0\u5728\u8fd0\u884c\u7a0b\u5e8f\uff0c\u6211\u4eec\u5c31\u80fd\u770b\u89c1\u6df1\u5ea6\u503c\u968f\u7740\u8ddd\u79bb\u589e\u5927\u662f\u7ebf\u6027\u7684\u4e86\u3002\u5c1d\u8bd5\u5728\u573a\u666f\u4e2d\u79fb\u52a8\uff0c\u770b\u770b\u6df1\u5ea6\u503c\u662f\u600e\u6837\u4ee5\u7ebf\u6027\u53d8\u5316\u7684\u3002 \u989c\u8272\u5927\u90e8\u5206\u90fd\u662f\u9ed1\u8272\uff0c\u56e0\u4e3a\u6df1\u5ea6\u503c\u7684\u8303\u56f4\u662f0.1\u7684 \u8fd1 \u5e73\u9762\u5230100\u7684 \u8fdc \u5e73\u9762\uff0c\u5b83\u79bb\u6211\u4eec\u8fd8\u662f\u975e\u5e38\u8fdc\u7684\u3002\u7ed3\u679c\u5c31\u662f\uff0c\u6211\u4eec\u76f8\u5bf9\u9760\u8fd1\u8fd1\u5e73\u9762\uff0c\u6240\u4ee5\u4f1a\u5f97\u5230\u66f4\u4f4e\u7684\uff08\u66f4\u6697\u7684\uff09\u6df1\u5ea6\u503c\u3002 \u6df1\u5ea6\u51b2\u7a81 \u4e00\u4e2a\u5f88\u5e38\u89c1\u7684\u89c6\u89c9\u9519\u8bef\u4f1a\u5728\u4e24\u4e2a\u5e73\u9762\u6216\u8005\u4e09\u89d2\u5f62\u975e\u5e38\u7d27\u5bc6\u5730\u5e73\u884c\u6392\u5217\u5728\u4e00\u8d77\u65f6\u4f1a\u53d1\u751f\uff0c\u6df1\u5ea6\u7f13\u51b2\u6ca1\u6709\u8db3\u591f\u7684\u7cbe\u5ea6\u6765\u51b3\u5b9a\u4e24\u4e2a\u5f62\u72b6\u54ea\u4e2a\u5728\u524d\u9762\u3002\u7ed3\u679c\u5c31\u662f\u8fd9\u4e24\u4e2a\u5f62\u72b6\u4e0d\u65ad\u5730\u5728\u5207\u6362\u524d\u540e\u987a\u5e8f\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u5f88\u5947\u602a\u7684\u82b1\u7eb9\u3002\u8fd9\u4e2a\u73b0\u8c61\u53eb\u505a \u6df1\u5ea6\u51b2\u7a81 (Z-fighting)\uff0c\u56e0\u4e3a\u5b83\u770b\u8d77\u6765\u50cf\u662f\u8fd9\u4e24\u4e2a\u5f62\u72b6\u5728\u4e89\u593a(Fight)\u8c01\u8be5\u5904\u4e8e\u9876\u7aef\u3002 \u5728\u6211\u4eec\u4e00\u76f4\u4f7f\u7528\u7684\u573a\u666f\u4e2d\uff0c\u6709\u51e0\u4e2a\u5730\u65b9\u7684\u6df1\u5ea6\u51b2\u7a81\u8fd8\u662f\u975e\u5e38\u660e\u663e\u7684\u3002\u7bb1\u5b50\u88ab\u653e\u7f6e\u5728\u5730\u677f\u7684\u540c\u4e00\u9ad8\u5ea6\u4e0a\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u7bb1\u5b50\u7684\u5e95\u9762\u548c\u5730\u677f\u662f\u5171\u9762\u7684(Coplanar)\u3002\u8fd9\u4e24\u4e2a\u9762\u7684\u6df1\u5ea6\u503c\u90fd\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u6df1\u5ea6\u6d4b\u8bd5\u6ca1\u6709\u529e\u6cd5\u51b3\u5b9a\u5e94\u8be5\u663e\u793a\u54ea\u4e00\u4e2a\u3002 \u5982\u679c\u4f60\u5c06\u6444\u50cf\u673a\u79fb\u52a8\u5230\u5176\u4e2d\u4e00\u4e2a\u7bb1\u5b50\u7684\u5185\u90e8\uff0c\u4f60\u5c31\u80fd\u6e05\u695a\u5730\u770b\u5230\u8fd9\u4e2a\u6548\u679c\u7684\uff0c\u7bb1\u5b50\u7684\u5e95\u90e8\u4e0d\u65ad\u5730\u5728\u7bb1\u5b50\u5e95\u9762\u4e0e\u5730\u677f\u4e4b\u95f4\u5207\u6362\uff0c\u5f62\u6210\u4e00\u4e2a\u952f\u9f7f\u7684\u82b1\u7eb9\uff1a \u6df1\u5ea6\u51b2\u7a81\u662f\u6df1\u5ea6\u7f13\u51b2\u7684\u4e00\u4e2a\u5e38\u89c1\u95ee\u9898\uff0c\u5f53\u7269\u4f53\u5728\u8fdc\u5904\u65f6\u6548\u679c\u4f1a\u66f4\u660e\u663e\uff08\u56e0\u4e3a\u6df1\u5ea6\u7f13\u51b2\u5728z\u503c\u6bd4\u8f83\u5927\u7684\u65f6\u5019\u6709\u7740\u66f4\u5c0f\u7684\u7cbe\u5ea6\uff09\u3002\u6df1\u5ea6\u51b2\u7a81\u4e0d\u80fd\u591f\u88ab\u5b8c\u5168\u907f\u514d\uff0c\u4f46\u4e00\u822c\u4f1a\u6709\u4e00\u4e9b\u6280\u5de7\u6709\u52a9\u4e8e\u5728\u4f60\u7684\u573a\u666f\u4e2d\u51cf\u8f7b\u6216\u8005\u5b8c\u5168\u907f\u514d\u6df1\u5ea6\u51b2\u7a81\u3001 \u9632\u6b62\u6df1\u5ea6\u51b2\u7a81 \u7b2c\u4e00\u4e2a\u4e5f\u662f\u6700\u91cd\u8981\u7684\u6280\u5de7\u662f \u6c38\u8fdc\u4e0d\u8981\u628a\u591a\u4e2a\u7269\u4f53\u6446\u5f97\u592a\u9760\u8fd1\uff0c\u4ee5\u81f3\u4e8e\u5b83\u4eec\u7684\u4e00\u4e9b\u4e09\u89d2\u5f62\u4f1a\u91cd\u53e0 \u3002\u901a\u8fc7\u5728\u4e24\u4e2a\u7269\u4f53\u4e4b\u95f4\u8bbe\u7f6e\u4e00\u4e2a\u7528\u6237\u65e0\u6cd5\u6ce8\u610f\u5230\u7684\u504f\u79fb\u503c\uff0c\u4f60\u53ef\u4ee5\u5b8c\u5168\u907f\u514d\u8fd9\u4e24\u4e2a\u7269\u4f53\u4e4b\u95f4\u7684\u6df1\u5ea6\u51b2\u7a81\u3002\u5728\u7bb1\u5b50\u548c\u5730\u677f\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7bb1\u5b50\u6cbf\u7740\u6b63y\u8f74\u7a0d\u5fae\u79fb\u52a8\u4e00\u70b9\u3002\u7bb1\u5b50\u4f4d\u7f6e\u7684\u8fd9\u70b9\u5fae\u5c0f\u6539\u53d8\u5c06\u4e0d\u592a\u53ef\u80fd\u88ab\u6ce8\u610f\u5230\uff0c\u4f46\u5b83\u80fd\u591f\u5b8c\u5168\u51cf\u5c11\u6df1\u5ea6\u51b2\u7a81\u7684\u53d1\u751f\u3002\u7136\u800c\uff0c\u8fd9\u9700\u8981\u5bf9\u6bcf\u4e2a\u7269\u4f53\u90fd\u624b\u52a8\u8c03\u6574\uff0c\u5e76\u4e14\u9700\u8981\u8fdb\u884c\u5f7b\u5e95\u7684\u6d4b\u8bd5\u6765\u4fdd\u8bc1\u573a\u666f\u4e2d\u6ca1\u6709\u7269\u4f53\u4f1a\u4ea7\u751f\u6df1\u5ea6\u51b2\u7a81\u3002 \u7b2c\u4e8c\u4e2a\u6280\u5de7\u662f \u5c3d\u53ef\u80fd\u5c06\u8fd1\u5e73\u9762\u8bbe\u7f6e\u8fdc\u4e00\u4e9b \u3002\u5728\u524d\u9762\u6211\u4eec\u63d0\u5230\u4e86\u7cbe\u5ea6\u5728\u9760\u8fd1 \u8fd1 \u5e73\u9762\u65f6\u662f\u975e\u5e38\u9ad8\u7684\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u5c06 \u8fd1 \u5e73\u9762\u8fdc\u79bb\u89c2\u5bdf\u8005\uff0c\u6211\u4eec\u5c06\u4f1a\u5bf9\u6574\u4e2a\u5e73\u622a\u5934\u4f53\u6709\u7740\u66f4\u5927\u7684\u7cbe\u5ea6\u3002\u7136\u800c\uff0c\u5c06\u8fd1\u5e73\u9762\u8bbe\u7f6e\u592a\u8fdc\u5c06\u4f1a\u5bfc\u81f4\u8fd1\u5904\u7684\u7269\u4f53\u88ab\u88c1\u526a\u6389\uff0c\u6240\u4ee5\u8fd9\u901a\u5e38\u9700\u8981\u5b9e\u9a8c\u548c\u5fae\u8c03\u6765\u51b3\u5b9a\u6700\u9002\u5408\u4f60\u7684\u573a\u666f\u7684 \u8fd1 \u5e73\u9762\u8ddd\u79bb\u3002 \u53e6\u5916\u4e00\u4e2a\u5f88\u597d\u7684\u6280\u5de7\u662f\u727a\u7272\u4e00\u4e9b\u6027\u80fd\uff0c \u4f7f\u7528\u66f4\u9ad8\u7cbe\u5ea6\u7684\u6df1\u5ea6\u7f13\u51b2 \u3002\u5927\u90e8\u5206\u6df1\u5ea6\u7f13\u51b2\u7684\u7cbe\u5ea6\u90fd\u662f24\u4f4d\u7684\uff0c\u4f46\u73b0\u5728\u5927\u90e8\u5206\u7684\u663e\u5361\u90fd\u652f\u630132\u4f4d\u7684\u6df1\u5ea6\u7f13\u51b2\uff0c\u8fd9\u5c06\u4f1a\u6781\u5927\u5730\u63d0\u9ad8\u7cbe\u5ea6\u3002\u6240\u4ee5\uff0c\u727a\u7272\u6389\u4e00\u4e9b\u6027\u80fd\uff0c\u4f60\u5c31\u80fd\u83b7\u5f97\u66f4\u9ad8\u7cbe\u5ea6\u7684\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u51cf\u5c11\u6df1\u5ea6\u51b2\u7a81\u3002 \u6211\u4eec\u4e0a\u9762\u8ba8\u8bba\u7684\u4e09\u4e2a\u6280\u672f\u662f\u6700\u666e\u904d\u4e5f\u662f\u5f88\u5bb9\u6613\u5b9e\u73b0\u7684\u6297\u6df1\u5ea6\u51b2\u7a81\u6280\u672f\u4e86\u3002\u8fd8\u6709\u4e00\u4e9b\u66f4\u590d\u6742\u7684\u6280\u672f\uff0c\u4f46\u5b83\u4eec\u4f9d\u7136\u4e0d\u80fd\u5b8c\u5168\u6d88\u9664\u6df1\u5ea6\u51b2\u7a81\u3002\u6df1\u5ea6\u51b2\u7a81\u662f\u4e00\u4e2a\u5e38\u89c1\u7684\u95ee\u9898\uff0c\u4f46\u5982\u679c\u4f60\u7ec4\u5408\u4f7f\u7528\u4e86\u4e0a\u9762\u5217\u4e3e\u51fa\u6765\u7684\u6280\u672f\uff0c\u4f60\u53ef\u80fd\u4e0d\u4f1a\u518d\u9700\u8981\u5904\u7406\u6df1\u5ea6\u51b2\u7a81\u4e86\u3002","title":"\u6df1\u5ea6\u6d4b\u8bd5"},{"location":"04%20Advanced%20OpenGL/01%20Depth%20testing/#_1","text":"\u539f\u6587 Depth testing \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u5728 \u5750\u6807\u7cfb\u7edf \u5c0f\u8282\u4e2d\uff0c\u6211\u4eec\u6e32\u67d3\u4e86\u4e00\u4e2a3D\u7bb1\u5b50\uff0c\u5e76\u4e14\u8fd0\u7528\u4e86 \u6df1\u5ea6\u7f13\u51b2 (Depth Buffer)\u6765\u9632\u6b62\u88ab\u963b\u6321\u7684\u9762\u6e32\u67d3\u5230\u5176\u5b83\u9762\u7684\u524d\u9762\u3002\u5728\u8fd9\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u66f4\u52a0\u6df1\u5165\u5730\u8ba8\u8bba\u8fd9\u4e9b\u50a8\u5b58\u5728\u6df1\u5ea6\u7f13\u51b2\uff08\u6216z\u7f13\u51b2(z-buffer)\uff09\u4e2d\u7684 \u6df1\u5ea6\u503c (Depth Value)\uff0c\u4ee5\u53ca\u5b83\u4eec\u662f\u5982\u4f55\u786e\u5b9a\u4e00\u4e2a\u7247\u6bb5\u662f\u5904\u4e8e\u5176\u5b83\u7247\u6bb5\u540e\u65b9\u7684\u3002 \u6df1\u5ea6\u7f13\u51b2\u5c31\u50cf \u989c\u8272\u7f13\u51b2 (Color Buffer)\uff08\u50a8\u5b58\u6240\u6709\u7684\u7247\u6bb5\u989c\u8272\uff1a\u89c6\u89c9\u8f93\u51fa\uff09\u4e00\u6837\uff0c\u5728\u6bcf\u4e2a\u7247\u6bb5\u4e2d\u50a8\u5b58\u4e86\u4fe1\u606f\uff0c\u5e76\u4e14\uff08\u901a\u5e38\uff09\u548c\u989c\u8272\u7f13\u51b2\u6709\u7740\u4e00\u6837\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002\u6df1\u5ea6\u7f13\u51b2\u662f\u7531\u7a97\u53e3\u7cfb\u7edf\u81ea\u52a8\u521b\u5efa\u7684\uff0c\u5b83\u4f1a\u4ee516\u300124\u621632\u4f4dfloat\u7684\u5f62\u5f0f\u50a8\u5b58\u5b83\u7684\u6df1\u5ea6\u503c\u3002\u5728\u5927\u90e8\u5206\u7684\u7cfb\u7edf\u4e2d\uff0c\u6df1\u5ea6\u7f13\u51b2\u7684\u7cbe\u5ea6\u90fd\u662f24\u4f4d\u7684\u3002 \u5f53\u6df1\u5ea6\u6d4b\u8bd5(Depth Testing)\u88ab\u542f\u7528\u7684\u65f6\u5019\uff0cOpenGL\u4f1a\u5c06\u4e00\u4e2a\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u4e0e\u6df1\u5ea6\u7f13\u51b2\u7684\u5185\u5bb9\u8fdb\u884c\u5bf9\u6bd4\u3002OpenGL\u4f1a\u6267\u884c\u4e00\u4e2a\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u5982\u679c\u8fd9\u4e2a\u6d4b\u8bd5\u901a\u8fc7\u4e86\u7684\u8bdd\uff0c\u6df1\u5ea6\u7f13\u51b2\u5c06\u4f1a\u66f4\u65b0\u4e3a\u65b0\u7684\u6df1\u5ea6\u503c\u3002\u5982\u679c\u6df1\u5ea6\u6d4b\u8bd5\u5931\u8d25\u4e86\uff0c\u7247\u6bb5\u5c06\u4f1a\u88ab\u4e22\u5f03\u3002 \u6df1\u5ea6\u7f13\u51b2\u662f\u5728\u7247\u6bb5\u7740\u8272\u5668\u8fd0\u884c\u4e4b\u540e\uff08\u4ee5\u53ca\u6a21\u677f\u6d4b\u8bd5(Stencil Testing)\u8fd0\u884c\u4e4b\u540e\uff0c\u6211\u4eec\u5c06\u5728 \u4e0b\u4e00\u8282 \u4e2d\u8ba8\u8bba\uff09\u5728\u5c4f\u5e55\u7a7a\u95f4\u4e2d\u8fd0\u884c\u7684\u3002\u5c4f\u5e55\u7a7a\u95f4\u5750\u6807\u4e0e\u901a\u8fc7OpenGL\u7684 glViewport \u6240\u5b9a\u4e49\u7684\u89c6\u53e3\u5bc6\u5207\u76f8\u5173\uff0c\u5e76\u4e14\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528GLSL\u5185\u5efa\u53d8\u91cf gl_FragCoord \u4ece\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u76f4\u63a5\u8bbf\u95ee\u3002 gl_FragCoord \u7684x\u548cy\u5206\u91cf\u4ee3\u8868\u4e86\u7247\u6bb5\u7684\u5c4f\u5e55\u7a7a\u95f4\u5750\u6807\uff08\u5176\u4e2d(0, 0)\u4f4d\u4e8e\u5de6\u4e0b\u89d2\uff09\u3002 gl_FragCoord \u4e2d\u4e5f\u5305\u542b\u4e86\u4e00\u4e2az\u5206\u91cf\uff0c\u5b83\u5305\u542b\u4e86\u7247\u6bb5\u771f\u6b63\u7684\u6df1\u5ea6\u503c\u3002z\u503c\u5c31\u662f\u9700\u8981\u4e0e\u6df1\u5ea6\u7f13\u51b2\u5185\u5bb9\u6240\u5bf9\u6bd4\u7684\u90a3\u4e2a\u503c\u3002 Important \u73b0\u5728\u5927\u90e8\u5206\u7684GPU\u90fd\u63d0\u4f9b\u4e00\u4e2a\u53eb\u505a\u63d0\u524d\u6df1\u5ea6\u6d4b\u8bd5(Early Depth Testing)\u7684\u786c\u4ef6\u7279\u6027\u3002\u63d0\u524d\u6df1\u5ea6\u6d4b\u8bd5\u5141\u8bb8\u6df1\u5ea6\u6d4b\u8bd5\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e4b\u524d\u8fd0\u884c\u3002\u53ea\u8981\u6211\u4eec\u6e05\u695a\u4e00\u4e2a\u7247\u6bb5\u6c38\u8fdc\u4e0d\u4f1a\u662f\u53ef\u89c1\u7684\uff08\u5b83\u5728\u5176\u4ed6\u7269\u4f53\u4e4b\u540e\uff09\uff0c\u6211\u4eec\u5c31\u80fd\u63d0\u524d\u4e22\u5f03\u8fd9\u4e2a\u7247\u6bb5\u3002 \u7247\u6bb5\u7740\u8272\u5668\u901a\u5e38\u5f00\u9500\u90fd\u662f\u5f88\u5927\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u5c3d\u53ef\u80fd\u907f\u514d\u8fd0\u884c\u5b83\u4eec\u3002\u5f53\u4f7f\u7528\u63d0\u524d\u6df1\u5ea6\u6d4b\u8bd5\u65f6\uff0c\u7247\u6bb5\u7740\u8272\u5668\u7684\u4e00\u4e2a\u9650\u5236\u662f\u4f60\u4e0d\u80fd\u5199\u5165\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u3002\u5982\u679c\u4e00\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u5bf9\u5b83\u7684\u6df1\u5ea6\u503c\u8fdb\u884c\u4e86\u5199\u5165\uff0c\u63d0\u524d\u6df1\u5ea6\u6d4b\u8bd5\u662f\u4e0d\u53ef\u80fd\u7684\u3002OpenGL\u4e0d\u80fd\u63d0\u524d\u77e5\u9053\u6df1\u5ea6\u503c\u3002 \u6df1\u5ea6\u6d4b\u8bd5\u9ed8\u8ba4\u662f\u7981\u7528\u7684\uff0c\u6240\u4ee5\u5982\u679c\u8981\u542f\u7528\u6df1\u5ea6\u6d4b\u8bd5\u7684\u8bdd\uff0c\u6211\u4eec\u9700\u8981\u7528 GL_DEPTH_TEST \u9009\u9879\u6765\u542f\u7528\u5b83\uff1a glEnable(GL_DEPTH_TEST); \u5f53\u5b83\u542f\u7528\u7684\u65f6\u5019\uff0c\u5982\u679c\u4e00\u4e2a\u7247\u6bb5\u901a\u8fc7\u4e86\u6df1\u5ea6\u6d4b\u8bd5\u7684\u8bdd\uff0cOpenGL\u4f1a\u5728\u6df1\u5ea6\u7f13\u51b2\u4e2d\u50a8\u5b58\u8be5\u7247\u6bb5\u7684z\u503c\uff1b\u5982\u679c\u6ca1\u6709\u901a\u8fc7\u6df1\u5ea6\u7f13\u51b2\uff0c\u5219\u4f1a\u4e22\u5f03\u8be5\u7247\u6bb5\u3002\u5982\u679c\u4f60\u542f\u7528\u4e86\u6df1\u5ea6\u7f13\u51b2\uff0c\u4f60\u8fd8\u5e94\u8be5\u5728\u6bcf\u4e2a\u6e32\u67d3\u8fed\u4ee3\u4e4b\u524d\u4f7f\u7528 GL_DEPTH_BUFFER_BIT \u6765\u6e05\u9664\u6df1\u5ea6\u7f13\u51b2\uff0c\u5426\u5219\u4f60\u4f1a\u4ecd\u5728\u4f7f\u7528\u4e0a\u4e00\u6b21\u6e32\u67d3\u8fed\u4ee3\u4e2d\u7684\u5199\u5165\u7684\u6df1\u5ea6\u503c\uff1a glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); \u53ef\u4ee5\u60f3\u8c61\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4f60\u4f1a\u9700\u8981\u5bf9\u6240\u6709\u7247\u6bb5\u90fd\u6267\u884c\u6df1\u5ea6\u6d4b\u8bd5\u5e76\u4e22\u5f03\u76f8\u5e94\u7684\u7247\u6bb5\uff0c\u4f46 \u4e0d \u5e0c\u671b\u66f4\u65b0\u6df1\u5ea6\u7f13\u51b2\u3002\u57fa\u672c\u4e0a\u6765\u8bf4\uff0c\u4f60\u5728\u4f7f\u7528\u4e00\u4e2a \u53ea\u8bfb\u7684 (Read-only)\u6df1\u5ea6\u7f13\u51b2\u3002OpenGL\u5141\u8bb8\u6211\u4eec\u7981\u7528\u6df1\u5ea6\u7f13\u51b2\u7684\u5199\u5165\uff0c\u53ea\u9700\u8981\u8bbe\u7f6e\u5b83\u7684\u6df1\u5ea6\u63a9\u7801(Depth Mask)\u8bbe\u7f6e\u4e3a GL_FALSE \u5c31\u53ef\u4ee5\u4e86\uff1a glDepthMask(GL_FALSE); \u6ce8\u610f\u8fd9\u53ea\u5728\u6df1\u5ea6\u6d4b\u8bd5\u88ab\u542f\u7528\u7684\u65f6\u5019\u624d\u6709\u6548\u679c\u3002","title":"\u6df1\u5ea6\u6d4b\u8bd5"},{"location":"04%20Advanced%20OpenGL/01%20Depth%20testing/#_2","text":"OpenGL\u5141\u8bb8\u6211\u4eec\u4fee\u6539\u6df1\u5ea6\u6d4b\u8bd5\u4e2d\u4f7f\u7528\u7684\u6bd4\u8f83\u8fd0\u7b97\u7b26\u3002\u8fd9\u5141\u8bb8\u6211\u4eec\u6765\u63a7\u5236OpenGL\u4ec0\u4e48\u65f6\u5019\u8be5\u901a\u8fc7\u6216\u4e22\u5f03\u4e00\u4e2a\u7247\u6bb5\uff0c\u4ec0\u4e48\u65f6\u5019\u53bb\u66f4\u65b0\u6df1\u5ea6\u7f13\u51b2\u3002\u6211\u4eec\u53ef\u4ee5\u8c03\u7528 glDepthFunc \u51fd\u6570\u6765\u8bbe\u7f6e\u6bd4\u8f83\u8fd0\u7b97\u7b26\uff08\u6216\u8005\u8bf4\u6df1\u5ea6\u51fd\u6570(Depth Function)\uff09\uff1a glDepthFunc(GL_LESS); \u8fd9\u4e2a\u51fd\u6570\u63a5\u53d7\u4e0b\u9762\u8868\u683c\u4e2d\u7684\u6bd4\u8f83\u8fd0\u7b97\u7b26\uff1a \u51fd\u6570 \u63cf\u8ff0 GL_ALWAYS \u6c38\u8fdc\u901a\u8fc7\u6df1\u5ea6\u6d4b\u8bd5 GL_NEVER \u6c38\u8fdc\u4e0d\u901a\u8fc7\u6df1\u5ea6\u6d4b\u8bd5 GL_LESS \u5728\u7247\u6bb5\u6df1\u5ea6\u503c\u5c0f\u4e8e\u7f13\u51b2\u7684\u6df1\u5ea6\u503c\u65f6\u901a\u8fc7\u6d4b\u8bd5 GL_EQUAL \u5728\u7247\u6bb5\u6df1\u5ea6\u503c\u7b49\u4e8e\u7f13\u51b2\u533a\u7684\u6df1\u5ea6\u503c\u65f6\u901a\u8fc7\u6d4b\u8bd5 GL_LEQUAL \u5728\u7247\u6bb5\u6df1\u5ea6\u503c\u5c0f\u4e8e\u7b49\u4e8e\u7f13\u51b2\u533a\u7684\u6df1\u5ea6\u503c\u65f6\u901a\u8fc7\u6d4b\u8bd5 GL_GREATER \u5728\u7247\u6bb5\u6df1\u5ea6\u503c\u5927\u4e8e\u7f13\u51b2\u533a\u7684\u6df1\u5ea6\u503c\u65f6\u901a\u8fc7\u6d4b\u8bd5 GL_NOTEQUAL \u5728\u7247\u6bb5\u6df1\u5ea6\u503c\u4e0d\u7b49\u4e8e\u7f13\u51b2\u533a\u7684\u6df1\u5ea6\u503c\u65f6\u901a\u8fc7\u6d4b\u8bd5 GL_GEQUAL \u5728\u7247\u6bb5\u6df1\u5ea6\u503c\u5927\u4e8e\u7b49\u4e8e\u7f13\u51b2\u533a\u7684\u6df1\u5ea6\u503c\u65f6\u901a\u8fc7\u6d4b\u8bd5 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u7684\u6df1\u5ea6\u51fd\u6570\u662f GL_LESS \uff0c\u5b83\u5c06\u4f1a\u4e22\u5f03\u6df1\u5ea6\u503c\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u6df1\u5ea6\u7f13\u51b2\u503c\u7684\u6240\u6709\u7247\u6bb5\u3002 \u8ba9\u6211\u4eec\u770b\u770b\u6539\u53d8\u6df1\u5ea6\u51fd\u6570\u4f1a\u5bf9\u89c6\u89c9\u8f93\u51fa\u6709\u4ec0\u4e48\u5f71\u54cd\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u65b0\u7684\u4ee3\u7801\u914d\u7f6e\uff0c\u5b83\u4f1a\u663e\u793a\u4e00\u4e2a\u6ca1\u6709\u5149\u7167\u7684\u57fa\u672c\u573a\u666f\uff0c\u91cc\u9762\u6709\u4e24\u4e2a\u6709\u7eb9\u7406\u7684\u7acb\u65b9\u4f53\uff0c\u653e\u7f6e\u5728\u4e00\u4e2a\u6709\u7eb9\u7406\u7684\u5730\u677f\u4e0a\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u6e90\u4ee3\u7801\u3002 \u5728\u6e90\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5c06\u6df1\u5ea6\u51fd\u6570\u6539\u4e3a GL_ALWAYS \uff1a glEnable(GL_DEPTH_TEST); glDepthFunc(GL_ALWAYS); \u8fd9\u5c06\u4f1a\u6a21\u62df\u6211\u4eec\u6ca1\u6709\u542f\u7528\u6df1\u5ea6\u6d4b\u8bd5\u65f6\u6240\u5f97\u5230\u7684\u7ed3\u679c\u3002\u6df1\u5ea6\u6d4b\u8bd5\u5c06\u4f1a\u6c38\u8fdc\u901a\u8fc7\uff0c\u6240\u4ee5\u6700\u540e\u7ed8\u5236\u7684\u7247\u6bb5\u5c06\u4f1a\u603b\u662f\u4f1a\u6e32\u67d3\u5728\u4e4b\u524d\u7ed8\u5236\u7247\u6bb5\u7684\u4e0a\u9762\uff0c\u5373\u4f7f\u4e4b\u524d\u7ed8\u5236\u7684\u7247\u6bb5\u672c\u5c31\u5e94\u8be5\u6e32\u67d3\u5728\u6700\u524d\u9762\u3002\u56e0\u4e3a\u6211\u4eec\u662f\u6700\u540e\u6e32\u67d3\u5730\u677f\u7684\uff0c\u5b83\u4f1a\u8986\u76d6\u6240\u6709\u7684\u7bb1\u5b50\u7247\u6bb5\uff1a \u5c06\u5b83\u91cd\u65b0\u8bbe\u7f6e\u4e3a GL_LESS \uff0c\u8fd9\u4f1a\u5c06\u573a\u666f\u8fd8\u539f\u4e3a\u539f\u6709\u7684\u6837\u5b50\uff1a","title":"\u6df1\u5ea6\u6d4b\u8bd5\u51fd\u6570"},{"location":"04%20Advanced%20OpenGL/01%20Depth%20testing/#_3","text":"\u6df1\u5ea6\u7f13\u51b2\u5305\u542b\u4e86\u4e00\u4e2a\u4ecb\u4e8e0.0\u548c1.0\u4e4b\u95f4\u7684\u6df1\u5ea6\u503c\uff0c\u5b83\u5c06\u4f1a\u4e0e\u89c2\u5bdf\u8005\u89c6\u89d2\u6240\u770b\u89c1\u7684\u573a\u666f\u4e2d\u6240\u6709\u7269\u4f53\u7684z\u503c\u8fdb\u884c\u6bd4\u8f83\u3002\u89c2\u5bdf\u7a7a\u95f4\u7684z\u503c\u53ef\u80fd\u662f\u6295\u5f71\u5e73\u622a\u5934\u4f53\u7684 \u8fd1\u5e73\u9762 (Near)\u548c \u8fdc\u5e73\u9762 (Far)\u4e4b\u95f4\u7684\u4efb\u4f55\u503c\u3002\u6211\u4eec\u9700\u8981\u4e00\u79cd\u65b9\u5f0f\u6765\u5c06\u8fd9\u4e9b\u89c2\u5bdf\u7a7a\u95f4\u7684z\u503c\u53d8\u6362\u5230[0, 1]\u8303\u56f4\u4e4b\u95f4\uff0c\u5176\u4e2d\u7684\u4e00\u79cd\u65b9\u5f0f\u5c31\u662f\u5c06\u5b83\u4eec\u7ebf\u6027\u53d8\u6362\u5230[0, 1]\u8303\u56f4\u4e4b\u95f4\u3002\u4e0b\u9762\u8fd9\u4e2a\uff08\u7ebf\u6027\uff09\u65b9\u7a0b\u5c06z\u503c\u53d8\u6362\u5230\u4e860.0\u52301.0\u4e4b\u95f4\u7684\u6df1\u5ea6\u503c\uff1a \\begin{equation} F_{depth} = \\frac{z - near}{far - near} \\end{equation} \u8fd9\u91cc\u7684 near \u548c far \u503c\u662f\u6211\u4eec\u4e4b\u524d\u63d0\u4f9b\u7ed9\u6295\u5f71\u77e9\u9635\u8bbe\u7f6e\u53ef\u89c6\u5e73\u622a\u5934\u4f53\u7684\uff08\u89c1 \u5750\u6807\u7cfb\u7edf \uff09\u90a3\u4e2a near \u548c far \u503c\u3002\u8fd9\u4e2a\u65b9\u7a0b\u9700\u8981\u5e73\u622a\u5934\u4f53\u4e2d\u7684\u4e00\u4e2az\u503c\uff0c\u5e76\u5c06\u5b83\u53d8\u6362\u5230\u4e86[0, 1]\u7684\u8303\u56f4\u4e2d\u3002z\u503c\u548c\u5bf9\u5e94\u7684\u6df1\u5ea6\u503c\u4e4b\u95f4\u7684\u5173\u7cfb\u53ef\u4ee5\u5728\u4e0b\u56fe\u4e2d\u770b\u5230\uff1a Important \u6ce8\u610f\u6240\u6709\u7684\u65b9\u7a0b\u90fd\u4f1a\u5c06\u975e\u5e38\u8fd1\u7684\u7269\u4f53\u7684\u6df1\u5ea6\u503c\u8bbe\u7f6e\u4e3a\u63a5\u8fd10.0\u7684\u503c\uff0c\u800c\u5f53\u7269\u4f53\u975e\u5e38\u63a5\u8fd1\u8fdc\u5e73\u9762\u7684\u65f6\u5019\uff0c\u5b83\u7684\u6df1\u5ea6\u503c\u4f1a\u975e\u5e38\u63a5\u8fd11.0\u3002 \u7136\u800c\uff0c\u5728\u5b9e\u8df5\u4e2d\u662f\u51e0\u4e4e\u6c38\u8fdc\u4e0d\u4f1a\u4f7f\u7528\u8fd9\u6837\u7684 \u7ebf\u6027\u6df1\u5ea6\u7f13\u51b2 (Linear Depth Buffer)\u7684\u3002\u8981\u60f3\u6709\u6b63\u786e\u7684\u6295\u5f71\u6027\u8d28\uff0c\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u975e\u7ebf\u6027\u7684\u6df1\u5ea6\u65b9\u7a0b\uff0c\u5b83\u662f\u4e0e 1/z \u6210\u6b63\u6bd4\u7684\u3002\u5b83\u505a\u7684\u5c31\u662f\u5728z\u503c\u5f88\u5c0f\u7684\u65f6\u5019\u63d0\u4f9b\u975e\u5e38\u9ad8\u7684\u7cbe\u5ea6\uff0c\u800c\u5728z\u503c\u5f88\u8fdc\u7684\u65f6\u5019\u63d0\u4f9b\u66f4\u5c11\u7684\u7cbe\u5ea6\u3002\u82b1\u65f6\u95f4\u60f3\u60f3\u8fd9\u4e2a\uff1a\u6211\u4eec\u771f\u7684\u9700\u8981\u5bf91000\u5355\u4f4d\u8fdc\u7684\u6df1\u5ea6\u503c\u548c\u53ea\u67091\u5355\u4f4d\u8fdc\u7684\u5145\u6ee1\u7ec6\u8282\u7684\u7269\u4f53\u4f7f\u7528\u76f8\u540c\u7684\u7cbe\u5ea6\u5417\uff1f\u7ebf\u6027\u65b9\u7a0b\u5e76\u4e0d\u4f1a\u8003\u8651\u8fd9\u4e00\u70b9\u3002 \u7531\u4e8e\u975e\u7ebf\u6027\u65b9\u7a0b\u4e0e 1/z \u6210\u6b63\u6bd4\uff0c\u57281.0\u548c2.0\u4e4b\u95f4\u7684z\u503c\u5c06\u4f1a\u53d8\u6362\u81f31.0\u52300.5\u4e4b\u95f4\u7684\u6df1\u5ea6\u503c\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2afloat\u63d0\u4f9b\u7ed9\u6211\u4eec\u7684\u4e00\u534a\u7cbe\u5ea6\u4e86\uff0c\u8fd9\u5728z\u503c\u5f88\u5c0f\u7684\u60c5\u51b5\u4e0b\u63d0\u4f9b\u4e86\u975e\u5e38\u5927\u7684\u7cbe\u5ea6\u3002\u572850.0\u548c100.0\u4e4b\u95f4\u7684z\u503c\u5c06\u4f1a\u53ea\u53602%\u7684float\u7cbe\u5ea6\uff0c\u8fd9\u6b63\u662f\u6211\u4eec\u6240\u9700\u8981\u7684\u3002\u8fd9\u6837\u7684\u4e00\u4e2a\u8003\u8651\u4e86\u8fdc\u8fd1\u8ddd\u79bb\u7684\u65b9\u7a0b\u662f\u8fd9\u6837\u7684\uff1a \\begin{equation} F_{depth} = \\frac{1/z - 1/near}{1/far - 1/near} \\end{equation} \u5982\u679c\u4f60\u4e0d\u77e5\u9053\u8fd9\u4e2a\u65b9\u7a0b\u662f\u600e\u4e48\u56de\u4e8b\u4e5f\u4e0d\u7528\u62c5\u5fc3\u3002\u91cd\u8981\u7684\u662f\u8981\u8bb0\u4f4f\u6df1\u5ea6\u7f13\u51b2\u4e2d\u7684\u503c\u5728\u5c4f\u5e55\u7a7a\u95f4\u4e2d\u4e0d\u662f\u7ebf\u6027\u7684\uff08\u5728\u900f\u89c6\u77e9\u9635\u5e94\u7528\u4e4b\u524d\u5728\u89c2\u5bdf\u7a7a\u95f4\u4e2d\u662f\u7ebf\u6027\u7684\uff09\u3002\u6df1\u5ea6\u7f13\u51b2\u4e2d0.5\u7684\u503c\u5e76\u4e0d\u4ee3\u8868\u7740\u7269\u4f53\u7684z\u503c\u662f\u4f4d\u4e8e\u5e73\u622a\u5934\u4f53\u7684\u4e2d\u95f4\u4e86\uff0c\u8fd9\u4e2a\u9876\u70b9\u7684z\u503c\u5b9e\u9645\u4e0a\u975e\u5e38\u63a5\u8fd1\u8fd1\u5e73\u9762\uff01\u4f60\u53ef\u4ee5\u5728\u4e0b\u56fe\u4e2d\u770b\u5230z\u503c\u548c\u6700\u7ec8\u7684\u6df1\u5ea6\u7f13\u51b2\u503c\u4e4b\u95f4\u7684\u975e\u7ebf\u6027\u5173\u7cfb\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u6df1\u5ea6\u503c\u5f88\u5927\u4e00\u90e8\u5206\u662f\u7531\u5f88\u5c0f\u7684z\u503c\u6240\u51b3\u5b9a\u7684\uff0c\u8fd9\u7ed9\u4e86\u8fd1\u5904\u7684\u7269\u4f53\u5f88\u5927\u7684\u6df1\u5ea6\u7cbe\u5ea6\u3002\u8fd9\u4e2a\uff08\u4ece\u89c2\u5bdf\u8005\u7684\u89c6\u89d2\uff09\u53d8\u6362z\u503c\u7684\u65b9\u7a0b\u662f\u5d4c\u5165\u5728\u6295\u5f71\u77e9\u9635\u4e2d\u7684\uff0c\u6240\u4ee5\u5f53\u6211\u4eec\u60f3\u5c06\u4e00\u4e2a\u9876\u70b9\u5750\u6807\u4ece\u89c2\u5bdf\u7a7a\u95f4\u81f3\u88c1\u526a\u7a7a\u95f4\u7684\u65f6\u5019\u8fd9\u4e2a\u975e\u7ebf\u6027\u65b9\u7a0b\u5c31\u88ab\u5e94\u7528\u4e86\u3002\u5982\u679c\u4f60\u60f3\u6df1\u5ea6\u4e86\u89e3\u6295\u5f71\u77e9\u9635\u7a76\u7adf\u505a\u4e86\u4ec0\u4e48\uff0c\u6211\u5efa\u8bae\u9605\u8bfb \u8fd9\u7bc7\u6587\u7ae0 \u3002 \u5982\u679c\u6211\u4eec\u60f3\u8981\u53ef\u89c6\u5316\u6df1\u5ea6\u7f13\u51b2\u7684\u8bdd\uff0c\u975e\u7ebf\u6027\u65b9\u7a0b\u7684\u6548\u679c\u5f88\u5feb\u5c31\u4f1a\u53d8\u5f97\u5f88\u6e05\u695a\u3002","title":"\u6df1\u5ea6\u503c\u7cbe\u5ea6"},{"location":"04%20Advanced%20OpenGL/01%20Depth%20testing/#_4","text":"\u6211\u4eec\u77e5\u9053\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u5185\u5efa gl_FragCoord \u5411\u91cf\u7684z\u503c\u5305\u542b\u4e86\u90a3\u4e2a\u7279\u5b9a\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u3002\u5982\u679c\u6211\u4eec\u5c06\u8fd9\u4e2a\u6df1\u5ea6\u503c\u8f93\u51fa\u4e3a\u989c\u8272\uff0c\u6211\u4eec\u53ef\u4ee5\u663e\u793a\u573a\u666f\u4e2d\u6240\u6709\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u3002\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u8fd4\u56de\u4e00\u4e2a\u989c\u8272\u5411\u91cf\u6765\u5b8c\u6210\u8fd9\u4e00\u5de5\u4f5c\uff1a void main() { FragColor = vec4(vec3(gl_FragCoord.z), 1.0); } \u5982\u679c\u4f60\u518d\u6b21\u8fd0\u884c\u7a0b\u5e8f\u7684\u8bdd\uff0c\u4f60\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u6240\u6709\u4e1c\u897f\u90fd\u662f\u767d\u8272\u7684\uff0c\u770b\u8d77\u6765\u5c31\u60f3\u6211\u4eec\u6240\u6709\u7684\u6df1\u5ea6\u503c\u90fd\u662f\u6700\u5927\u76841.0\u3002\u6240\u4ee5\u4e3a\u4ec0\u4e48\u6ca1\u6709\u9760\u8fd10.0\uff08\u5373\u53d8\u6697\uff09\u7684\u6df1\u5ea6\u503c\u5462\uff1f \u4f60\u53ef\u80fd\u8fd8\u8bb0\u5f97\u5728\u4e0a\u4e00\u90e8\u5206\u4e2d\u8bf4\u5230\uff0c\u5c4f\u5e55\u7a7a\u95f4\u4e2d\u7684\u6df1\u5ea6\u503c\u662f\u975e\u7ebf\u6027\u7684\uff0c\u5373\u5b83\u5728z\u503c\u5f88\u5c0f\u7684\u65f6\u5019\u6709\u5f88\u9ad8\u7684\u7cbe\u5ea6\uff0c\u800cz\u503c\u5f88\u5927\u7684\u65f6\u5019\u6709\u8f83\u4f4e\u7684\u7cbe\u5ea6\u3002\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u4f1a\u968f\u7740\u8ddd\u79bb\u8fc5\u901f\u589e\u52a0\uff0c\u6240\u4ee5\u51e0\u4e4e\u6240\u6709\u7684\u9876\u70b9\u7684\u6df1\u5ea6\u503c\u90fd\u662f\u63a5\u8fd1\u4e8e1.0\u7684\u3002\u5982\u679c\u6211\u4eec\u5c0f\u5fc3\u5730\u9760\u8fd1\u7269\u4f53\uff0c\u4f60\u53ef\u80fd\u4f1a\u6700\u7ec8\u6ce8\u610f\u5230\u989c\u8272\u4f1a\u6e10\u6e10\u53d8\u6697\uff0c\u663e\u793a\u5b83\u4eec\u7684z\u503c\u5728\u9010\u6e10\u53d8\u5c0f\uff1a \u8fd9\u5f88\u6e05\u695a\u5730\u5c55\u793a\u4e86\u6df1\u5ea6\u503c\u7684\u975e\u7ebf\u6027\u6027\u8d28\u3002\u8fd1\u5904\u7684\u7269\u4f53\u6bd4\u8d77\u8fdc\u5904\u7684\u7269\u4f53\u5bf9\u6df1\u5ea6\u503c\u6709\u7740\u66f4\u5927\u7684\u5f71\u54cd\u3002\u53ea\u9700\u8981\u79fb\u52a8\u51e0\u5398\u7c73\u5c31\u80fd\u8ba9\u989c\u8272\u4ece\u6697\u5b8c\u5168\u53d8\u767d\u3002 \u7136\u800c\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8ba9\u7247\u6bb5\u975e\u7ebf\u6027\u7684\u6df1\u5ea6\u503c\u53d8\u6362\u4e3a\u7ebf\u6027\u7684\u3002\u8981\u5b9e\u73b0\u8fd9\u4e2a\uff0c\u6211\u4eec\u9700\u8981\u4ec5\u4ec5\u53cd\u8f6c\u6df1\u5ea6\u503c\u7684\u6295\u5f71\u53d8\u6362\u3002\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u9996\u5148\u5c06\u6df1\u5ea6\u503c\u4ece[0, 1]\u8303\u56f4\u91cd\u65b0\u53d8\u6362\u5230[-1, 1]\u8303\u56f4\u7684\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\uff08\u88c1\u526a\u7a7a\u95f4\uff09\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u50cf\u6295\u5f71\u77e9\u9635\u90a3\u6837\u53cd\u8f6c\u8fd9\u4e2a\u975e\u7ebf\u6027\u65b9\u7a0b\uff08\u65b9\u7a0b2\uff09\uff0c\u5e76\u5c06\u8fd9\u4e2a\u53cd\u8f6c\u7684\u65b9\u7a0b\u5e94\u7528\u5230\u6700\u7ec8\u7684\u6df1\u5ea6\u503c\u4e0a\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u5c31\u662f\u4e00\u4e2a\u7ebf\u6027\u7684\u6df1\u5ea6\u503c\u4e86\u3002\u542c\u8d77\u6765\u662f\u53ef\u884c\u7684\uff0c\u5bf9\u5427\uff1f \u9996\u5148\u6211\u4eec\u5c06\u6df1\u5ea6\u503c\u53d8\u6362\u4e3aNDC\uff0c\u4e0d\u662f\u975e\u5e38\u56f0\u96be\uff1a float ndc = depth * 2.0 - 1.0; \u63a5\u4e0b\u6765\u4f7f\u7528\u83b7\u53d6\u5230\u7684NDC\u503c\uff0c\u5e94\u7528\u9006\u53d8\u6362\u6765\u83b7\u53d6\u7ebf\u6027\u7684\u6df1\u5ea6\u503c\uff1a float linearDepth = (2.0 * near * far) / (far + near - ndc * (far - near)); \u8fd9\u4e2a\u65b9\u7a0b\u662f\u7528\u6295\u5f71\u77e9\u9635\u63a8\u5bfc\u5f97\u51fa\u7684\uff0c\u5b83\u4f7f\u7528\u4e86\u65b9\u7a0b2\u6765\u975e\u7ebf\u6027\u5316\u6df1\u5ea6\u503c\uff0c\u8fd4\u56de\u4e00\u4e2a near \u4e0e far \u4e4b\u95f4\u7684\u6df1\u5ea6\u503c\u3002\u8fd9\u7bc7\u6ce8\u91cd\u6570\u5b66\u7684 \u6587\u7ae0 \u4e3a\u611f\u5174\u8da3\u7684\u8bfb\u8005\u8be6\u7ec6\u89e3\u91ca\u4e86\u6295\u5f71\u77e9\u9635\uff0c\u5b83\u4e5f\u5c55\u793a\u4e86\u8fd9\u4e9b\u65b9\u7a0b\u662f\u600e\u4e48\u6765\u7684\u3002 \u5c06\u5c4f\u5e55\u7a7a\u95f4\u4e2d\u975e\u7ebf\u6027\u7684\u6df1\u5ea6\u503c\u53d8\u6362\u81f3\u7ebf\u6027\u6df1\u5ea6\u503c\u7684\u5b8c\u6574\u7247\u6bb5\u7740\u8272\u5668\u5982\u4e0b\uff1a #version 330 core out vec4 FragColor; float near = 0.1; float far = 100.0; float LinearizeDepth(float depth) { float z = depth * 2.0 - 1.0; // \u8f6c\u6362\u4e3a NDC return (2.0 * near * far) / (far + near - z * (far - near)); } void main() { float depth = LinearizeDepth(gl_FragCoord.z) / far; // \u4e3a\u4e86\u6f14\u793a\u9664\u4ee5 far FragColor = vec4(vec3(depth), 1.0); } \u7531\u4e8e\u7ebf\u6027\u5316\u7684\u6df1\u5ea6\u503c\u5904\u4e8e near \u4e0e far \u4e4b\u95f4\uff0c\u5b83\u7684\u5927\u90e8\u5206\u503c\u90fd\u4f1a\u5927\u4e8e1.0\u5e76\u663e\u793a\u4e3a\u5b8c\u5168\u7684\u767d\u8272\u3002\u901a\u8fc7\u5728 main \u51fd\u6570\u4e2d\u5c06\u7ebf\u6027\u6df1\u5ea6\u503c\u9664\u4ee5 far \uff0c\u6211\u4eec\u8fd1\u4f3c\u5730\u5c06\u7ebf\u6027\u6df1\u5ea6\u503c\u8f6c\u5316\u5230[0, 1]\u7684\u8303\u56f4\u4e4b\u95f4\u3002\u8fd9\u6837\u5b50\u6211\u4eec\u5c31\u80fd\u9010\u6e10\u770b\u5230\u4e00\u4e2a\u7247\u6bb5\u8d8a\u63a5\u8fd1\u6295\u5f71\u5e73\u622a\u5934\u4f53\u7684\u8fdc\u5e73\u9762\uff0c\u5b83\u5c31\u4f1a\u53d8\u5f97\u8d8a\u4eae\uff0c\u66f4\u9002\u7528\u4e8e\u5c55\u793a\u76ee\u7684\u3002 \u5982\u679c\u6211\u4eec\u73b0\u5728\u8fd0\u884c\u7a0b\u5e8f\uff0c\u6211\u4eec\u5c31\u80fd\u770b\u89c1\u6df1\u5ea6\u503c\u968f\u7740\u8ddd\u79bb\u589e\u5927\u662f\u7ebf\u6027\u7684\u4e86\u3002\u5c1d\u8bd5\u5728\u573a\u666f\u4e2d\u79fb\u52a8\uff0c\u770b\u770b\u6df1\u5ea6\u503c\u662f\u600e\u6837\u4ee5\u7ebf\u6027\u53d8\u5316\u7684\u3002 \u989c\u8272\u5927\u90e8\u5206\u90fd\u662f\u9ed1\u8272\uff0c\u56e0\u4e3a\u6df1\u5ea6\u503c\u7684\u8303\u56f4\u662f0.1\u7684 \u8fd1 \u5e73\u9762\u5230100\u7684 \u8fdc \u5e73\u9762\uff0c\u5b83\u79bb\u6211\u4eec\u8fd8\u662f\u975e\u5e38\u8fdc\u7684\u3002\u7ed3\u679c\u5c31\u662f\uff0c\u6211\u4eec\u76f8\u5bf9\u9760\u8fd1\u8fd1\u5e73\u9762\uff0c\u6240\u4ee5\u4f1a\u5f97\u5230\u66f4\u4f4e\u7684\uff08\u66f4\u6697\u7684\uff09\u6df1\u5ea6\u503c\u3002","title":"\u6df1\u5ea6\u7f13\u51b2\u7684\u53ef\u89c6\u5316"},{"location":"04%20Advanced%20OpenGL/01%20Depth%20testing/#_5","text":"\u4e00\u4e2a\u5f88\u5e38\u89c1\u7684\u89c6\u89c9\u9519\u8bef\u4f1a\u5728\u4e24\u4e2a\u5e73\u9762\u6216\u8005\u4e09\u89d2\u5f62\u975e\u5e38\u7d27\u5bc6\u5730\u5e73\u884c\u6392\u5217\u5728\u4e00\u8d77\u65f6\u4f1a\u53d1\u751f\uff0c\u6df1\u5ea6\u7f13\u51b2\u6ca1\u6709\u8db3\u591f\u7684\u7cbe\u5ea6\u6765\u51b3\u5b9a\u4e24\u4e2a\u5f62\u72b6\u54ea\u4e2a\u5728\u524d\u9762\u3002\u7ed3\u679c\u5c31\u662f\u8fd9\u4e24\u4e2a\u5f62\u72b6\u4e0d\u65ad\u5730\u5728\u5207\u6362\u524d\u540e\u987a\u5e8f\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u5f88\u5947\u602a\u7684\u82b1\u7eb9\u3002\u8fd9\u4e2a\u73b0\u8c61\u53eb\u505a \u6df1\u5ea6\u51b2\u7a81 (Z-fighting)\uff0c\u56e0\u4e3a\u5b83\u770b\u8d77\u6765\u50cf\u662f\u8fd9\u4e24\u4e2a\u5f62\u72b6\u5728\u4e89\u593a(Fight)\u8c01\u8be5\u5904\u4e8e\u9876\u7aef\u3002 \u5728\u6211\u4eec\u4e00\u76f4\u4f7f\u7528\u7684\u573a\u666f\u4e2d\uff0c\u6709\u51e0\u4e2a\u5730\u65b9\u7684\u6df1\u5ea6\u51b2\u7a81\u8fd8\u662f\u975e\u5e38\u660e\u663e\u7684\u3002\u7bb1\u5b50\u88ab\u653e\u7f6e\u5728\u5730\u677f\u7684\u540c\u4e00\u9ad8\u5ea6\u4e0a\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u7bb1\u5b50\u7684\u5e95\u9762\u548c\u5730\u677f\u662f\u5171\u9762\u7684(Coplanar)\u3002\u8fd9\u4e24\u4e2a\u9762\u7684\u6df1\u5ea6\u503c\u90fd\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u6df1\u5ea6\u6d4b\u8bd5\u6ca1\u6709\u529e\u6cd5\u51b3\u5b9a\u5e94\u8be5\u663e\u793a\u54ea\u4e00\u4e2a\u3002 \u5982\u679c\u4f60\u5c06\u6444\u50cf\u673a\u79fb\u52a8\u5230\u5176\u4e2d\u4e00\u4e2a\u7bb1\u5b50\u7684\u5185\u90e8\uff0c\u4f60\u5c31\u80fd\u6e05\u695a\u5730\u770b\u5230\u8fd9\u4e2a\u6548\u679c\u7684\uff0c\u7bb1\u5b50\u7684\u5e95\u90e8\u4e0d\u65ad\u5730\u5728\u7bb1\u5b50\u5e95\u9762\u4e0e\u5730\u677f\u4e4b\u95f4\u5207\u6362\uff0c\u5f62\u6210\u4e00\u4e2a\u952f\u9f7f\u7684\u82b1\u7eb9\uff1a \u6df1\u5ea6\u51b2\u7a81\u662f\u6df1\u5ea6\u7f13\u51b2\u7684\u4e00\u4e2a\u5e38\u89c1\u95ee\u9898\uff0c\u5f53\u7269\u4f53\u5728\u8fdc\u5904\u65f6\u6548\u679c\u4f1a\u66f4\u660e\u663e\uff08\u56e0\u4e3a\u6df1\u5ea6\u7f13\u51b2\u5728z\u503c\u6bd4\u8f83\u5927\u7684\u65f6\u5019\u6709\u7740\u66f4\u5c0f\u7684\u7cbe\u5ea6\uff09\u3002\u6df1\u5ea6\u51b2\u7a81\u4e0d\u80fd\u591f\u88ab\u5b8c\u5168\u907f\u514d\uff0c\u4f46\u4e00\u822c\u4f1a\u6709\u4e00\u4e9b\u6280\u5de7\u6709\u52a9\u4e8e\u5728\u4f60\u7684\u573a\u666f\u4e2d\u51cf\u8f7b\u6216\u8005\u5b8c\u5168\u907f\u514d\u6df1\u5ea6\u51b2\u7a81\u3001","title":"\u6df1\u5ea6\u51b2\u7a81"},{"location":"04%20Advanced%20OpenGL/01%20Depth%20testing/#_6","text":"\u7b2c\u4e00\u4e2a\u4e5f\u662f\u6700\u91cd\u8981\u7684\u6280\u5de7\u662f \u6c38\u8fdc\u4e0d\u8981\u628a\u591a\u4e2a\u7269\u4f53\u6446\u5f97\u592a\u9760\u8fd1\uff0c\u4ee5\u81f3\u4e8e\u5b83\u4eec\u7684\u4e00\u4e9b\u4e09\u89d2\u5f62\u4f1a\u91cd\u53e0 \u3002\u901a\u8fc7\u5728\u4e24\u4e2a\u7269\u4f53\u4e4b\u95f4\u8bbe\u7f6e\u4e00\u4e2a\u7528\u6237\u65e0\u6cd5\u6ce8\u610f\u5230\u7684\u504f\u79fb\u503c\uff0c\u4f60\u53ef\u4ee5\u5b8c\u5168\u907f\u514d\u8fd9\u4e24\u4e2a\u7269\u4f53\u4e4b\u95f4\u7684\u6df1\u5ea6\u51b2\u7a81\u3002\u5728\u7bb1\u5b50\u548c\u5730\u677f\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7bb1\u5b50\u6cbf\u7740\u6b63y\u8f74\u7a0d\u5fae\u79fb\u52a8\u4e00\u70b9\u3002\u7bb1\u5b50\u4f4d\u7f6e\u7684\u8fd9\u70b9\u5fae\u5c0f\u6539\u53d8\u5c06\u4e0d\u592a\u53ef\u80fd\u88ab\u6ce8\u610f\u5230\uff0c\u4f46\u5b83\u80fd\u591f\u5b8c\u5168\u51cf\u5c11\u6df1\u5ea6\u51b2\u7a81\u7684\u53d1\u751f\u3002\u7136\u800c\uff0c\u8fd9\u9700\u8981\u5bf9\u6bcf\u4e2a\u7269\u4f53\u90fd\u624b\u52a8\u8c03\u6574\uff0c\u5e76\u4e14\u9700\u8981\u8fdb\u884c\u5f7b\u5e95\u7684\u6d4b\u8bd5\u6765\u4fdd\u8bc1\u573a\u666f\u4e2d\u6ca1\u6709\u7269\u4f53\u4f1a\u4ea7\u751f\u6df1\u5ea6\u51b2\u7a81\u3002 \u7b2c\u4e8c\u4e2a\u6280\u5de7\u662f \u5c3d\u53ef\u80fd\u5c06\u8fd1\u5e73\u9762\u8bbe\u7f6e\u8fdc\u4e00\u4e9b \u3002\u5728\u524d\u9762\u6211\u4eec\u63d0\u5230\u4e86\u7cbe\u5ea6\u5728\u9760\u8fd1 \u8fd1 \u5e73\u9762\u65f6\u662f\u975e\u5e38\u9ad8\u7684\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u5c06 \u8fd1 \u5e73\u9762\u8fdc\u79bb\u89c2\u5bdf\u8005\uff0c\u6211\u4eec\u5c06\u4f1a\u5bf9\u6574\u4e2a\u5e73\u622a\u5934\u4f53\u6709\u7740\u66f4\u5927\u7684\u7cbe\u5ea6\u3002\u7136\u800c\uff0c\u5c06\u8fd1\u5e73\u9762\u8bbe\u7f6e\u592a\u8fdc\u5c06\u4f1a\u5bfc\u81f4\u8fd1\u5904\u7684\u7269\u4f53\u88ab\u88c1\u526a\u6389\uff0c\u6240\u4ee5\u8fd9\u901a\u5e38\u9700\u8981\u5b9e\u9a8c\u548c\u5fae\u8c03\u6765\u51b3\u5b9a\u6700\u9002\u5408\u4f60\u7684\u573a\u666f\u7684 \u8fd1 \u5e73\u9762\u8ddd\u79bb\u3002 \u53e6\u5916\u4e00\u4e2a\u5f88\u597d\u7684\u6280\u5de7\u662f\u727a\u7272\u4e00\u4e9b\u6027\u80fd\uff0c \u4f7f\u7528\u66f4\u9ad8\u7cbe\u5ea6\u7684\u6df1\u5ea6\u7f13\u51b2 \u3002\u5927\u90e8\u5206\u6df1\u5ea6\u7f13\u51b2\u7684\u7cbe\u5ea6\u90fd\u662f24\u4f4d\u7684\uff0c\u4f46\u73b0\u5728\u5927\u90e8\u5206\u7684\u663e\u5361\u90fd\u652f\u630132\u4f4d\u7684\u6df1\u5ea6\u7f13\u51b2\uff0c\u8fd9\u5c06\u4f1a\u6781\u5927\u5730\u63d0\u9ad8\u7cbe\u5ea6\u3002\u6240\u4ee5\uff0c\u727a\u7272\u6389\u4e00\u4e9b\u6027\u80fd\uff0c\u4f60\u5c31\u80fd\u83b7\u5f97\u66f4\u9ad8\u7cbe\u5ea6\u7684\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u51cf\u5c11\u6df1\u5ea6\u51b2\u7a81\u3002 \u6211\u4eec\u4e0a\u9762\u8ba8\u8bba\u7684\u4e09\u4e2a\u6280\u672f\u662f\u6700\u666e\u904d\u4e5f\u662f\u5f88\u5bb9\u6613\u5b9e\u73b0\u7684\u6297\u6df1\u5ea6\u51b2\u7a81\u6280\u672f\u4e86\u3002\u8fd8\u6709\u4e00\u4e9b\u66f4\u590d\u6742\u7684\u6280\u672f\uff0c\u4f46\u5b83\u4eec\u4f9d\u7136\u4e0d\u80fd\u5b8c\u5168\u6d88\u9664\u6df1\u5ea6\u51b2\u7a81\u3002\u6df1\u5ea6\u51b2\u7a81\u662f\u4e00\u4e2a\u5e38\u89c1\u7684\u95ee\u9898\uff0c\u4f46\u5982\u679c\u4f60\u7ec4\u5408\u4f7f\u7528\u4e86\u4e0a\u9762\u5217\u4e3e\u51fa\u6765\u7684\u6280\u672f\uff0c\u4f60\u53ef\u80fd\u4e0d\u4f1a\u518d\u9700\u8981\u5904\u7406\u6df1\u5ea6\u51b2\u7a81\u4e86\u3002","title":"\u9632\u6b62\u6df1\u5ea6\u51b2\u7a81"},{"location":"04%20Advanced%20OpenGL/02%20Stencil%20testing/","text":"\u6a21\u677f\u6d4b\u8bd5 \u539f\u6587 Stencil testing \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u5f53\u7247\u6bb5\u7740\u8272\u5668\u5904\u7406\u5b8c\u4e00\u4e2a\u7247\u6bb5\u4e4b\u540e\uff0c \u6a21\u677f\u6d4b\u8bd5 (Stencil Test)\u4f1a\u5f00\u59cb\u6267\u884c\uff0c\u548c\u6df1\u5ea6\u6d4b\u8bd5\u4e00\u6837\uff0c\u5b83\u4e5f\u53ef\u80fd\u4f1a\u4e22\u5f03\u7247\u6bb5\u3002\u63a5\u4e0b\u6765\uff0c\u88ab\u4fdd\u7559\u7684\u7247\u6bb5\u4f1a\u8fdb\u5165\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u5b83\u53ef\u80fd\u4f1a\u4e22\u5f03\u66f4\u591a\u7684\u7247\u6bb5\u3002\u6a21\u677f\u6d4b\u8bd5\u662f\u6839\u636e\u53c8\u4e00\u4e2a\u7f13\u51b2\u6765\u8fdb\u884c\u7684\uff0c\u5b83\u53eb\u505a \u6a21\u677f\u7f13\u51b2 (Stencil Buffer)\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6e32\u67d3\u7684\u65f6\u5019\u66f4\u65b0\u5b83\u6765\u83b7\u5f97\u4e00\u4e9b\u5f88\u6709\u610f\u601d\u7684\u6548\u679c\u3002 \u4e00\u4e2a\u6a21\u677f\u7f13\u51b2\u4e2d\uff0c\uff08\u901a\u5e38\uff09\u6bcf\u4e2a \u6a21\u677f\u503c (Stencil Value)\u662f8\u4f4d\u7684\u3002\u6240\u4ee5\u6bcf\u4e2a\u50cf\u7d20/\u7247\u6bb5\u4e00\u5171\u80fd\u6709256\u79cd\u4e0d\u540c\u7684\u6a21\u677f\u503c\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u6a21\u677f\u503c\u8bbe\u7f6e\u4e3a\u6211\u4eec\u60f3\u8981\u7684\u503c\uff0c\u7136\u540e\u5f53\u67d0\u4e00\u4e2a\u7247\u6bb5\u6709\u67d0\u4e00\u4e2a\u6a21\u677f\u503c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u9009\u62e9\u4e22\u5f03\u6216\u662f\u4fdd\u7559\u8fd9\u4e2a\u7247\u6bb5\u4e86\u3002 Important \u6bcf\u4e2a\u7a97\u53e3\u5e93\u90fd\u9700\u8981\u4e3a\u4f60\u914d\u7f6e\u4e00\u4e2a\u6a21\u677f\u7f13\u51b2\u3002GLFW\u81ea\u52a8\u505a\u4e86\u8fd9\u4ef6\u4e8b\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u544a\u8bc9GLFW\u6765\u521b\u5efa\u4e00\u4e2a\uff0c\u4f46\u5176\u5b83\u7684\u7a97\u53e3\u5e93\u53ef\u80fd\u4e0d\u4f1a\u9ed8\u8ba4\u7ed9\u4f60\u521b\u5efa\u4e00\u4e2a\u6a21\u677f\u5e93\uff0c\u6240\u4ee5\u8bb0\u5f97\u8981\u67e5\u770b\u5e93\u7684\u6587\u6863\u3002 \u6a21\u677f\u7f13\u51b2\u7684\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b\uff1a \u6a21\u677f\u7f13\u51b2\u9996\u5148\u4f1a\u88ab\u6e05\u9664\u4e3a0\uff0c\u4e4b\u540e\u5728\u6a21\u677f\u7f13\u51b2\u4e2d\u4f7f\u75281\u586b\u5145\u4e86\u4e00\u4e2a\u7a7a\u5fc3\u77e9\u5f62\u3002\u573a\u666f\u4e2d\u7684\u7247\u6bb5\u5c06\u4f1a\u53ea\u5728\u7247\u6bb5\u7684\u6a21\u677f\u503c\u4e3a1\u7684\u65f6\u5019\u4f1a\u88ab\u6e32\u67d3\uff08\u5176\u5b83\u7684\u90fd\u88ab\u4e22\u5f03\u4e86\uff09\u3002 \u6a21\u677f\u7f13\u51b2\u64cd\u4f5c\u5141\u8bb8\u6211\u4eec\u5728\u6e32\u67d3\u7247\u6bb5\u65f6\u5c06\u6a21\u677f\u7f13\u51b2\u8bbe\u5b9a\u4e3a\u4e00\u4e2a\u7279\u5b9a\u7684\u503c\u3002\u901a\u8fc7\u5728\u6e32\u67d3\u65f6\u4fee\u6539\u6a21\u677f\u7f13\u51b2\u7684\u5185\u5bb9\uff0c\u6211\u4eec \u5199\u5165 \u4e86\u6a21\u677f\u7f13\u51b2\u3002\u5728\u540c\u4e00\u4e2a\uff08\u6216\u8005\u63a5\u4e0b\u6765\u7684\uff09\u5e27\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5 \u8bfb\u53d6 \u8fd9\u4e9b\u503c\uff0c\u6765\u51b3\u5b9a\u4e22\u5f03\u8fd8\u662f\u4fdd\u7559\u67d0\u4e2a\u7247\u6bb5\u3002\u4f7f\u7528\u6a21\u677f\u7f13\u51b2\u7684\u65f6\u5019\u4f60\u53ef\u4ee5\u5c3d\u60c5\u53d1\u6325\uff0c\u4f46\u5927\u4f53\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a \u542f\u7528\u6a21\u677f\u7f13\u51b2\u7684\u5199\u5165\u3002 \u6e32\u67d3\u7269\u4f53\uff0c\u66f4\u65b0\u6a21\u677f\u7f13\u51b2\u7684\u5185\u5bb9\u3002 \u7981\u7528\u6a21\u677f\u7f13\u51b2\u7684\u5199\u5165\u3002 \u6e32\u67d3\uff08\u5176\u5b83\uff09\u7269\u4f53\uff0c\u8fd9\u6b21\u6839\u636e\u6a21\u677f\u7f13\u51b2\u7684\u5185\u5bb9\u4e22\u5f03\u7279\u5b9a\u7684\u7247\u6bb5\u3002 \u6240\u4ee5\uff0c\u901a\u8fc7\u4f7f\u7528\u6a21\u677f\u7f13\u51b2\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u573a\u666f\u4e2d\u5df2\u7ed8\u5236\u7684\u5176\u5b83\u7269\u4f53\u7684\u7247\u6bb5\uff0c\u6765\u51b3\u5b9a\u662f\u5426\u4e22\u5f03\u7279\u5b9a\u7684\u7247\u6bb5\u3002 \u4f60\u53ef\u4ee5\u542f\u7528 GL_STENCIL_TEST \u6765\u542f\u7528\u6a21\u677f\u6d4b\u8bd5\u3002\u5728\u8fd9\u4e00\u884c\u4ee3\u7801\u4e4b\u540e\uff0c\u6240\u6709\u7684\u6e32\u67d3\u8c03\u7528\u90fd\u4f1a\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5f71\u54cd\u7740\u6a21\u677f\u7f13\u51b2\u3002 glEnable(GL_STENCIL_TEST); \u6ce8\u610f\uff0c\u548c\u989c\u8272\u548c\u6df1\u5ea6\u7f13\u51b2\u4e00\u6837\uff0c\u4f60\u4e5f\u9700\u8981\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e4b\u524d\u6e05\u9664\u6a21\u677f\u7f13\u51b2\u3002 glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT | GL_STENCIL_BUFFER_BIT); \u548c\u6df1\u5ea6\u6d4b\u8bd5\u7684 glDepthMask \u51fd\u6570\u4e00\u6837\uff0c\u6a21\u677f\u7f13\u51b2\u4e5f\u6709\u4e00\u4e2a\u7c7b\u4f3c\u7684\u51fd\u6570\u3002 glStencilMask \u5141\u8bb8\u6211\u4eec\u8bbe\u7f6e\u4e00\u4e2a\u4f4d\u63a9\u7801(Bitmask)\uff0c\u5b83\u4f1a\u4e0e\u5c06\u8981\u5199\u5165\u7f13\u51b2\u7684\u6a21\u677f\u503c\u8fdb\u884c\u4e0e(AND)\u8fd0\u7b97\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u8bbe\u7f6e\u7684\u4f4d\u63a9\u7801\u6240\u6709\u4f4d\u90fd\u4e3a1\uff0c\u4e0d\u5f71\u54cd\u8f93\u51fa\uff0c\u4f46\u5982\u679c\u6211\u4eec\u5c06\u5b83\u8bbe\u7f6e\u4e3a 0x00 \uff0c\u5199\u5165\u7f13\u51b2\u7684\u6240\u6709\u6a21\u677f\u503c\u6700\u540e\u90fd\u4f1a\u53d8\u62100.\u8fd9\u4e0e\u6df1\u5ea6\u6d4b\u8bd5\u4e2d\u7684 glDepthMask(GL_FALSE) \u662f\u7b49\u4ef7\u7684\u3002 glStencilMask(0xFF); // \u6bcf\u4e00\u4f4d\u5199\u5165\u6a21\u677f\u7f13\u51b2\u65f6\u90fd\u4fdd\u6301\u539f\u6837 glStencilMask(0x00); // \u6bcf\u4e00\u4f4d\u5728\u5199\u5165\u6a21\u677f\u7f13\u51b2\u65f6\u90fd\u4f1a\u53d8\u62100\uff08\u7981\u7528\u5199\u5165\uff09 \u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u4f60\u90fd\u53ea\u4f1a\u4f7f\u7528 0x00 \u6216\u8005 0xFF \u4f5c\u4e3a\u6a21\u677f\u63a9\u7801(Stencil Mask)\uff0c\u4f46\u662f\u77e5\u9053\u6709\u9009\u9879\u53ef\u4ee5\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u7684\u4f4d\u63a9\u7801\u603b\u662f\u597d\u7684\u3002 \u6a21\u677f\u51fd\u6570 \u548c\u6df1\u5ea6\u6d4b\u8bd5\u4e00\u6837\uff0c\u6211\u4eec\u5bf9\u6a21\u677f\u7f13\u51b2\u5e94\u8be5\u901a\u8fc7\u8fd8\u662f\u5931\u8d25\uff0c\u4ee5\u53ca\u5b83\u5e94\u8be5\u5982\u4f55\u5f71\u54cd\u6a21\u677f\u7f13\u51b2\uff0c\u4e5f\u662f\u6709\u4e00\u5b9a\u63a7\u5236\u7684\u3002\u4e00\u5171\u6709\u4e24\u4e2a\u51fd\u6570\u80fd\u591f\u7528\u6765\u914d\u7f6e\u6a21\u677f\u6d4b\u8bd5\uff1a glStencilFunc \u548c glStencilOp \u3002 glStencilFunc(GLenum func, GLint ref, GLuint mask) \u4e00\u5171\u5305\u542b\u4e09\u4e2a\u53c2\u6570\uff1a func \uff1a\u8bbe\u7f6e\u6a21\u677f\u6d4b\u8bd5\u51fd\u6570(Stencil Test Function)\u3002\u8fd9\u4e2a\u6d4b\u8bd5\u51fd\u6570\u5c06\u4f1a\u5e94\u7528\u5230\u5df2\u50a8\u5b58\u7684\u6a21\u677f\u503c\u4e0a\u548c glStencilFunc \u51fd\u6570\u7684 ref \u503c\u4e0a\u3002\u53ef\u7528\u7684\u9009\u9879\u6709\uff1a GL_NEVER \u3001 GL_LESS \u3001 GL_LEQUAL \u3001 GL_GREATER \u3001 GL_GEQUAL \u3001 GL_EQUAL \u3001 GL_NOTEQUAL \u548c GL_ALWAYS \u3002\u5b83\u4eec\u7684\u8bed\u4e49\u548c\u6df1\u5ea6\u7f13\u51b2\u7684\u51fd\u6570\u7c7b\u4f3c\u3002 ref \uff1a\u8bbe\u7f6e\u4e86\u6a21\u677f\u6d4b\u8bd5\u7684\u53c2\u8003\u503c(Reference Value)\u3002\u6a21\u677f\u7f13\u51b2\u7684\u5185\u5bb9\u5c06\u4f1a\u4e0e\u8fd9\u4e2a\u503c\u8fdb\u884c\u6bd4\u8f83\u3002 mask \uff1a\u8bbe\u7f6e\u4e00\u4e2a\u63a9\u7801\uff0c\u5b83\u5c06\u4f1a\u4e0e\u53c2\u8003\u503c\u548c\u50a8\u5b58\u7684\u6a21\u677f\u503c\u5728\u6d4b\u8bd5\u6bd4\u8f83\u5b83\u4eec\u4e4b\u524d\u8fdb\u884c\u4e0e(AND)\u8fd0\u7b97\u3002\u521d\u59cb\u60c5\u51b5\u4e0b\u6240\u6709\u4f4d\u90fd\u4e3a1\u3002 \u5728\u4e00\u5f00\u59cb\u7684\u90a3\u4e2a\u7b80\u5355\u7684\u6a21\u677f\u4f8b\u5b50\u4e2d\uff0c\u51fd\u6570\u88ab\u8bbe\u7f6e\u4e3a\uff1a glStencilFunc(GL_EQUAL, 1, 0xFF) \u8fd9\u4f1a\u544a\u8bc9OpenGL\uff0c\u53ea\u8981\u4e00\u4e2a\u7247\u6bb5\u7684\u6a21\u677f\u503c\u7b49\u4e8e( GL_EQUAL )\u53c2\u8003\u503c1\uff0c\u7247\u6bb5\u5c06\u4f1a\u901a\u8fc7\u6d4b\u8bd5\u5e76\u88ab\u7ed8\u5236\uff0c\u5426\u5219\u4f1a\u88ab\u4e22\u5f03\u3002 \u4f46\u662f glStencilFunc \u4ec5\u4ec5\u63cf\u8ff0\u4e86OpenGL\u5e94\u8be5\u5bf9\u6a21\u677f\u7f13\u51b2\u5185\u5bb9\u505a\u4ec0\u4e48\uff0c\u800c\u4e0d\u662f\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u66f4\u65b0\u7f13\u51b2\u3002\u8fd9\u5c31\u9700\u8981 glStencilOp \u8fd9\u4e2a\u51fd\u6570\u4e86\u3002 glStencilOp(GLenum sfail, GLenum dpfail, GLenum dppass) \u4e00\u5171\u5305\u542b\u4e09\u4e2a\u9009\u9879\uff0c\u6211\u4eec\u80fd\u591f\u8bbe\u5b9a\u6bcf\u4e2a\u9009\u9879\u5e94\u8be5\u91c7\u53d6\u7684\u884c\u4e3a\uff1a sfail \uff1a\u6a21\u677f\u6d4b\u8bd5\u5931\u8d25\u65f6\u91c7\u53d6\u7684\u884c\u4e3a\u3002 dpfail \uff1a\u6a21\u677f\u6d4b\u8bd5\u901a\u8fc7\uff0c\u4f46\u6df1\u5ea6\u6d4b\u8bd5\u5931\u8d25\u65f6\u91c7\u53d6\u7684\u884c\u4e3a\u3002 dppass \uff1a\u6a21\u677f\u6d4b\u8bd5\u548c\u6df1\u5ea6\u6d4b\u8bd5\u90fd\u901a\u8fc7\u65f6\u91c7\u53d6\u7684\u884c\u4e3a\u3002 \u6bcf\u4e2a\u9009\u9879\u90fd\u53ef\u4ee5\u9009\u7528\u4ee5\u4e0b\u7684\u5176\u4e2d\u4e00\u79cd\u884c\u4e3a\uff1a \u884c\u4e3a \u63cf\u8ff0 GL_KEEP \u4fdd\u6301\u5f53\u524d\u50a8\u5b58\u7684\u6a21\u677f\u503c GL_ZERO \u5c06\u6a21\u677f\u503c\u8bbe\u7f6e\u4e3a0 GL_REPLACE \u5c06\u6a21\u677f\u503c\u8bbe\u7f6e\u4e3a glStencilFunc \u51fd\u6570\u8bbe\u7f6e\u7684 ref \u503c GL_INCR \u5982\u679c\u6a21\u677f\u503c\u5c0f\u4e8e\u6700\u5927\u503c\u5219\u5c06\u6a21\u677f\u503c\u52a01 GL_INCR_WRAP \u4e0e GL_INCR \u4e00\u6837\uff0c\u4f46\u5982\u679c\u6a21\u677f\u503c\u8d85\u8fc7\u4e86\u6700\u5927\u503c\u5219\u5f52\u96f6 GL_DECR \u5982\u679c\u6a21\u677f\u503c\u5927\u4e8e\u6700\u5c0f\u503c\u5219\u5c06\u6a21\u677f\u503c\u51cf1 GL_DECR_WRAP \u4e0e GL_DECR \u4e00\u6837\uff0c\u4f46\u5982\u679c\u6a21\u677f\u503c\u5c0f\u4e8e0\u5219\u5c06\u5176\u8bbe\u7f6e\u4e3a\u6700\u5927\u503c GL_INVERT \u6309\u4f4d\u7ffb\u8f6c\u5f53\u524d\u7684\u6a21\u677f\u7f13\u51b2\u503c \u9ed8\u8ba4\u60c5\u51b5\u4e0b glStencilOp \u662f\u8bbe\u7f6e\u4e3a (GL_KEEP, GL_KEEP, GL_KEEP) \u7684\uff0c\u6240\u4ee5\u4e0d\u8bba\u4efb\u4f55\u6d4b\u8bd5\u7684\u7ed3\u679c\u662f\u5982\u4f55\uff0c\u6a21\u677f\u7f13\u51b2\u90fd\u4f1a\u4fdd\u7559\u5b83\u7684\u503c\u3002\u9ed8\u8ba4\u7684\u884c\u4e3a\u4e0d\u4f1a\u66f4\u65b0\u6a21\u677f\u7f13\u51b2\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u60f3\u5199\u5165\u6a21\u677f\u7f13\u51b2\u7684\u8bdd\uff0c\u4f60\u9700\u8981\u81f3\u5c11\u5bf9\u5176\u4e2d\u4e00\u4e2a\u9009\u9879\u8bbe\u7f6e\u4e0d\u540c\u7684\u503c\u3002 \u6240\u4ee5\uff0c\u901a\u8fc7\u4f7f\u7528 glStencilFunc \u548c glStencilOp \uff0c\u6211\u4eec\u53ef\u4ee5\u7cbe\u786e\u5730\u6307\u5b9a\u66f4\u65b0\u6a21\u677f\u7f13\u51b2\u7684\u65f6\u673a\u4e0e\u884c\u4e3a\u4e86\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6307\u5b9a\u4ec0\u4e48\u65f6\u5019\u8be5\u8ba9\u6a21\u677f\u7f13\u51b2\u901a\u8fc7\uff0c\u5373\u4ec0\u4e48\u65f6\u5019\u7247\u6bb5\u9700\u8981\u88ab\u4e22\u5f03\u3002 \u7269\u4f53\u8f6e\u5ed3 \u4ec5\u4ec5\u770b\u4e86\u524d\u9762\u7684\u90e8\u5206\u4f60\u8fd8\u662f\u4e0d\u592a\u53ef\u80fd\u80fd\u591f\u5b8c\u5168\u7406\u89e3\u6a21\u677f\u6d4b\u8bd5\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u4f1a\u5c55\u793a\u4e00\u4e2a\u4f7f\u7528\u6a21\u677f\u6d4b\u8bd5\u5c31\u53ef\u4ee5\u5b8c\u6210\u7684\u6709\u7528\u7279\u6027\uff0c\u5b83\u53eb\u505a \u7269\u4f53\u8f6e\u5ed3 (Object Outlining)\u3002 \u7269\u4f53\u8f6e\u5ed3\u6240\u80fd\u505a\u7684\u4e8b\u60c5\u6b63\u5982\u5b83\u540d\u5b57\u6240\u63cf\u8ff0\u7684\u90a3\u6837\u3002\u6211\u4eec\u5c06\u4f1a\u4e3a\u6bcf\u4e2a\uff08\u6216\u8005\u4e00\u4e2a\uff09\u7269\u4f53\u5728\u5b83\u7684\u5468\u56f4\u521b\u5efa\u4e00\u4e2a\u5f88\u5c0f\u7684\u6709\u8272\u8fb9\u6846\u3002\u5f53\u4f60\u60f3\u8981\u5728\u7b56\u7565\u6e38\u620f\u4e2d\u9009\u4e2d\u4e00\u4e2a\u5355\u4f4d\u8fdb\u884c\u64cd\u4f5c\u7684\uff0c\u60f3\u8981\u544a\u8bc9\u73a9\u5bb6\u9009\u4e2d\u7684\u662f\u54ea\u4e2a\u5355\u4f4d\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u6548\u679c\u5c31\u975e\u5e38\u6709\u7528\u4e86\u3002\u4e3a\u7269\u4f53\u521b\u5efa\u8f6e\u5ed3\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a \u542f\u7528\u6a21\u677f\u5199\u5165\u3002 \u5728\u7ed8\u5236\uff08\u9700\u8981\u6dfb\u52a0\u8f6e\u5ed3\u7684\uff09\u7269\u4f53\u4e4b\u524d\uff0c\u5c06\u6a21\u677f\u51fd\u6570\u8bbe\u7f6e\u4e3a GL_ALWAYS \uff0c\u6bcf\u5f53\u7269\u4f53\u7684\u7247\u6bb5\u88ab\u6e32\u67d3\u65f6\uff0c\u5c06\u6a21\u677f\u7f13\u51b2\u66f4\u65b0\u4e3a1\u3002 \u6e32\u67d3\u7269\u4f53\u3002 \u7981\u7528\u6a21\u677f\u5199\u5165\u4ee5\u53ca\u6df1\u5ea6\u6d4b\u8bd5\u3002 \u5c06\u6bcf\u4e2a\u7269\u4f53\u7f29\u653e\u4e00\u70b9\u70b9\u3002 \u4f7f\u7528\u4e00\u4e2a\u4e0d\u540c\u7684\u7247\u6bb5\u7740\u8272\u5668\uff0c\u8f93\u51fa\u4e00\u4e2a\u5355\u72ec\u7684\uff08\u8fb9\u6846\uff09\u989c\u8272\u3002 \u518d\u6b21\u7ed8\u5236\u7269\u4f53\uff0c\u4f46\u53ea\u5728\u5b83\u4eec\u7247\u6bb5\u7684\u6a21\u677f\u503c\u4e0d\u7b49\u4e8e1\u65f6\u624d\u7ed8\u5236\u3002 \u518d\u6b21\u542f\u7528\u6a21\u677f\u5199\u5165\u548c\u6df1\u5ea6\u6d4b\u8bd5\u3002 \u8fd9\u4e2a\u8fc7\u7a0b\u5c06\u6bcf\u4e2a\u7269\u4f53\u7684\u7247\u6bb5\u7684\u6a21\u677f\u7f13\u51b2\u8bbe\u7f6e\u4e3a1\uff0c\u5f53\u6211\u4eec\u60f3\u8981\u7ed8\u5236\u8fb9\u6846\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e3b\u8981\u7ed8\u5236\u653e\u5927\u7248\u672c\u7684\u7269\u4f53\u4e2d\u6a21\u677f\u6d4b\u8bd5\u901a\u8fc7\u7684\u90e8\u5206\uff0c\u4e5f\u5c31\u662f\u7269\u4f53\u7684\u8fb9\u6846\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u4e3b\u8981\u4f7f\u7528\u6a21\u677f\u7f13\u51b2\u4e22\u5f03\u4e86\u653e\u5927\u7248\u672c\u4e2d\u5c5e\u4e8e\u539f\u7269\u4f53\u7247\u6bb5\u7684\u90e8\u5206\u3002 \u6240\u4ee5\u6211\u4eec\u9996\u5148\u6765\u521b\u5efa\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u7247\u6bb5\u7740\u8272\u5668\uff0c\u5b83\u4f1a\u8f93\u51fa\u4e00\u4e2a\u8fb9\u6846\u989c\u8272\u3002\u6211\u4eec\u7b80\u5355\u5730\u7ed9\u5b83\u8bbe\u7f6e\u4e00\u4e2a\u786c\u7f16\u7801\u7684\u989c\u8272\u503c\uff0c\u5c06\u8fd9\u4e2a\u7740\u8272\u5668\u547d\u540d\u4e3a shaderSingleColor \uff1a void main() { FragColor = vec4(0.04, 0.28, 0.26, 1.0); } \u6211\u4eec\u53ea\u60f3\u7ed9\u90a3\u4e24\u4e2a\u7bb1\u5b50\u52a0\u4e0a\u8fb9\u6846\uff0c\u6240\u4ee5\u6211\u4eec\u8ba9\u5730\u677f\u4e0d\u53c2\u4e0e\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u6211\u4eec\u5e0c\u671b\u9996\u5148\u7ed8\u5236\u5730\u677f\uff0c\u518d\u7ed8\u5236\u4e24\u4e2a\u7bb1\u5b50\uff08\u5e76\u5199\u5165\u6a21\u677f\u7f13\u51b2\uff09\uff0c\u4e4b\u540e\u7ed8\u5236\u653e\u5927\u7684\u7bb1\u5b50\uff08\u5e76\u4e22\u5f03\u8986\u76d6\u4e86\u4e4b\u524d\u7ed8\u5236\u7684\u7bb1\u5b50\u7247\u6bb5\u7684\u90a3\u4e9b\u7247\u6bb5\uff09\u3002 \u6211\u4eec\u9996\u5148\u542f\u7528\u6a21\u677f\u6d4b\u8bd5\uff1a glEnable(GL_STENCIL_TEST); \u5e76\u8bbe\u7f6e\u5728\u6bcf\u4e00\u5e27\u4e2d\u6a21\u677f\u6d4b\u8bd5\u901a\u8fc7\u6216\u5931\u8d25\u65f6\uff0c\u9700\u8981\u6267\u884c\u7684\u64cd\u4f5c\uff1a glStencilOp(GL_KEEP, GL_KEEP, GL_REPLACE); \u5982\u679c\u5176\u4e2d\u7684\u4e00\u4e2a\u6d4b\u8bd5\u5931\u8d25\u4e86\uff0c\u6211\u4eec\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u6211\u4eec\u4ec5\u4ec5\u4fdd\u7559\u5f53\u524d\u50a8\u5b58\u5728\u6a21\u677f\u7f13\u51b2\u4e2d\u7684\u503c\u3002\u5982\u679c\u6a21\u677f\u6d4b\u8bd5\u548c\u6df1\u5ea6\u6d4b\u8bd5\u90fd\u901a\u8fc7\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5e0c\u671b\u5c06\u50a8\u5b58\u7684\u6a21\u677f\u503c\u8bbe\u7f6e\u4e3a\u53c2\u8003\u503c\uff0c\u53c2\u8003\u503c\u80fd\u591f\u901a\u8fc7 glStencilFunc \u6765\u8bbe\u7f6e\uff0c\u6211\u4eec\u4e4b\u540e\u4f1a\u8bbe\u7f6e\u4e3a1\u3002 \u6211\u4eec\u5c06\u6a21\u677f\u7f13\u51b2\u6e05\u9664\u4e3a0\uff0c\u5bf9\u7bb1\u5b50\u4e2d\u6240\u6709\u7ed8\u5236\u7684\u7247\u6bb5\uff0c\u5c06\u6a21\u677f\u503c\u66f4\u65b0\u4e3a1\uff1a glStencilOp(GL_KEEP, GL_KEEP, GL_REPLACE); glStencilFunc(GL_ALWAYS, 1, 0xFF); // \u6240\u6709\u7684\u7247\u6bb5\u90fd\u5e94\u8be5\u66f4\u65b0\u6a21\u677f\u7f13\u51b2 glStencilMask(0xFF); // \u542f\u7528\u6a21\u677f\u7f13\u51b2\u5199\u5165 normalShader.use(); DrawTwoContainers(); \u901a\u8fc7\u4f7f\u7528 GL_REPLACE \u6a21\u677f\u6d4b\u8bd5\u51fd\u6570\uff0c\u6211\u4eec\u4fdd\u8bc1\u4e86\u7bb1\u5b50\u7684\u6bcf\u4e2a\u7247\u6bb5\u90fd\u4f1a\u5c06\u6a21\u677f\u7f13\u51b2\u7684\u6a21\u677f\u503c\u66f4\u65b0\u4e3a1\u3002\u56e0\u4e3a\u7247\u6bb5\u6c38\u8fdc\u4f1a\u901a\u8fc7\u6a21\u677f\u6d4b\u8bd5\uff0c\u5728\u7ed8\u5236\u7247\u6bb5\u7684\u5730\u65b9\uff0c\u6a21\u677f\u7f13\u51b2\u4f1a\u88ab\u66f4\u65b0\u4e3a\u53c2\u8003\u503c\u3002 \u73b0\u5728\u6a21\u677f\u7f13\u51b2\u5728\u7bb1\u5b50\u88ab\u7ed8\u5236\u7684\u5730\u65b9\u90fd\u66f4\u65b0\u4e3a1\u4e86\uff0c\u6211\u4eec\u5c06\u8981\u7ed8\u5236\u653e\u5927\u7684\u7bb1\u5b50\uff0c\u4f46\u8fd9\u6b21\u8981\u7981\u7528\u6a21\u677f\u7f13\u51b2\u7684\u5199\u5165\uff1a glStencilFunc(GL_NOTEQUAL, 1, 0xFF); glStencilMask(0x00); // \u7981\u6b62\u6a21\u677f\u7f13\u51b2\u7684\u5199\u5165 glDisable(GL_DEPTH_TEST); shaderSingleColor.use(); DrawTwoScaledUpContainers(); \u6211\u4eec\u5c06\u6a21\u677f\u51fd\u6570\u8bbe\u7f6e\u4e3a GL_NOTEQUAL \uff0c\u5b83\u4f1a\u4fdd\u8bc1\u6211\u4eec\u53ea\u7ed8\u5236\u7bb1\u5b50\u4e0a\u6a21\u677f\u503c\u4e0d\u4e3a1\u7684\u90e8\u5206\uff0c\u5373\u53ea\u7ed8\u5236\u7bb1\u5b50\u5728\u4e4b\u524d\u7ed8\u5236\u7684\u7bb1\u5b50\u4e4b\u5916\u7684\u90e8\u5206\u3002\u6ce8\u610f\u6211\u4eec\u4e5f\u7981\u7528\u4e86\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u8ba9\u653e\u5927\u7684\u7bb1\u5b50\uff0c\u5373\u8fb9\u6846\uff0c\u4e0d\u4f1a\u88ab\u5730\u677f\u6240\u8986\u76d6\u3002 \u8bb0\u5f97\u8981\u5728\u5b8c\u6210\u4e4b\u540e\u91cd\u65b0\u542f\u7528\u6df1\u5ea6\u7f13\u51b2\u3002 \u573a\u666f\u4e2d\u7269\u4f53\u8f6e\u5ed3\u7684\u5b8c\u6574\u6b65\u9aa4\u4f1a\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a glEnable(GL_DEPTH_TEST); glStencilOp(GL_KEEP, GL_KEEP, GL_REPLACE); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT | GL_STENCIL_BUFFER_BIT); glStencilMask(0x00); // \u8bb0\u5f97\u4fdd\u8bc1\u6211\u4eec\u5728\u7ed8\u5236\u5730\u677f\u7684\u65f6\u5019\u4e0d\u4f1a\u66f4\u65b0\u6a21\u677f\u7f13\u51b2 normalShader.use(); DrawFloor() glStencilFunc(GL_ALWAYS, 1, 0xFF); glStencilMask(0xFF); DrawTwoContainers(); glStencilFunc(GL_NOTEQUAL, 1, 0xFF); glStencilMask(0x00); glDisable(GL_DEPTH_TEST); shaderSingleColor.use(); DrawTwoScaledUpContainers(); glStencilMask(0xFF); glEnable(GL_DEPTH_TEST); \u53ea\u8981\u4f60\u7406\u89e3\u4e86\u6a21\u677f\u7f13\u51b2\u80cc\u540e\u7684\u5927\u4f53\u601d\u8def\uff0c\u8fd9\u4e2a\u4ee3\u7801\u7247\u6bb5\u5c31\u4e0d\u662f\u90a3\u4e48\u96be\u7406\u89e3\u4e86\u3002\u5982\u679c\u8fd8\u662f\u4e0d\u80fd\u7406\u89e3\u7684\u8bdd\uff0c\u5c1d\u8bd5\u518d\u6b21\u4ed4\u7ec6\u9605\u8bfb\u4e4b\u524d\u7684\u90e8\u5206\uff0c\u5e76\u5c1d\u8bd5\u901a\u8fc7\u4e0a\u9762\u4f7f\u7528\u7684\u8303\u4f8b\uff0c\u5b8c\u5168\u7406\u89e3\u6bcf\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u3002 \u5728 \u6df1\u5ea6\u6d4b\u8bd5 \u5c0f\u8282\u7684\u573a\u666f\u4e2d\uff0c\u8fd9\u4e2a\u8f6e\u5ed3\u7b97\u6cd5\u7684\u7ed3\u679c\u770b\u8d77\u6765\u4f1a\u50cf\u662f\u8fd9\u6837\u7684\uff1a \u53ef\u4ee5\u5728 \u8fd9\u91cc \u67e5\u770b\u6e90\u4ee3\u7801\uff0c\u770b\u770b\u7269\u4f53\u8f6e\u5ed3\u7b97\u6cd5\u7684\u5b8c\u6574\u4ee3\u7801\u3002 Important \u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u4e24\u4e2a\u7bb1\u5b50\u7684\u8fb9\u6846\u91cd\u5408\u4e86\uff0c\u8fd9\u901a\u5e38\u90fd\u662f\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\uff08\u60f3\u60f3\u7b56\u7565\u6e38\u620f\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u9009\u62e910\u4e2a\u5355\u4f4d\uff0c\u5408\u5e76\u8fb9\u6846\u901a\u5e38\u662f\u6211\u4eec\u60f3\u9700\u8981\u7684\u7ed3\u679c\uff09\u3002\u5982\u679c\u4f60\u60f3\u8ba9\u6bcf\u4e2a\u7269\u4f53\u90fd\u6709\u4e00\u4e2a\u5b8c\u6574\u7684\u8fb9\u6846\uff0c\u4f60\u9700\u8981\u5bf9\u6bcf\u4e2a\u7269\u4f53\u90fd\u6e05\u7a7a\u6a21\u677f\u7f13\u51b2\uff0c\u5e76\u6709\u521b\u610f\u5730\u5229\u7528\u6df1\u5ea6\u7f13\u51b2\u3002 \u4f60\u770b\u5230\u7684\u7269\u4f53\u8f6e\u5ed3\u7b97\u6cd5\u5728\u9700\u8981\u663e\u793a\u9009\u4e2d\u7269\u4f53\u7684\u6e38\u620f\uff08\u60f3\u60f3\u7b56\u7565\u6e38\u620f\uff09\u4e2d\u975e\u5e38\u5e38\u89c1\u3002\u8fd9\u6837\u7684\u7b97\u6cd5\u80fd\u591f\u5728\u4e00\u4e2a\u6a21\u578b\u7c7b\u4e2d\u8f7b\u677e\u5b9e\u73b0\u3002\u4f60\u53ef\u4ee5\u5728\u6a21\u578b\u7c7b\u4e2d\u8bbe\u7f6e\u4e00\u4e2aboolean\u6807\u8bb0\uff0c\u6765\u8bbe\u7f6e\u9700\u4e0d\u9700\u8981\u7ed8\u5236\u8fb9\u6846\u3002\u5982\u679c\u4f60\u6709\u521b\u9020\u529b\u7684\u8bdd\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u540e\u671f\u5904\u7406\u6ee4\u955c(Filter)\uff0c\u50cf\u662f\u9ad8\u65af\u6a21\u7cca(Gaussian Blur)\uff0c\u8ba9\u8fb9\u6846\u770b\u8d77\u6765\u66f4\u81ea\u7136\u3002 \u9664\u4e86\u7269\u4f53\u8f6e\u5ed3\u4e4b\u5916\uff0c\u6a21\u677f\u6d4b\u8bd5\u8fd8\u6709\u5f88\u591a\u7528\u9014\uff0c\u6bd4\u5982\u5728\u4e00\u4e2a\u540e\u89c6\u955c\u4e2d\u7ed8\u5236\u7eb9\u7406\uff0c\u8ba9\u5b83\u80fd\u591f\u7ed8\u5236\u5230\u955c\u5b50\u5f62\u72b6\u4e2d\uff0c\u6216\u8005\u4f7f\u7528\u4e00\u4e2a\u53eb\u505a\u9634\u5f71\u4f53\u79ef(Shadow Volume)\u7684\u6a21\u677f\u7f13\u51b2\u6280\u672f\u6e32\u67d3\u5b9e\u65f6\u9634\u5f71\u3002\u6a21\u677f\u7f13\u51b2\u4e3a\u6211\u4eec\u5df2\u7ecf\u5f88\u4e30\u5bcc\u7684OpenGL\u5de5\u5177\u7bb1\u53c8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u5de5\u5177\u3002","title":"\u6a21\u677f\u6d4b\u8bd5"},{"location":"04%20Advanced%20OpenGL/02%20Stencil%20testing/#_1","text":"\u539f\u6587 Stencil testing \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u5f53\u7247\u6bb5\u7740\u8272\u5668\u5904\u7406\u5b8c\u4e00\u4e2a\u7247\u6bb5\u4e4b\u540e\uff0c \u6a21\u677f\u6d4b\u8bd5 (Stencil Test)\u4f1a\u5f00\u59cb\u6267\u884c\uff0c\u548c\u6df1\u5ea6\u6d4b\u8bd5\u4e00\u6837\uff0c\u5b83\u4e5f\u53ef\u80fd\u4f1a\u4e22\u5f03\u7247\u6bb5\u3002\u63a5\u4e0b\u6765\uff0c\u88ab\u4fdd\u7559\u7684\u7247\u6bb5\u4f1a\u8fdb\u5165\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u5b83\u53ef\u80fd\u4f1a\u4e22\u5f03\u66f4\u591a\u7684\u7247\u6bb5\u3002\u6a21\u677f\u6d4b\u8bd5\u662f\u6839\u636e\u53c8\u4e00\u4e2a\u7f13\u51b2\u6765\u8fdb\u884c\u7684\uff0c\u5b83\u53eb\u505a \u6a21\u677f\u7f13\u51b2 (Stencil Buffer)\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6e32\u67d3\u7684\u65f6\u5019\u66f4\u65b0\u5b83\u6765\u83b7\u5f97\u4e00\u4e9b\u5f88\u6709\u610f\u601d\u7684\u6548\u679c\u3002 \u4e00\u4e2a\u6a21\u677f\u7f13\u51b2\u4e2d\uff0c\uff08\u901a\u5e38\uff09\u6bcf\u4e2a \u6a21\u677f\u503c (Stencil Value)\u662f8\u4f4d\u7684\u3002\u6240\u4ee5\u6bcf\u4e2a\u50cf\u7d20/\u7247\u6bb5\u4e00\u5171\u80fd\u6709256\u79cd\u4e0d\u540c\u7684\u6a21\u677f\u503c\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u6a21\u677f\u503c\u8bbe\u7f6e\u4e3a\u6211\u4eec\u60f3\u8981\u7684\u503c\uff0c\u7136\u540e\u5f53\u67d0\u4e00\u4e2a\u7247\u6bb5\u6709\u67d0\u4e00\u4e2a\u6a21\u677f\u503c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u9009\u62e9\u4e22\u5f03\u6216\u662f\u4fdd\u7559\u8fd9\u4e2a\u7247\u6bb5\u4e86\u3002 Important \u6bcf\u4e2a\u7a97\u53e3\u5e93\u90fd\u9700\u8981\u4e3a\u4f60\u914d\u7f6e\u4e00\u4e2a\u6a21\u677f\u7f13\u51b2\u3002GLFW\u81ea\u52a8\u505a\u4e86\u8fd9\u4ef6\u4e8b\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u544a\u8bc9GLFW\u6765\u521b\u5efa\u4e00\u4e2a\uff0c\u4f46\u5176\u5b83\u7684\u7a97\u53e3\u5e93\u53ef\u80fd\u4e0d\u4f1a\u9ed8\u8ba4\u7ed9\u4f60\u521b\u5efa\u4e00\u4e2a\u6a21\u677f\u5e93\uff0c\u6240\u4ee5\u8bb0\u5f97\u8981\u67e5\u770b\u5e93\u7684\u6587\u6863\u3002 \u6a21\u677f\u7f13\u51b2\u7684\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b\uff1a \u6a21\u677f\u7f13\u51b2\u9996\u5148\u4f1a\u88ab\u6e05\u9664\u4e3a0\uff0c\u4e4b\u540e\u5728\u6a21\u677f\u7f13\u51b2\u4e2d\u4f7f\u75281\u586b\u5145\u4e86\u4e00\u4e2a\u7a7a\u5fc3\u77e9\u5f62\u3002\u573a\u666f\u4e2d\u7684\u7247\u6bb5\u5c06\u4f1a\u53ea\u5728\u7247\u6bb5\u7684\u6a21\u677f\u503c\u4e3a1\u7684\u65f6\u5019\u4f1a\u88ab\u6e32\u67d3\uff08\u5176\u5b83\u7684\u90fd\u88ab\u4e22\u5f03\u4e86\uff09\u3002 \u6a21\u677f\u7f13\u51b2\u64cd\u4f5c\u5141\u8bb8\u6211\u4eec\u5728\u6e32\u67d3\u7247\u6bb5\u65f6\u5c06\u6a21\u677f\u7f13\u51b2\u8bbe\u5b9a\u4e3a\u4e00\u4e2a\u7279\u5b9a\u7684\u503c\u3002\u901a\u8fc7\u5728\u6e32\u67d3\u65f6\u4fee\u6539\u6a21\u677f\u7f13\u51b2\u7684\u5185\u5bb9\uff0c\u6211\u4eec \u5199\u5165 \u4e86\u6a21\u677f\u7f13\u51b2\u3002\u5728\u540c\u4e00\u4e2a\uff08\u6216\u8005\u63a5\u4e0b\u6765\u7684\uff09\u5e27\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5 \u8bfb\u53d6 \u8fd9\u4e9b\u503c\uff0c\u6765\u51b3\u5b9a\u4e22\u5f03\u8fd8\u662f\u4fdd\u7559\u67d0\u4e2a\u7247\u6bb5\u3002\u4f7f\u7528\u6a21\u677f\u7f13\u51b2\u7684\u65f6\u5019\u4f60\u53ef\u4ee5\u5c3d\u60c5\u53d1\u6325\uff0c\u4f46\u5927\u4f53\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a \u542f\u7528\u6a21\u677f\u7f13\u51b2\u7684\u5199\u5165\u3002 \u6e32\u67d3\u7269\u4f53\uff0c\u66f4\u65b0\u6a21\u677f\u7f13\u51b2\u7684\u5185\u5bb9\u3002 \u7981\u7528\u6a21\u677f\u7f13\u51b2\u7684\u5199\u5165\u3002 \u6e32\u67d3\uff08\u5176\u5b83\uff09\u7269\u4f53\uff0c\u8fd9\u6b21\u6839\u636e\u6a21\u677f\u7f13\u51b2\u7684\u5185\u5bb9\u4e22\u5f03\u7279\u5b9a\u7684\u7247\u6bb5\u3002 \u6240\u4ee5\uff0c\u901a\u8fc7\u4f7f\u7528\u6a21\u677f\u7f13\u51b2\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u573a\u666f\u4e2d\u5df2\u7ed8\u5236\u7684\u5176\u5b83\u7269\u4f53\u7684\u7247\u6bb5\uff0c\u6765\u51b3\u5b9a\u662f\u5426\u4e22\u5f03\u7279\u5b9a\u7684\u7247\u6bb5\u3002 \u4f60\u53ef\u4ee5\u542f\u7528 GL_STENCIL_TEST \u6765\u542f\u7528\u6a21\u677f\u6d4b\u8bd5\u3002\u5728\u8fd9\u4e00\u884c\u4ee3\u7801\u4e4b\u540e\uff0c\u6240\u6709\u7684\u6e32\u67d3\u8c03\u7528\u90fd\u4f1a\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5f71\u54cd\u7740\u6a21\u677f\u7f13\u51b2\u3002 glEnable(GL_STENCIL_TEST); \u6ce8\u610f\uff0c\u548c\u989c\u8272\u548c\u6df1\u5ea6\u7f13\u51b2\u4e00\u6837\uff0c\u4f60\u4e5f\u9700\u8981\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e4b\u524d\u6e05\u9664\u6a21\u677f\u7f13\u51b2\u3002 glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT | GL_STENCIL_BUFFER_BIT); \u548c\u6df1\u5ea6\u6d4b\u8bd5\u7684 glDepthMask \u51fd\u6570\u4e00\u6837\uff0c\u6a21\u677f\u7f13\u51b2\u4e5f\u6709\u4e00\u4e2a\u7c7b\u4f3c\u7684\u51fd\u6570\u3002 glStencilMask \u5141\u8bb8\u6211\u4eec\u8bbe\u7f6e\u4e00\u4e2a\u4f4d\u63a9\u7801(Bitmask)\uff0c\u5b83\u4f1a\u4e0e\u5c06\u8981\u5199\u5165\u7f13\u51b2\u7684\u6a21\u677f\u503c\u8fdb\u884c\u4e0e(AND)\u8fd0\u7b97\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u8bbe\u7f6e\u7684\u4f4d\u63a9\u7801\u6240\u6709\u4f4d\u90fd\u4e3a1\uff0c\u4e0d\u5f71\u54cd\u8f93\u51fa\uff0c\u4f46\u5982\u679c\u6211\u4eec\u5c06\u5b83\u8bbe\u7f6e\u4e3a 0x00 \uff0c\u5199\u5165\u7f13\u51b2\u7684\u6240\u6709\u6a21\u677f\u503c\u6700\u540e\u90fd\u4f1a\u53d8\u62100.\u8fd9\u4e0e\u6df1\u5ea6\u6d4b\u8bd5\u4e2d\u7684 glDepthMask(GL_FALSE) \u662f\u7b49\u4ef7\u7684\u3002 glStencilMask(0xFF); // \u6bcf\u4e00\u4f4d\u5199\u5165\u6a21\u677f\u7f13\u51b2\u65f6\u90fd\u4fdd\u6301\u539f\u6837 glStencilMask(0x00); // \u6bcf\u4e00\u4f4d\u5728\u5199\u5165\u6a21\u677f\u7f13\u51b2\u65f6\u90fd\u4f1a\u53d8\u62100\uff08\u7981\u7528\u5199\u5165\uff09 \u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u4f60\u90fd\u53ea\u4f1a\u4f7f\u7528 0x00 \u6216\u8005 0xFF \u4f5c\u4e3a\u6a21\u677f\u63a9\u7801(Stencil Mask)\uff0c\u4f46\u662f\u77e5\u9053\u6709\u9009\u9879\u53ef\u4ee5\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u7684\u4f4d\u63a9\u7801\u603b\u662f\u597d\u7684\u3002","title":"\u6a21\u677f\u6d4b\u8bd5"},{"location":"04%20Advanced%20OpenGL/02%20Stencil%20testing/#_2","text":"\u548c\u6df1\u5ea6\u6d4b\u8bd5\u4e00\u6837\uff0c\u6211\u4eec\u5bf9\u6a21\u677f\u7f13\u51b2\u5e94\u8be5\u901a\u8fc7\u8fd8\u662f\u5931\u8d25\uff0c\u4ee5\u53ca\u5b83\u5e94\u8be5\u5982\u4f55\u5f71\u54cd\u6a21\u677f\u7f13\u51b2\uff0c\u4e5f\u662f\u6709\u4e00\u5b9a\u63a7\u5236\u7684\u3002\u4e00\u5171\u6709\u4e24\u4e2a\u51fd\u6570\u80fd\u591f\u7528\u6765\u914d\u7f6e\u6a21\u677f\u6d4b\u8bd5\uff1a glStencilFunc \u548c glStencilOp \u3002 glStencilFunc(GLenum func, GLint ref, GLuint mask) \u4e00\u5171\u5305\u542b\u4e09\u4e2a\u53c2\u6570\uff1a func \uff1a\u8bbe\u7f6e\u6a21\u677f\u6d4b\u8bd5\u51fd\u6570(Stencil Test Function)\u3002\u8fd9\u4e2a\u6d4b\u8bd5\u51fd\u6570\u5c06\u4f1a\u5e94\u7528\u5230\u5df2\u50a8\u5b58\u7684\u6a21\u677f\u503c\u4e0a\u548c glStencilFunc \u51fd\u6570\u7684 ref \u503c\u4e0a\u3002\u53ef\u7528\u7684\u9009\u9879\u6709\uff1a GL_NEVER \u3001 GL_LESS \u3001 GL_LEQUAL \u3001 GL_GREATER \u3001 GL_GEQUAL \u3001 GL_EQUAL \u3001 GL_NOTEQUAL \u548c GL_ALWAYS \u3002\u5b83\u4eec\u7684\u8bed\u4e49\u548c\u6df1\u5ea6\u7f13\u51b2\u7684\u51fd\u6570\u7c7b\u4f3c\u3002 ref \uff1a\u8bbe\u7f6e\u4e86\u6a21\u677f\u6d4b\u8bd5\u7684\u53c2\u8003\u503c(Reference Value)\u3002\u6a21\u677f\u7f13\u51b2\u7684\u5185\u5bb9\u5c06\u4f1a\u4e0e\u8fd9\u4e2a\u503c\u8fdb\u884c\u6bd4\u8f83\u3002 mask \uff1a\u8bbe\u7f6e\u4e00\u4e2a\u63a9\u7801\uff0c\u5b83\u5c06\u4f1a\u4e0e\u53c2\u8003\u503c\u548c\u50a8\u5b58\u7684\u6a21\u677f\u503c\u5728\u6d4b\u8bd5\u6bd4\u8f83\u5b83\u4eec\u4e4b\u524d\u8fdb\u884c\u4e0e(AND)\u8fd0\u7b97\u3002\u521d\u59cb\u60c5\u51b5\u4e0b\u6240\u6709\u4f4d\u90fd\u4e3a1\u3002 \u5728\u4e00\u5f00\u59cb\u7684\u90a3\u4e2a\u7b80\u5355\u7684\u6a21\u677f\u4f8b\u5b50\u4e2d\uff0c\u51fd\u6570\u88ab\u8bbe\u7f6e\u4e3a\uff1a glStencilFunc(GL_EQUAL, 1, 0xFF) \u8fd9\u4f1a\u544a\u8bc9OpenGL\uff0c\u53ea\u8981\u4e00\u4e2a\u7247\u6bb5\u7684\u6a21\u677f\u503c\u7b49\u4e8e( GL_EQUAL )\u53c2\u8003\u503c1\uff0c\u7247\u6bb5\u5c06\u4f1a\u901a\u8fc7\u6d4b\u8bd5\u5e76\u88ab\u7ed8\u5236\uff0c\u5426\u5219\u4f1a\u88ab\u4e22\u5f03\u3002 \u4f46\u662f glStencilFunc \u4ec5\u4ec5\u63cf\u8ff0\u4e86OpenGL\u5e94\u8be5\u5bf9\u6a21\u677f\u7f13\u51b2\u5185\u5bb9\u505a\u4ec0\u4e48\uff0c\u800c\u4e0d\u662f\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u66f4\u65b0\u7f13\u51b2\u3002\u8fd9\u5c31\u9700\u8981 glStencilOp \u8fd9\u4e2a\u51fd\u6570\u4e86\u3002 glStencilOp(GLenum sfail, GLenum dpfail, GLenum dppass) \u4e00\u5171\u5305\u542b\u4e09\u4e2a\u9009\u9879\uff0c\u6211\u4eec\u80fd\u591f\u8bbe\u5b9a\u6bcf\u4e2a\u9009\u9879\u5e94\u8be5\u91c7\u53d6\u7684\u884c\u4e3a\uff1a sfail \uff1a\u6a21\u677f\u6d4b\u8bd5\u5931\u8d25\u65f6\u91c7\u53d6\u7684\u884c\u4e3a\u3002 dpfail \uff1a\u6a21\u677f\u6d4b\u8bd5\u901a\u8fc7\uff0c\u4f46\u6df1\u5ea6\u6d4b\u8bd5\u5931\u8d25\u65f6\u91c7\u53d6\u7684\u884c\u4e3a\u3002 dppass \uff1a\u6a21\u677f\u6d4b\u8bd5\u548c\u6df1\u5ea6\u6d4b\u8bd5\u90fd\u901a\u8fc7\u65f6\u91c7\u53d6\u7684\u884c\u4e3a\u3002 \u6bcf\u4e2a\u9009\u9879\u90fd\u53ef\u4ee5\u9009\u7528\u4ee5\u4e0b\u7684\u5176\u4e2d\u4e00\u79cd\u884c\u4e3a\uff1a \u884c\u4e3a \u63cf\u8ff0 GL_KEEP \u4fdd\u6301\u5f53\u524d\u50a8\u5b58\u7684\u6a21\u677f\u503c GL_ZERO \u5c06\u6a21\u677f\u503c\u8bbe\u7f6e\u4e3a0 GL_REPLACE \u5c06\u6a21\u677f\u503c\u8bbe\u7f6e\u4e3a glStencilFunc \u51fd\u6570\u8bbe\u7f6e\u7684 ref \u503c GL_INCR \u5982\u679c\u6a21\u677f\u503c\u5c0f\u4e8e\u6700\u5927\u503c\u5219\u5c06\u6a21\u677f\u503c\u52a01 GL_INCR_WRAP \u4e0e GL_INCR \u4e00\u6837\uff0c\u4f46\u5982\u679c\u6a21\u677f\u503c\u8d85\u8fc7\u4e86\u6700\u5927\u503c\u5219\u5f52\u96f6 GL_DECR \u5982\u679c\u6a21\u677f\u503c\u5927\u4e8e\u6700\u5c0f\u503c\u5219\u5c06\u6a21\u677f\u503c\u51cf1 GL_DECR_WRAP \u4e0e GL_DECR \u4e00\u6837\uff0c\u4f46\u5982\u679c\u6a21\u677f\u503c\u5c0f\u4e8e0\u5219\u5c06\u5176\u8bbe\u7f6e\u4e3a\u6700\u5927\u503c GL_INVERT \u6309\u4f4d\u7ffb\u8f6c\u5f53\u524d\u7684\u6a21\u677f\u7f13\u51b2\u503c \u9ed8\u8ba4\u60c5\u51b5\u4e0b glStencilOp \u662f\u8bbe\u7f6e\u4e3a (GL_KEEP, GL_KEEP, GL_KEEP) \u7684\uff0c\u6240\u4ee5\u4e0d\u8bba\u4efb\u4f55\u6d4b\u8bd5\u7684\u7ed3\u679c\u662f\u5982\u4f55\uff0c\u6a21\u677f\u7f13\u51b2\u90fd\u4f1a\u4fdd\u7559\u5b83\u7684\u503c\u3002\u9ed8\u8ba4\u7684\u884c\u4e3a\u4e0d\u4f1a\u66f4\u65b0\u6a21\u677f\u7f13\u51b2\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u60f3\u5199\u5165\u6a21\u677f\u7f13\u51b2\u7684\u8bdd\uff0c\u4f60\u9700\u8981\u81f3\u5c11\u5bf9\u5176\u4e2d\u4e00\u4e2a\u9009\u9879\u8bbe\u7f6e\u4e0d\u540c\u7684\u503c\u3002 \u6240\u4ee5\uff0c\u901a\u8fc7\u4f7f\u7528 glStencilFunc \u548c glStencilOp \uff0c\u6211\u4eec\u53ef\u4ee5\u7cbe\u786e\u5730\u6307\u5b9a\u66f4\u65b0\u6a21\u677f\u7f13\u51b2\u7684\u65f6\u673a\u4e0e\u884c\u4e3a\u4e86\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6307\u5b9a\u4ec0\u4e48\u65f6\u5019\u8be5\u8ba9\u6a21\u677f\u7f13\u51b2\u901a\u8fc7\uff0c\u5373\u4ec0\u4e48\u65f6\u5019\u7247\u6bb5\u9700\u8981\u88ab\u4e22\u5f03\u3002","title":"\u6a21\u677f\u51fd\u6570"},{"location":"04%20Advanced%20OpenGL/02%20Stencil%20testing/#_3","text":"\u4ec5\u4ec5\u770b\u4e86\u524d\u9762\u7684\u90e8\u5206\u4f60\u8fd8\u662f\u4e0d\u592a\u53ef\u80fd\u80fd\u591f\u5b8c\u5168\u7406\u89e3\u6a21\u677f\u6d4b\u8bd5\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u4f1a\u5c55\u793a\u4e00\u4e2a\u4f7f\u7528\u6a21\u677f\u6d4b\u8bd5\u5c31\u53ef\u4ee5\u5b8c\u6210\u7684\u6709\u7528\u7279\u6027\uff0c\u5b83\u53eb\u505a \u7269\u4f53\u8f6e\u5ed3 (Object Outlining)\u3002 \u7269\u4f53\u8f6e\u5ed3\u6240\u80fd\u505a\u7684\u4e8b\u60c5\u6b63\u5982\u5b83\u540d\u5b57\u6240\u63cf\u8ff0\u7684\u90a3\u6837\u3002\u6211\u4eec\u5c06\u4f1a\u4e3a\u6bcf\u4e2a\uff08\u6216\u8005\u4e00\u4e2a\uff09\u7269\u4f53\u5728\u5b83\u7684\u5468\u56f4\u521b\u5efa\u4e00\u4e2a\u5f88\u5c0f\u7684\u6709\u8272\u8fb9\u6846\u3002\u5f53\u4f60\u60f3\u8981\u5728\u7b56\u7565\u6e38\u620f\u4e2d\u9009\u4e2d\u4e00\u4e2a\u5355\u4f4d\u8fdb\u884c\u64cd\u4f5c\u7684\uff0c\u60f3\u8981\u544a\u8bc9\u73a9\u5bb6\u9009\u4e2d\u7684\u662f\u54ea\u4e2a\u5355\u4f4d\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u6548\u679c\u5c31\u975e\u5e38\u6709\u7528\u4e86\u3002\u4e3a\u7269\u4f53\u521b\u5efa\u8f6e\u5ed3\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a \u542f\u7528\u6a21\u677f\u5199\u5165\u3002 \u5728\u7ed8\u5236\uff08\u9700\u8981\u6dfb\u52a0\u8f6e\u5ed3\u7684\uff09\u7269\u4f53\u4e4b\u524d\uff0c\u5c06\u6a21\u677f\u51fd\u6570\u8bbe\u7f6e\u4e3a GL_ALWAYS \uff0c\u6bcf\u5f53\u7269\u4f53\u7684\u7247\u6bb5\u88ab\u6e32\u67d3\u65f6\uff0c\u5c06\u6a21\u677f\u7f13\u51b2\u66f4\u65b0\u4e3a1\u3002 \u6e32\u67d3\u7269\u4f53\u3002 \u7981\u7528\u6a21\u677f\u5199\u5165\u4ee5\u53ca\u6df1\u5ea6\u6d4b\u8bd5\u3002 \u5c06\u6bcf\u4e2a\u7269\u4f53\u7f29\u653e\u4e00\u70b9\u70b9\u3002 \u4f7f\u7528\u4e00\u4e2a\u4e0d\u540c\u7684\u7247\u6bb5\u7740\u8272\u5668\uff0c\u8f93\u51fa\u4e00\u4e2a\u5355\u72ec\u7684\uff08\u8fb9\u6846\uff09\u989c\u8272\u3002 \u518d\u6b21\u7ed8\u5236\u7269\u4f53\uff0c\u4f46\u53ea\u5728\u5b83\u4eec\u7247\u6bb5\u7684\u6a21\u677f\u503c\u4e0d\u7b49\u4e8e1\u65f6\u624d\u7ed8\u5236\u3002 \u518d\u6b21\u542f\u7528\u6a21\u677f\u5199\u5165\u548c\u6df1\u5ea6\u6d4b\u8bd5\u3002 \u8fd9\u4e2a\u8fc7\u7a0b\u5c06\u6bcf\u4e2a\u7269\u4f53\u7684\u7247\u6bb5\u7684\u6a21\u677f\u7f13\u51b2\u8bbe\u7f6e\u4e3a1\uff0c\u5f53\u6211\u4eec\u60f3\u8981\u7ed8\u5236\u8fb9\u6846\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e3b\u8981\u7ed8\u5236\u653e\u5927\u7248\u672c\u7684\u7269\u4f53\u4e2d\u6a21\u677f\u6d4b\u8bd5\u901a\u8fc7\u7684\u90e8\u5206\uff0c\u4e5f\u5c31\u662f\u7269\u4f53\u7684\u8fb9\u6846\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u4e3b\u8981\u4f7f\u7528\u6a21\u677f\u7f13\u51b2\u4e22\u5f03\u4e86\u653e\u5927\u7248\u672c\u4e2d\u5c5e\u4e8e\u539f\u7269\u4f53\u7247\u6bb5\u7684\u90e8\u5206\u3002 \u6240\u4ee5\u6211\u4eec\u9996\u5148\u6765\u521b\u5efa\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u7247\u6bb5\u7740\u8272\u5668\uff0c\u5b83\u4f1a\u8f93\u51fa\u4e00\u4e2a\u8fb9\u6846\u989c\u8272\u3002\u6211\u4eec\u7b80\u5355\u5730\u7ed9\u5b83\u8bbe\u7f6e\u4e00\u4e2a\u786c\u7f16\u7801\u7684\u989c\u8272\u503c\uff0c\u5c06\u8fd9\u4e2a\u7740\u8272\u5668\u547d\u540d\u4e3a shaderSingleColor \uff1a void main() { FragColor = vec4(0.04, 0.28, 0.26, 1.0); } \u6211\u4eec\u53ea\u60f3\u7ed9\u90a3\u4e24\u4e2a\u7bb1\u5b50\u52a0\u4e0a\u8fb9\u6846\uff0c\u6240\u4ee5\u6211\u4eec\u8ba9\u5730\u677f\u4e0d\u53c2\u4e0e\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u6211\u4eec\u5e0c\u671b\u9996\u5148\u7ed8\u5236\u5730\u677f\uff0c\u518d\u7ed8\u5236\u4e24\u4e2a\u7bb1\u5b50\uff08\u5e76\u5199\u5165\u6a21\u677f\u7f13\u51b2\uff09\uff0c\u4e4b\u540e\u7ed8\u5236\u653e\u5927\u7684\u7bb1\u5b50\uff08\u5e76\u4e22\u5f03\u8986\u76d6\u4e86\u4e4b\u524d\u7ed8\u5236\u7684\u7bb1\u5b50\u7247\u6bb5\u7684\u90a3\u4e9b\u7247\u6bb5\uff09\u3002 \u6211\u4eec\u9996\u5148\u542f\u7528\u6a21\u677f\u6d4b\u8bd5\uff1a glEnable(GL_STENCIL_TEST); \u5e76\u8bbe\u7f6e\u5728\u6bcf\u4e00\u5e27\u4e2d\u6a21\u677f\u6d4b\u8bd5\u901a\u8fc7\u6216\u5931\u8d25\u65f6\uff0c\u9700\u8981\u6267\u884c\u7684\u64cd\u4f5c\uff1a glStencilOp(GL_KEEP, GL_KEEP, GL_REPLACE); \u5982\u679c\u5176\u4e2d\u7684\u4e00\u4e2a\u6d4b\u8bd5\u5931\u8d25\u4e86\uff0c\u6211\u4eec\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u6211\u4eec\u4ec5\u4ec5\u4fdd\u7559\u5f53\u524d\u50a8\u5b58\u5728\u6a21\u677f\u7f13\u51b2\u4e2d\u7684\u503c\u3002\u5982\u679c\u6a21\u677f\u6d4b\u8bd5\u548c\u6df1\u5ea6\u6d4b\u8bd5\u90fd\u901a\u8fc7\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5e0c\u671b\u5c06\u50a8\u5b58\u7684\u6a21\u677f\u503c\u8bbe\u7f6e\u4e3a\u53c2\u8003\u503c\uff0c\u53c2\u8003\u503c\u80fd\u591f\u901a\u8fc7 glStencilFunc \u6765\u8bbe\u7f6e\uff0c\u6211\u4eec\u4e4b\u540e\u4f1a\u8bbe\u7f6e\u4e3a1\u3002 \u6211\u4eec\u5c06\u6a21\u677f\u7f13\u51b2\u6e05\u9664\u4e3a0\uff0c\u5bf9\u7bb1\u5b50\u4e2d\u6240\u6709\u7ed8\u5236\u7684\u7247\u6bb5\uff0c\u5c06\u6a21\u677f\u503c\u66f4\u65b0\u4e3a1\uff1a glStencilOp(GL_KEEP, GL_KEEP, GL_REPLACE); glStencilFunc(GL_ALWAYS, 1, 0xFF); // \u6240\u6709\u7684\u7247\u6bb5\u90fd\u5e94\u8be5\u66f4\u65b0\u6a21\u677f\u7f13\u51b2 glStencilMask(0xFF); // \u542f\u7528\u6a21\u677f\u7f13\u51b2\u5199\u5165 normalShader.use(); DrawTwoContainers(); \u901a\u8fc7\u4f7f\u7528 GL_REPLACE \u6a21\u677f\u6d4b\u8bd5\u51fd\u6570\uff0c\u6211\u4eec\u4fdd\u8bc1\u4e86\u7bb1\u5b50\u7684\u6bcf\u4e2a\u7247\u6bb5\u90fd\u4f1a\u5c06\u6a21\u677f\u7f13\u51b2\u7684\u6a21\u677f\u503c\u66f4\u65b0\u4e3a1\u3002\u56e0\u4e3a\u7247\u6bb5\u6c38\u8fdc\u4f1a\u901a\u8fc7\u6a21\u677f\u6d4b\u8bd5\uff0c\u5728\u7ed8\u5236\u7247\u6bb5\u7684\u5730\u65b9\uff0c\u6a21\u677f\u7f13\u51b2\u4f1a\u88ab\u66f4\u65b0\u4e3a\u53c2\u8003\u503c\u3002 \u73b0\u5728\u6a21\u677f\u7f13\u51b2\u5728\u7bb1\u5b50\u88ab\u7ed8\u5236\u7684\u5730\u65b9\u90fd\u66f4\u65b0\u4e3a1\u4e86\uff0c\u6211\u4eec\u5c06\u8981\u7ed8\u5236\u653e\u5927\u7684\u7bb1\u5b50\uff0c\u4f46\u8fd9\u6b21\u8981\u7981\u7528\u6a21\u677f\u7f13\u51b2\u7684\u5199\u5165\uff1a glStencilFunc(GL_NOTEQUAL, 1, 0xFF); glStencilMask(0x00); // \u7981\u6b62\u6a21\u677f\u7f13\u51b2\u7684\u5199\u5165 glDisable(GL_DEPTH_TEST); shaderSingleColor.use(); DrawTwoScaledUpContainers(); \u6211\u4eec\u5c06\u6a21\u677f\u51fd\u6570\u8bbe\u7f6e\u4e3a GL_NOTEQUAL \uff0c\u5b83\u4f1a\u4fdd\u8bc1\u6211\u4eec\u53ea\u7ed8\u5236\u7bb1\u5b50\u4e0a\u6a21\u677f\u503c\u4e0d\u4e3a1\u7684\u90e8\u5206\uff0c\u5373\u53ea\u7ed8\u5236\u7bb1\u5b50\u5728\u4e4b\u524d\u7ed8\u5236\u7684\u7bb1\u5b50\u4e4b\u5916\u7684\u90e8\u5206\u3002\u6ce8\u610f\u6211\u4eec\u4e5f\u7981\u7528\u4e86\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u8ba9\u653e\u5927\u7684\u7bb1\u5b50\uff0c\u5373\u8fb9\u6846\uff0c\u4e0d\u4f1a\u88ab\u5730\u677f\u6240\u8986\u76d6\u3002 \u8bb0\u5f97\u8981\u5728\u5b8c\u6210\u4e4b\u540e\u91cd\u65b0\u542f\u7528\u6df1\u5ea6\u7f13\u51b2\u3002 \u573a\u666f\u4e2d\u7269\u4f53\u8f6e\u5ed3\u7684\u5b8c\u6574\u6b65\u9aa4\u4f1a\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a glEnable(GL_DEPTH_TEST); glStencilOp(GL_KEEP, GL_KEEP, GL_REPLACE); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT | GL_STENCIL_BUFFER_BIT); glStencilMask(0x00); // \u8bb0\u5f97\u4fdd\u8bc1\u6211\u4eec\u5728\u7ed8\u5236\u5730\u677f\u7684\u65f6\u5019\u4e0d\u4f1a\u66f4\u65b0\u6a21\u677f\u7f13\u51b2 normalShader.use(); DrawFloor() glStencilFunc(GL_ALWAYS, 1, 0xFF); glStencilMask(0xFF); DrawTwoContainers(); glStencilFunc(GL_NOTEQUAL, 1, 0xFF); glStencilMask(0x00); glDisable(GL_DEPTH_TEST); shaderSingleColor.use(); DrawTwoScaledUpContainers(); glStencilMask(0xFF); glEnable(GL_DEPTH_TEST); \u53ea\u8981\u4f60\u7406\u89e3\u4e86\u6a21\u677f\u7f13\u51b2\u80cc\u540e\u7684\u5927\u4f53\u601d\u8def\uff0c\u8fd9\u4e2a\u4ee3\u7801\u7247\u6bb5\u5c31\u4e0d\u662f\u90a3\u4e48\u96be\u7406\u89e3\u4e86\u3002\u5982\u679c\u8fd8\u662f\u4e0d\u80fd\u7406\u89e3\u7684\u8bdd\uff0c\u5c1d\u8bd5\u518d\u6b21\u4ed4\u7ec6\u9605\u8bfb\u4e4b\u524d\u7684\u90e8\u5206\uff0c\u5e76\u5c1d\u8bd5\u901a\u8fc7\u4e0a\u9762\u4f7f\u7528\u7684\u8303\u4f8b\uff0c\u5b8c\u5168\u7406\u89e3\u6bcf\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u3002 \u5728 \u6df1\u5ea6\u6d4b\u8bd5 \u5c0f\u8282\u7684\u573a\u666f\u4e2d\uff0c\u8fd9\u4e2a\u8f6e\u5ed3\u7b97\u6cd5\u7684\u7ed3\u679c\u770b\u8d77\u6765\u4f1a\u50cf\u662f\u8fd9\u6837\u7684\uff1a \u53ef\u4ee5\u5728 \u8fd9\u91cc \u67e5\u770b\u6e90\u4ee3\u7801\uff0c\u770b\u770b\u7269\u4f53\u8f6e\u5ed3\u7b97\u6cd5\u7684\u5b8c\u6574\u4ee3\u7801\u3002 Important \u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u4e24\u4e2a\u7bb1\u5b50\u7684\u8fb9\u6846\u91cd\u5408\u4e86\uff0c\u8fd9\u901a\u5e38\u90fd\u662f\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\uff08\u60f3\u60f3\u7b56\u7565\u6e38\u620f\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u9009\u62e910\u4e2a\u5355\u4f4d\uff0c\u5408\u5e76\u8fb9\u6846\u901a\u5e38\u662f\u6211\u4eec\u60f3\u9700\u8981\u7684\u7ed3\u679c\uff09\u3002\u5982\u679c\u4f60\u60f3\u8ba9\u6bcf\u4e2a\u7269\u4f53\u90fd\u6709\u4e00\u4e2a\u5b8c\u6574\u7684\u8fb9\u6846\uff0c\u4f60\u9700\u8981\u5bf9\u6bcf\u4e2a\u7269\u4f53\u90fd\u6e05\u7a7a\u6a21\u677f\u7f13\u51b2\uff0c\u5e76\u6709\u521b\u610f\u5730\u5229\u7528\u6df1\u5ea6\u7f13\u51b2\u3002 \u4f60\u770b\u5230\u7684\u7269\u4f53\u8f6e\u5ed3\u7b97\u6cd5\u5728\u9700\u8981\u663e\u793a\u9009\u4e2d\u7269\u4f53\u7684\u6e38\u620f\uff08\u60f3\u60f3\u7b56\u7565\u6e38\u620f\uff09\u4e2d\u975e\u5e38\u5e38\u89c1\u3002\u8fd9\u6837\u7684\u7b97\u6cd5\u80fd\u591f\u5728\u4e00\u4e2a\u6a21\u578b\u7c7b\u4e2d\u8f7b\u677e\u5b9e\u73b0\u3002\u4f60\u53ef\u4ee5\u5728\u6a21\u578b\u7c7b\u4e2d\u8bbe\u7f6e\u4e00\u4e2aboolean\u6807\u8bb0\uff0c\u6765\u8bbe\u7f6e\u9700\u4e0d\u9700\u8981\u7ed8\u5236\u8fb9\u6846\u3002\u5982\u679c\u4f60\u6709\u521b\u9020\u529b\u7684\u8bdd\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u540e\u671f\u5904\u7406\u6ee4\u955c(Filter)\uff0c\u50cf\u662f\u9ad8\u65af\u6a21\u7cca(Gaussian Blur)\uff0c\u8ba9\u8fb9\u6846\u770b\u8d77\u6765\u66f4\u81ea\u7136\u3002 \u9664\u4e86\u7269\u4f53\u8f6e\u5ed3\u4e4b\u5916\uff0c\u6a21\u677f\u6d4b\u8bd5\u8fd8\u6709\u5f88\u591a\u7528\u9014\uff0c\u6bd4\u5982\u5728\u4e00\u4e2a\u540e\u89c6\u955c\u4e2d\u7ed8\u5236\u7eb9\u7406\uff0c\u8ba9\u5b83\u80fd\u591f\u7ed8\u5236\u5230\u955c\u5b50\u5f62\u72b6\u4e2d\uff0c\u6216\u8005\u4f7f\u7528\u4e00\u4e2a\u53eb\u505a\u9634\u5f71\u4f53\u79ef(Shadow Volume)\u7684\u6a21\u677f\u7f13\u51b2\u6280\u672f\u6e32\u67d3\u5b9e\u65f6\u9634\u5f71\u3002\u6a21\u677f\u7f13\u51b2\u4e3a\u6211\u4eec\u5df2\u7ecf\u5f88\u4e30\u5bcc\u7684OpenGL\u5de5\u5177\u7bb1\u53c8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u5de5\u5177\u3002","title":"\u7269\u4f53\u8f6e\u5ed3"},{"location":"04%20Advanced%20OpenGL/03%20Blending/","text":"\u6df7\u5408 \u539f\u6587 Blending \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet, Django \u6821\u5bf9 \u6682\u65e0\u6821\u5bf9 OpenGL\u4e2d\uff0c \u6df7\u5408 (Blending)\u901a\u5e38\u662f\u5b9e\u73b0\u7269\u4f53 \u900f\u660e\u5ea6 (Transparency)\u7684\u4e00\u79cd\u6280\u672f\u3002\u900f\u660e\u5c31\u662f\u8bf4\u4e00\u4e2a\u7269\u4f53\uff08\u6216\u8005\u5176\u4e2d\u7684\u4e00\u90e8\u5206\uff09\u4e0d\u662f\u7eaf\u8272(Solid Color)\u7684\uff0c\u5b83\u7684\u989c\u8272\u662f\u7269\u4f53\u672c\u8eab\u7684\u989c\u8272\u548c\u5b83\u80cc\u540e\u5176\u5b83\u7269\u4f53\u7684\u989c\u8272\u7684\u4e0d\u540c\u5f3a\u5ea6\u7ed3\u5408\u3002\u4e00\u4e2a\u6709\u8272\u73bb\u7483\u7a97\u662f\u4e00\u4e2a\u900f\u660e\u7684\u7269\u4f53\uff0c\u73bb\u7483\u6709\u5b83\u81ea\u5df1\u7684\u989c\u8272\uff0c\u4f46\u5b83\u6700\u7ec8\u7684\u989c\u8272\u8fd8\u5305\u542b\u4e86\u73bb\u7483\u4e4b\u540e\u6240\u6709\u7269\u4f53\u7684\u989c\u8272\u3002\u8fd9\u4e5f\u662f\u6df7\u5408\u8fd9\u4e00\u540d\u5b57\u7684\u51fa\u5904\uff0c\u6211\u4eec \u6df7\u5408 (Blend)\uff08\u4e0d\u540c\u7269\u4f53\u7684\uff09\u591a\u79cd\u989c\u8272\u4e3a\u4e00\u79cd\u989c\u8272\u3002\u6240\u4ee5\u900f\u660e\u5ea6\u80fd\u8ba9\u6211\u4eec\u770b\u7a7f\u7269\u4f53\u3002 \u900f\u660e\u7684\u7269\u4f53\u53ef\u4ee5\u662f\u5b8c\u5168\u900f\u660e\u7684\uff08\u8ba9\u6240\u6709\u7684\u989c\u8272\u7a7f\u8fc7\uff09\uff0c\u6216\u8005\u662f\u534a\u900f\u660e\u7684\uff08\u5b83\u8ba9\u989c\u8272\u901a\u8fc7\uff0c\u540c\u65f6\u4e5f\u4f1a\u663e\u793a\u81ea\u8eab\u7684\u989c\u8272\uff09\u3002\u4e00\u4e2a\u7269\u4f53\u7684\u900f\u660e\u5ea6\u662f\u901a\u8fc7\u5b83\u989c\u8272\u7684 alpha \u503c\u6765\u51b3\u5b9a\u7684\u3002Alpha\u989c\u8272\u503c\u662f\u989c\u8272\u5411\u91cf\u7684\u7b2c\u56db\u4e2a\u5206\u91cf\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u770b\u5230\u8fc7\u5b83\u5f88\u591a\u904d\u4e86\u3002\u5728\u8fd9\u4e2a\u6559\u7a0b\u4e4b\u524d\u6211\u4eec\u90fd\u5c06\u8fd9\u4e2a\u7b2c\u56db\u4e2a\u5206\u91cf\u8bbe\u7f6e\u4e3a1.0\uff0c\u8ba9\u8fd9\u4e2a\u7269\u4f53\u7684\u900f\u660e\u5ea6\u4e3a0.0\uff0c\u800c\u5f53alpha\u503c\u4e3a0.0\u65f6\u7269\u4f53\u5c06\u4f1a\u662f\u5b8c\u5168\u900f\u660e\u7684\u3002\u5f53alpha\u503c\u4e3a0.5\u65f6\uff0c\u7269\u4f53\u7684\u989c\u8272\u670950%\u662f\u6765\u81ea\u7269\u4f53\u81ea\u8eab\u7684\u989c\u8272\uff0c50%\u6765\u81ea\u80cc\u540e\u7269\u4f53\u7684\u989c\u8272\u3002 \u6211\u4eec\u76ee\u524d\u4e00\u76f4\u4f7f\u7528\u7684\u7eb9\u7406\u6709\u4e09\u4e2a\u989c\u8272\u5206\u91cf\uff1a\u7ea2\u3001\u7eff\u3001\u84dd\u3002\u4f46\u4e00\u4e9b\u6750\u8d28\u4f1a\u6709\u4e00\u4e2a\u5185\u5d4c\u7684alpha\u901a\u9053\uff0c\u5bf9\u6bcf\u4e2a\u7eb9\u7d20(Texel)\u90fd\u5305\u542b\u4e86\u4e00\u4e2a alpha \u503c\u3002\u8fd9\u4e2aalpha\u503c\u7cbe\u786e\u5730\u544a\u8bc9\u6211\u4eec\u7eb9\u7406\u5404\u4e2a\u90e8\u5206\u7684\u900f\u660e\u5ea6\u3002\u6bd4\u5982\u8bf4\uff0c\u4e0b\u9762\u8fd9\u4e2a \u7a97\u6237\u7eb9\u7406 \u4e2d\u7684\u73bb\u7483\u90e8\u5206\u7684alpha\u503c\u4e3a0.25\uff08\u5b83\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\u662f\u5b8c\u5168\u7684\u7ea2\u8272\uff0c\u4f46\u7531\u4e8e\u5b83\u670975%\u7684\u900f\u660e\u5ea6\uff0c\u80fd\u8ba9\u5f88\u5927\u4e00\u90e8\u5206\u7684\u7f51\u7ad9\u80cc\u666f\u989c\u8272\u7a7f\u8fc7\uff0c\u8ba9\u5b83\u770b\u8d77\u6765\u4e0d\u90a3\u4e48\u7ea2\u4e86\uff09\uff0c\u89d2\u843d\u7684alpha\u503c\u662f0.0\u3002 \u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u5c06\u8fd9\u4e2a\u7a97\u6237\u7eb9\u7406\u6dfb\u52a0\u5230\u573a\u666f\u4e2d\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u8ba8\u8bba\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u6280\u672f\uff0c\u6765\u5b9e\u73b0\u53ea\u6709\u5b8c\u5168\u900f\u660e\u548c\u5b8c\u5168\u4e0d\u900f\u660e\u7684\u7eb9\u7406\u7684\u900f\u660e\u5ea6\u3002 \u4e22\u5f03\u7247\u6bb5 \u6709\u4e9b\u56fe\u7247\u5e76\u4e0d\u9700\u8981\u534a\u900f\u660e\uff0c\u53ea\u9700\u8981\u6839\u636e\u7eb9\u7406\u989c\u8272\u503c\uff0c\u663e\u793a\u4e00\u90e8\u5206\uff0c\u6216\u8005\u4e0d\u663e\u793a\u4e00\u90e8\u5206\uff0c\u6ca1\u6709\u4e2d\u95f4\u60c5\u51b5\u3002\u6bd4\u5982\u8bf4\u8349\uff0c\u5982\u679c\u60f3\u4e0d\u592a\u8d39\u52b2\u5730\u521b\u5efa\u8349\u8fd9\u79cd\u4e1c\u897f\uff0c\u4f60\u9700\u8981\u5c06\u4e00\u4e2a\u8349\u7684\u7eb9\u7406\u8d34\u5728\u4e00\u4e2a2D\u56db\u8fb9\u5f62(Quad)\u4e0a\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u56db\u8fb9\u5f62\u653e\u5230\u573a\u666f\u4e2d\u3002\u7136\u800c\uff0c\u8349\u7684\u5f62\u72b6\u548c2D\u56db\u8fb9\u5f62\u7684\u5f62\u72b6\u5e76\u4e0d\u5b8c\u5168\u76f8\u540c\uff0c\u6240\u4ee5\u4f60\u53ea\u60f3\u663e\u793a\u8349\u7eb9\u7406\u7684\u67d0\u4e9b\u90e8\u5206\uff0c\u800c\u5ffd\u7565\u5269\u4e0b\u7684\u90e8\u5206\u3002 \u4e0b\u9762 \u8fd9\u4e2a \u7eb9\u7406\u6b63\u662f\u8fd9\u6837\u7684\uff0c\u5b83\u8981\u4e48\u662f\u5b8c\u5168\u4e0d\u900f\u660e\u7684\uff08alpha\u503c\u4e3a1.0\uff09\uff0c\u8981\u4e48\u662f\u5b8c\u5168\u900f\u660e\u7684\uff08alpha\u503c\u4e3a0.0\uff09\uff0c\u6ca1\u6709\u4e2d\u95f4\u60c5\u51b5\u3002\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u53ea\u8981\u4e0d\u662f\u8349\u7684\u90e8\u5206\uff0c\u8fd9\u4e2a\u56fe\u7247\u663e\u793a\u7684\u90fd\u662f\u7f51\u7ad9\u7684\u80cc\u666f\u989c\u8272\u800c\u4e0d\u662f\u5b83\u672c\u8eab\u7684\u989c\u8272\u3002 \u6240\u4ee5\u5f53\u6dfb\u52a0\u50cf\u8349\u8fd9\u6837\u7684\u690d\u88ab\u5230\u573a\u666f\u4e2d\u65f6\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u770b\u5230\u8349\u7684\u65b9\u5f62\u56fe\u50cf\uff0c\u800c\u662f\u53ea\u663e\u793a\u8349\u7684\u90e8\u5206\uff0c\u5e76\u80fd\u770b\u900f\u56fe\u50cf\u5176\u4f59\u7684\u90e8\u5206\u3002\u6211\u4eec\u60f3\u8981 \u4e22\u5f03 (Discard)\u663e\u793a\u7eb9\u7406\u4e2d\u900f\u660e\u90e8\u5206\u7684\u7247\u6bb5\uff0c\u4e0d\u5c06\u8fd9\u4e9b\u7247\u6bb5\u5b58\u50a8\u5230\u989c\u8272\u7f13\u51b2\u4e2d \u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4eec\u8fd8\u8981\u5b66\u4e60\u5982\u4f55\u52a0\u8f7d\u4e00\u4e2a\u900f\u660e\u7684\u7eb9\u7406\u3002\u8981\u60f3\u52a0\u8f7d\u6709alpha\u503c\u7684\u7eb9\u7406\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u6539\u5f88\u591a\u4e1c\u897f\uff0c stb_image \u5728\u7eb9\u7406\u6709alpha\u901a\u9053\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u52a0\u8f7d\uff0c\u4f46\u6211\u4eec\u4ecd\u8981\u5728\u7eb9\u7406\u751f\u6210\u8fc7\u7a0b\u4e2d\u544a\u8bc9OpenGL\uff0c\u6211\u4eec\u7684\u7eb9\u7406\u73b0\u5728\u4f7f\u7528alpha\u901a\u9053\u4e86\uff1a glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, width, height, 0, GL_RGBA, GL_UNSIGNED_BYTE, data); \u540c\u6837\uff0c\u4fdd\u8bc1\u4f60\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u83b7\u53d6\u4e86\u7eb9\u7406\u7684\u5168\u90e84\u4e2a\u989c\u8272\u5206\u91cf\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662fRGB\u5206\u91cf\uff1a void main() { // FragColor = vec4(vec3(texture(texture1, TexCoords)), 1.0); FragColor = texture(texture1, TexCoords); } \u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u8be5\u5982\u4f55\u52a0\u8f7d\u900f\u660e\u7684\u7eb9\u7406\u4e86\uff0c\u662f\u65f6\u5019\u5c06\u5b83\u5e26\u5165\u5b9e\u6218\u4e86\uff0c\u6211\u4eec\u5c06\u4f1a\u5728 \u6df1\u5ea6\u6d4b\u8bd5 \u5c0f\u8282\u7684\u573a\u666f\u4e2d\u52a0\u5165\u51e0\u68f5\u8349\u3002 \u6211\u4eec\u4f1a\u521b\u5efa\u4e00\u4e2avector\uff0c\u5411\u91cc\u9762\u6dfb\u52a0\u51e0\u4e2a glm::vec3 \u53d8\u91cf\u6765\u4ee3\u8868\u8349\u7684\u4f4d\u7f6e\uff1a vector<glm::vec3> vegetation; vegetation.push_back(glm::vec3(-1.5f, 0.0f, -0.48f)); vegetation.push_back(glm::vec3( 1.5f, 0.0f, 0.51f)); vegetation.push_back(glm::vec3( 0.0f, 0.0f, 0.7f)); vegetation.push_back(glm::vec3(-0.3f, 0.0f, -2.3f)); vegetation.push_back(glm::vec3( 0.5f, 0.0f, -0.6f)); \u6bcf\u4e2a\u8349\u90fd\u88ab\u6e32\u67d3\u5230\u4e86\u4e00\u4e2a\u56db\u8fb9\u5f62\u4e0a\uff0c\u8d34\u4e0a\u8349\u7684\u7eb9\u7406\u3002\u8fd9\u5e76\u4e0d\u80fd\u5b8c\u7f8e\u5730\u8868\u793a3D\u7684\u8349\uff0c\u4f46\u8fd9\u6bd4\u52a0\u8f7d\u590d\u6742\u7684\u6a21\u578b\u8981\u5feb\u591a\u4e86\u3002\u4f7f\u7528\u4e00\u4e9b\u5c0f\u6280\u5de7\uff0c\u6bd4\u5982\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\u52a0\u5165\u4e00\u4e9b\u65cb\u8f6c\u540e\u7684\u8349\u56db\u8fb9\u5f62\uff0c\u4f60\u4ecd\u7136\u80fd\u83b7\u5f97\u6bd4\u8f83\u597d\u7684\u7ed3\u679c\u7684\u3002 \u56e0\u4e3a\u8349\u7684\u7eb9\u7406\u662f\u6dfb\u52a0\u5230\u56db\u8fb9\u5f62\u5bf9\u8c61\u4e0a\u7684\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u521b\u5efa\u53e6\u5916\u4e00\u4e2aVAO\uff0c\u586b\u5145VBO\uff0c\u8bbe\u7f6e\u6b63\u786e\u7684\u9876\u70b9\u5c5e\u6027\u6307\u9488\u3002\u63a5\u4e0b\u6765\uff0c\u5728\u7ed8\u5236\u5b8c\u5730\u677f\u548c\u4e24\u4e2a\u7acb\u65b9\u4f53\u540e\uff0c\u6211\u4eec\u5c06\u4f1a\u7ed8\u5236\u8349\uff1a glBindVertexArray(vegetationVAO); glBindTexture(GL_TEXTURE_2D, grassTexture); for(unsigned int i = 0; i < vegetation.size(); i++) { model = glm::mat4(1.0f); model = glm::translate(model, vegetation[i]); shader.setMat4(\"model\", model); glDrawArrays(GL_TRIANGLES, 0, 6); } \u8fd0\u884c\u7a0b\u5e8f\u4f60\u5c06\u770b\u5230\uff1a \u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u662f\u56e0\u4e3aOpenGL\u9ed8\u8ba4\u662f\u4e0d\u77e5\u9053\u600e\u4e48\u5904\u7406alpha\u503c\u7684\uff0c\u66f4\u4e0d\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u5e94\u8be5\u4e22\u5f03\u7247\u6bb5\u3002\u6211\u4eec\u9700\u8981\u81ea\u5df1\u624b\u52a8\u6765\u5f04\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6709\u4e86\u7740\u8272\u5668\uff0c\u8fd9\u8fd8\u662f\u975e\u5e38\u5bb9\u6613\u7684\u3002GLSL\u7ed9\u4e86\u6211\u4eec discard \u547d\u4ee4\uff0c\u4e00\u65e6\u88ab\u8c03\u7528\uff0c\u5b83\u5c31\u4f1a\u4fdd\u8bc1\u7247\u6bb5\u4e0d\u4f1a\u88ab\u8fdb\u4e00\u6b65\u5904\u7406\uff0c\u6240\u4ee5\u5c31\u4e0d\u4f1a\u8fdb\u5165\u989c\u8272\u7f13\u51b2\u3002\u6709\u4e86\u8fd9\u4e2a\u6307\u4ee4\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u68c0\u6d4b\u4e00\u4e2a\u7247\u6bb5\u7684alpha\u503c\u662f\u5426\u4f4e\u4e8e\u67d0\u4e2a\u9608\u503c\uff0c\u5982\u679c\u662f\u7684\u8bdd\uff0c\u5219\u4e22\u5f03\u8fd9\u4e2a\u7247\u6bb5\uff0c\u5c31\u597d\u50cf\u5b83\u4e0d\u5b58\u5728\u4e00\u6837\uff1a #version 330 core out vec4 FragColor; in vec2 TexCoords; uniform sampler2D texture1; void main() { vec4 texColor = texture(texture1, TexCoords); if(texColor.a < 0.1) discard; FragColor = texColor; } \u8fd9\u91cc\uff0c\u6211\u4eec\u68c0\u6d4b\u88ab\u91c7\u6837\u7684\u7eb9\u7406\u989c\u8272\u7684alpha\u503c\u662f\u5426\u4f4e\u4e8e0.1\u7684\u9608\u503c\uff0c\u5982\u679c\u662f\u7684\u8bdd\uff0c\u5219\u4e22\u5f03\u8fd9\u4e2a\u7247\u6bb5\u3002\u7247\u6bb5\u7740\u8272\u5668\u4fdd\u8bc1\u4e86\u5b83\u53ea\u4f1a\u6e32\u67d3\u4e0d\u662f\uff08\u51e0\u4e4e\uff09\u5b8c\u5168\u900f\u660e\u7684\u7247\u6bb5\u3002\u73b0\u5728\u5b83\u770b\u8d77\u6765\u5c31\u6b63\u5e38\u4e86\uff1a Important \u6ce8\u610f\uff0c\u5f53\u91c7\u6837\u7eb9\u7406\u7684\u8fb9\u7f18\u7684\u65f6\u5019\uff0cOpenGL\u4f1a\u5bf9\u8fb9\u7f18\u7684\u503c\u548c\u7eb9\u7406\u4e0b\u4e00\u4e2a\u91cd\u590d\u7684\u503c\u8fdb\u884c\u63d2\u503c\uff08\u56e0\u4e3a\u6211\u4eec\u5c06\u5b83\u7684\u73af\u7ed5\u65b9\u5f0f\u8bbe\u7f6e\u4e3a\u4e86 GL_REPEAT \u3002\u8fd9\u901a\u5e38\u662f\u6ca1\u95ee\u9898\u7684\uff0c\u4f46\u662f\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u4e86\u900f\u660e\u503c\uff0c\u7eb9\u7406\u56fe\u50cf\u7684\u9876\u90e8\u5c06\u4f1a\u4e0e\u5e95\u90e8\u8fb9\u7f18\u7684\u7eaf\u8272\u503c\u8fdb\u884c\u63d2\u503c\u3002\u8fd9\u6837\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u534a\u900f\u660e\u7684\u6709\u8272\u8fb9\u6846\uff0c\u4f60\u53ef\u80fd\u4f1a\u770b\u89c1\u5b83\u73af\u7ed5\u7740\u4f60\u7684\u7eb9\u7406\u56db\u8fb9\u5f62\u3002\u8981\u60f3\u907f\u514d\u8fd9\u4e2a\uff0c\u6bcf\u5f53\u4f60alpha\u7eb9\u7406\u7684\u65f6\u5019\uff0c\u8bf7\u5c06\u7eb9\u7406\u7684\u73af\u7ed5\u65b9\u5f0f\u8bbe\u7f6e\u4e3a GL_CLAMP_TO_EDGE \uff1a glTexParameteri( GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri( GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u6e90\u7801\u3002 \u6df7\u5408 \u867d\u7136\u76f4\u63a5\u4e22\u5f03\u7247\u6bb5\u5f88\u597d\uff0c\u4f46\u5b83\u4e0d\u80fd\u8ba9\u6211\u4eec\u6e32\u67d3\u534a\u900f\u660e\u7684\u56fe\u50cf\u3002\u6211\u4eec\u8981\u4e48\u6e32\u67d3\u4e00\u4e2a\u7247\u6bb5\uff0c\u8981\u4e48\u5b8c\u5168\u4e22\u5f03\u5b83\u3002\u8981\u60f3\u6e32\u67d3\u6709\u591a\u4e2a\u900f\u660e\u5ea6\u7ea7\u522b\u7684\u56fe\u50cf\uff0c\u6211\u4eec\u9700\u8981\u542f\u7528 \u6df7\u5408 (Blending)\u3002\u548cOpenGL\u5927\u591a\u6570\u7684\u529f\u80fd\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u542f\u7528 GL_BLEND \u6765\u542f\u7528\u6df7\u5408\uff1a glEnable(GL_BLEND); \u542f\u7528\u4e86\u6df7\u5408\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u544a\u8bc9OpenGL\u5b83\u8be5 \u5982\u4f55 \u6df7\u5408\u3002 OpenGL\u4e2d\u7684\u6df7\u5408\u662f\u901a\u8fc7\u4e0b\u9762\u8fd9\u4e2a\u65b9\u7a0b\u6765\u5b9e\u73b0\u7684\uff1a \\begin{equation}\\bar{C}_{result} = \\bar{\\color{green}C}_{source} * \\color{green}F_{source} + \\bar{\\color{red}C}_{destination} * \\color{red}F_{destination}\\end{equation} \\bar{\\color{green}C}_{source} \uff1a\u6e90\u989c\u8272\u5411\u91cf\u3002\u8fd9\u662f\u6e90\u81ea\u7eb9\u7406\u7684\u989c\u8272\u5411\u91cf\u3002 \\bar{\\color{red}C}_{destination} \uff1a\u76ee\u6807\u989c\u8272\u5411\u91cf\u3002\u8fd9\u662f\u5f53\u524d\u50a8\u5b58\u5728\u989c\u8272\u7f13\u51b2\u4e2d\u7684\u989c\u8272\u5411\u91cf\u3002 \\color{green}F_{source} \uff1a\u6e90\u56e0\u5b50\u503c\u3002\u6307\u5b9a\u4e86alpha\u503c\u5bf9\u6e90\u989c\u8272\u7684\u5f71\u54cd\u3002 \\color{red}F_{destination} \uff1a\u76ee\u6807\u56e0\u5b50\u503c\u3002\u6307\u5b9a\u4e86alpha\u503c\u5bf9\u76ee\u6807\u989c\u8272\u7684\u5f71\u54cd\u3002 \u7247\u6bb5\u7740\u8272\u5668\u8fd0\u884c\u5b8c\u6210\u540e\uff0c\u5e76\u4e14\u6240\u6709\u7684\u6d4b\u8bd5\u90fd\u901a\u8fc7\u4e4b\u540e\uff0c\u8fd9\u4e2a \u6df7\u5408\u65b9\u7a0b (Blend Equation)\u624d\u4f1a\u5e94\u7528\u5230\u7247\u6bb5\u989c\u8272\u8f93\u51fa\u4e0e\u5f53\u524d\u989c\u8272\u7f13\u51b2\u4e2d\u7684\u503c\uff08\u5f53\u524d\u7247\u6bb5\u4e4b\u524d\u50a8\u5b58\u7684\u4e4b\u524d\u7247\u6bb5\u7684\u989c\u8272\uff09\u4e0a\u3002\u6e90\u989c\u8272\u548c\u76ee\u6807\u989c\u8272\u5c06\u4f1a\u7531OpenGL\u81ea\u52a8\u8bbe\u5b9a\uff0c\u4f46\u6e90\u56e0\u5b50\u548c\u76ee\u6807\u56e0\u5b50\u7684\u503c\u53ef\u4ee5\u7531\u6211\u4eec\u6765\u51b3\u5b9a\u3002\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a \u6211\u4eec\u6709\u4e24\u4e2a\u65b9\u5f62\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u8fd9\u4e2a\u534a\u900f\u660e\u7684\u7eff\u8272\u65b9\u5f62\u7ed8\u5236\u5728\u7ea2\u8272\u65b9\u5f62\u4e4b\u4e0a\u3002\u7ea2\u8272\u7684\u65b9\u5f62\u5c06\u4f1a\u662f\u76ee\u6807\u989c\u8272\uff08\u6240\u4ee5\u5b83\u5e94\u8be5\u5148\u5728\u989c\u8272\u7f13\u51b2\u4e2d\uff09\uff0c\u6211\u4eec\u5c06\u8981\u5728\u8fd9\u4e2a\u7ea2\u8272\u65b9\u5f62\u4e4b\u4e0a\u7ed8\u5236\u8fd9\u4e2a\u7eff\u8272\u65b9\u5f62\u3002 \u95ee\u9898\u6765\u4e86\uff1a\u6211\u4eec\u5c06\u56e0\u5b50\u503c\u8bbe\u7f6e\u4e3a\u4ec0\u4e48\uff1f\u561b\uff0c\u6211\u4eec\u81f3\u5c11\u60f3\u8ba9\u7eff\u8272\u65b9\u5f62\u4e58\u4ee5\u5b83\u7684alpha\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u60f3\u8981\u5c06 F_{src} \u8bbe\u7f6e\u4e3a\u6e90\u989c\u8272\u5411\u91cf\u7684alpha\u503c\uff0c\u4e5f\u5c31\u662f0.6\u3002\u63a5\u4e0b\u6765\u5c31\u5e94\u8be5\u6e05\u695a\u4e86\uff0c\u76ee\u6807\u65b9\u5f62\u7684\u8d21\u732e\u5e94\u8be5\u4e3a\u5269\u4e0b\u7684alpha\u503c\u3002\u5982\u679c\u7eff\u8272\u65b9\u5f62\u5bf9\u6700\u7ec8\u989c\u8272\u8d21\u732e\u4e8660%\uff0c\u90a3\u4e48\u7ea2\u8272\u65b9\u5757\u5e94\u8be5\u5bf9\u6700\u7ec8\u989c\u8272\u8d21\u732e\u4e8640%\uff0c\u5373 1.0 - 0.6 \u3002\u6240\u4ee5\u6211\u4eec\u5c06 F_{destination} \u8bbe\u7f6e\u4e3a1\u51cf\u53bb\u6e90\u989c\u8272\u5411\u91cf\u7684alpha\u503c\u3002\u8fd9\u4e2a\u65b9\u7a0b\u53d8\u6210\u4e86\uff1a \\begin{equation}\\bar{C}_{result} = \\begin{pmatrix} \\color{red}{0.0} \\\\ \\color{green}{1.0} \\\\ \\color{blue}{0.0} \\\\ \\color{purple}{0.6} \\end{pmatrix} * \\color{green}{0.6} + \\begin{pmatrix} \\color{red}{1.0} \\\\ \\color{green}{0.0} \\\\ \\color{blue}{0.0} \\\\ \\color{purple}{1.0} \\end{pmatrix} * \\color{red}{(1 - 0.6)} \\end{equation} \u7ed3\u679c\u5c31\u662f\u91cd\u53e0\u65b9\u5f62\u7684\u7247\u6bb5\u5305\u542b\u4e86\u4e00\u4e2a60%\u7eff\u8272\uff0c40%\u7ea2\u8272\u7684\u4e00\u79cd\u810f\u516e\u516e\u7684\u989c\u8272\uff1a \u6700\u7ec8\u7684\u989c\u8272\u5c06\u4f1a\u88ab\u50a8\u5b58\u5230\u989c\u8272\u7f13\u51b2\u4e2d\uff0c\u66ff\u4ee3\u4e4b\u524d\u7684\u989c\u8272\u3002 \u8fd9\u6837\u5b50\u5f88\u4e0d\u9519\uff0c\u4f46\u6211\u4eec\u8be5\u5982\u4f55\u8ba9OpenGL\u4f7f\u7528\u8fd9\u6837\u7684\u56e0\u5b50\u5462\uff1f\u6b63\u597d\u6709\u4e00\u4e2a\u4e13\u95e8\u7684\u51fd\u6570\uff0c\u53eb\u505a glBlendFunc \u3002 glBlendFunc(GLenum sfactor, GLenum dfactor) \u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff0c\u6765\u8bbe\u7f6e \u6e90 \u548c \u76ee\u6807\u56e0\u5b50 \u3002OpenGL\u4e3a\u6211\u4eec\u5b9a\u4e49\u4e86\u5f88\u591a\u4e2a\u9009\u9879\uff0c\u6211\u4eec\u5c06\u5728\u4e0b\u9762\u5217\u51fa\u5927\u90e8\u5206\u6700\u5e38\u7528\u7684\u9009\u9879\u3002\u6ce8\u610f\u5e38\u6570\u989c\u8272\u5411\u91cf \\bar{\\color{blue}C}_{constant} \u53ef\u4ee5\u901a\u8fc7 glBlendColor \u51fd\u6570\u6765\u53e6\u5916\u8bbe\u7f6e\u3002 \u9009\u9879 \u503c GL_ZERO \u56e0\u5b50\u7b49\u4e8e 0 GL_ONE \u56e0\u5b50\u7b49\u4e8e 1 GL_SRC_COLOR \u56e0\u5b50\u7b49\u4e8e\u6e90\u989c\u8272\u5411\u91cf \\bar{\\color{green}C}_{source} GL_ONE_MINUS_SRC_COLOR \u56e0\u5b50\u7b49\u4e8e 1 - \\bar{\\color{green}C}_{source} GL_DST_COLOR \u56e0\u5b50\u7b49\u4e8e\u76ee\u6807\u989c\u8272\u5411\u91cf \\bar{\\color{red}C}_{destination} GL_ONE_MINUS_DST_COLOR \u56e0\u5b50\u7b49\u4e8e 1 - \\bar{\\color{red}C}_{destination} GL_SRC_ALPHA \u56e0\u5b50\u7b49\u4e8e \\bar{\\color{green}C}_{source} \u7684 alpha \u5206\u91cf GL_ONE_MINUS_SRC_ALPHA \u56e0\u5b50\u7b49\u4e8e 1 - \\bar{\\color{green}C}_{source} \u7684 alpha \u5206\u91cf GL_DST_ALPHA \u56e0\u5b50\u7b49\u4e8e \\bar{\\color{red}C}_{destination} \u7684 alpha \u5206\u91cf GL_ONE_MINUS_DST_ALPHA \u56e0\u5b50\u7b49\u4e8e 1 - \\bar{\\color{red}C}_{destination} \u7684 alpha \u5206\u91cf GL_CONSTANT_COLOR \u56e0\u5b50\u7b49\u4e8e\u5e38\u6570\u989c\u8272\u5411\u91cf \\bar{\\color{blue}C}_{constant} GL_ONE_MINUS_CONSTANT_COLOR \u56e0\u5b50\u7b49\u4e8e 1 - \\bar{\\color{blue}C}_{constant} GL_CONSTANT_ALPHA \u56e0\u5b50\u7b49\u4e8e \\bar{\\color{blue}C}_{constant} \u7684 alpha \u5206\u91cf GL_ONE_MINUS_CONSTANT_ALPHA \u56e0\u5b50\u7b49\u4e8e 1 - \\bar{\\color{blue}C}_{constant} \u7684 alpha \u5206\u91cf \u4e3a\u4e86\u83b7\u5f97\u4e4b\u524d\u4e24\u4e2a\u65b9\u5f62\u7684\u6df7\u5408\u7ed3\u679c\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u6e90\u989c\u8272\u5411\u91cf\u7684 alpha \u4f5c\u4e3a\u6e90\u56e0\u5b50\uff0c\u4f7f\u7528 1 - alpha \u4f5c\u4e3a\u76ee\u6807\u56e0\u5b50\u3002\u8fd9\u5c06\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u7684 glBlendFunc \uff1a glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); \u4e5f\u53ef\u4ee5\u4f7f\u7528 glBlendFuncSeparate \u4e3aRGB\u548calpha\u901a\u9053\u5206\u522b\u8bbe\u7f6e\u4e0d\u540c\u7684\u9009\u9879\uff1a glBlendFuncSeparate(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA, GL_ONE, GL_ZERO); \u8fd9\u4e2a\u51fd\u6570\u548c\u6211\u4eec\u4e4b\u524d\u8bbe\u7f6e\u7684\u90a3\u6837\u8bbe\u7f6e\u4e86RGB\u5206\u91cf\uff0c\u4f46\u8fd9\u6837\u53ea\u80fd\u8ba9\u6700\u7ec8\u7684alpha\u5206\u91cf\u88ab\u6e90\u989c\u8272\u5411\u91cf\u7684alpha\u503c\u6240\u5f71\u54cd\u5230\u3002 OpenGL\u751a\u81f3\u7ed9\u4e86\u6211\u4eec\u66f4\u591a\u7684\u7075\u6d3b\u6027\uff0c\u5141\u8bb8\u6211\u4eec\u6539\u53d8\u65b9\u7a0b\u4e2d\u6e90\u548c\u76ee\u6807\u90e8\u5206\u7684\u8fd0\u7b97\u7b26\u3002\u5f53\u524d\u6e90\u548c\u76ee\u6807\u662f\u76f8\u52a0\u7684\uff0c\u4f46\u5982\u679c\u613f\u610f\u7684\u8bdd\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8ba9\u5b83\u4eec\u76f8\u51cf\u3002 glBlendEquation(GLenum mode) \u5141\u8bb8\u6211\u4eec\u8bbe\u7f6e\u8fd0\u7b97\u7b26\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e09\u4e2a\u9009\u9879\uff1a GL_FUNC_ADD\uff1a\u9ed8\u8ba4\u9009\u9879\uff0c\u5c06\u4e24\u4e2a\u5206\u91cf\u76f8\u52a0\uff1a \\bar{C}_{result} = \\color{green}{Src} + \\color{red}{Dst} \u3002 GL_FUNC_SUBTRACT\uff1a\u5c06\u4e24\u4e2a\u5206\u91cf\u76f8\u51cf\uff1a \\bar{C}_{result} = \\color{green}{Src} - \\color{red}{Dst} \u3002 GL_FUNC_REVERSE_SUBTRACT\uff1a\u5c06\u4e24\u4e2a\u5206\u91cf\u76f8\u51cf\uff0c\u4f46\u987a\u5e8f\u76f8\u53cd\uff1a \\bar{C}_{result} = \\color{red}{Dst} - \\color{green}{Src} \u3002 GL_MIN\uff1a\u53d6\u4e24\u4e2a\u5206\u91cf\u4e2d\u7684\u6700\u5c0f\u503c\uff1a \\bar{C}_{result} = {min}(\\color{red}{Dst}, \\color{green}{Src}) \u3002 GL_MAX\uff1a\u53d6\u4e24\u4e2a\u5206\u91cf\u4e2d\u7684\u6700\u5927\u503c\uff1a \\bar{C}_{result} = {max}(\\color{red}{Dst}, \\color{green}{Src}) \u3002 \u901a\u5e38\u6211\u4eec\u90fd\u53ef\u4ee5\u7701\u7565\u8c03\u7528 glBlendEquation \uff0c\u56e0\u4e3a GL_FUNC_ADD \u5bf9\u5927\u90e8\u5206\u7684\u64cd\u4f5c\u6765\u8bf4\u90fd\u662f\u6211\u4eec\u5e0c\u671b\u7684\u6df7\u5408\u65b9\u7a0b\uff0c\u4f46\u5982\u679c\u4f60\u771f\u7684\u60f3\u6253\u7834\u4e3b\u6d41\uff0c\u5176\u5b83\u7684\u65b9\u7a0b\u4e5f\u53ef\u80fd\u7b26\u5408\u4f60\u7684\u8981\u6c42\u3002 \u6e32\u67d3\u534a\u900f\u660e\u7eb9\u7406 \u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u77e5\u9053OpenGL\u662f\u5982\u4f55\u5904\u7406\u6df7\u5408\u7684\u4e86\uff0c\u662f\u65f6\u5019\u5c06\u6211\u4eec\u7684\u77e5\u8bc6\u8fd0\u7528\u5230\u5b9e\u6218\u4e2d\u4e86\uff0c\u6211\u4eec\u5c06\u4f1a\u5728\u573a\u666f\u4e2d\u6dfb\u52a0\u51e0\u4e2a\u534a\u900f\u660e\u7684\u7a97\u6237\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u672c\u8282\u5f00\u59cb\u7684\u90a3\u4e2a\u573a\u666f\uff0c\u4f46\u662f\u8fd9\u6b21\u4e0d\u518d\u662f\u6e32\u67d3\u8349\u7684\u7eb9\u7406\u4e86\uff0c\u6211\u4eec\u73b0\u5728\u5c06\u4f7f\u7528\u672c\u8282\u5f00\u59cb\u65f6\u7684\u90a3\u4e2a \u900f\u660e\u7684\u7a97\u6237 \u7eb9\u7406\u3002 \u9996\u5148\uff0c\u5728\u521d\u59cb\u5316\u65f6\u6211\u4eec\u542f\u7528\u6df7\u5408\uff0c\u5e76\u8bbe\u5b9a\u76f8\u5e94\u7684\u6df7\u5408\u51fd\u6570\uff1a glEnable(GL_BLEND); glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); \u7531\u4e8e\u542f\u7528\u4e86\u6df7\u5408\uff0c\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u4e22\u5f03\u7247\u6bb5\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u7247\u6bb5\u7740\u8272\u5668\u8fd8\u539f\uff1a #version 330 core out vec4 FragColor; in vec2 TexCoords; uniform sampler2D texture1; void main() { FragColor = texture(texture1, TexCoords); } \u73b0\u5728\uff08\u6bcf\u5f53OpenGL\u6e32\u67d3\u4e86\u4e00\u4e2a\u7247\u6bb5\u65f6\uff09\u5b83\u90fd\u4f1a\u5c06\u5f53\u524d\u7247\u6bb5\u7684\u989c\u8272\u548c\u5f53\u524d\u989c\u8272\u7f13\u51b2\u4e2d\u7684\u7247\u6bb5\u989c\u8272\u6839\u636ealpha\u503c\u6765\u8fdb\u884c\u6df7\u5408\u3002\u7531\u4e8e\u7a97\u6237\u7eb9\u7406\u7684\u73bb\u7483\u90e8\u5206\u662f\u534a\u900f\u660e\u7684\uff0c\u6211\u4eec\u5e94\u8be5\u80fd\u901a\u7a97\u6237\u4e2d\u770b\u5230\u80cc\u540e\u7684\u573a\u666f\u4e86\u3002 \u5982\u679c\u4f60\u4ed4\u7ec6\u770b\u7684\u8bdd\uff0c\u4f60\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u6709\u4e9b\u4e0d\u5bf9\u52b2\u3002\u6700\u524d\u9762\u7a97\u6237\u7684\u900f\u660e\u90e8\u5206\u906e\u853d\u4e86\u80cc\u540e\u7684\u7a97\u6237\uff1f\u8fd9\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u5462\uff1f \u53d1\u751f\u8fd9\u4e00\u73b0\u8c61\u7684\u539f\u56e0\u662f\uff0c\u6df1\u5ea6\u6d4b\u8bd5\u548c\u6df7\u5408\u4e00\u8d77\u4f7f\u7528\u7684\u8bdd\u4f1a\u4ea7\u751f\u4e00\u4e9b\u9ebb\u70e6\u3002\u5f53\u5199\u5165\u6df1\u5ea6\u7f13\u51b2\u65f6\uff0c\u6df1\u5ea6\u7f13\u51b2\u4e0d\u4f1a\u68c0\u67e5\u7247\u6bb5\u662f\u5426\u662f\u900f\u660e\u7684\uff0c\u6240\u4ee5\u900f\u660e\u7684\u90e8\u5206\u4f1a\u548c\u5176\u5b83\u503c\u4e00\u6837\u5199\u5165\u5230\u6df1\u5ea6\u7f13\u51b2\u4e2d\u3002\u7ed3\u679c\u5c31\u662f\u7a97\u6237\u7684\u6574\u4e2a\u56db\u8fb9\u5f62\u4e0d\u8bba\u900f\u660e\u5ea6\u90fd\u4f1a\u8fdb\u884c\u6df1\u5ea6\u6d4b\u8bd5\u3002\u5373\u4f7f\u900f\u660e\u7684\u90e8\u5206\u5e94\u8be5\u663e\u793a\u80cc\u540e\u7684\u7a97\u6237\uff0c\u6df1\u5ea6\u6d4b\u8bd5\u4ecd\u7136\u4e22\u5f03\u4e86\u5b83\u4eec\u3002 \u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u968f\u610f\u5730\u51b3\u5b9a\u5982\u4f55\u6e32\u67d3\u7a97\u6237\uff0c\u8ba9\u6df1\u5ea6\u7f13\u51b2\u89e3\u51b3\u6240\u6709\u7684\u95ee\u9898\u4e86\u3002\u8fd9\u4e5f\u662f\u6df7\u5408\u53d8\u5f97\u6709\u4e9b\u9ebb\u70e6\u7684\u90e8\u5206\u3002\u8981\u60f3\u4fdd\u8bc1\u7a97\u6237\u4e2d\u80fd\u591f\u663e\u793a\u5b83\u4eec\u80cc\u540e\u7684\u7a97\u6237\uff0c\u6211\u4eec\u9700\u8981\u9996\u5148\u7ed8\u5236\u80cc\u540e\u7684\u8fd9\u90e8\u5206\u7a97\u6237\u3002\u8fd9\u4e5f\u5c31\u662f\u8bf4\u5728\u7ed8\u5236\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5fc5\u987b\u5148\u624b\u52a8\u5c06\u7a97\u6237\u6309\u7167\u6700\u8fdc\u5230\u6700\u8fd1\u6765\u6392\u5e8f\uff0c\u518d\u6309\u7167\u987a\u5e8f\u6e32\u67d3\u3002 Important \u6ce8\u610f\uff0c\u5bf9\u4e8e\u8349\u8fd9\u79cd\u5168\u900f\u660e\u7684\u7269\u4f53\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4e22\u5f03\u900f\u660e\u7684\u7247\u6bb5\u800c\u4e0d\u662f\u6df7\u5408\u5b83\u4eec\uff0c\u8fd9\u6837\u5c31\u89e3\u51b3\u4e86\u8fd9\u4e9b\u5934\u75bc\u7684\u95ee\u9898\uff08\u6ca1\u6709\u6df1\u5ea6\u95ee\u9898\uff09\u3002 \u4e0d\u8981\u6253\u4e71\u987a\u5e8f \u8981\u60f3\u8ba9\u6df7\u5408\u5728\u591a\u4e2a\u7269\u4f53\u4e0a\u5de5\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u6700\u5148\u7ed8\u5236\u6700\u8fdc\u7684\u7269\u4f53\uff0c\u6700\u540e\u7ed8\u5236\u6700\u8fd1\u7684\u7269\u4f53\u3002\u666e\u901a\u4e0d\u9700\u8981\u6df7\u5408\u7684\u7269\u4f53\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u6df1\u5ea6\u7f13\u51b2\u6b63\u5e38\u7ed8\u5236\uff0c\u6240\u4ee5\u5b83\u4eec\u4e0d\u9700\u8981\u6392\u5e8f\u3002\u4f46\u6211\u4eec\u4ecd\u8981\u4fdd\u8bc1\u5b83\u4eec\u5728\u7ed8\u5236\uff08\u6392\u5e8f\u7684\uff09\u900f\u660e\u7269\u4f53\u4e4b\u524d\u5df2\u7ecf\u7ed8\u5236\u5b8c\u6bd5\u4e86\u3002\u5f53\u7ed8\u5236\u4e00\u4e2a\u6709\u4e0d\u900f\u660e\u548c\u900f\u660e\u7269\u4f53\u7684\u573a\u666f\u7684\u65f6\u5019\uff0c\u5927\u4f53\u7684\u539f\u5219\u5982\u4e0b\uff1a \u5148\u7ed8\u5236\u6240\u6709\u4e0d\u900f\u660e\u7684\u7269\u4f53\u3002 \u5bf9\u6240\u6709\u900f\u660e\u7684\u7269\u4f53\u6392\u5e8f\u3002 \u6309\u987a\u5e8f\u7ed8\u5236\u6240\u6709\u900f\u660e\u7684\u7269\u4f53\u3002 \u6392\u5e8f\u900f\u660e\u7269\u4f53\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\uff0c\u4ece\u89c2\u5bdf\u8005\u89c6\u89d2\u83b7\u53d6\u7269\u4f53\u7684\u8ddd\u79bb\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u6444\u50cf\u673a\u4f4d\u7f6e\u5411\u91cf\u548c\u7269\u4f53\u7684\u4f4d\u7f6e\u5411\u91cf\u4e4b\u95f4\u7684\u8ddd\u79bb\u6240\u83b7\u5f97\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u628a\u8ddd\u79bb\u548c\u5b83\u5bf9\u5e94\u7684\u4f4d\u7f6e\u5411\u91cf\u5b58\u50a8\u5230\u4e00\u4e2aSTL\u5e93\u7684 map \u6570\u636e\u7ed3\u6784\u4e2d\u3002 map \u4f1a\u81ea\u52a8\u6839\u636e\u952e\u503c(Key)\u5bf9\u5b83\u7684\u503c\u6392\u5e8f\uff0c\u6240\u4ee5\u53ea\u8981\u6211\u4eec\u6dfb\u52a0\u4e86\u6240\u6709\u7684\u4f4d\u7f6e\uff0c\u5e76\u4ee5\u5b83\u7684\u8ddd\u79bb\u4f5c\u4e3a\u952e\uff0c\u5b83\u4eec\u5c31\u4f1a\u81ea\u52a8\u6839\u636e\u8ddd\u79bb\u503c\u6392\u5e8f\u4e86\u3002 std::map<float, glm::vec3> sorted; for (unsigned int i = 0; i < windows.size(); i++) { float distance = glm::length(camera.Position - windows[i]); sorted[distance] = windows[i]; } \u7ed3\u679c\u5c31\u662f\u4e00\u4e2a\u6392\u5e8f\u540e\u7684\u5bb9\u5668\u5bf9\u8c61\uff0c\u5b83\u6839\u636e distance \u952e\u503c\u4ece\u4f4e\u5230\u9ad8\u50a8\u5b58\u4e86\u6bcf\u4e2a\u7a97\u6237\u7684\u4f4d\u7f6e\u3002 \u4e4b\u540e\uff0c\u8fd9\u6b21\u5728\u6e32\u67d3\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c06\u4ee5\u9006\u5e8f\uff08\u4ece\u8fdc\u5230\u8fd1\uff09\u4ecemap\u4e2d\u83b7\u53d6\u503c\uff0c\u4e4b\u540e\u4ee5\u6b63\u786e\u7684\u987a\u5e8f\u7ed8\u5236\u5bf9\u5e94\u7684\u7a97\u6237\uff1a for(std::map<float,glm::vec3>::reverse_iterator it = sorted.rbegin(); it != sorted.rend(); ++it) { model = glm::mat4(); model = glm::translate(model, it->second); shader.setMat4(\"model\", model); glDrawArrays(GL_TRIANGLES, 0, 6); } \u6211\u4eec\u4f7f\u7528\u4e86 map \u7684\u4e00\u4e2a\u53cd\u5411\u8fed\u4ee3\u5668(Reverse Iterator)\uff0c\u53cd\u5411\u904d\u5386\u5176\u4e2d\u7684\u6761\u76ee\uff0c\u5e76\u5c06\u6bcf\u4e2a\u7a97\u6237\u56db\u8fb9\u5f62\u4f4d\u79fb\u5230\u5bf9\u5e94\u7684\u7a97\u6237\u4f4d\u7f6e\u4e0a\u3002\u8fd9\u662f\u6392\u5e8f\u900f\u660e\u7269\u4f53\u7684\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684\u5b9e\u73b0\uff0c\u5b83\u80fd\u591f\u4fee\u590d\u4e4b\u524d\u7684\u95ee\u9898\uff0c\u73b0\u5728\u573a\u666f\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5e26\u6709\u6392\u5e8f\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002 \u867d\u7136\u6309\u7167\u8ddd\u79bb\u6392\u5e8f\u7269\u4f53\u8fd9\u79cd\u65b9\u6cd5\u5bf9\u6211\u4eec\u8fd9\u4e2a\u573a\u666f\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u5b83\u5e76\u6ca1\u6709\u8003\u8651\u65cb\u8f6c\u3001\u7f29\u653e\u6216\u8005\u5176\u5b83\u7684\u53d8\u6362\uff0c\u5947\u602a\u5f62\u72b6\u7684\u7269\u4f53\u9700\u8981\u4e00\u4e2a\u4e0d\u540c\u7684\u8ba1\u91cf\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u4e00\u4e2a\u4f4d\u7f6e\u5411\u91cf\u3002 \u5728\u573a\u666f\u4e2d\u6392\u5e8f\u7269\u4f53\u662f\u4e00\u4e2a\u5f88\u56f0\u96be\u7684\u6280\u672f\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u7531\u4f60\u573a\u666f\u7684\u7c7b\u578b\u6240\u51b3\u5b9a\uff0c\u66f4\u522b\u8bf4\u5b83\u989d\u5916\u9700\u8981\u6d88\u8017\u7684\u5904\u7406\u80fd\u529b\u4e86\u3002\u5b8c\u6574\u6e32\u67d3\u4e00\u4e2a\u5305\u542b\u4e0d\u900f\u660e\u548c\u900f\u660e\u7269\u4f53\u7684\u573a\u666f\u5e76\u4e0d\u662f\u90a3\u4e48\u5bb9\u6613\u3002\u66f4\u9ad8\u7ea7\u7684\u6280\u672f\u8fd8\u6709 \u6b21\u5e8f\u65e0\u5173\u900f\u660e\u5ea6 (Order Independent Transparency, OIT)\uff0c\u4f46\u8fd9\u8d85\u51fa\u672c\u6559\u7a0b\u7684\u8303\u56f4\u4e86\u3002\u73b0\u5728\uff0c\u4f60\u8fd8\u662f\u5fc5\u987b\u8981\u666e\u901a\u5730\u6df7\u5408\u4f60\u7684\u7269\u4f53\uff0c\u4f46\u5982\u679c\u4f60\u5f88\u5c0f\u5fc3\uff0c\u5e76\u4e14\u77e5\u9053\u76ee\u524d\u65b9\u6cd5\u7684\u9650\u5236\u7684\u8bdd\uff0c\u4f60\u4ecd\u7136\u80fd\u591f\u83b7\u5f97\u4e00\u4e2a\u6bd4\u8f83\u4e0d\u9519\u7684\u6df7\u5408\u5b9e\u73b0\u3002","title":"\u6df7\u5408"},{"location":"04%20Advanced%20OpenGL/03%20Blending/#_1","text":"\u539f\u6587 Blending \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet, Django \u6821\u5bf9 \u6682\u65e0\u6821\u5bf9 OpenGL\u4e2d\uff0c \u6df7\u5408 (Blending)\u901a\u5e38\u662f\u5b9e\u73b0\u7269\u4f53 \u900f\u660e\u5ea6 (Transparency)\u7684\u4e00\u79cd\u6280\u672f\u3002\u900f\u660e\u5c31\u662f\u8bf4\u4e00\u4e2a\u7269\u4f53\uff08\u6216\u8005\u5176\u4e2d\u7684\u4e00\u90e8\u5206\uff09\u4e0d\u662f\u7eaf\u8272(Solid Color)\u7684\uff0c\u5b83\u7684\u989c\u8272\u662f\u7269\u4f53\u672c\u8eab\u7684\u989c\u8272\u548c\u5b83\u80cc\u540e\u5176\u5b83\u7269\u4f53\u7684\u989c\u8272\u7684\u4e0d\u540c\u5f3a\u5ea6\u7ed3\u5408\u3002\u4e00\u4e2a\u6709\u8272\u73bb\u7483\u7a97\u662f\u4e00\u4e2a\u900f\u660e\u7684\u7269\u4f53\uff0c\u73bb\u7483\u6709\u5b83\u81ea\u5df1\u7684\u989c\u8272\uff0c\u4f46\u5b83\u6700\u7ec8\u7684\u989c\u8272\u8fd8\u5305\u542b\u4e86\u73bb\u7483\u4e4b\u540e\u6240\u6709\u7269\u4f53\u7684\u989c\u8272\u3002\u8fd9\u4e5f\u662f\u6df7\u5408\u8fd9\u4e00\u540d\u5b57\u7684\u51fa\u5904\uff0c\u6211\u4eec \u6df7\u5408 (Blend)\uff08\u4e0d\u540c\u7269\u4f53\u7684\uff09\u591a\u79cd\u989c\u8272\u4e3a\u4e00\u79cd\u989c\u8272\u3002\u6240\u4ee5\u900f\u660e\u5ea6\u80fd\u8ba9\u6211\u4eec\u770b\u7a7f\u7269\u4f53\u3002 \u900f\u660e\u7684\u7269\u4f53\u53ef\u4ee5\u662f\u5b8c\u5168\u900f\u660e\u7684\uff08\u8ba9\u6240\u6709\u7684\u989c\u8272\u7a7f\u8fc7\uff09\uff0c\u6216\u8005\u662f\u534a\u900f\u660e\u7684\uff08\u5b83\u8ba9\u989c\u8272\u901a\u8fc7\uff0c\u540c\u65f6\u4e5f\u4f1a\u663e\u793a\u81ea\u8eab\u7684\u989c\u8272\uff09\u3002\u4e00\u4e2a\u7269\u4f53\u7684\u900f\u660e\u5ea6\u662f\u901a\u8fc7\u5b83\u989c\u8272\u7684 alpha \u503c\u6765\u51b3\u5b9a\u7684\u3002Alpha\u989c\u8272\u503c\u662f\u989c\u8272\u5411\u91cf\u7684\u7b2c\u56db\u4e2a\u5206\u91cf\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u770b\u5230\u8fc7\u5b83\u5f88\u591a\u904d\u4e86\u3002\u5728\u8fd9\u4e2a\u6559\u7a0b\u4e4b\u524d\u6211\u4eec\u90fd\u5c06\u8fd9\u4e2a\u7b2c\u56db\u4e2a\u5206\u91cf\u8bbe\u7f6e\u4e3a1.0\uff0c\u8ba9\u8fd9\u4e2a\u7269\u4f53\u7684\u900f\u660e\u5ea6\u4e3a0.0\uff0c\u800c\u5f53alpha\u503c\u4e3a0.0\u65f6\u7269\u4f53\u5c06\u4f1a\u662f\u5b8c\u5168\u900f\u660e\u7684\u3002\u5f53alpha\u503c\u4e3a0.5\u65f6\uff0c\u7269\u4f53\u7684\u989c\u8272\u670950%\u662f\u6765\u81ea\u7269\u4f53\u81ea\u8eab\u7684\u989c\u8272\uff0c50%\u6765\u81ea\u80cc\u540e\u7269\u4f53\u7684\u989c\u8272\u3002 \u6211\u4eec\u76ee\u524d\u4e00\u76f4\u4f7f\u7528\u7684\u7eb9\u7406\u6709\u4e09\u4e2a\u989c\u8272\u5206\u91cf\uff1a\u7ea2\u3001\u7eff\u3001\u84dd\u3002\u4f46\u4e00\u4e9b\u6750\u8d28\u4f1a\u6709\u4e00\u4e2a\u5185\u5d4c\u7684alpha\u901a\u9053\uff0c\u5bf9\u6bcf\u4e2a\u7eb9\u7d20(Texel)\u90fd\u5305\u542b\u4e86\u4e00\u4e2a alpha \u503c\u3002\u8fd9\u4e2aalpha\u503c\u7cbe\u786e\u5730\u544a\u8bc9\u6211\u4eec\u7eb9\u7406\u5404\u4e2a\u90e8\u5206\u7684\u900f\u660e\u5ea6\u3002\u6bd4\u5982\u8bf4\uff0c\u4e0b\u9762\u8fd9\u4e2a \u7a97\u6237\u7eb9\u7406 \u4e2d\u7684\u73bb\u7483\u90e8\u5206\u7684alpha\u503c\u4e3a0.25\uff08\u5b83\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\u662f\u5b8c\u5168\u7684\u7ea2\u8272\uff0c\u4f46\u7531\u4e8e\u5b83\u670975%\u7684\u900f\u660e\u5ea6\uff0c\u80fd\u8ba9\u5f88\u5927\u4e00\u90e8\u5206\u7684\u7f51\u7ad9\u80cc\u666f\u989c\u8272\u7a7f\u8fc7\uff0c\u8ba9\u5b83\u770b\u8d77\u6765\u4e0d\u90a3\u4e48\u7ea2\u4e86\uff09\uff0c\u89d2\u843d\u7684alpha\u503c\u662f0.0\u3002 \u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u5c06\u8fd9\u4e2a\u7a97\u6237\u7eb9\u7406\u6dfb\u52a0\u5230\u573a\u666f\u4e2d\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u8ba8\u8bba\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u6280\u672f\uff0c\u6765\u5b9e\u73b0\u53ea\u6709\u5b8c\u5168\u900f\u660e\u548c\u5b8c\u5168\u4e0d\u900f\u660e\u7684\u7eb9\u7406\u7684\u900f\u660e\u5ea6\u3002","title":"\u6df7\u5408"},{"location":"04%20Advanced%20OpenGL/03%20Blending/#_2","text":"\u6709\u4e9b\u56fe\u7247\u5e76\u4e0d\u9700\u8981\u534a\u900f\u660e\uff0c\u53ea\u9700\u8981\u6839\u636e\u7eb9\u7406\u989c\u8272\u503c\uff0c\u663e\u793a\u4e00\u90e8\u5206\uff0c\u6216\u8005\u4e0d\u663e\u793a\u4e00\u90e8\u5206\uff0c\u6ca1\u6709\u4e2d\u95f4\u60c5\u51b5\u3002\u6bd4\u5982\u8bf4\u8349\uff0c\u5982\u679c\u60f3\u4e0d\u592a\u8d39\u52b2\u5730\u521b\u5efa\u8349\u8fd9\u79cd\u4e1c\u897f\uff0c\u4f60\u9700\u8981\u5c06\u4e00\u4e2a\u8349\u7684\u7eb9\u7406\u8d34\u5728\u4e00\u4e2a2D\u56db\u8fb9\u5f62(Quad)\u4e0a\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u56db\u8fb9\u5f62\u653e\u5230\u573a\u666f\u4e2d\u3002\u7136\u800c\uff0c\u8349\u7684\u5f62\u72b6\u548c2D\u56db\u8fb9\u5f62\u7684\u5f62\u72b6\u5e76\u4e0d\u5b8c\u5168\u76f8\u540c\uff0c\u6240\u4ee5\u4f60\u53ea\u60f3\u663e\u793a\u8349\u7eb9\u7406\u7684\u67d0\u4e9b\u90e8\u5206\uff0c\u800c\u5ffd\u7565\u5269\u4e0b\u7684\u90e8\u5206\u3002 \u4e0b\u9762 \u8fd9\u4e2a \u7eb9\u7406\u6b63\u662f\u8fd9\u6837\u7684\uff0c\u5b83\u8981\u4e48\u662f\u5b8c\u5168\u4e0d\u900f\u660e\u7684\uff08alpha\u503c\u4e3a1.0\uff09\uff0c\u8981\u4e48\u662f\u5b8c\u5168\u900f\u660e\u7684\uff08alpha\u503c\u4e3a0.0\uff09\uff0c\u6ca1\u6709\u4e2d\u95f4\u60c5\u51b5\u3002\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u53ea\u8981\u4e0d\u662f\u8349\u7684\u90e8\u5206\uff0c\u8fd9\u4e2a\u56fe\u7247\u663e\u793a\u7684\u90fd\u662f\u7f51\u7ad9\u7684\u80cc\u666f\u989c\u8272\u800c\u4e0d\u662f\u5b83\u672c\u8eab\u7684\u989c\u8272\u3002 \u6240\u4ee5\u5f53\u6dfb\u52a0\u50cf\u8349\u8fd9\u6837\u7684\u690d\u88ab\u5230\u573a\u666f\u4e2d\u65f6\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u770b\u5230\u8349\u7684\u65b9\u5f62\u56fe\u50cf\uff0c\u800c\u662f\u53ea\u663e\u793a\u8349\u7684\u90e8\u5206\uff0c\u5e76\u80fd\u770b\u900f\u56fe\u50cf\u5176\u4f59\u7684\u90e8\u5206\u3002\u6211\u4eec\u60f3\u8981 \u4e22\u5f03 (Discard)\u663e\u793a\u7eb9\u7406\u4e2d\u900f\u660e\u90e8\u5206\u7684\u7247\u6bb5\uff0c\u4e0d\u5c06\u8fd9\u4e9b\u7247\u6bb5\u5b58\u50a8\u5230\u989c\u8272\u7f13\u51b2\u4e2d \u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4eec\u8fd8\u8981\u5b66\u4e60\u5982\u4f55\u52a0\u8f7d\u4e00\u4e2a\u900f\u660e\u7684\u7eb9\u7406\u3002\u8981\u60f3\u52a0\u8f7d\u6709alpha\u503c\u7684\u7eb9\u7406\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u6539\u5f88\u591a\u4e1c\u897f\uff0c stb_image \u5728\u7eb9\u7406\u6709alpha\u901a\u9053\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u52a0\u8f7d\uff0c\u4f46\u6211\u4eec\u4ecd\u8981\u5728\u7eb9\u7406\u751f\u6210\u8fc7\u7a0b\u4e2d\u544a\u8bc9OpenGL\uff0c\u6211\u4eec\u7684\u7eb9\u7406\u73b0\u5728\u4f7f\u7528alpha\u901a\u9053\u4e86\uff1a glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, width, height, 0, GL_RGBA, GL_UNSIGNED_BYTE, data); \u540c\u6837\uff0c\u4fdd\u8bc1\u4f60\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u83b7\u53d6\u4e86\u7eb9\u7406\u7684\u5168\u90e84\u4e2a\u989c\u8272\u5206\u91cf\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662fRGB\u5206\u91cf\uff1a void main() { // FragColor = vec4(vec3(texture(texture1, TexCoords)), 1.0); FragColor = texture(texture1, TexCoords); } \u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u8be5\u5982\u4f55\u52a0\u8f7d\u900f\u660e\u7684\u7eb9\u7406\u4e86\uff0c\u662f\u65f6\u5019\u5c06\u5b83\u5e26\u5165\u5b9e\u6218\u4e86\uff0c\u6211\u4eec\u5c06\u4f1a\u5728 \u6df1\u5ea6\u6d4b\u8bd5 \u5c0f\u8282\u7684\u573a\u666f\u4e2d\u52a0\u5165\u51e0\u68f5\u8349\u3002 \u6211\u4eec\u4f1a\u521b\u5efa\u4e00\u4e2avector\uff0c\u5411\u91cc\u9762\u6dfb\u52a0\u51e0\u4e2a glm::vec3 \u53d8\u91cf\u6765\u4ee3\u8868\u8349\u7684\u4f4d\u7f6e\uff1a vector<glm::vec3> vegetation; vegetation.push_back(glm::vec3(-1.5f, 0.0f, -0.48f)); vegetation.push_back(glm::vec3( 1.5f, 0.0f, 0.51f)); vegetation.push_back(glm::vec3( 0.0f, 0.0f, 0.7f)); vegetation.push_back(glm::vec3(-0.3f, 0.0f, -2.3f)); vegetation.push_back(glm::vec3( 0.5f, 0.0f, -0.6f)); \u6bcf\u4e2a\u8349\u90fd\u88ab\u6e32\u67d3\u5230\u4e86\u4e00\u4e2a\u56db\u8fb9\u5f62\u4e0a\uff0c\u8d34\u4e0a\u8349\u7684\u7eb9\u7406\u3002\u8fd9\u5e76\u4e0d\u80fd\u5b8c\u7f8e\u5730\u8868\u793a3D\u7684\u8349\uff0c\u4f46\u8fd9\u6bd4\u52a0\u8f7d\u590d\u6742\u7684\u6a21\u578b\u8981\u5feb\u591a\u4e86\u3002\u4f7f\u7528\u4e00\u4e9b\u5c0f\u6280\u5de7\uff0c\u6bd4\u5982\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\u52a0\u5165\u4e00\u4e9b\u65cb\u8f6c\u540e\u7684\u8349\u56db\u8fb9\u5f62\uff0c\u4f60\u4ecd\u7136\u80fd\u83b7\u5f97\u6bd4\u8f83\u597d\u7684\u7ed3\u679c\u7684\u3002 \u56e0\u4e3a\u8349\u7684\u7eb9\u7406\u662f\u6dfb\u52a0\u5230\u56db\u8fb9\u5f62\u5bf9\u8c61\u4e0a\u7684\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u521b\u5efa\u53e6\u5916\u4e00\u4e2aVAO\uff0c\u586b\u5145VBO\uff0c\u8bbe\u7f6e\u6b63\u786e\u7684\u9876\u70b9\u5c5e\u6027\u6307\u9488\u3002\u63a5\u4e0b\u6765\uff0c\u5728\u7ed8\u5236\u5b8c\u5730\u677f\u548c\u4e24\u4e2a\u7acb\u65b9\u4f53\u540e\uff0c\u6211\u4eec\u5c06\u4f1a\u7ed8\u5236\u8349\uff1a glBindVertexArray(vegetationVAO); glBindTexture(GL_TEXTURE_2D, grassTexture); for(unsigned int i = 0; i < vegetation.size(); i++) { model = glm::mat4(1.0f); model = glm::translate(model, vegetation[i]); shader.setMat4(\"model\", model); glDrawArrays(GL_TRIANGLES, 0, 6); } \u8fd0\u884c\u7a0b\u5e8f\u4f60\u5c06\u770b\u5230\uff1a \u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u662f\u56e0\u4e3aOpenGL\u9ed8\u8ba4\u662f\u4e0d\u77e5\u9053\u600e\u4e48\u5904\u7406alpha\u503c\u7684\uff0c\u66f4\u4e0d\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u5e94\u8be5\u4e22\u5f03\u7247\u6bb5\u3002\u6211\u4eec\u9700\u8981\u81ea\u5df1\u624b\u52a8\u6765\u5f04\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6709\u4e86\u7740\u8272\u5668\uff0c\u8fd9\u8fd8\u662f\u975e\u5e38\u5bb9\u6613\u7684\u3002GLSL\u7ed9\u4e86\u6211\u4eec discard \u547d\u4ee4\uff0c\u4e00\u65e6\u88ab\u8c03\u7528\uff0c\u5b83\u5c31\u4f1a\u4fdd\u8bc1\u7247\u6bb5\u4e0d\u4f1a\u88ab\u8fdb\u4e00\u6b65\u5904\u7406\uff0c\u6240\u4ee5\u5c31\u4e0d\u4f1a\u8fdb\u5165\u989c\u8272\u7f13\u51b2\u3002\u6709\u4e86\u8fd9\u4e2a\u6307\u4ee4\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u68c0\u6d4b\u4e00\u4e2a\u7247\u6bb5\u7684alpha\u503c\u662f\u5426\u4f4e\u4e8e\u67d0\u4e2a\u9608\u503c\uff0c\u5982\u679c\u662f\u7684\u8bdd\uff0c\u5219\u4e22\u5f03\u8fd9\u4e2a\u7247\u6bb5\uff0c\u5c31\u597d\u50cf\u5b83\u4e0d\u5b58\u5728\u4e00\u6837\uff1a #version 330 core out vec4 FragColor; in vec2 TexCoords; uniform sampler2D texture1; void main() { vec4 texColor = texture(texture1, TexCoords); if(texColor.a < 0.1) discard; FragColor = texColor; } \u8fd9\u91cc\uff0c\u6211\u4eec\u68c0\u6d4b\u88ab\u91c7\u6837\u7684\u7eb9\u7406\u989c\u8272\u7684alpha\u503c\u662f\u5426\u4f4e\u4e8e0.1\u7684\u9608\u503c\uff0c\u5982\u679c\u662f\u7684\u8bdd\uff0c\u5219\u4e22\u5f03\u8fd9\u4e2a\u7247\u6bb5\u3002\u7247\u6bb5\u7740\u8272\u5668\u4fdd\u8bc1\u4e86\u5b83\u53ea\u4f1a\u6e32\u67d3\u4e0d\u662f\uff08\u51e0\u4e4e\uff09\u5b8c\u5168\u900f\u660e\u7684\u7247\u6bb5\u3002\u73b0\u5728\u5b83\u770b\u8d77\u6765\u5c31\u6b63\u5e38\u4e86\uff1a Important \u6ce8\u610f\uff0c\u5f53\u91c7\u6837\u7eb9\u7406\u7684\u8fb9\u7f18\u7684\u65f6\u5019\uff0cOpenGL\u4f1a\u5bf9\u8fb9\u7f18\u7684\u503c\u548c\u7eb9\u7406\u4e0b\u4e00\u4e2a\u91cd\u590d\u7684\u503c\u8fdb\u884c\u63d2\u503c\uff08\u56e0\u4e3a\u6211\u4eec\u5c06\u5b83\u7684\u73af\u7ed5\u65b9\u5f0f\u8bbe\u7f6e\u4e3a\u4e86 GL_REPEAT \u3002\u8fd9\u901a\u5e38\u662f\u6ca1\u95ee\u9898\u7684\uff0c\u4f46\u662f\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u4e86\u900f\u660e\u503c\uff0c\u7eb9\u7406\u56fe\u50cf\u7684\u9876\u90e8\u5c06\u4f1a\u4e0e\u5e95\u90e8\u8fb9\u7f18\u7684\u7eaf\u8272\u503c\u8fdb\u884c\u63d2\u503c\u3002\u8fd9\u6837\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u534a\u900f\u660e\u7684\u6709\u8272\u8fb9\u6846\uff0c\u4f60\u53ef\u80fd\u4f1a\u770b\u89c1\u5b83\u73af\u7ed5\u7740\u4f60\u7684\u7eb9\u7406\u56db\u8fb9\u5f62\u3002\u8981\u60f3\u907f\u514d\u8fd9\u4e2a\uff0c\u6bcf\u5f53\u4f60alpha\u7eb9\u7406\u7684\u65f6\u5019\uff0c\u8bf7\u5c06\u7eb9\u7406\u7684\u73af\u7ed5\u65b9\u5f0f\u8bbe\u7f6e\u4e3a GL_CLAMP_TO_EDGE \uff1a glTexParameteri( GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri( GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u6e90\u7801\u3002","title":"\u4e22\u5f03\u7247\u6bb5"},{"location":"04%20Advanced%20OpenGL/03%20Blending/#_3","text":"\u867d\u7136\u76f4\u63a5\u4e22\u5f03\u7247\u6bb5\u5f88\u597d\uff0c\u4f46\u5b83\u4e0d\u80fd\u8ba9\u6211\u4eec\u6e32\u67d3\u534a\u900f\u660e\u7684\u56fe\u50cf\u3002\u6211\u4eec\u8981\u4e48\u6e32\u67d3\u4e00\u4e2a\u7247\u6bb5\uff0c\u8981\u4e48\u5b8c\u5168\u4e22\u5f03\u5b83\u3002\u8981\u60f3\u6e32\u67d3\u6709\u591a\u4e2a\u900f\u660e\u5ea6\u7ea7\u522b\u7684\u56fe\u50cf\uff0c\u6211\u4eec\u9700\u8981\u542f\u7528 \u6df7\u5408 (Blending)\u3002\u548cOpenGL\u5927\u591a\u6570\u7684\u529f\u80fd\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u542f\u7528 GL_BLEND \u6765\u542f\u7528\u6df7\u5408\uff1a glEnable(GL_BLEND); \u542f\u7528\u4e86\u6df7\u5408\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u544a\u8bc9OpenGL\u5b83\u8be5 \u5982\u4f55 \u6df7\u5408\u3002 OpenGL\u4e2d\u7684\u6df7\u5408\u662f\u901a\u8fc7\u4e0b\u9762\u8fd9\u4e2a\u65b9\u7a0b\u6765\u5b9e\u73b0\u7684\uff1a \\begin{equation}\\bar{C}_{result} = \\bar{\\color{green}C}_{source} * \\color{green}F_{source} + \\bar{\\color{red}C}_{destination} * \\color{red}F_{destination}\\end{equation} \\bar{\\color{green}C}_{source} \uff1a\u6e90\u989c\u8272\u5411\u91cf\u3002\u8fd9\u662f\u6e90\u81ea\u7eb9\u7406\u7684\u989c\u8272\u5411\u91cf\u3002 \\bar{\\color{red}C}_{destination} \uff1a\u76ee\u6807\u989c\u8272\u5411\u91cf\u3002\u8fd9\u662f\u5f53\u524d\u50a8\u5b58\u5728\u989c\u8272\u7f13\u51b2\u4e2d\u7684\u989c\u8272\u5411\u91cf\u3002 \\color{green}F_{source} \uff1a\u6e90\u56e0\u5b50\u503c\u3002\u6307\u5b9a\u4e86alpha\u503c\u5bf9\u6e90\u989c\u8272\u7684\u5f71\u54cd\u3002 \\color{red}F_{destination} \uff1a\u76ee\u6807\u56e0\u5b50\u503c\u3002\u6307\u5b9a\u4e86alpha\u503c\u5bf9\u76ee\u6807\u989c\u8272\u7684\u5f71\u54cd\u3002 \u7247\u6bb5\u7740\u8272\u5668\u8fd0\u884c\u5b8c\u6210\u540e\uff0c\u5e76\u4e14\u6240\u6709\u7684\u6d4b\u8bd5\u90fd\u901a\u8fc7\u4e4b\u540e\uff0c\u8fd9\u4e2a \u6df7\u5408\u65b9\u7a0b (Blend Equation)\u624d\u4f1a\u5e94\u7528\u5230\u7247\u6bb5\u989c\u8272\u8f93\u51fa\u4e0e\u5f53\u524d\u989c\u8272\u7f13\u51b2\u4e2d\u7684\u503c\uff08\u5f53\u524d\u7247\u6bb5\u4e4b\u524d\u50a8\u5b58\u7684\u4e4b\u524d\u7247\u6bb5\u7684\u989c\u8272\uff09\u4e0a\u3002\u6e90\u989c\u8272\u548c\u76ee\u6807\u989c\u8272\u5c06\u4f1a\u7531OpenGL\u81ea\u52a8\u8bbe\u5b9a\uff0c\u4f46\u6e90\u56e0\u5b50\u548c\u76ee\u6807\u56e0\u5b50\u7684\u503c\u53ef\u4ee5\u7531\u6211\u4eec\u6765\u51b3\u5b9a\u3002\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a \u6211\u4eec\u6709\u4e24\u4e2a\u65b9\u5f62\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u8fd9\u4e2a\u534a\u900f\u660e\u7684\u7eff\u8272\u65b9\u5f62\u7ed8\u5236\u5728\u7ea2\u8272\u65b9\u5f62\u4e4b\u4e0a\u3002\u7ea2\u8272\u7684\u65b9\u5f62\u5c06\u4f1a\u662f\u76ee\u6807\u989c\u8272\uff08\u6240\u4ee5\u5b83\u5e94\u8be5\u5148\u5728\u989c\u8272\u7f13\u51b2\u4e2d\uff09\uff0c\u6211\u4eec\u5c06\u8981\u5728\u8fd9\u4e2a\u7ea2\u8272\u65b9\u5f62\u4e4b\u4e0a\u7ed8\u5236\u8fd9\u4e2a\u7eff\u8272\u65b9\u5f62\u3002 \u95ee\u9898\u6765\u4e86\uff1a\u6211\u4eec\u5c06\u56e0\u5b50\u503c\u8bbe\u7f6e\u4e3a\u4ec0\u4e48\uff1f\u561b\uff0c\u6211\u4eec\u81f3\u5c11\u60f3\u8ba9\u7eff\u8272\u65b9\u5f62\u4e58\u4ee5\u5b83\u7684alpha\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u60f3\u8981\u5c06 F_{src} \u8bbe\u7f6e\u4e3a\u6e90\u989c\u8272\u5411\u91cf\u7684alpha\u503c\uff0c\u4e5f\u5c31\u662f0.6\u3002\u63a5\u4e0b\u6765\u5c31\u5e94\u8be5\u6e05\u695a\u4e86\uff0c\u76ee\u6807\u65b9\u5f62\u7684\u8d21\u732e\u5e94\u8be5\u4e3a\u5269\u4e0b\u7684alpha\u503c\u3002\u5982\u679c\u7eff\u8272\u65b9\u5f62\u5bf9\u6700\u7ec8\u989c\u8272\u8d21\u732e\u4e8660%\uff0c\u90a3\u4e48\u7ea2\u8272\u65b9\u5757\u5e94\u8be5\u5bf9\u6700\u7ec8\u989c\u8272\u8d21\u732e\u4e8640%\uff0c\u5373 1.0 - 0.6 \u3002\u6240\u4ee5\u6211\u4eec\u5c06 F_{destination} \u8bbe\u7f6e\u4e3a1\u51cf\u53bb\u6e90\u989c\u8272\u5411\u91cf\u7684alpha\u503c\u3002\u8fd9\u4e2a\u65b9\u7a0b\u53d8\u6210\u4e86\uff1a \\begin{equation}\\bar{C}_{result} = \\begin{pmatrix} \\color{red}{0.0} \\\\ \\color{green}{1.0} \\\\ \\color{blue}{0.0} \\\\ \\color{purple}{0.6} \\end{pmatrix} * \\color{green}{0.6} + \\begin{pmatrix} \\color{red}{1.0} \\\\ \\color{green}{0.0} \\\\ \\color{blue}{0.0} \\\\ \\color{purple}{1.0} \\end{pmatrix} * \\color{red}{(1 - 0.6)} \\end{equation} \u7ed3\u679c\u5c31\u662f\u91cd\u53e0\u65b9\u5f62\u7684\u7247\u6bb5\u5305\u542b\u4e86\u4e00\u4e2a60%\u7eff\u8272\uff0c40%\u7ea2\u8272\u7684\u4e00\u79cd\u810f\u516e\u516e\u7684\u989c\u8272\uff1a \u6700\u7ec8\u7684\u989c\u8272\u5c06\u4f1a\u88ab\u50a8\u5b58\u5230\u989c\u8272\u7f13\u51b2\u4e2d\uff0c\u66ff\u4ee3\u4e4b\u524d\u7684\u989c\u8272\u3002 \u8fd9\u6837\u5b50\u5f88\u4e0d\u9519\uff0c\u4f46\u6211\u4eec\u8be5\u5982\u4f55\u8ba9OpenGL\u4f7f\u7528\u8fd9\u6837\u7684\u56e0\u5b50\u5462\uff1f\u6b63\u597d\u6709\u4e00\u4e2a\u4e13\u95e8\u7684\u51fd\u6570\uff0c\u53eb\u505a glBlendFunc \u3002 glBlendFunc(GLenum sfactor, GLenum dfactor) \u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff0c\u6765\u8bbe\u7f6e \u6e90 \u548c \u76ee\u6807\u56e0\u5b50 \u3002OpenGL\u4e3a\u6211\u4eec\u5b9a\u4e49\u4e86\u5f88\u591a\u4e2a\u9009\u9879\uff0c\u6211\u4eec\u5c06\u5728\u4e0b\u9762\u5217\u51fa\u5927\u90e8\u5206\u6700\u5e38\u7528\u7684\u9009\u9879\u3002\u6ce8\u610f\u5e38\u6570\u989c\u8272\u5411\u91cf \\bar{\\color{blue}C}_{constant} \u53ef\u4ee5\u901a\u8fc7 glBlendColor \u51fd\u6570\u6765\u53e6\u5916\u8bbe\u7f6e\u3002 \u9009\u9879 \u503c GL_ZERO \u56e0\u5b50\u7b49\u4e8e 0 GL_ONE \u56e0\u5b50\u7b49\u4e8e 1 GL_SRC_COLOR \u56e0\u5b50\u7b49\u4e8e\u6e90\u989c\u8272\u5411\u91cf \\bar{\\color{green}C}_{source} GL_ONE_MINUS_SRC_COLOR \u56e0\u5b50\u7b49\u4e8e 1 - \\bar{\\color{green}C}_{source} GL_DST_COLOR \u56e0\u5b50\u7b49\u4e8e\u76ee\u6807\u989c\u8272\u5411\u91cf \\bar{\\color{red}C}_{destination} GL_ONE_MINUS_DST_COLOR \u56e0\u5b50\u7b49\u4e8e 1 - \\bar{\\color{red}C}_{destination} GL_SRC_ALPHA \u56e0\u5b50\u7b49\u4e8e \\bar{\\color{green}C}_{source} \u7684 alpha \u5206\u91cf GL_ONE_MINUS_SRC_ALPHA \u56e0\u5b50\u7b49\u4e8e 1 - \\bar{\\color{green}C}_{source} \u7684 alpha \u5206\u91cf GL_DST_ALPHA \u56e0\u5b50\u7b49\u4e8e \\bar{\\color{red}C}_{destination} \u7684 alpha \u5206\u91cf GL_ONE_MINUS_DST_ALPHA \u56e0\u5b50\u7b49\u4e8e 1 - \\bar{\\color{red}C}_{destination} \u7684 alpha \u5206\u91cf GL_CONSTANT_COLOR \u56e0\u5b50\u7b49\u4e8e\u5e38\u6570\u989c\u8272\u5411\u91cf \\bar{\\color{blue}C}_{constant} GL_ONE_MINUS_CONSTANT_COLOR \u56e0\u5b50\u7b49\u4e8e 1 - \\bar{\\color{blue}C}_{constant} GL_CONSTANT_ALPHA \u56e0\u5b50\u7b49\u4e8e \\bar{\\color{blue}C}_{constant} \u7684 alpha \u5206\u91cf GL_ONE_MINUS_CONSTANT_ALPHA \u56e0\u5b50\u7b49\u4e8e 1 - \\bar{\\color{blue}C}_{constant} \u7684 alpha \u5206\u91cf \u4e3a\u4e86\u83b7\u5f97\u4e4b\u524d\u4e24\u4e2a\u65b9\u5f62\u7684\u6df7\u5408\u7ed3\u679c\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u6e90\u989c\u8272\u5411\u91cf\u7684 alpha \u4f5c\u4e3a\u6e90\u56e0\u5b50\uff0c\u4f7f\u7528 1 - alpha \u4f5c\u4e3a\u76ee\u6807\u56e0\u5b50\u3002\u8fd9\u5c06\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u7684 glBlendFunc \uff1a glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); \u4e5f\u53ef\u4ee5\u4f7f\u7528 glBlendFuncSeparate \u4e3aRGB\u548calpha\u901a\u9053\u5206\u522b\u8bbe\u7f6e\u4e0d\u540c\u7684\u9009\u9879\uff1a glBlendFuncSeparate(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA, GL_ONE, GL_ZERO); \u8fd9\u4e2a\u51fd\u6570\u548c\u6211\u4eec\u4e4b\u524d\u8bbe\u7f6e\u7684\u90a3\u6837\u8bbe\u7f6e\u4e86RGB\u5206\u91cf\uff0c\u4f46\u8fd9\u6837\u53ea\u80fd\u8ba9\u6700\u7ec8\u7684alpha\u5206\u91cf\u88ab\u6e90\u989c\u8272\u5411\u91cf\u7684alpha\u503c\u6240\u5f71\u54cd\u5230\u3002 OpenGL\u751a\u81f3\u7ed9\u4e86\u6211\u4eec\u66f4\u591a\u7684\u7075\u6d3b\u6027\uff0c\u5141\u8bb8\u6211\u4eec\u6539\u53d8\u65b9\u7a0b\u4e2d\u6e90\u548c\u76ee\u6807\u90e8\u5206\u7684\u8fd0\u7b97\u7b26\u3002\u5f53\u524d\u6e90\u548c\u76ee\u6807\u662f\u76f8\u52a0\u7684\uff0c\u4f46\u5982\u679c\u613f\u610f\u7684\u8bdd\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8ba9\u5b83\u4eec\u76f8\u51cf\u3002 glBlendEquation(GLenum mode) \u5141\u8bb8\u6211\u4eec\u8bbe\u7f6e\u8fd0\u7b97\u7b26\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e09\u4e2a\u9009\u9879\uff1a GL_FUNC_ADD\uff1a\u9ed8\u8ba4\u9009\u9879\uff0c\u5c06\u4e24\u4e2a\u5206\u91cf\u76f8\u52a0\uff1a \\bar{C}_{result} = \\color{green}{Src} + \\color{red}{Dst} \u3002 GL_FUNC_SUBTRACT\uff1a\u5c06\u4e24\u4e2a\u5206\u91cf\u76f8\u51cf\uff1a \\bar{C}_{result} = \\color{green}{Src} - \\color{red}{Dst} \u3002 GL_FUNC_REVERSE_SUBTRACT\uff1a\u5c06\u4e24\u4e2a\u5206\u91cf\u76f8\u51cf\uff0c\u4f46\u987a\u5e8f\u76f8\u53cd\uff1a \\bar{C}_{result} = \\color{red}{Dst} - \\color{green}{Src} \u3002 GL_MIN\uff1a\u53d6\u4e24\u4e2a\u5206\u91cf\u4e2d\u7684\u6700\u5c0f\u503c\uff1a \\bar{C}_{result} = {min}(\\color{red}{Dst}, \\color{green}{Src}) \u3002 GL_MAX\uff1a\u53d6\u4e24\u4e2a\u5206\u91cf\u4e2d\u7684\u6700\u5927\u503c\uff1a \\bar{C}_{result} = {max}(\\color{red}{Dst}, \\color{green}{Src}) \u3002 \u901a\u5e38\u6211\u4eec\u90fd\u53ef\u4ee5\u7701\u7565\u8c03\u7528 glBlendEquation \uff0c\u56e0\u4e3a GL_FUNC_ADD \u5bf9\u5927\u90e8\u5206\u7684\u64cd\u4f5c\u6765\u8bf4\u90fd\u662f\u6211\u4eec\u5e0c\u671b\u7684\u6df7\u5408\u65b9\u7a0b\uff0c\u4f46\u5982\u679c\u4f60\u771f\u7684\u60f3\u6253\u7834\u4e3b\u6d41\uff0c\u5176\u5b83\u7684\u65b9\u7a0b\u4e5f\u53ef\u80fd\u7b26\u5408\u4f60\u7684\u8981\u6c42\u3002","title":"\u6df7\u5408"},{"location":"04%20Advanced%20OpenGL/03%20Blending/#_4","text":"\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u77e5\u9053OpenGL\u662f\u5982\u4f55\u5904\u7406\u6df7\u5408\u7684\u4e86\uff0c\u662f\u65f6\u5019\u5c06\u6211\u4eec\u7684\u77e5\u8bc6\u8fd0\u7528\u5230\u5b9e\u6218\u4e2d\u4e86\uff0c\u6211\u4eec\u5c06\u4f1a\u5728\u573a\u666f\u4e2d\u6dfb\u52a0\u51e0\u4e2a\u534a\u900f\u660e\u7684\u7a97\u6237\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u672c\u8282\u5f00\u59cb\u7684\u90a3\u4e2a\u573a\u666f\uff0c\u4f46\u662f\u8fd9\u6b21\u4e0d\u518d\u662f\u6e32\u67d3\u8349\u7684\u7eb9\u7406\u4e86\uff0c\u6211\u4eec\u73b0\u5728\u5c06\u4f7f\u7528\u672c\u8282\u5f00\u59cb\u65f6\u7684\u90a3\u4e2a \u900f\u660e\u7684\u7a97\u6237 \u7eb9\u7406\u3002 \u9996\u5148\uff0c\u5728\u521d\u59cb\u5316\u65f6\u6211\u4eec\u542f\u7528\u6df7\u5408\uff0c\u5e76\u8bbe\u5b9a\u76f8\u5e94\u7684\u6df7\u5408\u51fd\u6570\uff1a glEnable(GL_BLEND); glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); \u7531\u4e8e\u542f\u7528\u4e86\u6df7\u5408\uff0c\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u4e22\u5f03\u7247\u6bb5\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u7247\u6bb5\u7740\u8272\u5668\u8fd8\u539f\uff1a #version 330 core out vec4 FragColor; in vec2 TexCoords; uniform sampler2D texture1; void main() { FragColor = texture(texture1, TexCoords); } \u73b0\u5728\uff08\u6bcf\u5f53OpenGL\u6e32\u67d3\u4e86\u4e00\u4e2a\u7247\u6bb5\u65f6\uff09\u5b83\u90fd\u4f1a\u5c06\u5f53\u524d\u7247\u6bb5\u7684\u989c\u8272\u548c\u5f53\u524d\u989c\u8272\u7f13\u51b2\u4e2d\u7684\u7247\u6bb5\u989c\u8272\u6839\u636ealpha\u503c\u6765\u8fdb\u884c\u6df7\u5408\u3002\u7531\u4e8e\u7a97\u6237\u7eb9\u7406\u7684\u73bb\u7483\u90e8\u5206\u662f\u534a\u900f\u660e\u7684\uff0c\u6211\u4eec\u5e94\u8be5\u80fd\u901a\u7a97\u6237\u4e2d\u770b\u5230\u80cc\u540e\u7684\u573a\u666f\u4e86\u3002 \u5982\u679c\u4f60\u4ed4\u7ec6\u770b\u7684\u8bdd\uff0c\u4f60\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u6709\u4e9b\u4e0d\u5bf9\u52b2\u3002\u6700\u524d\u9762\u7a97\u6237\u7684\u900f\u660e\u90e8\u5206\u906e\u853d\u4e86\u80cc\u540e\u7684\u7a97\u6237\uff1f\u8fd9\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u5462\uff1f \u53d1\u751f\u8fd9\u4e00\u73b0\u8c61\u7684\u539f\u56e0\u662f\uff0c\u6df1\u5ea6\u6d4b\u8bd5\u548c\u6df7\u5408\u4e00\u8d77\u4f7f\u7528\u7684\u8bdd\u4f1a\u4ea7\u751f\u4e00\u4e9b\u9ebb\u70e6\u3002\u5f53\u5199\u5165\u6df1\u5ea6\u7f13\u51b2\u65f6\uff0c\u6df1\u5ea6\u7f13\u51b2\u4e0d\u4f1a\u68c0\u67e5\u7247\u6bb5\u662f\u5426\u662f\u900f\u660e\u7684\uff0c\u6240\u4ee5\u900f\u660e\u7684\u90e8\u5206\u4f1a\u548c\u5176\u5b83\u503c\u4e00\u6837\u5199\u5165\u5230\u6df1\u5ea6\u7f13\u51b2\u4e2d\u3002\u7ed3\u679c\u5c31\u662f\u7a97\u6237\u7684\u6574\u4e2a\u56db\u8fb9\u5f62\u4e0d\u8bba\u900f\u660e\u5ea6\u90fd\u4f1a\u8fdb\u884c\u6df1\u5ea6\u6d4b\u8bd5\u3002\u5373\u4f7f\u900f\u660e\u7684\u90e8\u5206\u5e94\u8be5\u663e\u793a\u80cc\u540e\u7684\u7a97\u6237\uff0c\u6df1\u5ea6\u6d4b\u8bd5\u4ecd\u7136\u4e22\u5f03\u4e86\u5b83\u4eec\u3002 \u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u968f\u610f\u5730\u51b3\u5b9a\u5982\u4f55\u6e32\u67d3\u7a97\u6237\uff0c\u8ba9\u6df1\u5ea6\u7f13\u51b2\u89e3\u51b3\u6240\u6709\u7684\u95ee\u9898\u4e86\u3002\u8fd9\u4e5f\u662f\u6df7\u5408\u53d8\u5f97\u6709\u4e9b\u9ebb\u70e6\u7684\u90e8\u5206\u3002\u8981\u60f3\u4fdd\u8bc1\u7a97\u6237\u4e2d\u80fd\u591f\u663e\u793a\u5b83\u4eec\u80cc\u540e\u7684\u7a97\u6237\uff0c\u6211\u4eec\u9700\u8981\u9996\u5148\u7ed8\u5236\u80cc\u540e\u7684\u8fd9\u90e8\u5206\u7a97\u6237\u3002\u8fd9\u4e5f\u5c31\u662f\u8bf4\u5728\u7ed8\u5236\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5fc5\u987b\u5148\u624b\u52a8\u5c06\u7a97\u6237\u6309\u7167\u6700\u8fdc\u5230\u6700\u8fd1\u6765\u6392\u5e8f\uff0c\u518d\u6309\u7167\u987a\u5e8f\u6e32\u67d3\u3002 Important \u6ce8\u610f\uff0c\u5bf9\u4e8e\u8349\u8fd9\u79cd\u5168\u900f\u660e\u7684\u7269\u4f53\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4e22\u5f03\u900f\u660e\u7684\u7247\u6bb5\u800c\u4e0d\u662f\u6df7\u5408\u5b83\u4eec\uff0c\u8fd9\u6837\u5c31\u89e3\u51b3\u4e86\u8fd9\u4e9b\u5934\u75bc\u7684\u95ee\u9898\uff08\u6ca1\u6709\u6df1\u5ea6\u95ee\u9898\uff09\u3002","title":"\u6e32\u67d3\u534a\u900f\u660e\u7eb9\u7406"},{"location":"04%20Advanced%20OpenGL/03%20Blending/#_5","text":"\u8981\u60f3\u8ba9\u6df7\u5408\u5728\u591a\u4e2a\u7269\u4f53\u4e0a\u5de5\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u6700\u5148\u7ed8\u5236\u6700\u8fdc\u7684\u7269\u4f53\uff0c\u6700\u540e\u7ed8\u5236\u6700\u8fd1\u7684\u7269\u4f53\u3002\u666e\u901a\u4e0d\u9700\u8981\u6df7\u5408\u7684\u7269\u4f53\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u6df1\u5ea6\u7f13\u51b2\u6b63\u5e38\u7ed8\u5236\uff0c\u6240\u4ee5\u5b83\u4eec\u4e0d\u9700\u8981\u6392\u5e8f\u3002\u4f46\u6211\u4eec\u4ecd\u8981\u4fdd\u8bc1\u5b83\u4eec\u5728\u7ed8\u5236\uff08\u6392\u5e8f\u7684\uff09\u900f\u660e\u7269\u4f53\u4e4b\u524d\u5df2\u7ecf\u7ed8\u5236\u5b8c\u6bd5\u4e86\u3002\u5f53\u7ed8\u5236\u4e00\u4e2a\u6709\u4e0d\u900f\u660e\u548c\u900f\u660e\u7269\u4f53\u7684\u573a\u666f\u7684\u65f6\u5019\uff0c\u5927\u4f53\u7684\u539f\u5219\u5982\u4e0b\uff1a \u5148\u7ed8\u5236\u6240\u6709\u4e0d\u900f\u660e\u7684\u7269\u4f53\u3002 \u5bf9\u6240\u6709\u900f\u660e\u7684\u7269\u4f53\u6392\u5e8f\u3002 \u6309\u987a\u5e8f\u7ed8\u5236\u6240\u6709\u900f\u660e\u7684\u7269\u4f53\u3002 \u6392\u5e8f\u900f\u660e\u7269\u4f53\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\uff0c\u4ece\u89c2\u5bdf\u8005\u89c6\u89d2\u83b7\u53d6\u7269\u4f53\u7684\u8ddd\u79bb\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u6444\u50cf\u673a\u4f4d\u7f6e\u5411\u91cf\u548c\u7269\u4f53\u7684\u4f4d\u7f6e\u5411\u91cf\u4e4b\u95f4\u7684\u8ddd\u79bb\u6240\u83b7\u5f97\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u628a\u8ddd\u79bb\u548c\u5b83\u5bf9\u5e94\u7684\u4f4d\u7f6e\u5411\u91cf\u5b58\u50a8\u5230\u4e00\u4e2aSTL\u5e93\u7684 map \u6570\u636e\u7ed3\u6784\u4e2d\u3002 map \u4f1a\u81ea\u52a8\u6839\u636e\u952e\u503c(Key)\u5bf9\u5b83\u7684\u503c\u6392\u5e8f\uff0c\u6240\u4ee5\u53ea\u8981\u6211\u4eec\u6dfb\u52a0\u4e86\u6240\u6709\u7684\u4f4d\u7f6e\uff0c\u5e76\u4ee5\u5b83\u7684\u8ddd\u79bb\u4f5c\u4e3a\u952e\uff0c\u5b83\u4eec\u5c31\u4f1a\u81ea\u52a8\u6839\u636e\u8ddd\u79bb\u503c\u6392\u5e8f\u4e86\u3002 std::map<float, glm::vec3> sorted; for (unsigned int i = 0; i < windows.size(); i++) { float distance = glm::length(camera.Position - windows[i]); sorted[distance] = windows[i]; } \u7ed3\u679c\u5c31\u662f\u4e00\u4e2a\u6392\u5e8f\u540e\u7684\u5bb9\u5668\u5bf9\u8c61\uff0c\u5b83\u6839\u636e distance \u952e\u503c\u4ece\u4f4e\u5230\u9ad8\u50a8\u5b58\u4e86\u6bcf\u4e2a\u7a97\u6237\u7684\u4f4d\u7f6e\u3002 \u4e4b\u540e\uff0c\u8fd9\u6b21\u5728\u6e32\u67d3\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c06\u4ee5\u9006\u5e8f\uff08\u4ece\u8fdc\u5230\u8fd1\uff09\u4ecemap\u4e2d\u83b7\u53d6\u503c\uff0c\u4e4b\u540e\u4ee5\u6b63\u786e\u7684\u987a\u5e8f\u7ed8\u5236\u5bf9\u5e94\u7684\u7a97\u6237\uff1a for(std::map<float,glm::vec3>::reverse_iterator it = sorted.rbegin(); it != sorted.rend(); ++it) { model = glm::mat4(); model = glm::translate(model, it->second); shader.setMat4(\"model\", model); glDrawArrays(GL_TRIANGLES, 0, 6); } \u6211\u4eec\u4f7f\u7528\u4e86 map \u7684\u4e00\u4e2a\u53cd\u5411\u8fed\u4ee3\u5668(Reverse Iterator)\uff0c\u53cd\u5411\u904d\u5386\u5176\u4e2d\u7684\u6761\u76ee\uff0c\u5e76\u5c06\u6bcf\u4e2a\u7a97\u6237\u56db\u8fb9\u5f62\u4f4d\u79fb\u5230\u5bf9\u5e94\u7684\u7a97\u6237\u4f4d\u7f6e\u4e0a\u3002\u8fd9\u662f\u6392\u5e8f\u900f\u660e\u7269\u4f53\u7684\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684\u5b9e\u73b0\uff0c\u5b83\u80fd\u591f\u4fee\u590d\u4e4b\u524d\u7684\u95ee\u9898\uff0c\u73b0\u5728\u573a\u666f\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5e26\u6709\u6392\u5e8f\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002 \u867d\u7136\u6309\u7167\u8ddd\u79bb\u6392\u5e8f\u7269\u4f53\u8fd9\u79cd\u65b9\u6cd5\u5bf9\u6211\u4eec\u8fd9\u4e2a\u573a\u666f\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u5b83\u5e76\u6ca1\u6709\u8003\u8651\u65cb\u8f6c\u3001\u7f29\u653e\u6216\u8005\u5176\u5b83\u7684\u53d8\u6362\uff0c\u5947\u602a\u5f62\u72b6\u7684\u7269\u4f53\u9700\u8981\u4e00\u4e2a\u4e0d\u540c\u7684\u8ba1\u91cf\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u4e00\u4e2a\u4f4d\u7f6e\u5411\u91cf\u3002 \u5728\u573a\u666f\u4e2d\u6392\u5e8f\u7269\u4f53\u662f\u4e00\u4e2a\u5f88\u56f0\u96be\u7684\u6280\u672f\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u7531\u4f60\u573a\u666f\u7684\u7c7b\u578b\u6240\u51b3\u5b9a\uff0c\u66f4\u522b\u8bf4\u5b83\u989d\u5916\u9700\u8981\u6d88\u8017\u7684\u5904\u7406\u80fd\u529b\u4e86\u3002\u5b8c\u6574\u6e32\u67d3\u4e00\u4e2a\u5305\u542b\u4e0d\u900f\u660e\u548c\u900f\u660e\u7269\u4f53\u7684\u573a\u666f\u5e76\u4e0d\u662f\u90a3\u4e48\u5bb9\u6613\u3002\u66f4\u9ad8\u7ea7\u7684\u6280\u672f\u8fd8\u6709 \u6b21\u5e8f\u65e0\u5173\u900f\u660e\u5ea6 (Order Independent Transparency, OIT)\uff0c\u4f46\u8fd9\u8d85\u51fa\u672c\u6559\u7a0b\u7684\u8303\u56f4\u4e86\u3002\u73b0\u5728\uff0c\u4f60\u8fd8\u662f\u5fc5\u987b\u8981\u666e\u901a\u5730\u6df7\u5408\u4f60\u7684\u7269\u4f53\uff0c\u4f46\u5982\u679c\u4f60\u5f88\u5c0f\u5fc3\uff0c\u5e76\u4e14\u77e5\u9053\u76ee\u524d\u65b9\u6cd5\u7684\u9650\u5236\u7684\u8bdd\uff0c\u4f60\u4ecd\u7136\u80fd\u591f\u83b7\u5f97\u4e00\u4e2a\u6bd4\u8f83\u4e0d\u9519\u7684\u6df7\u5408\u5b9e\u73b0\u3002","title":"\u4e0d\u8981\u6253\u4e71\u987a\u5e8f"},{"location":"04%20Advanced%20OpenGL/04%20Face%20culling/","text":"\u9762\u5254\u9664 \u539f\u6587 Face culling \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u5c1d\u8bd5\u5728\u8111\u5b50\u4e2d\u60f3\u8c61\u4e00\u4e2a3D\u7acb\u65b9\u4f53\uff0c\u6570\u6570\u4f60\u4ece\u4efb\u610f\u65b9\u5411\u6700\u591a\u80fd\u540c\u65f6\u770b\u5230\u51e0\u4e2a\u9762\u3002\u5982\u679c\u4f60\u7684\u60f3\u8c61\u529b\u4e0d\u662f\u8fc7\u4e8e\u4e30\u5bcc\u4e86\uff0c\u4f60\u5e94\u8be5\u80fd\u5f97\u51fa\u6700\u5927\u7684\u9762\u6570\u662f3\u3002\u4f60\u53ef\u4ee5\u4ece\u4efb\u610f\u4f4d\u7f6e\u548c\u4efb\u610f\u65b9\u5411\u770b\u5411\u8fd9\u4e2a\u7403\u4f53\uff0c\u4f46\u4f60\u6c38\u8fdc\u4e0d\u80fd\u770b\u52303\u4e2a\u4ee5\u4e0a\u7684\u9762\u3002\u6240\u4ee5\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u6d6a\u8d39\u65f6\u95f4\u7ed8\u5236\u6211\u4eec\u4e0d\u80fd\u770b\u89c1\u7684\u90a33\u4e2a\u9762\u5462\uff1f\u5982\u679c\u6211\u4eec\u80fd\u591f\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4e22\u5f03\u8fd9\u51e0\u4e2a\u770b\u4e0d\u89c1\u7684\u9762\uff0c\u6211\u4eec\u80fd\u7701\u4e0b\u8d85\u8fc750%\u7684\u7247\u6bb5\u7740\u8272\u5668\u6267\u884c\u6570\uff01 Important \u6211\u8bf4\u7684\u662f \u8d85\u8fc7 50%\u800c\u4e0d\u662f50%\uff0c\u56e0\u4e3a\u4ece\u7279\u5b9a\u89d2\u5ea6\u6765\u770b\u7684\u8bdd\u53ea\u80fd\u770b\u89c12\u4e2a\u751a\u81f3\u662f1\u4e2a\u9762\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c31\u80fd\u7701\u4e0b\u8d85\u8fc750%\u4e86\u3002 \u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4e3b\u610f\uff0c\u4f46\u6211\u4eec\u4ecd\u6709\u4e00\u4e2a\u95ee\u9898\u9700\u8981\u89e3\u51b3\uff1a\u6211\u4eec\u5982\u4f55\u77e5\u9053\u4e00\u4e2a\u7269\u4f53\u7684\u67d0\u4e00\u4e2a\u9762\u4e0d\u80fd\u4ece\u89c2\u5bdf\u8005\u89c6\u89d2\u770b\u5230\u5462\uff1f \u5982\u679c\u6211\u4eec\u60f3\u8c61\u4efb\u4f55\u4e00\u4e2a\u95ed\u5408\u5f62\u72b6\uff0c\u5b83\u7684\u6bcf\u4e00\u4e2a\u9762\u90fd\u6709\u4e24\u4fa7\uff0c\u6bcf\u4e00\u4fa7\u8981\u4e48 \u9762\u5411 \u7528\u6237\uff0c\u8981\u4e48\u80cc\u5bf9\u7528\u6237\u3002\u5982\u679c\u6211\u4eec\u80fd\u591f\u53ea\u7ed8\u5236 \u9762\u5411 \u89c2\u5bdf\u8005\u7684\u9762\u5462\uff1f \u8fd9\u6b63\u662f \u9762\u5254\u9664 (Face Culling)\u6240\u505a\u7684\u3002OpenGL\u80fd\u591f\u68c0\u67e5\u6240\u6709 \u9762\u5411 (Front Facing)\u89c2\u5bdf\u8005\u7684\u9762\uff0c\u5e76\u6e32\u67d3\u5b83\u4eec\uff0c\u800c\u4e22\u5f03\u90a3\u4e9b \u80cc\u5411 (Back Facing)\u7684\u9762\uff0c\u8282\u7701\u6211\u4eec\u5f88\u591a\u7684\u7247\u6bb5\u7740\u8272\u5668\u8c03\u7528\uff08\u5b83\u4eec\u7684\u5f00\u9500\u5f88\u5927\uff01\uff09\u3002\u4f46\u6211\u4eec\u4ecd\u8981\u544a\u8bc9OpenGL\u54ea\u4e9b\u9762\u662f\u6b63\u5411\u9762(Front Face)\uff0c\u54ea\u4e9b\u9762\u662f\u80cc\u5411\u9762(Back Face)\u3002OpenGL\u4f7f\u7528\u4e86\u4e00\u4e2a\u5f88\u806a\u660e\u7684\u6280\u5de7\uff0c\u5206\u6790\u9876\u70b9\u6570\u636e\u7684 \u73af\u7ed5\u987a\u5e8f (Winding Order)\u3002 \u73af\u7ed5\u987a\u5e8f \u5f53\u6211\u4eec\u5b9a\u4e49\u4e00\u7ec4\u4e09\u89d2\u5f62\u9876\u70b9\u65f6\uff0c\u6211\u4eec\u4f1a\u4ee5\u7279\u5b9a\u7684\u73af\u7ed5\u987a\u5e8f\u6765\u5b9a\u4e49\u5b83\u4eec\uff0c\u53ef\u80fd\u662f \u987a\u65f6\u9488 (Clockwise)\u7684\uff0c\u4e5f\u53ef\u80fd\u662f \u9006\u65f6\u9488 (Counter-clockwise)\u7684\u3002\u6bcf\u4e2a\u4e09\u89d2\u5f62\u75313\u4e2a\u9876\u70b9\u6240\u7ec4\u6210\uff0c\u6211\u4eec\u4f1a\u4ece\u4e09\u89d2\u5f62\u4e2d\u95f4\u6765\u770b\uff0c\u4e3a\u8fd93\u4e2a\u9876\u70b9\u8bbe\u5b9a\u4e00\u4e2a\u73af\u7ed5\u987a\u5e8f\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u4e86\u9876\u70b91\uff0c\u4e4b\u540e\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5b9a\u4e49\u9876\u70b92\u6216\u8005\u9876\u70b93\uff0c\u8fd9\u4e2a\u9009\u62e9\u5c06\u5b9a\u4e49\u4e86\u8fd9\u4e2a\u4e09\u89d2\u5f62\u7684\u73af\u7ed5\u987a\u5e8f\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5c55\u793a\u4e86\u8fd9\u70b9\uff1a float vertices[] = { // \u987a\u65f6\u9488 vertices[0], // \u9876\u70b91 vertices[1], // \u9876\u70b92 vertices[2], // \u9876\u70b93 // \u9006\u65f6\u9488 vertices[0], // \u9876\u70b91 vertices[2], // \u9876\u70b93 vertices[1] // \u9876\u70b92 }; \u6bcf\u7ec4\u7ec4\u6210\u4e09\u89d2\u5f62\u56fe\u5143\u7684\u4e09\u4e2a\u9876\u70b9\u5c31\u5305\u542b\u4e86\u4e00\u4e2a\u73af\u7ed5\u987a\u5e8f\u3002OpenGL\u5728\u6e32\u67d3\u56fe\u5143\u7684\u65f6\u5019\u5c06\u4f7f\u7528\u8fd9\u4e2a\u4fe1\u606f\u6765\u51b3\u5b9a\u4e00\u4e2a\u4e09\u89d2\u5f62\u662f\u4e00\u4e2a \u6b63\u5411 \u4e09\u89d2\u5f62\u8fd8\u662f \u80cc\u5411 \u4e09\u89d2\u5f62\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u9006\u65f6\u9488\u9876\u70b9\u6240\u5b9a\u4e49\u7684\u4e09\u89d2\u5f62\u5c06\u4f1a\u88ab\u5904\u7406\u4e3a\u6b63\u5411\u4e09\u89d2\u5f62\u3002 \u5f53\u4f60\u5b9a\u4e49\u9876\u70b9\u987a\u5e8f\u7684\u65f6\u5019\uff0c\u4f60\u5e94\u8be5\u60f3\u8c61\u5bf9\u5e94\u7684\u4e09\u89d2\u5f62\u662f\u9762\u5411\u4f60\u7684\uff0c\u6240\u4ee5\u4f60\u5b9a\u4e49\u7684\u4e09\u89d2\u5f62\u4ece\u6b63\u9762\u770b\u53bb\u5e94\u8be5\u662f\u9006\u65f6\u9488\u7684\u3002\u8fd9\u6837\u5b9a\u4e49\u9876\u70b9\u5f88\u68d2\u7684\u4e00\u70b9\u662f\uff0c\u5b9e\u9645\u7684\u73af\u7ed5\u987a\u5e8f\u662f\u5728\u5149\u6805\u5316\u9636\u6bb5\u8fdb\u884c\u7684\uff0c\u4e5f\u5c31\u662f\u9876\u70b9\u7740\u8272\u5668\u8fd0\u884c\u4e4b\u540e\u3002\u8fd9\u4e9b\u9876\u70b9\u5c31\u662f\u4ece \u89c2\u5bdf\u8005\u89c6\u89d2 \u6240\u89c1\u7684\u4e86\u3002 \u89c2\u5bdf\u8005\u6240\u9762\u5411\u7684\u6240\u6709\u4e09\u89d2\u5f62\u9876\u70b9\u5c31\u662f\u6211\u4eec\u6240\u6307\u5b9a\u7684\u6b63\u786e\u73af\u7ed5\u987a\u5e8f\u4e86\uff0c\u800c\u7acb\u65b9\u4f53\u53e6\u4e00\u9762\u7684\u4e09\u89d2\u5f62\u9876\u70b9\u5219\u662f\u4ee5\u76f8\u53cd\u7684\u73af\u7ed5\u987a\u5e8f\u6240\u6e32\u67d3\u7684\u3002\u8fd9\u6837\u7684\u7ed3\u679c\u5c31\u662f\uff0c\u6211\u4eec\u6240\u9762\u5411\u7684\u4e09\u89d2\u5f62\u5c06\u4f1a\u662f\u6b63\u5411\u4e09\u89d2\u5f62\uff0c\u800c\u80cc\u9762\u7684\u4e09\u89d2\u5f62\u5219\u662f\u80cc\u5411\u4e09\u89d2\u5f62\u3002\u4e0b\u9762\u8fd9\u5f20\u56fe\u663e\u793a\u4e86\u8fd9\u4e2a\u6548\u679c\uff1a \u5728\u9876\u70b9\u6570\u636e\u4e2d\uff0c\u6211\u4eec\u5c06\u4e24\u4e2a\u4e09\u89d2\u5f62\u90fd\u4ee5\u9006\u65f6\u9488\u987a\u5e8f\u5b9a\u4e49\uff08\u6b63\u9762\u7684\u4e09\u89d2\u5f62\u662f1\u30012\u30013\uff0c\u80cc\u9762\u7684\u4e09\u89d2\u5f62\u4e5f\u662f1\u30012\u30013\uff08\u5982\u679c\u6211\u4eec\u4ece\u6b63\u9762\u770b\u8fd9\u4e2a\u4e09\u89d2\u5f62\u7684\u8bdd\uff09\uff09\u3002\u7136\u800c\uff0c\u5982\u679c\u4ece\u89c2\u5bdf\u8005\u5f53\u524d\u89c6\u89d2\u4f7f\u75281\u30012\u30013\u7684\u987a\u5e8f\u6765\u7ed8\u5236\u7684\u8bdd\uff0c\u4ece\u89c2\u5bdf\u8005\u7684\u65b9\u5411\u6765\u770b\uff0c\u80cc\u9762\u7684\u4e09\u89d2\u5f62\u5c06\u4f1a\u662f\u4ee5\u987a\u65f6\u9488\u987a\u5e8f\u6e32\u67d3\u7684\u3002\u867d\u7136\u80cc\u9762\u7684\u4e09\u89d2\u5f62\u662f\u4ee5\u9006\u65f6\u9488\u5b9a\u4e49\u7684\uff0c\u5b83\u73b0\u5728\u662f\u4ee5\u987a\u65f6\u9488\u987a\u5e8f\u6e32\u67d3\u7684\u4e86\u3002\u8fd9\u6b63\u662f\u6211\u4eec\u60f3\u8981 \u5254\u9664 \uff08Cull\uff0c\u4e22\u5f03\uff09\u7684\u4e0d\u53ef\u89c1\u9762\u4e86\uff01 \u9762\u5254\u9664 \u5728\u672c\u8282\u7684\u5f00\u5934\u6211\u4eec\u5c31\u8bf4\u8fc7\uff0cOpenGL\u80fd\u591f\u4e22\u5f03\u90a3\u4e9b\u6e32\u67d3\u4e3a\u80cc\u5411\u4e09\u89d2\u5f62\u7684\u4e09\u89d2\u5f62\u56fe\u5143\u3002\u65e2\u7136\u5df2\u7ecf\u77e5\u9053\u5982\u4f55\u8bbe\u7f6e\u9876\u70b9\u7684\u73af\u7ed5\u987a\u5e8f\u4e86\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528OpenGL\u7684 \u9762\u5254\u9664 \u9009\u9879\u4e86\uff0c\u5b83\u9ed8\u8ba4\u662f\u7981\u7528\u72b6\u6001\u7684\u3002 \u5728\u4e4b\u524d\u6559\u7a0b\u4e2d\u4f7f\u7528\u7684\u7acb\u65b9\u4f53\u9876\u70b9\u6570\u636e\u5e76\u4e0d\u662f\u6309\u7167\u9006\u65f6\u9488\u73af\u7ed5\u987a\u5e8f\u5b9a\u4e49\u7684\uff0c\u6240\u4ee5\u6211\u66f4\u65b0\u4e86\u9876\u70b9\u6570\u636e\uff0c\u6765\u53cd\u6620\u9006\u65f6\u9488\u7684\u73af\u7ed5\u987a\u5e8f\uff0c\u4f60\u53ef\u4ee5\u4ece \u8fd9\u91cc \u590d\u5236\u5b83\u4eec\u3002\u5c1d\u8bd5\u60f3\u8c61\u8fd9\u4e9b\u9876\u70b9\uff0c\u786e\u8ba4\u5728\u6bcf\u4e2a\u4e09\u89d2\u5f62\u4e2d\u5b83\u4eec\u90fd\u662f\u4ee5\u9006\u65f6\u9488\u5b9a\u4e49\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4e60\u60ef\u3002 \u8981\u60f3\u542f\u7528\u9762\u5254\u9664\uff0c\u6211\u4eec\u53ea\u9700\u8981\u542f\u7528OpenGL\u7684 GL_CULL_FACE \u9009\u9879\uff1a glEnable(GL_CULL_FACE); \u4ece\u8fd9\u4e00\u53e5\u4ee3\u7801\u4e4b\u540e\uff0c\u6240\u6709\u80cc\u5411\u9762\u90fd\u5c06\u88ab\u4e22\u5f03\uff08\u5c1d\u8bd5\u98de\u8fdb\u7acb\u65b9\u4f53\u5185\u90e8\uff0c\u770b\u770b\u6240\u6709\u7684\u5185\u9762\u662f\u4e0d\u662f\u90fd\u88ab\u4e22\u5f03\u4e86\uff09\u3002\u76ee\u524d\u6211\u4eec\u5728\u6e32\u67d3\u7247\u6bb5\u7684\u65f6\u5019\u80fd\u591f\u8282\u770150%\u4ee5\u4e0a\u7684\u6027\u80fd\uff0c\u4f46\u6ce8\u610f\u8fd9\u53ea\u5bf9\u50cf\u7acb\u65b9\u4f53\u8fd9\u6837\u7684\u5c01\u95ed\u5f62\u72b6\u6709\u6548\u3002\u5f53\u6211\u4eec\u60f3\u8981\u7ed8\u5236 \u4e0a\u4e00\u8282 \u4e2d\u7684\u8349\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u518d\u6b21\u7981\u7528\u9762\u5254\u9664\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u6b63\u5411\u9762\u548c\u80cc\u5411\u9762\u90fd\u5e94\u8be5\u662f\u53ef\u89c1\u7684\u3002 OpenGL\u5141\u8bb8\u6211\u4eec\u6539\u53d8\u9700\u8981\u5254\u9664\u7684\u9762\u7684\u7c7b\u578b\u3002\u5982\u679c\u6211\u4eec\u53ea\u60f3\u5254\u9664\u6b63\u5411\u9762\u800c\u4e0d\u662f\u80cc\u5411\u9762\u4f1a\u600e\u4e48\u6837\uff1f\u6211\u4eec\u53ef\u4ee5\u8c03\u7528 glCullFace \u6765\u5b9a\u4e49\u8fd9\u4e00\u884c\u4e3a\uff1a glCullFace(GL_FRONT); glCullFace \u51fd\u6570\u6709\u4e09\u4e2a\u53ef\u7528\u7684\u9009\u9879\uff1a GL_BACK \uff1a\u53ea\u5254\u9664\u80cc\u5411\u9762\u3002 GL_FRONT \uff1a\u53ea\u5254\u9664\u6b63\u5411\u9762\u3002 GL_FRONT_AND_BACK \uff1a\u5254\u9664\u6b63\u5411\u9762\u548c\u80cc\u5411\u9762\u3002 glCullFace \u7684\u521d\u59cb\u503c\u662f GL_BACK \u3002\u9664\u4e86\u9700\u8981\u5254\u9664\u7684\u9762\u4e4b\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 glFrontFace \uff0c\u544a\u8bc9OpenGL\u6211\u4eec\u5e0c\u671b\u5c06\u987a\u65f6\u9488\u7684\u9762\uff08\u800c\u4e0d\u662f\u9006\u65f6\u9488\u7684\u9762\uff09\u5b9a\u4e49\u4e3a\u6b63\u5411\u9762\uff1a glFrontFace(GL_CCW); \u9ed8\u8ba4\u503c\u662f GL_CCW \uff0c\u5b83\u4ee3\u8868\u7684\u662f\u9006\u65f6\u9488\u7684\u73af\u7ed5\u987a\u5e8f\uff0c\u53e6\u4e00\u4e2a\u9009\u9879\u662f GL_CW \uff0c\u5b83\uff08\u663e\u7136\uff09\u4ee3\u8868\u7684\u662f\u987a\u65f6\u9488\u987a\u5e8f\u3002 \u6211\u4eec\u53ef\u4ee5\u6765\u505a\u4e00\u4e2a\u5b9e\u9a8c\uff0c\u544a\u8bc9OpenGL\u73b0\u5728\u987a\u65f6\u9488\u987a\u5e8f\u4ee3\u8868\u7684\u662f\u6b63\u5411\u9762\uff1a glEnable(GL_CULL_FACE); glCullFace(GL_BACK); glFrontFace(GL_CW); \u8fd9\u6837\u7684\u7ed3\u679c\u662f\u53ea\u6709\u80cc\u5411\u9762\u88ab\u6e32\u67d3\u4e86\uff1a \u6ce8\u610f\u4f60\u53ef\u4ee5\u4ecd\u4f7f\u7528\u9ed8\u8ba4\u7684\u9006\u65f6\u9488\u73af\u7ed5\u987a\u5e8f\uff0c\u4f46\u5254\u9664\u6b63\u5411\u9762\uff0c\u6765\u8fbe\u5230\u76f8\u540c\u7684\u6548\u679c\uff1a glEnable(GL_CULL_FACE); glCullFace(GL_FRONT); \u53ef\u4ee5\u770b\u5230\uff0c\u9762\u5254\u9664\u662f\u4e00\u4e2a\u63d0\u9ad8OpenGL\u7a0b\u5e8f\u6027\u80fd\u7684\u5f88\u68d2\u7684\u5de5\u5177\u3002\u4f46\u4f60\u9700\u8981\u8bb0\u4f4f\u54ea\u4e9b\u7269\u4f53\u80fd\u591f\u4ece\u9762\u5254\u9664\u4e2d\u83b7\u76ca\uff0c\u800c\u54ea\u4e9b\u7269\u4f53\u4e0d\u5e94\u8be5\u88ab\u5254\u9664\u3002 \u7ec3\u4e60 \u4f60\u80fd\u591f\u91cd\u65b0\u5b9a\u4e49\u9876\u70b9\u6570\u636e\uff0c\u5c06\u6bcf\u4e2a\u4e09\u89d2\u5f62\u8bbe\u7f6e\u4e3a\u987a\u65f6\u9488\u987a\u5e8f\uff0c\u5e76\u5c06\u987a\u65f6\u9488\u7684\u4e09\u89d2\u5f62\u8bbe\u7f6e\u4e3a\u6b63\u5411\u9762\uff0c\u4ecd\u5c06\u573a\u666f\u6e32\u67d3\u51fa\u6765\u5417\uff1f\uff1a \u53c2\u8003\u89e3\u7b54","title":"\u9762\u5254\u9664"},{"location":"04%20Advanced%20OpenGL/04%20Face%20culling/#_1","text":"\u539f\u6587 Face culling \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u5c1d\u8bd5\u5728\u8111\u5b50\u4e2d\u60f3\u8c61\u4e00\u4e2a3D\u7acb\u65b9\u4f53\uff0c\u6570\u6570\u4f60\u4ece\u4efb\u610f\u65b9\u5411\u6700\u591a\u80fd\u540c\u65f6\u770b\u5230\u51e0\u4e2a\u9762\u3002\u5982\u679c\u4f60\u7684\u60f3\u8c61\u529b\u4e0d\u662f\u8fc7\u4e8e\u4e30\u5bcc\u4e86\uff0c\u4f60\u5e94\u8be5\u80fd\u5f97\u51fa\u6700\u5927\u7684\u9762\u6570\u662f3\u3002\u4f60\u53ef\u4ee5\u4ece\u4efb\u610f\u4f4d\u7f6e\u548c\u4efb\u610f\u65b9\u5411\u770b\u5411\u8fd9\u4e2a\u7403\u4f53\uff0c\u4f46\u4f60\u6c38\u8fdc\u4e0d\u80fd\u770b\u52303\u4e2a\u4ee5\u4e0a\u7684\u9762\u3002\u6240\u4ee5\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u6d6a\u8d39\u65f6\u95f4\u7ed8\u5236\u6211\u4eec\u4e0d\u80fd\u770b\u89c1\u7684\u90a33\u4e2a\u9762\u5462\uff1f\u5982\u679c\u6211\u4eec\u80fd\u591f\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4e22\u5f03\u8fd9\u51e0\u4e2a\u770b\u4e0d\u89c1\u7684\u9762\uff0c\u6211\u4eec\u80fd\u7701\u4e0b\u8d85\u8fc750%\u7684\u7247\u6bb5\u7740\u8272\u5668\u6267\u884c\u6570\uff01 Important \u6211\u8bf4\u7684\u662f \u8d85\u8fc7 50%\u800c\u4e0d\u662f50%\uff0c\u56e0\u4e3a\u4ece\u7279\u5b9a\u89d2\u5ea6\u6765\u770b\u7684\u8bdd\u53ea\u80fd\u770b\u89c12\u4e2a\u751a\u81f3\u662f1\u4e2a\u9762\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c31\u80fd\u7701\u4e0b\u8d85\u8fc750%\u4e86\u3002 \u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4e3b\u610f\uff0c\u4f46\u6211\u4eec\u4ecd\u6709\u4e00\u4e2a\u95ee\u9898\u9700\u8981\u89e3\u51b3\uff1a\u6211\u4eec\u5982\u4f55\u77e5\u9053\u4e00\u4e2a\u7269\u4f53\u7684\u67d0\u4e00\u4e2a\u9762\u4e0d\u80fd\u4ece\u89c2\u5bdf\u8005\u89c6\u89d2\u770b\u5230\u5462\uff1f \u5982\u679c\u6211\u4eec\u60f3\u8c61\u4efb\u4f55\u4e00\u4e2a\u95ed\u5408\u5f62\u72b6\uff0c\u5b83\u7684\u6bcf\u4e00\u4e2a\u9762\u90fd\u6709\u4e24\u4fa7\uff0c\u6bcf\u4e00\u4fa7\u8981\u4e48 \u9762\u5411 \u7528\u6237\uff0c\u8981\u4e48\u80cc\u5bf9\u7528\u6237\u3002\u5982\u679c\u6211\u4eec\u80fd\u591f\u53ea\u7ed8\u5236 \u9762\u5411 \u89c2\u5bdf\u8005\u7684\u9762\u5462\uff1f \u8fd9\u6b63\u662f \u9762\u5254\u9664 (Face Culling)\u6240\u505a\u7684\u3002OpenGL\u80fd\u591f\u68c0\u67e5\u6240\u6709 \u9762\u5411 (Front Facing)\u89c2\u5bdf\u8005\u7684\u9762\uff0c\u5e76\u6e32\u67d3\u5b83\u4eec\uff0c\u800c\u4e22\u5f03\u90a3\u4e9b \u80cc\u5411 (Back Facing)\u7684\u9762\uff0c\u8282\u7701\u6211\u4eec\u5f88\u591a\u7684\u7247\u6bb5\u7740\u8272\u5668\u8c03\u7528\uff08\u5b83\u4eec\u7684\u5f00\u9500\u5f88\u5927\uff01\uff09\u3002\u4f46\u6211\u4eec\u4ecd\u8981\u544a\u8bc9OpenGL\u54ea\u4e9b\u9762\u662f\u6b63\u5411\u9762(Front Face)\uff0c\u54ea\u4e9b\u9762\u662f\u80cc\u5411\u9762(Back Face)\u3002OpenGL\u4f7f\u7528\u4e86\u4e00\u4e2a\u5f88\u806a\u660e\u7684\u6280\u5de7\uff0c\u5206\u6790\u9876\u70b9\u6570\u636e\u7684 \u73af\u7ed5\u987a\u5e8f (Winding Order)\u3002","title":"\u9762\u5254\u9664"},{"location":"04%20Advanced%20OpenGL/04%20Face%20culling/#_2","text":"\u5f53\u6211\u4eec\u5b9a\u4e49\u4e00\u7ec4\u4e09\u89d2\u5f62\u9876\u70b9\u65f6\uff0c\u6211\u4eec\u4f1a\u4ee5\u7279\u5b9a\u7684\u73af\u7ed5\u987a\u5e8f\u6765\u5b9a\u4e49\u5b83\u4eec\uff0c\u53ef\u80fd\u662f \u987a\u65f6\u9488 (Clockwise)\u7684\uff0c\u4e5f\u53ef\u80fd\u662f \u9006\u65f6\u9488 (Counter-clockwise)\u7684\u3002\u6bcf\u4e2a\u4e09\u89d2\u5f62\u75313\u4e2a\u9876\u70b9\u6240\u7ec4\u6210\uff0c\u6211\u4eec\u4f1a\u4ece\u4e09\u89d2\u5f62\u4e2d\u95f4\u6765\u770b\uff0c\u4e3a\u8fd93\u4e2a\u9876\u70b9\u8bbe\u5b9a\u4e00\u4e2a\u73af\u7ed5\u987a\u5e8f\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u4e86\u9876\u70b91\uff0c\u4e4b\u540e\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5b9a\u4e49\u9876\u70b92\u6216\u8005\u9876\u70b93\uff0c\u8fd9\u4e2a\u9009\u62e9\u5c06\u5b9a\u4e49\u4e86\u8fd9\u4e2a\u4e09\u89d2\u5f62\u7684\u73af\u7ed5\u987a\u5e8f\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5c55\u793a\u4e86\u8fd9\u70b9\uff1a float vertices[] = { // \u987a\u65f6\u9488 vertices[0], // \u9876\u70b91 vertices[1], // \u9876\u70b92 vertices[2], // \u9876\u70b93 // \u9006\u65f6\u9488 vertices[0], // \u9876\u70b91 vertices[2], // \u9876\u70b93 vertices[1] // \u9876\u70b92 }; \u6bcf\u7ec4\u7ec4\u6210\u4e09\u89d2\u5f62\u56fe\u5143\u7684\u4e09\u4e2a\u9876\u70b9\u5c31\u5305\u542b\u4e86\u4e00\u4e2a\u73af\u7ed5\u987a\u5e8f\u3002OpenGL\u5728\u6e32\u67d3\u56fe\u5143\u7684\u65f6\u5019\u5c06\u4f7f\u7528\u8fd9\u4e2a\u4fe1\u606f\u6765\u51b3\u5b9a\u4e00\u4e2a\u4e09\u89d2\u5f62\u662f\u4e00\u4e2a \u6b63\u5411 \u4e09\u89d2\u5f62\u8fd8\u662f \u80cc\u5411 \u4e09\u89d2\u5f62\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u9006\u65f6\u9488\u9876\u70b9\u6240\u5b9a\u4e49\u7684\u4e09\u89d2\u5f62\u5c06\u4f1a\u88ab\u5904\u7406\u4e3a\u6b63\u5411\u4e09\u89d2\u5f62\u3002 \u5f53\u4f60\u5b9a\u4e49\u9876\u70b9\u987a\u5e8f\u7684\u65f6\u5019\uff0c\u4f60\u5e94\u8be5\u60f3\u8c61\u5bf9\u5e94\u7684\u4e09\u89d2\u5f62\u662f\u9762\u5411\u4f60\u7684\uff0c\u6240\u4ee5\u4f60\u5b9a\u4e49\u7684\u4e09\u89d2\u5f62\u4ece\u6b63\u9762\u770b\u53bb\u5e94\u8be5\u662f\u9006\u65f6\u9488\u7684\u3002\u8fd9\u6837\u5b9a\u4e49\u9876\u70b9\u5f88\u68d2\u7684\u4e00\u70b9\u662f\uff0c\u5b9e\u9645\u7684\u73af\u7ed5\u987a\u5e8f\u662f\u5728\u5149\u6805\u5316\u9636\u6bb5\u8fdb\u884c\u7684\uff0c\u4e5f\u5c31\u662f\u9876\u70b9\u7740\u8272\u5668\u8fd0\u884c\u4e4b\u540e\u3002\u8fd9\u4e9b\u9876\u70b9\u5c31\u662f\u4ece \u89c2\u5bdf\u8005\u89c6\u89d2 \u6240\u89c1\u7684\u4e86\u3002 \u89c2\u5bdf\u8005\u6240\u9762\u5411\u7684\u6240\u6709\u4e09\u89d2\u5f62\u9876\u70b9\u5c31\u662f\u6211\u4eec\u6240\u6307\u5b9a\u7684\u6b63\u786e\u73af\u7ed5\u987a\u5e8f\u4e86\uff0c\u800c\u7acb\u65b9\u4f53\u53e6\u4e00\u9762\u7684\u4e09\u89d2\u5f62\u9876\u70b9\u5219\u662f\u4ee5\u76f8\u53cd\u7684\u73af\u7ed5\u987a\u5e8f\u6240\u6e32\u67d3\u7684\u3002\u8fd9\u6837\u7684\u7ed3\u679c\u5c31\u662f\uff0c\u6211\u4eec\u6240\u9762\u5411\u7684\u4e09\u89d2\u5f62\u5c06\u4f1a\u662f\u6b63\u5411\u4e09\u89d2\u5f62\uff0c\u800c\u80cc\u9762\u7684\u4e09\u89d2\u5f62\u5219\u662f\u80cc\u5411\u4e09\u89d2\u5f62\u3002\u4e0b\u9762\u8fd9\u5f20\u56fe\u663e\u793a\u4e86\u8fd9\u4e2a\u6548\u679c\uff1a \u5728\u9876\u70b9\u6570\u636e\u4e2d\uff0c\u6211\u4eec\u5c06\u4e24\u4e2a\u4e09\u89d2\u5f62\u90fd\u4ee5\u9006\u65f6\u9488\u987a\u5e8f\u5b9a\u4e49\uff08\u6b63\u9762\u7684\u4e09\u89d2\u5f62\u662f1\u30012\u30013\uff0c\u80cc\u9762\u7684\u4e09\u89d2\u5f62\u4e5f\u662f1\u30012\u30013\uff08\u5982\u679c\u6211\u4eec\u4ece\u6b63\u9762\u770b\u8fd9\u4e2a\u4e09\u89d2\u5f62\u7684\u8bdd\uff09\uff09\u3002\u7136\u800c\uff0c\u5982\u679c\u4ece\u89c2\u5bdf\u8005\u5f53\u524d\u89c6\u89d2\u4f7f\u75281\u30012\u30013\u7684\u987a\u5e8f\u6765\u7ed8\u5236\u7684\u8bdd\uff0c\u4ece\u89c2\u5bdf\u8005\u7684\u65b9\u5411\u6765\u770b\uff0c\u80cc\u9762\u7684\u4e09\u89d2\u5f62\u5c06\u4f1a\u662f\u4ee5\u987a\u65f6\u9488\u987a\u5e8f\u6e32\u67d3\u7684\u3002\u867d\u7136\u80cc\u9762\u7684\u4e09\u89d2\u5f62\u662f\u4ee5\u9006\u65f6\u9488\u5b9a\u4e49\u7684\uff0c\u5b83\u73b0\u5728\u662f\u4ee5\u987a\u65f6\u9488\u987a\u5e8f\u6e32\u67d3\u7684\u4e86\u3002\u8fd9\u6b63\u662f\u6211\u4eec\u60f3\u8981 \u5254\u9664 \uff08Cull\uff0c\u4e22\u5f03\uff09\u7684\u4e0d\u53ef\u89c1\u9762\u4e86\uff01","title":"\u73af\u7ed5\u987a\u5e8f"},{"location":"04%20Advanced%20OpenGL/04%20Face%20culling/#_3","text":"\u5728\u672c\u8282\u7684\u5f00\u5934\u6211\u4eec\u5c31\u8bf4\u8fc7\uff0cOpenGL\u80fd\u591f\u4e22\u5f03\u90a3\u4e9b\u6e32\u67d3\u4e3a\u80cc\u5411\u4e09\u89d2\u5f62\u7684\u4e09\u89d2\u5f62\u56fe\u5143\u3002\u65e2\u7136\u5df2\u7ecf\u77e5\u9053\u5982\u4f55\u8bbe\u7f6e\u9876\u70b9\u7684\u73af\u7ed5\u987a\u5e8f\u4e86\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528OpenGL\u7684 \u9762\u5254\u9664 \u9009\u9879\u4e86\uff0c\u5b83\u9ed8\u8ba4\u662f\u7981\u7528\u72b6\u6001\u7684\u3002 \u5728\u4e4b\u524d\u6559\u7a0b\u4e2d\u4f7f\u7528\u7684\u7acb\u65b9\u4f53\u9876\u70b9\u6570\u636e\u5e76\u4e0d\u662f\u6309\u7167\u9006\u65f6\u9488\u73af\u7ed5\u987a\u5e8f\u5b9a\u4e49\u7684\uff0c\u6240\u4ee5\u6211\u66f4\u65b0\u4e86\u9876\u70b9\u6570\u636e\uff0c\u6765\u53cd\u6620\u9006\u65f6\u9488\u7684\u73af\u7ed5\u987a\u5e8f\uff0c\u4f60\u53ef\u4ee5\u4ece \u8fd9\u91cc \u590d\u5236\u5b83\u4eec\u3002\u5c1d\u8bd5\u60f3\u8c61\u8fd9\u4e9b\u9876\u70b9\uff0c\u786e\u8ba4\u5728\u6bcf\u4e2a\u4e09\u89d2\u5f62\u4e2d\u5b83\u4eec\u90fd\u662f\u4ee5\u9006\u65f6\u9488\u5b9a\u4e49\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4e60\u60ef\u3002 \u8981\u60f3\u542f\u7528\u9762\u5254\u9664\uff0c\u6211\u4eec\u53ea\u9700\u8981\u542f\u7528OpenGL\u7684 GL_CULL_FACE \u9009\u9879\uff1a glEnable(GL_CULL_FACE); \u4ece\u8fd9\u4e00\u53e5\u4ee3\u7801\u4e4b\u540e\uff0c\u6240\u6709\u80cc\u5411\u9762\u90fd\u5c06\u88ab\u4e22\u5f03\uff08\u5c1d\u8bd5\u98de\u8fdb\u7acb\u65b9\u4f53\u5185\u90e8\uff0c\u770b\u770b\u6240\u6709\u7684\u5185\u9762\u662f\u4e0d\u662f\u90fd\u88ab\u4e22\u5f03\u4e86\uff09\u3002\u76ee\u524d\u6211\u4eec\u5728\u6e32\u67d3\u7247\u6bb5\u7684\u65f6\u5019\u80fd\u591f\u8282\u770150%\u4ee5\u4e0a\u7684\u6027\u80fd\uff0c\u4f46\u6ce8\u610f\u8fd9\u53ea\u5bf9\u50cf\u7acb\u65b9\u4f53\u8fd9\u6837\u7684\u5c01\u95ed\u5f62\u72b6\u6709\u6548\u3002\u5f53\u6211\u4eec\u60f3\u8981\u7ed8\u5236 \u4e0a\u4e00\u8282 \u4e2d\u7684\u8349\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u518d\u6b21\u7981\u7528\u9762\u5254\u9664\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u6b63\u5411\u9762\u548c\u80cc\u5411\u9762\u90fd\u5e94\u8be5\u662f\u53ef\u89c1\u7684\u3002 OpenGL\u5141\u8bb8\u6211\u4eec\u6539\u53d8\u9700\u8981\u5254\u9664\u7684\u9762\u7684\u7c7b\u578b\u3002\u5982\u679c\u6211\u4eec\u53ea\u60f3\u5254\u9664\u6b63\u5411\u9762\u800c\u4e0d\u662f\u80cc\u5411\u9762\u4f1a\u600e\u4e48\u6837\uff1f\u6211\u4eec\u53ef\u4ee5\u8c03\u7528 glCullFace \u6765\u5b9a\u4e49\u8fd9\u4e00\u884c\u4e3a\uff1a glCullFace(GL_FRONT); glCullFace \u51fd\u6570\u6709\u4e09\u4e2a\u53ef\u7528\u7684\u9009\u9879\uff1a GL_BACK \uff1a\u53ea\u5254\u9664\u80cc\u5411\u9762\u3002 GL_FRONT \uff1a\u53ea\u5254\u9664\u6b63\u5411\u9762\u3002 GL_FRONT_AND_BACK \uff1a\u5254\u9664\u6b63\u5411\u9762\u548c\u80cc\u5411\u9762\u3002 glCullFace \u7684\u521d\u59cb\u503c\u662f GL_BACK \u3002\u9664\u4e86\u9700\u8981\u5254\u9664\u7684\u9762\u4e4b\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 glFrontFace \uff0c\u544a\u8bc9OpenGL\u6211\u4eec\u5e0c\u671b\u5c06\u987a\u65f6\u9488\u7684\u9762\uff08\u800c\u4e0d\u662f\u9006\u65f6\u9488\u7684\u9762\uff09\u5b9a\u4e49\u4e3a\u6b63\u5411\u9762\uff1a glFrontFace(GL_CCW); \u9ed8\u8ba4\u503c\u662f GL_CCW \uff0c\u5b83\u4ee3\u8868\u7684\u662f\u9006\u65f6\u9488\u7684\u73af\u7ed5\u987a\u5e8f\uff0c\u53e6\u4e00\u4e2a\u9009\u9879\u662f GL_CW \uff0c\u5b83\uff08\u663e\u7136\uff09\u4ee3\u8868\u7684\u662f\u987a\u65f6\u9488\u987a\u5e8f\u3002 \u6211\u4eec\u53ef\u4ee5\u6765\u505a\u4e00\u4e2a\u5b9e\u9a8c\uff0c\u544a\u8bc9OpenGL\u73b0\u5728\u987a\u65f6\u9488\u987a\u5e8f\u4ee3\u8868\u7684\u662f\u6b63\u5411\u9762\uff1a glEnable(GL_CULL_FACE); glCullFace(GL_BACK); glFrontFace(GL_CW); \u8fd9\u6837\u7684\u7ed3\u679c\u662f\u53ea\u6709\u80cc\u5411\u9762\u88ab\u6e32\u67d3\u4e86\uff1a \u6ce8\u610f\u4f60\u53ef\u4ee5\u4ecd\u4f7f\u7528\u9ed8\u8ba4\u7684\u9006\u65f6\u9488\u73af\u7ed5\u987a\u5e8f\uff0c\u4f46\u5254\u9664\u6b63\u5411\u9762\uff0c\u6765\u8fbe\u5230\u76f8\u540c\u7684\u6548\u679c\uff1a glEnable(GL_CULL_FACE); glCullFace(GL_FRONT); \u53ef\u4ee5\u770b\u5230\uff0c\u9762\u5254\u9664\u662f\u4e00\u4e2a\u63d0\u9ad8OpenGL\u7a0b\u5e8f\u6027\u80fd\u7684\u5f88\u68d2\u7684\u5de5\u5177\u3002\u4f46\u4f60\u9700\u8981\u8bb0\u4f4f\u54ea\u4e9b\u7269\u4f53\u80fd\u591f\u4ece\u9762\u5254\u9664\u4e2d\u83b7\u76ca\uff0c\u800c\u54ea\u4e9b\u7269\u4f53\u4e0d\u5e94\u8be5\u88ab\u5254\u9664\u3002","title":"\u9762\u5254\u9664"},{"location":"04%20Advanced%20OpenGL/04%20Face%20culling/#_4","text":"\u4f60\u80fd\u591f\u91cd\u65b0\u5b9a\u4e49\u9876\u70b9\u6570\u636e\uff0c\u5c06\u6bcf\u4e2a\u4e09\u89d2\u5f62\u8bbe\u7f6e\u4e3a\u987a\u65f6\u9488\u987a\u5e8f\uff0c\u5e76\u5c06\u987a\u65f6\u9488\u7684\u4e09\u89d2\u5f62\u8bbe\u7f6e\u4e3a\u6b63\u5411\u9762\uff0c\u4ecd\u5c06\u573a\u666f\u6e32\u67d3\u51fa\u6765\u5417\uff1f\uff1a \u53c2\u8003\u89e3\u7b54","title":"\u7ec3\u4e60"},{"location":"04%20Advanced%20OpenGL/05%20Framebuffers/","text":"\u5e27\u7f13\u51b2 \u539f\u6587 Framebuffers \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 AoZhang \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u4e86\u5f88\u591a\u5c4f\u5e55\u7f13\u51b2\u4e86\uff1a\u7528\u4e8e\u5199\u5165\u989c\u8272\u503c\u7684\u989c\u8272\u7f13\u51b2\u3001\u7528\u4e8e\u5199\u5165\u6df1\u5ea6\u4fe1\u606f\u7684\u6df1\u5ea6\u7f13\u51b2\u548c\u5141\u8bb8\u6211\u4eec\u6839\u636e\u4e00\u4e9b\u6761\u4ef6\u4e22\u5f03\u7279\u5b9a\u7247\u6bb5\u7684\u6a21\u677f\u7f13\u51b2\u3002\u8fd9\u4e9b\u7f13\u51b2\u7ed3\u5408\u8d77\u6765\u53eb\u505a \u5e27\u7f13\u51b2 (Framebuffer)\uff0c\u5b83\u88ab\u50a8\u5b58\u5728GPU\u5185\u5b58\u4e2d\u7684\u67d0\u5904\u3002OpenGL\u5141\u8bb8\u6211\u4eec\u5b9a\u4e49\u6211\u4eec\u81ea\u5df1\u7684\u5e27\u7f13\u51b2\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u80fd\u591f\u5b9a\u4e49\u6211\u4eec\u81ea\u5df1\u7684\u989c\u8272\u7f13\u51b2\uff0c\u751a\u81f3\u662f\u6df1\u5ea6\u7f13\u51b2\u548c\u6a21\u677f\u7f13\u51b2\u3002 \u6211\u4eec\u76ee\u524d\u6240\u505a\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u662f\u5728 \u9ed8\u8ba4\u5e27\u7f13\u51b2 \u7684\u6e32\u67d3\u7f13\u51b2\u4e0a\u8fdb\u884c\u7684\u3002\u9ed8\u8ba4\u7684\u5e27\u7f13\u51b2\u662f\u5728\u4f60\u521b\u5efa\u7a97\u53e3\u7684\u65f6\u5019\u751f\u6210\u548c\u914d\u7f6e\u7684\uff08GLFW\u5e2e\u6211\u4eec\u505a\u4e86\u8fd9\u4e9b\uff09\u3002\u901a\u8fc7\u521b\u5efa\u6211\u4eec\u81ea\u5df1\u7684\u5e27\u7f13\u51b2\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u989d\u5916\u7684\u6e32\u67d3\u76ee\u6807(target)\u3002 \u4f60\u53ef\u80fd\u4e0d\u80fd\u5f88\u5feb\u7406\u89e3\u5e27\u7f13\u51b2\u7684\u5e94\u7528\uff0c\u4f46\u6e32\u67d3\u4f60\u7684\u573a\u666f\u5230\u4e0d\u540c\u7684\u5e27\u7f13\u51b2\u80fd\u591f\u8ba9\u6211\u4eec\u5728\u573a\u666f\u4e2d\u52a0\u5165\u7c7b\u4f3c\u955c\u5b50\u7684\u4e1c\u897f\uff0c\u6216\u8005\u505a\u51fa\u5f88\u9177\u7684\u540e\u671f\u5904\u7406\u6548\u679c\u3002\u9996\u5148\u6211\u4eec\u4f1a\u8ba8\u8bba\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4e4b\u540e\u6211\u4eec\u5c06\u6765\u5b9e\u73b0\u8fd9\u4e9b\u70ab\u9177\u7684\u540e\u671f\u5904\u7406\u6548\u679c\u3002 \u521b\u5efa\u4e00\u4e2a\u5e27\u7f13\u51b2 \u548cOpenGL\u4e2d\u7684\u5176\u5b83\u5bf9\u8c61\u4e00\u6837\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u4e00\u4e2a\u53eb\u505a glGenFramebuffers \u7684\u51fd\u6570\u6765\u521b\u5efa\u4e00\u4e2a\u5e27\u7f13\u51b2\u5bf9\u8c61(Framebuffer Object, FBO)\uff1a unsigned int fbo; glGenFramebuffers(1, &fbo); \u8fd9\u79cd\u521b\u5efa\u548c\u4f7f\u7528\u5bf9\u8c61\u7684\u65b9\u5f0f\u6211\u4eec\u5df2\u7ecf\u89c1\u8fc7\u5f88\u591a\u6b21\u4e86\uff0c\u6240\u4ee5\u5b83\u7684\u4f7f\u7528\u51fd\u6570\u4e5f\u548c\u5176\u5b83\u7684\u5bf9\u8c61\u7c7b\u4f3c\u3002\u9996\u5148\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5e27\u7f13\u51b2\u5bf9\u8c61\uff0c\u5c06\u5b83\u7ed1\u5b9a\u4e3a\u6fc0\u6d3b\u7684(Active)\u5e27\u7f13\u51b2\uff0c\u505a\u4e00\u4e9b\u64cd\u4f5c\uff0c\u4e4b\u540e\u89e3\u7ed1\u5e27\u7f13\u51b2\u3002\u6211\u4eec\u4f7f\u7528 glBindFramebuffer \u6765\u7ed1\u5b9a\u5e27\u7f13\u51b2\u3002 glBindFramebuffer(GL_FRAMEBUFFER, fbo); \u5728\u7ed1\u5b9a\u5230 GL_FRAMEBUFFER \u76ee\u6807\u4e4b\u540e\uff0c\u6240\u6709\u7684 \u8bfb\u53d6 \u548c \u5199\u5165 \u5e27\u7f13\u51b2\u7684\u64cd\u4f5c\u5c06\u4f1a\u5f71\u54cd\u5f53\u524d\u7ed1\u5b9a\u7684\u5e27\u7f13\u51b2\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 GL_READ_FRAMEBUFFER \u6216 GL_DRAW_FRAMEBUFFER \uff0c\u5c06\u4e00\u4e2a\u5e27\u7f13\u51b2\u5206\u522b\u7ed1\u5b9a\u5230\u8bfb\u53d6\u76ee\u6807\u6216\u5199\u5165\u76ee\u6807\u3002\u7ed1\u5b9a\u5230 GL_READ_FRAMEBUFFER \u7684\u5e27\u7f13\u51b2\u5c06\u4f1a\u4f7f\u7528\u5728\u6240\u6709\u50cf\u662f glReadPixels \u7684\u8bfb\u53d6\u64cd\u4f5c\u4e2d\uff0c\u800c\u7ed1\u5b9a\u5230 GL_DRAW_FRAMEBUFFER \u7684\u5e27\u7f13\u51b2\u5c06\u4f1a\u88ab\u7528\u4f5c\u6e32\u67d3\u3001\u6e05\u9664\u7b49\u5199\u5165\u64cd\u4f5c\u7684\u76ee\u6807\u3002\u5927\u90e8\u5206\u60c5\u51b5\u4f60\u90fd\u4e0d\u9700\u8981\u533a\u5206\u5b83\u4eec\uff0c\u901a\u5e38\u90fd\u4f1a\u4f7f\u7528 GL_FRAMEBUFFER \uff0c\u7ed1\u5b9a\u5230\u4e24\u4e2a\u4e0a\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4eec\u73b0\u5728\u8fd8\u4e0d\u80fd\u4f7f\u7528\u6211\u4eec\u7684\u5e27\u7f13\u51b2\uff0c\u56e0\u4e3a\u5b83\u8fd8\u4e0d \u5b8c\u6574 (Complete)\uff0c\u4e00\u4e2a\u5b8c\u6574\u7684\u5e27\u7f13\u51b2\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u7684\u6761\u4ef6\uff1a \u9644\u52a0\u81f3\u5c11\u4e00\u4e2a\u7f13\u51b2\uff08\u989c\u8272\u3001\u6df1\u5ea6\u6216\u6a21\u677f\u7f13\u51b2\uff09\u3002 \u81f3\u5c11\u6709\u4e00\u4e2a\u989c\u8272\u9644\u4ef6(Attachment)\u3002 \u6240\u6709\u7684\u9644\u4ef6\u90fd\u5fc5\u987b\u662f\u5b8c\u6574\u7684\uff08\u4fdd\u7559\u4e86\u5185\u5b58\uff09\u3002 \u6bcf\u4e2a\u7f13\u51b2\u90fd\u5e94\u8be5\u6709\u76f8\u540c\u7684\u6837\u672c\u6570(sample)\u3002 \u5982\u679c\u4f60\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u6837\u672c\uff0c\u4e0d\u8981\u62c5\u5fc3\uff0c\u6211\u4eec\u5c06\u5728 \u4e4b\u540e\u7684 \u6559\u7a0b\u4e2d\u8bb2\u5230\u3002 \u4ece\u4e0a\u9762\u7684\u6761\u4ef6\u4e2d\u53ef\u4ee5\u77e5\u9053\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u5e27\u7f13\u51b2\u521b\u5efa\u4e00\u4e9b\u9644\u4ef6\uff0c\u5e76\u5c06\u9644\u4ef6\u9644\u52a0\u5230\u5e27\u7f13\u51b2\u4e0a\u3002\u5728\u5b8c\u6210\u6240\u6709\u7684\u6761\u4ef6\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee5 GL_FRAMEBUFFER \u4e3a\u53c2\u6570\u8c03\u7528 glCheckFramebufferStatus \uff0c\u68c0\u67e5\u5e27\u7f13\u51b2\u662f\u5426\u5b8c\u6574\u3002\u5b83\u5c06\u4f1a\u68c0\u6d4b\u5f53\u524d\u7ed1\u5b9a\u7684\u5e27\u7f13\u51b2\uff0c\u5e76\u8fd4\u56de\u89c4\u8303\u4e2d \u8fd9\u4e9b \u503c\u7684\u5176\u4e2d\u4e4b\u4e00\u3002\u5982\u679c\u5b83\u8fd4\u56de\u7684\u662f GL_FRAMEBUFFER_COMPLETE \uff0c\u5e27\u7f13\u51b2\u5c31\u662f\u5b8c\u6574\u7684\u4e86\u3002 if(glCheckFramebufferStatus(GL_FRAMEBUFFER) == GL_FRAMEBUFFER_COMPLETE) // \u6267\u884c\u80dc\u5229\u7684\u821e\u8e48 \u4e4b\u540e\u6240\u6709\u7684\u6e32\u67d3\u64cd\u4f5c\u5c06\u4f1a\u6e32\u67d3\u5230\u5f53\u524d\u7ed1\u5b9a\u5e27\u7f13\u51b2\u7684\u9644\u4ef6\u4e2d\u3002\u7531\u4e8e\u6211\u4eec\u7684\u5e27\u7f13\u51b2\u4e0d\u662f\u9ed8\u8ba4\u5e27\u7f13\u51b2\uff0c\u6e32\u67d3\u6307\u4ee4\u5c06\u4e0d\u4f1a\u5bf9\u7a97\u53e3\u7684\u89c6\u89c9\u8f93\u51fa\u6709\u4efb\u4f55\u5f71\u54cd\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6e32\u67d3\u5230\u4e00\u4e2a\u4e0d\u540c\u7684\u5e27\u7f13\u51b2\u88ab\u53eb\u505a \u79bb\u5c4f\u6e32\u67d3 (Off-screen Rendering)\u3002\u8981\u4fdd\u8bc1\u6240\u6709\u7684\u6e32\u67d3\u64cd\u4f5c\u5728\u4e3b\u7a97\u53e3\u4e2d\u6709\u89c6\u89c9\u6548\u679c\uff0c\u6211\u4eec\u9700\u8981\u518d\u6b21\u6fc0\u6d3b\u9ed8\u8ba4\u5e27\u7f13\u51b2\uff0c\u5c06\u5b83\u7ed1\u5b9a\u5230 0 \u3002 glBindFramebuffer(GL_FRAMEBUFFER, 0); \u5728\u5b8c\u6210\u6240\u6709\u7684\u5e27\u7f13\u51b2\u64cd\u4f5c\u4e4b\u540e\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5220\u9664\u8fd9\u4e2a\u5e27\u7f13\u51b2\u5bf9\u8c61\uff1a glDeleteFramebuffers(1, &fbo); \u5728\u5b8c\u6574\u6027\u68c0\u67e5\u6267\u884c\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u7ed9\u5e27\u7f13\u51b2\u9644\u52a0\u4e00\u4e2a\u9644\u4ef6\u3002 \u9644\u4ef6 \u662f\u4e00\u4e2a\u5185\u5b58\u4f4d\u7f6e\uff0c\u5b83\u80fd\u591f\u4f5c\u4e3a\u5e27\u7f13\u51b2\u7684\u4e00\u4e2a\u7f13\u51b2\uff0c\u53ef\u4ee5\u5c06\u5b83\u60f3\u8c61\u4e3a\u4e00\u4e2a\u56fe\u50cf\u3002\u5f53\u521b\u5efa\u4e00\u4e2a\u9644\u4ef6\u7684\u65f6\u5019\u6211\u4eec\u6709\u4e24\u4e2a\u9009\u9879\uff1a\u7eb9\u7406\u6216\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61(Renderbuffer Object)\u3002 \u7eb9\u7406\u9644\u4ef6 \u5f53\u628a\u4e00\u4e2a\u7eb9\u7406\u9644\u52a0\u5230\u5e27\u7f13\u51b2\u7684\u65f6\u5019\uff0c\u6240\u6709\u7684\u6e32\u67d3\u6307\u4ee4\u5c06\u4f1a\u5199\u5165\u5230\u8fd9\u4e2a\u7eb9\u7406\u4e2d\uff0c\u5c31\u50cf\u5b83\u662f\u4e00\u4e2a\u666e\u901a\u7684\u989c\u8272/\u6df1\u5ea6\u6216\u6a21\u677f\u7f13\u51b2\u4e00\u6837\u3002\u4f7f\u7528\u7eb9\u7406\u7684\u4f18\u70b9\u662f\uff0c\u6240\u6709\u6e32\u67d3\u64cd\u4f5c\u7684\u7ed3\u679c\u5c06\u4f1a\u88ab\u50a8\u5b58\u5728\u4e00\u4e2a\u7eb9\u7406\u56fe\u50cf\u4e2d\uff0c\u6211\u4eec\u4e4b\u540e\u53ef\u4ee5\u5728\u7740\u8272\u5668\u4e2d\u5f88\u65b9\u4fbf\u5730\u4f7f\u7528\u5b83\u3002 \u4e3a\u5e27\u7f13\u51b2\u521b\u5efa\u4e00\u4e2a\u7eb9\u7406\u548c\u521b\u5efa\u4e00\u4e2a\u666e\u901a\u7684\u7eb9\u7406\u5dee\u4e0d\u591a\uff1a unsigned int texture; glGenTextures(1, &texture); glBindTexture(GL_TEXTURE_2D, texture); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, 800, 600, 0, GL_RGB, GL_UNSIGNED_BYTE, NULL); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR); \u4e3b\u8981\u7684\u533a\u522b\u5c31\u662f\uff0c\u6211\u4eec\u5c06\u7ef4\u5ea6\u8bbe\u7f6e\u4e3a\u4e86\u5c4f\u5e55\u5927\u5c0f\uff08\u5c3d\u7ba1\u8fd9\u4e0d\u662f\u5fc5\u987b\u7684\uff09\uff0c\u5e76\u4e14\u6211\u4eec\u7ed9\u7eb9\u7406\u7684 data \u53c2\u6570\u4f20\u9012\u4e86 NULL \u3002\u5bf9\u4e8e\u8fd9\u4e2a\u7eb9\u7406\uff0c\u6211\u4eec\u4ec5\u4ec5\u5206\u914d\u4e86\u5185\u5b58\u800c\u6ca1\u6709\u586b\u5145\u5b83\u3002\u586b\u5145\u8fd9\u4e2a\u7eb9\u7406\u5c06\u4f1a\u5728\u6211\u4eec\u6e32\u67d3\u5230\u5e27\u7f13\u51b2\u4e4b\u540e\u6765\u8fdb\u884c\u3002\u540c\u6837\u6ce8\u610f\u6211\u4eec\u5e76\u4e0d\u5173\u5fc3\u73af\u7ed5\u65b9\u5f0f\u6216\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\uff0c\u6211\u4eec\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u4e0d\u4f1a\u9700\u8981\u5b83\u4eec\u3002 Important \u5982\u679c\u4f60\u60f3\u5c06\u4f60\u7684\u5c4f\u5e55\u6e32\u67d3\u5230\u4e00\u4e2a\u66f4\u5c0f\u6216\u66f4\u5927\u7684\u7eb9\u7406\u4e0a\uff0c\u4f60\u9700\u8981\uff08\u5728\u6e32\u67d3\u5230\u4f60\u7684\u5e27\u7f13\u51b2\u4e4b\u524d\uff09\u518d\u6b21\u8c03\u7528 glViewport \uff0c\u4f7f\u7528\u7eb9\u7406\u7684\u65b0\u7ef4\u5ea6\u4f5c\u4e3a\u53c2\u6570\uff0c\u5426\u5219\u53ea\u6709\u4e00\u5c0f\u90e8\u5206\u7684\u7eb9\u7406\u6216\u5c4f\u5e55\u4f1a\u88ab\u6e32\u67d3\u5230\u8fd9\u4e2a\u7eb9\u7406\u4e0a\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u597d\u4e00\u4e2a\u7eb9\u7406\u4e86\uff0c\u8981\u505a\u7684\u6700\u540e\u4e00\u4ef6\u4e8b\u5c31\u662f\u5c06\u5b83\u9644\u52a0\u5230\u5e27\u7f13\u51b2\u4e0a\u4e86\uff1a glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, texture, 0); glFrameBufferTexture2D \u6709\u4ee5\u4e0b\u7684\u53c2\u6570\uff1a target \uff1a\u5e27\u7f13\u51b2\u7684\u76ee\u6807\uff08\u7ed8\u5236\u3001\u8bfb\u53d6\u6216\u8005\u4e24\u8005\u7686\u6709\uff09 attachment \uff1a\u6211\u4eec\u60f3\u8981\u9644\u52a0\u7684\u9644\u4ef6\u7c7b\u578b\u3002\u5f53\u524d\u6211\u4eec\u6b63\u5728\u9644\u52a0\u4e00\u4e2a\u989c\u8272\u9644\u4ef6\u3002\u6ce8\u610f\u6700\u540e\u7684 0 \u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u9644\u52a0\u591a\u4e2a\u989c\u8272\u9644\u4ef6\u3002\u6211\u4eec\u5c06\u5728\u4e4b\u540e\u7684\u6559\u7a0b\u4e2d\u63d0\u5230\u3002 textarget \uff1a\u4f60\u5e0c\u671b\u9644\u52a0\u7684\u7eb9\u7406\u7c7b\u578b texture \uff1a\u8981\u9644\u52a0\u7684\u7eb9\u7406\u672c\u8eab level \uff1a\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7684\u7ea7\u522b\u3002\u6211\u4eec\u5c06\u5b83\u4fdd\u7559\u4e3a0\u3002 \u9664\u4e86\u989c\u8272\u9644\u4ef6\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u9644\u52a0\u4e00\u4e2a\u6df1\u5ea6\u548c\u6a21\u677f\u7f13\u51b2\u7eb9\u7406\u5230\u5e27\u7f13\u51b2\u5bf9\u8c61\u4e2d\u3002\u8981\u9644\u52a0\u6df1\u5ea6\u7f13\u51b2\u7684\u8bdd\uff0c\u6211\u4eec\u5c06\u9644\u4ef6\u7c7b\u578b\u8bbe\u7f6e\u4e3a GL_DEPTH_ATTACHMENT \u3002\u6ce8\u610f\u7eb9\u7406\u7684 \u683c\u5f0f (Format)\u548c \u5185\u90e8\u683c\u5f0f (Internalformat)\u7c7b\u578b\u5c06\u53d8\u4e3a GL_DEPTH_COMPONENT \uff0c\u6765\u53cd\u6620\u6df1\u5ea6\u7f13\u51b2\u7684\u50a8\u5b58\u683c\u5f0f\u3002\u8981\u9644\u52a0\u6a21\u677f\u7f13\u51b2\u7684\u8bdd\uff0c\u4f60\u8981\u5c06\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8bbe\u7f6e\u4e3a GL_STENCIL_ATTACHMENT \uff0c\u5e76\u5c06\u7eb9\u7406\u7684\u683c\u5f0f\u8bbe\u5b9a\u4e3a GL_STENCIL_INDEX \u3002 \u4e5f\u53ef\u4ee5\u5c06\u6df1\u5ea6\u7f13\u51b2\u548c\u6a21\u677f\u7f13\u51b2\u9644\u52a0\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u7eb9\u7406\u3002\u7eb9\u7406\u7684\u6bcf32\u4f4d\u6570\u503c\u5c06\u5305\u542b24\u4f4d\u7684\u6df1\u5ea6\u4fe1\u606f\u548c8\u4f4d\u7684\u6a21\u677f\u4fe1\u606f\u3002\u8981\u5c06\u6df1\u5ea6\u548c\u6a21\u677f\u7f13\u51b2\u9644\u52a0\u4e3a\u4e00\u4e2a\u7eb9\u7406\u7684\u8bdd\uff0c\u6211\u4eec\u4f7f\u7528 GL_DEPTH_STENCIL_ATTACHMENT \u7c7b\u578b\uff0c\u5e76\u914d\u7f6e\u7eb9\u7406\u7684\u683c\u5f0f\uff0c\u8ba9\u5b83\u5305\u542b\u5408\u5e76\u7684\u6df1\u5ea6\u548c\u6a21\u677f\u503c\u3002\u5c06\u4e00\u4e2a\u6df1\u5ea6\u548c\u6a21\u677f\u7f13\u51b2\u9644\u52a0\u4e3a\u4e00\u4e2a\u7eb9\u7406\u5230\u5e27\u7f13\u51b2\u7684\u4f8b\u5b50\u53ef\u4ee5\u5728\u4e0b\u9762\u627e\u5230\uff1a glTexImage2D( GL_TEXTURE_2D, 0, GL_DEPTH24_STENCIL8, 800, 600, 0, GL_DEPTH_STENCIL, GL_UNSIGNED_INT_24_8, NULL ); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_DEPTH_STENCIL_ATTACHMENT, GL_TEXTURE_2D, texture, 0); \u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u9644\u4ef6 \u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61 (Renderbuffer Object)\u662f\u5728\u7eb9\u7406\u4e4b\u540e\u5f15\u5165\u5230OpenGL\u4e2d\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u7528\u7684\u5e27\u7f13\u51b2\u9644\u4ef6\u7c7b\u578b\u7684\uff0c\u6240\u4ee5\u5728\u8fc7\u53bb\u7eb9\u7406\u662f\u552f\u4e00\u53ef\u7528\u7684\u9644\u4ef6\u3002\u548c\u7eb9\u7406\u56fe\u50cf\u4e00\u6837\uff0c\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u7f13\u51b2\uff0c\u5373\u4e00\u7cfb\u5217\u7684\u5b57\u8282\u3001\u6574\u6570\u3001\u50cf\u7d20\u7b49\u3002\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u9644\u52a0\u7684\u597d\u5904\u662f\uff0c\u5b83\u4f1a\u5c06\u6570\u636e\u50a8\u5b58\u4e3aOpenGL\u539f\u751f\u7684\u6e32\u67d3\u683c\u5f0f\uff0c\u5b83\u662f\u4e3a\u79bb\u5c4f\u6e32\u67d3\u5230\u5e27\u7f13\u51b2\u4f18\u5316\u8fc7\u7684\u3002 \u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u76f4\u63a5\u5c06\u6240\u6709\u7684\u6e32\u67d3\u6570\u636e\u50a8\u5b58\u5230\u5b83\u7684\u7f13\u51b2\u4e2d\uff0c\u4e0d\u4f1a\u505a\u4efb\u4f55\u9488\u5bf9\u7eb9\u7406\u683c\u5f0f\u7684\u8f6c\u6362\uff0c\u8ba9\u5b83\u53d8\u4e3a\u4e00\u4e2a\u66f4\u5feb\u7684\u53ef\u5199\u50a8\u5b58\u4ecb\u8d28\u3002\u7136\u800c\uff0c\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u901a\u5e38\u90fd\u662f\u53ea\u5199\u7684\uff0c\u6240\u4ee5\u4f60\u4e0d\u80fd\u8bfb\u53d6\u5b83\u4eec\uff08\u6bd4\u5982\u4f7f\u7528\u7eb9\u7406\u8bbf\u95ee\uff09\u3002\u5f53\u7136\u4f60\u4ecd\u7136\u8fd8\u662f\u80fd\u591f\u4f7f\u7528 glReadPixels \u6765\u8bfb\u53d6\u5b83\uff0c\u8fd9\u4f1a\u4ece\u5f53\u524d\u7ed1\u5b9a\u7684\u5e27\u7f13\u51b2\uff0c\u800c\u4e0d\u662f\u9644\u4ef6\u672c\u8eab\uff0c\u4e2d\u8fd4\u56de\u7279\u5b9a\u533a\u57df\u7684\u50cf\u7d20\u3002 \u56e0\u4e3a\u5b83\u7684\u6570\u636e\u5df2\u7ecf\u662f\u539f\u751f\u7684\u683c\u5f0f\u4e86\uff0c\u5f53\u5199\u5165\u6216\u8005\u590d\u5236\u5b83\u7684\u6570\u636e\u5230\u5176\u5b83\u7f13\u51b2\u4e2d\u65f6\u662f\u975e\u5e38\u5feb\u7684\u3002\u6240\u4ee5\uff0c\u4ea4\u6362\u7f13\u51b2\u8fd9\u6837\u7684\u64cd\u4f5c\u5728\u4f7f\u7528\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u65f6\u4f1a\u975e\u5e38\u5feb\u3002\u6211\u4eec\u5728\u6bcf\u4e2a\u6e32\u67d3\u8fed\u4ee3\u6700\u540e\u4f7f\u7528\u7684 glfwSwapBuffers \uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u5b9e\u73b0\uff1a\u53ea\u9700\u8981\u5199\u5165\u4e00\u4e2a\u6e32\u67d3\u7f13\u51b2\u56fe\u50cf\uff0c\u5e76\u5728\u6700\u540e\u4ea4\u6362\u5230\u53e6\u5916\u4e00\u4e2a\u6e32\u67d3\u7f13\u51b2\u5c31\u53ef\u4ee5\u4e86\u3002\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u5bf9\u8fd9\u79cd\u64cd\u4f5c\u975e\u5e38\u5b8c\u7f8e\u3002 \u521b\u5efa\u4e00\u4e2a\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u7684\u4ee3\u7801\u548c\u5e27\u7f13\u51b2\u7684\u4ee3\u7801\u5f88\u7c7b\u4f3c\uff1a unsigned int rbo; glGenRenderbuffers(1, &rbo); \u7c7b\u4f3c\uff0c\u6211\u4eec\u9700\u8981\u7ed1\u5b9a\u8fd9\u4e2a\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\uff0c\u8ba9\u4e4b\u540e\u6240\u6709\u7684\u6e32\u67d3\u7f13\u51b2\u64cd\u4f5c\u5f71\u54cd\u5f53\u524d\u7684 rbo \uff1a glBindRenderbuffer(GL_RENDERBUFFER, rbo); \u7531\u4e8e\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u901a\u5e38\u90fd\u662f\u53ea\u5199\u7684\uff0c\u5b83\u4eec\u4f1a\u7ecf\u5e38\u7528\u4e8e\u6df1\u5ea6\u548c\u6a21\u677f\u9644\u4ef6\uff0c\u56e0\u4e3a\u5927\u90e8\u5206\u65f6\u95f4\u6211\u4eec\u90fd\u4e0d\u9700\u8981\u4ece\u6df1\u5ea6\u548c\u6a21\u677f\u7f13\u51b2\u4e2d\u8bfb\u53d6\u503c\uff0c\u53ea\u5173\u5fc3\u6df1\u5ea6\u548c\u6a21\u677f\u6d4b\u8bd5\u3002\u6211\u4eec \u9700\u8981 \u6df1\u5ea6\u548c\u6a21\u677f\u503c\u7528\u4e8e\u6d4b\u8bd5\uff0c\u4f46\u4e0d\u9700\u8981\u5bf9\u5b83\u4eec\u8fdb\u884c \u91c7\u6837 \uff0c\u6240\u4ee5\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u975e\u5e38\u9002\u5408\u5b83\u4eec\u3002\u5f53\u6211\u4eec\u4e0d\u9700\u8981\u4ece\u8fd9\u4e9b\u7f13\u51b2\u4e2d\u91c7\u6837\u7684\u65f6\u5019\uff0c\u901a\u5e38\u90fd\u4f1a\u9009\u62e9\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\uff0c\u56e0\u4e3a\u5b83\u4f1a\u66f4\u4f18\u5316\u4e00\u70b9\u3002 \u521b\u5efa\u4e00\u4e2a\u6df1\u5ea6\u548c\u6a21\u677f\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 glRenderbufferStorage \u51fd\u6570\u6765\u5b8c\u6210\uff1a glRenderbufferStorage(GL_RENDERBUFFER, GL_DEPTH24_STENCIL8, 800, 600); \u521b\u5efa\u4e00\u4e2a\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u548c\u7eb9\u7406\u5bf9\u8c61\u7c7b\u4f3c\uff0c\u4e0d\u540c\u7684\u662f\u8fd9\u4e2a\u5bf9\u8c61\u662f\u4e13\u95e8\u88ab\u8bbe\u8ba1\u4f5c\u4e3a\u5e27\u7f13\u51b2\u9644\u4ef6\u4f7f\u7528\u7684\uff0c\u800c\u4e0d\u662f\u7eb9\u7406\u90a3\u6837\u7684\u901a\u7528\u6570\u636e\u7f13\u51b2(General Purpose Data Buffer)\u3002\u8fd9\u91cc\u6211\u4eec\u9009\u62e9 GL_DEPTH24_STENCIL8 \u4f5c\u4e3a\u5185\u90e8\u683c\u5f0f\uff0c\u5b83\u5c01\u88c5\u4e8624\u4f4d\u7684\u6df1\u5ea6\u548c8\u4f4d\u7684\u6a21\u677f\u7f13\u51b2\u3002 \u6700\u540e\u4e00\u4ef6\u4e8b\u5c31\u662f\u9644\u52a0\u8fd9\u4e2a\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\uff1a glFramebufferRenderbuffer(GL_FRAMEBUFFER, GL_DEPTH_STENCIL_ATTACHMENT, GL_RENDERBUFFER, rbo); \u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u80fd\u4e3a\u4f60\u7684\u5e27\u7f13\u51b2\u5bf9\u8c61\u63d0\u4f9b\u4e00\u4e9b\u4f18\u5316\uff0c\u4f46\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u4f7f\u7528\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\uff0c\u4ec0\u4e48\u65f6\u5019\u4f7f\u7528\u7eb9\u7406\u662f\u5f88\u91cd\u8981\u7684\u3002\u901a\u5e38\u7684\u89c4\u5219\u662f\uff0c\u5982\u679c\u4f60\u4e0d\u9700\u8981\u4ece\u4e00\u4e2a\u7f13\u51b2\u4e2d\u91c7\u6837\u6570\u636e\uff0c\u90a3\u4e48\u5bf9\u8fd9\u4e2a\u7f13\u51b2\u4f7f\u7528\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u4f1a\u662f\u660e\u667a\u7684\u9009\u62e9\u3002\u5982\u679c\u4f60\u9700\u8981\u4ece\u7f13\u51b2\u4e2d\u91c7\u6837\u989c\u8272\u6216\u6df1\u5ea6\u503c\u7b49\u6570\u636e\uff0c\u90a3\u4e48\u4f60\u5e94\u8be5\u9009\u62e9\u7eb9\u7406\u9644\u4ef6\u3002\u6027\u80fd\u65b9\u9762\u5b83\u4e0d\u4f1a\u4ea7\u751f\u975e\u5e38\u5927\u7684\u5f71\u54cd\u7684\u3002 \u6e32\u67d3\u5230\u7eb9\u7406 \u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u5e27\u7f13\u51b2\uff08\u5927\u6982\uff09\u662f\u600e\u4e48\u5de5\u4f5c\u7684\u4e86\uff0c\u662f\u65f6\u5019\u5b9e\u8df5\u5b83\u4eec\u4e86\u3002\u6211\u4eec\u5c06\u4f1a\u5c06\u573a\u666f\u6e32\u67d3\u5230\u4e00\u4e2a\u9644\u52a0\u5230\u5e27\u7f13\u51b2\u5bf9\u8c61\u4e0a\u7684\u989c\u8272\u7eb9\u7406\u4e2d\uff0c\u4e4b\u540e\u5c06\u5728\u4e00\u4e2a\u6a2a\u8de8\u6574\u4e2a\u5c4f\u5e55\u7684\u56db\u8fb9\u5f62\u4e0a\u7ed8\u5236\u8fd9\u4e2a\u7eb9\u7406\u3002\u8fd9\u6837\u89c6\u89c9\u8f93\u51fa\u548c\u6ca1\u4f7f\u7528\u5e27\u7f13\u51b2\u65f6\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u4f46\u8fd9\u6b21\u662f\u6253\u5370\u5230\u4e86\u4e00\u4e2a\u56db\u8fb9\u5f62\u4e0a\u3002\u8fd9\u4e3a\u4ec0\u4e48\u5f88\u6709\u7528\u5462\uff1f\u6211\u4eec\u4f1a\u5728\u4e0b\u4e00\u90e8\u5206\u4e2d\u77e5\u9053\u539f\u56e0\u3002 \u9996\u5148\u8981\u521b\u5efa\u4e00\u4e2a\u5e27\u7f13\u51b2\u5bf9\u8c61\uff0c\u5e76\u7ed1\u5b9a\u5b83\uff0c\u8fd9\u4e9b\u90fd\u5f88\u76f4\u89c2\uff1a unsigned int framebuffer; glGenFramebuffers(1, &framebuffer); glBindFramebuffer(GL_FRAMEBUFFER, framebuffer); \u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7eb9\u7406\u56fe\u50cf\uff0c\u6211\u4eec\u5c06\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u989c\u8272\u9644\u4ef6\u9644\u52a0\u5230\u5e27\u7f13\u51b2\u4e0a\u3002\u6211\u4eec\u5c06\u7eb9\u7406\u7684\u7ef4\u5ea6\u8bbe\u7f6e\u4e3a\u7a97\u53e3\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff0c\u5e76\u4e14\u4e0d\u521d\u59cb\u5316\u5b83\u7684\u6570\u636e\uff1a // \u751f\u6210\u7eb9\u7406 unsigned int texColorBuffer; glGenTextures(1, &texColorBuffer); glBindTexture(GL_TEXTURE_2D, texColorBuffer); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, 800, 600, 0, GL_RGB, GL_UNSIGNED_BYTE, NULL); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR ); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR); glBindTexture(GL_TEXTURE_2D, 0); // \u5c06\u5b83\u9644\u52a0\u5230\u5f53\u524d\u7ed1\u5b9a\u7684\u5e27\u7f13\u51b2\u5bf9\u8c61 glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, texColorBuffer, 0); \u6211\u4eec\u8fd8\u5e0c\u671bOpenGL\u80fd\u591f\u8fdb\u884c\u6df1\u5ea6\u6d4b\u8bd5\uff08\u5982\u679c\u4f60\u9700\u8981\u7684\u8bdd\u8fd8\u6709\u6a21\u677f\u6d4b\u8bd5\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u6df1\u5ea6\uff08\u548c\u6a21\u677f\uff09\u9644\u4ef6\u5230\u5e27\u7f13\u51b2\u4e2d\u3002\u7531\u4e8e\u6211\u4eec\u53ea\u5e0c\u671b\u91c7\u6837\u989c\u8272\u7f13\u51b2\uff0c\u800c\u4e0d\u662f\u5176\u5b83\u7684\u7f13\u51b2\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u5b83\u4eec\u521b\u5efa\u4e00\u4e2a\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u3002\u8fd8\u8bb0\u5f97\u5f53\u6211\u4eec\u4e0d\u9700\u8981\u91c7\u6837\u7f13\u51b2\u7684\u65f6\u5019\uff0c\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u662f\u66f4\u597d\u7684\u9009\u62e9\u5417\uff1f \u521b\u5efa\u4e00\u4e2a\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u4e0d\u662f\u975e\u5e38\u590d\u6742\u3002\u6211\u4eec\u9700\u8981\u8bb0\u4f4f\u7684\u552f\u4e00\u4e8b\u60c5\u662f\uff0c\u6211\u4eec\u5c06\u5b83\u521b\u5efa\u4e3a\u4e00\u4e2a\u6df1\u5ea6 \u548c \u6a21\u677f\u9644\u4ef6\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u3002\u6211\u4eec\u5c06\u5b83\u7684 \u5185\u90e8 \u683c\u5f0f\u8bbe\u7f6e\u4e3a GL_DEPTH24_STENCIL8 \uff0c\u5bf9\u6211\u4eec\u6765\u8bf4\u8fd9\u4e2a\u7cbe\u5ea6\u5df2\u7ecf\u8db3\u591f\u4e86\u3002 unsigned int rbo; glGenRenderbuffers(1, &rbo); glBindRenderbuffer(GL_RENDERBUFFER, rbo); glRenderbufferStorage(GL_RENDERBUFFER, GL_DEPTH24_STENCIL8, 800, 600); glBindRenderbuffer(GL_RENDERBUFFER, 0); \u5f53\u6211\u4eec\u4e3a\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u5206\u914d\u4e86\u8db3\u591f\u7684\u5185\u5b58\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u89e3\u7ed1\u8fd9\u4e2a\u6e32\u67d3\u7f13\u51b2\u3002 \u63a5\u4e0b\u6765\uff0c\u4f5c\u4e3a\u5b8c\u6210\u5e27\u7f13\u51b2\u4e4b\u524d\u7684\u6700\u540e\u4e00\u6b65\uff0c\u6211\u4eec\u5c06\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u9644\u52a0\u5230\u5e27\u7f13\u51b2\u7684\u6df1\u5ea6 \u548c \u6a21\u677f\u9644\u4ef6\u4e0a\uff1a glFramebufferRenderbuffer(GL_FRAMEBUFFER, GL_DEPTH_STENCIL_ATTACHMENT, GL_RENDERBUFFER, rbo); \u6700\u540e\uff0c\u6211\u4eec\u5e0c\u671b\u68c0\u67e5\u5e27\u7f13\u51b2\u662f\u5426\u662f\u5b8c\u6574\u7684\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u6211\u4eec\u5c06\u6253\u5370\u9519\u8bef\u4fe1\u606f\u3002 if(glCheckFramebufferStatus(GL_FRAMEBUFFER) != GL_FRAMEBUFFER_COMPLETE) std::cout << \"ERROR::FRAMEBUFFER:: Framebuffer is not complete!\" << std::endl; glBindFramebuffer(GL_FRAMEBUFFER, 0); \u8bb0\u5f97\u8981\u89e3\u7ed1\u5e27\u7f13\u51b2\uff0c\u4fdd\u8bc1\u6211\u4eec\u4e0d\u4f1a\u4e0d\u5c0f\u5fc3\u6e32\u67d3\u5230\u9519\u8bef\u7684\u5e27\u7f13\u51b2\u4e0a\u3002 \u73b0\u5728\u8fd9\u4e2a\u5e27\u7f13\u51b2\u5c31\u5b8c\u6574\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ed1\u5b9a\u8fd9\u4e2a\u5e27\u7f13\u51b2\u5bf9\u8c61\uff0c\u8ba9\u6e32\u67d3\u5230\u5e27\u7f13\u51b2\u7684\u7f13\u51b2\u4e2d\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684\u5e27\u7f13\u51b2\u4e2d\u3002\u4e4b\u540e\u7684\u6e32\u67d3\u6307\u4ee4\u5c06\u4f1a\u5f71\u54cd\u5f53\u524d\u7ed1\u5b9a\u7684\u5e27\u7f13\u51b2\u3002\u6240\u6709\u7684\u6df1\u5ea6\u548c\u6a21\u677f\u64cd\u4f5c\u90fd\u4f1a\u4ece\u5f53\u524d\u7ed1\u5b9a\u7684\u5e27\u7f13\u51b2\u7684\u6df1\u5ea6\u548c\u6a21\u677f\u9644\u4ef6\u4e2d\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u8bfb\u53d6\u3002\u5982\u679c\u4f60\u5ffd\u7565\u4e86\u6df1\u5ea6\u7f13\u51b2\uff0c\u90a3\u4e48\u6240\u6709\u7684\u6df1\u5ea6\u6d4b\u8bd5\u64cd\u4f5c\u5c06\u4e0d\u518d\u5de5\u4f5c\uff0c\u56e0\u4e3a\u5f53\u524d\u7ed1\u5b9a\u7684\u5e27\u7f13\u51b2\u4e2d\u4e0d\u5b58\u5728\u6df1\u5ea6\u7f13\u51b2\u3002 \u6240\u4ee5\uff0c\u8981\u60f3\u7ed8\u5236\u573a\u666f\u5230\u4e00\u4e2a\u7eb9\u7406\u4e0a\uff0c\u6211\u4eec\u9700\u8981\u91c7\u53d6\u4ee5\u4e0b\u7684\u6b65\u9aa4\uff1a \u5c06\u65b0\u7684\u5e27\u7f13\u51b2\u7ed1\u5b9a\u4e3a\u6fc0\u6d3b\u7684\u5e27\u7f13\u51b2\uff0c\u548c\u5f80\u5e38\u4e00\u6837\u6e32\u67d3\u573a\u666f \u7ed1\u5b9a\u9ed8\u8ba4\u7684\u5e27\u7f13\u51b2 \u7ed8\u5236\u4e00\u4e2a\u6a2a\u8de8\u6574\u4e2a\u5c4f\u5e55\u7684\u56db\u8fb9\u5f62\uff0c\u5c06\u5e27\u7f13\u51b2\u7684\u989c\u8272\u7f13\u51b2\u4f5c\u4e3a\u5b83\u7684\u7eb9\u7406\u3002 \u6211\u4eec\u5c06\u4f1a\u7ed8\u5236 \u6df1\u5ea6\u6d4b\u8bd5 \u5c0f\u8282\u4e2d\u7684\u573a\u666f\uff0c\u4f46\u8fd9\u6b21\u4f7f\u7528\u7684\u662f\u65e7\u7684 \u7bb1\u5b50 \u7eb9\u7406\u3002 \u4e3a\u4e86\u7ed8\u5236\u8fd9\u4e2a\u56db\u8fb9\u5f62\uff0c\u6211\u4eec\u5c06\u4f1a\u65b0\u521b\u5efa\u4e00\u5957\u7b80\u5355\u7684\u7740\u8272\u5668\u3002\u6211\u4eec\u5c06\u4e0d\u4f1a\u5305\u542b\u4efb\u4f55\u82b1\u54e8\u7684\u77e9\u9635\u53d8\u6362\uff0c\u56e0\u4e3a\u6211\u4eec\u63d0\u4f9b\u7684\u662f\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7684 \u9876\u70b9\u5750\u6807 \uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u5b83\u4eec\u8bbe\u5b9a\u4e3a\u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u51fa\u3002\u9876\u70b9\u7740\u8272\u5668\u662f\u8fd9\u6837\u7684\uff1a #version 330 core layout (location = 0) in vec2 aPos; layout (location = 1) in vec2 aTexCoords; out vec2 TexCoords; void main() { gl_Position = vec4(aPos.x, aPos.y, 0.0, 1.0); TexCoords = aTexCoords; } \u5e76\u6ca1\u6709\u592a\u590d\u6742\u7684\u4e1c\u897f\u3002\u7247\u6bb5\u7740\u8272\u5668\u4f1a\u66f4\u52a0\u57fa\u7840\uff0c\u6211\u4eec\u505a\u7684\u552f\u4e00\u4e00\u4ef6\u4e8b\u5c31\u662f\u4ece\u7eb9\u7406\u4e2d\u91c7\u6837\uff1a #version 330 core out vec4 FragColor; in vec2 TexCoords; uniform sampler2D screenTexture; void main() { FragColor = texture(screenTexture, TexCoords); } \u63a5\u7740\u5c31\u9760\u4f60\u6765\u4e3a\u5c4f\u5e55\u56db\u8fb9\u5f62\u521b\u5efa\u5e76\u914d\u7f6e\u4e00\u4e2aVAO\u4e86\u3002\u5e27\u7f13\u51b2\u7684\u4e00\u4e2a\u6e32\u67d3\u8fed\u4ee3\u5c06\u4f1a\u6709\u4ee5\u4e0b\u7684\u7ed3\u6784\uff1a // \u7b2c\u4e00\u5904\u7406\u9636\u6bb5(Pass) glBindFramebuffer(GL_FRAMEBUFFER, framebuffer); glClearColor(0.1f, 0.1f, 0.1f, 1.0f); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // \u6211\u4eec\u73b0\u5728\u4e0d\u4f7f\u7528\u6a21\u677f\u7f13\u51b2 glEnable(GL_DEPTH_TEST); DrawScene(); // \u7b2c\u4e8c\u5904\u7406\u9636\u6bb5 glBindFramebuffer(GL_FRAMEBUFFER, 0); // \u8fd4\u56de\u9ed8\u8ba4 glClearColor(1.0f, 1.0f, 1.0f, 1.0f); glClear(GL_COLOR_BUFFER_BIT); screenShader.use(); glBindVertexArray(quadVAO); glDisable(GL_DEPTH_TEST); glBindTexture(GL_TEXTURE_2D, textureColorbuffer); glDrawArrays(GL_TRIANGLES, 0, 6); \u8981\u6ce8\u610f\u4e00\u4e9b\u4e8b\u60c5\u3002\u7b2c\u4e00\uff0c\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u7684\u6bcf\u4e2a\u5e27\u7f13\u51b2\u90fd\u6709\u5b83\u81ea\u5df1\u4e00\u5957\u7f13\u51b2\uff0c\u6211\u4eec\u5e0c\u671b\u8bbe\u7f6e\u5408\u9002\u7684\u4f4d\uff0c\u8c03\u7528 glClear \uff0c\u6e05\u9664\u8fd9\u4e9b\u7f13\u51b2\u3002\u7b2c\u4e8c\uff0c\u5f53\u7ed8\u5236\u56db\u8fb9\u5f62\u65f6\uff0c\u6211\u4eec\u5c06\u7981\u7528\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u5728\u7ed8\u5236\u4e00\u4e2a\u7b80\u5355\u7684\u56db\u8fb9\u5f62\uff0c\u5e76\u4e0d\u9700\u8981\u5173\u7cfb\u6df1\u5ea6\u6d4b\u8bd5\u3002\u5728\u7ed8\u5236\u666e\u901a\u573a\u666f\u7684\u65f6\u5019\u6211\u4eec\u5c06\u4f1a\u91cd\u65b0\u542f\u7528\u6df1\u5ea6\u6d4b\u8bd5\u3002 \u6709\u5f88\u591a\u6b65\u9aa4\u90fd\u53ef\u80fd\u4f1a\u51fa\u9519\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u6ca1\u6709\u5f97\u5230\u8f93\u51fa\u7684\u8bdd\uff0c\u5c1d\u8bd5\u8c03\u8bd5\u7a0b\u5e8f\uff0c\u5e76\u91cd\u65b0\u9605\u8bfb\u672c\u8282\u7684\u76f8\u5173\u90e8\u5206\u3002\u5982\u679c\u6240\u6709\u7684\u4e1c\u897f\u90fd\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f60\u5c06\u4f1a\u5f97\u5230\u4e0b\u9762\u8fd9\u6837\u7684\u89c6\u89c9\u8f93\u51fa\uff1a \u5de6\u8fb9\u5c55\u793a\u7684\u662f\u89c6\u89c9\u8f93\u51fa\uff0c\u5b83\u548c \u6df1\u5ea6\u6d4b\u8bd5 \u4e2d\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u4f46\u8fd9\u6b21\u662f\u6e32\u67d3\u5728\u4e00\u4e2a\u7b80\u5355\u7684\u56db\u8fb9\u5f62\u4e0a\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u7ebf\u6846\u6a21\u5f0f\u6e32\u67d3\u573a\u666f\uff0c\u5c31\u4f1a\u53d8\u5f97\u5f88\u660e\u663e\uff0c\u6211\u4eec\u5728\u9ed8\u8ba4\u7684\u5e27\u7f13\u51b2\u4e2d\u53ea\u7ed8\u5236\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u56db\u8fb9\u5f62\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801\u3002 \u6240\u4ee5\u8fd9\u4e2a\u6709\u4ec0\u4e48\u7528\u5904\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u80fd\u591f\u4ee5\u4e00\u4e2a\u7eb9\u7406\u56fe\u50cf\u7684\u65b9\u5f0f\u8bbf\u95ee\u5df2\u6e32\u67d3\u573a\u666f\u4e2d\u7684\u6bcf\u4e2a\u50cf\u7d20\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u521b\u5efa\u51fa\u975e\u5e38\u6709\u8da3\u7684\u6548\u679c\u3002\u8fd9\u4e9b\u6709\u8da3\u6548\u679c\u7edf\u79f0\u4e3a \u540e\u671f\u5904\u7406 (Post-processing)\u6548\u679c\u3002 \u540e\u671f\u5904\u7406 \u65e2\u7136\u6574\u4e2a\u573a\u666f\u90fd\u88ab\u6e32\u67d3\u5230\u4e86\u4e00\u4e2a\u7eb9\u7406\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u901a\u8fc7\u4fee\u6539\u7eb9\u7406\u6570\u636e\u521b\u5efa\u51fa\u4e00\u4e9b\u975e\u5e38\u6709\u610f\u601d\u7684\u6548\u679c\u3002\u5728\u8fd9\u4e00\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u5411\u4f60\u5c55\u793a\u4e00\u4e9b\u6d41\u884c\u7684\u540e\u671f\u5904\u7406\u6548\u679c\uff0c\u5e76\u544a\u8bc9\u4f60\u6539\u5982\u4f55\u4f7f\u7528\u521b\u9020\u529b\u521b\u5efa\u4f60\u81ea\u5df1\u7684\u6548\u679c\u3002 \u8ba9\u6211\u4eec\u5148\u4ece\u6700\u7b80\u5355\u7684\u540e\u671f\u5904\u7406\u6548\u679c\u5f00\u59cb\u3002 \u53cd\u76f8 \u6211\u4eec\u73b0\u5728\u80fd\u591f\u8bbf\u95ee\u6e32\u67d3\u8f93\u51fa\u7684\u6bcf\u4e2a\u989c\u8272\uff0c\u6240\u4ee5\u5728\uff08\u8bd1\u6ce8\uff1a\u5c4f\u5e55\u7684\uff09\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u8fd4\u56de\u8fd9\u4e9b\u989c\u8272\u7684\u53cd\u76f8(Inversion)\u5e76\u4e0d\u662f\u5f88\u96be\u3002\u6211\u4eec\u5c06\u4f1a\u4ece\u5c4f\u5e55\u7eb9\u7406\u4e2d\u53d6\u989c\u8272\u503c\uff0c\u7136\u540e\u75281.0\u51cf\u53bb\u5b83\uff0c\u5bf9\u5b83\u8fdb\u884c\u53cd\u76f8\uff1a void main() { FragColor = vec4(vec3(1.0 - texture(screenTexture, TexCoords)), 1.0); } \u5c3d\u7ba1\u53cd\u76f8\u662f\u4e00\u4e2a\u76f8\u5bf9\u7b80\u5355\u7684\u540e\u671f\u5904\u7406\u6548\u679c\uff0c\u5b83\u5df2\u7ecf\u80fd\u521b\u9020\u4e00\u4e9b\u5947\u602a\u7684\u6548\u679c\u4e86\uff1a \u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u4ec5\u4ec5\u4f7f\u7528\u4e00\u884c\u4ee3\u7801\uff0c\u5c31\u80fd\u8ba9\u6574\u4e2a\u573a\u666f\u7684\u989c\u8272\u90fd\u53cd\u76f8\u4e86\u3002\u5f88\u9177\u5427\uff1f \u7070\u5ea6 \u53e6\u5916\u4e00\u4e2a\u5f88\u6709\u8da3\u7684\u6548\u679c\u662f\uff0c\u79fb\u9664\u573a\u666f\u4e2d\u9664\u4e86\u9ed1\u767d\u7070\u4ee5\u5916\u6240\u6709\u7684\u989c\u8272\uff0c\u8ba9\u6574\u4e2a\u56fe\u50cf\u7070\u5ea6\u5316(Grayscale)\u3002\u5f88\u7b80\u5355\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f\uff0c\u53d6\u6240\u6709\u7684\u989c\u8272\u5206\u91cf\uff0c\u5c06\u5b83\u4eec\u5e73\u5747\u5316\uff1a void main() { FragColor = texture(screenTexture, TexCoords); float average = (FragColor.r + FragColor.g + FragColor.b) / 3.0; FragColor = vec4(average, average, average, 1.0); } \u8fd9\u5df2\u7ecf\u80fd\u521b\u9020\u5f88\u597d\u7684\u7ed3\u679c\u4e86\uff0c\u4f46\u4eba\u773c\u4f1a\u5bf9\u7eff\u8272\u66f4\u52a0\u654f\u611f\u4e00\u4e9b\uff0c\u800c\u5bf9\u84dd\u8272\u4e0d\u90a3\u4e48\u654f\u611f\uff0c\u6240\u4ee5\u4e3a\u4e86\u83b7\u53d6\u7269\u7406\u4e0a\u66f4\u7cbe\u786e\u7684\u6548\u679c\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u52a0\u6743\u7684(Weighted)\u901a\u9053\uff1a void main() { FragColor = texture(screenTexture, TexCoords); float average = 0.2126 * FragColor.r + 0.7152 * FragColor.g + 0.0722 * FragColor.b; FragColor = vec4(average, average, average, 1.0); } \u4f60\u53ef\u80fd\u4e0d\u4f1a\u7acb\u523b\u53d1\u73b0\u6709\u4ec0\u4e48\u5dee\u522b\uff0c\u4f46\u5728\u66f4\u590d\u6742\u7684\u573a\u666f\u4e2d\uff0c\u8fd9\u6837\u7684\u52a0\u6743\u7070\u5ea6\u6548\u679c\u4f1a\u66f4\u771f\u5b9e\u4e00\u70b9\u3002 \u6838\u6548\u679c \u5728\u4e00\u4e2a\u7eb9\u7406\u56fe\u50cf\u4e0a\u505a\u540e\u671f\u5904\u7406\u7684\u53e6\u5916\u4e00\u4e2a\u597d\u5904\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u7eb9\u7406\u7684\u5176\u5b83\u5730\u65b9\u91c7\u6837\u989c\u8272\u503c\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u53ef\u4ee5\u5728\u5f53\u524d\u7eb9\u7406\u5750\u6807\u7684\u5468\u56f4\u53d6\u4e00\u5c0f\u5757\u533a\u57df\uff0c\u5bf9\u5f53\u524d\u7eb9\u7406\u503c\u5468\u56f4\u7684\u591a\u4e2a\u7eb9\u7406\u503c\u8fdb\u884c\u91c7\u6837\u3002\u6211\u4eec\u53ef\u4ee5\u7ed3\u5408\u5b83\u4eec\u521b\u5efa\u51fa\u5f88\u6709\u610f\u601d\u7684\u6548\u679c\u3002 \u6838 (Kernel)\uff08\u6216\u5377\u79ef\u77e9\u9635(Convolution Matrix)\uff09\u662f\u4e00\u4e2a\u7c7b\u77e9\u9635\u7684\u6570\u503c\u6570\u7ec4\uff0c\u5b83\u7684\u4e2d\u5fc3\u4e3a\u5f53\u524d\u7684\u50cf\u7d20\uff0c\u5b83\u4f1a\u7528\u5b83\u7684\u6838\u503c\u4e58\u4ee5\u5468\u56f4\u7684\u50cf\u7d20\u503c\uff0c\u5e76\u5c06\u7ed3\u679c\u76f8\u52a0\u53d8\u6210\u4e00\u4e2a\u503c\u3002\u6240\u4ee5\uff0c\u57fa\u672c\u4e0a\u6211\u4eec\u662f\u5728\u5bf9\u5f53\u524d\u50cf\u7d20\u5468\u56f4\u7684\u7eb9\u7406\u5750\u6807\u6dfb\u52a0\u4e00\u4e2a\u5c0f\u7684\u504f\u79fb\u91cf\uff0c\u5e76\u6839\u636e\u6838\u5c06\u7ed3\u679c\u5408\u5e76\u3002\u4e0b\u9762\u662f\u6838\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a \\begin{bmatrix}2 & 2 & 2 \\\\ 2 & -15 & 2 \\\\ 2 & 2 & 2 \\end{bmatrix} \u8fd9\u4e2a\u6838\u53d6\u4e868\u4e2a\u5468\u56f4\u50cf\u7d20\u503c\uff0c\u5c06\u5b83\u4eec\u4e58\u4ee52\uff0c\u800c\u628a\u5f53\u524d\u7684\u50cf\u7d20\u4e58\u4ee5-15\u3002\u8fd9\u4e2a\u6838\u7684\u4f8b\u5b50\u5c06\u5468\u56f4\u7684\u50cf\u7d20\u4e58\u4e0a\u4e86\u4e00\u4e2a\u6743\u91cd\uff0c\u5e76\u5c06\u5f53\u524d\u50cf\u7d20\u4e58\u4ee5\u4e00\u4e2a\u6bd4\u8f83\u5927\u7684\u8d1f\u6743\u91cd\u6765\u5e73\u8861\u7ed3\u679c\u3002 Important \u4f60\u5728\u7f51\u4e0a\u627e\u5230\u7684\u5927\u90e8\u5206\u6838\u5c06\u6240\u6709\u7684\u6743\u91cd\u52a0\u8d77\u6765\u4e4b\u540e\u90fd\u5e94\u8be5\u4f1a\u7b49\u4e8e1\uff0c\u5982\u679c\u5b83\u4eec\u52a0\u8d77\u6765\u4e0d\u7b49\u4e8e1\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u6700\u7ec8\u7684\u7eb9\u7406\u989c\u8272\u5c06\u4f1a\u6bd4\u539f\u7eb9\u7406\u503c\u66f4\u4eae\u6216\u8005\u66f4\u6697\u4e86\u3002 \u6838\u662f\u540e\u671f\u5904\u7406\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u5de5\u5177\uff0c\u5b83\u4eec\u4f7f\u7528\u548c\u5b9e\u9a8c\u8d77\u6765\u90fd\u5f88\u7b80\u5355\uff0c\u7f51\u4e0a\u4e5f\u80fd\u627e\u5230\u5f88\u591a\u4f8b\u5b50\u3002\u6211\u4eec\u9700\u8981\u7a0d\u5fae\u4fee\u6539\u4e00\u4e0b\u7247\u6bb5\u7740\u8272\u5668\uff0c\u8ba9\u5b83\u80fd\u591f\u652f\u6301\u6838\u3002\u6211\u4eec\u5047\u8bbe\u4f7f\u7528\u7684\u6838\u90fd\u662f3x3\u6838\uff08\u5b9e\u9645\u4e0a\u5927\u90e8\u5206\u6838\u90fd\u662f\uff09\uff1a const float offset = 1.0 / 300.0; void main() { vec2 offsets[9] = vec2[]( vec2(-offset, offset), // \u5de6\u4e0a vec2( 0.0f, offset), // \u6b63\u4e0a vec2( offset, offset), // \u53f3\u4e0a vec2(-offset, 0.0f), // \u5de6 vec2( 0.0f, 0.0f), // \u4e2d vec2( offset, 0.0f), // \u53f3 vec2(-offset, -offset), // \u5de6\u4e0b vec2( 0.0f, -offset), // \u6b63\u4e0b vec2( offset, -offset) // \u53f3\u4e0b ); float kernel[9] = float[]( -1, -1, -1, -1, 9, -1, -1, -1, -1 ); vec3 sampleTex[9]; for(int i = 0; i < 9; i++) { sampleTex[i] = vec3(texture(screenTexture, TexCoords.st + offsets[i])); } vec3 col = vec3(0.0); for(int i = 0; i < 9; i++) col += sampleTex[i] * kernel[i]; FragColor = vec4(col, 1.0); } \u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u4e3a\u5468\u56f4\u7684\u7eb9\u7406\u5750\u6807\u521b\u5efa\u4e86\u4e00\u4e2a9\u4e2a vec2 \u504f\u79fb\u91cf\u7684\u6570\u7ec4\u3002\u504f\u79fb\u91cf\u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u4f60\u53ef\u4ee5\u6309\u7167\u4f60\u7684\u559c\u597d\u81ea\u5b9a\u4e49\u5b83\u3002\u4e4b\u540e\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u6838\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u662f\u4e00\u4e2a \u9510\u5316 (Sharpen)\u6838\uff0c\u5b83\u4f1a\u91c7\u6837\u5468\u56f4\u7684\u6240\u6709\u50cf\u7d20\uff0c\u9510\u5316\u6bcf\u4e2a\u989c\u8272\u503c\u3002\u6700\u540e\uff0c\u5728\u91c7\u6837\u65f6\u6211\u4eec\u5c06\u6bcf\u4e2a\u504f\u79fb\u91cf\u52a0\u5230\u5f53\u524d\u7eb9\u7406\u5750\u6807\u4e0a\uff0c\u83b7\u53d6\u9700\u8981\u91c7\u6837\u7684\u7eb9\u7406\uff0c\u4e4b\u540e\u5c06\u8fd9\u4e9b\u7eb9\u7406\u503c\u4e58\u4ee5\u52a0\u6743\u7684\u6838\u503c\uff0c\u5e76\u5c06\u5b83\u4eec\u52a0\u5230\u4e00\u8d77\u3002 \u8fd9\u4e2a\u9510\u5316\u6838\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a \u8fd9\u80fd\u521b\u5efa\u4e00\u4e9b\u5f88\u6709\u8da3\u7684\u6548\u679c\uff0c\u6bd4\u5982\u8bf4\u4f60\u7684\u73a9\u5bb6\u6253\u4e86\u9ebb\u9189\u5242\u6240\u611f\u53d7\u5230\u7684\u6548\u679c\u3002 \u6a21\u7cca \u521b\u5efa \u6a21\u7cca (Blur)\u6548\u679c\u7684\u6838\u662f\u8fd9\u6837\u7684\uff1a \\begin{bmatrix} 1 & 2 & 1 \\\\ 2 & 4 & 2 \\\\ 1 & 2 & 1 \\end{bmatrix} / 16 \u7531\u4e8e\u6240\u6709\u503c\u7684\u548c\u662f16\uff0c\u6240\u4ee5\u76f4\u63a5\u8fd4\u56de\u5408\u5e76\u7684\u91c7\u6837\u989c\u8272\u5c06\u4ea7\u751f\u975e\u5e38\u4eae\u7684\u989c\u8272\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06\u6838\u7684\u6bcf\u4e2a\u503c\u90fd\u9664\u4ee516\u3002\u6700\u7ec8\u7684\u6838\u6570\u7ec4\u5c06\u4f1a\u662f\uff1a float kernel[9] = float[]( 1.0 / 16, 2.0 / 16, 1.0 / 16, 2.0 / 16, 4.0 / 16, 2.0 / 16, 1.0 / 16, 2.0 / 16, 1.0 / 16 ); \u901a\u8fc7\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u6539\u53d8\u6838\u7684 float \u6570\u7ec4\uff0c\u6211\u4eec\u5b8c\u5168\u6539\u53d8\u4e86\u540e\u671f\u5904\u7406\u6548\u679c\u3002\u5b83\u73b0\u5728\u770b\u8d77\u6765\u662f\u8fd9\u6837\u5b50\u7684\uff1a \u8fd9\u6837\u7684\u6a21\u7cca\u6548\u679c\u521b\u9020\u4e86\u5f88\u591a\u7684\u53ef\u80fd\u6027\u3002\u6211\u4eec\u53ef\u4ee5\u968f\u7740\u65f6\u95f4\u4fee\u6539\u6a21\u7cca\u7684\u91cf\uff0c\u521b\u9020\u51fa\u73a9\u5bb6\u9189\u9152\u65f6\u7684\u6548\u679c\uff0c\u6216\u8005\u5728\u4e3b\u89d2\u6ca1\u5e26\u773c\u955c\u7684\u65f6\u5019\u589e\u52a0\u6a21\u7cca\u3002\u6a21\u7cca\u4e5f\u80fd\u591f\u8ba9\u6211\u4eec\u6765\u5e73\u6ed1\u989c\u8272\u503c\uff0c\u6211\u4eec\u5c06\u5728\u4e4b\u540e\u6559\u7a0b\u4e2d\u4f7f\u7528\u5230\u3002 \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u53ea\u8981\u6211\u4eec\u6709\u4e86\u8fd9\u4e2a\u6838\u7684\u5b9e\u73b0\uff0c\u521b\u5efa\u70ab\u9177\u7684\u540e\u671f\u5904\u7406\u7279\u6548\u662f\u975e\u5e38\u5bb9\u6613\u7684\u4e8b\u3002\u6211\u4eec\u518d\u6765\u770b\u6700\u540e\u4e00\u4e2a\u5f88\u6d41\u884c\u7684\u6548\u679c\u6765\u7ed3\u675f\u672c\u8282\u7684\u8ba8\u8bba\u3002 \u8fb9\u7f18\u68c0\u6d4b \u4e0b\u9762\u7684 \u8fb9\u7f18\u68c0\u6d4b (Edge-detection)\u6838\u548c\u9510\u5316\u6838\u975e\u5e38\u76f8\u4f3c\uff1a \\begin{bmatrix} 1 & 1 & 1 \\\\ 1 & -8 & 1 \\\\ 1 & 1 & 1 \\end{bmatrix} \u8fd9\u4e2a\u6838\u9ad8\u4eae\u4e86\u6240\u6709\u7684\u8fb9\u7f18\uff0c\u800c\u6697\u5316\u4e86\u5176\u5b83\u90e8\u5206\uff0c\u5728\u6211\u4eec\u53ea\u5173\u5fc3\u56fe\u50cf\u7684\u8fb9\u89d2\u7684\u65f6\u5019\u662f\u975e\u5e38\u6709\u7528\u7684\u3002 \u4f60\u53ef\u80fd\u4e0d\u4f1a\u5947\u602a\uff0c\u50cf\u662fPhotoshop\u8fd9\u6837\u7684\u56fe\u50cf\u4fee\u6539\u5de5\u5177/\u6ee4\u955c\u4f7f\u7528\u7684\u4e5f\u662f\u8fd9\u6837\u7684\u6838\u3002\u56e0\u4e3a\u663e\u5361\u5904\u7406\u7247\u6bb5\u7684\u65f6\u5019\u6709\u7740\u6781\u5f3a\u7684\u5e76\u884c\u5904\u7406\u80fd\u529b\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u8f7b\u677e\u5730\u5728\u5b9e\u65f6\u7684\u60c5\u51b5\u4e0b\u9010\u50cf\u7d20\u5bf9\u56fe\u50cf\u8fdb\u884c\u5904\u7406\u3002\u6240\u4ee5\u56fe\u50cf\u7f16\u8f91\u5de5\u5177\u5728\u56fe\u50cf\u5904\u7406\u7684\u65f6\u5019\u4f1a\u66f4\u503e\u5411\u4e8e\u4f7f\u7528\u663e\u5361\u3002 \u8bd1\u6ce8 \u6ce8\u610f\uff0c\u6838\u5728\u5bf9\u5c4f\u5e55\u7eb9\u7406\u7684\u8fb9\u7f18\u8fdb\u884c\u91c7\u6837\u7684\u65f6\u5019\uff0c\u7531\u4e8e\u8fd8\u4f1a\u5bf9\u4e2d\u5fc3\u50cf\u7d20\u5468\u56f4\u76848\u4e2a\u50cf\u7d20\u8fdb\u884c\u91c7\u6837\uff0c\u5176\u5b9e\u4f1a\u53d6\u5230\u7eb9\u7406\u4e4b\u5916\u7684\u50cf\u7d20\u3002\u7531\u4e8e\u73af\u7ed5\u65b9\u5f0f\u9ed8\u8ba4\u662f GL_REPEAT \uff0c\u6240\u4ee5\u5728\u6ca1\u6709\u8bbe\u7f6e\u7684\u60c5\u51b5\u4e0b\u53d6\u5230\u7684\u662f\u5c4f\u5e55\u53e6\u4e00\u8fb9\u7684\u50cf\u7d20\uff0c\u800c\u53e6\u4e00\u8fb9\u7684\u50cf\u7d20\u672c\u4e0d\u5e94\u8be5\u5bf9\u4e2d\u5fc3\u50cf\u7d20\u4ea7\u751f\u5f71\u54cd\uff0c\u8fd9\u5c31\u53ef\u80fd\u4f1a\u5728\u5c4f\u5e55\u8fb9\u7f18\u4ea7\u751f\u5f88\u5947\u602a\u7684\u6761\u7eb9\u3002\u4e3a\u4e86\u6d88\u9664\u8fd9\u4e00\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5c4f\u5e55\u7eb9\u7406\u7684\u73af\u7ed5\u65b9\u5f0f\u90fd\u8bbe\u7f6e\u4e3a GL_CLAMP_TO_EDGE \u3002\u8fd9\u6837\u5b50\u5728\u53d6\u5230\u7eb9\u7406\u5916\u7684\u50cf\u7d20\u65f6\uff0c\u5c31\u80fd\u591f\u91cd\u590d\u8fb9\u7f18\u7684\u50cf\u7d20\u6765\u66f4\u7cbe\u786e\u5730\u4f30\u8ba1\u6700\u7ec8\u7684\u503c\u4e86\u3002 \u7ec3\u4e60 \u4f60\u80fd\u4f7f\u7528framebuffers\u521b\u5efa\u4e00\u4e2a\u540e\u89c6\u955c\u5417?\u4e3a\u6b64\uff0c\u4f60\u5fc5\u987b\u7ed8\u5236\u4e24\u6b21\u573a\u666f:\u4e00\u6b21\u5c06\u76f8\u673a\u65cb\u8f6c180\u5ea6\uff0c\u53e6\u4e00\u6b21\u5c06\u76f8\u673a\u6b63\u5e38\u65cb\u8f6c\u3002\u8bd5\u7740\u5728\u5c4f\u5e55\u9876\u90e8\u521b\u5efa\u4e00\u4e2a\u5c0f\u7684\u56db\u8fb9\u5f62\u6765\u5e94\u7528\u955c\u50cf\u7eb9\u7406\uff0c\u5c31\u50cf \u8fd9\u6837 ; \u89e3\u51b3\u65b9\u6848 \u3002 \u6446\u5f04\u5185\u6838\u503c\u5e76\u521b\u5efa\u60a8\u81ea\u5df1\u611f\u5174\u8da3\u7684\u540e\u5904\u7406\u6548\u679c\u3002\u5c1d\u8bd5\u5728\u4e92\u8054\u7f51\u4e0a\u641c\u7d22\u5176\u4ed6\u6709\u8da3\u7684\u5185\u6838\u3002","title":"\u5e27\u7f13\u51b2"},{"location":"04%20Advanced%20OpenGL/05%20Framebuffers/#_1","text":"\u539f\u6587 Framebuffers \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 AoZhang \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u4e86\u5f88\u591a\u5c4f\u5e55\u7f13\u51b2\u4e86\uff1a\u7528\u4e8e\u5199\u5165\u989c\u8272\u503c\u7684\u989c\u8272\u7f13\u51b2\u3001\u7528\u4e8e\u5199\u5165\u6df1\u5ea6\u4fe1\u606f\u7684\u6df1\u5ea6\u7f13\u51b2\u548c\u5141\u8bb8\u6211\u4eec\u6839\u636e\u4e00\u4e9b\u6761\u4ef6\u4e22\u5f03\u7279\u5b9a\u7247\u6bb5\u7684\u6a21\u677f\u7f13\u51b2\u3002\u8fd9\u4e9b\u7f13\u51b2\u7ed3\u5408\u8d77\u6765\u53eb\u505a \u5e27\u7f13\u51b2 (Framebuffer)\uff0c\u5b83\u88ab\u50a8\u5b58\u5728GPU\u5185\u5b58\u4e2d\u7684\u67d0\u5904\u3002OpenGL\u5141\u8bb8\u6211\u4eec\u5b9a\u4e49\u6211\u4eec\u81ea\u5df1\u7684\u5e27\u7f13\u51b2\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u80fd\u591f\u5b9a\u4e49\u6211\u4eec\u81ea\u5df1\u7684\u989c\u8272\u7f13\u51b2\uff0c\u751a\u81f3\u662f\u6df1\u5ea6\u7f13\u51b2\u548c\u6a21\u677f\u7f13\u51b2\u3002 \u6211\u4eec\u76ee\u524d\u6240\u505a\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u662f\u5728 \u9ed8\u8ba4\u5e27\u7f13\u51b2 \u7684\u6e32\u67d3\u7f13\u51b2\u4e0a\u8fdb\u884c\u7684\u3002\u9ed8\u8ba4\u7684\u5e27\u7f13\u51b2\u662f\u5728\u4f60\u521b\u5efa\u7a97\u53e3\u7684\u65f6\u5019\u751f\u6210\u548c\u914d\u7f6e\u7684\uff08GLFW\u5e2e\u6211\u4eec\u505a\u4e86\u8fd9\u4e9b\uff09\u3002\u901a\u8fc7\u521b\u5efa\u6211\u4eec\u81ea\u5df1\u7684\u5e27\u7f13\u51b2\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u989d\u5916\u7684\u6e32\u67d3\u76ee\u6807(target)\u3002 \u4f60\u53ef\u80fd\u4e0d\u80fd\u5f88\u5feb\u7406\u89e3\u5e27\u7f13\u51b2\u7684\u5e94\u7528\uff0c\u4f46\u6e32\u67d3\u4f60\u7684\u573a\u666f\u5230\u4e0d\u540c\u7684\u5e27\u7f13\u51b2\u80fd\u591f\u8ba9\u6211\u4eec\u5728\u573a\u666f\u4e2d\u52a0\u5165\u7c7b\u4f3c\u955c\u5b50\u7684\u4e1c\u897f\uff0c\u6216\u8005\u505a\u51fa\u5f88\u9177\u7684\u540e\u671f\u5904\u7406\u6548\u679c\u3002\u9996\u5148\u6211\u4eec\u4f1a\u8ba8\u8bba\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4e4b\u540e\u6211\u4eec\u5c06\u6765\u5b9e\u73b0\u8fd9\u4e9b\u70ab\u9177\u7684\u540e\u671f\u5904\u7406\u6548\u679c\u3002","title":"\u5e27\u7f13\u51b2"},{"location":"04%20Advanced%20OpenGL/05%20Framebuffers/#_2","text":"\u548cOpenGL\u4e2d\u7684\u5176\u5b83\u5bf9\u8c61\u4e00\u6837\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u4e00\u4e2a\u53eb\u505a glGenFramebuffers \u7684\u51fd\u6570\u6765\u521b\u5efa\u4e00\u4e2a\u5e27\u7f13\u51b2\u5bf9\u8c61(Framebuffer Object, FBO)\uff1a unsigned int fbo; glGenFramebuffers(1, &fbo); \u8fd9\u79cd\u521b\u5efa\u548c\u4f7f\u7528\u5bf9\u8c61\u7684\u65b9\u5f0f\u6211\u4eec\u5df2\u7ecf\u89c1\u8fc7\u5f88\u591a\u6b21\u4e86\uff0c\u6240\u4ee5\u5b83\u7684\u4f7f\u7528\u51fd\u6570\u4e5f\u548c\u5176\u5b83\u7684\u5bf9\u8c61\u7c7b\u4f3c\u3002\u9996\u5148\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5e27\u7f13\u51b2\u5bf9\u8c61\uff0c\u5c06\u5b83\u7ed1\u5b9a\u4e3a\u6fc0\u6d3b\u7684(Active)\u5e27\u7f13\u51b2\uff0c\u505a\u4e00\u4e9b\u64cd\u4f5c\uff0c\u4e4b\u540e\u89e3\u7ed1\u5e27\u7f13\u51b2\u3002\u6211\u4eec\u4f7f\u7528 glBindFramebuffer \u6765\u7ed1\u5b9a\u5e27\u7f13\u51b2\u3002 glBindFramebuffer(GL_FRAMEBUFFER, fbo); \u5728\u7ed1\u5b9a\u5230 GL_FRAMEBUFFER \u76ee\u6807\u4e4b\u540e\uff0c\u6240\u6709\u7684 \u8bfb\u53d6 \u548c \u5199\u5165 \u5e27\u7f13\u51b2\u7684\u64cd\u4f5c\u5c06\u4f1a\u5f71\u54cd\u5f53\u524d\u7ed1\u5b9a\u7684\u5e27\u7f13\u51b2\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 GL_READ_FRAMEBUFFER \u6216 GL_DRAW_FRAMEBUFFER \uff0c\u5c06\u4e00\u4e2a\u5e27\u7f13\u51b2\u5206\u522b\u7ed1\u5b9a\u5230\u8bfb\u53d6\u76ee\u6807\u6216\u5199\u5165\u76ee\u6807\u3002\u7ed1\u5b9a\u5230 GL_READ_FRAMEBUFFER \u7684\u5e27\u7f13\u51b2\u5c06\u4f1a\u4f7f\u7528\u5728\u6240\u6709\u50cf\u662f glReadPixels \u7684\u8bfb\u53d6\u64cd\u4f5c\u4e2d\uff0c\u800c\u7ed1\u5b9a\u5230 GL_DRAW_FRAMEBUFFER \u7684\u5e27\u7f13\u51b2\u5c06\u4f1a\u88ab\u7528\u4f5c\u6e32\u67d3\u3001\u6e05\u9664\u7b49\u5199\u5165\u64cd\u4f5c\u7684\u76ee\u6807\u3002\u5927\u90e8\u5206\u60c5\u51b5\u4f60\u90fd\u4e0d\u9700\u8981\u533a\u5206\u5b83\u4eec\uff0c\u901a\u5e38\u90fd\u4f1a\u4f7f\u7528 GL_FRAMEBUFFER \uff0c\u7ed1\u5b9a\u5230\u4e24\u4e2a\u4e0a\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4eec\u73b0\u5728\u8fd8\u4e0d\u80fd\u4f7f\u7528\u6211\u4eec\u7684\u5e27\u7f13\u51b2\uff0c\u56e0\u4e3a\u5b83\u8fd8\u4e0d \u5b8c\u6574 (Complete)\uff0c\u4e00\u4e2a\u5b8c\u6574\u7684\u5e27\u7f13\u51b2\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u7684\u6761\u4ef6\uff1a \u9644\u52a0\u81f3\u5c11\u4e00\u4e2a\u7f13\u51b2\uff08\u989c\u8272\u3001\u6df1\u5ea6\u6216\u6a21\u677f\u7f13\u51b2\uff09\u3002 \u81f3\u5c11\u6709\u4e00\u4e2a\u989c\u8272\u9644\u4ef6(Attachment)\u3002 \u6240\u6709\u7684\u9644\u4ef6\u90fd\u5fc5\u987b\u662f\u5b8c\u6574\u7684\uff08\u4fdd\u7559\u4e86\u5185\u5b58\uff09\u3002 \u6bcf\u4e2a\u7f13\u51b2\u90fd\u5e94\u8be5\u6709\u76f8\u540c\u7684\u6837\u672c\u6570(sample)\u3002 \u5982\u679c\u4f60\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u6837\u672c\uff0c\u4e0d\u8981\u62c5\u5fc3\uff0c\u6211\u4eec\u5c06\u5728 \u4e4b\u540e\u7684 \u6559\u7a0b\u4e2d\u8bb2\u5230\u3002 \u4ece\u4e0a\u9762\u7684\u6761\u4ef6\u4e2d\u53ef\u4ee5\u77e5\u9053\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u5e27\u7f13\u51b2\u521b\u5efa\u4e00\u4e9b\u9644\u4ef6\uff0c\u5e76\u5c06\u9644\u4ef6\u9644\u52a0\u5230\u5e27\u7f13\u51b2\u4e0a\u3002\u5728\u5b8c\u6210\u6240\u6709\u7684\u6761\u4ef6\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee5 GL_FRAMEBUFFER \u4e3a\u53c2\u6570\u8c03\u7528 glCheckFramebufferStatus \uff0c\u68c0\u67e5\u5e27\u7f13\u51b2\u662f\u5426\u5b8c\u6574\u3002\u5b83\u5c06\u4f1a\u68c0\u6d4b\u5f53\u524d\u7ed1\u5b9a\u7684\u5e27\u7f13\u51b2\uff0c\u5e76\u8fd4\u56de\u89c4\u8303\u4e2d \u8fd9\u4e9b \u503c\u7684\u5176\u4e2d\u4e4b\u4e00\u3002\u5982\u679c\u5b83\u8fd4\u56de\u7684\u662f GL_FRAMEBUFFER_COMPLETE \uff0c\u5e27\u7f13\u51b2\u5c31\u662f\u5b8c\u6574\u7684\u4e86\u3002 if(glCheckFramebufferStatus(GL_FRAMEBUFFER) == GL_FRAMEBUFFER_COMPLETE) // \u6267\u884c\u80dc\u5229\u7684\u821e\u8e48 \u4e4b\u540e\u6240\u6709\u7684\u6e32\u67d3\u64cd\u4f5c\u5c06\u4f1a\u6e32\u67d3\u5230\u5f53\u524d\u7ed1\u5b9a\u5e27\u7f13\u51b2\u7684\u9644\u4ef6\u4e2d\u3002\u7531\u4e8e\u6211\u4eec\u7684\u5e27\u7f13\u51b2\u4e0d\u662f\u9ed8\u8ba4\u5e27\u7f13\u51b2\uff0c\u6e32\u67d3\u6307\u4ee4\u5c06\u4e0d\u4f1a\u5bf9\u7a97\u53e3\u7684\u89c6\u89c9\u8f93\u51fa\u6709\u4efb\u4f55\u5f71\u54cd\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6e32\u67d3\u5230\u4e00\u4e2a\u4e0d\u540c\u7684\u5e27\u7f13\u51b2\u88ab\u53eb\u505a \u79bb\u5c4f\u6e32\u67d3 (Off-screen Rendering)\u3002\u8981\u4fdd\u8bc1\u6240\u6709\u7684\u6e32\u67d3\u64cd\u4f5c\u5728\u4e3b\u7a97\u53e3\u4e2d\u6709\u89c6\u89c9\u6548\u679c\uff0c\u6211\u4eec\u9700\u8981\u518d\u6b21\u6fc0\u6d3b\u9ed8\u8ba4\u5e27\u7f13\u51b2\uff0c\u5c06\u5b83\u7ed1\u5b9a\u5230 0 \u3002 glBindFramebuffer(GL_FRAMEBUFFER, 0); \u5728\u5b8c\u6210\u6240\u6709\u7684\u5e27\u7f13\u51b2\u64cd\u4f5c\u4e4b\u540e\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5220\u9664\u8fd9\u4e2a\u5e27\u7f13\u51b2\u5bf9\u8c61\uff1a glDeleteFramebuffers(1, &fbo); \u5728\u5b8c\u6574\u6027\u68c0\u67e5\u6267\u884c\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u7ed9\u5e27\u7f13\u51b2\u9644\u52a0\u4e00\u4e2a\u9644\u4ef6\u3002 \u9644\u4ef6 \u662f\u4e00\u4e2a\u5185\u5b58\u4f4d\u7f6e\uff0c\u5b83\u80fd\u591f\u4f5c\u4e3a\u5e27\u7f13\u51b2\u7684\u4e00\u4e2a\u7f13\u51b2\uff0c\u53ef\u4ee5\u5c06\u5b83\u60f3\u8c61\u4e3a\u4e00\u4e2a\u56fe\u50cf\u3002\u5f53\u521b\u5efa\u4e00\u4e2a\u9644\u4ef6\u7684\u65f6\u5019\u6211\u4eec\u6709\u4e24\u4e2a\u9009\u9879\uff1a\u7eb9\u7406\u6216\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61(Renderbuffer Object)\u3002","title":"\u521b\u5efa\u4e00\u4e2a\u5e27\u7f13\u51b2"},{"location":"04%20Advanced%20OpenGL/05%20Framebuffers/#_3","text":"\u5f53\u628a\u4e00\u4e2a\u7eb9\u7406\u9644\u52a0\u5230\u5e27\u7f13\u51b2\u7684\u65f6\u5019\uff0c\u6240\u6709\u7684\u6e32\u67d3\u6307\u4ee4\u5c06\u4f1a\u5199\u5165\u5230\u8fd9\u4e2a\u7eb9\u7406\u4e2d\uff0c\u5c31\u50cf\u5b83\u662f\u4e00\u4e2a\u666e\u901a\u7684\u989c\u8272/\u6df1\u5ea6\u6216\u6a21\u677f\u7f13\u51b2\u4e00\u6837\u3002\u4f7f\u7528\u7eb9\u7406\u7684\u4f18\u70b9\u662f\uff0c\u6240\u6709\u6e32\u67d3\u64cd\u4f5c\u7684\u7ed3\u679c\u5c06\u4f1a\u88ab\u50a8\u5b58\u5728\u4e00\u4e2a\u7eb9\u7406\u56fe\u50cf\u4e2d\uff0c\u6211\u4eec\u4e4b\u540e\u53ef\u4ee5\u5728\u7740\u8272\u5668\u4e2d\u5f88\u65b9\u4fbf\u5730\u4f7f\u7528\u5b83\u3002 \u4e3a\u5e27\u7f13\u51b2\u521b\u5efa\u4e00\u4e2a\u7eb9\u7406\u548c\u521b\u5efa\u4e00\u4e2a\u666e\u901a\u7684\u7eb9\u7406\u5dee\u4e0d\u591a\uff1a unsigned int texture; glGenTextures(1, &texture); glBindTexture(GL_TEXTURE_2D, texture); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, 800, 600, 0, GL_RGB, GL_UNSIGNED_BYTE, NULL); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR); \u4e3b\u8981\u7684\u533a\u522b\u5c31\u662f\uff0c\u6211\u4eec\u5c06\u7ef4\u5ea6\u8bbe\u7f6e\u4e3a\u4e86\u5c4f\u5e55\u5927\u5c0f\uff08\u5c3d\u7ba1\u8fd9\u4e0d\u662f\u5fc5\u987b\u7684\uff09\uff0c\u5e76\u4e14\u6211\u4eec\u7ed9\u7eb9\u7406\u7684 data \u53c2\u6570\u4f20\u9012\u4e86 NULL \u3002\u5bf9\u4e8e\u8fd9\u4e2a\u7eb9\u7406\uff0c\u6211\u4eec\u4ec5\u4ec5\u5206\u914d\u4e86\u5185\u5b58\u800c\u6ca1\u6709\u586b\u5145\u5b83\u3002\u586b\u5145\u8fd9\u4e2a\u7eb9\u7406\u5c06\u4f1a\u5728\u6211\u4eec\u6e32\u67d3\u5230\u5e27\u7f13\u51b2\u4e4b\u540e\u6765\u8fdb\u884c\u3002\u540c\u6837\u6ce8\u610f\u6211\u4eec\u5e76\u4e0d\u5173\u5fc3\u73af\u7ed5\u65b9\u5f0f\u6216\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\uff0c\u6211\u4eec\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u4e0d\u4f1a\u9700\u8981\u5b83\u4eec\u3002 Important \u5982\u679c\u4f60\u60f3\u5c06\u4f60\u7684\u5c4f\u5e55\u6e32\u67d3\u5230\u4e00\u4e2a\u66f4\u5c0f\u6216\u66f4\u5927\u7684\u7eb9\u7406\u4e0a\uff0c\u4f60\u9700\u8981\uff08\u5728\u6e32\u67d3\u5230\u4f60\u7684\u5e27\u7f13\u51b2\u4e4b\u524d\uff09\u518d\u6b21\u8c03\u7528 glViewport \uff0c\u4f7f\u7528\u7eb9\u7406\u7684\u65b0\u7ef4\u5ea6\u4f5c\u4e3a\u53c2\u6570\uff0c\u5426\u5219\u53ea\u6709\u4e00\u5c0f\u90e8\u5206\u7684\u7eb9\u7406\u6216\u5c4f\u5e55\u4f1a\u88ab\u6e32\u67d3\u5230\u8fd9\u4e2a\u7eb9\u7406\u4e0a\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u597d\u4e00\u4e2a\u7eb9\u7406\u4e86\uff0c\u8981\u505a\u7684\u6700\u540e\u4e00\u4ef6\u4e8b\u5c31\u662f\u5c06\u5b83\u9644\u52a0\u5230\u5e27\u7f13\u51b2\u4e0a\u4e86\uff1a glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, texture, 0); glFrameBufferTexture2D \u6709\u4ee5\u4e0b\u7684\u53c2\u6570\uff1a target \uff1a\u5e27\u7f13\u51b2\u7684\u76ee\u6807\uff08\u7ed8\u5236\u3001\u8bfb\u53d6\u6216\u8005\u4e24\u8005\u7686\u6709\uff09 attachment \uff1a\u6211\u4eec\u60f3\u8981\u9644\u52a0\u7684\u9644\u4ef6\u7c7b\u578b\u3002\u5f53\u524d\u6211\u4eec\u6b63\u5728\u9644\u52a0\u4e00\u4e2a\u989c\u8272\u9644\u4ef6\u3002\u6ce8\u610f\u6700\u540e\u7684 0 \u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u9644\u52a0\u591a\u4e2a\u989c\u8272\u9644\u4ef6\u3002\u6211\u4eec\u5c06\u5728\u4e4b\u540e\u7684\u6559\u7a0b\u4e2d\u63d0\u5230\u3002 textarget \uff1a\u4f60\u5e0c\u671b\u9644\u52a0\u7684\u7eb9\u7406\u7c7b\u578b texture \uff1a\u8981\u9644\u52a0\u7684\u7eb9\u7406\u672c\u8eab level \uff1a\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7684\u7ea7\u522b\u3002\u6211\u4eec\u5c06\u5b83\u4fdd\u7559\u4e3a0\u3002 \u9664\u4e86\u989c\u8272\u9644\u4ef6\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u9644\u52a0\u4e00\u4e2a\u6df1\u5ea6\u548c\u6a21\u677f\u7f13\u51b2\u7eb9\u7406\u5230\u5e27\u7f13\u51b2\u5bf9\u8c61\u4e2d\u3002\u8981\u9644\u52a0\u6df1\u5ea6\u7f13\u51b2\u7684\u8bdd\uff0c\u6211\u4eec\u5c06\u9644\u4ef6\u7c7b\u578b\u8bbe\u7f6e\u4e3a GL_DEPTH_ATTACHMENT \u3002\u6ce8\u610f\u7eb9\u7406\u7684 \u683c\u5f0f (Format)\u548c \u5185\u90e8\u683c\u5f0f (Internalformat)\u7c7b\u578b\u5c06\u53d8\u4e3a GL_DEPTH_COMPONENT \uff0c\u6765\u53cd\u6620\u6df1\u5ea6\u7f13\u51b2\u7684\u50a8\u5b58\u683c\u5f0f\u3002\u8981\u9644\u52a0\u6a21\u677f\u7f13\u51b2\u7684\u8bdd\uff0c\u4f60\u8981\u5c06\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8bbe\u7f6e\u4e3a GL_STENCIL_ATTACHMENT \uff0c\u5e76\u5c06\u7eb9\u7406\u7684\u683c\u5f0f\u8bbe\u5b9a\u4e3a GL_STENCIL_INDEX \u3002 \u4e5f\u53ef\u4ee5\u5c06\u6df1\u5ea6\u7f13\u51b2\u548c\u6a21\u677f\u7f13\u51b2\u9644\u52a0\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u7eb9\u7406\u3002\u7eb9\u7406\u7684\u6bcf32\u4f4d\u6570\u503c\u5c06\u5305\u542b24\u4f4d\u7684\u6df1\u5ea6\u4fe1\u606f\u548c8\u4f4d\u7684\u6a21\u677f\u4fe1\u606f\u3002\u8981\u5c06\u6df1\u5ea6\u548c\u6a21\u677f\u7f13\u51b2\u9644\u52a0\u4e3a\u4e00\u4e2a\u7eb9\u7406\u7684\u8bdd\uff0c\u6211\u4eec\u4f7f\u7528 GL_DEPTH_STENCIL_ATTACHMENT \u7c7b\u578b\uff0c\u5e76\u914d\u7f6e\u7eb9\u7406\u7684\u683c\u5f0f\uff0c\u8ba9\u5b83\u5305\u542b\u5408\u5e76\u7684\u6df1\u5ea6\u548c\u6a21\u677f\u503c\u3002\u5c06\u4e00\u4e2a\u6df1\u5ea6\u548c\u6a21\u677f\u7f13\u51b2\u9644\u52a0\u4e3a\u4e00\u4e2a\u7eb9\u7406\u5230\u5e27\u7f13\u51b2\u7684\u4f8b\u5b50\u53ef\u4ee5\u5728\u4e0b\u9762\u627e\u5230\uff1a glTexImage2D( GL_TEXTURE_2D, 0, GL_DEPTH24_STENCIL8, 800, 600, 0, GL_DEPTH_STENCIL, GL_UNSIGNED_INT_24_8, NULL ); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_DEPTH_STENCIL_ATTACHMENT, GL_TEXTURE_2D, texture, 0);","title":"\u7eb9\u7406\u9644\u4ef6"},{"location":"04%20Advanced%20OpenGL/05%20Framebuffers/#_4","text":"\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61 (Renderbuffer Object)\u662f\u5728\u7eb9\u7406\u4e4b\u540e\u5f15\u5165\u5230OpenGL\u4e2d\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u7528\u7684\u5e27\u7f13\u51b2\u9644\u4ef6\u7c7b\u578b\u7684\uff0c\u6240\u4ee5\u5728\u8fc7\u53bb\u7eb9\u7406\u662f\u552f\u4e00\u53ef\u7528\u7684\u9644\u4ef6\u3002\u548c\u7eb9\u7406\u56fe\u50cf\u4e00\u6837\uff0c\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u7f13\u51b2\uff0c\u5373\u4e00\u7cfb\u5217\u7684\u5b57\u8282\u3001\u6574\u6570\u3001\u50cf\u7d20\u7b49\u3002\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u9644\u52a0\u7684\u597d\u5904\u662f\uff0c\u5b83\u4f1a\u5c06\u6570\u636e\u50a8\u5b58\u4e3aOpenGL\u539f\u751f\u7684\u6e32\u67d3\u683c\u5f0f\uff0c\u5b83\u662f\u4e3a\u79bb\u5c4f\u6e32\u67d3\u5230\u5e27\u7f13\u51b2\u4f18\u5316\u8fc7\u7684\u3002 \u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u76f4\u63a5\u5c06\u6240\u6709\u7684\u6e32\u67d3\u6570\u636e\u50a8\u5b58\u5230\u5b83\u7684\u7f13\u51b2\u4e2d\uff0c\u4e0d\u4f1a\u505a\u4efb\u4f55\u9488\u5bf9\u7eb9\u7406\u683c\u5f0f\u7684\u8f6c\u6362\uff0c\u8ba9\u5b83\u53d8\u4e3a\u4e00\u4e2a\u66f4\u5feb\u7684\u53ef\u5199\u50a8\u5b58\u4ecb\u8d28\u3002\u7136\u800c\uff0c\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u901a\u5e38\u90fd\u662f\u53ea\u5199\u7684\uff0c\u6240\u4ee5\u4f60\u4e0d\u80fd\u8bfb\u53d6\u5b83\u4eec\uff08\u6bd4\u5982\u4f7f\u7528\u7eb9\u7406\u8bbf\u95ee\uff09\u3002\u5f53\u7136\u4f60\u4ecd\u7136\u8fd8\u662f\u80fd\u591f\u4f7f\u7528 glReadPixels \u6765\u8bfb\u53d6\u5b83\uff0c\u8fd9\u4f1a\u4ece\u5f53\u524d\u7ed1\u5b9a\u7684\u5e27\u7f13\u51b2\uff0c\u800c\u4e0d\u662f\u9644\u4ef6\u672c\u8eab\uff0c\u4e2d\u8fd4\u56de\u7279\u5b9a\u533a\u57df\u7684\u50cf\u7d20\u3002 \u56e0\u4e3a\u5b83\u7684\u6570\u636e\u5df2\u7ecf\u662f\u539f\u751f\u7684\u683c\u5f0f\u4e86\uff0c\u5f53\u5199\u5165\u6216\u8005\u590d\u5236\u5b83\u7684\u6570\u636e\u5230\u5176\u5b83\u7f13\u51b2\u4e2d\u65f6\u662f\u975e\u5e38\u5feb\u7684\u3002\u6240\u4ee5\uff0c\u4ea4\u6362\u7f13\u51b2\u8fd9\u6837\u7684\u64cd\u4f5c\u5728\u4f7f\u7528\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u65f6\u4f1a\u975e\u5e38\u5feb\u3002\u6211\u4eec\u5728\u6bcf\u4e2a\u6e32\u67d3\u8fed\u4ee3\u6700\u540e\u4f7f\u7528\u7684 glfwSwapBuffers \uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u5b9e\u73b0\uff1a\u53ea\u9700\u8981\u5199\u5165\u4e00\u4e2a\u6e32\u67d3\u7f13\u51b2\u56fe\u50cf\uff0c\u5e76\u5728\u6700\u540e\u4ea4\u6362\u5230\u53e6\u5916\u4e00\u4e2a\u6e32\u67d3\u7f13\u51b2\u5c31\u53ef\u4ee5\u4e86\u3002\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u5bf9\u8fd9\u79cd\u64cd\u4f5c\u975e\u5e38\u5b8c\u7f8e\u3002 \u521b\u5efa\u4e00\u4e2a\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u7684\u4ee3\u7801\u548c\u5e27\u7f13\u51b2\u7684\u4ee3\u7801\u5f88\u7c7b\u4f3c\uff1a unsigned int rbo; glGenRenderbuffers(1, &rbo); \u7c7b\u4f3c\uff0c\u6211\u4eec\u9700\u8981\u7ed1\u5b9a\u8fd9\u4e2a\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\uff0c\u8ba9\u4e4b\u540e\u6240\u6709\u7684\u6e32\u67d3\u7f13\u51b2\u64cd\u4f5c\u5f71\u54cd\u5f53\u524d\u7684 rbo \uff1a glBindRenderbuffer(GL_RENDERBUFFER, rbo); \u7531\u4e8e\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u901a\u5e38\u90fd\u662f\u53ea\u5199\u7684\uff0c\u5b83\u4eec\u4f1a\u7ecf\u5e38\u7528\u4e8e\u6df1\u5ea6\u548c\u6a21\u677f\u9644\u4ef6\uff0c\u56e0\u4e3a\u5927\u90e8\u5206\u65f6\u95f4\u6211\u4eec\u90fd\u4e0d\u9700\u8981\u4ece\u6df1\u5ea6\u548c\u6a21\u677f\u7f13\u51b2\u4e2d\u8bfb\u53d6\u503c\uff0c\u53ea\u5173\u5fc3\u6df1\u5ea6\u548c\u6a21\u677f\u6d4b\u8bd5\u3002\u6211\u4eec \u9700\u8981 \u6df1\u5ea6\u548c\u6a21\u677f\u503c\u7528\u4e8e\u6d4b\u8bd5\uff0c\u4f46\u4e0d\u9700\u8981\u5bf9\u5b83\u4eec\u8fdb\u884c \u91c7\u6837 \uff0c\u6240\u4ee5\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u975e\u5e38\u9002\u5408\u5b83\u4eec\u3002\u5f53\u6211\u4eec\u4e0d\u9700\u8981\u4ece\u8fd9\u4e9b\u7f13\u51b2\u4e2d\u91c7\u6837\u7684\u65f6\u5019\uff0c\u901a\u5e38\u90fd\u4f1a\u9009\u62e9\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\uff0c\u56e0\u4e3a\u5b83\u4f1a\u66f4\u4f18\u5316\u4e00\u70b9\u3002 \u521b\u5efa\u4e00\u4e2a\u6df1\u5ea6\u548c\u6a21\u677f\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 glRenderbufferStorage \u51fd\u6570\u6765\u5b8c\u6210\uff1a glRenderbufferStorage(GL_RENDERBUFFER, GL_DEPTH24_STENCIL8, 800, 600); \u521b\u5efa\u4e00\u4e2a\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u548c\u7eb9\u7406\u5bf9\u8c61\u7c7b\u4f3c\uff0c\u4e0d\u540c\u7684\u662f\u8fd9\u4e2a\u5bf9\u8c61\u662f\u4e13\u95e8\u88ab\u8bbe\u8ba1\u4f5c\u4e3a\u5e27\u7f13\u51b2\u9644\u4ef6\u4f7f\u7528\u7684\uff0c\u800c\u4e0d\u662f\u7eb9\u7406\u90a3\u6837\u7684\u901a\u7528\u6570\u636e\u7f13\u51b2(General Purpose Data Buffer)\u3002\u8fd9\u91cc\u6211\u4eec\u9009\u62e9 GL_DEPTH24_STENCIL8 \u4f5c\u4e3a\u5185\u90e8\u683c\u5f0f\uff0c\u5b83\u5c01\u88c5\u4e8624\u4f4d\u7684\u6df1\u5ea6\u548c8\u4f4d\u7684\u6a21\u677f\u7f13\u51b2\u3002 \u6700\u540e\u4e00\u4ef6\u4e8b\u5c31\u662f\u9644\u52a0\u8fd9\u4e2a\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\uff1a glFramebufferRenderbuffer(GL_FRAMEBUFFER, GL_DEPTH_STENCIL_ATTACHMENT, GL_RENDERBUFFER, rbo); \u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u80fd\u4e3a\u4f60\u7684\u5e27\u7f13\u51b2\u5bf9\u8c61\u63d0\u4f9b\u4e00\u4e9b\u4f18\u5316\uff0c\u4f46\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u4f7f\u7528\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\uff0c\u4ec0\u4e48\u65f6\u5019\u4f7f\u7528\u7eb9\u7406\u662f\u5f88\u91cd\u8981\u7684\u3002\u901a\u5e38\u7684\u89c4\u5219\u662f\uff0c\u5982\u679c\u4f60\u4e0d\u9700\u8981\u4ece\u4e00\u4e2a\u7f13\u51b2\u4e2d\u91c7\u6837\u6570\u636e\uff0c\u90a3\u4e48\u5bf9\u8fd9\u4e2a\u7f13\u51b2\u4f7f\u7528\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u4f1a\u662f\u660e\u667a\u7684\u9009\u62e9\u3002\u5982\u679c\u4f60\u9700\u8981\u4ece\u7f13\u51b2\u4e2d\u91c7\u6837\u989c\u8272\u6216\u6df1\u5ea6\u503c\u7b49\u6570\u636e\uff0c\u90a3\u4e48\u4f60\u5e94\u8be5\u9009\u62e9\u7eb9\u7406\u9644\u4ef6\u3002\u6027\u80fd\u65b9\u9762\u5b83\u4e0d\u4f1a\u4ea7\u751f\u975e\u5e38\u5927\u7684\u5f71\u54cd\u7684\u3002","title":"\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u9644\u4ef6"},{"location":"04%20Advanced%20OpenGL/05%20Framebuffers/#_5","text":"\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u5e27\u7f13\u51b2\uff08\u5927\u6982\uff09\u662f\u600e\u4e48\u5de5\u4f5c\u7684\u4e86\uff0c\u662f\u65f6\u5019\u5b9e\u8df5\u5b83\u4eec\u4e86\u3002\u6211\u4eec\u5c06\u4f1a\u5c06\u573a\u666f\u6e32\u67d3\u5230\u4e00\u4e2a\u9644\u52a0\u5230\u5e27\u7f13\u51b2\u5bf9\u8c61\u4e0a\u7684\u989c\u8272\u7eb9\u7406\u4e2d\uff0c\u4e4b\u540e\u5c06\u5728\u4e00\u4e2a\u6a2a\u8de8\u6574\u4e2a\u5c4f\u5e55\u7684\u56db\u8fb9\u5f62\u4e0a\u7ed8\u5236\u8fd9\u4e2a\u7eb9\u7406\u3002\u8fd9\u6837\u89c6\u89c9\u8f93\u51fa\u548c\u6ca1\u4f7f\u7528\u5e27\u7f13\u51b2\u65f6\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u4f46\u8fd9\u6b21\u662f\u6253\u5370\u5230\u4e86\u4e00\u4e2a\u56db\u8fb9\u5f62\u4e0a\u3002\u8fd9\u4e3a\u4ec0\u4e48\u5f88\u6709\u7528\u5462\uff1f\u6211\u4eec\u4f1a\u5728\u4e0b\u4e00\u90e8\u5206\u4e2d\u77e5\u9053\u539f\u56e0\u3002 \u9996\u5148\u8981\u521b\u5efa\u4e00\u4e2a\u5e27\u7f13\u51b2\u5bf9\u8c61\uff0c\u5e76\u7ed1\u5b9a\u5b83\uff0c\u8fd9\u4e9b\u90fd\u5f88\u76f4\u89c2\uff1a unsigned int framebuffer; glGenFramebuffers(1, &framebuffer); glBindFramebuffer(GL_FRAMEBUFFER, framebuffer); \u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7eb9\u7406\u56fe\u50cf\uff0c\u6211\u4eec\u5c06\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u989c\u8272\u9644\u4ef6\u9644\u52a0\u5230\u5e27\u7f13\u51b2\u4e0a\u3002\u6211\u4eec\u5c06\u7eb9\u7406\u7684\u7ef4\u5ea6\u8bbe\u7f6e\u4e3a\u7a97\u53e3\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff0c\u5e76\u4e14\u4e0d\u521d\u59cb\u5316\u5b83\u7684\u6570\u636e\uff1a // \u751f\u6210\u7eb9\u7406 unsigned int texColorBuffer; glGenTextures(1, &texColorBuffer); glBindTexture(GL_TEXTURE_2D, texColorBuffer); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, 800, 600, 0, GL_RGB, GL_UNSIGNED_BYTE, NULL); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR ); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR); glBindTexture(GL_TEXTURE_2D, 0); // \u5c06\u5b83\u9644\u52a0\u5230\u5f53\u524d\u7ed1\u5b9a\u7684\u5e27\u7f13\u51b2\u5bf9\u8c61 glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, texColorBuffer, 0); \u6211\u4eec\u8fd8\u5e0c\u671bOpenGL\u80fd\u591f\u8fdb\u884c\u6df1\u5ea6\u6d4b\u8bd5\uff08\u5982\u679c\u4f60\u9700\u8981\u7684\u8bdd\u8fd8\u6709\u6a21\u677f\u6d4b\u8bd5\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u6df1\u5ea6\uff08\u548c\u6a21\u677f\uff09\u9644\u4ef6\u5230\u5e27\u7f13\u51b2\u4e2d\u3002\u7531\u4e8e\u6211\u4eec\u53ea\u5e0c\u671b\u91c7\u6837\u989c\u8272\u7f13\u51b2\uff0c\u800c\u4e0d\u662f\u5176\u5b83\u7684\u7f13\u51b2\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u5b83\u4eec\u521b\u5efa\u4e00\u4e2a\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u3002\u8fd8\u8bb0\u5f97\u5f53\u6211\u4eec\u4e0d\u9700\u8981\u91c7\u6837\u7f13\u51b2\u7684\u65f6\u5019\uff0c\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u662f\u66f4\u597d\u7684\u9009\u62e9\u5417\uff1f \u521b\u5efa\u4e00\u4e2a\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u4e0d\u662f\u975e\u5e38\u590d\u6742\u3002\u6211\u4eec\u9700\u8981\u8bb0\u4f4f\u7684\u552f\u4e00\u4e8b\u60c5\u662f\uff0c\u6211\u4eec\u5c06\u5b83\u521b\u5efa\u4e3a\u4e00\u4e2a\u6df1\u5ea6 \u548c \u6a21\u677f\u9644\u4ef6\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u3002\u6211\u4eec\u5c06\u5b83\u7684 \u5185\u90e8 \u683c\u5f0f\u8bbe\u7f6e\u4e3a GL_DEPTH24_STENCIL8 \uff0c\u5bf9\u6211\u4eec\u6765\u8bf4\u8fd9\u4e2a\u7cbe\u5ea6\u5df2\u7ecf\u8db3\u591f\u4e86\u3002 unsigned int rbo; glGenRenderbuffers(1, &rbo); glBindRenderbuffer(GL_RENDERBUFFER, rbo); glRenderbufferStorage(GL_RENDERBUFFER, GL_DEPTH24_STENCIL8, 800, 600); glBindRenderbuffer(GL_RENDERBUFFER, 0); \u5f53\u6211\u4eec\u4e3a\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u5206\u914d\u4e86\u8db3\u591f\u7684\u5185\u5b58\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u89e3\u7ed1\u8fd9\u4e2a\u6e32\u67d3\u7f13\u51b2\u3002 \u63a5\u4e0b\u6765\uff0c\u4f5c\u4e3a\u5b8c\u6210\u5e27\u7f13\u51b2\u4e4b\u524d\u7684\u6700\u540e\u4e00\u6b65\uff0c\u6211\u4eec\u5c06\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u9644\u52a0\u5230\u5e27\u7f13\u51b2\u7684\u6df1\u5ea6 \u548c \u6a21\u677f\u9644\u4ef6\u4e0a\uff1a glFramebufferRenderbuffer(GL_FRAMEBUFFER, GL_DEPTH_STENCIL_ATTACHMENT, GL_RENDERBUFFER, rbo); \u6700\u540e\uff0c\u6211\u4eec\u5e0c\u671b\u68c0\u67e5\u5e27\u7f13\u51b2\u662f\u5426\u662f\u5b8c\u6574\u7684\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u6211\u4eec\u5c06\u6253\u5370\u9519\u8bef\u4fe1\u606f\u3002 if(glCheckFramebufferStatus(GL_FRAMEBUFFER) != GL_FRAMEBUFFER_COMPLETE) std::cout << \"ERROR::FRAMEBUFFER:: Framebuffer is not complete!\" << std::endl; glBindFramebuffer(GL_FRAMEBUFFER, 0); \u8bb0\u5f97\u8981\u89e3\u7ed1\u5e27\u7f13\u51b2\uff0c\u4fdd\u8bc1\u6211\u4eec\u4e0d\u4f1a\u4e0d\u5c0f\u5fc3\u6e32\u67d3\u5230\u9519\u8bef\u7684\u5e27\u7f13\u51b2\u4e0a\u3002 \u73b0\u5728\u8fd9\u4e2a\u5e27\u7f13\u51b2\u5c31\u5b8c\u6574\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ed1\u5b9a\u8fd9\u4e2a\u5e27\u7f13\u51b2\u5bf9\u8c61\uff0c\u8ba9\u6e32\u67d3\u5230\u5e27\u7f13\u51b2\u7684\u7f13\u51b2\u4e2d\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684\u5e27\u7f13\u51b2\u4e2d\u3002\u4e4b\u540e\u7684\u6e32\u67d3\u6307\u4ee4\u5c06\u4f1a\u5f71\u54cd\u5f53\u524d\u7ed1\u5b9a\u7684\u5e27\u7f13\u51b2\u3002\u6240\u6709\u7684\u6df1\u5ea6\u548c\u6a21\u677f\u64cd\u4f5c\u90fd\u4f1a\u4ece\u5f53\u524d\u7ed1\u5b9a\u7684\u5e27\u7f13\u51b2\u7684\u6df1\u5ea6\u548c\u6a21\u677f\u9644\u4ef6\u4e2d\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u8bfb\u53d6\u3002\u5982\u679c\u4f60\u5ffd\u7565\u4e86\u6df1\u5ea6\u7f13\u51b2\uff0c\u90a3\u4e48\u6240\u6709\u7684\u6df1\u5ea6\u6d4b\u8bd5\u64cd\u4f5c\u5c06\u4e0d\u518d\u5de5\u4f5c\uff0c\u56e0\u4e3a\u5f53\u524d\u7ed1\u5b9a\u7684\u5e27\u7f13\u51b2\u4e2d\u4e0d\u5b58\u5728\u6df1\u5ea6\u7f13\u51b2\u3002 \u6240\u4ee5\uff0c\u8981\u60f3\u7ed8\u5236\u573a\u666f\u5230\u4e00\u4e2a\u7eb9\u7406\u4e0a\uff0c\u6211\u4eec\u9700\u8981\u91c7\u53d6\u4ee5\u4e0b\u7684\u6b65\u9aa4\uff1a \u5c06\u65b0\u7684\u5e27\u7f13\u51b2\u7ed1\u5b9a\u4e3a\u6fc0\u6d3b\u7684\u5e27\u7f13\u51b2\uff0c\u548c\u5f80\u5e38\u4e00\u6837\u6e32\u67d3\u573a\u666f \u7ed1\u5b9a\u9ed8\u8ba4\u7684\u5e27\u7f13\u51b2 \u7ed8\u5236\u4e00\u4e2a\u6a2a\u8de8\u6574\u4e2a\u5c4f\u5e55\u7684\u56db\u8fb9\u5f62\uff0c\u5c06\u5e27\u7f13\u51b2\u7684\u989c\u8272\u7f13\u51b2\u4f5c\u4e3a\u5b83\u7684\u7eb9\u7406\u3002 \u6211\u4eec\u5c06\u4f1a\u7ed8\u5236 \u6df1\u5ea6\u6d4b\u8bd5 \u5c0f\u8282\u4e2d\u7684\u573a\u666f\uff0c\u4f46\u8fd9\u6b21\u4f7f\u7528\u7684\u662f\u65e7\u7684 \u7bb1\u5b50 \u7eb9\u7406\u3002 \u4e3a\u4e86\u7ed8\u5236\u8fd9\u4e2a\u56db\u8fb9\u5f62\uff0c\u6211\u4eec\u5c06\u4f1a\u65b0\u521b\u5efa\u4e00\u5957\u7b80\u5355\u7684\u7740\u8272\u5668\u3002\u6211\u4eec\u5c06\u4e0d\u4f1a\u5305\u542b\u4efb\u4f55\u82b1\u54e8\u7684\u77e9\u9635\u53d8\u6362\uff0c\u56e0\u4e3a\u6211\u4eec\u63d0\u4f9b\u7684\u662f\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7684 \u9876\u70b9\u5750\u6807 \uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u5b83\u4eec\u8bbe\u5b9a\u4e3a\u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u51fa\u3002\u9876\u70b9\u7740\u8272\u5668\u662f\u8fd9\u6837\u7684\uff1a #version 330 core layout (location = 0) in vec2 aPos; layout (location = 1) in vec2 aTexCoords; out vec2 TexCoords; void main() { gl_Position = vec4(aPos.x, aPos.y, 0.0, 1.0); TexCoords = aTexCoords; } \u5e76\u6ca1\u6709\u592a\u590d\u6742\u7684\u4e1c\u897f\u3002\u7247\u6bb5\u7740\u8272\u5668\u4f1a\u66f4\u52a0\u57fa\u7840\uff0c\u6211\u4eec\u505a\u7684\u552f\u4e00\u4e00\u4ef6\u4e8b\u5c31\u662f\u4ece\u7eb9\u7406\u4e2d\u91c7\u6837\uff1a #version 330 core out vec4 FragColor; in vec2 TexCoords; uniform sampler2D screenTexture; void main() { FragColor = texture(screenTexture, TexCoords); } \u63a5\u7740\u5c31\u9760\u4f60\u6765\u4e3a\u5c4f\u5e55\u56db\u8fb9\u5f62\u521b\u5efa\u5e76\u914d\u7f6e\u4e00\u4e2aVAO\u4e86\u3002\u5e27\u7f13\u51b2\u7684\u4e00\u4e2a\u6e32\u67d3\u8fed\u4ee3\u5c06\u4f1a\u6709\u4ee5\u4e0b\u7684\u7ed3\u6784\uff1a // \u7b2c\u4e00\u5904\u7406\u9636\u6bb5(Pass) glBindFramebuffer(GL_FRAMEBUFFER, framebuffer); glClearColor(0.1f, 0.1f, 0.1f, 1.0f); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // \u6211\u4eec\u73b0\u5728\u4e0d\u4f7f\u7528\u6a21\u677f\u7f13\u51b2 glEnable(GL_DEPTH_TEST); DrawScene(); // \u7b2c\u4e8c\u5904\u7406\u9636\u6bb5 glBindFramebuffer(GL_FRAMEBUFFER, 0); // \u8fd4\u56de\u9ed8\u8ba4 glClearColor(1.0f, 1.0f, 1.0f, 1.0f); glClear(GL_COLOR_BUFFER_BIT); screenShader.use(); glBindVertexArray(quadVAO); glDisable(GL_DEPTH_TEST); glBindTexture(GL_TEXTURE_2D, textureColorbuffer); glDrawArrays(GL_TRIANGLES, 0, 6); \u8981\u6ce8\u610f\u4e00\u4e9b\u4e8b\u60c5\u3002\u7b2c\u4e00\uff0c\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u7684\u6bcf\u4e2a\u5e27\u7f13\u51b2\u90fd\u6709\u5b83\u81ea\u5df1\u4e00\u5957\u7f13\u51b2\uff0c\u6211\u4eec\u5e0c\u671b\u8bbe\u7f6e\u5408\u9002\u7684\u4f4d\uff0c\u8c03\u7528 glClear \uff0c\u6e05\u9664\u8fd9\u4e9b\u7f13\u51b2\u3002\u7b2c\u4e8c\uff0c\u5f53\u7ed8\u5236\u56db\u8fb9\u5f62\u65f6\uff0c\u6211\u4eec\u5c06\u7981\u7528\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u5728\u7ed8\u5236\u4e00\u4e2a\u7b80\u5355\u7684\u56db\u8fb9\u5f62\uff0c\u5e76\u4e0d\u9700\u8981\u5173\u7cfb\u6df1\u5ea6\u6d4b\u8bd5\u3002\u5728\u7ed8\u5236\u666e\u901a\u573a\u666f\u7684\u65f6\u5019\u6211\u4eec\u5c06\u4f1a\u91cd\u65b0\u542f\u7528\u6df1\u5ea6\u6d4b\u8bd5\u3002 \u6709\u5f88\u591a\u6b65\u9aa4\u90fd\u53ef\u80fd\u4f1a\u51fa\u9519\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u6ca1\u6709\u5f97\u5230\u8f93\u51fa\u7684\u8bdd\uff0c\u5c1d\u8bd5\u8c03\u8bd5\u7a0b\u5e8f\uff0c\u5e76\u91cd\u65b0\u9605\u8bfb\u672c\u8282\u7684\u76f8\u5173\u90e8\u5206\u3002\u5982\u679c\u6240\u6709\u7684\u4e1c\u897f\u90fd\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f60\u5c06\u4f1a\u5f97\u5230\u4e0b\u9762\u8fd9\u6837\u7684\u89c6\u89c9\u8f93\u51fa\uff1a \u5de6\u8fb9\u5c55\u793a\u7684\u662f\u89c6\u89c9\u8f93\u51fa\uff0c\u5b83\u548c \u6df1\u5ea6\u6d4b\u8bd5 \u4e2d\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u4f46\u8fd9\u6b21\u662f\u6e32\u67d3\u5728\u4e00\u4e2a\u7b80\u5355\u7684\u56db\u8fb9\u5f62\u4e0a\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u7ebf\u6846\u6a21\u5f0f\u6e32\u67d3\u573a\u666f\uff0c\u5c31\u4f1a\u53d8\u5f97\u5f88\u660e\u663e\uff0c\u6211\u4eec\u5728\u9ed8\u8ba4\u7684\u5e27\u7f13\u51b2\u4e2d\u53ea\u7ed8\u5236\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u56db\u8fb9\u5f62\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801\u3002 \u6240\u4ee5\u8fd9\u4e2a\u6709\u4ec0\u4e48\u7528\u5904\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u80fd\u591f\u4ee5\u4e00\u4e2a\u7eb9\u7406\u56fe\u50cf\u7684\u65b9\u5f0f\u8bbf\u95ee\u5df2\u6e32\u67d3\u573a\u666f\u4e2d\u7684\u6bcf\u4e2a\u50cf\u7d20\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u521b\u5efa\u51fa\u975e\u5e38\u6709\u8da3\u7684\u6548\u679c\u3002\u8fd9\u4e9b\u6709\u8da3\u6548\u679c\u7edf\u79f0\u4e3a \u540e\u671f\u5904\u7406 (Post-processing)\u6548\u679c\u3002","title":"\u6e32\u67d3\u5230\u7eb9\u7406"},{"location":"04%20Advanced%20OpenGL/05%20Framebuffers/#_6","text":"\u65e2\u7136\u6574\u4e2a\u573a\u666f\u90fd\u88ab\u6e32\u67d3\u5230\u4e86\u4e00\u4e2a\u7eb9\u7406\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u901a\u8fc7\u4fee\u6539\u7eb9\u7406\u6570\u636e\u521b\u5efa\u51fa\u4e00\u4e9b\u975e\u5e38\u6709\u610f\u601d\u7684\u6548\u679c\u3002\u5728\u8fd9\u4e00\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u5411\u4f60\u5c55\u793a\u4e00\u4e9b\u6d41\u884c\u7684\u540e\u671f\u5904\u7406\u6548\u679c\uff0c\u5e76\u544a\u8bc9\u4f60\u6539\u5982\u4f55\u4f7f\u7528\u521b\u9020\u529b\u521b\u5efa\u4f60\u81ea\u5df1\u7684\u6548\u679c\u3002 \u8ba9\u6211\u4eec\u5148\u4ece\u6700\u7b80\u5355\u7684\u540e\u671f\u5904\u7406\u6548\u679c\u5f00\u59cb\u3002","title":"\u540e\u671f\u5904\u7406"},{"location":"04%20Advanced%20OpenGL/05%20Framebuffers/#_7","text":"\u6211\u4eec\u73b0\u5728\u80fd\u591f\u8bbf\u95ee\u6e32\u67d3\u8f93\u51fa\u7684\u6bcf\u4e2a\u989c\u8272\uff0c\u6240\u4ee5\u5728\uff08\u8bd1\u6ce8\uff1a\u5c4f\u5e55\u7684\uff09\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u8fd4\u56de\u8fd9\u4e9b\u989c\u8272\u7684\u53cd\u76f8(Inversion)\u5e76\u4e0d\u662f\u5f88\u96be\u3002\u6211\u4eec\u5c06\u4f1a\u4ece\u5c4f\u5e55\u7eb9\u7406\u4e2d\u53d6\u989c\u8272\u503c\uff0c\u7136\u540e\u75281.0\u51cf\u53bb\u5b83\uff0c\u5bf9\u5b83\u8fdb\u884c\u53cd\u76f8\uff1a void main() { FragColor = vec4(vec3(1.0 - texture(screenTexture, TexCoords)), 1.0); } \u5c3d\u7ba1\u53cd\u76f8\u662f\u4e00\u4e2a\u76f8\u5bf9\u7b80\u5355\u7684\u540e\u671f\u5904\u7406\u6548\u679c\uff0c\u5b83\u5df2\u7ecf\u80fd\u521b\u9020\u4e00\u4e9b\u5947\u602a\u7684\u6548\u679c\u4e86\uff1a \u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u4ec5\u4ec5\u4f7f\u7528\u4e00\u884c\u4ee3\u7801\uff0c\u5c31\u80fd\u8ba9\u6574\u4e2a\u573a\u666f\u7684\u989c\u8272\u90fd\u53cd\u76f8\u4e86\u3002\u5f88\u9177\u5427\uff1f","title":"\u53cd\u76f8"},{"location":"04%20Advanced%20OpenGL/05%20Framebuffers/#_8","text":"\u53e6\u5916\u4e00\u4e2a\u5f88\u6709\u8da3\u7684\u6548\u679c\u662f\uff0c\u79fb\u9664\u573a\u666f\u4e2d\u9664\u4e86\u9ed1\u767d\u7070\u4ee5\u5916\u6240\u6709\u7684\u989c\u8272\uff0c\u8ba9\u6574\u4e2a\u56fe\u50cf\u7070\u5ea6\u5316(Grayscale)\u3002\u5f88\u7b80\u5355\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f\uff0c\u53d6\u6240\u6709\u7684\u989c\u8272\u5206\u91cf\uff0c\u5c06\u5b83\u4eec\u5e73\u5747\u5316\uff1a void main() { FragColor = texture(screenTexture, TexCoords); float average = (FragColor.r + FragColor.g + FragColor.b) / 3.0; FragColor = vec4(average, average, average, 1.0); } \u8fd9\u5df2\u7ecf\u80fd\u521b\u9020\u5f88\u597d\u7684\u7ed3\u679c\u4e86\uff0c\u4f46\u4eba\u773c\u4f1a\u5bf9\u7eff\u8272\u66f4\u52a0\u654f\u611f\u4e00\u4e9b\uff0c\u800c\u5bf9\u84dd\u8272\u4e0d\u90a3\u4e48\u654f\u611f\uff0c\u6240\u4ee5\u4e3a\u4e86\u83b7\u53d6\u7269\u7406\u4e0a\u66f4\u7cbe\u786e\u7684\u6548\u679c\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u52a0\u6743\u7684(Weighted)\u901a\u9053\uff1a void main() { FragColor = texture(screenTexture, TexCoords); float average = 0.2126 * FragColor.r + 0.7152 * FragColor.g + 0.0722 * FragColor.b; FragColor = vec4(average, average, average, 1.0); } \u4f60\u53ef\u80fd\u4e0d\u4f1a\u7acb\u523b\u53d1\u73b0\u6709\u4ec0\u4e48\u5dee\u522b\uff0c\u4f46\u5728\u66f4\u590d\u6742\u7684\u573a\u666f\u4e2d\uff0c\u8fd9\u6837\u7684\u52a0\u6743\u7070\u5ea6\u6548\u679c\u4f1a\u66f4\u771f\u5b9e\u4e00\u70b9\u3002","title":"\u7070\u5ea6"},{"location":"04%20Advanced%20OpenGL/05%20Framebuffers/#_9","text":"\u5728\u4e00\u4e2a\u7eb9\u7406\u56fe\u50cf\u4e0a\u505a\u540e\u671f\u5904\u7406\u7684\u53e6\u5916\u4e00\u4e2a\u597d\u5904\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u7eb9\u7406\u7684\u5176\u5b83\u5730\u65b9\u91c7\u6837\u989c\u8272\u503c\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u53ef\u4ee5\u5728\u5f53\u524d\u7eb9\u7406\u5750\u6807\u7684\u5468\u56f4\u53d6\u4e00\u5c0f\u5757\u533a\u57df\uff0c\u5bf9\u5f53\u524d\u7eb9\u7406\u503c\u5468\u56f4\u7684\u591a\u4e2a\u7eb9\u7406\u503c\u8fdb\u884c\u91c7\u6837\u3002\u6211\u4eec\u53ef\u4ee5\u7ed3\u5408\u5b83\u4eec\u521b\u5efa\u51fa\u5f88\u6709\u610f\u601d\u7684\u6548\u679c\u3002 \u6838 (Kernel)\uff08\u6216\u5377\u79ef\u77e9\u9635(Convolution Matrix)\uff09\u662f\u4e00\u4e2a\u7c7b\u77e9\u9635\u7684\u6570\u503c\u6570\u7ec4\uff0c\u5b83\u7684\u4e2d\u5fc3\u4e3a\u5f53\u524d\u7684\u50cf\u7d20\uff0c\u5b83\u4f1a\u7528\u5b83\u7684\u6838\u503c\u4e58\u4ee5\u5468\u56f4\u7684\u50cf\u7d20\u503c\uff0c\u5e76\u5c06\u7ed3\u679c\u76f8\u52a0\u53d8\u6210\u4e00\u4e2a\u503c\u3002\u6240\u4ee5\uff0c\u57fa\u672c\u4e0a\u6211\u4eec\u662f\u5728\u5bf9\u5f53\u524d\u50cf\u7d20\u5468\u56f4\u7684\u7eb9\u7406\u5750\u6807\u6dfb\u52a0\u4e00\u4e2a\u5c0f\u7684\u504f\u79fb\u91cf\uff0c\u5e76\u6839\u636e\u6838\u5c06\u7ed3\u679c\u5408\u5e76\u3002\u4e0b\u9762\u662f\u6838\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a \\begin{bmatrix}2 & 2 & 2 \\\\ 2 & -15 & 2 \\\\ 2 & 2 & 2 \\end{bmatrix} \u8fd9\u4e2a\u6838\u53d6\u4e868\u4e2a\u5468\u56f4\u50cf\u7d20\u503c\uff0c\u5c06\u5b83\u4eec\u4e58\u4ee52\uff0c\u800c\u628a\u5f53\u524d\u7684\u50cf\u7d20\u4e58\u4ee5-15\u3002\u8fd9\u4e2a\u6838\u7684\u4f8b\u5b50\u5c06\u5468\u56f4\u7684\u50cf\u7d20\u4e58\u4e0a\u4e86\u4e00\u4e2a\u6743\u91cd\uff0c\u5e76\u5c06\u5f53\u524d\u50cf\u7d20\u4e58\u4ee5\u4e00\u4e2a\u6bd4\u8f83\u5927\u7684\u8d1f\u6743\u91cd\u6765\u5e73\u8861\u7ed3\u679c\u3002 Important \u4f60\u5728\u7f51\u4e0a\u627e\u5230\u7684\u5927\u90e8\u5206\u6838\u5c06\u6240\u6709\u7684\u6743\u91cd\u52a0\u8d77\u6765\u4e4b\u540e\u90fd\u5e94\u8be5\u4f1a\u7b49\u4e8e1\uff0c\u5982\u679c\u5b83\u4eec\u52a0\u8d77\u6765\u4e0d\u7b49\u4e8e1\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u6700\u7ec8\u7684\u7eb9\u7406\u989c\u8272\u5c06\u4f1a\u6bd4\u539f\u7eb9\u7406\u503c\u66f4\u4eae\u6216\u8005\u66f4\u6697\u4e86\u3002 \u6838\u662f\u540e\u671f\u5904\u7406\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u5de5\u5177\uff0c\u5b83\u4eec\u4f7f\u7528\u548c\u5b9e\u9a8c\u8d77\u6765\u90fd\u5f88\u7b80\u5355\uff0c\u7f51\u4e0a\u4e5f\u80fd\u627e\u5230\u5f88\u591a\u4f8b\u5b50\u3002\u6211\u4eec\u9700\u8981\u7a0d\u5fae\u4fee\u6539\u4e00\u4e0b\u7247\u6bb5\u7740\u8272\u5668\uff0c\u8ba9\u5b83\u80fd\u591f\u652f\u6301\u6838\u3002\u6211\u4eec\u5047\u8bbe\u4f7f\u7528\u7684\u6838\u90fd\u662f3x3\u6838\uff08\u5b9e\u9645\u4e0a\u5927\u90e8\u5206\u6838\u90fd\u662f\uff09\uff1a const float offset = 1.0 / 300.0; void main() { vec2 offsets[9] = vec2[]( vec2(-offset, offset), // \u5de6\u4e0a vec2( 0.0f, offset), // \u6b63\u4e0a vec2( offset, offset), // \u53f3\u4e0a vec2(-offset, 0.0f), // \u5de6 vec2( 0.0f, 0.0f), // \u4e2d vec2( offset, 0.0f), // \u53f3 vec2(-offset, -offset), // \u5de6\u4e0b vec2( 0.0f, -offset), // \u6b63\u4e0b vec2( offset, -offset) // \u53f3\u4e0b ); float kernel[9] = float[]( -1, -1, -1, -1, 9, -1, -1, -1, -1 ); vec3 sampleTex[9]; for(int i = 0; i < 9; i++) { sampleTex[i] = vec3(texture(screenTexture, TexCoords.st + offsets[i])); } vec3 col = vec3(0.0); for(int i = 0; i < 9; i++) col += sampleTex[i] * kernel[i]; FragColor = vec4(col, 1.0); } \u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u4e3a\u5468\u56f4\u7684\u7eb9\u7406\u5750\u6807\u521b\u5efa\u4e86\u4e00\u4e2a9\u4e2a vec2 \u504f\u79fb\u91cf\u7684\u6570\u7ec4\u3002\u504f\u79fb\u91cf\u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u4f60\u53ef\u4ee5\u6309\u7167\u4f60\u7684\u559c\u597d\u81ea\u5b9a\u4e49\u5b83\u3002\u4e4b\u540e\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u6838\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u662f\u4e00\u4e2a \u9510\u5316 (Sharpen)\u6838\uff0c\u5b83\u4f1a\u91c7\u6837\u5468\u56f4\u7684\u6240\u6709\u50cf\u7d20\uff0c\u9510\u5316\u6bcf\u4e2a\u989c\u8272\u503c\u3002\u6700\u540e\uff0c\u5728\u91c7\u6837\u65f6\u6211\u4eec\u5c06\u6bcf\u4e2a\u504f\u79fb\u91cf\u52a0\u5230\u5f53\u524d\u7eb9\u7406\u5750\u6807\u4e0a\uff0c\u83b7\u53d6\u9700\u8981\u91c7\u6837\u7684\u7eb9\u7406\uff0c\u4e4b\u540e\u5c06\u8fd9\u4e9b\u7eb9\u7406\u503c\u4e58\u4ee5\u52a0\u6743\u7684\u6838\u503c\uff0c\u5e76\u5c06\u5b83\u4eec\u52a0\u5230\u4e00\u8d77\u3002 \u8fd9\u4e2a\u9510\u5316\u6838\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a \u8fd9\u80fd\u521b\u5efa\u4e00\u4e9b\u5f88\u6709\u8da3\u7684\u6548\u679c\uff0c\u6bd4\u5982\u8bf4\u4f60\u7684\u73a9\u5bb6\u6253\u4e86\u9ebb\u9189\u5242\u6240\u611f\u53d7\u5230\u7684\u6548\u679c\u3002","title":"\u6838\u6548\u679c"},{"location":"04%20Advanced%20OpenGL/05%20Framebuffers/#_10","text":"\u521b\u5efa \u6a21\u7cca (Blur)\u6548\u679c\u7684\u6838\u662f\u8fd9\u6837\u7684\uff1a \\begin{bmatrix} 1 & 2 & 1 \\\\ 2 & 4 & 2 \\\\ 1 & 2 & 1 \\end{bmatrix} / 16 \u7531\u4e8e\u6240\u6709\u503c\u7684\u548c\u662f16\uff0c\u6240\u4ee5\u76f4\u63a5\u8fd4\u56de\u5408\u5e76\u7684\u91c7\u6837\u989c\u8272\u5c06\u4ea7\u751f\u975e\u5e38\u4eae\u7684\u989c\u8272\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06\u6838\u7684\u6bcf\u4e2a\u503c\u90fd\u9664\u4ee516\u3002\u6700\u7ec8\u7684\u6838\u6570\u7ec4\u5c06\u4f1a\u662f\uff1a float kernel[9] = float[]( 1.0 / 16, 2.0 / 16, 1.0 / 16, 2.0 / 16, 4.0 / 16, 2.0 / 16, 1.0 / 16, 2.0 / 16, 1.0 / 16 ); \u901a\u8fc7\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u6539\u53d8\u6838\u7684 float \u6570\u7ec4\uff0c\u6211\u4eec\u5b8c\u5168\u6539\u53d8\u4e86\u540e\u671f\u5904\u7406\u6548\u679c\u3002\u5b83\u73b0\u5728\u770b\u8d77\u6765\u662f\u8fd9\u6837\u5b50\u7684\uff1a \u8fd9\u6837\u7684\u6a21\u7cca\u6548\u679c\u521b\u9020\u4e86\u5f88\u591a\u7684\u53ef\u80fd\u6027\u3002\u6211\u4eec\u53ef\u4ee5\u968f\u7740\u65f6\u95f4\u4fee\u6539\u6a21\u7cca\u7684\u91cf\uff0c\u521b\u9020\u51fa\u73a9\u5bb6\u9189\u9152\u65f6\u7684\u6548\u679c\uff0c\u6216\u8005\u5728\u4e3b\u89d2\u6ca1\u5e26\u773c\u955c\u7684\u65f6\u5019\u589e\u52a0\u6a21\u7cca\u3002\u6a21\u7cca\u4e5f\u80fd\u591f\u8ba9\u6211\u4eec\u6765\u5e73\u6ed1\u989c\u8272\u503c\uff0c\u6211\u4eec\u5c06\u5728\u4e4b\u540e\u6559\u7a0b\u4e2d\u4f7f\u7528\u5230\u3002 \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u53ea\u8981\u6211\u4eec\u6709\u4e86\u8fd9\u4e2a\u6838\u7684\u5b9e\u73b0\uff0c\u521b\u5efa\u70ab\u9177\u7684\u540e\u671f\u5904\u7406\u7279\u6548\u662f\u975e\u5e38\u5bb9\u6613\u7684\u4e8b\u3002\u6211\u4eec\u518d\u6765\u770b\u6700\u540e\u4e00\u4e2a\u5f88\u6d41\u884c\u7684\u6548\u679c\u6765\u7ed3\u675f\u672c\u8282\u7684\u8ba8\u8bba\u3002","title":"\u6a21\u7cca"},{"location":"04%20Advanced%20OpenGL/05%20Framebuffers/#_11","text":"\u4e0b\u9762\u7684 \u8fb9\u7f18\u68c0\u6d4b (Edge-detection)\u6838\u548c\u9510\u5316\u6838\u975e\u5e38\u76f8\u4f3c\uff1a \\begin{bmatrix} 1 & 1 & 1 \\\\ 1 & -8 & 1 \\\\ 1 & 1 & 1 \\end{bmatrix} \u8fd9\u4e2a\u6838\u9ad8\u4eae\u4e86\u6240\u6709\u7684\u8fb9\u7f18\uff0c\u800c\u6697\u5316\u4e86\u5176\u5b83\u90e8\u5206\uff0c\u5728\u6211\u4eec\u53ea\u5173\u5fc3\u56fe\u50cf\u7684\u8fb9\u89d2\u7684\u65f6\u5019\u662f\u975e\u5e38\u6709\u7528\u7684\u3002 \u4f60\u53ef\u80fd\u4e0d\u4f1a\u5947\u602a\uff0c\u50cf\u662fPhotoshop\u8fd9\u6837\u7684\u56fe\u50cf\u4fee\u6539\u5de5\u5177/\u6ee4\u955c\u4f7f\u7528\u7684\u4e5f\u662f\u8fd9\u6837\u7684\u6838\u3002\u56e0\u4e3a\u663e\u5361\u5904\u7406\u7247\u6bb5\u7684\u65f6\u5019\u6709\u7740\u6781\u5f3a\u7684\u5e76\u884c\u5904\u7406\u80fd\u529b\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u8f7b\u677e\u5730\u5728\u5b9e\u65f6\u7684\u60c5\u51b5\u4e0b\u9010\u50cf\u7d20\u5bf9\u56fe\u50cf\u8fdb\u884c\u5904\u7406\u3002\u6240\u4ee5\u56fe\u50cf\u7f16\u8f91\u5de5\u5177\u5728\u56fe\u50cf\u5904\u7406\u7684\u65f6\u5019\u4f1a\u66f4\u503e\u5411\u4e8e\u4f7f\u7528\u663e\u5361\u3002 \u8bd1\u6ce8 \u6ce8\u610f\uff0c\u6838\u5728\u5bf9\u5c4f\u5e55\u7eb9\u7406\u7684\u8fb9\u7f18\u8fdb\u884c\u91c7\u6837\u7684\u65f6\u5019\uff0c\u7531\u4e8e\u8fd8\u4f1a\u5bf9\u4e2d\u5fc3\u50cf\u7d20\u5468\u56f4\u76848\u4e2a\u50cf\u7d20\u8fdb\u884c\u91c7\u6837\uff0c\u5176\u5b9e\u4f1a\u53d6\u5230\u7eb9\u7406\u4e4b\u5916\u7684\u50cf\u7d20\u3002\u7531\u4e8e\u73af\u7ed5\u65b9\u5f0f\u9ed8\u8ba4\u662f GL_REPEAT \uff0c\u6240\u4ee5\u5728\u6ca1\u6709\u8bbe\u7f6e\u7684\u60c5\u51b5\u4e0b\u53d6\u5230\u7684\u662f\u5c4f\u5e55\u53e6\u4e00\u8fb9\u7684\u50cf\u7d20\uff0c\u800c\u53e6\u4e00\u8fb9\u7684\u50cf\u7d20\u672c\u4e0d\u5e94\u8be5\u5bf9\u4e2d\u5fc3\u50cf\u7d20\u4ea7\u751f\u5f71\u54cd\uff0c\u8fd9\u5c31\u53ef\u80fd\u4f1a\u5728\u5c4f\u5e55\u8fb9\u7f18\u4ea7\u751f\u5f88\u5947\u602a\u7684\u6761\u7eb9\u3002\u4e3a\u4e86\u6d88\u9664\u8fd9\u4e00\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5c4f\u5e55\u7eb9\u7406\u7684\u73af\u7ed5\u65b9\u5f0f\u90fd\u8bbe\u7f6e\u4e3a GL_CLAMP_TO_EDGE \u3002\u8fd9\u6837\u5b50\u5728\u53d6\u5230\u7eb9\u7406\u5916\u7684\u50cf\u7d20\u65f6\uff0c\u5c31\u80fd\u591f\u91cd\u590d\u8fb9\u7f18\u7684\u50cf\u7d20\u6765\u66f4\u7cbe\u786e\u5730\u4f30\u8ba1\u6700\u7ec8\u7684\u503c\u4e86\u3002","title":"\u8fb9\u7f18\u68c0\u6d4b"},{"location":"04%20Advanced%20OpenGL/05%20Framebuffers/#_12","text":"\u4f60\u80fd\u4f7f\u7528framebuffers\u521b\u5efa\u4e00\u4e2a\u540e\u89c6\u955c\u5417?\u4e3a\u6b64\uff0c\u4f60\u5fc5\u987b\u7ed8\u5236\u4e24\u6b21\u573a\u666f:\u4e00\u6b21\u5c06\u76f8\u673a\u65cb\u8f6c180\u5ea6\uff0c\u53e6\u4e00\u6b21\u5c06\u76f8\u673a\u6b63\u5e38\u65cb\u8f6c\u3002\u8bd5\u7740\u5728\u5c4f\u5e55\u9876\u90e8\u521b\u5efa\u4e00\u4e2a\u5c0f\u7684\u56db\u8fb9\u5f62\u6765\u5e94\u7528\u955c\u50cf\u7eb9\u7406\uff0c\u5c31\u50cf \u8fd9\u6837 ; \u89e3\u51b3\u65b9\u6848 \u3002 \u6446\u5f04\u5185\u6838\u503c\u5e76\u521b\u5efa\u60a8\u81ea\u5df1\u611f\u5174\u8da3\u7684\u540e\u5904\u7406\u6548\u679c\u3002\u5c1d\u8bd5\u5728\u4e92\u8054\u7f51\u4e0a\u641c\u7d22\u5176\u4ed6\u6709\u8da3\u7684\u5185\u6838\u3002","title":"\u7ec3\u4e60"},{"location":"04%20Advanced%20OpenGL/06%20Cubemaps/","text":"\u7acb\u65b9\u4f53\u8d34\u56fe \u539f\u6587 Cubemaps \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u6211\u4eec\u5df2\u7ecf\u4f7f\u75282D\u7eb9\u7406\u5f88\u957f\u65f6\u95f4\u4e86\uff0c\u4f46\u9664\u6b64\u4e4b\u5916\u4ecd\u6709\u66f4\u591a\u7684\u7eb9\u7406\u7c7b\u578b\u7b49\u7740\u6211\u4eec\u63a2\u7d22\u3002\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u7684\u662f\u5c06\u591a\u4e2a\u7eb9\u7406\u7ec4\u5408\u8d77\u6765\u6620\u5c04\u5230\u4e00\u5f20\u7eb9\u7406\u4e0a\u7684\u4e00\u79cd\u7eb9\u7406\u7c7b\u578b\uff1a \u7acb\u65b9\u4f53\u8d34\u56fe (Cube Map)\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u7acb\u65b9\u4f53\u8d34\u56fe\u5c31\u662f\u4e00\u4e2a\u5305\u542b\u4e866\u4e2a2D\u7eb9\u7406\u7684\u7eb9\u7406\uff0c\u6bcf\u4e2a2D\u7eb9\u7406\u90fd\u7ec4\u6210\u4e86\u7acb\u65b9\u4f53\u7684\u4e00\u4e2a\u9762\uff1a\u4e00\u4e2a\u6709\u7eb9\u7406\u7684\u7acb\u65b9\u4f53\u3002\u4f60\u53ef\u80fd\u4f1a\u5947\u602a\uff0c\u8fd9\u6837\u4e00\u4e2a\u7acb\u65b9\u4f53\u6709\u4ec0\u4e48\u7528\u9014\u5462\uff1f\u4e3a\u4ec0\u4e48\u8981\u628a6\u5f20\u7eb9\u7406\u5408\u5e76\u5230\u4e00\u5f20\u7eb9\u7406\u4e2d\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u4f7f\u75286\u4e2a\u5355\u72ec\u7684\u7eb9\u7406\u5462\uff1f\u7acb\u65b9\u4f53\u8d34\u56fe\u6709\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u7279\u6027\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u65b9\u5411\u5411\u91cf\u6765\u8fdb\u884c\u7d22\u5f15/\u91c7\u6837\u3002\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a1x1x1\u7684\u5355\u4f4d\u7acb\u65b9\u4f53\uff0c\u65b9\u5411\u5411\u91cf\u7684\u539f\u70b9\u4f4d\u4e8e\u5b83\u7684\u4e2d\u5fc3\u3002\u4f7f\u7528\u4e00\u4e2a\u6a58\u9ec4\u8272\u7684\u65b9\u5411\u5411\u91cf\u6765\u4ece\u7acb\u65b9\u4f53\u8d34\u56fe\u4e0a\u91c7\u6837\u4e00\u4e2a\u7eb9\u7406\u503c\u4f1a\u50cf\u662f\u8fd9\u6837\uff1a Important \u65b9\u5411\u5411\u91cf\u7684\u5927\u5c0f\u5e76\u4e0d\u91cd\u8981\uff0c\u53ea\u8981\u63d0\u4f9b\u4e86\u65b9\u5411\uff0cOpenGL\u5c31\u4f1a\u83b7\u53d6\u65b9\u5411\u5411\u91cf\uff08\u6700\u7ec8\uff09\u6240\u51fb\u4e2d\u7684\u7eb9\u7d20\uff0c\u5e76\u8fd4\u56de\u5bf9\u5e94\u7684\u91c7\u6837\u7eb9\u7406\u503c\u3002 \u5982\u679c\u6211\u4eec\u5047\u8bbe\u5c06\u8fd9\u6837\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u5e94\u7528\u5230\u4e00\u4e2a\u7acb\u65b9\u4f53\u4e0a\uff0c\u91c7\u6837\u7acb\u65b9\u4f53\u8d34\u56fe\u6240\u4f7f\u7528\u7684\u65b9\u5411\u5411\u91cf\u5c06\u548c\u7acb\u65b9\u4f53\uff08\u63d2\u503c\u7684\uff09\u9876\u70b9\u4f4d\u7f6e\u975e\u5e38\u76f8\u50cf\u3002\u8fd9\u6837\u5b50\uff0c\u53ea\u8981\u7acb\u65b9\u4f53\u7684\u4e2d\u5fc3\u4f4d\u4e8e\u539f\u70b9\uff0c\u6211\u4eec\u5c31\u80fd\u4f7f\u7528\u7acb\u65b9\u4f53\u7684\u5b9e\u9645\u4f4d\u7f6e\u5411\u91cf\u6765\u5bf9\u7acb\u65b9\u4f53\u8d34\u56fe\u8fdb\u884c\u91c7\u6837\u4e86\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u9876\u70b9\u7684\u7eb9\u7406\u5750\u6807\u5f53\u505a\u662f\u7acb\u65b9\u4f53\u7684\u9876\u70b9\u4f4d\u7f6e\u3002\u6700\u7ec8\u5f97\u5230\u7684\u7ed3\u679c\u5c31\u662f\u53ef\u4ee5\u8bbf\u95ee\u7acb\u65b9\u4f53\u8d34\u56fe\u4e0a\u6b63\u786e \u9762 (Face)\u7eb9\u7406\u7684\u4e00\u4e2a\u7eb9\u7406\u5750\u6807\u3002 \u521b\u5efa\u7acb\u65b9\u4f53\u8d34\u56fe \u7acb\u65b9\u4f53\u8d34\u56fe\u662f\u548c\u5176\u5b83\u7eb9\u7406\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u5982\u679c\u60f3\u521b\u5efa\u4e00\u4e2a\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u8bdd\uff0c\u6211\u4eec\u9700\u8981\u751f\u6210\u4e00\u4e2a\u7eb9\u7406\uff0c\u5e76\u5c06\u5176\u7ed1\u5b9a\u5230\u7eb9\u7406\u76ee\u6807\u4e0a\uff0c\u4e4b\u540e\u518d\u505a\u5176\u5b83\u7684\u7eb9\u7406\u64cd\u4f5c\u3002\u8fd9\u6b21\u8981\u7ed1\u5b9a\u5230 GL_TEXTURE_CUBE_MAP \uff1a unsigned int textureID; glGenTextures(1, &textureID); glBindTexture(GL_TEXTURE_CUBE_MAP, textureID); \u56e0\u4e3a\u7acb\u65b9\u4f53\u8d34\u56fe\u5305\u542b\u67096\u4e2a\u7eb9\u7406\uff0c\u6bcf\u4e2a\u9762\u4e00\u4e2a\uff0c\u6211\u4eec\u9700\u8981\u8c03\u7528 glTexImage2D \u51fd\u65706\u6b21\uff0c\u53c2\u6570\u548c\u4e4b\u524d\u6559\u7a0b\u4e2d\u5f88\u7c7b\u4f3c\u3002\u4f46\u8fd9\u4e00\u6b21\u6211\u4eec\u5c06\u7eb9\u7406\u76ee\u6807( target )\u53c2\u6570\u8bbe\u7f6e\u4e3a\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u4e00\u4e2a\u7279\u5b9a\u7684\u9762\uff0c\u544a\u8bc9OpenGL\u6211\u4eec\u5728\u5bf9\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u54ea\u4e00\u4e2a\u9762\u521b\u5efa\u7eb9\u7406\u3002\u8fd9\u5c31\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u5bf9\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6bcf\u4e00\u4e2a\u9762\u90fd\u8c03\u7528\u4e00\u6b21 glTexImage2D \u3002 \u7531\u4e8e\u6211\u4eec\u67096\u4e2a\u9762\uff0cOpenGL\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e866\u4e2a\u7279\u6b8a\u7684\u7eb9\u7406\u76ee\u6807\uff0c\u4e13\u95e8\u5bf9\u5e94\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u4e00\u4e2a\u9762\u3002 \u7eb9\u7406\u76ee\u6807 \u65b9\u4f4d GL_TEXTURE_CUBE_MAP_POSITIVE_X \u53f3 GL_TEXTURE_CUBE_MAP_NEGATIVE_X \u5de6 GL_TEXTURE_CUBE_MAP_POSITIVE_Y \u4e0a GL_TEXTURE_CUBE_MAP_NEGATIVE_Y \u4e0b GL_TEXTURE_CUBE_MAP_POSITIVE_Z \u540e GL_TEXTURE_CUBE_MAP_NEGATIVE_Z \u524d \u548cOpenGL\u7684\u5f88\u591a\u679a\u4e3e(Enum)\u4e00\u6837\uff0c\u5b83\u4eec\u80cc\u540e\u7684 int \u503c\u662f\u7ebf\u6027\u9012\u589e\u7684\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u7eb9\u7406\u4f4d\u7f6e\u7684\u6570\u7ec4\u6216\u8005vector\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece GL_TEXTURE_CUBE_MAP_POSITIVE_X \u5f00\u59cb\u904d\u5386\u5b83\u4eec\uff0c\u5728\u6bcf\u4e2a\u8fed\u4ee3\u4e2d\u5bf9\u679a\u4e3e\u503c\u52a01\uff0c\u904d\u5386\u4e86\u6574\u4e2a\u7eb9\u7406\u76ee\u6807\uff1a int width, height, nrChannels; unsigned char *data; for(unsigned int i = 0; i < textures_faces.size(); i++) { data = stbi_load(textures_faces[i].c_str(), &width, &height, &nrChannels, 0); glTexImage2D( GL_TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, data ); } \u8fd9\u91cc\u6211\u4eec\u6709\u4e00\u4e2a\u53eb\u505a textures_faces \u7684 vector \uff0c\u5b83\u5305\u542b\u4e86\u7acb\u65b9\u4f53\u8d34\u56fe\u6240\u9700\u7684\u6240\u6709\u7eb9\u7406\u8def\u5f84\uff0c\u5e76\u4ee5\u8868\u4e2d\u7684\u987a\u5e8f\u6392\u5217\u3002\u8fd9\u5c06\u4e3a\u5f53\u524d\u7ed1\u5b9a\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u4e2d\u7684\u6bcf\u4e2a\u9762\u751f\u6210\u4e00\u4e2a\u7eb9\u7406\u3002 \u56e0\u4e3a\u7acb\u65b9\u4f53\u8d34\u56fe\u548c\u5176\u5b83\u7eb9\u7406\u6ca1\u4ec0\u4e48\u4e0d\u540c\uff0c\u6211\u4eec\u4e5f\u9700\u8981\u8bbe\u5b9a\u5b83\u7684\u73af\u7ed5\u548c\u8fc7\u6ee4\u65b9\u5f0f\uff1a glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MAG_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MIN_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_R, GL_CLAMP_TO_EDGE); \u4e0d\u8981\u88ab GL_TEXTURE_WRAP_R \u5413\u5230\uff0c\u5b83\u4ec5\u4ec5\u662f\u4e3a\u7eb9\u7406\u7684 R \u5750\u6807\u8bbe\u7f6e\u4e86\u73af\u7ed5\u65b9\u5f0f\uff0c\u5b83\u5bf9\u5e94\u7684\u662f\u7eb9\u7406\u7684\u7b2c\u4e09\u4e2a\u7ef4\u5ea6\uff08\u548c\u4f4d\u7f6e\u7684 z \u4e00\u6837\uff09\u3002\u6211\u4eec\u5c06\u73af\u7ed5\u65b9\u5f0f\u8bbe\u7f6e\u4e3a GL_CLAMP_TO_EDGE \uff0c\u8fd9\u662f\u56e0\u4e3a\u6b63\u597d\u5904\u4e8e\u4e24\u4e2a\u9762\u4e4b\u95f4\u7684\u7eb9\u7406\u5750\u6807\u53ef\u80fd\u4e0d\u80fd\u51fb\u4e2d\u4e00\u4e2a\u9762\uff08\u7531\u4e8e\u4e00\u4e9b\u786c\u4ef6\u9650\u5236\uff09\uff0c\u6240\u4ee5\u901a\u8fc7\u4f7f\u7528 GL_CLAMP_TO_EDGE \uff0cOpenGL\u5c06\u5728\u6211\u4eec\u5bf9\u4e24\u4e2a\u9762\u4e4b\u95f4\u91c7\u6837\u7684\u65f6\u5019\uff0c\u6c38\u8fdc\u8fd4\u56de\u5b83\u4eec\u7684\u8fb9\u754c\u503c\u3002 \u5728\u7ed8\u5236\u4f7f\u7528\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u7269\u4f53\u4e4b\u524d\uff0c\u6211\u4eec\u8981\u5148\u6fc0\u6d3b\u5bf9\u5e94\u7684\u7eb9\u7406\u5355\u5143\uff0c\u5e76\u7ed1\u5b9a\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u8fd9\u548c\u666e\u901a\u76842D\u7eb9\u7406\u6ca1\u4ec0\u4e48\u533a\u522b\u3002 \u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684\u91c7\u6837\u5668\uff0c samplerCube \uff0c\u6211\u4eec\u5c06\u4f7f\u7528 texture \u51fd\u6570\u4f7f\u7528\u5b83\u8fdb\u884c\u91c7\u6837\uff0c\u4f46\u8fd9\u6b21\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a vec3 \u7684\u65b9\u5411\u5411\u91cf\u800c\u4e0d\u662f vec2 \u3002\u4f7f\u7528\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u7247\u6bb5\u7740\u8272\u5668\u4f1a\u50cf\u662f\u8fd9\u6837\u7684\uff1a in vec3 textureDir; // \u4ee3\u88683D\u7eb9\u7406\u5750\u6807\u7684\u65b9\u5411\u5411\u91cf uniform samplerCube cubemap; // \u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u7eb9\u7406\u91c7\u6837\u5668 void main() { FragColor = texture(cubemap, textureDir); } \u770b\u8d77\u6765\u5f88\u68d2\uff0c\u4f46\u4e3a\u4ec0\u4e48\u8981\u7528\u5b83\u5462\uff1f\u6070\u5de7\u6709\u4e00\u4e9b\u5f88\u6709\u610f\u601d\u7684\u6280\u672f\uff0c\u4f7f\u7528\u7acb\u65b9\u4f53\u8d34\u56fe\u6765\u5b9e\u73b0\u7684\u8bdd\u4f1a\u7b80\u5355\u591a\u4e86\u3002\u5176\u4e2d\u4e00\u4e2a\u6280\u672f\u5c31\u662f\u521b\u5efa\u4e00\u4e2a \u5929\u7a7a\u76d2 (Skybox)\u3002 \u5929\u7a7a\u76d2 \u5929\u7a7a\u76d2\u662f\u4e00\u4e2a\u5305\u542b\u4e86\u6574\u4e2a\u573a\u666f\u7684\uff08\u5927\uff09\u7acb\u65b9\u4f53\uff0c\u5b83\u5305\u542b\u5468\u56f4\u73af\u5883\u76846\u4e2a\u56fe\u50cf\uff0c\u8ba9\u73a9\u5bb6\u4ee5\u4e3a\u4ed6\u5904\u5728\u4e00\u4e2a\u6bd4\u5b9e\u9645\u5927\u5f97\u591a\u7684\u73af\u5883\u5f53\u4e2d\u3002\u6e38\u620f\u4e2d\u4f7f\u7528\u5929\u7a7a\u76d2\u7684\u4f8b\u5b50\u6709\u7fa4\u5c71\u3001\u767d\u4e91\u6216\u661f\u7a7a\u3002\u4e0b\u9762\u8fd9\u5f20\u622a\u56fe\u4e2d\u5c55\u793a\u7684\u662f\u661f\u7a7a\u7684\u5929\u7a7a\u76d2\uff0c\u5b83\u6765\u81ea\u4e8e\u300e\u4e0a\u53e4\u5377\u8f743\u300f\uff1a \u4f60\u53ef\u80fd\u73b0\u5728\u5df2\u7ecf\u731c\u5230\u4e86\uff0c\u7acb\u65b9\u4f53\u8d34\u56fe\u80fd\u5b8c\u7f8e\u6ee1\u8db3\u5929\u7a7a\u76d2\u7684\u9700\u6c42\uff1a\u6211\u4eec\u6709\u4e00\u4e2a6\u9762\u7684\u7acb\u65b9\u4f53\uff0c\u6bcf\u4e2a\u9762\u90fd\u9700\u8981\u4e00\u4e2a\u7eb9\u7406\u3002\u5728\u4e0a\u9762\u7684\u56fe\u7247\u4e2d\uff0c\u4ed6\u4eec\u4f7f\u7528\u4e86\u591c\u7a7a\u7684\u51e0\u5f20\u56fe\u7247\uff0c\u8ba9\u73a9\u5bb6\u4ea7\u751f\u5176\u4f4d\u4e8e\u5e7f\u88a4\u5b87\u5b99\u4e2d\u7684\u9519\u89c9\uff0c\u4f46\u5b9e\u9645\u4e0a\u4ed6\u53ea\u662f\u5728\u4e00\u4e2a\u5c0f\u5c0f\u7684\u76d2\u5b50\u5f53\u4e2d\u3002 \u4f60\u53ef\u4ee5\u5728\u7f51\u4e0a\u627e\u5230\u5f88\u591a\u50cf\u8fd9\u6837\u7684\u5929\u7a7a\u76d2\u8d44\u6e90\u3002\u6bd4\u5982\u8bf4\u8fd9\u4e2a \u7f51\u7ad9 \u5c31\u63d0\u4f9b\u4e86\u5f88\u591a\u5929\u7a7a\u76d2\u3002\u5929\u7a7a\u76d2\u56fe\u50cf\u901a\u5e38\u6709\u4ee5\u4e0b\u7684\u5f62\u5f0f\uff1a \u5982\u679c\u4f60\u5c06\u8fd9\u516d\u4e2a\u9762\u6298\u6210\u4e00\u4e2a\u7acb\u65b9\u4f53\uff0c\u4f60\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2a\u5b8c\u5168\u8d34\u56fe\u7684\u7acb\u65b9\u4f53\uff0c\u6a21\u62df\u4e00\u4e2a\u5de8\u5927\u7684\u573a\u666f\u3002\u4e00\u4e9b\u8d44\u6e90\u53ef\u80fd\u4f1a\u63d0\u4f9b\u4e86\u8fd9\u6837\u683c\u5f0f\u7684\u5929\u7a7a\u76d2\uff0c\u4f60\u5fc5\u987b\u624b\u52a8\u63d0\u53d6\u516d\u4e2a\u9762\u7684\u56fe\u50cf\uff0c\u4f46\u5728\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u5b83\u4eec\u90fd\u662f6\u5f20\u5355\u72ec\u7684\u7eb9\u7406\u56fe\u50cf\u3002 \u4e4b\u540e\u6211\u4eec\u5c06\u5728\u573a\u666f\u4e2d\u4f7f\u7528\u8fd9\u4e2a\uff08\u9ad8\u8d28\u91cf\u7684\uff09\u5929\u7a7a\u76d2\uff0c\u5b83\u53ef\u4ee5\u5728 \u8fd9\u91cc \u4e0b\u8f7d\u5230\u3002 \u52a0\u8f7d\u5929\u7a7a\u76d2 \u56e0\u4e3a\u5929\u7a7a\u76d2\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u52a0\u8f7d\u5929\u7a7a\u76d2\u548c\u4e4b\u524d\u52a0\u8f7d\u7acb\u65b9\u4f53\u8d34\u56fe\u65f6\u5e76\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\u4e3a\u4e86\u52a0\u8f7d\u5929\u7a7a\u76d2\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e0b\u9762\u7684\u51fd\u6570\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a\u5305\u542b6\u4e2a\u7eb9\u7406\u8def\u5f84\u7684 vector \uff1a unsigned int loadCubemap(vector<std::string> faces) { unsigned int textureID; glGenTextures(1, &textureID); glBindTexture(GL_TEXTURE_CUBE_MAP, textureID); int width, height, nrChannels; for (unsigned int i = 0; i < faces.size(); i++) { unsigned char *data = stbi_load(faces[i].c_str(), &width, &height, &nrChannels, 0); if (data) { glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, data ); stbi_image_free(data); } else { std::cout << \"Cubemap texture failed to load at path: \" << faces[i] << std::endl; stbi_image_free(data); } } glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MIN_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MAG_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_R, GL_CLAMP_TO_EDGE); return textureID; } \u51fd\u6570\u672c\u8eab\u5e94\u8be5\u5f88\u719f\u6089\u4e86\u3002\u5b83\u57fa\u672c\u5c31\u662f\u4e0a\u4e00\u90e8\u5206\u4e2d\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u4ee3\u7801\uff0c\u53ea\u4e0d\u8fc7\u5408\u5e76\u5230\u4e86\u4e00\u4e2a\u4fbf\u4e8e\u7ba1\u7406\u7684\u51fd\u6570\u4e2d\u3002 \u4e4b\u540e\uff0c\u5728\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5408\u9002\u7684\u7eb9\u7406\u8def\u5f84\u6309\u7167\u7acb\u65b9\u4f53\u8d34\u56fe\u679a\u4e3e\u6307\u5b9a\u7684\u987a\u5e8f\u52a0\u8f7d\u5230\u4e00\u4e2avector\u4e2d\u3002 vector<std::string> faces { \"right.jpg\", \"left.jpg\", \"top.jpg\", \"bottom.jpg\", \"front.jpg\", \"back.jpg\" }; unsigned int cubemapTexture = loadCubemap(faces); \u73b0\u5728\u6211\u4eec\u5c31\u5c06\u8fd9\u4e2a\u5929\u7a7a\u76d2\u52a0\u8f7d\u4e3a\u4e00\u4e2a\u7acb\u65b9\u4f53\u8d34\u56fe\u4e86\uff0c\u5b83\u7684id\u662f cubemapTexture \u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u7ed1\u5b9a\u5230\u4e00\u4e2a\u7acb\u65b9\u4f53\u4e2d\uff0c\u66ff\u6362\u6389\u7528\u4e86\u5f88\u957f\u65f6\u95f4\u7684\u96be\u770b\u7684\u7eaf\u8272\u80cc\u666f\u3002 \u663e\u793a\u5929\u7a7a\u76d2 \u7531\u4e8e\u5929\u7a7a\u76d2\u662f\u7ed8\u5236\u5728\u4e00\u4e2a\u7acb\u65b9\u4f53\u4e0a\u7684\uff0c\u548c\u5176\u5b83\u7269\u4f53\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u53e6\u4e00\u4e2aVAO\u3001VBO\u4ee5\u53ca\u65b0\u7684\u4e00\u7ec4\u9876\u70b9\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5b83\u7684\u9876\u70b9\u6570\u636e\u3002 \u7528\u4e8e\u8d34\u56fe3D\u7acb\u65b9\u4f53\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u53ef\u4ee5\u4f7f\u7528\u7acb\u65b9\u4f53\u7684\u4f4d\u7f6e\u4f5c\u4e3a\u7eb9\u7406\u5750\u6807\u6765\u91c7\u6837\u3002\u5f53\u7acb\u65b9\u4f53\u5904\u4e8e\u539f\u70b9(0, 0, 0)\u65f6\uff0c\u5b83\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u5411\u91cf\u90fd\u662f\u4ece\u539f\u70b9\u51fa\u53d1\u7684\u65b9\u5411\u5411\u91cf\u3002\u8fd9\u4e2a\u65b9\u5411\u5411\u91cf\u6b63\u662f\u83b7\u53d6\u7acb\u65b9\u4f53\u4e0a\u7279\u5b9a\u4f4d\u7f6e\u7684\u7eb9\u7406\u503c\u6240\u9700\u8981\u7684\u3002\u6b63\u662f\u56e0\u4e3a\u8fd9\u4e2a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u63d0\u4f9b\u4f4d\u7f6e\u5411\u91cf\u800c\u4e0d\u7528\u7eb9\u7406\u5750\u6807\u4e86\u3002 \u8981\u6e32\u67d3\u5929\u7a7a\u76d2\u7684\u8bdd\uff0c\u6211\u4eec\u9700\u8981\u4e00\u7ec4\u65b0\u7684\u7740\u8272\u5668\uff0c\u5b83\u4eec\u90fd\u4e0d\u662f\u5f88\u590d\u6742\u3002\u56e0\u4e3a\u6211\u4eec\u53ea\u6709\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\uff0c\u9876\u70b9\u7740\u8272\u5668\u975e\u5e38\u7b80\u5355\uff1a #version 330 core layout (location = 0) in vec3 aPos; out vec3 TexCoords; uniform mat4 projection; uniform mat4 view; void main() { TexCoords = aPos; gl_Position = projection * view * vec4(aPos, 1.0); } \u6ce8\u610f\uff0c\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5f88\u6709\u610f\u601d\u7684\u90e8\u5206\u662f\uff0c\u6211\u4eec\u5c06\u8f93\u5165\u7684\u4f4d\u7f6e\u5411\u91cf\u4f5c\u4e3a\u8f93\u51fa\u7ed9\u7247\u6bb5\u7740\u8272\u5668\u7684\u7eb9\u7406\u5750\u6807\u3002\u7247\u6bb5\u7740\u8272\u5668\u4f1a\u5c06\u5b83\u4f5c\u4e3a\u8f93\u5165\u6765\u91c7\u6837 samplerCube \uff1a #version 330 core out vec4 FragColor; in vec3 TexCoords; uniform samplerCube skybox; void main() { FragColor = texture(skybox, TexCoords); } \u7247\u6bb5\u7740\u8272\u5668\u975e\u5e38\u76f4\u89c2\u3002\u6211\u4eec\u5c06\u9876\u70b9\u5c5e\u6027\u7684\u4f4d\u7f6e\u5411\u91cf\u4f5c\u4e3a\u7eb9\u7406\u7684\u65b9\u5411\u5411\u91cf\uff0c\u5e76\u4f7f\u7528\u5b83\u4ece\u7acb\u65b9\u4f53\u8d34\u56fe\u4e2d\u91c7\u6837\u7eb9\u7406\u503c\u3002 \u6709\u4e86\u7acb\u65b9\u4f53\u8d34\u56fe\u7eb9\u7406\uff0c\u6e32\u67d3\u5929\u7a7a\u76d2\u73b0\u5728\u5c31\u975e\u5e38\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ed1\u5b9a\u7acb\u65b9\u4f53\u8d34\u56fe\u7eb9\u7406\uff0c skybox \u91c7\u6837\u5668\u5c31\u4f1a\u81ea\u52a8\u586b\u5145\u4e0a\u5929\u7a7a\u76d2\u7acb\u65b9\u4f53\u8d34\u56fe\u4e86\u3002\u7ed8\u5236\u5929\u7a7a\u76d2\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5b83\u53d8\u4e3a\u573a\u666f\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6e32\u67d3\u7684\u7269\u4f53\uff0c\u5e76\u4e14\u7981\u7528\u6df1\u5ea6\u5199\u5165\u3002\u8fd9\u6837\u5b50\u5929\u7a7a\u76d2\u5c31\u4f1a\u6c38\u8fdc\u88ab\u7ed8\u5236\u5728\u5176\u5b83\u7269\u4f53\u7684\u80cc\u540e\u4e86\u3002 glDepthMask(GL_FALSE); skyboxShader.use(); // ... \u8bbe\u7f6e\u89c2\u5bdf\u548c\u6295\u5f71\u77e9\u9635 glBindVertexArray(skyboxVAO); glBindTexture(GL_TEXTURE_CUBE_MAP, cubemapTexture); glDrawArrays(GL_TRIANGLES, 0, 36); glDepthMask(GL_TRUE); // ... \u7ed8\u5236\u5269\u4e0b\u7684\u573a\u666f \u5982\u679c\u4f60\u8fd0\u884c\u4e00\u4e0b\u7684\u8bdd\u4f60\u5c31\u4f1a\u53d1\u73b0\u51fa\u73b0\u4e86\u4e00\u4e9b\u95ee\u9898\u3002\u6211\u4eec\u5e0c\u671b\u5929\u7a7a\u76d2\u662f\u4ee5\u73a9\u5bb6\u4e3a\u4e2d\u5fc3\u7684\uff0c\u8fd9\u6837\u4e0d\u8bba\u73a9\u5bb6\u79fb\u52a8\u4e86\u591a\u8fdc\uff0c\u5929\u7a7a\u76d2\u90fd\u4e0d\u4f1a\u53d8\u8fd1\uff0c\u8ba9\u73a9\u5bb6\u4ea7\u751f\u5468\u56f4\u73af\u5883\u975e\u5e38\u5927\u7684\u5370\u8c61\u3002\u7136\u800c\uff0c\u5f53\u524d\u7684\u89c2\u5bdf\u77e9\u9635\u4f1a\u65cb\u8f6c\u3001\u7f29\u653e\u548c\u4f4d\u79fb\u6765\u53d8\u6362\u5929\u7a7a\u76d2\u7684\u6240\u6709\u4f4d\u7f6e\uff0c\u6240\u4ee5\u5f53\u73a9\u5bb6\u79fb\u52a8\u7684\u65f6\u5019\uff0c\u7acb\u65b9\u4f53\u8d34\u56fe\u4e5f\u4f1a\u79fb\u52a8\uff01\u6211\u4eec\u5e0c\u671b\u79fb\u9664\u89c2\u5bdf\u77e9\u9635\u4e2d\u7684\u4f4d\u79fb\u90e8\u5206\uff0c\u8ba9\u79fb\u52a8\u4e0d\u4f1a\u5f71\u54cd\u5929\u7a7a\u76d2\u7684\u4f4d\u7f6e\u5411\u91cf\u3002 \u4f60\u53ef\u80fd\u8fd8\u8bb0\u5f97\u5728 \u57fa\u7840\u5149\u7167 \u5c0f\u8282\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u53d64x4\u77e9\u9635\u5de6\u4e0a\u89d2\u76843x3\u77e9\u9635\u6765\u79fb\u9664\u53d8\u6362\u77e9\u9635\u7684\u4f4d\u79fb\u90e8\u5206\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u89c2\u5bdf\u77e9\u9635\u8f6c\u6362\u4e3a3x3\u77e9\u9635\uff08\u79fb\u9664\u4f4d\u79fb\uff09\uff0c\u518d\u5c06\u5176\u8f6c\u6362\u56de4x4\u77e9\u9635\uff0c\u6765\u8fbe\u5230\u7c7b\u4f3c\u7684\u6548\u679c\u3002 glm::mat4 view = glm::mat4(glm::mat3(camera.GetViewMatrix())); \u8fd9\u5c06\u79fb\u9664\u4efb\u4f55\u7684\u4f4d\u79fb\uff0c\u4f46\u4fdd\u7559\u65cb\u8f6c\u53d8\u6362\uff0c\u8ba9\u73a9\u5bb6\u4ecd\u7136\u80fd\u591f\u73af\u987e\u573a\u666f\u3002 \u6709\u4e86\u5929\u7a7a\u76d2\uff0c\u6700\u7ec8\u7684\u6548\u679c\u5c31\u662f\u4e00\u4e2a\u770b\u8d77\u6765\u5de8\u5927\u7684\u573a\u666f\u4e86\u3002\u5982\u679c\u4f60\u5728\u7bb1\u5b50\u5468\u56f4\u8f6c\u4e00\u8f6c\uff0c\u4f60\u5c31\u80fd\u7acb\u523b\u611f\u53d7\u5230\u8ddd\u79bb\u611f\uff0c\u6781\u5927\u5730\u63d0\u5347\u4e86\u573a\u666f\u7684\u771f\u5b9e\u5ea6\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a \u8bd5\u4e00\u8bd5\u4e0d\u540c\u7684\u5929\u7a7a\u76d2\uff0c\u770b\u770b\u5b83\u4eec\u662f\u600e\u6837\u5bf9\u573a\u666f\u7684\u89c2\u611f\u4ea7\u751f\u5de8\u5927\u5f71\u54cd\u7684\u3002 \u4f18\u5316 \u76ee\u524d\u6211\u4eec\u662f\u9996\u5148\u6e32\u67d3\u5929\u7a7a\u76d2\uff0c\u4e4b\u540e\u518d\u6e32\u67d3\u573a\u666f\u4e2d\u7684\u5176\u5b83\u7269\u4f53\u3002\u8fd9\u6837\u5b50\u80fd\u591f\u5de5\u4f5c\uff0c\u4f46\u4e0d\u662f\u975e\u5e38\u9ad8\u6548\u3002\u5982\u679c\u6211\u4eec\u5148\u6e32\u67d3\u5929\u7a7a\u76d2\uff0c\u6211\u4eec\u5c31\u4f1a\u5bf9\u5c4f\u5e55\u4e0a\u7684\u6bcf\u4e00\u4e2a\u50cf\u7d20\u8fd0\u884c\u4e00\u904d\u7247\u6bb5\u7740\u8272\u5668\uff0c\u5373\u4fbf\u53ea\u6709\u4e00\u5c0f\u90e8\u5206\u7684\u5929\u7a7a\u76d2\u6700\u7ec8\u662f\u53ef\u89c1\u7684\u3002\u53ef\u4ee5\u4f7f\u7528 \u63d0\u524d\u6df1\u5ea6\u6d4b\u8bd5 (Early Depth Testing)\u8f7b\u677e\u4e22\u5f03\u6389\u7684\u7247\u6bb5\u80fd\u591f\u8282\u7701\u6211\u4eec\u5f88\u591a\u5b9d\u8d35\u7684\u5e26\u5bbd\u3002 \u6240\u4ee5\uff0c\u6211\u4eec\u5c06\u4f1a\u6700\u540e\u6e32\u67d3\u5929\u7a7a\u76d2\uff0c\u4ee5\u83b7\u5f97\u8f7b\u5fae\u7684\u6027\u80fd\u63d0\u5347\u3002\u8fd9\u6837\u5b50\u7684\u8bdd\uff0c\u6df1\u5ea6\u7f13\u51b2\u5c31\u4f1a\u586b\u5145\u6ee1\u6240\u6709\u7269\u4f53\u7684\u6df1\u5ea6\u503c\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u63d0\u524d\u6df1\u5ea6\u6d4b\u8bd5\u901a\u8fc7\u7684\u5730\u65b9\u6e32\u67d3\u5929\u7a7a\u76d2\u7684\u7247\u6bb5\u5c31\u53ef\u4ee5\u4e86\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u51cf\u5c11\u4e86\u7247\u6bb5\u7740\u8272\u5668\u7684\u8c03\u7528\u3002\u95ee\u9898\u662f\uff0c\u5929\u7a7a\u76d2\u5f88\u53ef\u80fd\u4f1a\u6e32\u67d3\u5728\u6240\u6709\u5176\u4ed6\u5bf9\u8c61\u4e4b\u4e0a\uff0c\u56e0\u4e3a\u5b83\u53ea\u662f\u4e00\u4e2a1x1x1\u7684\u7acb\u65b9\u4f53\uff08\u8bd1\u6ce8\uff1a\u610f\u5473\u7740\u8ddd\u79bb\u6444\u50cf\u673a\u7684\u8ddd\u79bb\u4e5f\u53ea\u67091\uff09\uff0c\u4f1a\u901a\u8fc7\u5927\u90e8\u5206\u7684\u6df1\u5ea6\u6d4b\u8bd5\u3002\u4e0d\u7528\u6df1\u5ea6\u6d4b\u8bd5\u6765\u8fdb\u884c\u6e32\u67d3\u4e0d\u662f\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u4e3a\u5929\u7a7a\u76d2\u5c06\u4f1a\u590d\u5199\u573a\u666f\u4e2d\u7684\u5176\u5b83\u7269\u4f53\u3002\u6211\u4eec\u9700\u8981\u6b3a\u9a97\u6df1\u5ea6\u7f13\u51b2\uff0c\u8ba9\u5b83\u8ba4\u4e3a\u5929\u7a7a\u76d2\u6709\u7740\u6700\u5927\u7684\u6df1\u5ea6\u503c1.0\uff0c\u53ea\u8981\u5b83\u524d\u9762\u6709\u4e00\u4e2a\u7269\u4f53\uff0c\u6df1\u5ea6\u6d4b\u8bd5\u5c31\u4f1a\u5931\u8d25\u3002 \u5728 \u5750\u6807\u7cfb\u7edf \u5c0f\u8282\u4e2d\u6211\u4eec\u8bf4\u8fc7\uff0c \u900f\u89c6\u9664\u6cd5 \u662f\u5728\u9876\u70b9\u7740\u8272\u5668\u8fd0\u884c\u4e4b\u540e\u6267\u884c\u7684\uff0c\u5c06 gl_Position \u7684 xyz \u5750\u6807\u9664\u4ee5w\u5206\u91cf\u3002\u6211\u4eec\u53c8\u4ece \u6df1\u5ea6\u6d4b\u8bd5 \u5c0f\u8282\u4e2d\u77e5\u9053\uff0c\u76f8\u9664\u7ed3\u679c\u7684z\u5206\u91cf\u7b49\u4e8e\u9876\u70b9\u7684\u6df1\u5ea6\u503c\u3002\u4f7f\u7528\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8f93\u51fa\u4f4d\u7f6e\u7684z\u5206\u91cf\u7b49\u4e8e\u5b83\u7684w\u5206\u91cf\uff0c\u8ba9z\u5206\u91cf\u6c38\u8fdc\u7b49\u4e8e1.0\uff0c\u8fd9\u6837\u5b50\u7684\u8bdd\uff0c\u5f53\u900f\u89c6\u9664\u6cd5\u6267\u884c\u4e4b\u540e\uff0cz\u5206\u91cf\u4f1a\u53d8\u4e3a w / w = 1.0 \u3002 void main() { TexCoords = aPos; vec4 pos = projection * view * vec4(aPos, 1.0); gl_Position = pos.xyww; } \u6700\u7ec8\u7684 \u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807 \u5c06\u6c38\u8fdc\u4f1a\u6709\u4e00\u4e2a\u7b49\u4e8e1.0\u7684z\u503c\uff1a\u6700\u5927\u7684\u6df1\u5ea6\u503c\u3002\u7ed3\u679c\u5c31\u662f\u5929\u7a7a\u76d2\u53ea\u4f1a\u5728\u6ca1\u6709\u53ef\u89c1\u7269\u4f53\u7684\u5730\u65b9\u6e32\u67d3\u4e86\uff08\u53ea\u6709\u8fd9\u6837\u624d\u80fd\u901a\u8fc7\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u5176\u5b83\u6240\u6709\u7684\u4e1c\u897f\u90fd\u5728\u5929\u7a7a\u76d2\u524d\u9762\uff09\u3002 \u6211\u4eec\u8fd8\u8981\u6539\u53d8\u4e00\u4e0b\u6df1\u5ea6\u51fd\u6570\uff0c\u5c06\u5b83\u4ece\u9ed8\u8ba4\u7684 GL_LESS \u6539\u4e3a GL_LEQUAL \u3002\u6df1\u5ea6\u7f13\u51b2\u5c06\u4f1a\u586b\u5145\u4e0a\u5929\u7a7a\u76d2\u76841.0\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u5929\u7a7a\u76d2\u5728\u503c\u5c0f\u4e8e\u6216\u7b49\u4e8e\u6df1\u5ea6\u7f13\u51b2\u800c\u4e0d\u662f\u5c0f\u4e8e\u65f6\u901a\u8fc7\u6df1\u5ea6\u6d4b\u8bd5\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u4f18\u5316\u540e\u7684\u6e90\u4ee3\u7801\u3002 \u73af\u5883\u6620\u5c04 \u6211\u4eec\u73b0\u5728\u5c06\u6574\u4e2a\u73af\u5883\u6620\u5c04\u5230\u4e86\u4e00\u4e2a\u7eb9\u7406\u5bf9\u8c61\u4e0a\u4e86\uff0c\u80fd\u5229\u7528\u8fd9\u4e2a\u4fe1\u606f\u7684\u4e0d\u4ec5\u4ec5\u53ea\u6709\u5929\u7a7a\u76d2\u3002\u901a\u8fc7\u4f7f\u7528\u73af\u5883\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u7269\u4f53\u53cd\u5c04\u548c\u6298\u5c04\u7684\u5c5e\u6027\u3002\u8fd9\u6837\u4f7f\u7528\u73af\u5883\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6280\u672f\u53eb\u505a \u73af\u5883\u6620\u5c04 (Environment Mapping)\uff0c\u5176\u4e2d\u6700\u6d41\u884c\u7684\u4e24\u4e2a\u662f \u53cd\u5c04 (Reflection)\u548c \u6298\u5c04 (Refraction)\u3002 \u53cd\u5c04 \u53cd\u5c04\u8fd9\u4e2a\u5c5e\u6027\u8868\u73b0\u4e3a\u7269\u4f53\uff08\u6216\u7269\u4f53\u7684\u4e00\u90e8\u5206\uff09 \u53cd\u5c04 \u5b83\u5468\u56f4\u73af\u5883\uff0c\u5373\u6839\u636e\u89c2\u5bdf\u8005\u7684\u89c6\u89d2\uff0c\u7269\u4f53\u7684\u989c\u8272\u6216\u591a\u6216\u5c11\u7b49\u4e8e\u5b83\u7684\u73af\u5883\u3002\u955c\u5b50\u5c31\u662f\u4e00\u4e2a\u53cd\u5c04\u6027\u7269\u4f53\uff1a\u5b83\u4f1a\u6839\u636e\u89c2\u5bdf\u8005\u7684\u89c6\u89d2\u53cd\u5c04\u5b83\u5468\u56f4\u7684\u73af\u5883\u3002 \u53cd\u5c04\u7684\u539f\u7406\u5e76\u4e0d\u96be\u3002\u4e0b\u9762\u8fd9\u5f20\u56fe\u5c55\u793a\u4e86\u6211\u4eec\u5982\u4f55\u8ba1\u7b97\u53cd\u5c04\u5411\u91cf\uff0c\u5e76\u5982\u4f55\u4f7f\u7528\u8fd9\u4e2a\u5411\u91cf\u6765\u4ece\u7acb\u65b9\u4f53\u8d34\u56fe\u4e2d\u91c7\u6837\uff1a \u6211\u4eec\u6839\u636e\u89c2\u5bdf\u65b9\u5411\u5411\u91cf \\color{gray}{\\bar{I}} \u548c\u7269\u4f53\u7684\u6cd5\u5411\u91cf \\color{red}{\\bar{N}} \uff0c\u6765\u8ba1\u7b97\u53cd\u5c04\u5411\u91cf \\color{green}{\\bar{R}} \u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528GLSL\u5185\u5efa\u7684 reflect \u51fd\u6570\u6765\u8ba1\u7b97\u8fd9\u4e2a\u53cd\u5c04\u5411\u91cf\u3002\u6700\u7ec8\u7684 \\color{green}{\\bar{R}} \u5411\u91cf\u5c06\u4f1a\u4f5c\u4e3a\u7d22\u5f15/\u91c7\u6837\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u65b9\u5411\u5411\u91cf\uff0c\u8fd4\u56de\u73af\u5883\u7684\u989c\u8272\u503c\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u662f\u7269\u4f53\u770b\u8d77\u6765\u53cd\u5c04\u4e86\u5929\u7a7a\u76d2\u3002 \u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u5728\u573a\u666f\u4e2d\u914d\u7f6e\u597d\u5929\u7a7a\u76d2\u4e86\uff0c\u521b\u5efa\u53cd\u5c04\u6548\u679c\u5e76\u4e0d\u4f1a\u5f88\u96be\u3002\u6211\u4eec\u5c06\u4f1a\u6539\u53d8\u7bb1\u5b50\u7684\u7247\u6bb5\u7740\u8272\u5668\uff0c\u8ba9\u7bb1\u5b50\u6709\u53cd\u5c04\u6027\uff1a #version 330 core out vec4 FragColor; in vec3 Normal; in vec3 Position; uniform vec3 cameraPos; uniform samplerCube skybox; void main() { vec3 I = normalize(Position - cameraPos); vec3 R = reflect(I, normalize(Normal)); FragColor = vec4(texture(skybox, R).rgb, 1.0); } \u6211\u4eec\u5148\u8ba1\u7b97\u4e86\u89c2\u5bdf/\u6444\u50cf\u673a\u65b9\u5411\u5411\u91cf I \uff0c\u5e76\u4f7f\u7528\u5b83\u6765\u8ba1\u7b97\u53cd\u5c04\u5411\u91cf R \uff0c\u4e4b\u540e\u6211\u4eec\u5c06\u4f7f\u7528 R \u6765\u4ece\u5929\u7a7a\u76d2\u7acb\u65b9\u4f53\u8d34\u56fe\u4e2d\u91c7\u6837\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u73b0\u5728\u53c8\u6709\u4e86\u7247\u6bb5\u7684\u63d2\u503c Normal \u548c Position \u53d8\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u66f4\u65b0\u4e00\u4e0b\u9876\u70b9\u7740\u8272\u5668\u3002 #version 330 core layout (location = 0) in vec3 aPos; layout (location = 1) in vec3 aNormal; out vec3 Normal; out vec3 Position; uniform mat4 model; uniform mat4 view; uniform mat4 projection; void main() { Normal = mat3(transpose(inverse(model))) * aNormal; Position = vec3(model * vec4(aPos, 1.0)); gl_Position = projection * view * model * vec4(aPos, 1.0); } \u6211\u4eec\u73b0\u5728\u4f7f\u7528\u4e86\u4e00\u4e2a\u6cd5\u5411\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u518d\u6b21\u4f7f\u7528\u6cd5\u7ebf\u77e9\u9635(Normal Matrix)\u6765\u53d8\u6362\u5b83\u4eec\u3002 Position \u8f93\u51fa\u5411\u91cf\u662f\u4e00\u4e2a\u4e16\u754c\u7a7a\u95f4\u7684\u4f4d\u7f6e\u5411\u91cf\u3002\u9876\u70b9\u7740\u8272\u5668\u7684\u8fd9\u4e2a Position \u8f93\u51fa\u5c06\u7528\u6765\u5728\u7247\u6bb5\u7740\u8272\u5668\u5185\u8ba1\u7b97\u89c2\u5bdf\u65b9\u5411\u5411\u91cf\u3002 \u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86\u6cd5\u7ebf\uff0c\u4f60\u8fd8\u9700\u8981\u66f4\u65b0\u4e00\u4e0b \u9876\u70b9\u6570\u636e \uff0c\u5e76\u66f4\u65b0\u5c5e\u6027\u6307\u9488\u3002\u8fd8\u8981\u8bb0\u5f97\u53bb\u8bbe\u7f6e cameraPos \u8fd9\u4e2auniform\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5728\u6e32\u67d3\u7bb1\u5b50\u4e4b\u524d\u5148\u7ed1\u5b9a\u7acb\u65b9\u4f53\u8d34\u56fe\u7eb9\u7406\uff1a glBindVertexArray(cubeVAO); glBindTexture(GL_TEXTURE_CUBE_MAP, skyboxTexture); glDrawArrays(GL_TRIANGLES, 0, 36); \u7f16\u8bd1\u5e76\u8fd0\u884c\u4ee3\u7801\uff0c\u4f60\u5c06\u4f1a\u5f97\u5230\u4e00\u4e2a\u50cf\u662f\u955c\u5b50\u4e00\u6837\u7684\u7bb1\u5b50\u3002\u5468\u56f4\u7684\u5929\u7a7a\u76d2\u88ab\u5b8c\u7f8e\u5730\u53cd\u5c04\u5728\u7bb1\u5b50\u4e0a\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5b8c\u6574\u7684\u6e90\u4ee3\u7801\u3002 \u5f53\u53cd\u5c04\u5e94\u7528\u5230\u4e00\u6574\u4e2a\u7269\u4f53\u4e0a\uff08\u50cf\u662f\u7bb1\u5b50\uff09\u65f6\uff0c\u8fd9\u4e2a\u7269\u4f53\u770b\u8d77\u6765\u5c31\u50cf\u662f\u94a2\u6216\u8005\u94ec\u8fd9\u6837\u7684\u9ad8\u53cd\u5c04\u6027\u6750\u8d28\u3002\u5982\u679c\u6211\u4eec\u52a0\u8f7d \u6a21\u578b\u52a0\u8f7d \u5c0f\u8282\u4e2d\u7684\u80cc\u5305\u6a21\u578b\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u79cd\u6574\u4e2a\u5957\u88c5\u90fd\u662f\u4f7f\u7528\u94ec\u505a\u6210\u7684\u6548\u679c\uff1a \u8fd9\u770b\u8d77\u6765\u975e\u5e38\u68d2\uff0c\u4f46\u5728\u73b0\u5b9e\u4e2d\u5927\u90e8\u5206\u7684\u6a21\u578b\u90fd\u4e0d\u5177\u6709\u5b8c\u5168\u53cd\u5c04\u6027\u3002\u6211\u4eec\u53ef\u4ee5\u5f15\u5165 \u53cd\u5c04\u8d34\u56fe (Reflection Map)\uff0c\u6765\u7ed9\u6a21\u578b\u66f4\u591a\u7684\u7ec6\u8282\u3002\u4e0e\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u8d34\u56fe\u4e00\u6837\uff0c\u53cd\u5c04\u8d34\u56fe\u4e5f\u662f\u53ef\u4ee5\u91c7\u6837\u7684\u7eb9\u7406\u56fe\u50cf\uff0c\u5b83\u51b3\u5b9a\u8fd9\u7247\u6bb5\u7684\u53cd\u5c04\u6027\u3002\u901a\u8fc7\u4f7f\u7528\u53cd\u5c04\u8d34\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u6a21\u578b\u7684\u54ea\u4e9b\u90e8\u5206\u8be5\u4ee5\u4ec0\u4e48\u5f3a\u5ea6\u663e\u793a\u53cd\u5c04\u3002\u5728\u672c\u8282\u7684\u7ec3\u4e60\u4e2d\uff0c\u5c06\u7531\u4f60\u6765\u4e3a\u6211\u4eec\u4e4b\u524d\u521b\u5efa\u7684\u6a21\u578b\u52a0\u8f7d\u5668\u4e2d\u5f15\u5165\u53cd\u5c04\u8d34\u56fe\uff0c\u663e\u8457\u63d0\u5347\u80cc\u5305\u6a21\u578b\u7684\u7ec6\u8282\u3002 \u6298\u5c04 \u73af\u5883\u6620\u5c04\u7684\u53e6\u4e00\u79cd\u5f62\u5f0f\u662f \u6298\u5c04 \uff0c\u5b83\u548c\u53cd\u5c04\u5f88\u76f8\u4f3c\u3002\u6298\u5c04\u662f\u5149\u7ebf\u7531\u4e8e\u4f20\u64ad\u4ecb\u8d28\u7684\u6539\u53d8\u800c\u4ea7\u751f\u7684\u65b9\u5411\u53d8\u5316\u3002\u5728\u5e38\u89c1\u7684\u7c7b\u6c34\u8868\u9762\u4e0a\u6240\u4ea7\u751f\u7684\u73b0\u8c61\u5c31\u662f\u6298\u5c04\uff0c\u5149\u7ebf\u4e0d\u662f\u76f4\u76f4\u5730\u4f20\u64ad\uff0c\u800c\u662f\u5f2f\u66f2\u4e86\u4e00\u70b9\u3002\u5c06\u4f60\u7684\u534a\u53ea\u80f3\u818a\u4f38\u8fdb\u6c34\u91cc\uff0c\u89c2\u5bdf\u51fa\u6765\u7684\u5c31\u662f\u8fd9\u79cd\u6548\u679c\u3002 \u6298\u5c04\u662f\u901a\u8fc7 \u65af\u6d85\u5c14\u5b9a\u5f8b (Snell\u2019s Law)\u6765\u63cf\u8ff0\u7684\uff0c\u4f7f\u7528\u73af\u5883\u8d34\u56fe\u7684\u8bdd\u770b\u8d77\u6765\u50cf\u662f\u8fd9\u6837\uff1a \u540c\u6837\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u89c2\u5bdf\u5411\u91cf \\color{gray}{\\bar{I}} \uff0c\u4e00\u4e2a\u6cd5\u5411\u91cf \\color{red}{\\bar{N}} \uff0c\u800c\u8fd9\u6b21\u662f\u6298\u5c04\u5411\u91cf \\color{green}{\\bar{R}} \u3002\u53ef\u4ee5\u770b\u5230\uff0c\u89c2\u5bdf\u5411\u91cf\u7684\u65b9\u5411\u8f7b\u5fae\u5f2f\u66f2\u4e86\u3002\u5f2f\u6298\u540e\u7684\u5411\u91cf \\color{green}{\\bar{R}} \u5c06\u4f1a\u7528\u6765\u4ece\u7acb\u65b9\u4f53\u8d34\u56fe\u4e2d\u91c7\u6837\u3002 \u6298\u5c04\u53ef\u4ee5\u4f7f\u7528GLSL\u7684\u5185\u5efa refract \u51fd\u6570\u6765\u8f7b\u677e\u5b9e\u73b0\uff0c\u5b83\u9700\u8981\u4e00\u4e2a\u6cd5\u5411\u91cf\u3001\u4e00\u4e2a\u89c2\u5bdf\u65b9\u5411\u548c\u4e24\u4e2a\u6750\u8d28\u4e4b\u95f4\u7684 \u6298\u5c04\u7387 (Refractive Index)\u3002 \u6298\u5c04\u7387\u51b3\u5b9a\u4e86\u6750\u8d28\u4e2d\u5149\u7ebf\u5f2f\u66f2\u7684\u7a0b\u5ea6\uff0c\u6bcf\u4e2a\u6750\u8d28\u90fd\u6709\u81ea\u5df1\u7684\u6298\u5c04\u7387\u3002\u4e00\u4e9b\u6700\u5e38\u89c1\u7684\u6298\u5c04\u7387\u53ef\u4ee5\u5728\u4e0b\u8868\u4e2d\u627e\u5230\uff1a \u6750\u8d28 \u6298\u5c04\u7387 \u7a7a\u6c14 1.00 \u6c34 1.33 \u51b0 1.309 \u73bb\u7483 1.52 \u94bb\u77f3 2.42 \u6211\u4eec\u4f7f\u7528\u8fd9\u4e9b\u6298\u5c04\u7387\u6765\u8ba1\u7b97\u5149\u4f20\u64ad\u7684\u4e24\u79cd\u6750\u8d28\u95f4\u7684\u6bd4\u503c\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u5149\u7ebf/\u89c6\u7ebf\u4ece \u7a7a\u6c14 \u8fdb\u5165 \u73bb\u7483 \uff08\u5982\u679c\u6211\u4eec\u5047\u8bbe\u7bb1\u5b50\u662f\u73bb\u7483\u5236\u7684\uff09\uff0c\u6240\u4ee5\u6bd4\u503c\u4e3a \\frac{1.00}{1.52} = 0.658 \u3002 \u6211\u4eec\u5df2\u7ecf\u7ed1\u5b9a\u4e86\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u63d0\u4f9b\u4e86\u9876\u70b9\u6570\u636e\u548c\u6cd5\u7ebf\uff0c\u5e76\u8bbe\u7f6e\u4e86\u6444\u50cf\u673a\u4f4d\u7f6e\u7684uniform\u3002\u552f\u4e00\u8981\u4fee\u6539\u7684\u5c31\u662f\u7247\u6bb5\u7740\u8272\u5668\uff1a void main() { float ratio = 1.00 / 1.52; vec3 I = normalize(Position - cameraPos); vec3 R = refract(I, normalize(Normal), ratio); FragColor = vec4(texture(skybox, R).rgb, 1.0); } \u901a\u8fc7\u6539\u53d8\u6298\u5c04\u7387\uff0c\u4f60\u53ef\u4ee5\u521b\u5efa\u5b8c\u5168\u4e0d\u540c\u7684\u89c6\u89c9\u6548\u679c\u3002\u7f16\u8bd1\u7a0b\u5e8f\u5e76\u8fd0\u884c\uff0c\u4f46\u7ed3\u679c\u5e76\u4e0d\u662f\u5f88\u6709\u8da3\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u4f7f\u7528\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u7bb1\u5b50\uff0c\u5b83\u4e0d\u592a\u80fd\u663e\u793a\u6298\u5c04\u7684\u6548\u679c\uff0c\u73b0\u5728\u770b\u8d77\u6765\u53ea\u662f\u6709\u70b9\u50cf\u4e00\u4e2a\u653e\u5927\u955c\u3002\u5bf9\u80cc\u5305\u4f7f\u7528\u76f8\u540c\u7684\u7740\u8272\u5668\u5374\u80fd\u591f\u5c55\u73b0\u51fa\u4e86\u6211\u4eec\u671f\u5f85\u7684\u6548\u679c\uff1a\u4e00\u4e2a\u7c7b\u73bb\u7483\u7684\u7269\u4f53\u3002 \u4f60\u53ef\u4ee5\u60f3\u8c61\u51fa\u6709\u4e86\u5149\u7167\u3001\u53cd\u5c04\u3001\u6298\u5c04\u548c\u9876\u70b9\u79fb\u52a8\u7684\u6b63\u786e\u7ec4\u5408\uff0c\u4f60\u53ef\u4ee5\u521b\u5efa\u51fa\u975e\u5e38\u6f02\u4eae\u7684\u6c34\u3002\u6ce8\u610f\uff0c\u5982\u679c\u8981\u60f3\u83b7\u5f97\u7269\u7406\u4e0a\u7cbe\u786e\u7684\u7ed3\u679c\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5728\u5149\u7ebf\u79bb\u5f00\u7269\u4f53\u7684\u65f6\u5019\u518d\u6b21\u6298\u5c04\uff0c\u73b0\u5728\u6211\u4eec\u4f7f\u7528\u7684\u53ea\u662f\u5355\u9762\u6298\u5c04(Single-side Refraction)\uff0c\u4f46\u5b83\u5bf9\u5927\u90e8\u5206\u573a\u5408\u90fd\u662f\u6ca1\u95ee\u9898\u7684\u3002 \u52a8\u6001\u73af\u5883\u8d34\u56fe \u73b0\u5728\u6211\u4eec\u4f7f\u7528\u7684\u90fd\u662f\u9759\u6001\u56fe\u50cf\u7684\u7ec4\u5408\u6765\u4f5c\u4e3a\u5929\u7a7a\u76d2\uff0c\u770b\u8d77\u6765\u5f88\u4e0d\u9519\uff0c\u4f46\u5b83\u6ca1\u6709\u5728\u573a\u666f\u4e2d\u5305\u62ec\u53ef\u79fb\u52a8\u7684\u7269\u4f53\u3002\u6211\u4eec\u4e00\u76f4\u90fd\u6ca1\u6709\u6ce8\u610f\u5230\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u4f7f\u7528\u4e86\u4e00\u4e2a\u7269\u4f53\u3002\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u955c\u5b50\u4e00\u6837\u7684\u7269\u4f53\uff0c\u5468\u56f4\u8fd8\u6709\u591a\u4e2a\u7269\u4f53\uff0c\u955c\u5b50\u4e2d\u53ef\u89c1\u7684\u53ea\u6709\u5929\u7a7a\u76d2\uff0c\u770b\u8d77\u6765\u5c31\u50cf\u5b83\u662f\u573a\u666f\u4e2d\u552f\u4e00\u4e00\u4e2a\u7269\u4f53\u4e00\u6837\u3002 \u901a\u8fc7\u4f7f\u7528\u5e27\u7f13\u51b2\uff0c\u6211\u4eec\u80fd\u591f\u4e3a\u7269\u4f53\u76846\u4e2a\u4e0d\u540c\u89d2\u5ea6\u521b\u5efa\u51fa\u573a\u666f\u7684\u7eb9\u7406\uff0c\u5e76\u5728\u6bcf\u4e2a\u6e32\u67d3\u8fed\u4ee3\u4e2d\u5c06\u5b83\u4eec\u50a8\u5b58\u5230\u4e00\u4e2a\u7acb\u65b9\u4f53\u8d34\u56fe\u4e2d\u3002\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\uff08\u52a8\u6001\u751f\u6210\u7684\uff09\u7acb\u65b9\u4f53\u8d34\u56fe\u6765\u521b\u5efa\u51fa\u66f4\u771f\u5b9e\u7684\uff0c\u5305\u542b\u5176\u5b83\u7269\u4f53\u7684\uff0c\u53cd\u5c04\u548c\u6298\u5c04\u8868\u9762\u4e86\u3002\u8fd9\u5c31\u53eb\u505a \u52a8\u6001\u73af\u5883\u6620\u5c04 (Dynamic Environment Mapping)\uff0c\u56e0\u4e3a\u6211\u4eec\u52a8\u6001\u521b\u5efa\u4e86\u7269\u4f53\u5468\u56f4\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u5e76\u5c06\u5176\u7528\u4f5c\u73af\u5883\u8d34\u56fe\u3002 \u867d\u7136\u5b83\u770b\u8d77\u6765\u5f88\u68d2\uff0c\u4f46\u5b83\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u7f3a\u70b9\uff1a\u6211\u4eec\u9700\u8981\u4e3a\u4f7f\u7528\u73af\u5883\u8d34\u56fe\u7684\u7269\u4f53\u6e32\u67d3\u573a\u666f6\u6b21\uff0c\u8fd9\u662f\u5bf9\u7a0b\u5e8f\u662f\u975e\u5e38\u5927\u7684\u6027\u80fd\u5f00\u9500\u3002\u73b0\u4ee3\u7684\u7a0b\u5e8f\u901a\u5e38\u4f1a\u5c3d\u53ef\u80fd\u4f7f\u7528\u5929\u7a7a\u76d2\uff0c\u5e76\u5728\u53ef\u80fd\u7684\u65f6\u5019\u4f7f\u7528\u9884\u7f16\u8bd1\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u53ea\u8981\u5b83\u4eec\u80fd\u4ea7\u751f\u4e00\u70b9\u52a8\u6001\u73af\u5883\u8d34\u56fe\u7684\u6548\u679c\u3002\u867d\u7136\u52a8\u6001\u73af\u5883\u8d34\u56fe\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u6280\u672f\uff0c\u4f46\u662f\u8981\u60f3\u5728\u4e0d\u964d\u4f4e\u6027\u80fd\u7684\u60c5\u51b5\u4e0b\u8ba9\u5b83\u5de5\u4f5c\u8fd8\u662f\u9700\u8981\u975e\u5e38\u591a\u7684\u6280\u5de7\u7684\u3002 \u7ec3\u4e60 \u5c1d\u8bd5\u5728\u6211\u4eec\u4e4b\u524d\u5728 \u6a21\u578b\u52a0\u8f7d \u5c0f\u8282\u4e2d\u521b\u5efa\u7684\u6a21\u578b\u52a0\u8f7d\u5668\u4e2d\u5f15\u5165\u53cd\u5c04\u8d34\u56fe\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5347\u7ea7\u540e\u6709\u53cd\u5c04\u8d34\u56fe\u7684\u80cc\u5305\u6a21\u578b\u3002\u4ecd\u6709\u51e0\u70b9\u8981\u6ce8\u610f\u7684\uff1a Assimp\u5728\u5927\u591a\u6570\u683c\u5f0f\u4e2d\u90fd\u4e0d\u592a\u559c\u6b22\u53cd\u5c04\u8d34\u56fe\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6b3a\u9a97\u4e00\u4e0b\u5b83\uff0c\u5c06\u53cd\u5c04\u8d34\u56fe\u50a8\u5b58\u4e3a \u6f2b\u53cd\u5c04\u8d34\u56fe \u3002\u4f60\u53ef\u4ee5\u5728\u52a0\u8f7d\u6750\u8d28\u7684\u65f6\u5019\u5c06\u53cd\u5c04\u8d34\u56fe\u7684\u7eb9\u7406\u7c7b\u578b\u8bbe\u7f6e\u4e3a aiTextureType_AMBIENT \u3002 \u6211\u5077\u61d2\u76f4\u63a5\u4f7f\u7528\u955c\u9762\u5149\u7eb9\u7406\u56fe\u50cf\u6765\u521b\u5efa\u4e86\u53cd\u5c04\u8d34\u56fe\uff0c\u6240\u4ee5\u53cd\u5c04\u8d34\u56fe\u5728\u6a21\u578b\u7684\u67d0\u4e9b\u5730\u65b9\u4e0d\u80fd\u51c6\u786e\u5730\u6620\u5c04:)\u3002 \u7531\u4e8e\u6a21\u578b\u52a0\u8f7d\u5668\u672c\u8eab\u5c31\u5df2\u7ecf\u5728\u7740\u8272\u5668\u4e2d\u5360\u7528\u4e863\u4e2a\u7eb9\u7406\u5355\u5143\u4e86\uff0c\u4f60\u9700\u8981\u5c06\u5929\u7a7a\u76d2\u7ed1\u5b9a\u5230\u7b2c4\u4e2a\u7eb9\u7406\u5355\u5143\u4e0a\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u4ece\u540c\u4e00\u4e2a\u7740\u8272\u5668\u4e2d\u5bf9\u5929\u7a7a\u76d2\u91c7\u6837\u3002 \u5982\u679c\u4f60\u90fd\u505a\u5bf9\u4e86\uff0c\u5b83\u4f1a\u770b\u8d77\u6765\u50cf \u8fd9\u6837 \u3002","title":"\u7acb\u65b9\u4f53\u8d34\u56fe"},{"location":"04%20Advanced%20OpenGL/06%20Cubemaps/#_1","text":"\u539f\u6587 Cubemaps \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u6211\u4eec\u5df2\u7ecf\u4f7f\u75282D\u7eb9\u7406\u5f88\u957f\u65f6\u95f4\u4e86\uff0c\u4f46\u9664\u6b64\u4e4b\u5916\u4ecd\u6709\u66f4\u591a\u7684\u7eb9\u7406\u7c7b\u578b\u7b49\u7740\u6211\u4eec\u63a2\u7d22\u3002\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u7684\u662f\u5c06\u591a\u4e2a\u7eb9\u7406\u7ec4\u5408\u8d77\u6765\u6620\u5c04\u5230\u4e00\u5f20\u7eb9\u7406\u4e0a\u7684\u4e00\u79cd\u7eb9\u7406\u7c7b\u578b\uff1a \u7acb\u65b9\u4f53\u8d34\u56fe (Cube Map)\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u7acb\u65b9\u4f53\u8d34\u56fe\u5c31\u662f\u4e00\u4e2a\u5305\u542b\u4e866\u4e2a2D\u7eb9\u7406\u7684\u7eb9\u7406\uff0c\u6bcf\u4e2a2D\u7eb9\u7406\u90fd\u7ec4\u6210\u4e86\u7acb\u65b9\u4f53\u7684\u4e00\u4e2a\u9762\uff1a\u4e00\u4e2a\u6709\u7eb9\u7406\u7684\u7acb\u65b9\u4f53\u3002\u4f60\u53ef\u80fd\u4f1a\u5947\u602a\uff0c\u8fd9\u6837\u4e00\u4e2a\u7acb\u65b9\u4f53\u6709\u4ec0\u4e48\u7528\u9014\u5462\uff1f\u4e3a\u4ec0\u4e48\u8981\u628a6\u5f20\u7eb9\u7406\u5408\u5e76\u5230\u4e00\u5f20\u7eb9\u7406\u4e2d\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u4f7f\u75286\u4e2a\u5355\u72ec\u7684\u7eb9\u7406\u5462\uff1f\u7acb\u65b9\u4f53\u8d34\u56fe\u6709\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u7279\u6027\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u65b9\u5411\u5411\u91cf\u6765\u8fdb\u884c\u7d22\u5f15/\u91c7\u6837\u3002\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a1x1x1\u7684\u5355\u4f4d\u7acb\u65b9\u4f53\uff0c\u65b9\u5411\u5411\u91cf\u7684\u539f\u70b9\u4f4d\u4e8e\u5b83\u7684\u4e2d\u5fc3\u3002\u4f7f\u7528\u4e00\u4e2a\u6a58\u9ec4\u8272\u7684\u65b9\u5411\u5411\u91cf\u6765\u4ece\u7acb\u65b9\u4f53\u8d34\u56fe\u4e0a\u91c7\u6837\u4e00\u4e2a\u7eb9\u7406\u503c\u4f1a\u50cf\u662f\u8fd9\u6837\uff1a Important \u65b9\u5411\u5411\u91cf\u7684\u5927\u5c0f\u5e76\u4e0d\u91cd\u8981\uff0c\u53ea\u8981\u63d0\u4f9b\u4e86\u65b9\u5411\uff0cOpenGL\u5c31\u4f1a\u83b7\u53d6\u65b9\u5411\u5411\u91cf\uff08\u6700\u7ec8\uff09\u6240\u51fb\u4e2d\u7684\u7eb9\u7d20\uff0c\u5e76\u8fd4\u56de\u5bf9\u5e94\u7684\u91c7\u6837\u7eb9\u7406\u503c\u3002 \u5982\u679c\u6211\u4eec\u5047\u8bbe\u5c06\u8fd9\u6837\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u5e94\u7528\u5230\u4e00\u4e2a\u7acb\u65b9\u4f53\u4e0a\uff0c\u91c7\u6837\u7acb\u65b9\u4f53\u8d34\u56fe\u6240\u4f7f\u7528\u7684\u65b9\u5411\u5411\u91cf\u5c06\u548c\u7acb\u65b9\u4f53\uff08\u63d2\u503c\u7684\uff09\u9876\u70b9\u4f4d\u7f6e\u975e\u5e38\u76f8\u50cf\u3002\u8fd9\u6837\u5b50\uff0c\u53ea\u8981\u7acb\u65b9\u4f53\u7684\u4e2d\u5fc3\u4f4d\u4e8e\u539f\u70b9\uff0c\u6211\u4eec\u5c31\u80fd\u4f7f\u7528\u7acb\u65b9\u4f53\u7684\u5b9e\u9645\u4f4d\u7f6e\u5411\u91cf\u6765\u5bf9\u7acb\u65b9\u4f53\u8d34\u56fe\u8fdb\u884c\u91c7\u6837\u4e86\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u9876\u70b9\u7684\u7eb9\u7406\u5750\u6807\u5f53\u505a\u662f\u7acb\u65b9\u4f53\u7684\u9876\u70b9\u4f4d\u7f6e\u3002\u6700\u7ec8\u5f97\u5230\u7684\u7ed3\u679c\u5c31\u662f\u53ef\u4ee5\u8bbf\u95ee\u7acb\u65b9\u4f53\u8d34\u56fe\u4e0a\u6b63\u786e \u9762 (Face)\u7eb9\u7406\u7684\u4e00\u4e2a\u7eb9\u7406\u5750\u6807\u3002","title":"\u7acb\u65b9\u4f53\u8d34\u56fe"},{"location":"04%20Advanced%20OpenGL/06%20Cubemaps/#_2","text":"\u7acb\u65b9\u4f53\u8d34\u56fe\u662f\u548c\u5176\u5b83\u7eb9\u7406\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u5982\u679c\u60f3\u521b\u5efa\u4e00\u4e2a\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u8bdd\uff0c\u6211\u4eec\u9700\u8981\u751f\u6210\u4e00\u4e2a\u7eb9\u7406\uff0c\u5e76\u5c06\u5176\u7ed1\u5b9a\u5230\u7eb9\u7406\u76ee\u6807\u4e0a\uff0c\u4e4b\u540e\u518d\u505a\u5176\u5b83\u7684\u7eb9\u7406\u64cd\u4f5c\u3002\u8fd9\u6b21\u8981\u7ed1\u5b9a\u5230 GL_TEXTURE_CUBE_MAP \uff1a unsigned int textureID; glGenTextures(1, &textureID); glBindTexture(GL_TEXTURE_CUBE_MAP, textureID); \u56e0\u4e3a\u7acb\u65b9\u4f53\u8d34\u56fe\u5305\u542b\u67096\u4e2a\u7eb9\u7406\uff0c\u6bcf\u4e2a\u9762\u4e00\u4e2a\uff0c\u6211\u4eec\u9700\u8981\u8c03\u7528 glTexImage2D \u51fd\u65706\u6b21\uff0c\u53c2\u6570\u548c\u4e4b\u524d\u6559\u7a0b\u4e2d\u5f88\u7c7b\u4f3c\u3002\u4f46\u8fd9\u4e00\u6b21\u6211\u4eec\u5c06\u7eb9\u7406\u76ee\u6807( target )\u53c2\u6570\u8bbe\u7f6e\u4e3a\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u4e00\u4e2a\u7279\u5b9a\u7684\u9762\uff0c\u544a\u8bc9OpenGL\u6211\u4eec\u5728\u5bf9\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u54ea\u4e00\u4e2a\u9762\u521b\u5efa\u7eb9\u7406\u3002\u8fd9\u5c31\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u5bf9\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6bcf\u4e00\u4e2a\u9762\u90fd\u8c03\u7528\u4e00\u6b21 glTexImage2D \u3002 \u7531\u4e8e\u6211\u4eec\u67096\u4e2a\u9762\uff0cOpenGL\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e866\u4e2a\u7279\u6b8a\u7684\u7eb9\u7406\u76ee\u6807\uff0c\u4e13\u95e8\u5bf9\u5e94\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u4e00\u4e2a\u9762\u3002 \u7eb9\u7406\u76ee\u6807 \u65b9\u4f4d GL_TEXTURE_CUBE_MAP_POSITIVE_X \u53f3 GL_TEXTURE_CUBE_MAP_NEGATIVE_X \u5de6 GL_TEXTURE_CUBE_MAP_POSITIVE_Y \u4e0a GL_TEXTURE_CUBE_MAP_NEGATIVE_Y \u4e0b GL_TEXTURE_CUBE_MAP_POSITIVE_Z \u540e GL_TEXTURE_CUBE_MAP_NEGATIVE_Z \u524d \u548cOpenGL\u7684\u5f88\u591a\u679a\u4e3e(Enum)\u4e00\u6837\uff0c\u5b83\u4eec\u80cc\u540e\u7684 int \u503c\u662f\u7ebf\u6027\u9012\u589e\u7684\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u7eb9\u7406\u4f4d\u7f6e\u7684\u6570\u7ec4\u6216\u8005vector\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece GL_TEXTURE_CUBE_MAP_POSITIVE_X \u5f00\u59cb\u904d\u5386\u5b83\u4eec\uff0c\u5728\u6bcf\u4e2a\u8fed\u4ee3\u4e2d\u5bf9\u679a\u4e3e\u503c\u52a01\uff0c\u904d\u5386\u4e86\u6574\u4e2a\u7eb9\u7406\u76ee\u6807\uff1a int width, height, nrChannels; unsigned char *data; for(unsigned int i = 0; i < textures_faces.size(); i++) { data = stbi_load(textures_faces[i].c_str(), &width, &height, &nrChannels, 0); glTexImage2D( GL_TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, data ); } \u8fd9\u91cc\u6211\u4eec\u6709\u4e00\u4e2a\u53eb\u505a textures_faces \u7684 vector \uff0c\u5b83\u5305\u542b\u4e86\u7acb\u65b9\u4f53\u8d34\u56fe\u6240\u9700\u7684\u6240\u6709\u7eb9\u7406\u8def\u5f84\uff0c\u5e76\u4ee5\u8868\u4e2d\u7684\u987a\u5e8f\u6392\u5217\u3002\u8fd9\u5c06\u4e3a\u5f53\u524d\u7ed1\u5b9a\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u4e2d\u7684\u6bcf\u4e2a\u9762\u751f\u6210\u4e00\u4e2a\u7eb9\u7406\u3002 \u56e0\u4e3a\u7acb\u65b9\u4f53\u8d34\u56fe\u548c\u5176\u5b83\u7eb9\u7406\u6ca1\u4ec0\u4e48\u4e0d\u540c\uff0c\u6211\u4eec\u4e5f\u9700\u8981\u8bbe\u5b9a\u5b83\u7684\u73af\u7ed5\u548c\u8fc7\u6ee4\u65b9\u5f0f\uff1a glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MAG_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MIN_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_R, GL_CLAMP_TO_EDGE); \u4e0d\u8981\u88ab GL_TEXTURE_WRAP_R \u5413\u5230\uff0c\u5b83\u4ec5\u4ec5\u662f\u4e3a\u7eb9\u7406\u7684 R \u5750\u6807\u8bbe\u7f6e\u4e86\u73af\u7ed5\u65b9\u5f0f\uff0c\u5b83\u5bf9\u5e94\u7684\u662f\u7eb9\u7406\u7684\u7b2c\u4e09\u4e2a\u7ef4\u5ea6\uff08\u548c\u4f4d\u7f6e\u7684 z \u4e00\u6837\uff09\u3002\u6211\u4eec\u5c06\u73af\u7ed5\u65b9\u5f0f\u8bbe\u7f6e\u4e3a GL_CLAMP_TO_EDGE \uff0c\u8fd9\u662f\u56e0\u4e3a\u6b63\u597d\u5904\u4e8e\u4e24\u4e2a\u9762\u4e4b\u95f4\u7684\u7eb9\u7406\u5750\u6807\u53ef\u80fd\u4e0d\u80fd\u51fb\u4e2d\u4e00\u4e2a\u9762\uff08\u7531\u4e8e\u4e00\u4e9b\u786c\u4ef6\u9650\u5236\uff09\uff0c\u6240\u4ee5\u901a\u8fc7\u4f7f\u7528 GL_CLAMP_TO_EDGE \uff0cOpenGL\u5c06\u5728\u6211\u4eec\u5bf9\u4e24\u4e2a\u9762\u4e4b\u95f4\u91c7\u6837\u7684\u65f6\u5019\uff0c\u6c38\u8fdc\u8fd4\u56de\u5b83\u4eec\u7684\u8fb9\u754c\u503c\u3002 \u5728\u7ed8\u5236\u4f7f\u7528\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u7269\u4f53\u4e4b\u524d\uff0c\u6211\u4eec\u8981\u5148\u6fc0\u6d3b\u5bf9\u5e94\u7684\u7eb9\u7406\u5355\u5143\uff0c\u5e76\u7ed1\u5b9a\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u8fd9\u548c\u666e\u901a\u76842D\u7eb9\u7406\u6ca1\u4ec0\u4e48\u533a\u522b\u3002 \u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684\u91c7\u6837\u5668\uff0c samplerCube \uff0c\u6211\u4eec\u5c06\u4f7f\u7528 texture \u51fd\u6570\u4f7f\u7528\u5b83\u8fdb\u884c\u91c7\u6837\uff0c\u4f46\u8fd9\u6b21\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a vec3 \u7684\u65b9\u5411\u5411\u91cf\u800c\u4e0d\u662f vec2 \u3002\u4f7f\u7528\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u7247\u6bb5\u7740\u8272\u5668\u4f1a\u50cf\u662f\u8fd9\u6837\u7684\uff1a in vec3 textureDir; // \u4ee3\u88683D\u7eb9\u7406\u5750\u6807\u7684\u65b9\u5411\u5411\u91cf uniform samplerCube cubemap; // \u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u7eb9\u7406\u91c7\u6837\u5668 void main() { FragColor = texture(cubemap, textureDir); } \u770b\u8d77\u6765\u5f88\u68d2\uff0c\u4f46\u4e3a\u4ec0\u4e48\u8981\u7528\u5b83\u5462\uff1f\u6070\u5de7\u6709\u4e00\u4e9b\u5f88\u6709\u610f\u601d\u7684\u6280\u672f\uff0c\u4f7f\u7528\u7acb\u65b9\u4f53\u8d34\u56fe\u6765\u5b9e\u73b0\u7684\u8bdd\u4f1a\u7b80\u5355\u591a\u4e86\u3002\u5176\u4e2d\u4e00\u4e2a\u6280\u672f\u5c31\u662f\u521b\u5efa\u4e00\u4e2a \u5929\u7a7a\u76d2 (Skybox)\u3002","title":"\u521b\u5efa\u7acb\u65b9\u4f53\u8d34\u56fe"},{"location":"04%20Advanced%20OpenGL/06%20Cubemaps/#_3","text":"\u5929\u7a7a\u76d2\u662f\u4e00\u4e2a\u5305\u542b\u4e86\u6574\u4e2a\u573a\u666f\u7684\uff08\u5927\uff09\u7acb\u65b9\u4f53\uff0c\u5b83\u5305\u542b\u5468\u56f4\u73af\u5883\u76846\u4e2a\u56fe\u50cf\uff0c\u8ba9\u73a9\u5bb6\u4ee5\u4e3a\u4ed6\u5904\u5728\u4e00\u4e2a\u6bd4\u5b9e\u9645\u5927\u5f97\u591a\u7684\u73af\u5883\u5f53\u4e2d\u3002\u6e38\u620f\u4e2d\u4f7f\u7528\u5929\u7a7a\u76d2\u7684\u4f8b\u5b50\u6709\u7fa4\u5c71\u3001\u767d\u4e91\u6216\u661f\u7a7a\u3002\u4e0b\u9762\u8fd9\u5f20\u622a\u56fe\u4e2d\u5c55\u793a\u7684\u662f\u661f\u7a7a\u7684\u5929\u7a7a\u76d2\uff0c\u5b83\u6765\u81ea\u4e8e\u300e\u4e0a\u53e4\u5377\u8f743\u300f\uff1a \u4f60\u53ef\u80fd\u73b0\u5728\u5df2\u7ecf\u731c\u5230\u4e86\uff0c\u7acb\u65b9\u4f53\u8d34\u56fe\u80fd\u5b8c\u7f8e\u6ee1\u8db3\u5929\u7a7a\u76d2\u7684\u9700\u6c42\uff1a\u6211\u4eec\u6709\u4e00\u4e2a6\u9762\u7684\u7acb\u65b9\u4f53\uff0c\u6bcf\u4e2a\u9762\u90fd\u9700\u8981\u4e00\u4e2a\u7eb9\u7406\u3002\u5728\u4e0a\u9762\u7684\u56fe\u7247\u4e2d\uff0c\u4ed6\u4eec\u4f7f\u7528\u4e86\u591c\u7a7a\u7684\u51e0\u5f20\u56fe\u7247\uff0c\u8ba9\u73a9\u5bb6\u4ea7\u751f\u5176\u4f4d\u4e8e\u5e7f\u88a4\u5b87\u5b99\u4e2d\u7684\u9519\u89c9\uff0c\u4f46\u5b9e\u9645\u4e0a\u4ed6\u53ea\u662f\u5728\u4e00\u4e2a\u5c0f\u5c0f\u7684\u76d2\u5b50\u5f53\u4e2d\u3002 \u4f60\u53ef\u4ee5\u5728\u7f51\u4e0a\u627e\u5230\u5f88\u591a\u50cf\u8fd9\u6837\u7684\u5929\u7a7a\u76d2\u8d44\u6e90\u3002\u6bd4\u5982\u8bf4\u8fd9\u4e2a \u7f51\u7ad9 \u5c31\u63d0\u4f9b\u4e86\u5f88\u591a\u5929\u7a7a\u76d2\u3002\u5929\u7a7a\u76d2\u56fe\u50cf\u901a\u5e38\u6709\u4ee5\u4e0b\u7684\u5f62\u5f0f\uff1a \u5982\u679c\u4f60\u5c06\u8fd9\u516d\u4e2a\u9762\u6298\u6210\u4e00\u4e2a\u7acb\u65b9\u4f53\uff0c\u4f60\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2a\u5b8c\u5168\u8d34\u56fe\u7684\u7acb\u65b9\u4f53\uff0c\u6a21\u62df\u4e00\u4e2a\u5de8\u5927\u7684\u573a\u666f\u3002\u4e00\u4e9b\u8d44\u6e90\u53ef\u80fd\u4f1a\u63d0\u4f9b\u4e86\u8fd9\u6837\u683c\u5f0f\u7684\u5929\u7a7a\u76d2\uff0c\u4f60\u5fc5\u987b\u624b\u52a8\u63d0\u53d6\u516d\u4e2a\u9762\u7684\u56fe\u50cf\uff0c\u4f46\u5728\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u5b83\u4eec\u90fd\u662f6\u5f20\u5355\u72ec\u7684\u7eb9\u7406\u56fe\u50cf\u3002 \u4e4b\u540e\u6211\u4eec\u5c06\u5728\u573a\u666f\u4e2d\u4f7f\u7528\u8fd9\u4e2a\uff08\u9ad8\u8d28\u91cf\u7684\uff09\u5929\u7a7a\u76d2\uff0c\u5b83\u53ef\u4ee5\u5728 \u8fd9\u91cc \u4e0b\u8f7d\u5230\u3002","title":"\u5929\u7a7a\u76d2"},{"location":"04%20Advanced%20OpenGL/06%20Cubemaps/#_4","text":"\u56e0\u4e3a\u5929\u7a7a\u76d2\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u52a0\u8f7d\u5929\u7a7a\u76d2\u548c\u4e4b\u524d\u52a0\u8f7d\u7acb\u65b9\u4f53\u8d34\u56fe\u65f6\u5e76\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\u4e3a\u4e86\u52a0\u8f7d\u5929\u7a7a\u76d2\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e0b\u9762\u7684\u51fd\u6570\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a\u5305\u542b6\u4e2a\u7eb9\u7406\u8def\u5f84\u7684 vector \uff1a unsigned int loadCubemap(vector<std::string> faces) { unsigned int textureID; glGenTextures(1, &textureID); glBindTexture(GL_TEXTURE_CUBE_MAP, textureID); int width, height, nrChannels; for (unsigned int i = 0; i < faces.size(); i++) { unsigned char *data = stbi_load(faces[i].c_str(), &width, &height, &nrChannels, 0); if (data) { glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, data ); stbi_image_free(data); } else { std::cout << \"Cubemap texture failed to load at path: \" << faces[i] << std::endl; stbi_image_free(data); } } glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MIN_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MAG_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_R, GL_CLAMP_TO_EDGE); return textureID; } \u51fd\u6570\u672c\u8eab\u5e94\u8be5\u5f88\u719f\u6089\u4e86\u3002\u5b83\u57fa\u672c\u5c31\u662f\u4e0a\u4e00\u90e8\u5206\u4e2d\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u4ee3\u7801\uff0c\u53ea\u4e0d\u8fc7\u5408\u5e76\u5230\u4e86\u4e00\u4e2a\u4fbf\u4e8e\u7ba1\u7406\u7684\u51fd\u6570\u4e2d\u3002 \u4e4b\u540e\uff0c\u5728\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5408\u9002\u7684\u7eb9\u7406\u8def\u5f84\u6309\u7167\u7acb\u65b9\u4f53\u8d34\u56fe\u679a\u4e3e\u6307\u5b9a\u7684\u987a\u5e8f\u52a0\u8f7d\u5230\u4e00\u4e2avector\u4e2d\u3002 vector<std::string> faces { \"right.jpg\", \"left.jpg\", \"top.jpg\", \"bottom.jpg\", \"front.jpg\", \"back.jpg\" }; unsigned int cubemapTexture = loadCubemap(faces); \u73b0\u5728\u6211\u4eec\u5c31\u5c06\u8fd9\u4e2a\u5929\u7a7a\u76d2\u52a0\u8f7d\u4e3a\u4e00\u4e2a\u7acb\u65b9\u4f53\u8d34\u56fe\u4e86\uff0c\u5b83\u7684id\u662f cubemapTexture \u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u7ed1\u5b9a\u5230\u4e00\u4e2a\u7acb\u65b9\u4f53\u4e2d\uff0c\u66ff\u6362\u6389\u7528\u4e86\u5f88\u957f\u65f6\u95f4\u7684\u96be\u770b\u7684\u7eaf\u8272\u80cc\u666f\u3002","title":"\u52a0\u8f7d\u5929\u7a7a\u76d2"},{"location":"04%20Advanced%20OpenGL/06%20Cubemaps/#_5","text":"\u7531\u4e8e\u5929\u7a7a\u76d2\u662f\u7ed8\u5236\u5728\u4e00\u4e2a\u7acb\u65b9\u4f53\u4e0a\u7684\uff0c\u548c\u5176\u5b83\u7269\u4f53\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u53e6\u4e00\u4e2aVAO\u3001VBO\u4ee5\u53ca\u65b0\u7684\u4e00\u7ec4\u9876\u70b9\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5b83\u7684\u9876\u70b9\u6570\u636e\u3002 \u7528\u4e8e\u8d34\u56fe3D\u7acb\u65b9\u4f53\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u53ef\u4ee5\u4f7f\u7528\u7acb\u65b9\u4f53\u7684\u4f4d\u7f6e\u4f5c\u4e3a\u7eb9\u7406\u5750\u6807\u6765\u91c7\u6837\u3002\u5f53\u7acb\u65b9\u4f53\u5904\u4e8e\u539f\u70b9(0, 0, 0)\u65f6\uff0c\u5b83\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u5411\u91cf\u90fd\u662f\u4ece\u539f\u70b9\u51fa\u53d1\u7684\u65b9\u5411\u5411\u91cf\u3002\u8fd9\u4e2a\u65b9\u5411\u5411\u91cf\u6b63\u662f\u83b7\u53d6\u7acb\u65b9\u4f53\u4e0a\u7279\u5b9a\u4f4d\u7f6e\u7684\u7eb9\u7406\u503c\u6240\u9700\u8981\u7684\u3002\u6b63\u662f\u56e0\u4e3a\u8fd9\u4e2a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u63d0\u4f9b\u4f4d\u7f6e\u5411\u91cf\u800c\u4e0d\u7528\u7eb9\u7406\u5750\u6807\u4e86\u3002 \u8981\u6e32\u67d3\u5929\u7a7a\u76d2\u7684\u8bdd\uff0c\u6211\u4eec\u9700\u8981\u4e00\u7ec4\u65b0\u7684\u7740\u8272\u5668\uff0c\u5b83\u4eec\u90fd\u4e0d\u662f\u5f88\u590d\u6742\u3002\u56e0\u4e3a\u6211\u4eec\u53ea\u6709\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\uff0c\u9876\u70b9\u7740\u8272\u5668\u975e\u5e38\u7b80\u5355\uff1a #version 330 core layout (location = 0) in vec3 aPos; out vec3 TexCoords; uniform mat4 projection; uniform mat4 view; void main() { TexCoords = aPos; gl_Position = projection * view * vec4(aPos, 1.0); } \u6ce8\u610f\uff0c\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5f88\u6709\u610f\u601d\u7684\u90e8\u5206\u662f\uff0c\u6211\u4eec\u5c06\u8f93\u5165\u7684\u4f4d\u7f6e\u5411\u91cf\u4f5c\u4e3a\u8f93\u51fa\u7ed9\u7247\u6bb5\u7740\u8272\u5668\u7684\u7eb9\u7406\u5750\u6807\u3002\u7247\u6bb5\u7740\u8272\u5668\u4f1a\u5c06\u5b83\u4f5c\u4e3a\u8f93\u5165\u6765\u91c7\u6837 samplerCube \uff1a #version 330 core out vec4 FragColor; in vec3 TexCoords; uniform samplerCube skybox; void main() { FragColor = texture(skybox, TexCoords); } \u7247\u6bb5\u7740\u8272\u5668\u975e\u5e38\u76f4\u89c2\u3002\u6211\u4eec\u5c06\u9876\u70b9\u5c5e\u6027\u7684\u4f4d\u7f6e\u5411\u91cf\u4f5c\u4e3a\u7eb9\u7406\u7684\u65b9\u5411\u5411\u91cf\uff0c\u5e76\u4f7f\u7528\u5b83\u4ece\u7acb\u65b9\u4f53\u8d34\u56fe\u4e2d\u91c7\u6837\u7eb9\u7406\u503c\u3002 \u6709\u4e86\u7acb\u65b9\u4f53\u8d34\u56fe\u7eb9\u7406\uff0c\u6e32\u67d3\u5929\u7a7a\u76d2\u73b0\u5728\u5c31\u975e\u5e38\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ed1\u5b9a\u7acb\u65b9\u4f53\u8d34\u56fe\u7eb9\u7406\uff0c skybox \u91c7\u6837\u5668\u5c31\u4f1a\u81ea\u52a8\u586b\u5145\u4e0a\u5929\u7a7a\u76d2\u7acb\u65b9\u4f53\u8d34\u56fe\u4e86\u3002\u7ed8\u5236\u5929\u7a7a\u76d2\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5b83\u53d8\u4e3a\u573a\u666f\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6e32\u67d3\u7684\u7269\u4f53\uff0c\u5e76\u4e14\u7981\u7528\u6df1\u5ea6\u5199\u5165\u3002\u8fd9\u6837\u5b50\u5929\u7a7a\u76d2\u5c31\u4f1a\u6c38\u8fdc\u88ab\u7ed8\u5236\u5728\u5176\u5b83\u7269\u4f53\u7684\u80cc\u540e\u4e86\u3002 glDepthMask(GL_FALSE); skyboxShader.use(); // ... \u8bbe\u7f6e\u89c2\u5bdf\u548c\u6295\u5f71\u77e9\u9635 glBindVertexArray(skyboxVAO); glBindTexture(GL_TEXTURE_CUBE_MAP, cubemapTexture); glDrawArrays(GL_TRIANGLES, 0, 36); glDepthMask(GL_TRUE); // ... \u7ed8\u5236\u5269\u4e0b\u7684\u573a\u666f \u5982\u679c\u4f60\u8fd0\u884c\u4e00\u4e0b\u7684\u8bdd\u4f60\u5c31\u4f1a\u53d1\u73b0\u51fa\u73b0\u4e86\u4e00\u4e9b\u95ee\u9898\u3002\u6211\u4eec\u5e0c\u671b\u5929\u7a7a\u76d2\u662f\u4ee5\u73a9\u5bb6\u4e3a\u4e2d\u5fc3\u7684\uff0c\u8fd9\u6837\u4e0d\u8bba\u73a9\u5bb6\u79fb\u52a8\u4e86\u591a\u8fdc\uff0c\u5929\u7a7a\u76d2\u90fd\u4e0d\u4f1a\u53d8\u8fd1\uff0c\u8ba9\u73a9\u5bb6\u4ea7\u751f\u5468\u56f4\u73af\u5883\u975e\u5e38\u5927\u7684\u5370\u8c61\u3002\u7136\u800c\uff0c\u5f53\u524d\u7684\u89c2\u5bdf\u77e9\u9635\u4f1a\u65cb\u8f6c\u3001\u7f29\u653e\u548c\u4f4d\u79fb\u6765\u53d8\u6362\u5929\u7a7a\u76d2\u7684\u6240\u6709\u4f4d\u7f6e\uff0c\u6240\u4ee5\u5f53\u73a9\u5bb6\u79fb\u52a8\u7684\u65f6\u5019\uff0c\u7acb\u65b9\u4f53\u8d34\u56fe\u4e5f\u4f1a\u79fb\u52a8\uff01\u6211\u4eec\u5e0c\u671b\u79fb\u9664\u89c2\u5bdf\u77e9\u9635\u4e2d\u7684\u4f4d\u79fb\u90e8\u5206\uff0c\u8ba9\u79fb\u52a8\u4e0d\u4f1a\u5f71\u54cd\u5929\u7a7a\u76d2\u7684\u4f4d\u7f6e\u5411\u91cf\u3002 \u4f60\u53ef\u80fd\u8fd8\u8bb0\u5f97\u5728 \u57fa\u7840\u5149\u7167 \u5c0f\u8282\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u53d64x4\u77e9\u9635\u5de6\u4e0a\u89d2\u76843x3\u77e9\u9635\u6765\u79fb\u9664\u53d8\u6362\u77e9\u9635\u7684\u4f4d\u79fb\u90e8\u5206\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u89c2\u5bdf\u77e9\u9635\u8f6c\u6362\u4e3a3x3\u77e9\u9635\uff08\u79fb\u9664\u4f4d\u79fb\uff09\uff0c\u518d\u5c06\u5176\u8f6c\u6362\u56de4x4\u77e9\u9635\uff0c\u6765\u8fbe\u5230\u7c7b\u4f3c\u7684\u6548\u679c\u3002 glm::mat4 view = glm::mat4(glm::mat3(camera.GetViewMatrix())); \u8fd9\u5c06\u79fb\u9664\u4efb\u4f55\u7684\u4f4d\u79fb\uff0c\u4f46\u4fdd\u7559\u65cb\u8f6c\u53d8\u6362\uff0c\u8ba9\u73a9\u5bb6\u4ecd\u7136\u80fd\u591f\u73af\u987e\u573a\u666f\u3002 \u6709\u4e86\u5929\u7a7a\u76d2\uff0c\u6700\u7ec8\u7684\u6548\u679c\u5c31\u662f\u4e00\u4e2a\u770b\u8d77\u6765\u5de8\u5927\u7684\u573a\u666f\u4e86\u3002\u5982\u679c\u4f60\u5728\u7bb1\u5b50\u5468\u56f4\u8f6c\u4e00\u8f6c\uff0c\u4f60\u5c31\u80fd\u7acb\u523b\u611f\u53d7\u5230\u8ddd\u79bb\u611f\uff0c\u6781\u5927\u5730\u63d0\u5347\u4e86\u573a\u666f\u7684\u771f\u5b9e\u5ea6\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a \u8bd5\u4e00\u8bd5\u4e0d\u540c\u7684\u5929\u7a7a\u76d2\uff0c\u770b\u770b\u5b83\u4eec\u662f\u600e\u6837\u5bf9\u573a\u666f\u7684\u89c2\u611f\u4ea7\u751f\u5de8\u5927\u5f71\u54cd\u7684\u3002","title":"\u663e\u793a\u5929\u7a7a\u76d2"},{"location":"04%20Advanced%20OpenGL/06%20Cubemaps/#_6","text":"\u76ee\u524d\u6211\u4eec\u662f\u9996\u5148\u6e32\u67d3\u5929\u7a7a\u76d2\uff0c\u4e4b\u540e\u518d\u6e32\u67d3\u573a\u666f\u4e2d\u7684\u5176\u5b83\u7269\u4f53\u3002\u8fd9\u6837\u5b50\u80fd\u591f\u5de5\u4f5c\uff0c\u4f46\u4e0d\u662f\u975e\u5e38\u9ad8\u6548\u3002\u5982\u679c\u6211\u4eec\u5148\u6e32\u67d3\u5929\u7a7a\u76d2\uff0c\u6211\u4eec\u5c31\u4f1a\u5bf9\u5c4f\u5e55\u4e0a\u7684\u6bcf\u4e00\u4e2a\u50cf\u7d20\u8fd0\u884c\u4e00\u904d\u7247\u6bb5\u7740\u8272\u5668\uff0c\u5373\u4fbf\u53ea\u6709\u4e00\u5c0f\u90e8\u5206\u7684\u5929\u7a7a\u76d2\u6700\u7ec8\u662f\u53ef\u89c1\u7684\u3002\u53ef\u4ee5\u4f7f\u7528 \u63d0\u524d\u6df1\u5ea6\u6d4b\u8bd5 (Early Depth Testing)\u8f7b\u677e\u4e22\u5f03\u6389\u7684\u7247\u6bb5\u80fd\u591f\u8282\u7701\u6211\u4eec\u5f88\u591a\u5b9d\u8d35\u7684\u5e26\u5bbd\u3002 \u6240\u4ee5\uff0c\u6211\u4eec\u5c06\u4f1a\u6700\u540e\u6e32\u67d3\u5929\u7a7a\u76d2\uff0c\u4ee5\u83b7\u5f97\u8f7b\u5fae\u7684\u6027\u80fd\u63d0\u5347\u3002\u8fd9\u6837\u5b50\u7684\u8bdd\uff0c\u6df1\u5ea6\u7f13\u51b2\u5c31\u4f1a\u586b\u5145\u6ee1\u6240\u6709\u7269\u4f53\u7684\u6df1\u5ea6\u503c\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u63d0\u524d\u6df1\u5ea6\u6d4b\u8bd5\u901a\u8fc7\u7684\u5730\u65b9\u6e32\u67d3\u5929\u7a7a\u76d2\u7684\u7247\u6bb5\u5c31\u53ef\u4ee5\u4e86\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u51cf\u5c11\u4e86\u7247\u6bb5\u7740\u8272\u5668\u7684\u8c03\u7528\u3002\u95ee\u9898\u662f\uff0c\u5929\u7a7a\u76d2\u5f88\u53ef\u80fd\u4f1a\u6e32\u67d3\u5728\u6240\u6709\u5176\u4ed6\u5bf9\u8c61\u4e4b\u4e0a\uff0c\u56e0\u4e3a\u5b83\u53ea\u662f\u4e00\u4e2a1x1x1\u7684\u7acb\u65b9\u4f53\uff08\u8bd1\u6ce8\uff1a\u610f\u5473\u7740\u8ddd\u79bb\u6444\u50cf\u673a\u7684\u8ddd\u79bb\u4e5f\u53ea\u67091\uff09\uff0c\u4f1a\u901a\u8fc7\u5927\u90e8\u5206\u7684\u6df1\u5ea6\u6d4b\u8bd5\u3002\u4e0d\u7528\u6df1\u5ea6\u6d4b\u8bd5\u6765\u8fdb\u884c\u6e32\u67d3\u4e0d\u662f\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u4e3a\u5929\u7a7a\u76d2\u5c06\u4f1a\u590d\u5199\u573a\u666f\u4e2d\u7684\u5176\u5b83\u7269\u4f53\u3002\u6211\u4eec\u9700\u8981\u6b3a\u9a97\u6df1\u5ea6\u7f13\u51b2\uff0c\u8ba9\u5b83\u8ba4\u4e3a\u5929\u7a7a\u76d2\u6709\u7740\u6700\u5927\u7684\u6df1\u5ea6\u503c1.0\uff0c\u53ea\u8981\u5b83\u524d\u9762\u6709\u4e00\u4e2a\u7269\u4f53\uff0c\u6df1\u5ea6\u6d4b\u8bd5\u5c31\u4f1a\u5931\u8d25\u3002 \u5728 \u5750\u6807\u7cfb\u7edf \u5c0f\u8282\u4e2d\u6211\u4eec\u8bf4\u8fc7\uff0c \u900f\u89c6\u9664\u6cd5 \u662f\u5728\u9876\u70b9\u7740\u8272\u5668\u8fd0\u884c\u4e4b\u540e\u6267\u884c\u7684\uff0c\u5c06 gl_Position \u7684 xyz \u5750\u6807\u9664\u4ee5w\u5206\u91cf\u3002\u6211\u4eec\u53c8\u4ece \u6df1\u5ea6\u6d4b\u8bd5 \u5c0f\u8282\u4e2d\u77e5\u9053\uff0c\u76f8\u9664\u7ed3\u679c\u7684z\u5206\u91cf\u7b49\u4e8e\u9876\u70b9\u7684\u6df1\u5ea6\u503c\u3002\u4f7f\u7528\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8f93\u51fa\u4f4d\u7f6e\u7684z\u5206\u91cf\u7b49\u4e8e\u5b83\u7684w\u5206\u91cf\uff0c\u8ba9z\u5206\u91cf\u6c38\u8fdc\u7b49\u4e8e1.0\uff0c\u8fd9\u6837\u5b50\u7684\u8bdd\uff0c\u5f53\u900f\u89c6\u9664\u6cd5\u6267\u884c\u4e4b\u540e\uff0cz\u5206\u91cf\u4f1a\u53d8\u4e3a w / w = 1.0 \u3002 void main() { TexCoords = aPos; vec4 pos = projection * view * vec4(aPos, 1.0); gl_Position = pos.xyww; } \u6700\u7ec8\u7684 \u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807 \u5c06\u6c38\u8fdc\u4f1a\u6709\u4e00\u4e2a\u7b49\u4e8e1.0\u7684z\u503c\uff1a\u6700\u5927\u7684\u6df1\u5ea6\u503c\u3002\u7ed3\u679c\u5c31\u662f\u5929\u7a7a\u76d2\u53ea\u4f1a\u5728\u6ca1\u6709\u53ef\u89c1\u7269\u4f53\u7684\u5730\u65b9\u6e32\u67d3\u4e86\uff08\u53ea\u6709\u8fd9\u6837\u624d\u80fd\u901a\u8fc7\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u5176\u5b83\u6240\u6709\u7684\u4e1c\u897f\u90fd\u5728\u5929\u7a7a\u76d2\u524d\u9762\uff09\u3002 \u6211\u4eec\u8fd8\u8981\u6539\u53d8\u4e00\u4e0b\u6df1\u5ea6\u51fd\u6570\uff0c\u5c06\u5b83\u4ece\u9ed8\u8ba4\u7684 GL_LESS \u6539\u4e3a GL_LEQUAL \u3002\u6df1\u5ea6\u7f13\u51b2\u5c06\u4f1a\u586b\u5145\u4e0a\u5929\u7a7a\u76d2\u76841.0\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u5929\u7a7a\u76d2\u5728\u503c\u5c0f\u4e8e\u6216\u7b49\u4e8e\u6df1\u5ea6\u7f13\u51b2\u800c\u4e0d\u662f\u5c0f\u4e8e\u65f6\u901a\u8fc7\u6df1\u5ea6\u6d4b\u8bd5\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u4f18\u5316\u540e\u7684\u6e90\u4ee3\u7801\u3002","title":"\u4f18\u5316"},{"location":"04%20Advanced%20OpenGL/06%20Cubemaps/#_7","text":"\u6211\u4eec\u73b0\u5728\u5c06\u6574\u4e2a\u73af\u5883\u6620\u5c04\u5230\u4e86\u4e00\u4e2a\u7eb9\u7406\u5bf9\u8c61\u4e0a\u4e86\uff0c\u80fd\u5229\u7528\u8fd9\u4e2a\u4fe1\u606f\u7684\u4e0d\u4ec5\u4ec5\u53ea\u6709\u5929\u7a7a\u76d2\u3002\u901a\u8fc7\u4f7f\u7528\u73af\u5883\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u7269\u4f53\u53cd\u5c04\u548c\u6298\u5c04\u7684\u5c5e\u6027\u3002\u8fd9\u6837\u4f7f\u7528\u73af\u5883\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6280\u672f\u53eb\u505a \u73af\u5883\u6620\u5c04 (Environment Mapping)\uff0c\u5176\u4e2d\u6700\u6d41\u884c\u7684\u4e24\u4e2a\u662f \u53cd\u5c04 (Reflection)\u548c \u6298\u5c04 (Refraction)\u3002","title":"\u73af\u5883\u6620\u5c04"},{"location":"04%20Advanced%20OpenGL/06%20Cubemaps/#_8","text":"\u53cd\u5c04\u8fd9\u4e2a\u5c5e\u6027\u8868\u73b0\u4e3a\u7269\u4f53\uff08\u6216\u7269\u4f53\u7684\u4e00\u90e8\u5206\uff09 \u53cd\u5c04 \u5b83\u5468\u56f4\u73af\u5883\uff0c\u5373\u6839\u636e\u89c2\u5bdf\u8005\u7684\u89c6\u89d2\uff0c\u7269\u4f53\u7684\u989c\u8272\u6216\u591a\u6216\u5c11\u7b49\u4e8e\u5b83\u7684\u73af\u5883\u3002\u955c\u5b50\u5c31\u662f\u4e00\u4e2a\u53cd\u5c04\u6027\u7269\u4f53\uff1a\u5b83\u4f1a\u6839\u636e\u89c2\u5bdf\u8005\u7684\u89c6\u89d2\u53cd\u5c04\u5b83\u5468\u56f4\u7684\u73af\u5883\u3002 \u53cd\u5c04\u7684\u539f\u7406\u5e76\u4e0d\u96be\u3002\u4e0b\u9762\u8fd9\u5f20\u56fe\u5c55\u793a\u4e86\u6211\u4eec\u5982\u4f55\u8ba1\u7b97\u53cd\u5c04\u5411\u91cf\uff0c\u5e76\u5982\u4f55\u4f7f\u7528\u8fd9\u4e2a\u5411\u91cf\u6765\u4ece\u7acb\u65b9\u4f53\u8d34\u56fe\u4e2d\u91c7\u6837\uff1a \u6211\u4eec\u6839\u636e\u89c2\u5bdf\u65b9\u5411\u5411\u91cf \\color{gray}{\\bar{I}} \u548c\u7269\u4f53\u7684\u6cd5\u5411\u91cf \\color{red}{\\bar{N}} \uff0c\u6765\u8ba1\u7b97\u53cd\u5c04\u5411\u91cf \\color{green}{\\bar{R}} \u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528GLSL\u5185\u5efa\u7684 reflect \u51fd\u6570\u6765\u8ba1\u7b97\u8fd9\u4e2a\u53cd\u5c04\u5411\u91cf\u3002\u6700\u7ec8\u7684 \\color{green}{\\bar{R}} \u5411\u91cf\u5c06\u4f1a\u4f5c\u4e3a\u7d22\u5f15/\u91c7\u6837\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u65b9\u5411\u5411\u91cf\uff0c\u8fd4\u56de\u73af\u5883\u7684\u989c\u8272\u503c\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u662f\u7269\u4f53\u770b\u8d77\u6765\u53cd\u5c04\u4e86\u5929\u7a7a\u76d2\u3002 \u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u5728\u573a\u666f\u4e2d\u914d\u7f6e\u597d\u5929\u7a7a\u76d2\u4e86\uff0c\u521b\u5efa\u53cd\u5c04\u6548\u679c\u5e76\u4e0d\u4f1a\u5f88\u96be\u3002\u6211\u4eec\u5c06\u4f1a\u6539\u53d8\u7bb1\u5b50\u7684\u7247\u6bb5\u7740\u8272\u5668\uff0c\u8ba9\u7bb1\u5b50\u6709\u53cd\u5c04\u6027\uff1a #version 330 core out vec4 FragColor; in vec3 Normal; in vec3 Position; uniform vec3 cameraPos; uniform samplerCube skybox; void main() { vec3 I = normalize(Position - cameraPos); vec3 R = reflect(I, normalize(Normal)); FragColor = vec4(texture(skybox, R).rgb, 1.0); } \u6211\u4eec\u5148\u8ba1\u7b97\u4e86\u89c2\u5bdf/\u6444\u50cf\u673a\u65b9\u5411\u5411\u91cf I \uff0c\u5e76\u4f7f\u7528\u5b83\u6765\u8ba1\u7b97\u53cd\u5c04\u5411\u91cf R \uff0c\u4e4b\u540e\u6211\u4eec\u5c06\u4f7f\u7528 R \u6765\u4ece\u5929\u7a7a\u76d2\u7acb\u65b9\u4f53\u8d34\u56fe\u4e2d\u91c7\u6837\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u73b0\u5728\u53c8\u6709\u4e86\u7247\u6bb5\u7684\u63d2\u503c Normal \u548c Position \u53d8\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u66f4\u65b0\u4e00\u4e0b\u9876\u70b9\u7740\u8272\u5668\u3002 #version 330 core layout (location = 0) in vec3 aPos; layout (location = 1) in vec3 aNormal; out vec3 Normal; out vec3 Position; uniform mat4 model; uniform mat4 view; uniform mat4 projection; void main() { Normal = mat3(transpose(inverse(model))) * aNormal; Position = vec3(model * vec4(aPos, 1.0)); gl_Position = projection * view * model * vec4(aPos, 1.0); } \u6211\u4eec\u73b0\u5728\u4f7f\u7528\u4e86\u4e00\u4e2a\u6cd5\u5411\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u518d\u6b21\u4f7f\u7528\u6cd5\u7ebf\u77e9\u9635(Normal Matrix)\u6765\u53d8\u6362\u5b83\u4eec\u3002 Position \u8f93\u51fa\u5411\u91cf\u662f\u4e00\u4e2a\u4e16\u754c\u7a7a\u95f4\u7684\u4f4d\u7f6e\u5411\u91cf\u3002\u9876\u70b9\u7740\u8272\u5668\u7684\u8fd9\u4e2a Position \u8f93\u51fa\u5c06\u7528\u6765\u5728\u7247\u6bb5\u7740\u8272\u5668\u5185\u8ba1\u7b97\u89c2\u5bdf\u65b9\u5411\u5411\u91cf\u3002 \u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86\u6cd5\u7ebf\uff0c\u4f60\u8fd8\u9700\u8981\u66f4\u65b0\u4e00\u4e0b \u9876\u70b9\u6570\u636e \uff0c\u5e76\u66f4\u65b0\u5c5e\u6027\u6307\u9488\u3002\u8fd8\u8981\u8bb0\u5f97\u53bb\u8bbe\u7f6e cameraPos \u8fd9\u4e2auniform\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5728\u6e32\u67d3\u7bb1\u5b50\u4e4b\u524d\u5148\u7ed1\u5b9a\u7acb\u65b9\u4f53\u8d34\u56fe\u7eb9\u7406\uff1a glBindVertexArray(cubeVAO); glBindTexture(GL_TEXTURE_CUBE_MAP, skyboxTexture); glDrawArrays(GL_TRIANGLES, 0, 36); \u7f16\u8bd1\u5e76\u8fd0\u884c\u4ee3\u7801\uff0c\u4f60\u5c06\u4f1a\u5f97\u5230\u4e00\u4e2a\u50cf\u662f\u955c\u5b50\u4e00\u6837\u7684\u7bb1\u5b50\u3002\u5468\u56f4\u7684\u5929\u7a7a\u76d2\u88ab\u5b8c\u7f8e\u5730\u53cd\u5c04\u5728\u7bb1\u5b50\u4e0a\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5b8c\u6574\u7684\u6e90\u4ee3\u7801\u3002 \u5f53\u53cd\u5c04\u5e94\u7528\u5230\u4e00\u6574\u4e2a\u7269\u4f53\u4e0a\uff08\u50cf\u662f\u7bb1\u5b50\uff09\u65f6\uff0c\u8fd9\u4e2a\u7269\u4f53\u770b\u8d77\u6765\u5c31\u50cf\u662f\u94a2\u6216\u8005\u94ec\u8fd9\u6837\u7684\u9ad8\u53cd\u5c04\u6027\u6750\u8d28\u3002\u5982\u679c\u6211\u4eec\u52a0\u8f7d \u6a21\u578b\u52a0\u8f7d \u5c0f\u8282\u4e2d\u7684\u80cc\u5305\u6a21\u578b\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u79cd\u6574\u4e2a\u5957\u88c5\u90fd\u662f\u4f7f\u7528\u94ec\u505a\u6210\u7684\u6548\u679c\uff1a \u8fd9\u770b\u8d77\u6765\u975e\u5e38\u68d2\uff0c\u4f46\u5728\u73b0\u5b9e\u4e2d\u5927\u90e8\u5206\u7684\u6a21\u578b\u90fd\u4e0d\u5177\u6709\u5b8c\u5168\u53cd\u5c04\u6027\u3002\u6211\u4eec\u53ef\u4ee5\u5f15\u5165 \u53cd\u5c04\u8d34\u56fe (Reflection Map)\uff0c\u6765\u7ed9\u6a21\u578b\u66f4\u591a\u7684\u7ec6\u8282\u3002\u4e0e\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u8d34\u56fe\u4e00\u6837\uff0c\u53cd\u5c04\u8d34\u56fe\u4e5f\u662f\u53ef\u4ee5\u91c7\u6837\u7684\u7eb9\u7406\u56fe\u50cf\uff0c\u5b83\u51b3\u5b9a\u8fd9\u7247\u6bb5\u7684\u53cd\u5c04\u6027\u3002\u901a\u8fc7\u4f7f\u7528\u53cd\u5c04\u8d34\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u6a21\u578b\u7684\u54ea\u4e9b\u90e8\u5206\u8be5\u4ee5\u4ec0\u4e48\u5f3a\u5ea6\u663e\u793a\u53cd\u5c04\u3002\u5728\u672c\u8282\u7684\u7ec3\u4e60\u4e2d\uff0c\u5c06\u7531\u4f60\u6765\u4e3a\u6211\u4eec\u4e4b\u524d\u521b\u5efa\u7684\u6a21\u578b\u52a0\u8f7d\u5668\u4e2d\u5f15\u5165\u53cd\u5c04\u8d34\u56fe\uff0c\u663e\u8457\u63d0\u5347\u80cc\u5305\u6a21\u578b\u7684\u7ec6\u8282\u3002","title":"\u53cd\u5c04"},{"location":"04%20Advanced%20OpenGL/06%20Cubemaps/#_9","text":"\u73af\u5883\u6620\u5c04\u7684\u53e6\u4e00\u79cd\u5f62\u5f0f\u662f \u6298\u5c04 \uff0c\u5b83\u548c\u53cd\u5c04\u5f88\u76f8\u4f3c\u3002\u6298\u5c04\u662f\u5149\u7ebf\u7531\u4e8e\u4f20\u64ad\u4ecb\u8d28\u7684\u6539\u53d8\u800c\u4ea7\u751f\u7684\u65b9\u5411\u53d8\u5316\u3002\u5728\u5e38\u89c1\u7684\u7c7b\u6c34\u8868\u9762\u4e0a\u6240\u4ea7\u751f\u7684\u73b0\u8c61\u5c31\u662f\u6298\u5c04\uff0c\u5149\u7ebf\u4e0d\u662f\u76f4\u76f4\u5730\u4f20\u64ad\uff0c\u800c\u662f\u5f2f\u66f2\u4e86\u4e00\u70b9\u3002\u5c06\u4f60\u7684\u534a\u53ea\u80f3\u818a\u4f38\u8fdb\u6c34\u91cc\uff0c\u89c2\u5bdf\u51fa\u6765\u7684\u5c31\u662f\u8fd9\u79cd\u6548\u679c\u3002 \u6298\u5c04\u662f\u901a\u8fc7 \u65af\u6d85\u5c14\u5b9a\u5f8b (Snell\u2019s Law)\u6765\u63cf\u8ff0\u7684\uff0c\u4f7f\u7528\u73af\u5883\u8d34\u56fe\u7684\u8bdd\u770b\u8d77\u6765\u50cf\u662f\u8fd9\u6837\uff1a \u540c\u6837\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u89c2\u5bdf\u5411\u91cf \\color{gray}{\\bar{I}} \uff0c\u4e00\u4e2a\u6cd5\u5411\u91cf \\color{red}{\\bar{N}} \uff0c\u800c\u8fd9\u6b21\u662f\u6298\u5c04\u5411\u91cf \\color{green}{\\bar{R}} \u3002\u53ef\u4ee5\u770b\u5230\uff0c\u89c2\u5bdf\u5411\u91cf\u7684\u65b9\u5411\u8f7b\u5fae\u5f2f\u66f2\u4e86\u3002\u5f2f\u6298\u540e\u7684\u5411\u91cf \\color{green}{\\bar{R}} \u5c06\u4f1a\u7528\u6765\u4ece\u7acb\u65b9\u4f53\u8d34\u56fe\u4e2d\u91c7\u6837\u3002 \u6298\u5c04\u53ef\u4ee5\u4f7f\u7528GLSL\u7684\u5185\u5efa refract \u51fd\u6570\u6765\u8f7b\u677e\u5b9e\u73b0\uff0c\u5b83\u9700\u8981\u4e00\u4e2a\u6cd5\u5411\u91cf\u3001\u4e00\u4e2a\u89c2\u5bdf\u65b9\u5411\u548c\u4e24\u4e2a\u6750\u8d28\u4e4b\u95f4\u7684 \u6298\u5c04\u7387 (Refractive Index)\u3002 \u6298\u5c04\u7387\u51b3\u5b9a\u4e86\u6750\u8d28\u4e2d\u5149\u7ebf\u5f2f\u66f2\u7684\u7a0b\u5ea6\uff0c\u6bcf\u4e2a\u6750\u8d28\u90fd\u6709\u81ea\u5df1\u7684\u6298\u5c04\u7387\u3002\u4e00\u4e9b\u6700\u5e38\u89c1\u7684\u6298\u5c04\u7387\u53ef\u4ee5\u5728\u4e0b\u8868\u4e2d\u627e\u5230\uff1a \u6750\u8d28 \u6298\u5c04\u7387 \u7a7a\u6c14 1.00 \u6c34 1.33 \u51b0 1.309 \u73bb\u7483 1.52 \u94bb\u77f3 2.42 \u6211\u4eec\u4f7f\u7528\u8fd9\u4e9b\u6298\u5c04\u7387\u6765\u8ba1\u7b97\u5149\u4f20\u64ad\u7684\u4e24\u79cd\u6750\u8d28\u95f4\u7684\u6bd4\u503c\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u5149\u7ebf/\u89c6\u7ebf\u4ece \u7a7a\u6c14 \u8fdb\u5165 \u73bb\u7483 \uff08\u5982\u679c\u6211\u4eec\u5047\u8bbe\u7bb1\u5b50\u662f\u73bb\u7483\u5236\u7684\uff09\uff0c\u6240\u4ee5\u6bd4\u503c\u4e3a \\frac{1.00}{1.52} = 0.658 \u3002 \u6211\u4eec\u5df2\u7ecf\u7ed1\u5b9a\u4e86\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u63d0\u4f9b\u4e86\u9876\u70b9\u6570\u636e\u548c\u6cd5\u7ebf\uff0c\u5e76\u8bbe\u7f6e\u4e86\u6444\u50cf\u673a\u4f4d\u7f6e\u7684uniform\u3002\u552f\u4e00\u8981\u4fee\u6539\u7684\u5c31\u662f\u7247\u6bb5\u7740\u8272\u5668\uff1a void main() { float ratio = 1.00 / 1.52; vec3 I = normalize(Position - cameraPos); vec3 R = refract(I, normalize(Normal), ratio); FragColor = vec4(texture(skybox, R).rgb, 1.0); } \u901a\u8fc7\u6539\u53d8\u6298\u5c04\u7387\uff0c\u4f60\u53ef\u4ee5\u521b\u5efa\u5b8c\u5168\u4e0d\u540c\u7684\u89c6\u89c9\u6548\u679c\u3002\u7f16\u8bd1\u7a0b\u5e8f\u5e76\u8fd0\u884c\uff0c\u4f46\u7ed3\u679c\u5e76\u4e0d\u662f\u5f88\u6709\u8da3\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u4f7f\u7528\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u7bb1\u5b50\uff0c\u5b83\u4e0d\u592a\u80fd\u663e\u793a\u6298\u5c04\u7684\u6548\u679c\uff0c\u73b0\u5728\u770b\u8d77\u6765\u53ea\u662f\u6709\u70b9\u50cf\u4e00\u4e2a\u653e\u5927\u955c\u3002\u5bf9\u80cc\u5305\u4f7f\u7528\u76f8\u540c\u7684\u7740\u8272\u5668\u5374\u80fd\u591f\u5c55\u73b0\u51fa\u4e86\u6211\u4eec\u671f\u5f85\u7684\u6548\u679c\uff1a\u4e00\u4e2a\u7c7b\u73bb\u7483\u7684\u7269\u4f53\u3002 \u4f60\u53ef\u4ee5\u60f3\u8c61\u51fa\u6709\u4e86\u5149\u7167\u3001\u53cd\u5c04\u3001\u6298\u5c04\u548c\u9876\u70b9\u79fb\u52a8\u7684\u6b63\u786e\u7ec4\u5408\uff0c\u4f60\u53ef\u4ee5\u521b\u5efa\u51fa\u975e\u5e38\u6f02\u4eae\u7684\u6c34\u3002\u6ce8\u610f\uff0c\u5982\u679c\u8981\u60f3\u83b7\u5f97\u7269\u7406\u4e0a\u7cbe\u786e\u7684\u7ed3\u679c\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5728\u5149\u7ebf\u79bb\u5f00\u7269\u4f53\u7684\u65f6\u5019\u518d\u6b21\u6298\u5c04\uff0c\u73b0\u5728\u6211\u4eec\u4f7f\u7528\u7684\u53ea\u662f\u5355\u9762\u6298\u5c04(Single-side Refraction)\uff0c\u4f46\u5b83\u5bf9\u5927\u90e8\u5206\u573a\u5408\u90fd\u662f\u6ca1\u95ee\u9898\u7684\u3002","title":"\u6298\u5c04"},{"location":"04%20Advanced%20OpenGL/06%20Cubemaps/#_10","text":"\u73b0\u5728\u6211\u4eec\u4f7f\u7528\u7684\u90fd\u662f\u9759\u6001\u56fe\u50cf\u7684\u7ec4\u5408\u6765\u4f5c\u4e3a\u5929\u7a7a\u76d2\uff0c\u770b\u8d77\u6765\u5f88\u4e0d\u9519\uff0c\u4f46\u5b83\u6ca1\u6709\u5728\u573a\u666f\u4e2d\u5305\u62ec\u53ef\u79fb\u52a8\u7684\u7269\u4f53\u3002\u6211\u4eec\u4e00\u76f4\u90fd\u6ca1\u6709\u6ce8\u610f\u5230\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u4f7f\u7528\u4e86\u4e00\u4e2a\u7269\u4f53\u3002\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u955c\u5b50\u4e00\u6837\u7684\u7269\u4f53\uff0c\u5468\u56f4\u8fd8\u6709\u591a\u4e2a\u7269\u4f53\uff0c\u955c\u5b50\u4e2d\u53ef\u89c1\u7684\u53ea\u6709\u5929\u7a7a\u76d2\uff0c\u770b\u8d77\u6765\u5c31\u50cf\u5b83\u662f\u573a\u666f\u4e2d\u552f\u4e00\u4e00\u4e2a\u7269\u4f53\u4e00\u6837\u3002 \u901a\u8fc7\u4f7f\u7528\u5e27\u7f13\u51b2\uff0c\u6211\u4eec\u80fd\u591f\u4e3a\u7269\u4f53\u76846\u4e2a\u4e0d\u540c\u89d2\u5ea6\u521b\u5efa\u51fa\u573a\u666f\u7684\u7eb9\u7406\uff0c\u5e76\u5728\u6bcf\u4e2a\u6e32\u67d3\u8fed\u4ee3\u4e2d\u5c06\u5b83\u4eec\u50a8\u5b58\u5230\u4e00\u4e2a\u7acb\u65b9\u4f53\u8d34\u56fe\u4e2d\u3002\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\uff08\u52a8\u6001\u751f\u6210\u7684\uff09\u7acb\u65b9\u4f53\u8d34\u56fe\u6765\u521b\u5efa\u51fa\u66f4\u771f\u5b9e\u7684\uff0c\u5305\u542b\u5176\u5b83\u7269\u4f53\u7684\uff0c\u53cd\u5c04\u548c\u6298\u5c04\u8868\u9762\u4e86\u3002\u8fd9\u5c31\u53eb\u505a \u52a8\u6001\u73af\u5883\u6620\u5c04 (Dynamic Environment Mapping)\uff0c\u56e0\u4e3a\u6211\u4eec\u52a8\u6001\u521b\u5efa\u4e86\u7269\u4f53\u5468\u56f4\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u5e76\u5c06\u5176\u7528\u4f5c\u73af\u5883\u8d34\u56fe\u3002 \u867d\u7136\u5b83\u770b\u8d77\u6765\u5f88\u68d2\uff0c\u4f46\u5b83\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u7f3a\u70b9\uff1a\u6211\u4eec\u9700\u8981\u4e3a\u4f7f\u7528\u73af\u5883\u8d34\u56fe\u7684\u7269\u4f53\u6e32\u67d3\u573a\u666f6\u6b21\uff0c\u8fd9\u662f\u5bf9\u7a0b\u5e8f\u662f\u975e\u5e38\u5927\u7684\u6027\u80fd\u5f00\u9500\u3002\u73b0\u4ee3\u7684\u7a0b\u5e8f\u901a\u5e38\u4f1a\u5c3d\u53ef\u80fd\u4f7f\u7528\u5929\u7a7a\u76d2\uff0c\u5e76\u5728\u53ef\u80fd\u7684\u65f6\u5019\u4f7f\u7528\u9884\u7f16\u8bd1\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u53ea\u8981\u5b83\u4eec\u80fd\u4ea7\u751f\u4e00\u70b9\u52a8\u6001\u73af\u5883\u8d34\u56fe\u7684\u6548\u679c\u3002\u867d\u7136\u52a8\u6001\u73af\u5883\u8d34\u56fe\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u6280\u672f\uff0c\u4f46\u662f\u8981\u60f3\u5728\u4e0d\u964d\u4f4e\u6027\u80fd\u7684\u60c5\u51b5\u4e0b\u8ba9\u5b83\u5de5\u4f5c\u8fd8\u662f\u9700\u8981\u975e\u5e38\u591a\u7684\u6280\u5de7\u7684\u3002","title":"\u52a8\u6001\u73af\u5883\u8d34\u56fe"},{"location":"04%20Advanced%20OpenGL/06%20Cubemaps/#_11","text":"\u5c1d\u8bd5\u5728\u6211\u4eec\u4e4b\u524d\u5728 \u6a21\u578b\u52a0\u8f7d \u5c0f\u8282\u4e2d\u521b\u5efa\u7684\u6a21\u578b\u52a0\u8f7d\u5668\u4e2d\u5f15\u5165\u53cd\u5c04\u8d34\u56fe\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5347\u7ea7\u540e\u6709\u53cd\u5c04\u8d34\u56fe\u7684\u80cc\u5305\u6a21\u578b\u3002\u4ecd\u6709\u51e0\u70b9\u8981\u6ce8\u610f\u7684\uff1a Assimp\u5728\u5927\u591a\u6570\u683c\u5f0f\u4e2d\u90fd\u4e0d\u592a\u559c\u6b22\u53cd\u5c04\u8d34\u56fe\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6b3a\u9a97\u4e00\u4e0b\u5b83\uff0c\u5c06\u53cd\u5c04\u8d34\u56fe\u50a8\u5b58\u4e3a \u6f2b\u53cd\u5c04\u8d34\u56fe \u3002\u4f60\u53ef\u4ee5\u5728\u52a0\u8f7d\u6750\u8d28\u7684\u65f6\u5019\u5c06\u53cd\u5c04\u8d34\u56fe\u7684\u7eb9\u7406\u7c7b\u578b\u8bbe\u7f6e\u4e3a aiTextureType_AMBIENT \u3002 \u6211\u5077\u61d2\u76f4\u63a5\u4f7f\u7528\u955c\u9762\u5149\u7eb9\u7406\u56fe\u50cf\u6765\u521b\u5efa\u4e86\u53cd\u5c04\u8d34\u56fe\uff0c\u6240\u4ee5\u53cd\u5c04\u8d34\u56fe\u5728\u6a21\u578b\u7684\u67d0\u4e9b\u5730\u65b9\u4e0d\u80fd\u51c6\u786e\u5730\u6620\u5c04:)\u3002 \u7531\u4e8e\u6a21\u578b\u52a0\u8f7d\u5668\u672c\u8eab\u5c31\u5df2\u7ecf\u5728\u7740\u8272\u5668\u4e2d\u5360\u7528\u4e863\u4e2a\u7eb9\u7406\u5355\u5143\u4e86\uff0c\u4f60\u9700\u8981\u5c06\u5929\u7a7a\u76d2\u7ed1\u5b9a\u5230\u7b2c4\u4e2a\u7eb9\u7406\u5355\u5143\u4e0a\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u4ece\u540c\u4e00\u4e2a\u7740\u8272\u5668\u4e2d\u5bf9\u5929\u7a7a\u76d2\u91c7\u6837\u3002 \u5982\u679c\u4f60\u90fd\u505a\u5bf9\u4e86\uff0c\u5b83\u4f1a\u770b\u8d77\u6765\u50cf \u8fd9\u6837 \u3002","title":"\u7ec3\u4e60"},{"location":"04%20Advanced%20OpenGL/07%20Advanced%20Data/","text":"\u9ad8\u7ea7\u6570\u636e \u539f\u6587 Advanced Data \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u6211\u4eec\u5728OpenGL\u4e2d\u5927\u91cf\u4f7f\u7528\u7f13\u51b2\u6765\u50a8\u5b58\u6570\u636e\u5df2\u7ecf\u6709\u5f88\u957f\u65f6\u95f4\u4e86\u3002\u8fd9\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u4e00\u4e9b\u5176\u4ed6\u7684\u64cd\u4f5c\u7f13\u51b2\u7684\u65b9\u6cd5\u3002 OpenGL\u4e2d\u7684\u7f13\u51b2\u53ea\u662f\u4e00\u4e2a\u7ba1\u7406\u7279\u5b9a\u5185\u5b58\u5757\u7684\u5bf9\u8c61\uff0c\u6ca1\u6709\u5176\u5b83\u66f4\u591a\u7684\u529f\u80fd\u4e86\u3002\u5728\u6211\u4eec\u5c06\u5b83\u7ed1\u5b9a\u5230\u4e00\u4e2a \u7f13\u51b2\u76ee\u6807 (Buffer Target)\u65f6\uff0c\u6211\u4eec\u624d\u8d4b\u4e88\u4e86\u5176\u610f\u4e49\u3002\u5f53\u6211\u4eec\u7ed1\u5b9a\u4e00\u4e2a\u7f13\u51b2\u5230 GL_ARRAY_BUFFER \u65f6\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u9876\u70b9\u6570\u7ec4\u7f13\u51b2\uff0c\u4f46\u6211\u4eec\u4e5f\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u5176\u7ed1\u5b9a\u5230 GL_ELEMENT_ARRAY_BUFFER \u3002OpenGL\u5185\u90e8\u4f1a\u4e3a\u6bcf\u4e2a\u76ee\u6807\u50a8\u5b58\u4e00\u4e2a\u7f13\u51b2\uff0c\u5e76\u4e14\u4f1a\u6839\u636e\u76ee\u6807\u7684\u4e0d\u540c\uff0c\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5904\u7406\u7f13\u51b2\u3002 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u4e00\u76f4\u662f\u8c03\u7528 glBufferData \u51fd\u6570\u6765\u586b\u5145\u7f13\u51b2\u5bf9\u8c61\u6240\u7ba1\u7406\u7684\u5185\u5b58\uff0c\u8fd9\u4e2a\u51fd\u6570\u4f1a\u5206\u914d\u4e00\u5757GPU\u5185\u5b58\uff0c\u5e76\u5c06\u6570\u636e\u6dfb\u52a0\u5230\u8fd9\u5757\u5185\u5b58\u4e2d\u3002\u5982\u679c\u6211\u4eec\u5c06\u5b83\u7684 data \u53c2\u6570\u8bbe\u7f6e\u4e3a NULL \uff0c\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u5c06\u53ea\u4f1a\u5206\u914d\u5185\u5b58\uff0c\u4f46\u4e0d\u8fdb\u884c\u586b\u5145\u3002\u8fd9\u5728\u6211\u4eec\u9700\u8981 \u9884\u7559 (Reserve)\u7279\u5b9a\u5927\u5c0f\u7684\u5185\u5b58\uff0c\u4e4b\u540e\u56de\u5230\u8fd9\u4e2a\u7f13\u51b2\u4e00\u70b9\u4e00\u70b9\u586b\u5145\u7684\u65f6\u5019\u4f1a\u5f88\u6709\u7528\u3002 \u9664\u4e86\u4f7f\u7528\u4e00\u6b21\u51fd\u6570\u8c03\u7528\u586b\u5145\u6574\u4e2a\u7f13\u51b2\u4e4b\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 glBufferSubData \uff0c\u586b\u5145\u7f13\u51b2\u7684\u7279\u5b9a\u533a\u57df\u3002\u8fd9\u4e2a\u51fd\u6570\u9700\u8981\u4e00\u4e2a\u7f13\u51b2\u76ee\u6807\u3001\u4e00\u4e2a\u504f\u79fb\u91cf\u3001\u6570\u636e\u7684\u5927\u5c0f\u548c\u6570\u636e\u672c\u8eab\u4f5c\u4e3a\u5b83\u7684\u53c2\u6570\u3002\u8fd9\u4e2a\u51fd\u6570\u4e0d\u540c\u7684\u5730\u65b9\u5728\u4e8e\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u504f\u79fb\u91cf\uff0c\u6307\u5b9a\u4ece \u4f55\u5904 \u5f00\u59cb\u586b\u5145\u8fd9\u4e2a\u7f13\u51b2\u3002\u8fd9\u80fd\u591f\u8ba9\u6211\u4eec\u63d2\u5165\u6216\u8005\u66f4\u65b0\u7f13\u51b2\u5185\u5b58\u7684\u67d0\u4e00\u90e8\u5206\u3002\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7f13\u51b2\u9700\u8981\u6709\u8db3\u591f\u7684\u5df2\u5206\u914d\u5185\u5b58\uff0c\u6240\u4ee5\u5bf9\u4e00\u4e2a\u7f13\u51b2\u8c03\u7528 glBufferSubData \u4e4b\u524d\u5fc5\u987b\u8981\u5148\u8c03\u7528 glBufferData \u3002 glBufferSubData(GL_ARRAY_BUFFER, 24, sizeof(data), &data); // \u8303\u56f4\uff1a [24, 24 + sizeof(data)] \u5c06\u6570\u636e\u5bfc\u5165\u7f13\u51b2\u7684\u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\u662f\uff0c\u8bf7\u6c42\u7f13\u51b2\u5185\u5b58\u7684\u6307\u9488\uff0c\u76f4\u63a5\u5c06\u6570\u636e\u590d\u5236\u5230\u7f13\u51b2\u5f53\u4e2d\u3002\u901a\u8fc7\u8c03\u7528 glMapBuffer \u51fd\u6570\uff0cOpenGL\u4f1a\u8fd4\u56de\u5f53\u524d\u7ed1\u5b9a\u7f13\u51b2\u7684\u5185\u5b58\u6307\u9488\uff0c\u4f9b\u6211\u4eec\u64cd\u4f5c\uff1a float data[] = { 0.5f, 1.0f, -0.35f ... }; glBindBuffer(GL_ARRAY_BUFFER, buffer); // \u83b7\u53d6\u6307\u9488 void *ptr = glMapBuffer(GL_ARRAY_BUFFER, GL_WRITE_ONLY); // \u590d\u5236\u6570\u636e\u5230\u5185\u5b58 memcpy(ptr, data, sizeof(data)); // \u8bb0\u5f97\u544a\u8bc9OpenGL\u6211\u4eec\u4e0d\u518d\u9700\u8981\u8fd9\u4e2a\u6307\u9488\u4e86 glUnmapBuffer(GL_ARRAY_BUFFER); \u5f53\u6211\u4eec\u4f7f\u7528 glUnmapBuffer \u51fd\u6570\uff0c\u544a\u8bc9OpenGL\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u6307\u9488\u64cd\u4f5c\u4e4b\u540e\uff0cOpenGL\u5c31\u4f1a\u77e5\u9053\u4f60\u5df2\u7ecf\u5b8c\u6210\u4e86\u3002\u5728\u89e3\u9664\u6620\u5c04(Unmapping)\u4e4b\u540e\uff0c\u6307\u9488\u5c06\u4f1a\u4e0d\u518d\u53ef\u7528\uff0c\u5e76\u4e14\u5982\u679cOpenGL\u80fd\u591f\u6210\u529f\u5c06\u60a8\u7684\u6570\u636e\u6620\u5c04\u5230\u7f13\u51b2\u4e2d\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c06\u4f1a\u8fd4\u56de GL_TRUE \u3002 \u5982\u679c\u8981\u76f4\u63a5\u6620\u5c04\u6570\u636e\u5230\u7f13\u51b2\uff0c\u800c\u4e0d\u4e8b\u5148\u5c06\u5176\u5b58\u50a8\u5230\u4e34\u65f6\u5185\u5b58\u4e2d\uff0c glMapBuffer \u8fd9\u4e2a\u51fd\u6570\u4f1a\u5f88\u6709\u7528\u3002\u6bd4\u5982\u8bf4\uff0c\u4f60\u53ef\u4ee5\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u76f4\u63a5\u5c06\u5b83\u4eec\u590d\u5236\u5230\u7f13\u51b2\u5185\u5b58\u4e2d\u3002 \u5206\u6279\u9876\u70b9\u5c5e\u6027 \u901a\u8fc7\u4f7f\u7528 glVertexAttribPointer \uff0c\u6211\u4eec\u80fd\u591f\u6307\u5b9a\u9876\u70b9\u6570\u7ec4\u7f13\u51b2\u5185\u5bb9\u7684\u5c5e\u6027\u5e03\u5c40\u3002\u5728\u9876\u70b9\u6570\u7ec4\u7f13\u51b2\u4e2d\uff0c\u6211\u4eec\u5bf9\u5c5e\u6027\u8fdb\u884c\u4e86 \u4ea4\u9519 (Interleave)\u5904\u7406\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5c06\u6bcf\u4e00\u4e2a\u9876\u70b9\u7684\u4f4d\u7f6e\u3001\u6cd5\u7ebf\u548c/\u6216\u7eb9\u7406\u5750\u6807\u7d27\u5bc6\u653e\u7f6e\u5728\u4e00\u8d77\u3002\u65e2\u7136\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u5bf9\u7f13\u51b2\u6709\u4e86\u66f4\u591a\u7684\u4e86\u89e3\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u53d6\u53e6\u4e00\u79cd\u65b9\u5f0f\u3002 \u6211\u4eec\u53ef\u4ee5\u505a\u7684\u662f\uff0c\u5c06\u6bcf\u4e00\u79cd\u5c5e\u6027\u7c7b\u578b\u7684\u5411\u91cf\u6570\u636e\u6253\u5305(Batch)\u4e3a\u4e00\u4e2a\u5927\u7684\u533a\u5757\uff0c\u800c\u4e0d\u662f\u5bf9\u5b83\u4eec\u8fdb\u884c\u4ea4\u9519\u50a8\u5b58\u3002\u4e0e\u4ea4\u9519\u5e03\u5c40123123123123\u4e0d\u540c\uff0c\u6211\u4eec\u5c06\u91c7\u7528\u5206\u6279(Batched)\u7684\u65b9\u5f0f111122223333\u3002 \u5f53\u4ece\u6587\u4ef6\u4e2d\u52a0\u8f7d\u9876\u70b9\u6570\u636e\u7684\u65f6\u5019\uff0c\u4f60\u901a\u5e38\u83b7\u53d6\u5230\u7684\u662f\u4e00\u4e2a\u4f4d\u7f6e\u6570\u7ec4\u3001\u4e00\u4e2a\u6cd5\u7ebf\u6570\u7ec4\u548c/\u6216\u4e00\u4e2a\u7eb9\u7406\u5750\u6807\u6570\u7ec4\u3002\u6211\u4eec\u9700\u8981\u82b1\u70b9\u529b\u6c14\u624d\u80fd\u5c06\u8fd9\u4e9b\u6570\u7ec4\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5927\u7684\u4ea4\u9519\u6570\u636e\u6570\u7ec4\u3002\u4f7f\u7528\u5206\u6279\u7684\u65b9\u5f0f\u4f1a\u662f\u66f4\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u4f7f\u7528 glBufferSubData \u51fd\u6570\u5b9e\u73b0\uff1a float positions[] = { ... }; float normals[] = { ... }; float tex[] = { ... }; // \u586b\u5145\u7f13\u51b2 glBufferSubData(GL_ARRAY_BUFFER, 0, sizeof(positions), &positions); glBufferSubData(GL_ARRAY_BUFFER, sizeof(positions), sizeof(normals), &normals); glBufferSubData(GL_ARRAY_BUFFER, sizeof(positions) + sizeof(normals), sizeof(tex), &tex); \u8fd9\u6837\u5b50\u6211\u4eec\u5c31\u80fd\u76f4\u63a5\u5c06\u5c5e\u6027\u6570\u7ec4\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u4f20\u9012\u7ed9\u7f13\u51b2\uff0c\u800c\u4e0d\u9700\u8981\u4e8b\u5148\u5904\u7406\u5b83\u4eec\u4e86\u3002\u6211\u4eec\u4ecd\u53ef\u4ee5\u5c06\u5b83\u4eec\u5408\u5e76\u4e3a\u4e00\u4e2a\u5927\u7684\u6570\u7ec4\uff0c\u518d\u4f7f\u7528 glBufferData \u6765\u586b\u5145\u7f13\u51b2\uff0c\u4f46\u5bf9\u4e8e\u8fd9\u79cd\u5de5\u4f5c\uff0c\u4f7f\u7528 glBufferSubData \u4f1a\u66f4\u5408\u9002\u4e00\u70b9\u3002 \u6211\u4eec\u8fd8\u9700\u8981\u66f4\u65b0\u9876\u70b9\u5c5e\u6027\u6307\u9488\u6765\u53cd\u6620\u8fd9\u4e9b\u6539\u53d8\uff1a glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), 0); glVertexAttribPointer(1, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)(sizeof(positions))); glVertexAttribPointer( 2, 2, GL_FLOAT, GL_FALSE, 2 * sizeof(float), (void*)(sizeof(positions) + sizeof(normals))); \u6ce8\u610f stride \u53c2\u6570\u7b49\u4e8e\u9876\u70b9\u5c5e\u6027\u7684\u5927\u5c0f\uff0c\u56e0\u4e3a\u4e0b\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\u5411\u91cf\u80fd\u57283\u4e2a\uff08\u62162\u4e2a\uff09\u5206\u91cf\u4e4b\u540e\u627e\u5230\u3002 \u8fd9\u7ed9\u4e86\u6211\u4eec\u8bbe\u7f6e\u9876\u70b9\u5c5e\u6027\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u3002\u4f7f\u7528\u54ea\u79cd\u65b9\u6cd5\u90fd\u662f\u53ef\u884c\u7684\uff0c\u5b83\u53ea\u662f\u8bbe\u7f6e\u9876\u70b9\u5c5e\u6027\u7684\u4e00\u79cd\u66f4\u6574\u6d01\u7684\u65b9\u5f0f\u3002\u4f46\u662f\uff0c\u63a8\u8350\u4f7f\u7528\u4ea4\u9519\u65b9\u6cd5\uff0c\u56e0\u4e3a\u8fd9\u6837\u4e00\u6765\uff0c\u6bcf\u4e2a\u9876\u70b9\u7740\u8272\u5668\u8fd0\u884c\u65f6\u6240\u9700\u8981\u7684\u9876\u70b9\u5c5e\u6027\u5728\u5185\u5b58\u4e2d\u4f1a\u66f4\u52a0\u7d27\u5bc6\u5bf9\u9f50\u3002 \u590d\u5236\u7f13\u51b2 \u5f53\u4f60\u7684\u7f13\u51b2\u5df2\u7ecf\u586b\u5145\u597d\u6570\u636e\u4e4b\u540e\uff0c\u4f60\u53ef\u80fd\u4f1a\u60f3\u4e0e\u5176\u5b83\u7684\u7f13\u51b2\u5171\u4eab\u5176\u4e2d\u7684\u6570\u636e\uff0c\u6216\u8005\u60f3\u8981\u5c06\u7f13\u51b2\u7684\u5185\u5bb9\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u7f13\u51b2\u5f53\u4e2d\u3002 glCopyBufferSubData \u80fd\u591f\u8ba9\u6211\u4eec\u76f8\u5bf9\u5bb9\u6613\u5730\u4ece\u4e00\u4e2a\u7f13\u51b2\u4e2d\u590d\u5236\u6570\u636e\u5230\u53e6\u4e00\u4e2a\u7f13\u51b2\u4e2d\u3002\u8fd9\u4e2a\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a void glCopyBufferSubData(GLenum readtarget, GLenum writetarget, GLintptr readoffset, GLintptr writeoffset, GLsizeiptr size); readtarget \u548c writetarget \u53c2\u6570\u9700\u8981\u586b\u5165\u590d\u5236\u6e90\u548c\u590d\u5236\u76ee\u6807\u7684\u7f13\u51b2\u76ee\u6807\u3002\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 VERTEX_ARRAY_BUFFER \u7f13\u51b2\u590d\u5236\u5230 VERTEX_ELEMENT_ARRAY_BUFFER \u7f13\u51b2\uff0c\u5206\u522b\u5c06\u8fd9\u4e9b\u7f13\u51b2\u76ee\u6807\u8bbe\u7f6e\u4e3a\u8bfb\u548c\u5199\u7684\u76ee\u6807\u3002\u5f53\u524d\u7ed1\u5b9a\u5230\u8fd9\u4e9b\u7f13\u51b2\u76ee\u6807\u7684\u7f13\u51b2\u5c06\u4f1a\u88ab\u5f71\u54cd\u5230\u3002 \u4f46\u5982\u679c\u6211\u4eec\u60f3\u8bfb\u5199\u6570\u636e\u7684\u4e24\u4e2a\u4e0d\u540c\u7f13\u51b2\u90fd\u4e3a\u9876\u70b9\u6570\u7ec4\u7f13\u51b2\u8be5\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u4e0d\u80fd\u540c\u65f6\u5c06\u4e24\u4e2a\u7f13\u51b2\u7ed1\u5b9a\u5230\u540c\u4e00\u4e2a\u7f13\u51b2\u76ee\u6807\u4e0a\u3002\u6b63\u662f\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0cOpenGL\u63d0\u4f9b\u7ed9\u6211\u4eec\u53e6\u5916\u4e24\u4e2a\u7f13\u51b2\u76ee\u6807\uff0c\u53eb\u505a GL_COPY_READ_BUFFER \u548c GL_COPY_WRITE_BUFFER \u3002\u6211\u4eec\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u5c06\u9700\u8981\u7684\u7f13\u51b2\u7ed1\u5b9a\u5230\u8fd9\u4e24\u4e2a\u7f13\u51b2\u76ee\u6807\u4e0a\uff0c\u5e76\u5c06\u8fd9\u4e24\u4e2a\u76ee\u6807\u4f5c\u4e3a readtarget \u548c writetarget \u53c2\u6570\u3002 \u63a5\u4e0b\u6765 glCopyBufferSubData \u4f1a\u4ece readtarget \u4e2d\u8bfb\u53d6 size \u5927\u5c0f\u7684\u6570\u636e\uff0c\u5e76\u5c06\u5176\u5199\u5165 writetarget \u7f13\u51b2\u7684 writeoffset \u504f\u79fb\u91cf\u5904\u3002\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u5c55\u793a\u4e86\u5982\u4f55\u590d\u5236\u4e24\u4e2a\u9876\u70b9\u6570\u7ec4\u7f13\u51b2\uff1a glBindBuffer(GL_COPY_READ_BUFFER, vbo1); glBindBuffer(GL_COPY_WRITE_BUFFER, vbo2); glCopyBufferSubData(GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, 0, 0, sizeof(vertexData)); \u6211\u4eec\u4e5f\u53ef\u4ee5\u53ea\u5c06 writetarget \u7f13\u51b2\u7ed1\u5b9a\u4e3a\u65b0\u7684\u7f13\u51b2\u76ee\u6807\u7c7b\u578b\u4e4b\u4e00\uff1a float vertexData[] = { ... }; glBindBuffer(GL_ARRAY_BUFFER, vbo1); glBindBuffer(GL_COPY_WRITE_BUFFER, vbo2); glCopyBufferSubData(GL_ARRAY_BUFFER, GL_COPY_WRITE_BUFFER, 0, 0, sizeof(vertexData)); \u6709\u4e86\u8fd9\u4e9b\u5173\u4e8e\u5982\u4f55\u64cd\u4f5c\u7f13\u51b2\u7684\u989d\u5916\u77e5\u8bc6\uff0c\u6211\u4eec\u5df2\u7ecf\u80fd\u591f\u4ee5\u66f4\u6709\u610f\u601d\u7684\u65b9\u5f0f\u4f7f\u7528\u5b83\u4eec\u4e86\u3002\u5f53\u4f60\u8d8a\u6df1\u5165OpenGL\u65f6\uff0c\u8fd9\u4e9b\u65b0\u7684\u7f13\u51b2\u65b9\u6cd5\u5c06\u4f1a\u53d8\u5f97\u66f4\u52a0\u6709\u7528\u3002\u5728 \u4e0b\u4e00\u8282 \u4e2d\uff0c\u5728\u6211\u4eec\u8ba8\u8bba Uniform\u7f13\u51b2\u5bf9\u8c61 (Uniform Buffer Object)\u65f6\uff0c\u6211\u4eec\u5c06\u4f1a\u5145\u5206\u5229\u7528 glBufferSubData \u3002","title":"\u9ad8\u7ea7\u6570\u636e"},{"location":"04%20Advanced%20OpenGL/07%20Advanced%20Data/#_1","text":"\u539f\u6587 Advanced Data \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u6211\u4eec\u5728OpenGL\u4e2d\u5927\u91cf\u4f7f\u7528\u7f13\u51b2\u6765\u50a8\u5b58\u6570\u636e\u5df2\u7ecf\u6709\u5f88\u957f\u65f6\u95f4\u4e86\u3002\u8fd9\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u4e00\u4e9b\u5176\u4ed6\u7684\u64cd\u4f5c\u7f13\u51b2\u7684\u65b9\u6cd5\u3002 OpenGL\u4e2d\u7684\u7f13\u51b2\u53ea\u662f\u4e00\u4e2a\u7ba1\u7406\u7279\u5b9a\u5185\u5b58\u5757\u7684\u5bf9\u8c61\uff0c\u6ca1\u6709\u5176\u5b83\u66f4\u591a\u7684\u529f\u80fd\u4e86\u3002\u5728\u6211\u4eec\u5c06\u5b83\u7ed1\u5b9a\u5230\u4e00\u4e2a \u7f13\u51b2\u76ee\u6807 (Buffer Target)\u65f6\uff0c\u6211\u4eec\u624d\u8d4b\u4e88\u4e86\u5176\u610f\u4e49\u3002\u5f53\u6211\u4eec\u7ed1\u5b9a\u4e00\u4e2a\u7f13\u51b2\u5230 GL_ARRAY_BUFFER \u65f6\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u9876\u70b9\u6570\u7ec4\u7f13\u51b2\uff0c\u4f46\u6211\u4eec\u4e5f\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u5176\u7ed1\u5b9a\u5230 GL_ELEMENT_ARRAY_BUFFER \u3002OpenGL\u5185\u90e8\u4f1a\u4e3a\u6bcf\u4e2a\u76ee\u6807\u50a8\u5b58\u4e00\u4e2a\u7f13\u51b2\uff0c\u5e76\u4e14\u4f1a\u6839\u636e\u76ee\u6807\u7684\u4e0d\u540c\uff0c\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5904\u7406\u7f13\u51b2\u3002 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u4e00\u76f4\u662f\u8c03\u7528 glBufferData \u51fd\u6570\u6765\u586b\u5145\u7f13\u51b2\u5bf9\u8c61\u6240\u7ba1\u7406\u7684\u5185\u5b58\uff0c\u8fd9\u4e2a\u51fd\u6570\u4f1a\u5206\u914d\u4e00\u5757GPU\u5185\u5b58\uff0c\u5e76\u5c06\u6570\u636e\u6dfb\u52a0\u5230\u8fd9\u5757\u5185\u5b58\u4e2d\u3002\u5982\u679c\u6211\u4eec\u5c06\u5b83\u7684 data \u53c2\u6570\u8bbe\u7f6e\u4e3a NULL \uff0c\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u5c06\u53ea\u4f1a\u5206\u914d\u5185\u5b58\uff0c\u4f46\u4e0d\u8fdb\u884c\u586b\u5145\u3002\u8fd9\u5728\u6211\u4eec\u9700\u8981 \u9884\u7559 (Reserve)\u7279\u5b9a\u5927\u5c0f\u7684\u5185\u5b58\uff0c\u4e4b\u540e\u56de\u5230\u8fd9\u4e2a\u7f13\u51b2\u4e00\u70b9\u4e00\u70b9\u586b\u5145\u7684\u65f6\u5019\u4f1a\u5f88\u6709\u7528\u3002 \u9664\u4e86\u4f7f\u7528\u4e00\u6b21\u51fd\u6570\u8c03\u7528\u586b\u5145\u6574\u4e2a\u7f13\u51b2\u4e4b\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 glBufferSubData \uff0c\u586b\u5145\u7f13\u51b2\u7684\u7279\u5b9a\u533a\u57df\u3002\u8fd9\u4e2a\u51fd\u6570\u9700\u8981\u4e00\u4e2a\u7f13\u51b2\u76ee\u6807\u3001\u4e00\u4e2a\u504f\u79fb\u91cf\u3001\u6570\u636e\u7684\u5927\u5c0f\u548c\u6570\u636e\u672c\u8eab\u4f5c\u4e3a\u5b83\u7684\u53c2\u6570\u3002\u8fd9\u4e2a\u51fd\u6570\u4e0d\u540c\u7684\u5730\u65b9\u5728\u4e8e\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u504f\u79fb\u91cf\uff0c\u6307\u5b9a\u4ece \u4f55\u5904 \u5f00\u59cb\u586b\u5145\u8fd9\u4e2a\u7f13\u51b2\u3002\u8fd9\u80fd\u591f\u8ba9\u6211\u4eec\u63d2\u5165\u6216\u8005\u66f4\u65b0\u7f13\u51b2\u5185\u5b58\u7684\u67d0\u4e00\u90e8\u5206\u3002\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7f13\u51b2\u9700\u8981\u6709\u8db3\u591f\u7684\u5df2\u5206\u914d\u5185\u5b58\uff0c\u6240\u4ee5\u5bf9\u4e00\u4e2a\u7f13\u51b2\u8c03\u7528 glBufferSubData \u4e4b\u524d\u5fc5\u987b\u8981\u5148\u8c03\u7528 glBufferData \u3002 glBufferSubData(GL_ARRAY_BUFFER, 24, sizeof(data), &data); // \u8303\u56f4\uff1a [24, 24 + sizeof(data)] \u5c06\u6570\u636e\u5bfc\u5165\u7f13\u51b2\u7684\u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\u662f\uff0c\u8bf7\u6c42\u7f13\u51b2\u5185\u5b58\u7684\u6307\u9488\uff0c\u76f4\u63a5\u5c06\u6570\u636e\u590d\u5236\u5230\u7f13\u51b2\u5f53\u4e2d\u3002\u901a\u8fc7\u8c03\u7528 glMapBuffer \u51fd\u6570\uff0cOpenGL\u4f1a\u8fd4\u56de\u5f53\u524d\u7ed1\u5b9a\u7f13\u51b2\u7684\u5185\u5b58\u6307\u9488\uff0c\u4f9b\u6211\u4eec\u64cd\u4f5c\uff1a float data[] = { 0.5f, 1.0f, -0.35f ... }; glBindBuffer(GL_ARRAY_BUFFER, buffer); // \u83b7\u53d6\u6307\u9488 void *ptr = glMapBuffer(GL_ARRAY_BUFFER, GL_WRITE_ONLY); // \u590d\u5236\u6570\u636e\u5230\u5185\u5b58 memcpy(ptr, data, sizeof(data)); // \u8bb0\u5f97\u544a\u8bc9OpenGL\u6211\u4eec\u4e0d\u518d\u9700\u8981\u8fd9\u4e2a\u6307\u9488\u4e86 glUnmapBuffer(GL_ARRAY_BUFFER); \u5f53\u6211\u4eec\u4f7f\u7528 glUnmapBuffer \u51fd\u6570\uff0c\u544a\u8bc9OpenGL\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u6307\u9488\u64cd\u4f5c\u4e4b\u540e\uff0cOpenGL\u5c31\u4f1a\u77e5\u9053\u4f60\u5df2\u7ecf\u5b8c\u6210\u4e86\u3002\u5728\u89e3\u9664\u6620\u5c04(Unmapping)\u4e4b\u540e\uff0c\u6307\u9488\u5c06\u4f1a\u4e0d\u518d\u53ef\u7528\uff0c\u5e76\u4e14\u5982\u679cOpenGL\u80fd\u591f\u6210\u529f\u5c06\u60a8\u7684\u6570\u636e\u6620\u5c04\u5230\u7f13\u51b2\u4e2d\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c06\u4f1a\u8fd4\u56de GL_TRUE \u3002 \u5982\u679c\u8981\u76f4\u63a5\u6620\u5c04\u6570\u636e\u5230\u7f13\u51b2\uff0c\u800c\u4e0d\u4e8b\u5148\u5c06\u5176\u5b58\u50a8\u5230\u4e34\u65f6\u5185\u5b58\u4e2d\uff0c glMapBuffer \u8fd9\u4e2a\u51fd\u6570\u4f1a\u5f88\u6709\u7528\u3002\u6bd4\u5982\u8bf4\uff0c\u4f60\u53ef\u4ee5\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u76f4\u63a5\u5c06\u5b83\u4eec\u590d\u5236\u5230\u7f13\u51b2\u5185\u5b58\u4e2d\u3002","title":"\u9ad8\u7ea7\u6570\u636e"},{"location":"04%20Advanced%20OpenGL/07%20Advanced%20Data/#_2","text":"\u901a\u8fc7\u4f7f\u7528 glVertexAttribPointer \uff0c\u6211\u4eec\u80fd\u591f\u6307\u5b9a\u9876\u70b9\u6570\u7ec4\u7f13\u51b2\u5185\u5bb9\u7684\u5c5e\u6027\u5e03\u5c40\u3002\u5728\u9876\u70b9\u6570\u7ec4\u7f13\u51b2\u4e2d\uff0c\u6211\u4eec\u5bf9\u5c5e\u6027\u8fdb\u884c\u4e86 \u4ea4\u9519 (Interleave)\u5904\u7406\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5c06\u6bcf\u4e00\u4e2a\u9876\u70b9\u7684\u4f4d\u7f6e\u3001\u6cd5\u7ebf\u548c/\u6216\u7eb9\u7406\u5750\u6807\u7d27\u5bc6\u653e\u7f6e\u5728\u4e00\u8d77\u3002\u65e2\u7136\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u5bf9\u7f13\u51b2\u6709\u4e86\u66f4\u591a\u7684\u4e86\u89e3\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u53d6\u53e6\u4e00\u79cd\u65b9\u5f0f\u3002 \u6211\u4eec\u53ef\u4ee5\u505a\u7684\u662f\uff0c\u5c06\u6bcf\u4e00\u79cd\u5c5e\u6027\u7c7b\u578b\u7684\u5411\u91cf\u6570\u636e\u6253\u5305(Batch)\u4e3a\u4e00\u4e2a\u5927\u7684\u533a\u5757\uff0c\u800c\u4e0d\u662f\u5bf9\u5b83\u4eec\u8fdb\u884c\u4ea4\u9519\u50a8\u5b58\u3002\u4e0e\u4ea4\u9519\u5e03\u5c40123123123123\u4e0d\u540c\uff0c\u6211\u4eec\u5c06\u91c7\u7528\u5206\u6279(Batched)\u7684\u65b9\u5f0f111122223333\u3002 \u5f53\u4ece\u6587\u4ef6\u4e2d\u52a0\u8f7d\u9876\u70b9\u6570\u636e\u7684\u65f6\u5019\uff0c\u4f60\u901a\u5e38\u83b7\u53d6\u5230\u7684\u662f\u4e00\u4e2a\u4f4d\u7f6e\u6570\u7ec4\u3001\u4e00\u4e2a\u6cd5\u7ebf\u6570\u7ec4\u548c/\u6216\u4e00\u4e2a\u7eb9\u7406\u5750\u6807\u6570\u7ec4\u3002\u6211\u4eec\u9700\u8981\u82b1\u70b9\u529b\u6c14\u624d\u80fd\u5c06\u8fd9\u4e9b\u6570\u7ec4\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5927\u7684\u4ea4\u9519\u6570\u636e\u6570\u7ec4\u3002\u4f7f\u7528\u5206\u6279\u7684\u65b9\u5f0f\u4f1a\u662f\u66f4\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u4f7f\u7528 glBufferSubData \u51fd\u6570\u5b9e\u73b0\uff1a float positions[] = { ... }; float normals[] = { ... }; float tex[] = { ... }; // \u586b\u5145\u7f13\u51b2 glBufferSubData(GL_ARRAY_BUFFER, 0, sizeof(positions), &positions); glBufferSubData(GL_ARRAY_BUFFER, sizeof(positions), sizeof(normals), &normals); glBufferSubData(GL_ARRAY_BUFFER, sizeof(positions) + sizeof(normals), sizeof(tex), &tex); \u8fd9\u6837\u5b50\u6211\u4eec\u5c31\u80fd\u76f4\u63a5\u5c06\u5c5e\u6027\u6570\u7ec4\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u4f20\u9012\u7ed9\u7f13\u51b2\uff0c\u800c\u4e0d\u9700\u8981\u4e8b\u5148\u5904\u7406\u5b83\u4eec\u4e86\u3002\u6211\u4eec\u4ecd\u53ef\u4ee5\u5c06\u5b83\u4eec\u5408\u5e76\u4e3a\u4e00\u4e2a\u5927\u7684\u6570\u7ec4\uff0c\u518d\u4f7f\u7528 glBufferData \u6765\u586b\u5145\u7f13\u51b2\uff0c\u4f46\u5bf9\u4e8e\u8fd9\u79cd\u5de5\u4f5c\uff0c\u4f7f\u7528 glBufferSubData \u4f1a\u66f4\u5408\u9002\u4e00\u70b9\u3002 \u6211\u4eec\u8fd8\u9700\u8981\u66f4\u65b0\u9876\u70b9\u5c5e\u6027\u6307\u9488\u6765\u53cd\u6620\u8fd9\u4e9b\u6539\u53d8\uff1a glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), 0); glVertexAttribPointer(1, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)(sizeof(positions))); glVertexAttribPointer( 2, 2, GL_FLOAT, GL_FALSE, 2 * sizeof(float), (void*)(sizeof(positions) + sizeof(normals))); \u6ce8\u610f stride \u53c2\u6570\u7b49\u4e8e\u9876\u70b9\u5c5e\u6027\u7684\u5927\u5c0f\uff0c\u56e0\u4e3a\u4e0b\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\u5411\u91cf\u80fd\u57283\u4e2a\uff08\u62162\u4e2a\uff09\u5206\u91cf\u4e4b\u540e\u627e\u5230\u3002 \u8fd9\u7ed9\u4e86\u6211\u4eec\u8bbe\u7f6e\u9876\u70b9\u5c5e\u6027\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u3002\u4f7f\u7528\u54ea\u79cd\u65b9\u6cd5\u90fd\u662f\u53ef\u884c\u7684\uff0c\u5b83\u53ea\u662f\u8bbe\u7f6e\u9876\u70b9\u5c5e\u6027\u7684\u4e00\u79cd\u66f4\u6574\u6d01\u7684\u65b9\u5f0f\u3002\u4f46\u662f\uff0c\u63a8\u8350\u4f7f\u7528\u4ea4\u9519\u65b9\u6cd5\uff0c\u56e0\u4e3a\u8fd9\u6837\u4e00\u6765\uff0c\u6bcf\u4e2a\u9876\u70b9\u7740\u8272\u5668\u8fd0\u884c\u65f6\u6240\u9700\u8981\u7684\u9876\u70b9\u5c5e\u6027\u5728\u5185\u5b58\u4e2d\u4f1a\u66f4\u52a0\u7d27\u5bc6\u5bf9\u9f50\u3002","title":"\u5206\u6279\u9876\u70b9\u5c5e\u6027"},{"location":"04%20Advanced%20OpenGL/07%20Advanced%20Data/#_3","text":"\u5f53\u4f60\u7684\u7f13\u51b2\u5df2\u7ecf\u586b\u5145\u597d\u6570\u636e\u4e4b\u540e\uff0c\u4f60\u53ef\u80fd\u4f1a\u60f3\u4e0e\u5176\u5b83\u7684\u7f13\u51b2\u5171\u4eab\u5176\u4e2d\u7684\u6570\u636e\uff0c\u6216\u8005\u60f3\u8981\u5c06\u7f13\u51b2\u7684\u5185\u5bb9\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u7f13\u51b2\u5f53\u4e2d\u3002 glCopyBufferSubData \u80fd\u591f\u8ba9\u6211\u4eec\u76f8\u5bf9\u5bb9\u6613\u5730\u4ece\u4e00\u4e2a\u7f13\u51b2\u4e2d\u590d\u5236\u6570\u636e\u5230\u53e6\u4e00\u4e2a\u7f13\u51b2\u4e2d\u3002\u8fd9\u4e2a\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a void glCopyBufferSubData(GLenum readtarget, GLenum writetarget, GLintptr readoffset, GLintptr writeoffset, GLsizeiptr size); readtarget \u548c writetarget \u53c2\u6570\u9700\u8981\u586b\u5165\u590d\u5236\u6e90\u548c\u590d\u5236\u76ee\u6807\u7684\u7f13\u51b2\u76ee\u6807\u3002\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 VERTEX_ARRAY_BUFFER \u7f13\u51b2\u590d\u5236\u5230 VERTEX_ELEMENT_ARRAY_BUFFER \u7f13\u51b2\uff0c\u5206\u522b\u5c06\u8fd9\u4e9b\u7f13\u51b2\u76ee\u6807\u8bbe\u7f6e\u4e3a\u8bfb\u548c\u5199\u7684\u76ee\u6807\u3002\u5f53\u524d\u7ed1\u5b9a\u5230\u8fd9\u4e9b\u7f13\u51b2\u76ee\u6807\u7684\u7f13\u51b2\u5c06\u4f1a\u88ab\u5f71\u54cd\u5230\u3002 \u4f46\u5982\u679c\u6211\u4eec\u60f3\u8bfb\u5199\u6570\u636e\u7684\u4e24\u4e2a\u4e0d\u540c\u7f13\u51b2\u90fd\u4e3a\u9876\u70b9\u6570\u7ec4\u7f13\u51b2\u8be5\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u4e0d\u80fd\u540c\u65f6\u5c06\u4e24\u4e2a\u7f13\u51b2\u7ed1\u5b9a\u5230\u540c\u4e00\u4e2a\u7f13\u51b2\u76ee\u6807\u4e0a\u3002\u6b63\u662f\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0cOpenGL\u63d0\u4f9b\u7ed9\u6211\u4eec\u53e6\u5916\u4e24\u4e2a\u7f13\u51b2\u76ee\u6807\uff0c\u53eb\u505a GL_COPY_READ_BUFFER \u548c GL_COPY_WRITE_BUFFER \u3002\u6211\u4eec\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u5c06\u9700\u8981\u7684\u7f13\u51b2\u7ed1\u5b9a\u5230\u8fd9\u4e24\u4e2a\u7f13\u51b2\u76ee\u6807\u4e0a\uff0c\u5e76\u5c06\u8fd9\u4e24\u4e2a\u76ee\u6807\u4f5c\u4e3a readtarget \u548c writetarget \u53c2\u6570\u3002 \u63a5\u4e0b\u6765 glCopyBufferSubData \u4f1a\u4ece readtarget \u4e2d\u8bfb\u53d6 size \u5927\u5c0f\u7684\u6570\u636e\uff0c\u5e76\u5c06\u5176\u5199\u5165 writetarget \u7f13\u51b2\u7684 writeoffset \u504f\u79fb\u91cf\u5904\u3002\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u5c55\u793a\u4e86\u5982\u4f55\u590d\u5236\u4e24\u4e2a\u9876\u70b9\u6570\u7ec4\u7f13\u51b2\uff1a glBindBuffer(GL_COPY_READ_BUFFER, vbo1); glBindBuffer(GL_COPY_WRITE_BUFFER, vbo2); glCopyBufferSubData(GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, 0, 0, sizeof(vertexData)); \u6211\u4eec\u4e5f\u53ef\u4ee5\u53ea\u5c06 writetarget \u7f13\u51b2\u7ed1\u5b9a\u4e3a\u65b0\u7684\u7f13\u51b2\u76ee\u6807\u7c7b\u578b\u4e4b\u4e00\uff1a float vertexData[] = { ... }; glBindBuffer(GL_ARRAY_BUFFER, vbo1); glBindBuffer(GL_COPY_WRITE_BUFFER, vbo2); glCopyBufferSubData(GL_ARRAY_BUFFER, GL_COPY_WRITE_BUFFER, 0, 0, sizeof(vertexData)); \u6709\u4e86\u8fd9\u4e9b\u5173\u4e8e\u5982\u4f55\u64cd\u4f5c\u7f13\u51b2\u7684\u989d\u5916\u77e5\u8bc6\uff0c\u6211\u4eec\u5df2\u7ecf\u80fd\u591f\u4ee5\u66f4\u6709\u610f\u601d\u7684\u65b9\u5f0f\u4f7f\u7528\u5b83\u4eec\u4e86\u3002\u5f53\u4f60\u8d8a\u6df1\u5165OpenGL\u65f6\uff0c\u8fd9\u4e9b\u65b0\u7684\u7f13\u51b2\u65b9\u6cd5\u5c06\u4f1a\u53d8\u5f97\u66f4\u52a0\u6709\u7528\u3002\u5728 \u4e0b\u4e00\u8282 \u4e2d\uff0c\u5728\u6211\u4eec\u8ba8\u8bba Uniform\u7f13\u51b2\u5bf9\u8c61 (Uniform Buffer Object)\u65f6\uff0c\u6211\u4eec\u5c06\u4f1a\u5145\u5206\u5229\u7528 glBufferSubData \u3002","title":"\u590d\u5236\u7f13\u51b2"},{"location":"04%20Advanced%20OpenGL/08%20Advanced%20GLSL/","text":"\u9ad8\u7ea7GLSL \u539f\u6587 Advanced GLSL \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 AoZhang \u8fd9\u4e00\u5c0f\u8282\u5e76\u4e0d\u4f1a\u5411\u4f60\u5c55\u793a\u975e\u5e38\u5148\u8fdb\u975e\u5e38\u9177\u7684\u65b0\u7279\u6027\uff0c\u4e5f\u4e0d\u4f1a\u5bf9\u573a\u666f\u7684\u89c6\u89c9\u8d28\u91cf\u6709\u663e\u8457\u7684\u63d0\u9ad8\u3002\u4f46\u662f\uff0c\u8fd9\u4e00\u8282\u4f1a\u6216\u591a\u6216\u5c11\u6d89\u53caGLSL\u7684\u4e00\u4e9b\u6709\u8da3\u7684\u5730\u65b9\u4ee5\u53ca\u4e00\u4e9b\u5f88\u68d2\u7684\u6280\u5de7\uff0c\u5b83\u4eec\u53ef\u80fd\u5728\u4eca\u540e\u4f1a\u5e2e\u52a9\u5230\u4f60\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5b83\u4eec\u5c31\u662f\u5728\u7ec4\u5408\u4f7f\u7528OpenGL\u548cGLSL\u521b\u5efa\u7a0b\u5e8f\u65f6\u7684\u4e00\u4e9b \u6700\u597d\u8981\u77e5\u9053\u7684\u4e1c\u897f \uff0c\u548c\u4e00\u4e9b \u4f1a\u8ba9\u4f60\u751f\u6d3b\u66f4\u52a0\u8f7b\u677e\u7684\u7279\u6027 \u3002 \u6211\u4eec\u5c06\u4f1a\u8ba8\u8bba\u4e00\u4e9b\u6709\u8da3\u7684 \u5185\u5efa\u53d8\u91cf (Built-in Variable)\uff0c\u7ba1\u7406\u7740\u8272\u5668\u8f93\u5165\u548c\u8f93\u51fa\u7684\u65b0\u65b9\u5f0f\u4ee5\u53ca\u4e00\u4e2a\u53eb\u505a Uniform\u7f13\u51b2\u5bf9\u8c61 (Uniform Buffer Object)\u7684\u6709\u7528\u5de5\u5177\u3002 GLSL\u7684\u5185\u5efa\u53d8\u91cf \u7740\u8272\u5668\u90fd\u662f\u6700\u7b80\u5316\u7684\uff0c\u5982\u679c\u9700\u8981\u5f53\u524d\u7740\u8272\u5668\u4ee5\u5916\u5730\u65b9\u7684\u6570\u636e\u7684\u8bdd\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u5c06\u6570\u636e\u4f20\u8fdb\u6765\u3002\u6211\u4eec\u5df2\u7ecf\u5b66\u4f1a\u4f7f\u7528\u9876\u70b9\u5c5e\u6027\u3001uniform\u548c\u91c7\u6837\u5668\u6765\u5b8c\u6210\u8fd9\u4e00\u4efb\u52a1\u4e86\u3002\u7136\u800c\uff0c\u9664\u6b64\u4e4b\u5916\uff0cGLSL\u8fd8\u5b9a\u4e49\u4e86\u53e6\u5916\u51e0\u4e2a\u4ee5 gl_ \u4e3a\u524d\u7f00\u7684\u53d8\u91cf\uff0c\u5b83\u4eec\u80fd\u63d0\u4f9b\u7ed9\u6211\u4eec\u66f4\u591a\u7684\u65b9\u5f0f\u6765\u8bfb\u53d6/\u5199\u5165\u6570\u636e\u3002\u6211\u4eec\u5df2\u7ecf\u5728\u524d\u9762\u6559\u7a0b\u4e2d\u63a5\u89e6\u8fc7\u5176\u4e2d\u7684\u4e24\u4e2a\u4e86\uff1a\u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u51fa\u5411\u91cf gl_Position \uff0c\u548c\u7247\u6bb5\u7740\u8272\u5668\u7684 gl_FragCoord \u3002 \u6211\u4eec\u5c06\u4f1a\u8ba8\u8bba\u51e0\u4e2a\u6709\u8da3\u7684GLSL\u5185\u5efa\u8f93\u5165\u548c\u8f93\u51fa\u53d8\u91cf\uff0c\u5e76\u4f1a\u89e3\u91ca\u5b83\u4eec\u80fd\u591f\u600e\u6837\u5e2e\u52a9\u4f60\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u5c06\u4e0d\u4f1a\u8ba8\u8bbaGLSL\u4e2d\u5b58\u5728\u7684\u6240\u6709\u5185\u5efa\u53d8\u91cf\uff0c\u5982\u679c\u4f60\u60f3\u77e5\u9053\u6240\u6709\u7684\u5185\u5efa\u53d8\u91cf\u7684\u8bdd\uff0c\u8bf7\u67e5\u770bOpenGL\u7684 wiki \u3002 \u9876\u70b9\u7740\u8272\u5668\u53d8\u91cf \u6211\u4eec\u5df2\u7ecf\u89c1\u8fc7 gl_Position \u4e86\uff0c\u5b83\u662f\u9876\u70b9\u7740\u8272\u5668\u7684\u88c1\u526a\u7a7a\u95f4\u8f93\u51fa\u4f4d\u7f6e\u5411\u91cf\u3002\u5982\u679c\u4f60\u60f3\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u4efb\u4f55\u4e1c\u897f\uff0c\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u8bbe\u7f6e gl_Position \u662f\u5fc5\u987b\u7684\u6b65\u9aa4\u3002\u8fd9\u5df2\u7ecf\u662f\u5b83\u7684\u5168\u90e8\u529f\u80fd\u4e86\u3002 gl_PointSize \u6211\u4eec\u80fd\u591f\u9009\u7528\u7684\u5176\u4e2d\u4e00\u4e2a\u56fe\u5143\u662f GL_POINTS \uff0c\u5982\u679c\u4f7f\u7528\u5b83\u7684\u8bdd\uff0c\u6bcf\u4e00\u4e2a\u9876\u70b9\u90fd\u662f\u4e00\u4e2a\u56fe\u5143\uff0c\u90fd\u4f1a\u88ab\u6e32\u67d3\u4e3a\u4e00\u4e2a\u70b9\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7OpenGL\u7684 glPointSize \u51fd\u6570\u6765\u8bbe\u7f6e\u6e32\u67d3\u51fa\u6765\u7684\u70b9\u7684\u5927\u5c0f\uff0c\u4f46\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u4fee\u6539\u8fd9\u4e2a\u503c\u3002 GLSL\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53eb\u505a gl_PointSize \u8f93\u51fa\u53d8\u91cf\uff0c\u5b83\u662f\u4e00\u4e2a float \u53d8\u91cf\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u8bbe\u7f6e\u70b9\u7684\u5bbd\u9ad8\uff08\u50cf\u7d20\uff09\u3002\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u4fee\u6539\u70b9\u7684\u5927\u5c0f\u7684\u8bdd\uff0c\u4f60\u5c31\u80fd\u5bf9\u6bcf\u4e2a\u9876\u70b9\u8bbe\u7f6e\u4e0d\u540c\u7684\u503c\u4e86\u3002 \u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u4fee\u6539\u70b9\u5927\u5c0f\u7684\u529f\u80fd\u9ed8\u8ba4\u662f\u7981\u7528\u7684\uff0c\u5982\u679c\u4f60\u9700\u8981\u542f\u7528\u5b83\u7684\u8bdd\uff0c\u4f60\u9700\u8981\u542f\u7528OpenGL\u7684 GL_PROGRAM_POINT_SIZE \uff1a glEnable(GL_PROGRAM_POINT_SIZE); \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5c31\u662f\u5c06\u70b9\u7684\u5927\u5c0f\u8bbe\u7f6e\u4e3a\u88c1\u526a\u7a7a\u95f4\u4f4d\u7f6e\u7684z\u503c\uff0c\u4e5f\u5c31\u662f\u9876\u70b9\u8ddd\u89c2\u5bdf\u8005\u7684\u8ddd\u79bb\u3002\u70b9\u7684\u5927\u5c0f\u4f1a\u968f\u7740\u89c2\u5bdf\u8005\u8ddd\u9876\u70b9\u8ddd\u79bb\u53d8\u8fdc\u800c\u589e\u5927\u3002 void main() { gl_Position = projection * view * model * vec4(aPos, 1.0); gl_PointSize = gl_Position.z; } \u7ed3\u679c\u5c31\u662f\uff0c\u5f53\u6211\u4eec\u8fdc\u79bb\u8fd9\u4e9b\u70b9\u7684\u65f6\u5019\uff0c\u5b83\u4eec\u4f1a\u53d8\u5f97\u66f4\u5927\uff1a \u4f60\u53ef\u4ee5\u60f3\u5230\uff0c\u5bf9\u6bcf\u4e2a\u9876\u70b9\u4f7f\u7528\u4e0d\u540c\u7684\u70b9\u5927\u5c0f\uff0c\u4f1a\u5728\u7c92\u5b50\u751f\u6210\u4e4b\u7c7b\u7684\u6280\u672f\u4e2d\u5f88\u6709\u610f\u601d\u3002 gl_VertexID gl_Position \u548c gl_PointSize \u90fd\u662f \u8f93\u51fa\u53d8\u91cf \uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u503c\u662f\u4f5c\u4e3a\u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u51fa\u88ab\u8bfb\u53d6\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u5bf9\u5b83\u4eec\u8fdb\u884c\u5199\u5165\uff0c\u6765\u6539\u53d8\u7ed3\u679c\u3002\u9876\u70b9\u7740\u8272\u5668\u8fd8\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6709\u8da3\u7684 \u8f93\u5165\u53d8\u91cf \uff0c\u6211\u4eec\u53ea\u80fd\u5bf9\u5b83\u8fdb\u884c\u8bfb\u53d6\uff0c\u5b83\u53eb\u505a gl_VertexID \u3002 \u6574\u578b\u53d8\u91cf gl_VertexID \u50a8\u5b58\u4e86\u6b63\u5728\u7ed8\u5236\u9876\u70b9\u7684\u5f53\u524dID\u3002\u5f53\uff08\u4f7f\u7528 glDrawElements \uff09\u8fdb\u884c\u7d22\u5f15\u6e32\u67d3\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u53d8\u91cf\u4f1a\u5b58\u50a8\u6b63\u5728\u7ed8\u5236\u9876\u70b9\u7684\u5f53\u524d\u7d22\u5f15\u3002\u5f53\uff08\u4f7f\u7528 glDrawArrays \uff09\u4e0d\u4f7f\u7528\u7d22\u5f15\u8fdb\u884c\u7ed8\u5236\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u53d8\u91cf\u4f1a\u50a8\u5b58\u4ece\u6e32\u67d3\u8c03\u7528\u5f00\u59cb\u7684\u5df2\u5904\u7406\u9876\u70b9\u6570\u91cf\u3002 \u7247\u6bb5\u7740\u8272\u5668\u53d8\u91cf \u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u4e5f\u80fd\u8bbf\u95ee\u5230\u4e00\u4e9b\u6709\u8da3\u7684\u53d8\u91cf\u3002GLSL\u63d0\u4f9b\u7ed9\u6211\u4eec\u4e24\u4e2a\u6709\u8da3\u7684\u8f93\u5165\u53d8\u91cf\uff1a gl_FragCoord \u548c gl_FrontFacing \u3002 gl_FragCoord \u5728\u8ba8\u8bba\u6df1\u5ea6\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5df2\u7ecf\u89c1\u8fc7 gl_FragCoord \u5f88\u591a\u6b21\u4e86\uff0c\u56e0\u4e3a gl_FragCoord \u7684z\u5206\u91cf\u7b49\u4e8e\u5bf9\u5e94\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u3002\u7136\u800c\uff0c\u6211\u4eec\u4e5f\u80fd\u4f7f\u7528\u5b83\u7684x\u548cy\u5206\u91cf\u6765\u5b9e\u73b0\u4e00\u4e9b\u6709\u8da3\u7684\u6548\u679c\u3002 gl_FragCoord \u7684x\u548cy\u5206\u91cf\u662f\u7247\u6bb5\u7684\u7a97\u53e3\u7a7a\u95f4(Window-space)\u5750\u6807\uff0c\u5176\u539f\u70b9\u4e3a\u7a97\u53e3\u7684\u5de6\u4e0b\u89d2\u3002\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528 glViewport \u8bbe\u5b9a\u4e86\u4e00\u4e2a800x600\u7684\u7a97\u53e3\u4e86\uff0c\u6240\u4ee5\u7247\u6bb5\u7a97\u53e3\u7a7a\u95f4\u5750\u6807\u7684x\u5206\u91cf\u5c06\u57280\u5230800\u4e4b\u95f4\uff0cy\u5206\u91cf\u57280\u5230600\u4e4b\u95f4\u3002 \u901a\u8fc7\u5229\u7528\u7247\u6bb5\u7740\u8272\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u7247\u6bb5\u7684\u7a97\u53e3\u5750\u6807\uff0c\u8ba1\u7b97\u51fa\u4e0d\u540c\u7684\u989c\u8272\u3002 gl_FragCoord \u7684\u4e00\u4e2a\u5e38\u89c1\u7528\u5904\u662f\u7528\u4e8e\u5bf9\u6bd4\u4e0d\u540c\u7247\u6bb5\u8ba1\u7b97\u7684\u89c6\u89c9\u8f93\u51fa\u6548\u679c\uff0c\u8fd9\u5728\u6280\u672f\u6f14\u793a\u4e2d\u53ef\u4ee5\u7ecf\u5e38\u770b\u5230\u3002\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u80fd\u591f\u5c06\u5c4f\u5e55\u5206\u6210\u4e24\u90e8\u5206\uff0c\u5728\u7a97\u53e3\u7684\u5de6\u4fa7\u6e32\u67d3\u4e00\u79cd\u8f93\u51fa\uff0c\u5728\u7a97\u53e3\u7684\u53f3\u4fa7\u6e32\u67d3\u53e6\u4e00\u79cd\u8f93\u51fa\u3002\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u7247\u6bb5\u7740\u8272\u5668\u4f1a\u6839\u636e\u7a97\u53e3\u5750\u6807\u8f93\u51fa\u4e0d\u540c\u7684\u989c\u8272\uff1a void main() { if(gl_FragCoord.x < 400) FragColor = vec4(1.0, 0.0, 0.0, 1.0); else FragColor = vec4(0.0, 1.0, 0.0, 1.0); } \u56e0\u4e3a\u7a97\u53e3\u7684\u5bbd\u5ea6\u662f800\u3002\u5f53\u4e00\u4e2a\u50cf\u7d20\u7684x\u5750\u6807\u5c0f\u4e8e400\u65f6\uff0c\u5b83\u4e00\u5b9a\u5728\u7a97\u53e3\u7684\u5de6\u4fa7\uff0c\u6240\u4ee5\u6211\u4eec\u7ed9\u5b83\u4e00\u4e2a\u4e0d\u540c\u7684\u989c\u8272\u3002 \u6211\u4eec\u73b0\u5728\u4f1a\u8ba1\u7b97\u51fa\u4e24\u4e2a\u5b8c\u5168\u4e0d\u540c\u7684\u7247\u6bb5\u7740\u8272\u5668\u7ed3\u679c\uff0c\u5e76\u5c06\u5b83\u4eec\u663e\u793a\u5728\u7a97\u53e3\u7684\u4e24\u4fa7\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u4f60\u53ef\u4ee5\u5c06\u5b83\u7528\u4e8e\u6d4b\u8bd5\u4e0d\u540c\u7684\u5149\u7167\u6280\u5de7\u3002 gl_FrontFacing \u7247\u6bb5\u7740\u8272\u5668\u53e6\u5916\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u8f93\u5165\u53d8\u91cf\u662f gl_FrontFacing \u3002\u5728 \u9762\u5254\u9664 \u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u63d0\u5230OpenGL\u80fd\u591f\u6839\u636e\u9876\u70b9\u7684\u73af\u7ed5\u987a\u5e8f\u6765\u51b3\u5b9a\u4e00\u4e2a\u9762\u662f\u6b63\u5411\u8fd8\u662f\u80cc\u5411\u9762\u3002\u5982\u679c\u6211\u4eec\u4e0d\uff08\u542f\u7528 GL_FACE_CULL \u6765\uff09\u4f7f\u7528\u9762\u5254\u9664\uff0c\u90a3\u4e48 gl_FrontFacing \u5c06\u4f1a\u544a\u8bc9\u6211\u4eec\u5f53\u524d\u7247\u6bb5\u662f\u5c5e\u4e8e\u6b63\u5411\u9762\u7684\u4e00\u90e8\u5206\u8fd8\u662f\u80cc\u5411\u9762\u7684\u4e00\u90e8\u5206\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u6211\u4eec\u80fd\u591f\u5bf9\u6b63\u5411\u9762\u8ba1\u7b97\u51fa\u4e0d\u540c\u7684\u989c\u8272\u3002 gl_FrontFacing \u53d8\u91cf\u662f\u4e00\u4e2a bool \uff0c\u5982\u679c\u5f53\u524d\u7247\u6bb5\u662f\u6b63\u5411\u9762\u7684\u4e00\u90e8\u5206\u90a3\u4e48\u5c31\u662f true \uff0c\u5426\u5219\u5c31\u662f false \u3002\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b50\u521b\u5efa\u4e00\u4e2a\u7acb\u65b9\u4f53\uff0c\u5728\u5185\u90e8\u548c\u5916\u90e8\u4f7f\u7528\u4e0d\u540c\u7684\u7eb9\u7406\uff1a #version 330 core out vec4 FragColor; in vec2 TexCoords; uniform sampler2D frontTexture; uniform sampler2D backTexture; void main() { if(gl_FrontFacing) FragColor = texture(frontTexture, TexCoords); else FragColor = texture(backTexture, TexCoords); } \u5982\u679c\u6211\u4eec\u5f80\u7bb1\u5b50\u91cc\u9762\u770b\uff0c\u5c31\u80fd\u770b\u5230\u4f7f\u7528\u7684\u662f\u4e0d\u540c\u7684\u7eb9\u7406\u3002 \u6ce8\u610f\uff0c\u5982\u679c\u4f60\u5f00\u542f\u4e86\u9762\u5254\u9664\uff0c\u4f60\u5c31\u770b\u4e0d\u5230\u7bb1\u5b50\u5185\u90e8\u7684\u9762\u4e86\uff0c\u6240\u4ee5\u73b0\u5728\u518d\u4f7f\u7528 gl_FrontFacing \u5c31\u6ca1\u6709\u610f\u4e49\u4e86\u3002 gl_FragDepth \u8f93\u5165\u53d8\u91cf gl_FragCoord \u80fd\u8ba9\u6211\u4eec\u8bfb\u53d6\u5f53\u524d\u7247\u6bb5\u7684\u7a97\u53e3\u7a7a\u95f4\u5750\u6807\uff0c\u5e76\u83b7\u53d6\u5b83\u7684\u6df1\u5ea6\u503c\uff0c\u4f46\u662f\u5b83\u662f\u4e00\u4e2a \u53ea\u8bfb (Read-only)\u53d8\u91cf\u3002\u6211\u4eec\u4e0d\u80fd\u4fee\u6539\u7247\u6bb5\u7684\u7a97\u53e3\u7a7a\u95f4\u5750\u6807\uff0c\u4f46\u5b9e\u9645\u4e0a\u4fee\u6539\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u8fd8\u662f\u53ef\u80fd\u7684\u3002GLSL\u63d0\u4f9b\u7ed9\u6211\u4eec\u4e00\u4e2a\u53eb\u505a gl_FragDepth \u7684\u8f93\u51fa\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u5728\u7740\u8272\u5668\u5185\u8bbe\u7f6e\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u3002 \u8981\u60f3\u8bbe\u7f6e\u6df1\u5ea6\u503c\uff0c\u6211\u4eec\u76f4\u63a5\u5199\u5165\u4e00\u4e2a0.0\u52301.0\u4e4b\u95f4\u7684 float \u503c\u5230\u8f93\u51fa\u53d8\u91cf\u5c31\u53ef\u4ee5\u4e86\uff1a gl_FragDepth = 0.0; // \u8fd9\u4e2a\u7247\u6bb5\u73b0\u5728\u7684\u6df1\u5ea6\u503c\u4e3a 0.0 \u5982\u679c\u7740\u8272\u5668\u6ca1\u6709\u5199\u5165\u503c\u5230 gl_FragDepth \uff0c\u5b83\u4f1a\u81ea\u52a8\u53d6\u7528 gl_FragCoord.z \u7684\u503c\u3002 \u7136\u800c\uff0c\u7531\u6211\u4eec\u81ea\u5df1\u8bbe\u7f6e\u6df1\u5ea6\u503c\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u7f3a\u70b9\uff0c\u53ea\u8981\u6211\u4eec\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u5bf9 gl_FragDepth \u8fdb\u884c\u5199\u5165\uff0cOpenGL\u5c31\u4f1a\uff08\u50cf \u6df1\u5ea6\u6d4b\u8bd5 \u5c0f\u8282\u4e2d\u8ba8\u8bba\u7684\u90a3\u6837\uff09\u7981\u7528\u6240\u6709\u7684 \u63d0\u524d\u6df1\u5ea6\u6d4b\u8bd5 (Early Depth Testing)\u3002\u5b83\u88ab\u7981\u7528\u7684\u539f\u56e0\u662f\uff0cOpenGL\u65e0\u6cd5\u5728\u7247\u6bb5\u7740\u8272\u5668\u8fd0\u884c \u4e4b\u524d \u5f97\u77e5\u7247\u6bb5\u5c06\u62e5\u6709\u7684\u6df1\u5ea6\u503c\uff0c\u56e0\u4e3a\u7247\u6bb5\u7740\u8272\u5668\u53ef\u80fd\u4f1a\u5b8c\u5168\u4fee\u6539\u8fd9\u4e2a\u6df1\u5ea6\u503c\u3002 \u5728\u5199\u5165 gl_FragDepth \u65f6\uff0c\u4f60\u5c31\u9700\u8981\u8003\u8651\u5230\u5b83\u6240\u5e26\u6765\u7684\u6027\u80fd\u5f71\u54cd\u3002\u7136\u800c\uff0c\u4eceOpenGL 4.2\u8d77\uff0c\u6211\u4eec\u4ecd\u53ef\u4ee5\u5bf9\u4e24\u8005\u8fdb\u884c\u4e00\u5b9a\u7684\u8c03\u548c\uff0c\u5728\u7247\u6bb5\u7740\u8272\u5668\u7684\u9876\u90e8\u4f7f\u7528 \u6df1\u5ea6\u6761\u4ef6 (Depth Condition)\u91cd\u65b0\u58f0\u660e gl_FragDepth \u53d8\u91cf\uff1a layout (depth_<condition>) out float gl_FragDepth; condition \u53ef\u4ee5\u4e3a\u4e0b\u9762\u7684\u503c\uff1a \u6761\u4ef6 \u63cf\u8ff0 any \u9ed8\u8ba4\u503c\u3002\u63d0\u524d\u6df1\u5ea6\u6d4b\u8bd5\u662f\u7981\u7528\u7684\uff0c\u4f60\u4f1a\u635f\u5931\u5f88\u591a\u6027\u80fd greater \u4f60\u53ea\u80fd\u8ba9\u6df1\u5ea6\u503c\u6bd4 gl_FragCoord.z \u66f4\u5927 less \u4f60\u53ea\u80fd\u8ba9\u6df1\u5ea6\u503c\u6bd4 gl_FragCoord.z \u66f4\u5c0f unchanged \u5982\u679c\u4f60\u8981\u5199\u5165 gl_FragDepth \uff0c\u4f60\u5c06\u53ea\u80fd\u5199\u5165 gl_FragCoord.z \u7684\u503c \u901a\u8fc7\u5c06\u6df1\u5ea6\u6761\u4ef6\u8bbe\u7f6e\u4e3a greater \u6216\u8005 less \uff0cOpenGL\u5c31\u80fd\u5047\u8bbe\u4f60\u53ea\u4f1a\u5199\u5165\u6bd4\u5f53\u524d\u7247\u6bb5\u6df1\u5ea6\u503c\u66f4\u5927\u6216\u8005\u66f4\u5c0f\u7684\u503c\u4e86\u3002\u8fd9\u6837\u5b50\u7684\u8bdd\uff0c\u5f53\u6df1\u5ea6\u503c\u6bd4\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u8981\u5c0f\u7684\u65f6\u5019\uff0cOpenGL\u4ecd\u662f\u80fd\u591f\u8fdb\u884c\u63d0\u524d\u6df1\u5ea6\u6d4b\u8bd5\u7684\u3002 \u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5bf9\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u8fdb\u884c\u4e86\u9012\u589e\uff0c\u4f46\u4ecd\u7136\u4e5f\u4fdd\u7559\u4e86\u4e00\u4e9b\u63d0\u524d\u6df1\u5ea6\u6d4b\u8bd5\uff1a #version 420 core // \u6ce8\u610fGLSL\u7684\u7248\u672c\uff01 out vec4 FragColor; layout (depth_greater) out float gl_FragDepth; void main() { FragColor = vec4(1.0); gl_FragDepth = gl_FragCoord.z + 0.1; } \u6ce8\u610f\u8fd9\u4e2a\u7279\u6027\u53ea\u5728OpenGL 4.2\u7248\u672c\u6216\u4ee5\u4e0a\u624d\u63d0\u4f9b\u3002 \u63a5\u53e3\u5757 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6bcf\u5f53\u6211\u4eec\u5e0c\u671b\u4ece\u9876\u70b9\u7740\u8272\u5668\u5411\u7247\u6bb5\u7740\u8272\u5668\u53d1\u9001\u6570\u636e\u65f6\uff0c\u6211\u4eec\u90fd\u58f0\u660e\u4e86\u51e0\u4e2a\u5bf9\u5e94\u7684\u8f93\u5165/\u8f93\u51fa\u53d8\u91cf\u3002\u5c06\u5b83\u4eec\u4e00\u4e2a\u4e00\u4e2a\u58f0\u660e\u662f\u7740\u8272\u5668\u95f4\u53d1\u9001\u6570\u636e\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u4e86\uff0c\u4f46\u5f53\u7a0b\u5e8f\u53d8\u5f97\u66f4\u5927\u65f6\uff0c\u4f60\u5e0c\u671b\u53d1\u9001\u7684\u53ef\u80fd\u5c31\u4e0d\u53ea\u662f\u51e0\u4e2a\u53d8\u91cf\u4e86\uff0c\u5b83\u8fd8\u53ef\u80fd\u5305\u62ec\u6570\u7ec4\u548c\u7ed3\u6784\u4f53\u3002 \u4e3a\u4e86\u5e2e\u52a9\u6211\u4eec\u7ba1\u7406\u8fd9\u4e9b\u53d8\u91cf\uff0cGLSL\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53eb\u505a \u63a5\u53e3\u5757 (Interface Block)\u7684\u4e1c\u897f\uff0c\u6765\u65b9\u4fbf\u6211\u4eec\u7ec4\u5408\u8fd9\u4e9b\u53d8\u91cf\u3002\u63a5\u53e3\u5757\u7684\u58f0\u660e\u548c struct \u7684\u58f0\u660e\u6709\u70b9\u76f8\u50cf\uff0c\u4e0d\u540c\u7684\u662f\uff0c\u73b0\u5728\u6839\u636e\u5b83\u662f\u4e00\u4e2a\u8f93\u5165\u8fd8\u662f\u8f93\u51fa\u5757(Block)\uff0c\u4f7f\u7528 in \u6216 out \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u7684\u3002 #version 330 core layout (location = 0) in vec3 aPos; layout (location = 1) in vec2 aTexCoords; uniform mat4 model; uniform mat4 view; uniform mat4 projection; out VS_OUT { vec2 TexCoords; } vs_out; void main() { gl_Position = projection * view * model * vec4(aPos, 1.0); vs_out.TexCoords = aTexCoords; } \u8fd9\u6b21\u6211\u4eec\u58f0\u660e\u4e86\u4e00\u4e2a\u53eb\u505a vs_out \u7684\u63a5\u53e3\u5757\uff0c\u5b83\u6253\u5305\u4e86\u6211\u4eec\u5e0c\u671b\u53d1\u9001\u5230\u4e0b\u4e00\u4e2a\u7740\u8272\u5668\u4e2d\u7684\u6240\u6709\u8f93\u51fa\u53d8\u91cf\u3002\u8fd9\u53ea\u662f\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u4f46\u4f60\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e0b\uff0c\u5b83\u80fd\u591f\u5e2e\u52a9\u4f60\u7ba1\u7406\u7740\u8272\u5668\u7684\u8f93\u5165\u548c\u8f93\u51fa\u3002\u5f53\u6211\u4eec\u5e0c\u671b\u5c06\u7740\u8272\u5668\u7684\u8f93\u5165\u6216\u8f93\u51fa\u6253\u5305\u4e3a\u6570\u7ec4\u65f6\uff0c\u5b83\u4e5f\u4f1a\u975e\u5e38\u6709\u7528\uff0c\u6211\u4eec\u5c06\u5728 \u4e0b\u4e00\u8282 \u8ba8\u8bba\u51e0\u4f55\u7740\u8272\u5668(Geometry Shader)\u65f6\u89c1\u5230\u3002 \u4e4b\u540e\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5728\u4e0b\u4e00\u4e2a\u7740\u8272\u5668\uff0c\u5373\u7247\u6bb5\u7740\u8272\u5668\uff0c\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u8f93\u5165\u63a5\u53e3\u5757\u3002 \u5757\u540d (Block Name)\u5e94\u8be5\u662f\u548c\u7740\u8272\u5668\u4e2d\u4e00\u6837\u7684\uff08 VS_OUT \uff09\uff0c\u4f46 \u5b9e\u4f8b\u540d (Instance Name)\uff08\u9876\u70b9\u7740\u8272\u5668\u4e2d\u7528\u7684\u662f vs_out \uff09\u53ef\u4ee5\u662f\u968f\u610f\u7684\uff0c\u4f46\u8981\u907f\u514d\u4f7f\u7528\u8bef\u5bfc\u6027\u7684\u540d\u79f0\uff0c\u6bd4\u5982\u5bf9\u5b9e\u9645\u4e0a\u5305\u542b\u8f93\u5165\u53d8\u91cf\u7684\u63a5\u53e3\u5757\u547d\u540d\u4e3a vs_out \u3002 #version 330 core out vec4 FragColor; in VS_OUT { vec2 TexCoords; } fs_in; uniform sampler2D texture; void main() { FragColor = texture(texture, fs_in.TexCoords); } \u53ea\u8981\u4e24\u4e2a\u63a5\u53e3\u5757\u7684\u540d\u5b57\u4e00\u6837\uff0c\u5b83\u4eec\u5bf9\u5e94\u7684\u8f93\u5165\u548c\u8f93\u51fa\u5c06\u4f1a\u5339\u914d\u8d77\u6765\u3002\u8fd9\u662f\u5e2e\u52a9\u4f60\u7ba1\u7406\u4ee3\u7801\u7684\u53c8\u4e00\u4e2a\u6709\u7528\u7279\u6027\uff0c\u5b83\u5728\u51e0\u4f55\u7740\u8272\u5668\u8fd9\u6837\u7a7f\u63d2\u7279\u5b9a\u7740\u8272\u5668\u9636\u6bb5\u7684\u573a\u666f\u4e0b\u4f1a\u5f88\u6709\u7528\u3002 Uniform\u7f13\u51b2\u5bf9\u8c61 \u6211\u4eec\u5df2\u7ecf\u4f7f\u7528OpenGL\u5f88\u957f\u65f6\u95f4\u4e86\uff0c\u5b66\u4f1a\u4e86\u4e00\u4e9b\u5f88\u9177\u7684\u6280\u5de7\uff0c\u4f46\u4e5f\u9047\u5230\u4e86\u4e00\u4e9b\u5f88\u9ebb\u70e6\u7684\u5730\u65b9\u3002\u6bd4\u5982\u8bf4\uff0c\u5f53\u4f7f\u7528\u591a\u4e8e\u4e00\u4e2a\u7684\u7740\u8272\u5668\u65f6\uff0c\u5c3d\u7ba1\u5927\u90e8\u5206\u7684uniform\u53d8\u91cf\u90fd\u662f\u76f8\u540c\u7684\uff0c\u6211\u4eec\u8fd8\u662f\u9700\u8981\u4e0d\u65ad\u5730\u8bbe\u7f6e\u5b83\u4eec\uff0c\u6240\u4ee5\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u9ebb\u70e6\u5730\u91cd\u590d\u8bbe\u7f6e\u5b83\u4eec\u5462\uff1f OpenGL\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53eb\u505a Uniform\u7f13\u51b2\u5bf9\u8c61 (Uniform Buffer Object)\u7684\u5de5\u5177\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u5b9a\u4e49\u4e00\u7cfb\u5217\u5728\u591a\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\u4e2d\u76f8\u540c\u7684 \u5168\u5c40 Uniform\u53d8\u91cf\u3002\u5f53\u4f7f\u7528Uniform\u7f13\u51b2\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bbe\u7f6e\u76f8\u5173\u7684uniform \u4e00\u6b21 \u3002\u5f53\u7136\uff0c\u6211\u4eec\u4ecd\u9700\u8981\u624b\u52a8\u8bbe\u7f6e\u6bcf\u4e2a\u7740\u8272\u5668\u4e2d\u4e0d\u540c\u7684uniform\u3002\u5e76\u4e14\u521b\u5efa\u548c\u914d\u7f6eUniform\u7f13\u51b2\u5bf9\u8c61\u4f1a\u6709\u4e00\u70b9\u7e41\u7410\u3002 \u56e0\u4e3aUniform\u7f13\u51b2\u5bf9\u8c61\u4ecd\u662f\u4e00\u4e2a\u7f13\u51b2\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 glGenBuffers \u6765\u521b\u5efa\u5b83\uff0c\u5c06\u5b83\u7ed1\u5b9a\u5230 GL_UNIFORM_BUFFER \u7f13\u51b2\u76ee\u6807\uff0c\u5e76\u5c06\u6240\u6709\u76f8\u5173\u7684uniform\u6570\u636e\u5b58\u5165\u7f13\u51b2\u3002\u5728Uniform\u7f13\u51b2\u5bf9\u8c61\u4e2d\u50a8\u5b58\u6570\u636e\u662f\u6709\u4e00\u4e9b\u89c4\u5219\u7684\uff0c\u6211\u4eec\u5c06\u4f1a\u5728\u4e4b\u540e\u8ba8\u8bba\u5b83\u3002\u9996\u5148\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u9876\u70b9\u7740\u8272\u5668\uff0c\u5c06 projection \u548c view \u77e9\u9635\u5b58\u50a8\u5230\u6240\u8c13\u7684 Uniform\u5757 (Uniform Block)\u4e2d\uff1a #version 330 core layout (location = 0) in vec3 aPos; layout (std140) uniform Matrices { mat4 projection; mat4 view; }; uniform mat4 model; void main() { gl_Position = projection * view * model * vec4(aPos, 1.0); } \u5728\u6211\u4eec\u5927\u591a\u6570\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u90fd\u4f1a\u5728\u6bcf\u4e2a\u6e32\u67d3\u8fed\u4ee3\u4e2d\uff0c\u5bf9\u6bcf\u4e2a\u7740\u8272\u5668\u8bbe\u7f6e projection \u548c view Uniform\u77e9\u9635\u3002\u8fd9\u662f\u5229\u7528Uniform\u7f13\u51b2\u5bf9\u8c61\u7684\u4e00\u4e2a\u975e\u5e38\u5b8c\u7f8e\u7684\u4f8b\u5b50\uff0c\u56e0\u4e3a\u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u5b58\u50a8\u8fd9\u4e9b\u77e9\u9635\u4e00\u6b21\u5c31\u53ef\u4ee5\u4e86\u3002 \u8fd9\u91cc\uff0c\u6211\u4eec\u58f0\u660e\u4e86\u4e00\u4e2a\u53eb\u505a Matrices \u7684Uniform\u5757\uff0c\u5b83\u50a8\u5b58\u4e86\u4e24\u4e2a4x4\u77e9\u9635\u3002Uniform\u5757\u4e2d\u7684\u53d8\u91cf\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\uff0c\u4e0d\u9700\u8981\u52a0\u5757\u540d\u4f5c\u4e3a\u524d\u7f00\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5728OpenGL\u4ee3\u7801\u4e2d\u5c06\u8fd9\u4e9b\u77e9\u9635\u503c\u5b58\u5165\u7f13\u51b2\u4e2d\uff0c\u6bcf\u4e2a\u58f0\u660e\u4e86\u8fd9\u4e2aUniform\u5757\u7684\u7740\u8272\u5668\u90fd\u80fd\u591f\u8bbf\u95ee\u8fd9\u4e9b\u77e9\u9635\u3002 \u4f60\u73b0\u5728\u53ef\u80fd\u4f1a\u5728\u60f3 layout (std140) \u8fd9\u4e2a\u8bed\u53e5\u662f\u4ec0\u4e48\u610f\u601d\u3002\u5b83\u7684\u610f\u601d\u662f\u8bf4\uff0c\u5f53\u524d\u5b9a\u4e49\u7684Uniform\u5757\u5bf9\u5b83\u7684\u5185\u5bb9\u4f7f\u7528\u4e00\u4e2a\u7279\u5b9a\u7684\u5185\u5b58\u5e03\u5c40\u3002\u8fd9\u4e2a\u8bed\u53e5\u8bbe\u7f6e\u4e86 Uniform\u5757\u5e03\u5c40 (Uniform Block Layout)\u3002 Uniform\u5757\u5e03\u5c40 Uniform\u5757\u7684\u5185\u5bb9\u662f\u50a8\u5b58\u5728\u4e00\u4e2a\u7f13\u51b2\u5bf9\u8c61\u4e2d\u7684\uff0c\u5b83\u5b9e\u9645\u4e0a\u53ea\u662f\u4e00\u5757\u9884\u7559\u5185\u5b58\u3002\u56e0\u4e3a\u8fd9\u5757\u5185\u5b58\u5e76\u4e0d\u4f1a\u4fdd\u5b58\u5b83\u5177\u4f53\u4fdd\u5b58\u7684\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\u6570\u636e\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u544a\u8bc9OpenGL\u5185\u5b58\u7684\u54ea\u4e00\u90e8\u5206\u5bf9\u5e94\u7740\u7740\u8272\u5668\u4e2d\u7684\u54ea\u4e00\u4e2auniform\u53d8\u91cf\u3002 \u5047\u8bbe\u7740\u8272\u5668\u4e2d\u6709\u4ee5\u4e0b\u7684\u8fd9\u4e2aUniform\u5757\uff1a layout (std140) uniform ExampleBlock { float value; vec3 vector; mat4 matrix; float values[3]; bool boolean; int integer; }; \u6211\u4eec\u9700\u8981\u77e5\u9053\u7684\u662f\u6bcf\u4e2a\u53d8\u91cf\u7684\u5927\u5c0f\uff08\u5b57\u8282\uff09\u548c\uff08\u4ece\u5757\u8d77\u59cb\u4f4d\u7f6e\u7684\uff09\u504f\u79fb\u91cf\uff0c\u6765\u8ba9\u6211\u4eec\u80fd\u591f\u6309\u987a\u5e8f\u5c06\u5b83\u4eec\u653e\u8fdb\u7f13\u51b2\u4e2d\u3002\u6bcf\u4e2a\u5143\u7d20\u7684\u5927\u5c0f\u90fd\u662f\u5728OpenGL\u4e2d\u6709\u6e05\u695a\u5730\u58f0\u660e\u7684\uff0c\u800c\u4e14\u76f4\u63a5\u5bf9\u5e94C++\u6570\u636e\u7c7b\u578b\uff0c\u5176\u4e2d\u5411\u91cf\u548c\u77e9\u9635\u90fd\u662f\u5927\u7684float\u6570\u7ec4\u3002OpenGL\u6ca1\u6709\u58f0\u660e\u7684\u662f\u8fd9\u4e9b\u53d8\u91cf\u95f4\u7684 \u95f4\u8ddd (Spacing)\u3002\u8fd9\u5141\u8bb8\u786c\u4ef6\u80fd\u591f\u5728\u5b83\u8ba4\u4e3a\u5408\u9002\u7684\u4f4d\u7f6e\u653e\u7f6e\u53d8\u91cf\u3002\u6bd4\u5982\u8bf4\uff0c\u4e00\u4e9b\u786c\u4ef6\u53ef\u80fd\u4f1a\u5c06\u4e00\u4e2a vec3 \u653e\u7f6e\u5728 float \u8fb9\u4e0a\u3002\u4e0d\u662f\u6240\u6709\u7684\u786c\u4ef6\u90fd\u80fd\u8fd9\u6837\u5904\u7406\uff0c\u53ef\u80fd\u4f1a\u5728\u9644\u52a0\u8fd9\u4e2a float \u4e4b\u524d\uff0c\u5148\u5c06 vec3 \u586b\u5145(Pad)\u4e3a\u4e00\u4e2a4\u4e2afloat\u7684\u6570\u7ec4\u3002\u8fd9\u4e2a\u7279\u6027\u672c\u8eab\u5f88\u68d2\uff0c\u4f46\u662f\u4f1a\u5bf9\u6211\u4eec\u9020\u6210\u9ebb\u70e6\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cGLSL\u4f1a\u4f7f\u7528\u4e00\u4e2a\u53eb\u505a \u5171\u4eab (Shared)\u5e03\u5c40\u7684Uniform\u5185\u5b58\u5e03\u5c40\uff0c\u5171\u4eab\u662f\u56e0\u4e3a\u4e00\u65e6\u786c\u4ef6\u5b9a\u4e49\u4e86\u504f\u79fb\u91cf\uff0c\u5b83\u4eec\u5728\u591a\u4e2a\u7a0b\u5e8f\u4e2d\u662f \u5171\u4eab \u5e76\u4e00\u81f4\u7684\u3002\u4f7f\u7528\u5171\u4eab\u5e03\u5c40\u65f6\uff0cGLSL\u662f\u53ef\u4ee5\u4e3a\u4e86\u4f18\u5316\u800c\u5bf9uniform\u53d8\u91cf\u7684\u4f4d\u7f6e\u8fdb\u884c\u53d8\u52a8\u7684\uff0c\u53ea\u8981\u53d8\u91cf\u7684\u987a\u5e8f\u4fdd\u6301\u4e0d\u53d8\u3002\u56e0\u4e3a\u6211\u4eec\u65e0\u6cd5\u77e5\u9053\u6bcf\u4e2auniform\u53d8\u91cf\u7684\u504f\u79fb\u91cf\uff0c\u6211\u4eec\u4e5f\u5c31\u4e0d\u77e5\u9053\u5982\u4f55\u51c6\u786e\u5730\u586b\u5145\u6211\u4eec\u7684Uniform\u7f13\u51b2\u4e86\u3002\u6211\u4eec\u80fd\u591f\u4f7f\u7528\u50cf\u662f glGetUniformIndices \u8fd9\u6837\u7684\u51fd\u6570\u6765\u67e5\u8be2\u8fd9\u4e2a\u4fe1\u606f\uff0c\u4f46\u8fd9\u8d85\u51fa\u672c\u8282\u7684\u8303\u56f4\u4e86\u3002 \u867d\u7136\u5171\u4eab\u5e03\u5c40\u7ed9\u4e86\u6211\u4eec\u5f88\u591a\u8282\u7701\u7a7a\u95f4\u7684\u4f18\u5316\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\u67e5\u8be2\u6bcf\u4e2auniform\u53d8\u91cf\u7684\u504f\u79fb\u91cf\uff0c\u8fd9\u4f1a\u4ea7\u751f\u975e\u5e38\u591a\u7684\u5de5\u4f5c\u91cf\u3002\u901a\u5e38\u7684\u505a\u6cd5\u662f\uff0c\u4e0d\u4f7f\u7528\u5171\u4eab\u5e03\u5c40\uff0c\u800c\u662f\u4f7f\u7528 std140 \u5e03\u5c40\u3002std140\u5e03\u5c40\u58f0\u660e\u4e86\u6bcf\u4e2a\u53d8\u91cf\u7684\u504f\u79fb\u91cf\u90fd\u662f\u7531\u4e00\u7cfb\u5217\u89c4\u5219\u6240\u51b3\u5b9a\u7684\uff0c\u8fd9 \u663e\u5f0f\u5730 \u58f0\u660e\u4e86\u6bcf\u4e2a\u53d8\u91cf\u7c7b\u578b\u7684\u5185\u5b58\u5e03\u5c40\u3002\u7531\u4e8e\u8fd9\u662f\u663e\u5f0f\u63d0\u53ca\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u53d8\u91cf\u7684\u504f\u79fb\u91cf\u3002 \u6bcf\u4e2a\u53d8\u91cf\u90fd\u6709\u4e00\u4e2a \u57fa\u51c6\u5bf9\u9f50\u91cf (Base Alignment)\uff0c\u5b83\u7b49\u4e8e\u4e00\u4e2a\u53d8\u91cf\u5728Uniform\u5757\u4e2d\u6240\u5360\u636e\u7684\u7a7a\u95f4\uff08\u5305\u62ec\u586b\u5145\u91cf(Padding)\uff09\uff0c\u8fd9\u4e2a\u57fa\u51c6\u5bf9\u9f50\u91cf\u662f\u4f7f\u7528std140\u5e03\u5c40\u7684\u89c4\u5219\u8ba1\u7b97\u51fa\u6765\u7684\u3002\u63a5\u4e0b\u6765\uff0c\u5bf9\u6bcf\u4e2a\u53d8\u91cf\uff0c\u6211\u4eec\u518d\u8ba1\u7b97\u5b83\u7684 \u5bf9\u9f50\u504f\u79fb\u91cf (Aligned Offset)\uff0c\u5b83\u662f\u4e00\u4e2a\u53d8\u91cf\u4ece\u5757\u8d77\u59cb\u4f4d\u7f6e\u7684\u5b57\u8282\u504f\u79fb\u91cf\u3002\u4e00\u4e2a\u53d8\u91cf\u7684\u5bf9\u9f50\u5b57\u8282\u504f\u79fb\u91cf \u5fc5\u987b \u7b49\u4e8e\u57fa\u51c6\u5bf9\u9f50\u91cf\u7684\u500d\u6570\u3002 \u5e03\u5c40\u89c4\u5219\u7684\u539f\u6587\u53ef\u4ee5\u5728OpenGL\u7684Uniform\u7f13\u51b2\u89c4\u8303 \u8fd9\u91cc \u627e\u5230\uff0c\u4f46\u6211\u4eec\u5c06\u4f1a\u5728\u4e0b\u9762\u5217\u51fa\u6700\u5e38\u89c1\u7684\u89c4\u5219\u3002GLSL\u4e2d\u7684\u6bcf\u4e2a\u53d8\u91cf\uff0c\u6bd4\u5982\u8bf4 int \u3001 float \u548c bool \uff0c\u90fd\u88ab\u5b9a\u4e49\u4e3a4\u5b57\u8282\u91cf\u3002\u6bcf4\u4e2a\u5b57\u8282\u5c06\u4f1a\u7528\u4e00\u4e2a N \u6765\u8868\u793a\u3002 \u7c7b\u578b \u5e03\u5c40\u89c4\u5219 \u6807\u91cf\uff0c\u6bd4\u5982 int \u548c bool \u6bcf\u4e2a\u6807\u91cf\u7684\u57fa\u51c6\u5bf9\u9f50\u91cf\u4e3aN\u3002 \u5411\u91cf 2N\u6216\u80054N\u3002\u8fd9\u610f\u5473\u7740 vec3 \u7684\u57fa\u51c6\u5bf9\u9f50\u91cf\u4e3a4N\u3002 \u6807\u91cf\u6216\u5411\u91cf\u7684\u6570\u7ec4 \u6bcf\u4e2a\u5143\u7d20\u7684\u57fa\u51c6\u5bf9\u9f50\u91cf\u4e0e vec4 \u7684\u76f8\u540c\u3002 \u77e9\u9635 \u50a8\u5b58\u4e3a\u5217\u5411\u91cf\u7684\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5411\u91cf\u7684\u57fa\u51c6\u5bf9\u9f50\u91cf\u4e0e vec4 \u7684\u76f8\u540c\u3002 \u7ed3\u6784\u4f53 \u7b49\u4e8e\u6240\u6709\u5143\u7d20\u6839\u636e\u89c4\u5219\u8ba1\u7b97\u540e\u7684\u5927\u5c0f\uff0c\u4f46\u4f1a\u586b\u5145\u5230 vec4 \u5927\u5c0f\u7684\u500d\u6570\u3002 \u548cOpenGL\u5927\u591a\u6570\u7684\u89c4\u8303\u4e00\u6837\uff0c\u4f7f\u7528\u4f8b\u5b50\u5c31\u80fd\u66f4\u5bb9\u6613\u5730\u7406\u89e3\u3002\u6211\u4eec\u4f1a\u4f7f\u7528\u4e4b\u524d\u5f15\u5165\u7684\u90a3\u4e2a\u53eb\u505a ExampleBlock \u7684Uniform\u5757\uff0c\u5e76\u4f7f\u7528std140\u5e03\u5c40\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u6210\u5458\u7684\u5bf9\u9f50\u504f\u79fb\u91cf\uff1a layout (std140) uniform ExampleBlock { // \u57fa\u51c6\u5bf9\u9f50\u91cf // \u5bf9\u9f50\u504f\u79fb\u91cf float value; // 4 // 0 vec3 vector; // 16 // 16 (\u5fc5\u987b\u662f16\u7684\u500d\u6570\uff0c\u6240\u4ee5 4->16) mat4 matrix; // 16 // 32 (\u5217 0) // 16 // 48 (\u5217 1) // 16 // 64 (\u5217 2) // 16 // 80 (\u5217 3) float values[3]; // 16 // 96 (values[0]) // 16 // 112 (values[1]) // 16 // 128 (values[2]) bool boolean; // 4 // 144 int integer; // 4 // 148 }; \u4f5c\u4e3a\u7ec3\u4e60\uff0c\u5c1d\u8bd5\u53bb\u81ea\u5df1\u8ba1\u7b97\u4e00\u4e0b\u504f\u79fb\u91cf\uff0c\u5e76\u548c\u8868\u683c\u8fdb\u884c\u5bf9\u6bd4\u3002\u4f7f\u7528\u8ba1\u7b97\u540e\u7684\u504f\u79fb\u91cf\u503c\uff0c\u6839\u636estd140\u5e03\u5c40\u7684\u89c4\u5219\uff0c\u6211\u4eec\u5c31\u80fd\u4f7f\u7528\u50cf\u662f glBufferSubData \u7684\u51fd\u6570\u5c06\u53d8\u91cf\u6570\u636e\u6309\u7167\u504f\u79fb\u91cf\u586b\u5145\u8fdb\u7f13\u51b2\u4e2d\u4e86\u3002\u867d\u7136std140\u5e03\u5c40\u4e0d\u662f\u6700\u9ad8\u6548\u7684\u5e03\u5c40\uff0c\u4f46\u5b83\u4fdd\u8bc1\u4e86\u5185\u5b58\u5e03\u5c40\u5728\u6bcf\u4e2a\u58f0\u660e\u4e86\u8fd9\u4e2aUniform\u5757\u7684\u7a0b\u5e8f\u4e2d\u662f\u4e00\u81f4\u7684\u3002 \u901a\u8fc7\u5728Uniform\u5757\u5b9a\u4e49\u4e4b\u524d\u6dfb\u52a0 layout (std140) \u8bed\u53e5\uff0c\u6211\u4eec\u544a\u8bc9OpenGL\u8fd9\u4e2aUniform\u5757\u4f7f\u7528\u7684\u662fstd140\u5e03\u5c40\u3002\u9664\u6b64\u4e4b\u5916\u8fd8\u53ef\u4ee5\u9009\u62e9\u4e24\u4e2a\u5e03\u5c40\uff0c\u4f46\u5b83\u4eec\u90fd\u9700\u8981\u6211\u4eec\u5728\u586b\u5145\u7f13\u51b2\u4e4b\u524d\u5148\u67e5\u8be2\u6bcf\u4e2a\u504f\u79fb\u91cf\u3002\u6211\u4eec\u5df2\u7ecf\u89c1\u8fc7 shared \u5e03\u5c40\u4e86\uff0c\u5269\u4e0b\u7684\u4e00\u4e2a\u5e03\u5c40\u662f packed \u3002\u5f53\u4f7f\u7528\u7d27\u51d1(Packed)\u5e03\u5c40\u65f6\uff0c\u662f\u4e0d\u80fd\u4fdd\u8bc1\u8fd9\u4e2a\u5e03\u5c40\u5728\u6bcf\u4e2a\u7a0b\u5e8f\u4e2d\u4fdd\u6301\u4e0d\u53d8\u7684\uff08\u5373\u975e\u5171\u4eab\uff09\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u7f16\u8bd1\u5668\u53bb\u5c06uniform\u53d8\u91cf\u4eceUniform\u5757\u4e2d\u4f18\u5316\u6389\uff0c\u8fd9\u5728\u6bcf\u4e2a\u7740\u8272\u5668\u4e2d\u90fd\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u3002 \u4f7f\u7528Uniform\u7f13\u51b2 \u6211\u4eec\u5df2\u7ecf\u8ba8\u8bba\u4e86\u5982\u4f55\u5728\u7740\u8272\u5668\u4e2d\u5b9a\u4e49Uniform\u5757\uff0c\u5e76\u8bbe\u5b9a\u5b83\u4eec\u7684\u5185\u5b58\u5e03\u5c40\u4e86\uff0c\u4f46\u6211\u4eec\u8fd8\u6ca1\u6709\u8ba8\u8bba\u8be5\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u8c03\u7528 glGenBuffers \uff0c\u521b\u5efa\u4e00\u4e2aUniform\u7f13\u51b2\u5bf9\u8c61\u3002\u4e00\u65e6\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u7f13\u51b2\u5bf9\u8c61\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5b83\u7ed1\u5b9a\u5230 GL_UNIFORM_BUFFER \u76ee\u6807\uff0c\u5e76\u8c03\u7528 glBufferData \uff0c\u5206\u914d\u8db3\u591f\u7684\u5185\u5b58\u3002 unsigned int uboExampleBlock; glGenBuffers(1, &uboExampleBlock); glBindBuffer(GL_UNIFORM_BUFFER, uboExampleBlock); glBufferData(GL_UNIFORM_BUFFER, 152, NULL, GL_STATIC_DRAW); // \u5206\u914d152\u5b57\u8282\u7684\u5185\u5b58 glBindBuffer(GL_UNIFORM_BUFFER, 0); \u73b0\u5728\uff0c\u6bcf\u5f53\u6211\u4eec\u9700\u8981\u5bf9\u7f13\u51b2\u66f4\u65b0\u6216\u8005\u63d2\u5165\u6570\u636e\uff0c\u6211\u4eec\u90fd\u4f1a\u7ed1\u5b9a\u5230 uboExampleBlock \uff0c\u5e76\u4f7f\u7528 glBufferSubData \u6765\u66f4\u65b0\u5b83\u7684\u5185\u5b58\u3002\u6211\u4eec\u53ea\u9700\u8981\u66f4\u65b0\u8fd9\u4e2aUniform\u7f13\u51b2\u4e00\u6b21\uff0c\u6240\u6709\u4f7f\u7528\u8fd9\u4e2a\u7f13\u51b2\u7684\u7740\u8272\u5668\u5c31\u90fd\u4f7f\u7528\u7684\u662f\u66f4\u65b0\u540e\u7684\u6570\u636e\u4e86\u3002\u4f46\u662f\uff0c\u5982\u4f55\u624d\u80fd\u8ba9OpenGL\u77e5\u9053\u54ea\u4e2aUniform\u7f13\u51b2\u5bf9\u5e94\u7684\u662f\u54ea\u4e2aUniform\u5757\u5462\uff1f \u5728OpenGL\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e9b \u7ed1\u5b9a\u70b9 (Binding Point)\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e00\u4e2aUniform\u7f13\u51b2\u94fe\u63a5\u81f3\u5b83\u3002\u5728\u521b\u5efaUniform\u7f13\u51b2\u4e4b\u540e\uff0c\u6211\u4eec\u5c06\u5b83\u7ed1\u5b9a\u5230\u5176\u4e2d\u4e00\u4e2a\u7ed1\u5b9a\u70b9\u4e0a\uff0c\u5e76\u5c06\u7740\u8272\u5668\u4e2d\u7684Uniform\u5757\u7ed1\u5b9a\u5230\u76f8\u540c\u7684\u7ed1\u5b9a\u70b9\uff0c\u628a\u5b83\u4eec\u8fde\u63a5\u5230\u4e00\u8d77\u3002\u4e0b\u9762\u7684\u8fd9\u4e2a\u56fe\u793a\u5c55\u793a\u4e86\u8fd9\u4e2a\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed1\u5b9a\u591a\u4e2aUniform\u7f13\u51b2\u5230\u4e0d\u540c\u7684\u7ed1\u5b9a\u70b9\u4e0a\u3002\u56e0\u4e3a\u7740\u8272\u5668A\u548c\u7740\u8272\u5668B\u90fd\u6709\u4e00\u4e2a\u94fe\u63a5\u5230\u7ed1\u5b9a\u70b90\u7684Uniform\u5757\uff0c\u5b83\u4eec\u7684Uniform\u5757\u5c06\u4f1a\u5171\u4eab\u76f8\u540c\u7684uniform\u6570\u636e\uff0c uboMatrices \uff0c\u524d\u63d0\u6761\u4ef6\u662f\u4e24\u4e2a\u7740\u8272\u5668\u90fd\u5b9a\u4e49\u4e86\u76f8\u540c\u7684 Matrices Uniform\u5757\u3002 \u4e3a\u4e86\u5c06Uniform\u5757\u7ed1\u5b9a\u5230\u4e00\u4e2a\u7279\u5b9a\u7684\u7ed1\u5b9a\u70b9\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u8c03\u7528 glUniformBlockBinding \u51fd\u6570\uff0c\u5b83\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u7a0b\u5e8f\u5bf9\u8c61\uff0c\u4e4b\u540e\u662f\u4e00\u4e2aUniform\u5757\u7d22\u5f15\u548c\u94fe\u63a5\u5230\u7684\u7ed1\u5b9a\u70b9\u3002 Uniform\u5757\u7d22\u5f15 (Uniform Block Index)\u662f\u7740\u8272\u5668\u4e2d\u5df2\u5b9a\u4e49Uniform\u5757\u7684\u4f4d\u7f6e\u503c\u7d22\u5f15\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 glGetUniformBlockIndex \u6765\u83b7\u53d6\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a\u7a0b\u5e8f\u5bf9\u8c61\u548cUniform\u5757\u7684\u540d\u79f0\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4ee5\u4e0b\u65b9\u5f0f\u5c06\u56fe\u793a\u4e2d\u7684 Lights Uniform\u5757\u94fe\u63a5\u5230\u7ed1\u5b9a\u70b92\uff1a unsigned int lights_index = glGetUniformBlockIndex(shaderA.ID, \"Lights\"); glUniformBlockBinding(shaderA.ID, lights_index, 2); \u6ce8\u610f\u6211\u4eec\u9700\u8981\u5bf9 \u6bcf\u4e2a \u7740\u8272\u5668\u91cd\u590d\u8fd9\u4e00\u6b65\u9aa4\u3002 Important \u4eceOpenGL 4.2\u7248\u672c\u8d77\uff0c\u4f60\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u5e03\u5c40\u6807\u8bc6\u7b26\uff0c\u663e\u5f0f\u5730\u5c06Uniform\u5757\u7684\u7ed1\u5b9a\u70b9\u50a8\u5b58\u5728\u7740\u8272\u5668\u4e2d\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u518d\u8c03\u7528 glGetUniformBlockIndex \u548c glUniformBlockBinding \u4e86\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u663e\u5f0f\u5730\u8bbe\u7f6e\u4e86 Lights Uniform\u5757\u7684\u7ed1\u5b9a\u70b9\u3002 layout(std140, binding = 2) uniform Lights { ... }; \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u7ed1\u5b9aUniform\u7f13\u51b2\u5bf9\u8c61\u5230\u76f8\u540c\u7684\u7ed1\u5b9a\u70b9\u4e0a\uff0c\u8fd9\u53ef\u4ee5\u4f7f\u7528 glBindBufferBase \u6216 glBindBufferRange \u6765\u5b8c\u6210\u3002 glBindBufferBase(GL_UNIFORM_BUFFER, 2, uboExampleBlock); // \u6216 glBindBufferRange(GL_UNIFORM_BUFFER, 2, uboExampleBlock, 0, 152); glBindbufferBase \u9700\u8981\u4e00\u4e2a\u76ee\u6807\uff0c\u4e00\u4e2a\u7ed1\u5b9a\u70b9\u7d22\u5f15\u548c\u4e00\u4e2aUniform\u7f13\u51b2\u5bf9\u8c61\u4f5c\u4e3a\u5b83\u7684\u53c2\u6570\u3002\u8fd9\u4e2a\u51fd\u6570\u5c06 uboExampleBlock \u94fe\u63a5\u5230\u7ed1\u5b9a\u70b92\u4e0a\uff0c\u81ea\u6b64\uff0c\u7ed1\u5b9a\u70b9\u7684\u4e24\u7aef\u90fd\u94fe\u63a5\u4e0a\u4e86\u3002\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 glBindBufferRange \u51fd\u6570\uff0c\u5b83\u9700\u8981\u4e00\u4e2a\u9644\u52a0\u7684\u504f\u79fb\u91cf\u548c\u5927\u5c0f\u53c2\u6570\uff0c\u8fd9\u6837\u5b50\u4f60\u53ef\u4ee5\u7ed1\u5b9aUniform\u7f13\u51b2\u7684\u7279\u5b9a\u4e00\u90e8\u5206\u5230\u7ed1\u5b9a\u70b9\u4e2d\u3002\u901a\u8fc7\u4f7f\u7528 glBindBufferRange \u51fd\u6570\uff0c\u4f60\u53ef\u4ee5\u8ba9\u591a\u4e2a\u4e0d\u540c\u7684Uniform\u5757\u7ed1\u5b9a\u5230\u540c\u4e00\u4e2aUniform\u7f13\u51b2\u5bf9\u8c61\u4e0a\u3002 \u73b0\u5728\uff0c\u6240\u6709\u7684\u4e1c\u897f\u90fd\u914d\u7f6e\u5b8c\u6bd5\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u5411Uniform\u7f13\u51b2\u4e2d\u6dfb\u52a0\u6570\u636e\u4e86\u3002\u53ea\u8981\u6211\u4eec\u9700\u8981\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 glBufferSubData \u51fd\u6570\uff0c\u7528\u4e00\u4e2a\u5b57\u8282\u6570\u7ec4\u6dfb\u52a0\u6240\u6709\u7684\u6570\u636e\uff0c\u6216\u8005\u66f4\u65b0\u7f13\u51b2\u7684\u4e00\u90e8\u5206\u3002\u8981\u60f3\u66f4\u65b0uniform\u53d8\u91cf boolean \uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4ee5\u4e0b\u65b9\u5f0f\u66f4\u65b0Uniform\u7f13\u51b2\u5bf9\u8c61\uff1a glBindBuffer(GL_UNIFORM_BUFFER, uboExampleBlock); int b = true; // GLSL\u4e2d\u7684bool\u662f4\u5b57\u8282\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5b83\u5b58\u4e3a\u4e00\u4e2ainteger glBufferSubData(GL_UNIFORM_BUFFER, 144, 4, &b); glBindBuffer(GL_UNIFORM_BUFFER, 0); \u540c\u6837\u7684\u6b65\u9aa4\u4e5f\u80fd\u5e94\u7528\u5230Uniform\u5757\u4e2d\u5176\u5b83\u7684uniform\u53d8\u91cf\u4e0a\uff0c\u4f46\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7684\u8303\u56f4\u53c2\u6570\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50 \u6240\u4ee5\uff0c\u6211\u4eec\u6765\u5c55\u793a\u4e00\u4e2a\u771f\u6b63\u4f7f\u7528Uniform\u7f13\u51b2\u5bf9\u8c61\u7684\u4f8b\u5b50\u3002\u5982\u679c\u6211\u4eec\u56de\u5934\u770b\u770b\u4e4b\u524d\u6240\u6709\u7684\u4ee3\u7801\u4f8b\u5b50\uff0c\u6211\u4eec\u4e0d\u65ad\u5730\u5728\u4f7f\u75283\u4e2a\u77e9\u9635\uff1a\u6295\u5f71\u3001\u89c2\u5bdf\u548c\u6a21\u578b\u77e9\u9635\u3002\u5728\u6240\u6709\u7684\u8fd9\u4e9b\u77e9\u9635\u4e2d\uff0c\u53ea\u6709\u6a21\u578b\u77e9\u9635\u4f1a\u9891\u7e41\u53d8\u52a8\u3002\u5982\u679c\u6211\u4eec\u6709\u591a\u4e2a\u7740\u8272\u5668\u4f7f\u7528\u4e86\u8fd9\u540c\u4e00\u7ec4\u77e9\u9635\uff0c\u90a3\u4e48\u4f7f\u7528Uniform\u7f13\u51b2\u5bf9\u8c61\u53ef\u80fd\u4f1a\u66f4\u597d\u3002 \u6211\u4eec\u4f1a\u5c06\u6295\u5f71\u548c\u6a21\u578b\u77e9\u9635\u5b58\u50a8\u5230\u4e00\u4e2a\u53eb\u505a Matrices \u7684Uniform\u5757\u4e2d\u3002\u6211\u4eec\u4e0d\u4f1a\u5c06\u6a21\u578b\u77e9\u9635\u5b58\u5728\u8fd9\u91cc\uff0c\u56e0\u4e3a\u6a21\u578b\u77e9\u9635\u5728\u4e0d\u540c\u7684\u7740\u8272\u5668\u4e2d\u4f1a\u4e0d\u65ad\u6539\u53d8\uff0c\u6240\u4ee5\u4f7f\u7528Uniform\u7f13\u51b2\u5bf9\u8c61\u5e76\u4e0d\u4f1a\u5e26\u6765\u4ec0\u4e48\u597d\u5904\u3002 #version 330 core layout (location = 0) in vec3 aPos; layout (std140) uniform Matrices { mat4 projection; mat4 view; }; uniform mat4 model; void main() { gl_Position = projection * view * model * vec4(aPos, 1.0); } \u8fd9\u91cc\u6ca1\u4ec0\u4e48\u7279\u522b\u7684\uff0c\u9664\u4e86\u6211\u4eec\u73b0\u5728\u4f7f\u7528\u7684\u662f\u4e00\u4e2astd140\u5e03\u5c40\u7684Uniform\u5757\u3002\u6211\u4eec\u5c06\u5728\u4f8b\u5b50\u7a0b\u5e8f\u4e2d\uff0c\u663e\u793a4\u4e2a\u7acb\u65b9\u4f53\uff0c\u6bcf\u4e2a\u7acb\u65b9\u4f53\u90fd\u662f\u4f7f\u7528\u4e0d\u540c\u7684\u7740\u8272\u5668\u7a0b\u5e8f\u6e32\u67d3\u7684\u3002\u8fd94\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\u5c06\u4f7f\u7528\u76f8\u540c\u7684\u9876\u70b9\u7740\u8272\u5668\uff0c\u4f46\u4f7f\u7528\u7684\u662f\u4e0d\u540c\u7684\u7247\u6bb5\u7740\u8272\u5668\uff0c\u6bcf\u4e2a\u7740\u8272\u5668\u4f1a\u8f93\u51fa\u4e0d\u540c\u7684\u989c\u8272\u3002 \u9996\u5148\uff0c\u6211\u4eec\u5c06\u9876\u70b9\u7740\u8272\u5668\u7684Uniform\u5757\u8bbe\u7f6e\u4e3a\u7ed1\u5b9a\u70b90\u3002\u6ce8\u610f\u6211\u4eec\u9700\u8981\u5bf9\u6bcf\u4e2a\u7740\u8272\u5668\u90fd\u8bbe\u7f6e\u4e00\u904d\u3002 unsigned int uniformBlockIndexRed = glGetUniformBlockIndex(shaderRed.ID, \"Matrices\"); unsigned int uniformBlockIndexGreen = glGetUniformBlockIndex(shaderGreen.ID, \"Matrices\"); unsigned int uniformBlockIndexBlue = glGetUniformBlockIndex(shaderBlue.ID, \"Matrices\"); unsigned int uniformBlockIndexYellow = glGetUniformBlockIndex(shaderYellow.ID, \"Matrices\"); glUniformBlockBinding(shaderRed.ID, uniformBlockIndexRed, 0); glUniformBlockBinding(shaderGreen.ID, uniformBlockIndexGreen, 0); glUniformBlockBinding(shaderBlue.ID, uniformBlockIndexBlue, 0); glUniformBlockBinding(shaderYellow.ID, uniformBlockIndexYellow, 0); \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u521b\u5efaUniform\u7f13\u51b2\u5bf9\u8c61\u672c\u8eab\uff0c\u5e76\u5c06\u5176\u7ed1\u5b9a\u5230\u7ed1\u5b9a\u70b90\uff1a unsigned int uboMatrices glGenBuffers(1, &uboMatrices); glBindBuffer(GL_UNIFORM_BUFFER, uboMatrices); glBufferData(GL_UNIFORM_BUFFER, 2 * sizeof(glm::mat4), NULL, GL_STATIC_DRAW); glBindBuffer(GL_UNIFORM_BUFFER, 0); glBindBufferRange(GL_UNIFORM_BUFFER, 0, uboMatrices, 0, 2 * sizeof(glm::mat4)); \u9996\u5148\u6211\u4eec\u4e3a\u7f13\u51b2\u5206\u914d\u4e86\u8db3\u591f\u7684\u5185\u5b58\uff0c\u5b83\u7b49\u4e8e glm::mat4 \u5927\u5c0f\u7684\u4e24\u500d\u3002GLM\u77e9\u9635\u7c7b\u578b\u7684\u5927\u5c0f\u76f4\u63a5\u5bf9\u5e94\u4e8eGLSL\u4e2d\u7684 mat4 \u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u7f13\u51b2\u4e2d\u7684\u7279\u5b9a\u8303\u56f4\uff08\u5728\u8fd9\u91cc\u662f\u6574\u4e2a\u7f13\u51b2\uff09\u94fe\u63a5\u5230\u7ed1\u5b9a\u70b90\u3002 \u5269\u4f59\u7684\u5c31\u662f\u586b\u5145\u8fd9\u4e2a\u7f13\u51b2\u4e86\u3002\u5982\u679c\u6211\u4eec\u5c06\u6295\u5f71\u77e9\u9635\u7684 \u89c6\u91ce (Field of View)\u503c\u4fdd\u6301\u4e0d\u53d8\uff08\u6240\u4ee5\u6444\u50cf\u673a\u5c31\u6ca1\u6709\u7f29\u653e\u4e86\uff09\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u5176\u5728\u7a0b\u5e8f\u4e2d\u5b9a\u4e49\u4e00\u6b21\u2014\u2014\u8fd9\u4e5f\u610f\u5473\u7740\u6211\u4eec\u53ea\u9700\u8981\u5c06\u5b83\u63d2\u5165\u5230\u7f13\u51b2\u4e2d\u4e00\u6b21\u3002\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u4e3a\u7f13\u51b2\u5bf9\u8c61\u5206\u914d\u4e86\u8db3\u591f\u7684\u5185\u5b58\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 glBufferSubData \u5728\u8fdb\u5165\u6e32\u67d3\u5faa\u73af\u4e4b\u524d\u5b58\u50a8\u6295\u5f71\u77e9\u9635\uff1a glm::mat4 projection = glm::perspective(glm::radians(45.0f), (float)width/(float)height, 0.1f, 100.0f); glBindBuffer(GL_UNIFORM_BUFFER, uboMatrices); glBufferSubData(GL_UNIFORM_BUFFER, 0, sizeof(glm::mat4), glm::value_ptr(projection)); glBindBuffer(GL_UNIFORM_BUFFER, 0); \u8fd9\u91cc\u6211\u4eec\u5c06\u6295\u5f71\u77e9\u9635\u50a8\u5b58\u5728Uniform\u7f13\u51b2\u7684\u524d\u534a\u90e8\u5206\u3002\u5728\u6bcf\u6b21\u6e32\u67d3\u8fed\u4ee3\u4e2d\u7ed8\u5236\u7269\u4f53\u4e4b\u524d\uff0c\u6211\u4eec\u4f1a\u5c06\u89c2\u5bdf\u77e9\u9635\u66f4\u65b0\u5230\u7f13\u51b2\u7684\u540e\u534a\u90e8\u5206\uff1a glm::mat4 view = camera.GetViewMatrix(); glBindBuffer(GL_UNIFORM_BUFFER, uboMatrices); glBufferSubData(GL_UNIFORM_BUFFER, sizeof(glm::mat4), sizeof(glm::mat4), glm::value_ptr(view)); glBindBuffer(GL_UNIFORM_BUFFER, 0); Uniform\u7f13\u51b2\u5bf9\u8c61\u7684\u90e8\u5206\u5c31\u7ed3\u675f\u4e86\u3002\u6bcf\u4e2a\u5305\u542b\u4e86 Matrices \u8fd9\u4e2aUniform\u5757\u7684\u9876\u70b9\u7740\u8272\u5668\u5c06\u4f1a\u5305\u542b\u50a8\u5b58\u5728 uboMatrices \u4e2d\u7684\u6570\u636e\u3002\u6240\u4ee5\uff0c\u5982\u679c\u6211\u4eec\u73b0\u5728\u8981\u75284\u4e2a\u4e0d\u540c\u7684\u7740\u8272\u5668\u7ed8\u52364\u4e2a\u7acb\u65b9\u4f53\uff0c\u5b83\u4eec\u7684\u6295\u5f71\u548c\u89c2\u5bdf\u77e9\u9635\u90fd\u4f1a\u662f\u4e00\u6837\u7684\u3002 glBindVertexArray(cubeVAO); shaderRed.use(); glm::mat4 model; model = glm::translate(model, glm::vec3(-0.75f, 0.75f, 0.0f)); // \u79fb\u52a8\u5230\u5de6\u4e0a\u89d2 shaderRed.setMat4(\"model\", model); glDrawArrays(GL_TRIANGLES, 0, 36); // ... \u7ed8\u5236\u7eff\u8272\u7acb\u65b9\u4f53 // ... \u7ed8\u5236\u84dd\u8272\u7acb\u65b9\u4f53 // ... \u7ed8\u5236\u9ec4\u8272\u7acb\u65b9\u4f53 \u552f\u4e00\u9700\u8981\u8bbe\u7f6e\u7684uniform\u53ea\u5269 model uniform\u4e86\u3002\u5728\u50cf\u8fd9\u6837\u7684\u573a\u666f\u4e2d\u4f7f\u7528Uniform\u7f13\u51b2\u5bf9\u8c61\u4f1a\u8ba9\u6211\u4eec\u5728\u6bcf\u4e2a\u7740\u8272\u5668\u4e2d\u90fd\u5269\u4e0b\u4e00\u4e9buniform\u8c03\u7528\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u4f1a\u662f\u8fd9\u6837\u7684\uff1a \u56e0\u4e3a\u4fee\u6539\u4e86\u6a21\u578b\u77e9\u9635\uff0c\u6bcf\u4e2a\u7acb\u65b9\u4f53\u90fd\u79fb\u52a8\u5230\u4e86\u7a97\u53e3\u7684\u4e00\u8fb9\uff0c\u5e76\u4e14\u7531\u4e8e\u4f7f\u7528\u4e86\u4e0d\u540c\u7684\u7247\u6bb5\u7740\u8272\u5668\uff0c\u5b83\u4eec\u7684\u989c\u8272\u4e5f\u4e0d\u540c\u3002\u8fd9\u53ea\u662f\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u60c5\u666f\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u9700\u8981\u4f7f\u7528Uniform\u7f13\u51b2\u5bf9\u8c61\uff0c\u4f46\u4efb\u4f55\u5927\u578b\u7684\u6e32\u67d3\u7a0b\u5e8f\u90fd\u53ef\u80fd\u540c\u65f6\u6fc0\u6d3b\u6709\u4e0a\u767e\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\uff0c\u8fd9\u65f6\u5019Uniform\u7f13\u51b2\u5bf9\u8c61\u7684\u4f18\u52bf\u5c31\u4f1a\u5f88\u5927\u5730\u4f53\u73b0\u51fa\u6765\u4e86\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230uniform\u4f8b\u5b50\u7a0b\u5e8f\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002 Uniform\u7f13\u51b2\u5bf9\u8c61\u6bd4\u8d77\u72ec\u7acb\u7684uniform\u6709\u5f88\u591a\u597d\u5904\u3002\u7b2c\u4e00\uff0c\u4e00\u6b21\u8bbe\u7f6e\u5f88\u591auniform\u4f1a\u6bd4\u4e00\u4e2a\u4e00\u4e2a\u8bbe\u7f6e\u591a\u4e2auniform\u8981\u5feb\u5f88\u591a\u3002\u7b2c\u4e8c\uff0c\u6bd4\u8d77\u5728\u591a\u4e2a\u7740\u8272\u5668\u4e2d\u4fee\u6539\u540c\u6837\u7684uniform\uff0c\u5728Uniform\u7f13\u51b2\u4e2d\u4fee\u6539\u4e00\u6b21\u4f1a\u66f4\u5bb9\u6613\u4e00\u4e9b\u3002\u6700\u540e\u4e00\u4e2a\u597d\u5904\u53ef\u80fd\u4e0d\u4f1a\u7acb\u5373\u663e\u73b0\uff0c\u5982\u679c\u4f7f\u7528Uniform\u7f13\u51b2\u5bf9\u8c61\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u66f4\u591a\u7684uniform\u3002OpenGL\u9650\u5236\u4e86\u5b83\u80fd\u591f\u5904\u7406\u7684uniform\u6570\u91cf\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7 GL_MAX_VERTEX_UNIFORM_COMPONENTS \u6765\u67e5\u8be2\u3002\u5f53\u4f7f\u7528Uniform\u7f13\u51b2\u5bf9\u8c61\u65f6\uff0c\u6700\u5927\u7684\u6570\u91cf\u4f1a\u66f4\u9ad8\u3002\u6240\u4ee5\uff0c\u5f53\u4f60\u8fbe\u5230\u4e86uniform\u7684\u6700\u5927\u6570\u91cf\u65f6\uff08\u6bd4\u5982\u518d\u505a\u9aa8\u9abc\u52a8\u753b(Skeletal Animation)\u7684\u65f6\u5019\uff09\uff0c\u4f60\u603b\u662f\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528Uniform\u7f13\u51b2\u5bf9\u8c61\u3002","title":"\u9ad8\u7ea7GLSL"},{"location":"04%20Advanced%20OpenGL/08%20Advanced%20GLSL/#glsl","text":"\u539f\u6587 Advanced GLSL \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 AoZhang \u8fd9\u4e00\u5c0f\u8282\u5e76\u4e0d\u4f1a\u5411\u4f60\u5c55\u793a\u975e\u5e38\u5148\u8fdb\u975e\u5e38\u9177\u7684\u65b0\u7279\u6027\uff0c\u4e5f\u4e0d\u4f1a\u5bf9\u573a\u666f\u7684\u89c6\u89c9\u8d28\u91cf\u6709\u663e\u8457\u7684\u63d0\u9ad8\u3002\u4f46\u662f\uff0c\u8fd9\u4e00\u8282\u4f1a\u6216\u591a\u6216\u5c11\u6d89\u53caGLSL\u7684\u4e00\u4e9b\u6709\u8da3\u7684\u5730\u65b9\u4ee5\u53ca\u4e00\u4e9b\u5f88\u68d2\u7684\u6280\u5de7\uff0c\u5b83\u4eec\u53ef\u80fd\u5728\u4eca\u540e\u4f1a\u5e2e\u52a9\u5230\u4f60\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5b83\u4eec\u5c31\u662f\u5728\u7ec4\u5408\u4f7f\u7528OpenGL\u548cGLSL\u521b\u5efa\u7a0b\u5e8f\u65f6\u7684\u4e00\u4e9b \u6700\u597d\u8981\u77e5\u9053\u7684\u4e1c\u897f \uff0c\u548c\u4e00\u4e9b \u4f1a\u8ba9\u4f60\u751f\u6d3b\u66f4\u52a0\u8f7b\u677e\u7684\u7279\u6027 \u3002 \u6211\u4eec\u5c06\u4f1a\u8ba8\u8bba\u4e00\u4e9b\u6709\u8da3\u7684 \u5185\u5efa\u53d8\u91cf (Built-in Variable)\uff0c\u7ba1\u7406\u7740\u8272\u5668\u8f93\u5165\u548c\u8f93\u51fa\u7684\u65b0\u65b9\u5f0f\u4ee5\u53ca\u4e00\u4e2a\u53eb\u505a Uniform\u7f13\u51b2\u5bf9\u8c61 (Uniform Buffer Object)\u7684\u6709\u7528\u5de5\u5177\u3002","title":"\u9ad8\u7ea7GLSL"},{"location":"04%20Advanced%20OpenGL/08%20Advanced%20GLSL/#glsl_1","text":"\u7740\u8272\u5668\u90fd\u662f\u6700\u7b80\u5316\u7684\uff0c\u5982\u679c\u9700\u8981\u5f53\u524d\u7740\u8272\u5668\u4ee5\u5916\u5730\u65b9\u7684\u6570\u636e\u7684\u8bdd\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u5c06\u6570\u636e\u4f20\u8fdb\u6765\u3002\u6211\u4eec\u5df2\u7ecf\u5b66\u4f1a\u4f7f\u7528\u9876\u70b9\u5c5e\u6027\u3001uniform\u548c\u91c7\u6837\u5668\u6765\u5b8c\u6210\u8fd9\u4e00\u4efb\u52a1\u4e86\u3002\u7136\u800c\uff0c\u9664\u6b64\u4e4b\u5916\uff0cGLSL\u8fd8\u5b9a\u4e49\u4e86\u53e6\u5916\u51e0\u4e2a\u4ee5 gl_ \u4e3a\u524d\u7f00\u7684\u53d8\u91cf\uff0c\u5b83\u4eec\u80fd\u63d0\u4f9b\u7ed9\u6211\u4eec\u66f4\u591a\u7684\u65b9\u5f0f\u6765\u8bfb\u53d6/\u5199\u5165\u6570\u636e\u3002\u6211\u4eec\u5df2\u7ecf\u5728\u524d\u9762\u6559\u7a0b\u4e2d\u63a5\u89e6\u8fc7\u5176\u4e2d\u7684\u4e24\u4e2a\u4e86\uff1a\u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u51fa\u5411\u91cf gl_Position \uff0c\u548c\u7247\u6bb5\u7740\u8272\u5668\u7684 gl_FragCoord \u3002 \u6211\u4eec\u5c06\u4f1a\u8ba8\u8bba\u51e0\u4e2a\u6709\u8da3\u7684GLSL\u5185\u5efa\u8f93\u5165\u548c\u8f93\u51fa\u53d8\u91cf\uff0c\u5e76\u4f1a\u89e3\u91ca\u5b83\u4eec\u80fd\u591f\u600e\u6837\u5e2e\u52a9\u4f60\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u5c06\u4e0d\u4f1a\u8ba8\u8bbaGLSL\u4e2d\u5b58\u5728\u7684\u6240\u6709\u5185\u5efa\u53d8\u91cf\uff0c\u5982\u679c\u4f60\u60f3\u77e5\u9053\u6240\u6709\u7684\u5185\u5efa\u53d8\u91cf\u7684\u8bdd\uff0c\u8bf7\u67e5\u770bOpenGL\u7684 wiki \u3002","title":"GLSL\u7684\u5185\u5efa\u53d8\u91cf"},{"location":"04%20Advanced%20OpenGL/08%20Advanced%20GLSL/#_1","text":"\u6211\u4eec\u5df2\u7ecf\u89c1\u8fc7 gl_Position \u4e86\uff0c\u5b83\u662f\u9876\u70b9\u7740\u8272\u5668\u7684\u88c1\u526a\u7a7a\u95f4\u8f93\u51fa\u4f4d\u7f6e\u5411\u91cf\u3002\u5982\u679c\u4f60\u60f3\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u4efb\u4f55\u4e1c\u897f\uff0c\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u8bbe\u7f6e gl_Position \u662f\u5fc5\u987b\u7684\u6b65\u9aa4\u3002\u8fd9\u5df2\u7ecf\u662f\u5b83\u7684\u5168\u90e8\u529f\u80fd\u4e86\u3002","title":"\u9876\u70b9\u7740\u8272\u5668\u53d8\u91cf"},{"location":"04%20Advanced%20OpenGL/08%20Advanced%20GLSL/#gl_pointsize","text":"\u6211\u4eec\u80fd\u591f\u9009\u7528\u7684\u5176\u4e2d\u4e00\u4e2a\u56fe\u5143\u662f GL_POINTS \uff0c\u5982\u679c\u4f7f\u7528\u5b83\u7684\u8bdd\uff0c\u6bcf\u4e00\u4e2a\u9876\u70b9\u90fd\u662f\u4e00\u4e2a\u56fe\u5143\uff0c\u90fd\u4f1a\u88ab\u6e32\u67d3\u4e3a\u4e00\u4e2a\u70b9\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7OpenGL\u7684 glPointSize \u51fd\u6570\u6765\u8bbe\u7f6e\u6e32\u67d3\u51fa\u6765\u7684\u70b9\u7684\u5927\u5c0f\uff0c\u4f46\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u4fee\u6539\u8fd9\u4e2a\u503c\u3002 GLSL\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53eb\u505a gl_PointSize \u8f93\u51fa\u53d8\u91cf\uff0c\u5b83\u662f\u4e00\u4e2a float \u53d8\u91cf\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u8bbe\u7f6e\u70b9\u7684\u5bbd\u9ad8\uff08\u50cf\u7d20\uff09\u3002\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u4fee\u6539\u70b9\u7684\u5927\u5c0f\u7684\u8bdd\uff0c\u4f60\u5c31\u80fd\u5bf9\u6bcf\u4e2a\u9876\u70b9\u8bbe\u7f6e\u4e0d\u540c\u7684\u503c\u4e86\u3002 \u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u4fee\u6539\u70b9\u5927\u5c0f\u7684\u529f\u80fd\u9ed8\u8ba4\u662f\u7981\u7528\u7684\uff0c\u5982\u679c\u4f60\u9700\u8981\u542f\u7528\u5b83\u7684\u8bdd\uff0c\u4f60\u9700\u8981\u542f\u7528OpenGL\u7684 GL_PROGRAM_POINT_SIZE \uff1a glEnable(GL_PROGRAM_POINT_SIZE); \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5c31\u662f\u5c06\u70b9\u7684\u5927\u5c0f\u8bbe\u7f6e\u4e3a\u88c1\u526a\u7a7a\u95f4\u4f4d\u7f6e\u7684z\u503c\uff0c\u4e5f\u5c31\u662f\u9876\u70b9\u8ddd\u89c2\u5bdf\u8005\u7684\u8ddd\u79bb\u3002\u70b9\u7684\u5927\u5c0f\u4f1a\u968f\u7740\u89c2\u5bdf\u8005\u8ddd\u9876\u70b9\u8ddd\u79bb\u53d8\u8fdc\u800c\u589e\u5927\u3002 void main() { gl_Position = projection * view * model * vec4(aPos, 1.0); gl_PointSize = gl_Position.z; } \u7ed3\u679c\u5c31\u662f\uff0c\u5f53\u6211\u4eec\u8fdc\u79bb\u8fd9\u4e9b\u70b9\u7684\u65f6\u5019\uff0c\u5b83\u4eec\u4f1a\u53d8\u5f97\u66f4\u5927\uff1a \u4f60\u53ef\u4ee5\u60f3\u5230\uff0c\u5bf9\u6bcf\u4e2a\u9876\u70b9\u4f7f\u7528\u4e0d\u540c\u7684\u70b9\u5927\u5c0f\uff0c\u4f1a\u5728\u7c92\u5b50\u751f\u6210\u4e4b\u7c7b\u7684\u6280\u672f\u4e2d\u5f88\u6709\u610f\u601d\u3002","title":"gl_PointSize"},{"location":"04%20Advanced%20OpenGL/08%20Advanced%20GLSL/#gl_vertexid","text":"gl_Position \u548c gl_PointSize \u90fd\u662f \u8f93\u51fa\u53d8\u91cf \uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u503c\u662f\u4f5c\u4e3a\u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u51fa\u88ab\u8bfb\u53d6\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u5bf9\u5b83\u4eec\u8fdb\u884c\u5199\u5165\uff0c\u6765\u6539\u53d8\u7ed3\u679c\u3002\u9876\u70b9\u7740\u8272\u5668\u8fd8\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6709\u8da3\u7684 \u8f93\u5165\u53d8\u91cf \uff0c\u6211\u4eec\u53ea\u80fd\u5bf9\u5b83\u8fdb\u884c\u8bfb\u53d6\uff0c\u5b83\u53eb\u505a gl_VertexID \u3002 \u6574\u578b\u53d8\u91cf gl_VertexID \u50a8\u5b58\u4e86\u6b63\u5728\u7ed8\u5236\u9876\u70b9\u7684\u5f53\u524dID\u3002\u5f53\uff08\u4f7f\u7528 glDrawElements \uff09\u8fdb\u884c\u7d22\u5f15\u6e32\u67d3\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u53d8\u91cf\u4f1a\u5b58\u50a8\u6b63\u5728\u7ed8\u5236\u9876\u70b9\u7684\u5f53\u524d\u7d22\u5f15\u3002\u5f53\uff08\u4f7f\u7528 glDrawArrays \uff09\u4e0d\u4f7f\u7528\u7d22\u5f15\u8fdb\u884c\u7ed8\u5236\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u53d8\u91cf\u4f1a\u50a8\u5b58\u4ece\u6e32\u67d3\u8c03\u7528\u5f00\u59cb\u7684\u5df2\u5904\u7406\u9876\u70b9\u6570\u91cf\u3002","title":"gl_VertexID"},{"location":"04%20Advanced%20OpenGL/08%20Advanced%20GLSL/#_2","text":"\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u4e5f\u80fd\u8bbf\u95ee\u5230\u4e00\u4e9b\u6709\u8da3\u7684\u53d8\u91cf\u3002GLSL\u63d0\u4f9b\u7ed9\u6211\u4eec\u4e24\u4e2a\u6709\u8da3\u7684\u8f93\u5165\u53d8\u91cf\uff1a gl_FragCoord \u548c gl_FrontFacing \u3002","title":"\u7247\u6bb5\u7740\u8272\u5668\u53d8\u91cf"},{"location":"04%20Advanced%20OpenGL/08%20Advanced%20GLSL/#gl_fragcoord","text":"\u5728\u8ba8\u8bba\u6df1\u5ea6\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5df2\u7ecf\u89c1\u8fc7 gl_FragCoord \u5f88\u591a\u6b21\u4e86\uff0c\u56e0\u4e3a gl_FragCoord \u7684z\u5206\u91cf\u7b49\u4e8e\u5bf9\u5e94\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u3002\u7136\u800c\uff0c\u6211\u4eec\u4e5f\u80fd\u4f7f\u7528\u5b83\u7684x\u548cy\u5206\u91cf\u6765\u5b9e\u73b0\u4e00\u4e9b\u6709\u8da3\u7684\u6548\u679c\u3002 gl_FragCoord \u7684x\u548cy\u5206\u91cf\u662f\u7247\u6bb5\u7684\u7a97\u53e3\u7a7a\u95f4(Window-space)\u5750\u6807\uff0c\u5176\u539f\u70b9\u4e3a\u7a97\u53e3\u7684\u5de6\u4e0b\u89d2\u3002\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528 glViewport \u8bbe\u5b9a\u4e86\u4e00\u4e2a800x600\u7684\u7a97\u53e3\u4e86\uff0c\u6240\u4ee5\u7247\u6bb5\u7a97\u53e3\u7a7a\u95f4\u5750\u6807\u7684x\u5206\u91cf\u5c06\u57280\u5230800\u4e4b\u95f4\uff0cy\u5206\u91cf\u57280\u5230600\u4e4b\u95f4\u3002 \u901a\u8fc7\u5229\u7528\u7247\u6bb5\u7740\u8272\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u7247\u6bb5\u7684\u7a97\u53e3\u5750\u6807\uff0c\u8ba1\u7b97\u51fa\u4e0d\u540c\u7684\u989c\u8272\u3002 gl_FragCoord \u7684\u4e00\u4e2a\u5e38\u89c1\u7528\u5904\u662f\u7528\u4e8e\u5bf9\u6bd4\u4e0d\u540c\u7247\u6bb5\u8ba1\u7b97\u7684\u89c6\u89c9\u8f93\u51fa\u6548\u679c\uff0c\u8fd9\u5728\u6280\u672f\u6f14\u793a\u4e2d\u53ef\u4ee5\u7ecf\u5e38\u770b\u5230\u3002\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u80fd\u591f\u5c06\u5c4f\u5e55\u5206\u6210\u4e24\u90e8\u5206\uff0c\u5728\u7a97\u53e3\u7684\u5de6\u4fa7\u6e32\u67d3\u4e00\u79cd\u8f93\u51fa\uff0c\u5728\u7a97\u53e3\u7684\u53f3\u4fa7\u6e32\u67d3\u53e6\u4e00\u79cd\u8f93\u51fa\u3002\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u7247\u6bb5\u7740\u8272\u5668\u4f1a\u6839\u636e\u7a97\u53e3\u5750\u6807\u8f93\u51fa\u4e0d\u540c\u7684\u989c\u8272\uff1a void main() { if(gl_FragCoord.x < 400) FragColor = vec4(1.0, 0.0, 0.0, 1.0); else FragColor = vec4(0.0, 1.0, 0.0, 1.0); } \u56e0\u4e3a\u7a97\u53e3\u7684\u5bbd\u5ea6\u662f800\u3002\u5f53\u4e00\u4e2a\u50cf\u7d20\u7684x\u5750\u6807\u5c0f\u4e8e400\u65f6\uff0c\u5b83\u4e00\u5b9a\u5728\u7a97\u53e3\u7684\u5de6\u4fa7\uff0c\u6240\u4ee5\u6211\u4eec\u7ed9\u5b83\u4e00\u4e2a\u4e0d\u540c\u7684\u989c\u8272\u3002 \u6211\u4eec\u73b0\u5728\u4f1a\u8ba1\u7b97\u51fa\u4e24\u4e2a\u5b8c\u5168\u4e0d\u540c\u7684\u7247\u6bb5\u7740\u8272\u5668\u7ed3\u679c\uff0c\u5e76\u5c06\u5b83\u4eec\u663e\u793a\u5728\u7a97\u53e3\u7684\u4e24\u4fa7\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u4f60\u53ef\u4ee5\u5c06\u5b83\u7528\u4e8e\u6d4b\u8bd5\u4e0d\u540c\u7684\u5149\u7167\u6280\u5de7\u3002","title":"gl_FragCoord"},{"location":"04%20Advanced%20OpenGL/08%20Advanced%20GLSL/#gl_frontfacing","text":"\u7247\u6bb5\u7740\u8272\u5668\u53e6\u5916\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u8f93\u5165\u53d8\u91cf\u662f gl_FrontFacing \u3002\u5728 \u9762\u5254\u9664 \u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u63d0\u5230OpenGL\u80fd\u591f\u6839\u636e\u9876\u70b9\u7684\u73af\u7ed5\u987a\u5e8f\u6765\u51b3\u5b9a\u4e00\u4e2a\u9762\u662f\u6b63\u5411\u8fd8\u662f\u80cc\u5411\u9762\u3002\u5982\u679c\u6211\u4eec\u4e0d\uff08\u542f\u7528 GL_FACE_CULL \u6765\uff09\u4f7f\u7528\u9762\u5254\u9664\uff0c\u90a3\u4e48 gl_FrontFacing \u5c06\u4f1a\u544a\u8bc9\u6211\u4eec\u5f53\u524d\u7247\u6bb5\u662f\u5c5e\u4e8e\u6b63\u5411\u9762\u7684\u4e00\u90e8\u5206\u8fd8\u662f\u80cc\u5411\u9762\u7684\u4e00\u90e8\u5206\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u6211\u4eec\u80fd\u591f\u5bf9\u6b63\u5411\u9762\u8ba1\u7b97\u51fa\u4e0d\u540c\u7684\u989c\u8272\u3002 gl_FrontFacing \u53d8\u91cf\u662f\u4e00\u4e2a bool \uff0c\u5982\u679c\u5f53\u524d\u7247\u6bb5\u662f\u6b63\u5411\u9762\u7684\u4e00\u90e8\u5206\u90a3\u4e48\u5c31\u662f true \uff0c\u5426\u5219\u5c31\u662f false \u3002\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b50\u521b\u5efa\u4e00\u4e2a\u7acb\u65b9\u4f53\uff0c\u5728\u5185\u90e8\u548c\u5916\u90e8\u4f7f\u7528\u4e0d\u540c\u7684\u7eb9\u7406\uff1a #version 330 core out vec4 FragColor; in vec2 TexCoords; uniform sampler2D frontTexture; uniform sampler2D backTexture; void main() { if(gl_FrontFacing) FragColor = texture(frontTexture, TexCoords); else FragColor = texture(backTexture, TexCoords); } \u5982\u679c\u6211\u4eec\u5f80\u7bb1\u5b50\u91cc\u9762\u770b\uff0c\u5c31\u80fd\u770b\u5230\u4f7f\u7528\u7684\u662f\u4e0d\u540c\u7684\u7eb9\u7406\u3002 \u6ce8\u610f\uff0c\u5982\u679c\u4f60\u5f00\u542f\u4e86\u9762\u5254\u9664\uff0c\u4f60\u5c31\u770b\u4e0d\u5230\u7bb1\u5b50\u5185\u90e8\u7684\u9762\u4e86\uff0c\u6240\u4ee5\u73b0\u5728\u518d\u4f7f\u7528 gl_FrontFacing \u5c31\u6ca1\u6709\u610f\u4e49\u4e86\u3002","title":"gl_FrontFacing"},{"location":"04%20Advanced%20OpenGL/08%20Advanced%20GLSL/#gl_fragdepth","text":"\u8f93\u5165\u53d8\u91cf gl_FragCoord \u80fd\u8ba9\u6211\u4eec\u8bfb\u53d6\u5f53\u524d\u7247\u6bb5\u7684\u7a97\u53e3\u7a7a\u95f4\u5750\u6807\uff0c\u5e76\u83b7\u53d6\u5b83\u7684\u6df1\u5ea6\u503c\uff0c\u4f46\u662f\u5b83\u662f\u4e00\u4e2a \u53ea\u8bfb (Read-only)\u53d8\u91cf\u3002\u6211\u4eec\u4e0d\u80fd\u4fee\u6539\u7247\u6bb5\u7684\u7a97\u53e3\u7a7a\u95f4\u5750\u6807\uff0c\u4f46\u5b9e\u9645\u4e0a\u4fee\u6539\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u8fd8\u662f\u53ef\u80fd\u7684\u3002GLSL\u63d0\u4f9b\u7ed9\u6211\u4eec\u4e00\u4e2a\u53eb\u505a gl_FragDepth \u7684\u8f93\u51fa\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u5728\u7740\u8272\u5668\u5185\u8bbe\u7f6e\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u3002 \u8981\u60f3\u8bbe\u7f6e\u6df1\u5ea6\u503c\uff0c\u6211\u4eec\u76f4\u63a5\u5199\u5165\u4e00\u4e2a0.0\u52301.0\u4e4b\u95f4\u7684 float \u503c\u5230\u8f93\u51fa\u53d8\u91cf\u5c31\u53ef\u4ee5\u4e86\uff1a gl_FragDepth = 0.0; // \u8fd9\u4e2a\u7247\u6bb5\u73b0\u5728\u7684\u6df1\u5ea6\u503c\u4e3a 0.0 \u5982\u679c\u7740\u8272\u5668\u6ca1\u6709\u5199\u5165\u503c\u5230 gl_FragDepth \uff0c\u5b83\u4f1a\u81ea\u52a8\u53d6\u7528 gl_FragCoord.z \u7684\u503c\u3002 \u7136\u800c\uff0c\u7531\u6211\u4eec\u81ea\u5df1\u8bbe\u7f6e\u6df1\u5ea6\u503c\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u7f3a\u70b9\uff0c\u53ea\u8981\u6211\u4eec\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u5bf9 gl_FragDepth \u8fdb\u884c\u5199\u5165\uff0cOpenGL\u5c31\u4f1a\uff08\u50cf \u6df1\u5ea6\u6d4b\u8bd5 \u5c0f\u8282\u4e2d\u8ba8\u8bba\u7684\u90a3\u6837\uff09\u7981\u7528\u6240\u6709\u7684 \u63d0\u524d\u6df1\u5ea6\u6d4b\u8bd5 (Early Depth Testing)\u3002\u5b83\u88ab\u7981\u7528\u7684\u539f\u56e0\u662f\uff0cOpenGL\u65e0\u6cd5\u5728\u7247\u6bb5\u7740\u8272\u5668\u8fd0\u884c \u4e4b\u524d \u5f97\u77e5\u7247\u6bb5\u5c06\u62e5\u6709\u7684\u6df1\u5ea6\u503c\uff0c\u56e0\u4e3a\u7247\u6bb5\u7740\u8272\u5668\u53ef\u80fd\u4f1a\u5b8c\u5168\u4fee\u6539\u8fd9\u4e2a\u6df1\u5ea6\u503c\u3002 \u5728\u5199\u5165 gl_FragDepth \u65f6\uff0c\u4f60\u5c31\u9700\u8981\u8003\u8651\u5230\u5b83\u6240\u5e26\u6765\u7684\u6027\u80fd\u5f71\u54cd\u3002\u7136\u800c\uff0c\u4eceOpenGL 4.2\u8d77\uff0c\u6211\u4eec\u4ecd\u53ef\u4ee5\u5bf9\u4e24\u8005\u8fdb\u884c\u4e00\u5b9a\u7684\u8c03\u548c\uff0c\u5728\u7247\u6bb5\u7740\u8272\u5668\u7684\u9876\u90e8\u4f7f\u7528 \u6df1\u5ea6\u6761\u4ef6 (Depth Condition)\u91cd\u65b0\u58f0\u660e gl_FragDepth \u53d8\u91cf\uff1a layout (depth_<condition>) out float gl_FragDepth; condition \u53ef\u4ee5\u4e3a\u4e0b\u9762\u7684\u503c\uff1a \u6761\u4ef6 \u63cf\u8ff0 any \u9ed8\u8ba4\u503c\u3002\u63d0\u524d\u6df1\u5ea6\u6d4b\u8bd5\u662f\u7981\u7528\u7684\uff0c\u4f60\u4f1a\u635f\u5931\u5f88\u591a\u6027\u80fd greater \u4f60\u53ea\u80fd\u8ba9\u6df1\u5ea6\u503c\u6bd4 gl_FragCoord.z \u66f4\u5927 less \u4f60\u53ea\u80fd\u8ba9\u6df1\u5ea6\u503c\u6bd4 gl_FragCoord.z \u66f4\u5c0f unchanged \u5982\u679c\u4f60\u8981\u5199\u5165 gl_FragDepth \uff0c\u4f60\u5c06\u53ea\u80fd\u5199\u5165 gl_FragCoord.z \u7684\u503c \u901a\u8fc7\u5c06\u6df1\u5ea6\u6761\u4ef6\u8bbe\u7f6e\u4e3a greater \u6216\u8005 less \uff0cOpenGL\u5c31\u80fd\u5047\u8bbe\u4f60\u53ea\u4f1a\u5199\u5165\u6bd4\u5f53\u524d\u7247\u6bb5\u6df1\u5ea6\u503c\u66f4\u5927\u6216\u8005\u66f4\u5c0f\u7684\u503c\u4e86\u3002\u8fd9\u6837\u5b50\u7684\u8bdd\uff0c\u5f53\u6df1\u5ea6\u503c\u6bd4\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u8981\u5c0f\u7684\u65f6\u5019\uff0cOpenGL\u4ecd\u662f\u80fd\u591f\u8fdb\u884c\u63d0\u524d\u6df1\u5ea6\u6d4b\u8bd5\u7684\u3002 \u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5bf9\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u8fdb\u884c\u4e86\u9012\u589e\uff0c\u4f46\u4ecd\u7136\u4e5f\u4fdd\u7559\u4e86\u4e00\u4e9b\u63d0\u524d\u6df1\u5ea6\u6d4b\u8bd5\uff1a #version 420 core // \u6ce8\u610fGLSL\u7684\u7248\u672c\uff01 out vec4 FragColor; layout (depth_greater) out float gl_FragDepth; void main() { FragColor = vec4(1.0); gl_FragDepth = gl_FragCoord.z + 0.1; } \u6ce8\u610f\u8fd9\u4e2a\u7279\u6027\u53ea\u5728OpenGL 4.2\u7248\u672c\u6216\u4ee5\u4e0a\u624d\u63d0\u4f9b\u3002","title":"gl_FragDepth"},{"location":"04%20Advanced%20OpenGL/08%20Advanced%20GLSL/#_3","text":"\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6bcf\u5f53\u6211\u4eec\u5e0c\u671b\u4ece\u9876\u70b9\u7740\u8272\u5668\u5411\u7247\u6bb5\u7740\u8272\u5668\u53d1\u9001\u6570\u636e\u65f6\uff0c\u6211\u4eec\u90fd\u58f0\u660e\u4e86\u51e0\u4e2a\u5bf9\u5e94\u7684\u8f93\u5165/\u8f93\u51fa\u53d8\u91cf\u3002\u5c06\u5b83\u4eec\u4e00\u4e2a\u4e00\u4e2a\u58f0\u660e\u662f\u7740\u8272\u5668\u95f4\u53d1\u9001\u6570\u636e\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u4e86\uff0c\u4f46\u5f53\u7a0b\u5e8f\u53d8\u5f97\u66f4\u5927\u65f6\uff0c\u4f60\u5e0c\u671b\u53d1\u9001\u7684\u53ef\u80fd\u5c31\u4e0d\u53ea\u662f\u51e0\u4e2a\u53d8\u91cf\u4e86\uff0c\u5b83\u8fd8\u53ef\u80fd\u5305\u62ec\u6570\u7ec4\u548c\u7ed3\u6784\u4f53\u3002 \u4e3a\u4e86\u5e2e\u52a9\u6211\u4eec\u7ba1\u7406\u8fd9\u4e9b\u53d8\u91cf\uff0cGLSL\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53eb\u505a \u63a5\u53e3\u5757 (Interface Block)\u7684\u4e1c\u897f\uff0c\u6765\u65b9\u4fbf\u6211\u4eec\u7ec4\u5408\u8fd9\u4e9b\u53d8\u91cf\u3002\u63a5\u53e3\u5757\u7684\u58f0\u660e\u548c struct \u7684\u58f0\u660e\u6709\u70b9\u76f8\u50cf\uff0c\u4e0d\u540c\u7684\u662f\uff0c\u73b0\u5728\u6839\u636e\u5b83\u662f\u4e00\u4e2a\u8f93\u5165\u8fd8\u662f\u8f93\u51fa\u5757(Block)\uff0c\u4f7f\u7528 in \u6216 out \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u7684\u3002 #version 330 core layout (location = 0) in vec3 aPos; layout (location = 1) in vec2 aTexCoords; uniform mat4 model; uniform mat4 view; uniform mat4 projection; out VS_OUT { vec2 TexCoords; } vs_out; void main() { gl_Position = projection * view * model * vec4(aPos, 1.0); vs_out.TexCoords = aTexCoords; } \u8fd9\u6b21\u6211\u4eec\u58f0\u660e\u4e86\u4e00\u4e2a\u53eb\u505a vs_out \u7684\u63a5\u53e3\u5757\uff0c\u5b83\u6253\u5305\u4e86\u6211\u4eec\u5e0c\u671b\u53d1\u9001\u5230\u4e0b\u4e00\u4e2a\u7740\u8272\u5668\u4e2d\u7684\u6240\u6709\u8f93\u51fa\u53d8\u91cf\u3002\u8fd9\u53ea\u662f\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u4f46\u4f60\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e0b\uff0c\u5b83\u80fd\u591f\u5e2e\u52a9\u4f60\u7ba1\u7406\u7740\u8272\u5668\u7684\u8f93\u5165\u548c\u8f93\u51fa\u3002\u5f53\u6211\u4eec\u5e0c\u671b\u5c06\u7740\u8272\u5668\u7684\u8f93\u5165\u6216\u8f93\u51fa\u6253\u5305\u4e3a\u6570\u7ec4\u65f6\uff0c\u5b83\u4e5f\u4f1a\u975e\u5e38\u6709\u7528\uff0c\u6211\u4eec\u5c06\u5728 \u4e0b\u4e00\u8282 \u8ba8\u8bba\u51e0\u4f55\u7740\u8272\u5668(Geometry Shader)\u65f6\u89c1\u5230\u3002 \u4e4b\u540e\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5728\u4e0b\u4e00\u4e2a\u7740\u8272\u5668\uff0c\u5373\u7247\u6bb5\u7740\u8272\u5668\uff0c\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u8f93\u5165\u63a5\u53e3\u5757\u3002 \u5757\u540d (Block Name)\u5e94\u8be5\u662f\u548c\u7740\u8272\u5668\u4e2d\u4e00\u6837\u7684\uff08 VS_OUT \uff09\uff0c\u4f46 \u5b9e\u4f8b\u540d (Instance Name)\uff08\u9876\u70b9\u7740\u8272\u5668\u4e2d\u7528\u7684\u662f vs_out \uff09\u53ef\u4ee5\u662f\u968f\u610f\u7684\uff0c\u4f46\u8981\u907f\u514d\u4f7f\u7528\u8bef\u5bfc\u6027\u7684\u540d\u79f0\uff0c\u6bd4\u5982\u5bf9\u5b9e\u9645\u4e0a\u5305\u542b\u8f93\u5165\u53d8\u91cf\u7684\u63a5\u53e3\u5757\u547d\u540d\u4e3a vs_out \u3002 #version 330 core out vec4 FragColor; in VS_OUT { vec2 TexCoords; } fs_in; uniform sampler2D texture; void main() { FragColor = texture(texture, fs_in.TexCoords); } \u53ea\u8981\u4e24\u4e2a\u63a5\u53e3\u5757\u7684\u540d\u5b57\u4e00\u6837\uff0c\u5b83\u4eec\u5bf9\u5e94\u7684\u8f93\u5165\u548c\u8f93\u51fa\u5c06\u4f1a\u5339\u914d\u8d77\u6765\u3002\u8fd9\u662f\u5e2e\u52a9\u4f60\u7ba1\u7406\u4ee3\u7801\u7684\u53c8\u4e00\u4e2a\u6709\u7528\u7279\u6027\uff0c\u5b83\u5728\u51e0\u4f55\u7740\u8272\u5668\u8fd9\u6837\u7a7f\u63d2\u7279\u5b9a\u7740\u8272\u5668\u9636\u6bb5\u7684\u573a\u666f\u4e0b\u4f1a\u5f88\u6709\u7528\u3002","title":"\u63a5\u53e3\u5757"},{"location":"04%20Advanced%20OpenGL/08%20Advanced%20GLSL/#uniform","text":"\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528OpenGL\u5f88\u957f\u65f6\u95f4\u4e86\uff0c\u5b66\u4f1a\u4e86\u4e00\u4e9b\u5f88\u9177\u7684\u6280\u5de7\uff0c\u4f46\u4e5f\u9047\u5230\u4e86\u4e00\u4e9b\u5f88\u9ebb\u70e6\u7684\u5730\u65b9\u3002\u6bd4\u5982\u8bf4\uff0c\u5f53\u4f7f\u7528\u591a\u4e8e\u4e00\u4e2a\u7684\u7740\u8272\u5668\u65f6\uff0c\u5c3d\u7ba1\u5927\u90e8\u5206\u7684uniform\u53d8\u91cf\u90fd\u662f\u76f8\u540c\u7684\uff0c\u6211\u4eec\u8fd8\u662f\u9700\u8981\u4e0d\u65ad\u5730\u8bbe\u7f6e\u5b83\u4eec\uff0c\u6240\u4ee5\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u9ebb\u70e6\u5730\u91cd\u590d\u8bbe\u7f6e\u5b83\u4eec\u5462\uff1f OpenGL\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53eb\u505a Uniform\u7f13\u51b2\u5bf9\u8c61 (Uniform Buffer Object)\u7684\u5de5\u5177\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u5b9a\u4e49\u4e00\u7cfb\u5217\u5728\u591a\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\u4e2d\u76f8\u540c\u7684 \u5168\u5c40 Uniform\u53d8\u91cf\u3002\u5f53\u4f7f\u7528Uniform\u7f13\u51b2\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bbe\u7f6e\u76f8\u5173\u7684uniform \u4e00\u6b21 \u3002\u5f53\u7136\uff0c\u6211\u4eec\u4ecd\u9700\u8981\u624b\u52a8\u8bbe\u7f6e\u6bcf\u4e2a\u7740\u8272\u5668\u4e2d\u4e0d\u540c\u7684uniform\u3002\u5e76\u4e14\u521b\u5efa\u548c\u914d\u7f6eUniform\u7f13\u51b2\u5bf9\u8c61\u4f1a\u6709\u4e00\u70b9\u7e41\u7410\u3002 \u56e0\u4e3aUniform\u7f13\u51b2\u5bf9\u8c61\u4ecd\u662f\u4e00\u4e2a\u7f13\u51b2\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 glGenBuffers \u6765\u521b\u5efa\u5b83\uff0c\u5c06\u5b83\u7ed1\u5b9a\u5230 GL_UNIFORM_BUFFER \u7f13\u51b2\u76ee\u6807\uff0c\u5e76\u5c06\u6240\u6709\u76f8\u5173\u7684uniform\u6570\u636e\u5b58\u5165\u7f13\u51b2\u3002\u5728Uniform\u7f13\u51b2\u5bf9\u8c61\u4e2d\u50a8\u5b58\u6570\u636e\u662f\u6709\u4e00\u4e9b\u89c4\u5219\u7684\uff0c\u6211\u4eec\u5c06\u4f1a\u5728\u4e4b\u540e\u8ba8\u8bba\u5b83\u3002\u9996\u5148\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u9876\u70b9\u7740\u8272\u5668\uff0c\u5c06 projection \u548c view \u77e9\u9635\u5b58\u50a8\u5230\u6240\u8c13\u7684 Uniform\u5757 (Uniform Block)\u4e2d\uff1a #version 330 core layout (location = 0) in vec3 aPos; layout (std140) uniform Matrices { mat4 projection; mat4 view; }; uniform mat4 model; void main() { gl_Position = projection * view * model * vec4(aPos, 1.0); } \u5728\u6211\u4eec\u5927\u591a\u6570\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u90fd\u4f1a\u5728\u6bcf\u4e2a\u6e32\u67d3\u8fed\u4ee3\u4e2d\uff0c\u5bf9\u6bcf\u4e2a\u7740\u8272\u5668\u8bbe\u7f6e projection \u548c view Uniform\u77e9\u9635\u3002\u8fd9\u662f\u5229\u7528Uniform\u7f13\u51b2\u5bf9\u8c61\u7684\u4e00\u4e2a\u975e\u5e38\u5b8c\u7f8e\u7684\u4f8b\u5b50\uff0c\u56e0\u4e3a\u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u5b58\u50a8\u8fd9\u4e9b\u77e9\u9635\u4e00\u6b21\u5c31\u53ef\u4ee5\u4e86\u3002 \u8fd9\u91cc\uff0c\u6211\u4eec\u58f0\u660e\u4e86\u4e00\u4e2a\u53eb\u505a Matrices \u7684Uniform\u5757\uff0c\u5b83\u50a8\u5b58\u4e86\u4e24\u4e2a4x4\u77e9\u9635\u3002Uniform\u5757\u4e2d\u7684\u53d8\u91cf\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\uff0c\u4e0d\u9700\u8981\u52a0\u5757\u540d\u4f5c\u4e3a\u524d\u7f00\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5728OpenGL\u4ee3\u7801\u4e2d\u5c06\u8fd9\u4e9b\u77e9\u9635\u503c\u5b58\u5165\u7f13\u51b2\u4e2d\uff0c\u6bcf\u4e2a\u58f0\u660e\u4e86\u8fd9\u4e2aUniform\u5757\u7684\u7740\u8272\u5668\u90fd\u80fd\u591f\u8bbf\u95ee\u8fd9\u4e9b\u77e9\u9635\u3002 \u4f60\u73b0\u5728\u53ef\u80fd\u4f1a\u5728\u60f3 layout (std140) \u8fd9\u4e2a\u8bed\u53e5\u662f\u4ec0\u4e48\u610f\u601d\u3002\u5b83\u7684\u610f\u601d\u662f\u8bf4\uff0c\u5f53\u524d\u5b9a\u4e49\u7684Uniform\u5757\u5bf9\u5b83\u7684\u5185\u5bb9\u4f7f\u7528\u4e00\u4e2a\u7279\u5b9a\u7684\u5185\u5b58\u5e03\u5c40\u3002\u8fd9\u4e2a\u8bed\u53e5\u8bbe\u7f6e\u4e86 Uniform\u5757\u5e03\u5c40 (Uniform Block Layout)\u3002","title":"Uniform\u7f13\u51b2\u5bf9\u8c61"},{"location":"04%20Advanced%20OpenGL/08%20Advanced%20GLSL/#uniform_1","text":"Uniform\u5757\u7684\u5185\u5bb9\u662f\u50a8\u5b58\u5728\u4e00\u4e2a\u7f13\u51b2\u5bf9\u8c61\u4e2d\u7684\uff0c\u5b83\u5b9e\u9645\u4e0a\u53ea\u662f\u4e00\u5757\u9884\u7559\u5185\u5b58\u3002\u56e0\u4e3a\u8fd9\u5757\u5185\u5b58\u5e76\u4e0d\u4f1a\u4fdd\u5b58\u5b83\u5177\u4f53\u4fdd\u5b58\u7684\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\u6570\u636e\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u544a\u8bc9OpenGL\u5185\u5b58\u7684\u54ea\u4e00\u90e8\u5206\u5bf9\u5e94\u7740\u7740\u8272\u5668\u4e2d\u7684\u54ea\u4e00\u4e2auniform\u53d8\u91cf\u3002 \u5047\u8bbe\u7740\u8272\u5668\u4e2d\u6709\u4ee5\u4e0b\u7684\u8fd9\u4e2aUniform\u5757\uff1a layout (std140) uniform ExampleBlock { float value; vec3 vector; mat4 matrix; float values[3]; bool boolean; int integer; }; \u6211\u4eec\u9700\u8981\u77e5\u9053\u7684\u662f\u6bcf\u4e2a\u53d8\u91cf\u7684\u5927\u5c0f\uff08\u5b57\u8282\uff09\u548c\uff08\u4ece\u5757\u8d77\u59cb\u4f4d\u7f6e\u7684\uff09\u504f\u79fb\u91cf\uff0c\u6765\u8ba9\u6211\u4eec\u80fd\u591f\u6309\u987a\u5e8f\u5c06\u5b83\u4eec\u653e\u8fdb\u7f13\u51b2\u4e2d\u3002\u6bcf\u4e2a\u5143\u7d20\u7684\u5927\u5c0f\u90fd\u662f\u5728OpenGL\u4e2d\u6709\u6e05\u695a\u5730\u58f0\u660e\u7684\uff0c\u800c\u4e14\u76f4\u63a5\u5bf9\u5e94C++\u6570\u636e\u7c7b\u578b\uff0c\u5176\u4e2d\u5411\u91cf\u548c\u77e9\u9635\u90fd\u662f\u5927\u7684float\u6570\u7ec4\u3002OpenGL\u6ca1\u6709\u58f0\u660e\u7684\u662f\u8fd9\u4e9b\u53d8\u91cf\u95f4\u7684 \u95f4\u8ddd (Spacing)\u3002\u8fd9\u5141\u8bb8\u786c\u4ef6\u80fd\u591f\u5728\u5b83\u8ba4\u4e3a\u5408\u9002\u7684\u4f4d\u7f6e\u653e\u7f6e\u53d8\u91cf\u3002\u6bd4\u5982\u8bf4\uff0c\u4e00\u4e9b\u786c\u4ef6\u53ef\u80fd\u4f1a\u5c06\u4e00\u4e2a vec3 \u653e\u7f6e\u5728 float \u8fb9\u4e0a\u3002\u4e0d\u662f\u6240\u6709\u7684\u786c\u4ef6\u90fd\u80fd\u8fd9\u6837\u5904\u7406\uff0c\u53ef\u80fd\u4f1a\u5728\u9644\u52a0\u8fd9\u4e2a float \u4e4b\u524d\uff0c\u5148\u5c06 vec3 \u586b\u5145(Pad)\u4e3a\u4e00\u4e2a4\u4e2afloat\u7684\u6570\u7ec4\u3002\u8fd9\u4e2a\u7279\u6027\u672c\u8eab\u5f88\u68d2\uff0c\u4f46\u662f\u4f1a\u5bf9\u6211\u4eec\u9020\u6210\u9ebb\u70e6\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cGLSL\u4f1a\u4f7f\u7528\u4e00\u4e2a\u53eb\u505a \u5171\u4eab (Shared)\u5e03\u5c40\u7684Uniform\u5185\u5b58\u5e03\u5c40\uff0c\u5171\u4eab\u662f\u56e0\u4e3a\u4e00\u65e6\u786c\u4ef6\u5b9a\u4e49\u4e86\u504f\u79fb\u91cf\uff0c\u5b83\u4eec\u5728\u591a\u4e2a\u7a0b\u5e8f\u4e2d\u662f \u5171\u4eab \u5e76\u4e00\u81f4\u7684\u3002\u4f7f\u7528\u5171\u4eab\u5e03\u5c40\u65f6\uff0cGLSL\u662f\u53ef\u4ee5\u4e3a\u4e86\u4f18\u5316\u800c\u5bf9uniform\u53d8\u91cf\u7684\u4f4d\u7f6e\u8fdb\u884c\u53d8\u52a8\u7684\uff0c\u53ea\u8981\u53d8\u91cf\u7684\u987a\u5e8f\u4fdd\u6301\u4e0d\u53d8\u3002\u56e0\u4e3a\u6211\u4eec\u65e0\u6cd5\u77e5\u9053\u6bcf\u4e2auniform\u53d8\u91cf\u7684\u504f\u79fb\u91cf\uff0c\u6211\u4eec\u4e5f\u5c31\u4e0d\u77e5\u9053\u5982\u4f55\u51c6\u786e\u5730\u586b\u5145\u6211\u4eec\u7684Uniform\u7f13\u51b2\u4e86\u3002\u6211\u4eec\u80fd\u591f\u4f7f\u7528\u50cf\u662f glGetUniformIndices \u8fd9\u6837\u7684\u51fd\u6570\u6765\u67e5\u8be2\u8fd9\u4e2a\u4fe1\u606f\uff0c\u4f46\u8fd9\u8d85\u51fa\u672c\u8282\u7684\u8303\u56f4\u4e86\u3002 \u867d\u7136\u5171\u4eab\u5e03\u5c40\u7ed9\u4e86\u6211\u4eec\u5f88\u591a\u8282\u7701\u7a7a\u95f4\u7684\u4f18\u5316\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\u67e5\u8be2\u6bcf\u4e2auniform\u53d8\u91cf\u7684\u504f\u79fb\u91cf\uff0c\u8fd9\u4f1a\u4ea7\u751f\u975e\u5e38\u591a\u7684\u5de5\u4f5c\u91cf\u3002\u901a\u5e38\u7684\u505a\u6cd5\u662f\uff0c\u4e0d\u4f7f\u7528\u5171\u4eab\u5e03\u5c40\uff0c\u800c\u662f\u4f7f\u7528 std140 \u5e03\u5c40\u3002std140\u5e03\u5c40\u58f0\u660e\u4e86\u6bcf\u4e2a\u53d8\u91cf\u7684\u504f\u79fb\u91cf\u90fd\u662f\u7531\u4e00\u7cfb\u5217\u89c4\u5219\u6240\u51b3\u5b9a\u7684\uff0c\u8fd9 \u663e\u5f0f\u5730 \u58f0\u660e\u4e86\u6bcf\u4e2a\u53d8\u91cf\u7c7b\u578b\u7684\u5185\u5b58\u5e03\u5c40\u3002\u7531\u4e8e\u8fd9\u662f\u663e\u5f0f\u63d0\u53ca\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u53d8\u91cf\u7684\u504f\u79fb\u91cf\u3002 \u6bcf\u4e2a\u53d8\u91cf\u90fd\u6709\u4e00\u4e2a \u57fa\u51c6\u5bf9\u9f50\u91cf (Base Alignment)\uff0c\u5b83\u7b49\u4e8e\u4e00\u4e2a\u53d8\u91cf\u5728Uniform\u5757\u4e2d\u6240\u5360\u636e\u7684\u7a7a\u95f4\uff08\u5305\u62ec\u586b\u5145\u91cf(Padding)\uff09\uff0c\u8fd9\u4e2a\u57fa\u51c6\u5bf9\u9f50\u91cf\u662f\u4f7f\u7528std140\u5e03\u5c40\u7684\u89c4\u5219\u8ba1\u7b97\u51fa\u6765\u7684\u3002\u63a5\u4e0b\u6765\uff0c\u5bf9\u6bcf\u4e2a\u53d8\u91cf\uff0c\u6211\u4eec\u518d\u8ba1\u7b97\u5b83\u7684 \u5bf9\u9f50\u504f\u79fb\u91cf (Aligned Offset)\uff0c\u5b83\u662f\u4e00\u4e2a\u53d8\u91cf\u4ece\u5757\u8d77\u59cb\u4f4d\u7f6e\u7684\u5b57\u8282\u504f\u79fb\u91cf\u3002\u4e00\u4e2a\u53d8\u91cf\u7684\u5bf9\u9f50\u5b57\u8282\u504f\u79fb\u91cf \u5fc5\u987b \u7b49\u4e8e\u57fa\u51c6\u5bf9\u9f50\u91cf\u7684\u500d\u6570\u3002 \u5e03\u5c40\u89c4\u5219\u7684\u539f\u6587\u53ef\u4ee5\u5728OpenGL\u7684Uniform\u7f13\u51b2\u89c4\u8303 \u8fd9\u91cc \u627e\u5230\uff0c\u4f46\u6211\u4eec\u5c06\u4f1a\u5728\u4e0b\u9762\u5217\u51fa\u6700\u5e38\u89c1\u7684\u89c4\u5219\u3002GLSL\u4e2d\u7684\u6bcf\u4e2a\u53d8\u91cf\uff0c\u6bd4\u5982\u8bf4 int \u3001 float \u548c bool \uff0c\u90fd\u88ab\u5b9a\u4e49\u4e3a4\u5b57\u8282\u91cf\u3002\u6bcf4\u4e2a\u5b57\u8282\u5c06\u4f1a\u7528\u4e00\u4e2a N \u6765\u8868\u793a\u3002 \u7c7b\u578b \u5e03\u5c40\u89c4\u5219 \u6807\u91cf\uff0c\u6bd4\u5982 int \u548c bool \u6bcf\u4e2a\u6807\u91cf\u7684\u57fa\u51c6\u5bf9\u9f50\u91cf\u4e3aN\u3002 \u5411\u91cf 2N\u6216\u80054N\u3002\u8fd9\u610f\u5473\u7740 vec3 \u7684\u57fa\u51c6\u5bf9\u9f50\u91cf\u4e3a4N\u3002 \u6807\u91cf\u6216\u5411\u91cf\u7684\u6570\u7ec4 \u6bcf\u4e2a\u5143\u7d20\u7684\u57fa\u51c6\u5bf9\u9f50\u91cf\u4e0e vec4 \u7684\u76f8\u540c\u3002 \u77e9\u9635 \u50a8\u5b58\u4e3a\u5217\u5411\u91cf\u7684\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5411\u91cf\u7684\u57fa\u51c6\u5bf9\u9f50\u91cf\u4e0e vec4 \u7684\u76f8\u540c\u3002 \u7ed3\u6784\u4f53 \u7b49\u4e8e\u6240\u6709\u5143\u7d20\u6839\u636e\u89c4\u5219\u8ba1\u7b97\u540e\u7684\u5927\u5c0f\uff0c\u4f46\u4f1a\u586b\u5145\u5230 vec4 \u5927\u5c0f\u7684\u500d\u6570\u3002 \u548cOpenGL\u5927\u591a\u6570\u7684\u89c4\u8303\u4e00\u6837\uff0c\u4f7f\u7528\u4f8b\u5b50\u5c31\u80fd\u66f4\u5bb9\u6613\u5730\u7406\u89e3\u3002\u6211\u4eec\u4f1a\u4f7f\u7528\u4e4b\u524d\u5f15\u5165\u7684\u90a3\u4e2a\u53eb\u505a ExampleBlock \u7684Uniform\u5757\uff0c\u5e76\u4f7f\u7528std140\u5e03\u5c40\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u6210\u5458\u7684\u5bf9\u9f50\u504f\u79fb\u91cf\uff1a layout (std140) uniform ExampleBlock { // \u57fa\u51c6\u5bf9\u9f50\u91cf // \u5bf9\u9f50\u504f\u79fb\u91cf float value; // 4 // 0 vec3 vector; // 16 // 16 (\u5fc5\u987b\u662f16\u7684\u500d\u6570\uff0c\u6240\u4ee5 4->16) mat4 matrix; // 16 // 32 (\u5217 0) // 16 // 48 (\u5217 1) // 16 // 64 (\u5217 2) // 16 // 80 (\u5217 3) float values[3]; // 16 // 96 (values[0]) // 16 // 112 (values[1]) // 16 // 128 (values[2]) bool boolean; // 4 // 144 int integer; // 4 // 148 }; \u4f5c\u4e3a\u7ec3\u4e60\uff0c\u5c1d\u8bd5\u53bb\u81ea\u5df1\u8ba1\u7b97\u4e00\u4e0b\u504f\u79fb\u91cf\uff0c\u5e76\u548c\u8868\u683c\u8fdb\u884c\u5bf9\u6bd4\u3002\u4f7f\u7528\u8ba1\u7b97\u540e\u7684\u504f\u79fb\u91cf\u503c\uff0c\u6839\u636estd140\u5e03\u5c40\u7684\u89c4\u5219\uff0c\u6211\u4eec\u5c31\u80fd\u4f7f\u7528\u50cf\u662f glBufferSubData \u7684\u51fd\u6570\u5c06\u53d8\u91cf\u6570\u636e\u6309\u7167\u504f\u79fb\u91cf\u586b\u5145\u8fdb\u7f13\u51b2\u4e2d\u4e86\u3002\u867d\u7136std140\u5e03\u5c40\u4e0d\u662f\u6700\u9ad8\u6548\u7684\u5e03\u5c40\uff0c\u4f46\u5b83\u4fdd\u8bc1\u4e86\u5185\u5b58\u5e03\u5c40\u5728\u6bcf\u4e2a\u58f0\u660e\u4e86\u8fd9\u4e2aUniform\u5757\u7684\u7a0b\u5e8f\u4e2d\u662f\u4e00\u81f4\u7684\u3002 \u901a\u8fc7\u5728Uniform\u5757\u5b9a\u4e49\u4e4b\u524d\u6dfb\u52a0 layout (std140) \u8bed\u53e5\uff0c\u6211\u4eec\u544a\u8bc9OpenGL\u8fd9\u4e2aUniform\u5757\u4f7f\u7528\u7684\u662fstd140\u5e03\u5c40\u3002\u9664\u6b64\u4e4b\u5916\u8fd8\u53ef\u4ee5\u9009\u62e9\u4e24\u4e2a\u5e03\u5c40\uff0c\u4f46\u5b83\u4eec\u90fd\u9700\u8981\u6211\u4eec\u5728\u586b\u5145\u7f13\u51b2\u4e4b\u524d\u5148\u67e5\u8be2\u6bcf\u4e2a\u504f\u79fb\u91cf\u3002\u6211\u4eec\u5df2\u7ecf\u89c1\u8fc7 shared \u5e03\u5c40\u4e86\uff0c\u5269\u4e0b\u7684\u4e00\u4e2a\u5e03\u5c40\u662f packed \u3002\u5f53\u4f7f\u7528\u7d27\u51d1(Packed)\u5e03\u5c40\u65f6\uff0c\u662f\u4e0d\u80fd\u4fdd\u8bc1\u8fd9\u4e2a\u5e03\u5c40\u5728\u6bcf\u4e2a\u7a0b\u5e8f\u4e2d\u4fdd\u6301\u4e0d\u53d8\u7684\uff08\u5373\u975e\u5171\u4eab\uff09\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u7f16\u8bd1\u5668\u53bb\u5c06uniform\u53d8\u91cf\u4eceUniform\u5757\u4e2d\u4f18\u5316\u6389\uff0c\u8fd9\u5728\u6bcf\u4e2a\u7740\u8272\u5668\u4e2d\u90fd\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u3002","title":"Uniform\u5757\u5e03\u5c40"},{"location":"04%20Advanced%20OpenGL/08%20Advanced%20GLSL/#uniform_2","text":"\u6211\u4eec\u5df2\u7ecf\u8ba8\u8bba\u4e86\u5982\u4f55\u5728\u7740\u8272\u5668\u4e2d\u5b9a\u4e49Uniform\u5757\uff0c\u5e76\u8bbe\u5b9a\u5b83\u4eec\u7684\u5185\u5b58\u5e03\u5c40\u4e86\uff0c\u4f46\u6211\u4eec\u8fd8\u6ca1\u6709\u8ba8\u8bba\u8be5\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u8c03\u7528 glGenBuffers \uff0c\u521b\u5efa\u4e00\u4e2aUniform\u7f13\u51b2\u5bf9\u8c61\u3002\u4e00\u65e6\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u7f13\u51b2\u5bf9\u8c61\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5b83\u7ed1\u5b9a\u5230 GL_UNIFORM_BUFFER \u76ee\u6807\uff0c\u5e76\u8c03\u7528 glBufferData \uff0c\u5206\u914d\u8db3\u591f\u7684\u5185\u5b58\u3002 unsigned int uboExampleBlock; glGenBuffers(1, &uboExampleBlock); glBindBuffer(GL_UNIFORM_BUFFER, uboExampleBlock); glBufferData(GL_UNIFORM_BUFFER, 152, NULL, GL_STATIC_DRAW); // \u5206\u914d152\u5b57\u8282\u7684\u5185\u5b58 glBindBuffer(GL_UNIFORM_BUFFER, 0); \u73b0\u5728\uff0c\u6bcf\u5f53\u6211\u4eec\u9700\u8981\u5bf9\u7f13\u51b2\u66f4\u65b0\u6216\u8005\u63d2\u5165\u6570\u636e\uff0c\u6211\u4eec\u90fd\u4f1a\u7ed1\u5b9a\u5230 uboExampleBlock \uff0c\u5e76\u4f7f\u7528 glBufferSubData \u6765\u66f4\u65b0\u5b83\u7684\u5185\u5b58\u3002\u6211\u4eec\u53ea\u9700\u8981\u66f4\u65b0\u8fd9\u4e2aUniform\u7f13\u51b2\u4e00\u6b21\uff0c\u6240\u6709\u4f7f\u7528\u8fd9\u4e2a\u7f13\u51b2\u7684\u7740\u8272\u5668\u5c31\u90fd\u4f7f\u7528\u7684\u662f\u66f4\u65b0\u540e\u7684\u6570\u636e\u4e86\u3002\u4f46\u662f\uff0c\u5982\u4f55\u624d\u80fd\u8ba9OpenGL\u77e5\u9053\u54ea\u4e2aUniform\u7f13\u51b2\u5bf9\u5e94\u7684\u662f\u54ea\u4e2aUniform\u5757\u5462\uff1f \u5728OpenGL\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e9b \u7ed1\u5b9a\u70b9 (Binding Point)\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e00\u4e2aUniform\u7f13\u51b2\u94fe\u63a5\u81f3\u5b83\u3002\u5728\u521b\u5efaUniform\u7f13\u51b2\u4e4b\u540e\uff0c\u6211\u4eec\u5c06\u5b83\u7ed1\u5b9a\u5230\u5176\u4e2d\u4e00\u4e2a\u7ed1\u5b9a\u70b9\u4e0a\uff0c\u5e76\u5c06\u7740\u8272\u5668\u4e2d\u7684Uniform\u5757\u7ed1\u5b9a\u5230\u76f8\u540c\u7684\u7ed1\u5b9a\u70b9\uff0c\u628a\u5b83\u4eec\u8fde\u63a5\u5230\u4e00\u8d77\u3002\u4e0b\u9762\u7684\u8fd9\u4e2a\u56fe\u793a\u5c55\u793a\u4e86\u8fd9\u4e2a\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed1\u5b9a\u591a\u4e2aUniform\u7f13\u51b2\u5230\u4e0d\u540c\u7684\u7ed1\u5b9a\u70b9\u4e0a\u3002\u56e0\u4e3a\u7740\u8272\u5668A\u548c\u7740\u8272\u5668B\u90fd\u6709\u4e00\u4e2a\u94fe\u63a5\u5230\u7ed1\u5b9a\u70b90\u7684Uniform\u5757\uff0c\u5b83\u4eec\u7684Uniform\u5757\u5c06\u4f1a\u5171\u4eab\u76f8\u540c\u7684uniform\u6570\u636e\uff0c uboMatrices \uff0c\u524d\u63d0\u6761\u4ef6\u662f\u4e24\u4e2a\u7740\u8272\u5668\u90fd\u5b9a\u4e49\u4e86\u76f8\u540c\u7684 Matrices Uniform\u5757\u3002 \u4e3a\u4e86\u5c06Uniform\u5757\u7ed1\u5b9a\u5230\u4e00\u4e2a\u7279\u5b9a\u7684\u7ed1\u5b9a\u70b9\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u8c03\u7528 glUniformBlockBinding \u51fd\u6570\uff0c\u5b83\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u7a0b\u5e8f\u5bf9\u8c61\uff0c\u4e4b\u540e\u662f\u4e00\u4e2aUniform\u5757\u7d22\u5f15\u548c\u94fe\u63a5\u5230\u7684\u7ed1\u5b9a\u70b9\u3002 Uniform\u5757\u7d22\u5f15 (Uniform Block Index)\u662f\u7740\u8272\u5668\u4e2d\u5df2\u5b9a\u4e49Uniform\u5757\u7684\u4f4d\u7f6e\u503c\u7d22\u5f15\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 glGetUniformBlockIndex \u6765\u83b7\u53d6\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a\u7a0b\u5e8f\u5bf9\u8c61\u548cUniform\u5757\u7684\u540d\u79f0\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4ee5\u4e0b\u65b9\u5f0f\u5c06\u56fe\u793a\u4e2d\u7684 Lights Uniform\u5757\u94fe\u63a5\u5230\u7ed1\u5b9a\u70b92\uff1a unsigned int lights_index = glGetUniformBlockIndex(shaderA.ID, \"Lights\"); glUniformBlockBinding(shaderA.ID, lights_index, 2); \u6ce8\u610f\u6211\u4eec\u9700\u8981\u5bf9 \u6bcf\u4e2a \u7740\u8272\u5668\u91cd\u590d\u8fd9\u4e00\u6b65\u9aa4\u3002 Important \u4eceOpenGL 4.2\u7248\u672c\u8d77\uff0c\u4f60\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u5e03\u5c40\u6807\u8bc6\u7b26\uff0c\u663e\u5f0f\u5730\u5c06Uniform\u5757\u7684\u7ed1\u5b9a\u70b9\u50a8\u5b58\u5728\u7740\u8272\u5668\u4e2d\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u518d\u8c03\u7528 glGetUniformBlockIndex \u548c glUniformBlockBinding \u4e86\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u663e\u5f0f\u5730\u8bbe\u7f6e\u4e86 Lights Uniform\u5757\u7684\u7ed1\u5b9a\u70b9\u3002 layout(std140, binding = 2) uniform Lights { ... }; \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u7ed1\u5b9aUniform\u7f13\u51b2\u5bf9\u8c61\u5230\u76f8\u540c\u7684\u7ed1\u5b9a\u70b9\u4e0a\uff0c\u8fd9\u53ef\u4ee5\u4f7f\u7528 glBindBufferBase \u6216 glBindBufferRange \u6765\u5b8c\u6210\u3002 glBindBufferBase(GL_UNIFORM_BUFFER, 2, uboExampleBlock); // \u6216 glBindBufferRange(GL_UNIFORM_BUFFER, 2, uboExampleBlock, 0, 152); glBindbufferBase \u9700\u8981\u4e00\u4e2a\u76ee\u6807\uff0c\u4e00\u4e2a\u7ed1\u5b9a\u70b9\u7d22\u5f15\u548c\u4e00\u4e2aUniform\u7f13\u51b2\u5bf9\u8c61\u4f5c\u4e3a\u5b83\u7684\u53c2\u6570\u3002\u8fd9\u4e2a\u51fd\u6570\u5c06 uboExampleBlock \u94fe\u63a5\u5230\u7ed1\u5b9a\u70b92\u4e0a\uff0c\u81ea\u6b64\uff0c\u7ed1\u5b9a\u70b9\u7684\u4e24\u7aef\u90fd\u94fe\u63a5\u4e0a\u4e86\u3002\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 glBindBufferRange \u51fd\u6570\uff0c\u5b83\u9700\u8981\u4e00\u4e2a\u9644\u52a0\u7684\u504f\u79fb\u91cf\u548c\u5927\u5c0f\u53c2\u6570\uff0c\u8fd9\u6837\u5b50\u4f60\u53ef\u4ee5\u7ed1\u5b9aUniform\u7f13\u51b2\u7684\u7279\u5b9a\u4e00\u90e8\u5206\u5230\u7ed1\u5b9a\u70b9\u4e2d\u3002\u901a\u8fc7\u4f7f\u7528 glBindBufferRange \u51fd\u6570\uff0c\u4f60\u53ef\u4ee5\u8ba9\u591a\u4e2a\u4e0d\u540c\u7684Uniform\u5757\u7ed1\u5b9a\u5230\u540c\u4e00\u4e2aUniform\u7f13\u51b2\u5bf9\u8c61\u4e0a\u3002 \u73b0\u5728\uff0c\u6240\u6709\u7684\u4e1c\u897f\u90fd\u914d\u7f6e\u5b8c\u6bd5\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u5411Uniform\u7f13\u51b2\u4e2d\u6dfb\u52a0\u6570\u636e\u4e86\u3002\u53ea\u8981\u6211\u4eec\u9700\u8981\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 glBufferSubData \u51fd\u6570\uff0c\u7528\u4e00\u4e2a\u5b57\u8282\u6570\u7ec4\u6dfb\u52a0\u6240\u6709\u7684\u6570\u636e\uff0c\u6216\u8005\u66f4\u65b0\u7f13\u51b2\u7684\u4e00\u90e8\u5206\u3002\u8981\u60f3\u66f4\u65b0uniform\u53d8\u91cf boolean \uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4ee5\u4e0b\u65b9\u5f0f\u66f4\u65b0Uniform\u7f13\u51b2\u5bf9\u8c61\uff1a glBindBuffer(GL_UNIFORM_BUFFER, uboExampleBlock); int b = true; // GLSL\u4e2d\u7684bool\u662f4\u5b57\u8282\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5b83\u5b58\u4e3a\u4e00\u4e2ainteger glBufferSubData(GL_UNIFORM_BUFFER, 144, 4, &b); glBindBuffer(GL_UNIFORM_BUFFER, 0); \u540c\u6837\u7684\u6b65\u9aa4\u4e5f\u80fd\u5e94\u7528\u5230Uniform\u5757\u4e2d\u5176\u5b83\u7684uniform\u53d8\u91cf\u4e0a\uff0c\u4f46\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7684\u8303\u56f4\u53c2\u6570\u3002","title":"\u4f7f\u7528Uniform\u7f13\u51b2"},{"location":"04%20Advanced%20OpenGL/08%20Advanced%20GLSL/#_4","text":"\u6240\u4ee5\uff0c\u6211\u4eec\u6765\u5c55\u793a\u4e00\u4e2a\u771f\u6b63\u4f7f\u7528Uniform\u7f13\u51b2\u5bf9\u8c61\u7684\u4f8b\u5b50\u3002\u5982\u679c\u6211\u4eec\u56de\u5934\u770b\u770b\u4e4b\u524d\u6240\u6709\u7684\u4ee3\u7801\u4f8b\u5b50\uff0c\u6211\u4eec\u4e0d\u65ad\u5730\u5728\u4f7f\u75283\u4e2a\u77e9\u9635\uff1a\u6295\u5f71\u3001\u89c2\u5bdf\u548c\u6a21\u578b\u77e9\u9635\u3002\u5728\u6240\u6709\u7684\u8fd9\u4e9b\u77e9\u9635\u4e2d\uff0c\u53ea\u6709\u6a21\u578b\u77e9\u9635\u4f1a\u9891\u7e41\u53d8\u52a8\u3002\u5982\u679c\u6211\u4eec\u6709\u591a\u4e2a\u7740\u8272\u5668\u4f7f\u7528\u4e86\u8fd9\u540c\u4e00\u7ec4\u77e9\u9635\uff0c\u90a3\u4e48\u4f7f\u7528Uniform\u7f13\u51b2\u5bf9\u8c61\u53ef\u80fd\u4f1a\u66f4\u597d\u3002 \u6211\u4eec\u4f1a\u5c06\u6295\u5f71\u548c\u6a21\u578b\u77e9\u9635\u5b58\u50a8\u5230\u4e00\u4e2a\u53eb\u505a Matrices \u7684Uniform\u5757\u4e2d\u3002\u6211\u4eec\u4e0d\u4f1a\u5c06\u6a21\u578b\u77e9\u9635\u5b58\u5728\u8fd9\u91cc\uff0c\u56e0\u4e3a\u6a21\u578b\u77e9\u9635\u5728\u4e0d\u540c\u7684\u7740\u8272\u5668\u4e2d\u4f1a\u4e0d\u65ad\u6539\u53d8\uff0c\u6240\u4ee5\u4f7f\u7528Uniform\u7f13\u51b2\u5bf9\u8c61\u5e76\u4e0d\u4f1a\u5e26\u6765\u4ec0\u4e48\u597d\u5904\u3002 #version 330 core layout (location = 0) in vec3 aPos; layout (std140) uniform Matrices { mat4 projection; mat4 view; }; uniform mat4 model; void main() { gl_Position = projection * view * model * vec4(aPos, 1.0); } \u8fd9\u91cc\u6ca1\u4ec0\u4e48\u7279\u522b\u7684\uff0c\u9664\u4e86\u6211\u4eec\u73b0\u5728\u4f7f\u7528\u7684\u662f\u4e00\u4e2astd140\u5e03\u5c40\u7684Uniform\u5757\u3002\u6211\u4eec\u5c06\u5728\u4f8b\u5b50\u7a0b\u5e8f\u4e2d\uff0c\u663e\u793a4\u4e2a\u7acb\u65b9\u4f53\uff0c\u6bcf\u4e2a\u7acb\u65b9\u4f53\u90fd\u662f\u4f7f\u7528\u4e0d\u540c\u7684\u7740\u8272\u5668\u7a0b\u5e8f\u6e32\u67d3\u7684\u3002\u8fd94\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\u5c06\u4f7f\u7528\u76f8\u540c\u7684\u9876\u70b9\u7740\u8272\u5668\uff0c\u4f46\u4f7f\u7528\u7684\u662f\u4e0d\u540c\u7684\u7247\u6bb5\u7740\u8272\u5668\uff0c\u6bcf\u4e2a\u7740\u8272\u5668\u4f1a\u8f93\u51fa\u4e0d\u540c\u7684\u989c\u8272\u3002 \u9996\u5148\uff0c\u6211\u4eec\u5c06\u9876\u70b9\u7740\u8272\u5668\u7684Uniform\u5757\u8bbe\u7f6e\u4e3a\u7ed1\u5b9a\u70b90\u3002\u6ce8\u610f\u6211\u4eec\u9700\u8981\u5bf9\u6bcf\u4e2a\u7740\u8272\u5668\u90fd\u8bbe\u7f6e\u4e00\u904d\u3002 unsigned int uniformBlockIndexRed = glGetUniformBlockIndex(shaderRed.ID, \"Matrices\"); unsigned int uniformBlockIndexGreen = glGetUniformBlockIndex(shaderGreen.ID, \"Matrices\"); unsigned int uniformBlockIndexBlue = glGetUniformBlockIndex(shaderBlue.ID, \"Matrices\"); unsigned int uniformBlockIndexYellow = glGetUniformBlockIndex(shaderYellow.ID, \"Matrices\"); glUniformBlockBinding(shaderRed.ID, uniformBlockIndexRed, 0); glUniformBlockBinding(shaderGreen.ID, uniformBlockIndexGreen, 0); glUniformBlockBinding(shaderBlue.ID, uniformBlockIndexBlue, 0); glUniformBlockBinding(shaderYellow.ID, uniformBlockIndexYellow, 0); \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u521b\u5efaUniform\u7f13\u51b2\u5bf9\u8c61\u672c\u8eab\uff0c\u5e76\u5c06\u5176\u7ed1\u5b9a\u5230\u7ed1\u5b9a\u70b90\uff1a unsigned int uboMatrices glGenBuffers(1, &uboMatrices); glBindBuffer(GL_UNIFORM_BUFFER, uboMatrices); glBufferData(GL_UNIFORM_BUFFER, 2 * sizeof(glm::mat4), NULL, GL_STATIC_DRAW); glBindBuffer(GL_UNIFORM_BUFFER, 0); glBindBufferRange(GL_UNIFORM_BUFFER, 0, uboMatrices, 0, 2 * sizeof(glm::mat4)); \u9996\u5148\u6211\u4eec\u4e3a\u7f13\u51b2\u5206\u914d\u4e86\u8db3\u591f\u7684\u5185\u5b58\uff0c\u5b83\u7b49\u4e8e glm::mat4 \u5927\u5c0f\u7684\u4e24\u500d\u3002GLM\u77e9\u9635\u7c7b\u578b\u7684\u5927\u5c0f\u76f4\u63a5\u5bf9\u5e94\u4e8eGLSL\u4e2d\u7684 mat4 \u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u7f13\u51b2\u4e2d\u7684\u7279\u5b9a\u8303\u56f4\uff08\u5728\u8fd9\u91cc\u662f\u6574\u4e2a\u7f13\u51b2\uff09\u94fe\u63a5\u5230\u7ed1\u5b9a\u70b90\u3002 \u5269\u4f59\u7684\u5c31\u662f\u586b\u5145\u8fd9\u4e2a\u7f13\u51b2\u4e86\u3002\u5982\u679c\u6211\u4eec\u5c06\u6295\u5f71\u77e9\u9635\u7684 \u89c6\u91ce (Field of View)\u503c\u4fdd\u6301\u4e0d\u53d8\uff08\u6240\u4ee5\u6444\u50cf\u673a\u5c31\u6ca1\u6709\u7f29\u653e\u4e86\uff09\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u5176\u5728\u7a0b\u5e8f\u4e2d\u5b9a\u4e49\u4e00\u6b21\u2014\u2014\u8fd9\u4e5f\u610f\u5473\u7740\u6211\u4eec\u53ea\u9700\u8981\u5c06\u5b83\u63d2\u5165\u5230\u7f13\u51b2\u4e2d\u4e00\u6b21\u3002\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u4e3a\u7f13\u51b2\u5bf9\u8c61\u5206\u914d\u4e86\u8db3\u591f\u7684\u5185\u5b58\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 glBufferSubData \u5728\u8fdb\u5165\u6e32\u67d3\u5faa\u73af\u4e4b\u524d\u5b58\u50a8\u6295\u5f71\u77e9\u9635\uff1a glm::mat4 projection = glm::perspective(glm::radians(45.0f), (float)width/(float)height, 0.1f, 100.0f); glBindBuffer(GL_UNIFORM_BUFFER, uboMatrices); glBufferSubData(GL_UNIFORM_BUFFER, 0, sizeof(glm::mat4), glm::value_ptr(projection)); glBindBuffer(GL_UNIFORM_BUFFER, 0); \u8fd9\u91cc\u6211\u4eec\u5c06\u6295\u5f71\u77e9\u9635\u50a8\u5b58\u5728Uniform\u7f13\u51b2\u7684\u524d\u534a\u90e8\u5206\u3002\u5728\u6bcf\u6b21\u6e32\u67d3\u8fed\u4ee3\u4e2d\u7ed8\u5236\u7269\u4f53\u4e4b\u524d\uff0c\u6211\u4eec\u4f1a\u5c06\u89c2\u5bdf\u77e9\u9635\u66f4\u65b0\u5230\u7f13\u51b2\u7684\u540e\u534a\u90e8\u5206\uff1a glm::mat4 view = camera.GetViewMatrix(); glBindBuffer(GL_UNIFORM_BUFFER, uboMatrices); glBufferSubData(GL_UNIFORM_BUFFER, sizeof(glm::mat4), sizeof(glm::mat4), glm::value_ptr(view)); glBindBuffer(GL_UNIFORM_BUFFER, 0); Uniform\u7f13\u51b2\u5bf9\u8c61\u7684\u90e8\u5206\u5c31\u7ed3\u675f\u4e86\u3002\u6bcf\u4e2a\u5305\u542b\u4e86 Matrices \u8fd9\u4e2aUniform\u5757\u7684\u9876\u70b9\u7740\u8272\u5668\u5c06\u4f1a\u5305\u542b\u50a8\u5b58\u5728 uboMatrices \u4e2d\u7684\u6570\u636e\u3002\u6240\u4ee5\uff0c\u5982\u679c\u6211\u4eec\u73b0\u5728\u8981\u75284\u4e2a\u4e0d\u540c\u7684\u7740\u8272\u5668\u7ed8\u52364\u4e2a\u7acb\u65b9\u4f53\uff0c\u5b83\u4eec\u7684\u6295\u5f71\u548c\u89c2\u5bdf\u77e9\u9635\u90fd\u4f1a\u662f\u4e00\u6837\u7684\u3002 glBindVertexArray(cubeVAO); shaderRed.use(); glm::mat4 model; model = glm::translate(model, glm::vec3(-0.75f, 0.75f, 0.0f)); // \u79fb\u52a8\u5230\u5de6\u4e0a\u89d2 shaderRed.setMat4(\"model\", model); glDrawArrays(GL_TRIANGLES, 0, 36); // ... \u7ed8\u5236\u7eff\u8272\u7acb\u65b9\u4f53 // ... \u7ed8\u5236\u84dd\u8272\u7acb\u65b9\u4f53 // ... \u7ed8\u5236\u9ec4\u8272\u7acb\u65b9\u4f53 \u552f\u4e00\u9700\u8981\u8bbe\u7f6e\u7684uniform\u53ea\u5269 model uniform\u4e86\u3002\u5728\u50cf\u8fd9\u6837\u7684\u573a\u666f\u4e2d\u4f7f\u7528Uniform\u7f13\u51b2\u5bf9\u8c61\u4f1a\u8ba9\u6211\u4eec\u5728\u6bcf\u4e2a\u7740\u8272\u5668\u4e2d\u90fd\u5269\u4e0b\u4e00\u4e9buniform\u8c03\u7528\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u4f1a\u662f\u8fd9\u6837\u7684\uff1a \u56e0\u4e3a\u4fee\u6539\u4e86\u6a21\u578b\u77e9\u9635\uff0c\u6bcf\u4e2a\u7acb\u65b9\u4f53\u90fd\u79fb\u52a8\u5230\u4e86\u7a97\u53e3\u7684\u4e00\u8fb9\uff0c\u5e76\u4e14\u7531\u4e8e\u4f7f\u7528\u4e86\u4e0d\u540c\u7684\u7247\u6bb5\u7740\u8272\u5668\uff0c\u5b83\u4eec\u7684\u989c\u8272\u4e5f\u4e0d\u540c\u3002\u8fd9\u53ea\u662f\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u60c5\u666f\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u9700\u8981\u4f7f\u7528Uniform\u7f13\u51b2\u5bf9\u8c61\uff0c\u4f46\u4efb\u4f55\u5927\u578b\u7684\u6e32\u67d3\u7a0b\u5e8f\u90fd\u53ef\u80fd\u540c\u65f6\u6fc0\u6d3b\u6709\u4e0a\u767e\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\uff0c\u8fd9\u65f6\u5019Uniform\u7f13\u51b2\u5bf9\u8c61\u7684\u4f18\u52bf\u5c31\u4f1a\u5f88\u5927\u5730\u4f53\u73b0\u51fa\u6765\u4e86\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230uniform\u4f8b\u5b50\u7a0b\u5e8f\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002 Uniform\u7f13\u51b2\u5bf9\u8c61\u6bd4\u8d77\u72ec\u7acb\u7684uniform\u6709\u5f88\u591a\u597d\u5904\u3002\u7b2c\u4e00\uff0c\u4e00\u6b21\u8bbe\u7f6e\u5f88\u591auniform\u4f1a\u6bd4\u4e00\u4e2a\u4e00\u4e2a\u8bbe\u7f6e\u591a\u4e2auniform\u8981\u5feb\u5f88\u591a\u3002\u7b2c\u4e8c\uff0c\u6bd4\u8d77\u5728\u591a\u4e2a\u7740\u8272\u5668\u4e2d\u4fee\u6539\u540c\u6837\u7684uniform\uff0c\u5728Uniform\u7f13\u51b2\u4e2d\u4fee\u6539\u4e00\u6b21\u4f1a\u66f4\u5bb9\u6613\u4e00\u4e9b\u3002\u6700\u540e\u4e00\u4e2a\u597d\u5904\u53ef\u80fd\u4e0d\u4f1a\u7acb\u5373\u663e\u73b0\uff0c\u5982\u679c\u4f7f\u7528Uniform\u7f13\u51b2\u5bf9\u8c61\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u66f4\u591a\u7684uniform\u3002OpenGL\u9650\u5236\u4e86\u5b83\u80fd\u591f\u5904\u7406\u7684uniform\u6570\u91cf\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7 GL_MAX_VERTEX_UNIFORM_COMPONENTS \u6765\u67e5\u8be2\u3002\u5f53\u4f7f\u7528Uniform\u7f13\u51b2\u5bf9\u8c61\u65f6\uff0c\u6700\u5927\u7684\u6570\u91cf\u4f1a\u66f4\u9ad8\u3002\u6240\u4ee5\uff0c\u5f53\u4f60\u8fbe\u5230\u4e86uniform\u7684\u6700\u5927\u6570\u91cf\u65f6\uff08\u6bd4\u5982\u518d\u505a\u9aa8\u9abc\u52a8\u753b(Skeletal Animation)\u7684\u65f6\u5019\uff09\uff0c\u4f60\u603b\u662f\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528Uniform\u7f13\u51b2\u5bf9\u8c61\u3002","title":"\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50"},{"location":"04%20Advanced%20OpenGL/09%20Geometry%20Shader/","text":"\u51e0\u4f55\u7740\u8272\u5668 \u539f\u6587 Geometry Shader \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u5728\u9876\u70b9\u548c\u7247\u6bb5\u7740\u8272\u5668\u4e4b\u95f4\u6709\u4e00\u4e2a\u53ef\u9009\u7684 \u51e0\u4f55\u7740\u8272\u5668 (Geometry Shader)\uff0c\u51e0\u4f55\u7740\u8272\u5668\u7684\u8f93\u5165\u662f\u4e00\u4e2a\u56fe\u5143\uff08\u5982\u70b9\u6216\u4e09\u89d2\u5f62\uff09\u7684\u4e00\u7ec4\u9876\u70b9\u3002\u51e0\u4f55\u7740\u8272\u5668\u53ef\u4ee5\u5728\u9876\u70b9\u53d1\u9001\u5230\u4e0b\u4e00\u7740\u8272\u5668\u9636\u6bb5\u4e4b\u524d\u5bf9\u5b83\u4eec\u968f\u610f\u53d8\u6362\u3002\u7136\u800c\uff0c\u51e0\u4f55\u7740\u8272\u5668\u6700\u6709\u8da3\u7684\u5730\u65b9\u5728\u4e8e\uff0c\u5b83\u80fd\u591f\u5c06\uff08\u8fd9\u4e00\u7ec4\uff09\u9876\u70b9\u53d8\u6362\u4e3a\u5b8c\u5168\u4e0d\u540c\u7684\u56fe\u5143\uff0c\u5e76\u4e14\u8fd8\u80fd\u751f\u6210\u6bd4\u539f\u6765\u66f4\u591a\u7684\u9876\u70b9\u3002 \u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u6211\u4eec\u76f4\u63a5\u5148\u770b\u4e00\u4e2a\u51e0\u4f55\u7740\u8272\u5668\u7684\u4f8b\u5b50\uff1a #version 330 core layout (points) in; layout (line_strip, max_vertices = 2) out; void main() { gl_Position = gl_in[0].gl_Position + vec4(-0.1, 0.0, 0.0, 0.0); EmitVertex(); gl_Position = gl_in[0].gl_Position + vec4( 0.1, 0.0, 0.0, 0.0); EmitVertex(); EndPrimitive(); } \u5728\u51e0\u4f55\u7740\u8272\u5668\u7684\u9876\u90e8\uff0c\u6211\u4eec\u9700\u8981\u58f0\u660e\u4ece\u9876\u70b9\u7740\u8272\u5668\u8f93\u5165\u7684\u56fe\u5143\u7c7b\u578b\u3002\u8fd9\u9700\u8981\u5728 in \u5173\u952e\u5b57\u524d\u58f0\u660e\u4e00\u4e2a\u5e03\u5c40\u4fee\u9970\u7b26(Layout Qualifier)\u3002\u8fd9\u4e2a\u8f93\u5165\u5e03\u5c40\u4fee\u9970\u7b26\u53ef\u4ee5\u4ece\u9876\u70b9\u7740\u8272\u5668\u63a5\u6536\u4e0b\u5217\u4efb\u4f55\u4e00\u4e2a\u56fe\u5143\u503c\uff1a points \uff1a\u7ed8\u5236 GL_POINTS \u56fe\u5143\u65f6\uff081\uff09\u3002 lines \uff1a\u7ed8\u5236 GL_LINES \u6216 GL_LINE_STRIP \u65f6\uff082\uff09 lines_adjacency \uff1a GL_LINES_ADJACENCY \u6216 GL_LINE_STRIP_ADJACENCY \uff084\uff09 triangles \uff1a GL_TRIANGLES \u3001 GL_TRIANGLE_STRIP \u6216 GL_TRIANGLE_FAN \uff083\uff09 triangles_adjacency \uff1a GL_TRIANGLES_ADJACENCY \u6216 GL_TRIANGLE_STRIP_ADJACENCY \uff086\uff09 \u4ee5\u4e0a\u662f\u80fd\u63d0\u4f9b\u7ed9 glDrawArrays \u6e32\u67d3\u51fd\u6570\u7684\u51e0\u4e4e\u6240\u6709\u56fe\u5143\u4e86\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u5c06\u9876\u70b9\u7ed8\u5236\u4e3a GL_TRIANGLES \uff0c\u6211\u4eec\u5c31\u8981\u5c06\u8f93\u5165\u4fee\u9970\u7b26\u8bbe\u7f6e\u4e3a triangles \u3002\u62ec\u53f7\u5185\u7684\u6570\u5b57\u8868\u793a\u7684\u662f\u4e00\u4e2a\u56fe\u5143\u6240\u5305\u542b\u7684\u6700\u5c0f\u9876\u70b9\u6570\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u6307\u5b9a\u51e0\u4f55\u7740\u8272\u5668\u8f93\u51fa\u7684\u56fe\u5143\u7c7b\u578b\uff0c\u8fd9\u9700\u8981\u5728 out \u5173\u952e\u5b57\u524d\u9762\u52a0\u4e00\u4e2a\u5e03\u5c40\u4fee\u9970\u7b26\u3002\u548c\u8f93\u5165\u5e03\u5c40\u4fee\u9970\u7b26\u4e00\u6837\uff0c\u8f93\u51fa\u5e03\u5c40\u4fee\u9970\u7b26\u4e5f\u53ef\u4ee5\u63a5\u53d7\u51e0\u4e2a\u56fe\u5143\u503c\uff1a points line_strip triangle_strip \u6709\u4e86\u8fd93\u4e2a\u8f93\u51fa\u4fee\u9970\u7b26\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u8f93\u5165\u56fe\u5143\u521b\u5efa\u51e0\u4e4e\u4efb\u610f\u7684\u5f62\u72b6\u4e86\u3002\u8981\u751f\u6210\u4e00\u4e2a\u4e09\u89d2\u5f62\u7684\u8bdd\uff0c\u6211\u4eec\u5c06\u8f93\u51fa\u5b9a\u4e49\u4e3a triangle_strip \uff0c\u5e76\u8f93\u51fa3\u4e2a\u9876\u70b9\u3002 \u51e0\u4f55\u7740\u8272\u5668\u540c\u65f6\u5e0c\u671b\u6211\u4eec\u8bbe\u7f6e\u4e00\u4e2a\u5b83\u6700\u5927\u80fd\u591f\u8f93\u51fa\u7684\u9876\u70b9\u6570\u91cf\uff08\u5982\u679c\u4f60\u8d85\u8fc7\u4e86\u8fd9\u4e2a\u503c\uff0cOpenGL\u5c06\u4e0d\u4f1a\u7ed8\u5236 \u591a\u51fa\u7684 \u9876\u70b9\uff09\uff0c\u8fd9\u4e2a\u4e5f\u53ef\u4ee5\u5728 out \u5173\u952e\u5b57\u7684\u5e03\u5c40\u4fee\u9970\u7b26\u4e2d\u8bbe\u7f6e\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u8f93\u51fa\u4e00\u4e2a line_strip \uff0c\u5e76\u5c06\u6700\u5927\u9876\u70b9\u6570\u8bbe\u7f6e\u4e3a2\u4e2a\u3002 Important \u5982\u679c\u4f60\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u7ebf\u6761(Line Strip)\uff1a\u7ebf\u6761\u8fde\u63a5\u4e86\u4e00\u7ec4\u70b9\uff0c\u5f62\u6210\u4e00\u6761\u8fde\u7eed\u7684\u7ebf\uff0c\u5b83\u6700\u5c11\u8981\u7531\u4e24\u4e2a\u70b9\u6765\u7ec4\u6210\u3002\u5728\u6e32\u67d3\u51fd\u6570\u4e2d\u6bcf\u591a\u52a0\u4e00\u4e2a\u70b9\uff0c\u5c31\u4f1a\u5728\u8fd9\u4e2a\u70b9\u4e0e\u524d\u4e00\u4e2a\u70b9\u4e4b\u95f4\u5f62\u6210\u4e00\u6761\u65b0\u7684\u7ebf\u3002\u5728\u4e0b\u9762\u8fd9\u5f20\u56fe\u4e2d\uff0c\u6211\u4eec\u67095\u4e2a\u9876\u70b9\uff1a \u4e3a\u4e86\u751f\u6210\u66f4\u6709\u610f\u4e49\u7684\u7ed3\u679c\uff0c\u6211\u4eec\u9700\u8981\u67d0\u79cd\u65b9\u5f0f\u6765\u83b7\u53d6\u524d\u4e00\u7740\u8272\u5668\u9636\u6bb5\u7684\u8f93\u51fa\u3002GLSL\u63d0\u4f9b\u7ed9\u6211\u4eec\u4e00\u4e2a\u540d\u4e3a gl_in \u7684 \u5185\u5efa (Built-in)\u53d8\u91cf\uff0c\u5728\u5185\u90e8\u770b\u8d77\u6765\uff08\u53ef\u80fd\uff09\u662f\u8fd9\u6837\u7684\uff1a in gl_Vertex { vec4 gl_Position; float gl_PointSize; float gl_ClipDistance[]; } gl_in[]; \u8fd9\u91cc\uff0c\u5b83\u88ab\u58f0\u660e\u4e3a\u4e00\u4e2a \u63a5\u53e3\u5757 \uff08Interface Block\uff0c\u6211\u4eec\u5728 \u4e0a\u4e00\u8282 \u5df2\u7ecf\u8ba8\u8bba\u8fc7\uff09\uff0c\u5b83\u5305\u542b\u4e86\u51e0\u4e2a\u5f88\u6709\u610f\u601d\u7684\u53d8\u91cf\uff0c\u5176\u4e2d\u6700\u6709\u8da3\u7684\u4e00\u4e2a\u662f gl_Position \uff0c\u5b83\u662f\u548c\u9876\u70b9\u7740\u8272\u5668\u8f93\u51fa\u975e\u5e38\u76f8\u4f3c\u7684\u4e00\u4e2a\u5411\u91cf\u3002 \u8981\u6ce8\u610f\u7684\u662f\uff0c\u5b83\u88ab\u58f0\u660e\u4e3a\u4e00\u4e2a\u6570\u7ec4\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u7684\u6e32\u67d3\u56fe\u5143\u5305\u542b\u591a\u4e8e1\u4e2a\u7684\u9876\u70b9\uff0c\u800c\u51e0\u4f55\u7740\u8272\u5668\u7684\u8f93\u5165\u662f\u4e00\u4e2a\u56fe\u5143\u7684 \u6240\u6709 \u9876\u70b9\u3002 \u6709\u4e86\u4e4b\u524d\u9876\u70b9\u7740\u8272\u5668\u9636\u6bb5\u7684\u9876\u70b9\u6570\u636e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u75282\u4e2a\u51e0\u4f55\u7740\u8272\u5668\u51fd\u6570\uff0c EmitVertex \u548c EndPrimitive \uff0c\u6765\u751f\u6210\u65b0\u7684\u6570\u636e\u4e86\u3002\u51e0\u4f55\u7740\u8272\u5668\u5e0c\u671b\u4f60\u80fd\u591f\u751f\u6210\u5e76\u8f93\u51fa\u81f3\u5c11\u4e00\u4e2a\u5b9a\u4e49\u4e3a\u8f93\u51fa\u7684\u56fe\u5143\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u81f3\u5c11\u751f\u6210\u4e00\u4e2a\u7ebf\u6761\u56fe\u5143\u3002 void main() { gl_Position = gl_in[0].gl_Position + vec4(-0.1, 0.0, 0.0, 0.0); EmitVertex(); gl_Position = gl_in[0].gl_Position + vec4( 0.1, 0.0, 0.0, 0.0); EmitVertex(); EndPrimitive(); } \u6bcf\u6b21\u6211\u4eec\u8c03\u7528 EmitVertex \u65f6\uff0c gl_Position \u4e2d\u7684\u5411\u91cf\u4f1a\u88ab\u6dfb\u52a0\u5230\u56fe\u5143\u4e2d\u6765\u3002\u5f53 EndPrimitive \u88ab\u8c03\u7528\u65f6\uff0c\u6240\u6709\u53d1\u5c04\u51fa\u7684(Emitted)\u9876\u70b9\u90fd\u4f1a\u5408\u6210\u4e3a\u6307\u5b9a\u7684\u8f93\u51fa\u6e32\u67d3\u56fe\u5143\u3002\u5728\u4e00\u4e2a\u6216\u591a\u4e2a EmitVertex \u8c03\u7528\u4e4b\u540e\u91cd\u590d\u8c03\u7528 EndPrimitive \u80fd\u591f\u751f\u6210\u591a\u4e2a\u56fe\u5143\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u53d1\u5c04\u4e86\u4e24\u4e2a\u9876\u70b9\uff0c\u5b83\u4eec\u4ece\u539f\u59cb\u9876\u70b9\u4f4d\u7f6e\u5e73\u79fb\u4e86\u4e00\u6bb5\u8ddd\u79bb\uff0c\u4e4b\u540e\u8c03\u7528\u4e86 EndPrimitive \uff0c\u5c06\u8fd9\u4e24\u4e2a\u9876\u70b9\u5408\u6210\u4e3a\u4e00\u4e2a\u5305\u542b\u4e24\u4e2a\u9876\u70b9\u7684\u7ebf\u6761\u3002 \u73b0\u5728\u4f60\uff08\u5927\u6982\uff09\u4e86\u89e3\u4e86\u51e0\u4f55\u7740\u8272\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u731c\u51fa\u8fd9\u4e2a\u51e0\u4f55\u7740\u8272\u5668\u662f\u505a\u4ec0\u4e48\u7684\u4e86\u3002\u5b83\u63a5\u53d7\u4e00\u4e2a\u70b9\u56fe\u5143\u4f5c\u4e3a\u8f93\u5165\uff0c\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u4e2d\u5fc3\uff0c\u521b\u5efa\u4e00\u6761\u6c34\u5e73\u7684\u7ebf\u56fe\u5143\u3002\u5982\u679c\u6211\u4eec\u6e32\u67d3\u5b83\uff0c\u770b\u8d77\u6765\u4f1a\u662f\u8fd9\u6837\u7684\uff1a \u76ee\u524d\u8fd8\u5e76\u6ca1\u6709\u4ec0\u4e48\u4ee4\u4eba\u60ca\u53f9\u7684\u6548\u679c\uff0c\u4f46\u8003\u8651\u5230\u8fd9\u4e2a\u8f93\u51fa\u662f\u901a\u8fc7\u8c03\u7528\u4e0b\u9762\u7684\u6e32\u67d3\u51fd\u6570\u6765\u751f\u6210\u7684\uff0c\u5b83\u8fd8\u662f\u5f88\u6709\u610f\u601d\u7684\uff1a glDrawArrays(GL_POINTS, 0, 4); \u867d\u7136\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5b83\u7684\u786e\u5411\u4f60\u5c55\u793a\u4e86\u5982\u4f55\u80fd\u591f\u4f7f\u7528\u51e0\u4f55\u7740\u8272\u5668\u6765\uff08\u52a8\u6001\u5730\uff09\u751f\u6210\u65b0\u7684\u5f62\u72b6\u3002\u5728\u4e4b\u540e\u6211\u4eec\u4f1a\u5229\u7528\u51e0\u4f55\u7740\u8272\u5668\u521b\u5efa\u51fa\u66f4\u6709\u610f\u601d\u7684\u6548\u679c\uff0c\u4f46\u73b0\u5728\u6211\u4eec\u4ecd\u5c06\u4ece\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u51e0\u4f55\u7740\u8272\u5668\u5f00\u59cb\u3002 \u4f7f\u7528\u51e0\u4f55\u7740\u8272\u5668 \u4e3a\u4e86\u5c55\u793a\u51e0\u4f55\u7740\u8272\u5668\u7684\u7528\u6cd5\uff0c\u6211\u4eec\u5c06\u4f1a\u6e32\u67d3\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u573a\u666f\uff0c\u6211\u4eec\u53ea\u4f1a\u5728\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7684z\u5e73\u9762\u4e0a\u7ed8\u5236\u56db\u4e2a\u70b9\u3002\u8fd9\u4e9b\u70b9\u7684\u5750\u6807\u662f\uff1a float points[] = { -0.5f, 0.5f, // \u5de6\u4e0a 0.5f, 0.5f, // \u53f3\u4e0a 0.5f, -0.5f, // \u53f3\u4e0b -0.5f, -0.5f // \u5de6\u4e0b }; \u9876\u70b9\u7740\u8272\u5668\u53ea\u9700\u8981\u5728z\u5e73\u9762\u7ed8\u5236\u70b9\u5c31\u53ef\u4ee5\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u6700\u57fa\u672c\u9876\u70b9\u7740\u8272\u5668\uff1a #version 330 core layout (location = 0) in vec2 aPos; void main() { gl_Position = vec4(aPos.x, aPos.y, 0.0, 1.0); } \u76f4\u63a5\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u786c\u7f16\u7801\uff0c\u5c06\u6240\u6709\u7684\u70b9\u90fd\u8f93\u51fa\u4e3a\u7eff\u8272\uff1a #version 330 core out vec4 FragColor; void main() { FragColor = vec4(0.0, 1.0, 0.0, 1.0); } \u4e3a\u70b9\u7684\u9876\u70b9\u6570\u636e\u751f\u6210\u4e00\u4e2aVAO\u548c\u4e00\u4e2aVBO\uff0c\u7136\u540e\u4f7f\u7528 glDrawArrays \u8fdb\u884c\u7ed8\u5236\uff1a shader.use(); glBindVertexArray(VAO); glDrawArrays(GL_POINTS, 0, 4); \u7ed3\u679c\u662f\u5728\u9ed1\u6697\u7684\u573a\u666f\u4e2d\u6709\u56db\u4e2a\uff08\u5f88\u96be\u770b\u89c1\u7684\uff09\u7eff\u70b9\uff1a \u4f46\u6211\u4eec\u4e4b\u524d\u4e0d\u662f\u5b66\u8fc7\u8fd9\u4e9b\u5417\uff1f\u662f\u7684\uff0c\u4f46\u662f\u73b0\u5728\u6211\u4eec\u5c06\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u51e0\u4f55\u7740\u8272\u5668\uff0c\u4e3a\u573a\u666f\u6dfb\u52a0\u6d3b\u529b\u3002 \u51fa\u4e8e\u5b66\u4e60\u76ee\u7684\uff0c\u6211\u4eec\u5c06\u4f1a\u521b\u5efa\u4e00\u4e2a \u4f20\u9012 (Pass-through)\u51e0\u4f55\u7740\u8272\u5668\uff0c\u5b83\u4f1a\u63a5\u6536\u4e00\u4e2a\u70b9\u56fe\u5143\uff0c\u5e76\u76f4\u63a5\u5c06\u5b83 \u4f20\u9012 (Pass)\u5230\u4e0b\u4e00\u4e2a\u7740\u8272\u5668\uff1a #version 330 core layout (points) in; layout (points, max_vertices = 1) out; void main() { gl_Position = gl_in[0].gl_Position; EmitVertex(); EndPrimitive(); } \u73b0\u5728\u8fd9\u4e2a\u51e0\u4f55\u7740\u8272\u5668\u5e94\u8be5\u5f88\u5bb9\u6613\u7406\u89e3\u4e86\uff0c\u5b83\u53ea\u662f\u5c06\u5b83\u63a5\u6536\u5230\u7684\u9876\u70b9\u4f4d\u7f6e\u4e0d\u4f5c\u4fee\u6539\u76f4\u63a5\u53d1\u5c04\u51fa\u53bb\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u70b9\u56fe\u5143\u3002 \u548c\u9876\u70b9\u4e0e\u7247\u6bb5\u7740\u8272\u5668\u4e00\u6837\uff0c\u51e0\u4f55\u7740\u8272\u5668\u4e5f\u9700\u8981\u7f16\u8bd1\u548c\u94fe\u63a5\uff0c\u4f46\u8fd9\u6b21\u5728\u521b\u5efa\u7740\u8272\u5668\u65f6\u6211\u4eec\u5c06\u4f1a\u4f7f\u7528 GL_GEOMETRY_SHADER \u4f5c\u4e3a\u7740\u8272\u5668\u7c7b\u578b\uff1a geometryShader = glCreateShader(GL_GEOMETRY_SHADER); glShaderSource(geometryShader, 1, &gShaderCode, NULL); glCompileShader(geometryShader); ... glAttachShader(program, geometryShader); glLinkProgram(program); \u7740\u8272\u5668\u7f16\u8bd1\u7684\u4ee3\u7801\u548c\u9876\u70b9\u4e0e\u7247\u6bb5\u7740\u8272\u5668\u4ee3\u7801\u90fd\u662f\u4e00\u6837\u7684\u3002\u8bb0\u5f97\u8981\u68c0\u67e5\u7f16\u8bd1\u548c\u94fe\u63a5\u9519\u8bef\uff01 \u5982\u679c\u4f60\u73b0\u5728\u7f16\u8bd1\u5e76\u8fd0\u884c\u7a0b\u5e8f\uff0c\u4f1a\u770b\u5230\u548c\u4e0b\u9762\u7c7b\u4f3c\u7684\u7ed3\u679c\uff1a \u8fd9\u548c\u6ca1\u4f7f\u7528\u51e0\u4f55\u7740\u8272\u5668\u65f6\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff01\u6211\u627f\u8ba4\u8fd9\u662f\u6709\u70b9\u65e0\u804a\uff0c\u4f46\u65e2\u7136\u6211\u4eec\u4ecd\u7136\u80fd\u591f\u7ed8\u5236\u8fd9\u4e9b\u70b9\uff0c\u6240\u4ee5\u51e0\u4f55\u7740\u8272\u5668\u662f\u6b63\u5e38\u5de5\u4f5c\u7684\uff0c\u73b0\u5728\u662f\u65f6\u5019\u505a\u70b9\u66f4\u6709\u8da3\u7684\u4e1c\u897f\u4e86\uff01 \u9020\u51e0\u4e2a\u623f\u5b50 \u7ed8\u5236\u70b9\u548c\u7ebf\u5e76\u6ca1\u6709\u90a3\u4e48\u6709\u8da3\uff0c\u6240\u4ee5\u6211\u4eec\u4f1a\u4f7f\u7528\u4e00\u70b9\u521b\u9020\u529b\uff0c\u5229\u7528\u51e0\u4f55\u7740\u8272\u5668\u5728\u6bcf\u4e2a\u70b9\u7684\u4f4d\u7f6e\u4e0a\u7ed8\u5236\u4e00\u4e2a\u623f\u5b50\u3002\u8981\u5b9e\u73b0\u8fd9\u4e2a\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u51e0\u4f55\u7740\u8272\u5668\u7684\u8f93\u51fa\u8bbe\u7f6e\u4e3a triangle_strip \uff0c\u5e76\u7ed8\u5236\u4e09\u4e2a\u4e09\u89d2\u5f62\uff1a\u5176\u4e2d\u4e24\u4e2a\u7ec4\u6210\u4e00\u4e2a\u6b63\u65b9\u5f62\uff0c\u53e6\u4e00\u4e2a\u7528\u4f5c\u623f\u9876\u3002 OpenGL\u4e2d\uff0c\u4e09\u89d2\u5f62\u5e26(Triangle Strip)\u662f\u7ed8\u5236\u4e09\u89d2\u5f62\u66f4\u9ad8\u6548\u7684\u65b9\u5f0f\uff0c\u5b83\u4f7f\u7528\u9876\u70b9\u66f4\u5c11\u3002\u5728\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u7ed8\u5236\u5b8c\u4e4b\u540e\uff0c\u6bcf\u4e2a\u540e\u7eed\u9876\u70b9\u5c06\u4f1a\u5728\u4e0a\u4e00\u4e2a\u4e09\u89d2\u5f62\u8fb9\u4e0a\u751f\u6210\u53e6\u4e00\u4e2a\u4e09\u89d2\u5f62\uff1a\u6bcf3\u4e2a\u4e34\u8fd1\u7684\u9876\u70b9\u5c06\u4f1a\u5f62\u6210\u4e00\u4e2a\u4e09\u89d2\u5f62\u3002\u5982\u679c\u6211\u4eec\u4e00\u5171\u67096\u4e2a\u6784\u6210\u4e09\u89d2\u5f62\u5e26\u7684\u9876\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u4f1a\u5f97\u5230\u8fd9\u4e9b\u4e09\u89d2\u5f62\uff1a(1, 2, 3)\u3001(2, 3, 4)\u3001(3, 4, 5)\u548c(4, 5, 6)\uff0c\u5171\u5f62\u62104\u4e2a\u4e09\u89d2\u5f62\u3002\u4e00\u4e2a\u4e09\u89d2\u5f62\u5e26\u81f3\u5c11\u9700\u89813\u4e2a\u9876\u70b9\uff0c\u5e76\u4f1a\u751f\u6210N-2\u4e2a\u4e09\u89d2\u5f62\u3002\u4f7f\u75286\u4e2a\u9876\u70b9\uff0c\u6211\u4eec\u521b\u5efa\u4e866-2 = 4\u4e2a\u4e09\u89d2\u5f62\u3002\u4e0b\u9762\u8fd9\u5e45\u56fe\u5c55\u793a\u4e86\u8fd9\u70b9\uff1a \u901a\u8fc7\u4f7f\u7528\u4e09\u89d2\u5f62\u5e26\u4f5c\u4e3a\u51e0\u4f55\u7740\u8272\u5668\u7684\u8f93\u51fa\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u521b\u5efa\u51fa\u9700\u8981\u7684\u623f\u5b50\u5f62\u72b6\uff0c\u53ea\u9700\u8981\u4ee5\u6b63\u786e\u7684\u987a\u5e8f\u751f\u62103\u4e2a\u76f8\u8fde\u7684\u4e09\u89d2\u5f62\u5c31\u884c\u4e86\u3002\u4e0b\u9762\u8fd9\u5e45\u56fe\u5c55\u793a\u4e86\u9876\u70b9\u7ed8\u5236\u7684\u987a\u5e8f\uff0c\u84dd\u70b9\u4ee3\u8868\u7684\u662f\u8f93\u5165\u70b9\uff1a \u53d8\u4e3a\u51e0\u4f55\u7740\u8272\u5668\u662f\u8fd9\u6837\u7684\uff1a #version 330 core layout (points) in; layout (triangle_strip, max_vertices = 5) out; void build_house(vec4 position) { gl_Position = position + vec4(-0.2, -0.2, 0.0, 0.0); // 1:\u5de6\u4e0b EmitVertex(); gl_Position = position + vec4( 0.2, -0.2, 0.0, 0.0); // 2:\u53f3\u4e0b EmitVertex(); gl_Position = position + vec4(-0.2, 0.2, 0.0, 0.0); // 3:\u5de6\u4e0a EmitVertex(); gl_Position = position + vec4( 0.2, 0.2, 0.0, 0.0); // 4:\u53f3\u4e0a EmitVertex(); gl_Position = position + vec4( 0.0, 0.4, 0.0, 0.0); // 5:\u9876\u90e8 EmitVertex(); EndPrimitive(); } void main() { build_house(gl_in[0].gl_Position); } \u8fd9\u4e2a\u51e0\u4f55\u7740\u8272\u5668\u751f\u6210\u4e865\u4e2a\u9876\u70b9\uff0c\u6bcf\u4e2a\u9876\u70b9\u90fd\u662f\u539f\u59cb\u70b9\u7684\u4f4d\u7f6e\u52a0\u4e0a\u4e00\u4e2a\u504f\u79fb\u91cf\uff0c\u6765\u7ec4\u6210\u4e00\u4e2a\u5927\u7684\u4e09\u89d2\u5f62\u5e26\u3002\u6700\u7ec8\u7684\u56fe\u5143\u4f1a\u88ab\u5149\u6805\u5316\uff0c\u7136\u540e\u7247\u6bb5\u7740\u8272\u5668\u4f1a\u5904\u7406\u6574\u4e2a\u4e09\u89d2\u5f62\u5e26\uff0c\u6700\u7ec8\u5728\u6bcf\u4e2a\u7ed8\u5236\u7684\u70b9\u5904\u751f\u6210\u4e00\u4e2a\u7eff\u8272\u623f\u5b50\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6bcf\u4e2a\u623f\u5b50\u5b9e\u9645\u4e0a\u662f\u75313\u4e2a\u4e09\u89d2\u5f62\u7ec4\u6210\u7684\u2014\u2014\u5168\u90e8\u90fd\u662f\u4f7f\u7528\u7a7a\u95f4\u4e2d\u4e00\u70b9\u6765\u7ed8\u5236\u7684\u3002\u8fd9\u4e9b\u7eff\u623f\u5b50\u770b\u8d77\u6765\u662f\u6709\u70b9\u65e0\u804a\uff0c\u6240\u4ee5\u6211\u4eec\u4f1a\u518d\u7ed9\u6bcf\u4e2a\u623f\u5b50\u5206\u914d\u4e00\u4e2a\u4e0d\u540c\u7684\u989c\u8272\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\uff0c\u6211\u4eec\u9700\u8981\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u989d\u5916\u7684\u9876\u70b9\u5c5e\u6027\uff0c\u8868\u793a\u989c\u8272\u4fe1\u606f\uff0c\u5c06\u5b83\u4f20\u9012\u81f3\u51e0\u4f55\u7740\u8272\u5668\uff0c\u5e76\u518d\u6b21\u53d1\u9001\u5230\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u3002 \u4e0b\u9762\u662f\u66f4\u65b0\u540e\u7684\u9876\u70b9\u6570\u636e\uff1a float points[] = { -0.5f, 0.5f, 1.0f, 0.0f, 0.0f, // \u5de6\u4e0a 0.5f, 0.5f, 0.0f, 1.0f, 0.0f, // \u53f3\u4e0a 0.5f, -0.5f, 0.0f, 0.0f, 1.0f, // \u53f3\u4e0b -0.5f, -0.5f, 1.0f, 1.0f, 0.0f // \u5de6\u4e0b }; \u7136\u540e\u6211\u4eec\u66f4\u65b0\u9876\u70b9\u7740\u8272\u5668\uff0c\u4f7f\u7528\u4e00\u4e2a\u63a5\u53e3\u5757\u5c06\u989c\u8272\u5c5e\u6027\u53d1\u9001\u5230\u51e0\u4f55\u7740\u8272\u5668\u4e2d\uff1a #version 330 core layout (location = 0) in vec2 aPos; layout (location = 1) in vec3 aColor; out VS_OUT { vec3 color; } vs_out; void main() { gl_Position = vec4(aPos.x, aPos.y, 0.0, 1.0); vs_out.color = aColor; } \u63a5\u4e0b\u6765\u6211\u4eec\u8fd8\u9700\u8981\u5728\u51e0\u4f55\u7740\u8272\u5668\u4e2d\u58f0\u660e\u76f8\u540c\u7684\u63a5\u53e3\u5757\uff08\u4f7f\u7528\u4e00\u4e2a\u4e0d\u540c\u7684\u63a5\u53e3\u540d\uff09\uff1a in VS_OUT { vec3 color; } gs_in[]; \u56e0\u4e3a\u51e0\u4f55\u7740\u8272\u5668\u662f\u4f5c\u7528\u4e8e\u8f93\u5165\u7684\u4e00\u7ec4\u9876\u70b9\u7684\uff0c\u4ece\u9876\u70b9\u7740\u8272\u5668\u53d1\u6765\u8f93\u5165\u6570\u636e\u603b\u662f\u4f1a\u4ee5\u6570\u7ec4\u7684\u5f62\u5f0f\u8868\u793a\u51fa\u6765\uff0c\u5373\u4fbf\u6211\u4eec\u73b0\u5728\u53ea\u6709\u4e00\u4e2a\u9876\u70b9\u3002 Important \u6211\u4eec\u5e76\u4e0d\u662f\u5fc5\u987b\u8981\u7528\u63a5\u53e3\u5757\u6765\u5411\u51e0\u4f55\u7740\u8272\u5668\u4f20\u9012\u6570\u636e\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a in vec3 vColor[]; \u5982\u679c\u9876\u70b9\u7740\u8272\u5668\u53d1\u9001\u7684\u989c\u8272\u5411\u91cf\u662f out vec3 vColor \uff0c\u90a3\u8fd9\u4e48\u5199\u5c31\u6ca1\u95ee\u9898\u3002\u7136\u800c\uff0c\u63a5\u53e3\u5757\u5728\u51e0\u4f55\u7740\u8272\u5668\u8fd9\u6837\u7684\u7740\u8272\u5668\u4e2d\u4f1a\u66f4\u5bb9\u6613\u5904\u7406\u4e00\u70b9\u3002\u5b9e\u9645\u4e0a\uff0c\u51e0\u4f55\u7740\u8272\u5668\u7684\u8f93\u5165\u80fd\u591f\u53d8\u5f97\u975e\u5e38\u5927\uff0c\u5c06\u5b83\u4eec\u5408\u5e76\u4e3a\u4e00\u4e2a\u5927\u7684\u63a5\u53e3\u5757\u6570\u7ec4\u4f1a\u66f4\u7b26\u5408\u903b\u8f91\u4e00\u70b9\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u8fd8\u9700\u8981\u4e3a\u4e0b\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u9636\u6bb5\u58f0\u660e\u4e00\u4e2a\u8f93\u51fa\u989c\u8272\u5411\u91cf\uff1a out vec3 fColor; \u56e0\u4e3a\u7247\u6bb5\u7740\u8272\u5668\u53ea\u9700\u8981\u4e00\u4e2a\uff08\u63d2\u503c\u7684\uff09\u989c\u8272\uff0c\u53d1\u9001\u591a\u4e2a\u989c\u8272\u5e76\u6ca1\u6709\u4ec0\u4e48\u610f\u4e49\u3002\u6240\u4ee5\uff0c fColor \u5411\u91cf\u5c31\u4e0d\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u800c\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5411\u91cf\u3002\u5f53\u53d1\u5c04\u4e00\u4e2a\u9876\u70b9\u7684\u65f6\u5019\uff0c\u6bcf\u4e2a\u9876\u70b9\u5c06\u4f1a\u4f7f\u7528\u6700\u540e\u5728 fColor \u4e2d\u50a8\u5b58\u7684\u503c\uff0c\u6765\u7528\u4e8e\u7247\u6bb5\u7740\u8272\u5668\u7684\u8fd0\u884c\u3002\u5bf9\u6211\u4eec\u7684\u623f\u5b50\u6765\u8bf4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u7b2c\u4e00\u4e2a\u9876\u70b9\u53d1\u5c04\u4e4b\u524d\uff0c\u4f7f\u7528\u9876\u70b9\u7740\u8272\u5668\u4e2d\u7684\u989c\u8272\u586b\u5145 fColor \u4e00\u6b21\u5c31\u53ef\u4ee5\u4e86\u3002 fColor = gs_in[0].color; // gs_in[0] \u56e0\u4e3a\u53ea\u6709\u4e00\u4e2a\u8f93\u5165\u9876\u70b9 gl_Position = position + vec4(-0.2, -0.2, 0.0, 0.0); // 1:\u5de6\u4e0b EmitVertex(); gl_Position = position + vec4( 0.2, -0.2, 0.0, 0.0); // 2:\u53f3\u4e0b EmitVertex(); gl_Position = position + vec4(-0.2, 0.2, 0.0, 0.0); // 3:\u5de6\u4e0a EmitVertex(); gl_Position = position + vec4( 0.2, 0.2, 0.0, 0.0); // 4:\u53f3\u4e0a EmitVertex(); gl_Position = position + vec4( 0.0, 0.4, 0.0, 0.0); // 5:\u9876\u90e8 EmitVertex(); EndPrimitive(); \u6240\u6709\u53d1\u5c04\u51fa\u7684\u9876\u70b9\u90fd\u5c06\u5d4c\u6709\u6700\u540e\u50a8\u5b58\u5728 fColor \u4e2d\u7684\u503c\uff0c\u5373\u9876\u70b9\u7684\u989c\u8272\u5c5e\u6027\u503c\u3002\u6240\u6709\u7684\u623f\u5b50\u90fd\u4f1a\u6709\u5b83\u4eec\u81ea\u5df1\u7684\u989c\u8272\u4e86\uff1a \u4ec5\u4ec5\u662f\u4e3a\u4e86\u6709\u8da3\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5047\u88c5\u8fd9\u662f\u51ac\u5929\uff0c\u5c06\u6700\u540e\u4e00\u4e2a\u9876\u70b9\u7684\u989c\u8272\u8bbe\u7f6e\u4e3a\u767d\u8272\uff0c\u7ed9\u5c4b\u9876\u843d\u4e0a\u4e00\u4e9b\u96ea\u3002 fColor = gs_in[0].color; gl_Position = position + vec4(-0.2, -0.2, 0.0, 0.0); // 1:\u5de6\u4e0b EmitVertex(); gl_Position = position + vec4( 0.2, -0.2, 0.0, 0.0); // 2:\u53f3\u4e0b EmitVertex(); gl_Position = position + vec4(-0.2, 0.2, 0.0, 0.0); // 3:\u5de6\u4e0a EmitVertex(); gl_Position = position + vec4( 0.2, 0.2, 0.0, 0.0); // 4:\u53f3\u4e0a EmitVertex(); gl_Position = position + vec4( 0.0, 0.4, 0.0, 0.0); // 5:\u9876\u90e8 fColor = vec3(1.0, 1.0, 1.0); EmitVertex(); EndPrimitive(); \u6700\u7ec8\u7ed3\u679c\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a \u4f60\u53ef\u4ee5\u5c06\u4f60\u7684\u4ee3\u7801\u4e0e \u8fd9\u91cc \u7684OpenGL\u4ee3\u7801\u8fdb\u884c\u6bd4\u5bf9\u3002 \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6709\u4e86\u51e0\u4f55\u7740\u8272\u5668\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u5c06\u6700\u7b80\u5355\u7684\u56fe\u5143\u53d8\u5f97\u5341\u5206\u6709\u521b\u610f\u3002\u56e0\u4e3a\u8fd9\u4e9b\u5f62\u72b6\u662f\u5728GPU\u7684\u8d85\u5feb\u786c\u4ef6\u4e2d\u52a8\u6001\u751f\u6210\u7684\uff0c\u8fd9\u4f1a\u6bd4\u5728\u9876\u70b9\u7f13\u51b2\u4e2d\u624b\u52a8\u5b9a\u4e49\u56fe\u5f62\u8981\u9ad8\u6548\u5f88\u591a\u3002\u56e0\u6b64\uff0c\u51e0\u4f55\u7f13\u51b2\u5bf9\u7b80\u5355\u800c\u4e14\u7ecf\u5e38\u91cd\u590d\u7684\u5f62\u72b6\u6765\u8bf4\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f18\u5316\u5de5\u5177\uff0c\u6bd4\u5982\u4f53\u7d20(Voxel)\u4e16\u754c\u4e2d\u7684\u65b9\u5757\u548c\u5ba4\u5916\u8349\u5730\u7684\u6bcf\u4e00\u6839\u8349\u3002 \u7206\u7834\u7269\u4f53 \u5c3d\u7ba1\u7ed8\u5236\u623f\u5b50\u975e\u5e38\u6709\u8da3\uff0c\u4f46\u6211\u4eec\u4e0d\u4f1a\u7ecf\u5e38\u8fd9\u4e48\u505a\u3002\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u7ee7\u7eed\u6df1\u5165\uff0c\u6765\u7206\u7834(Explode)\u7269\u4f53\uff01\u867d\u7136\u8fd9\u4e5f\u662f\u4e00\u4e2a\u4e0d\u600e\u4e48\u5e38\u7528\u7684\u4e1c\u897f\uff0c\u4f46\u662f\u5b83\u80fd\u5411\u4f60\u5c55\u793a\u51e0\u4f55\u7740\u8272\u5668\u7684\u5f3a\u5927\u4e4b\u5904\u3002 \u5f53\u6211\u4eec\u8bf4 \u7206\u7834 \u4e00\u4e2a\u7269\u4f53\u65f6\uff0c\u6211\u4eec\u5e76\u4e0d\u662f\u6307\u8981\u5c06\u5b9d\u8d35\u7684\u9876\u70b9\u96c6\u7ed9\u70b8\u6389\uff0c\u6211\u4eec\u662f\u8981\u5c06\u6bcf\u4e2a\u4e09\u89d2\u5f62\u6cbf\u7740\u6cd5\u5411\u91cf\u7684\u65b9\u5411\u79fb\u52a8\u4e00\u5c0f\u6bb5\u65f6\u95f4\u3002\u6548\u679c\u5c31\u662f\uff0c\u6574\u4e2a\u7269\u4f53\u770b\u8d77\u6765\u50cf\u662f\u6cbf\u7740\u6bcf\u4e2a\u4e09\u89d2\u5f62\u7684\u6cd5\u7ebf\u5411\u91cf \u7206\u70b8 \u4e00\u6837\u3002\u7206\u70b8\u4e09\u89d2\u5f62\u7684\u6548\u679c\u5728\u7eb3\u7c73\u88c5\u6a21\u578b\u4e0a\u770b\u8d77\u6765\u50cf\u662f\u8fd9\u6837\u7684\uff1a \u8fd9\u6837\u7684\u51e0\u4f55\u7740\u8272\u5668\u6548\u679c\u7684\u4e00\u4e2a\u597d\u5904\u5c31\u662f\uff0c\u65e0\u8bba\u7269\u4f53\u6709\u591a\u590d\u6742\uff0c\u5b83\u90fd\u80fd\u591f\u5e94\u7528\u4e0a\u53bb\u3002 \u56e0\u4e3a\u6211\u4eec\u60f3\u8981\u6cbf\u7740\u4e09\u89d2\u5f62\u7684\u6cd5\u5411\u91cf\u4f4d\u79fb\u6bcf\u4e2a\u9876\u70b9\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u8ba1\u7b97\u8fd9\u4e2a\u6cd5\u5411\u91cf\u3002\u6211\u4eec\u6240\u8981\u505a\u7684\u662f\u8ba1\u7b97\u5782\u76f4\u4e8e\u4e09\u89d2\u5f62\u8868\u9762\u7684\u5411\u91cf\uff0c\u4ec5\u4f7f\u7528\u6211\u4eec\u80fd\u591f\u8bbf\u95ee\u76843\u4e2a\u9876\u70b9\u3002\u4f60\u53ef\u80fd\u8fd8\u8bb0\u5f97\u5728 \u53d8\u6362 \u5c0f\u8282\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 \u53c9\u4e58 \u6765\u83b7\u53d6\u5782\u76f4\u4e8e\u5176\u5b83\u4e24\u4e2a\u5411\u91cf\u7684\u4e00\u4e2a\u5411\u91cf\u3002\u5982\u679c\u6211\u4eec\u80fd\u591f\u83b7\u53d6\u4e24\u4e2a\u5e73\u884c\u4e8e\u4e09\u89d2\u5f62\u8868\u9762\u7684\u5411\u91cf a \u548c b \uff0c\u6211\u4eec\u5c31\u80fd\u591f\u5bf9\u8fd9\u4e24\u4e2a\u5411\u91cf\u8fdb\u884c\u53c9\u4e58\u6765\u83b7\u53d6\u6cd5\u5411\u91cf\u4e86\u3002\u4e0b\u9762\u8fd9\u4e2a\u51e0\u4f55\u7740\u8272\u5668\u51fd\u6570\u505a\u7684\u6b63\u662f\u8fd9\u4e2a\uff0c\u6765\u4f7f\u75283\u4e2a\u8f93\u5165\u9876\u70b9\u5750\u6807\u6765\u83b7\u53d6\u6cd5\u5411\u91cf\uff1a vec3 GetNormal() { vec3 a = vec3(gl_in[0].gl_Position) - vec3(gl_in[1].gl_Position); vec3 b = vec3(gl_in[2].gl_Position) - vec3(gl_in[1].gl_Position); return normalize(cross(a, b)); } \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u51cf\u6cd5\u83b7\u53d6\u4e86\u4e24\u4e2a\u5e73\u884c\u4e8e\u4e09\u89d2\u5f62\u8868\u9762\u7684\u5411\u91cf a \u548c b \u3002\u56e0\u4e3a\u4e24\u4e2a\u5411\u91cf\u76f8\u51cf\u80fd\u591f\u5f97\u5230\u8fd9\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u5dee\u503c\uff0c\u5e76\u4e14\u4e09\u4e2a\u70b9\u90fd\u4f4d\u4e8e\u4e09\u89d2\u5e73\u9762\u4e0a\uff0c\u5bf9\u4efb\u610f\u4e24\u4e2a\u5411\u91cf\u76f8\u51cf\u90fd\u80fd\u591f\u5f97\u5230\u4e00\u4e2a\u5e73\u884c\u4e8e\u5e73\u9762\u7684\u5411\u91cf\u3002\u6ce8\u610f\uff0c\u5982\u679c\u6211\u4eec\u4ea4\u6362\u4e86 cross \u51fd\u6570\u4e2d a \u548c b \u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2a\u6307\u5411\u76f8\u53cd\u65b9\u5411\u7684\u6cd5\u5411\u91cf\u2014\u2014\u8fd9\u91cc\u7684\u987a\u5e8f\u5f88\u91cd\u8981\uff01 \u65e2\u7136\u77e5\u9053\u4e86\u5982\u4f55\u8ba1\u7b97\u6cd5\u5411\u91cf\u4e86\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u521b\u5efa\u4e00\u4e2a explode \u51fd\u6570\u4e86\uff0c\u5b83\u4f7f\u7528\u6cd5\u5411\u91cf\u548c\u9876\u70b9\u4f4d\u7f6e\u5411\u91cf\u4f5c\u4e3a\u53c2\u6570\u3002\u8fd9\u4e2a\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5411\u91cf\uff0c\u5b83\u662f\u4f4d\u7f6e\u5411\u91cf\u6cbf\u7740\u6cd5\u7ebf\u5411\u91cf\u8fdb\u884c\u4f4d\u79fb\u4e4b\u540e\u7684\u7ed3\u679c\uff1a vec4 explode(vec4 position, vec3 normal) { float magnitude = 2.0; vec3 direction = normal * ((sin(time) + 1.0) / 2.0) * magnitude; return position + vec4(direction, 0.0); } \u51fd\u6570\u672c\u8eab\u5e94\u8be5\u4e0d\u662f\u975e\u5e38\u590d\u6742\u3002 sin \u51fd\u6570\u63a5\u6536\u4e00\u4e2a time \u53c2\u6570\uff0c\u5b83\u6839\u636e\u65f6\u95f4\u8fd4\u56de\u4e00\u4e2a-1.0\u52301.0\u4e4b\u95f4\u7684\u503c\u3002\u56e0\u4e3a\u6211\u4eec\u4e0d\u60f3\u8ba9\u7269\u4f53 \u5411\u5185\u7206\u70b8 (Implode)\uff0c\u6211\u4eec\u5c06sin\u503c\u53d8\u6362\u5230\u4e86[0, 1]\u7684\u8303\u56f4\u5185\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u4f1a\u4e58\u4ee5 normal \u5411\u91cf\uff0c\u5e76\u4e14\u6700\u7ec8\u7684 direction \u5411\u91cf\u4f1a\u88ab\u52a0\u5230\u4f4d\u7f6e\u5411\u91cf\u4e0a\u3002 \u5f53\u4f7f\u7528\u6211\u4eec\u7684 \u6a21\u578b\u52a0\u8f7d\u5668 \u7ed8\u5236\u4e00\u4e2a\u6a21\u578b\u65f6\uff0c \u7206\u7834 (Explode)\u6548\u679c\u7684\u5b8c\u6574\u51e0\u4f55\u7740\u8272\u5668\u662f\u8fd9\u6837\u7684\uff1a #version 330 core layout (triangles) in; layout (triangle_strip, max_vertices = 3) out; in VS_OUT { vec2 texCoords; } gs_in[]; out vec2 TexCoords; uniform float time; vec4 explode(vec4 position, vec3 normal) { ... } vec3 GetNormal() { ... } void main() { vec3 normal = GetNormal(); gl_Position = explode(gl_in[0].gl_Position, normal); TexCoords = gs_in[0].texCoords; EmitVertex(); gl_Position = explode(gl_in[1].gl_Position, normal); TexCoords = gs_in[1].texCoords; EmitVertex(); gl_Position = explode(gl_in[2].gl_Position, normal); TexCoords = gs_in[2].texCoords; EmitVertex(); EndPrimitive(); } \u6ce8\u610f\u6211\u4eec\u5728\u53d1\u5c04\u9876\u70b9\u4e4b\u524d\u8f93\u51fa\u4e86\u5bf9\u5e94\u7684\u7eb9\u7406\u5750\u6807\u3002 \u800c\u4e14\u522b\u5fd8\u4e86\u5728OpenGL\u4ee3\u7801\u4e2d\u8bbe\u7f6e time \u53d8\u91cf\uff1a shader.setFloat(\"time\", glfwGetTime()); \u6700\u7ec8\u7684\u6548\u679c\u662f\uff0c3D\u6a21\u578b\u770b\u8d77\u6765\u968f\u7740\u65f6\u95f4\u4e0d\u65ad\u5728\u7206\u7834\u5b83\u7684\u9876\u70b9\uff0c\u5728\u8fd9\u4e4b\u540e\u53c8\u56de\u5230\u6b63\u5e38\u72b6\u6001\u3002\u867d\u7136\u8fd9\u5e76\u4e0d\u662f\u975e\u5e38\u6709\u7528\uff0c\u5b83\u7684\u786e\u5411\u4f60\u5c55\u793a\u4e86\u51e0\u4f55\u7740\u8272\u5668\u66f4\u9ad8\u7ea7\u7684\u7528\u6cd5\u3002\u4f60\u53ef\u4ee5\u5c06\u4f60\u7684\u4ee3\u7801\u548c \u8fd9\u91cc \u5b8c\u6574\u7684\u6e90\u7801\u8fdb\u884c\u6bd4\u8f83\u3002 \u6cd5\u5411\u91cf\u53ef\u89c6\u5316 \u5728\u8fd9\u4e00\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u51e0\u4f55\u7740\u8272\u5668\u6765\u5b9e\u73b0\u4e00\u4e2a\u771f\u6b63\u6709\u7528\u7684\u4f8b\u5b50\uff1a\u663e\u793a\u4efb\u610f\u7269\u4f53\u7684\u6cd5\u5411\u91cf\u3002\u5f53\u7f16\u5199\u5149\u7167\u7740\u8272\u5668\u65f6\uff0c\u4f60\u53ef\u80fd\u4f1a\u6700\u7ec8\u4f1a\u5f97\u5230\u4e00\u4e9b\u5947\u602a\u7684\u89c6\u89c9\u8f93\u51fa\uff0c\u4f46\u53c8\u5f88\u96be\u786e\u5b9a\u5bfc\u81f4\u95ee\u9898\u7684\u539f\u56e0\u3002\u5149\u7167\u9519\u8bef\u5f88\u5e38\u89c1\u7684\u539f\u56e0\u5c31\u662f\u6cd5\u5411\u91cf\u9519\u8bef\uff0c\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u4e0d\u6b63\u786e\u52a0\u8f7d\u9876\u70b9\u6570\u636e\u3001\u9519\u8bef\u5730\u5c06\u5b83\u4eec\u5b9a\u4e49\u4e3a\u9876\u70b9\u5c5e\u6027\u6216\u5728\u7740\u8272\u5668\u4e2d\u4e0d\u6b63\u786e\u5730\u7ba1\u7406\u6240\u5bfc\u81f4\u7684\u3002\u6211\u4eec\u60f3\u8981\u7684\u662f\u4f7f\u7528\u67d0\u79cd\u65b9\u5f0f\u6765\u68c0\u6d4b\u63d0\u4f9b\u7684\u6cd5\u5411\u91cf\u662f\u6b63\u786e\u7684\u3002\u68c0\u6d4b\u6cd5\u5411\u91cf\u662f\u5426\u6b63\u786e\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u65b9\u5f0f\u5c31\u662f\u5bf9\u5b83\u4eec\u8fdb\u884c\u53ef\u89c6\u5316\uff0c\u51e0\u4f55\u7740\u8272\u5668\u6b63\u662f\u5b9e\u73b0\u8fd9\u4e00\u76ee\u7684\u975e\u5e38\u6709\u7528\u7684\u5de5\u5177\u3002 \u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a\u6211\u4eec\u9996\u5148\u4e0d\u4f7f\u7528\u51e0\u4f55\u7740\u8272\u5668\u6b63\u5e38\u7ed8\u5236\u573a\u666f\u3002\u7136\u540e\u518d\u6b21\u7ed8\u5236\u573a\u666f\uff0c\u4f46\u8fd9\u6b21\u53ea\u663e\u793a\u901a\u8fc7\u51e0\u4f55\u7740\u8272\u5668\u751f\u6210\u6cd5\u5411\u91cf\u3002\u51e0\u4f55\u7740\u8272\u5668\u63a5\u6536\u4e00\u4e2a\u4e09\u89d2\u5f62\u56fe\u5143\uff0c\u5e76\u6cbf\u7740\u6cd5\u5411\u91cf\u751f\u6210\u4e09\u6761\u7ebf\u2014\u2014\u6bcf\u4e2a\u9876\u70b9\u4e00\u4e2a\u6cd5\u5411\u91cf\u3002\u4f2a\u4ee3\u7801\u770b\u8d77\u6765\u4f1a\u50cf\u662f\u8fd9\u6837\uff1a shader.use(); DrawScene(); normalDisplayShader.use(); DrawScene(); \u8fd9\u6b21\u5728\u51e0\u4f55\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u6a21\u578b\u63d0\u4f9b\u7684\u9876\u70b9\u6cd5\u7ebf\uff0c\u800c\u4e0d\u662f\u81ea\u5df1\u751f\u6210\uff0c\u4e3a\u4e86\u9002\u914d\uff08\u89c2\u5bdf\u548c\u6a21\u578b\u77e9\u9635\u7684\uff09\u7f29\u653e\u548c\u65cb\u8f6c\uff0c\u6211\u4eec\u5728\u5c06\u6cd5\u7ebf\u53d8\u6362\u5230\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u4e4b\u524d\uff0c\u5148\u4f7f\u7528\u6cd5\u7ebf\u77e9\u9635\u53d8\u6362\u4e00\u6b21\uff08\u51e0\u4f55\u7740\u8272\u5668\u63a5\u53d7\u7684\u4f4d\u7f6e\u5411\u91cf\u662f\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u5c06\u6cd5\u5411\u91cf\u53d8\u6362\u5230\u76f8\u540c\u7684\u7a7a\u95f4\u4e2d\uff09\u3002\u8fd9\u53ef\u4ee5\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5b8c\u6210\uff1a #version 330 core layout (location = 0) in vec3 aPos; layout (location = 1) in vec3 aNormal; out VS_OUT { vec3 normal; } vs_out; uniform mat4 view; uniform mat4 model; void main() { gl_Position = view * model * vec4(aPos, 1.0); mat3 normalMatrix = mat3(transpose(inverse(view * model))); vs_out.normal = normalize(vec3(vec4(normalMatrix * aNormal, 0.0))); } \u53d8\u6362\u540e\u7684\u89c2\u5bdf\u7a7a\u95f4\u6cd5\u5411\u91cf\u4f1a\u4ee5\u63a5\u53e3\u5757\u7684\u5f62\u5f0f\u4f20\u9012\u5230\u4e0b\u4e2a\u7740\u8272\u5668\u9636\u6bb5\u3002\u63a5\u4e0b\u6765\uff0c\u51e0\u4f55\u7740\u8272\u5668\u4f1a\u63a5\u6536\u6bcf\u4e00\u4e2a\u9876\u70b9\uff08\u5305\u62ec\u4e00\u4e2a\u4f4d\u7f6e\u5411\u91cf\u548c\u4e00\u4e2a\u6cd5\u5411\u91cf\uff09\uff0c\u5e76\u5728\u6bcf\u4e2a\u4f4d\u7f6e\u5411\u91cf\u5904\u7ed8\u5236\u4e00\u4e2a\u6cd5\u7ebf\u5411\u91cf\uff1a #version 330 core layout (triangles) in; layout (line_strip, max_vertices = 6) out; in VS_OUT { vec3 normal; } gs_in[]; const float MAGNITUDE = 0.4; uniform mat4 projection; void GenerateLine(int index) { gl_Position = projection * gl_in[index].gl_Position; EmitVertex(); gl_Position = projection * (gl_in[index].gl_Position + vec4(gs_in[index].normal, 0.0) * MAGNITUDE); EmitVertex(); EndPrimitive(); } void main() { GenerateLine(0); // \u7b2c\u4e00\u4e2a\u9876\u70b9\u6cd5\u7ebf GenerateLine(1); // \u7b2c\u4e8c\u4e2a\u9876\u70b9\u6cd5\u7ebf GenerateLine(2); // \u7b2c\u4e09\u4e2a\u9876\u70b9\u6cd5\u7ebf } \u50cf\u8fd9\u6837\u7684\u51e0\u4f55\u7740\u8272\u5668\u5e94\u8be5\u5f88\u5bb9\u6613\u7406\u89e3\u4e86\u3002\u6ce8\u610f\u6211\u4eec\u5c06\u6cd5\u5411\u91cf\u4e58\u4ee5\u4e86\u4e00\u4e2a MAGNITUDE \u5411\u91cf\uff0c\u6765\u9650\u5236\u663e\u793a\u51fa\u7684\u6cd5\u5411\u91cf\u5927\u5c0f\uff08\u5426\u5219\u5b83\u4eec\u5c31\u6709\u70b9\u5927\u4e86\uff09\u3002 \u56e0\u4e3a\u6cd5\u7ebf\u7684\u53ef\u89c6\u5316\u901a\u5e38\u90fd\u662f\u7528\u4e8e\u8c03\u8bd5\u76ee\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7247\u6bb5\u7740\u8272\u5668\uff0c\u5c06\u5b83\u4eec\u663e\u793a\u4e3a\u5355\u8272\u7684\u7ebf\uff08\u5982\u679c\u4f60\u613f\u610f\u4e5f\u53ef\u4ee5\u662f\u975e\u5e38\u597d\u770b\u7684\u7ebf\uff09\uff1a #version 330 core out vec4 FragColor; void main() { FragColor = vec4(1.0, 1.0, 0.0, 1.0); } \u73b0\u5728\uff0c\u9996\u5148\u4f7f\u7528\u666e\u901a\u7740\u8272\u5668\u6e32\u67d3\u6a21\u578b\uff0c\u518d\u4f7f\u7528\u7279\u522b\u7684 \u6cd5\u7ebf\u53ef\u89c6\u5316 \u7740\u8272\u5668\u6e32\u67d3\uff0c\u4f60\u5c06\u770b\u5230\u8fd9\u6837\u7684\u6548\u679c\uff1a \u9664\u4e86\u8ba9\u6211\u4eec\u7684\u80cc\u5305\u53d8\u5f97\u6bdb\u8338\u8338\u4e4b\u5916\uff0c\u5b83\u8fd8\u80fd\u8ba9\u6211\u4eec\u5f88\u597d\u5730\u5224\u65ad\u6a21\u578b\u7684\u6cd5\u5411\u91cf\u662f\u5426\u51c6\u786e\u3002\u4f60\u53ef\u4ee5\u60f3\u8c61\u5230\uff0c\u8fd9\u6837\u7684\u51e0\u4f55\u7740\u8272\u5668\u4e5f\u7ecf\u5e38\u7528\u4e8e\u7ed9\u7269\u4f53\u6dfb\u52a0 \u6bdb\u53d1 (Fur)\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u6e90\u7801\u3002","title":"\u51e0\u4f55\u7740\u8272\u5668"},{"location":"04%20Advanced%20OpenGL/09%20Geometry%20Shader/#_1","text":"\u539f\u6587 Geometry Shader \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u5728\u9876\u70b9\u548c\u7247\u6bb5\u7740\u8272\u5668\u4e4b\u95f4\u6709\u4e00\u4e2a\u53ef\u9009\u7684 \u51e0\u4f55\u7740\u8272\u5668 (Geometry Shader)\uff0c\u51e0\u4f55\u7740\u8272\u5668\u7684\u8f93\u5165\u662f\u4e00\u4e2a\u56fe\u5143\uff08\u5982\u70b9\u6216\u4e09\u89d2\u5f62\uff09\u7684\u4e00\u7ec4\u9876\u70b9\u3002\u51e0\u4f55\u7740\u8272\u5668\u53ef\u4ee5\u5728\u9876\u70b9\u53d1\u9001\u5230\u4e0b\u4e00\u7740\u8272\u5668\u9636\u6bb5\u4e4b\u524d\u5bf9\u5b83\u4eec\u968f\u610f\u53d8\u6362\u3002\u7136\u800c\uff0c\u51e0\u4f55\u7740\u8272\u5668\u6700\u6709\u8da3\u7684\u5730\u65b9\u5728\u4e8e\uff0c\u5b83\u80fd\u591f\u5c06\uff08\u8fd9\u4e00\u7ec4\uff09\u9876\u70b9\u53d8\u6362\u4e3a\u5b8c\u5168\u4e0d\u540c\u7684\u56fe\u5143\uff0c\u5e76\u4e14\u8fd8\u80fd\u751f\u6210\u6bd4\u539f\u6765\u66f4\u591a\u7684\u9876\u70b9\u3002 \u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u6211\u4eec\u76f4\u63a5\u5148\u770b\u4e00\u4e2a\u51e0\u4f55\u7740\u8272\u5668\u7684\u4f8b\u5b50\uff1a #version 330 core layout (points) in; layout (line_strip, max_vertices = 2) out; void main() { gl_Position = gl_in[0].gl_Position + vec4(-0.1, 0.0, 0.0, 0.0); EmitVertex(); gl_Position = gl_in[0].gl_Position + vec4( 0.1, 0.0, 0.0, 0.0); EmitVertex(); EndPrimitive(); } \u5728\u51e0\u4f55\u7740\u8272\u5668\u7684\u9876\u90e8\uff0c\u6211\u4eec\u9700\u8981\u58f0\u660e\u4ece\u9876\u70b9\u7740\u8272\u5668\u8f93\u5165\u7684\u56fe\u5143\u7c7b\u578b\u3002\u8fd9\u9700\u8981\u5728 in \u5173\u952e\u5b57\u524d\u58f0\u660e\u4e00\u4e2a\u5e03\u5c40\u4fee\u9970\u7b26(Layout Qualifier)\u3002\u8fd9\u4e2a\u8f93\u5165\u5e03\u5c40\u4fee\u9970\u7b26\u53ef\u4ee5\u4ece\u9876\u70b9\u7740\u8272\u5668\u63a5\u6536\u4e0b\u5217\u4efb\u4f55\u4e00\u4e2a\u56fe\u5143\u503c\uff1a points \uff1a\u7ed8\u5236 GL_POINTS \u56fe\u5143\u65f6\uff081\uff09\u3002 lines \uff1a\u7ed8\u5236 GL_LINES \u6216 GL_LINE_STRIP \u65f6\uff082\uff09 lines_adjacency \uff1a GL_LINES_ADJACENCY \u6216 GL_LINE_STRIP_ADJACENCY \uff084\uff09 triangles \uff1a GL_TRIANGLES \u3001 GL_TRIANGLE_STRIP \u6216 GL_TRIANGLE_FAN \uff083\uff09 triangles_adjacency \uff1a GL_TRIANGLES_ADJACENCY \u6216 GL_TRIANGLE_STRIP_ADJACENCY \uff086\uff09 \u4ee5\u4e0a\u662f\u80fd\u63d0\u4f9b\u7ed9 glDrawArrays \u6e32\u67d3\u51fd\u6570\u7684\u51e0\u4e4e\u6240\u6709\u56fe\u5143\u4e86\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u5c06\u9876\u70b9\u7ed8\u5236\u4e3a GL_TRIANGLES \uff0c\u6211\u4eec\u5c31\u8981\u5c06\u8f93\u5165\u4fee\u9970\u7b26\u8bbe\u7f6e\u4e3a triangles \u3002\u62ec\u53f7\u5185\u7684\u6570\u5b57\u8868\u793a\u7684\u662f\u4e00\u4e2a\u56fe\u5143\u6240\u5305\u542b\u7684\u6700\u5c0f\u9876\u70b9\u6570\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u6307\u5b9a\u51e0\u4f55\u7740\u8272\u5668\u8f93\u51fa\u7684\u56fe\u5143\u7c7b\u578b\uff0c\u8fd9\u9700\u8981\u5728 out \u5173\u952e\u5b57\u524d\u9762\u52a0\u4e00\u4e2a\u5e03\u5c40\u4fee\u9970\u7b26\u3002\u548c\u8f93\u5165\u5e03\u5c40\u4fee\u9970\u7b26\u4e00\u6837\uff0c\u8f93\u51fa\u5e03\u5c40\u4fee\u9970\u7b26\u4e5f\u53ef\u4ee5\u63a5\u53d7\u51e0\u4e2a\u56fe\u5143\u503c\uff1a points line_strip triangle_strip \u6709\u4e86\u8fd93\u4e2a\u8f93\u51fa\u4fee\u9970\u7b26\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u8f93\u5165\u56fe\u5143\u521b\u5efa\u51e0\u4e4e\u4efb\u610f\u7684\u5f62\u72b6\u4e86\u3002\u8981\u751f\u6210\u4e00\u4e2a\u4e09\u89d2\u5f62\u7684\u8bdd\uff0c\u6211\u4eec\u5c06\u8f93\u51fa\u5b9a\u4e49\u4e3a triangle_strip \uff0c\u5e76\u8f93\u51fa3\u4e2a\u9876\u70b9\u3002 \u51e0\u4f55\u7740\u8272\u5668\u540c\u65f6\u5e0c\u671b\u6211\u4eec\u8bbe\u7f6e\u4e00\u4e2a\u5b83\u6700\u5927\u80fd\u591f\u8f93\u51fa\u7684\u9876\u70b9\u6570\u91cf\uff08\u5982\u679c\u4f60\u8d85\u8fc7\u4e86\u8fd9\u4e2a\u503c\uff0cOpenGL\u5c06\u4e0d\u4f1a\u7ed8\u5236 \u591a\u51fa\u7684 \u9876\u70b9\uff09\uff0c\u8fd9\u4e2a\u4e5f\u53ef\u4ee5\u5728 out \u5173\u952e\u5b57\u7684\u5e03\u5c40\u4fee\u9970\u7b26\u4e2d\u8bbe\u7f6e\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u8f93\u51fa\u4e00\u4e2a line_strip \uff0c\u5e76\u5c06\u6700\u5927\u9876\u70b9\u6570\u8bbe\u7f6e\u4e3a2\u4e2a\u3002 Important \u5982\u679c\u4f60\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u7ebf\u6761(Line Strip)\uff1a\u7ebf\u6761\u8fde\u63a5\u4e86\u4e00\u7ec4\u70b9\uff0c\u5f62\u6210\u4e00\u6761\u8fde\u7eed\u7684\u7ebf\uff0c\u5b83\u6700\u5c11\u8981\u7531\u4e24\u4e2a\u70b9\u6765\u7ec4\u6210\u3002\u5728\u6e32\u67d3\u51fd\u6570\u4e2d\u6bcf\u591a\u52a0\u4e00\u4e2a\u70b9\uff0c\u5c31\u4f1a\u5728\u8fd9\u4e2a\u70b9\u4e0e\u524d\u4e00\u4e2a\u70b9\u4e4b\u95f4\u5f62\u6210\u4e00\u6761\u65b0\u7684\u7ebf\u3002\u5728\u4e0b\u9762\u8fd9\u5f20\u56fe\u4e2d\uff0c\u6211\u4eec\u67095\u4e2a\u9876\u70b9\uff1a \u4e3a\u4e86\u751f\u6210\u66f4\u6709\u610f\u4e49\u7684\u7ed3\u679c\uff0c\u6211\u4eec\u9700\u8981\u67d0\u79cd\u65b9\u5f0f\u6765\u83b7\u53d6\u524d\u4e00\u7740\u8272\u5668\u9636\u6bb5\u7684\u8f93\u51fa\u3002GLSL\u63d0\u4f9b\u7ed9\u6211\u4eec\u4e00\u4e2a\u540d\u4e3a gl_in \u7684 \u5185\u5efa (Built-in)\u53d8\u91cf\uff0c\u5728\u5185\u90e8\u770b\u8d77\u6765\uff08\u53ef\u80fd\uff09\u662f\u8fd9\u6837\u7684\uff1a in gl_Vertex { vec4 gl_Position; float gl_PointSize; float gl_ClipDistance[]; } gl_in[]; \u8fd9\u91cc\uff0c\u5b83\u88ab\u58f0\u660e\u4e3a\u4e00\u4e2a \u63a5\u53e3\u5757 \uff08Interface Block\uff0c\u6211\u4eec\u5728 \u4e0a\u4e00\u8282 \u5df2\u7ecf\u8ba8\u8bba\u8fc7\uff09\uff0c\u5b83\u5305\u542b\u4e86\u51e0\u4e2a\u5f88\u6709\u610f\u601d\u7684\u53d8\u91cf\uff0c\u5176\u4e2d\u6700\u6709\u8da3\u7684\u4e00\u4e2a\u662f gl_Position \uff0c\u5b83\u662f\u548c\u9876\u70b9\u7740\u8272\u5668\u8f93\u51fa\u975e\u5e38\u76f8\u4f3c\u7684\u4e00\u4e2a\u5411\u91cf\u3002 \u8981\u6ce8\u610f\u7684\u662f\uff0c\u5b83\u88ab\u58f0\u660e\u4e3a\u4e00\u4e2a\u6570\u7ec4\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u7684\u6e32\u67d3\u56fe\u5143\u5305\u542b\u591a\u4e8e1\u4e2a\u7684\u9876\u70b9\uff0c\u800c\u51e0\u4f55\u7740\u8272\u5668\u7684\u8f93\u5165\u662f\u4e00\u4e2a\u56fe\u5143\u7684 \u6240\u6709 \u9876\u70b9\u3002 \u6709\u4e86\u4e4b\u524d\u9876\u70b9\u7740\u8272\u5668\u9636\u6bb5\u7684\u9876\u70b9\u6570\u636e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u75282\u4e2a\u51e0\u4f55\u7740\u8272\u5668\u51fd\u6570\uff0c EmitVertex \u548c EndPrimitive \uff0c\u6765\u751f\u6210\u65b0\u7684\u6570\u636e\u4e86\u3002\u51e0\u4f55\u7740\u8272\u5668\u5e0c\u671b\u4f60\u80fd\u591f\u751f\u6210\u5e76\u8f93\u51fa\u81f3\u5c11\u4e00\u4e2a\u5b9a\u4e49\u4e3a\u8f93\u51fa\u7684\u56fe\u5143\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u81f3\u5c11\u751f\u6210\u4e00\u4e2a\u7ebf\u6761\u56fe\u5143\u3002 void main() { gl_Position = gl_in[0].gl_Position + vec4(-0.1, 0.0, 0.0, 0.0); EmitVertex(); gl_Position = gl_in[0].gl_Position + vec4( 0.1, 0.0, 0.0, 0.0); EmitVertex(); EndPrimitive(); } \u6bcf\u6b21\u6211\u4eec\u8c03\u7528 EmitVertex \u65f6\uff0c gl_Position \u4e2d\u7684\u5411\u91cf\u4f1a\u88ab\u6dfb\u52a0\u5230\u56fe\u5143\u4e2d\u6765\u3002\u5f53 EndPrimitive \u88ab\u8c03\u7528\u65f6\uff0c\u6240\u6709\u53d1\u5c04\u51fa\u7684(Emitted)\u9876\u70b9\u90fd\u4f1a\u5408\u6210\u4e3a\u6307\u5b9a\u7684\u8f93\u51fa\u6e32\u67d3\u56fe\u5143\u3002\u5728\u4e00\u4e2a\u6216\u591a\u4e2a EmitVertex \u8c03\u7528\u4e4b\u540e\u91cd\u590d\u8c03\u7528 EndPrimitive \u80fd\u591f\u751f\u6210\u591a\u4e2a\u56fe\u5143\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u53d1\u5c04\u4e86\u4e24\u4e2a\u9876\u70b9\uff0c\u5b83\u4eec\u4ece\u539f\u59cb\u9876\u70b9\u4f4d\u7f6e\u5e73\u79fb\u4e86\u4e00\u6bb5\u8ddd\u79bb\uff0c\u4e4b\u540e\u8c03\u7528\u4e86 EndPrimitive \uff0c\u5c06\u8fd9\u4e24\u4e2a\u9876\u70b9\u5408\u6210\u4e3a\u4e00\u4e2a\u5305\u542b\u4e24\u4e2a\u9876\u70b9\u7684\u7ebf\u6761\u3002 \u73b0\u5728\u4f60\uff08\u5927\u6982\uff09\u4e86\u89e3\u4e86\u51e0\u4f55\u7740\u8272\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u731c\u51fa\u8fd9\u4e2a\u51e0\u4f55\u7740\u8272\u5668\u662f\u505a\u4ec0\u4e48\u7684\u4e86\u3002\u5b83\u63a5\u53d7\u4e00\u4e2a\u70b9\u56fe\u5143\u4f5c\u4e3a\u8f93\u5165\uff0c\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u4e2d\u5fc3\uff0c\u521b\u5efa\u4e00\u6761\u6c34\u5e73\u7684\u7ebf\u56fe\u5143\u3002\u5982\u679c\u6211\u4eec\u6e32\u67d3\u5b83\uff0c\u770b\u8d77\u6765\u4f1a\u662f\u8fd9\u6837\u7684\uff1a \u76ee\u524d\u8fd8\u5e76\u6ca1\u6709\u4ec0\u4e48\u4ee4\u4eba\u60ca\u53f9\u7684\u6548\u679c\uff0c\u4f46\u8003\u8651\u5230\u8fd9\u4e2a\u8f93\u51fa\u662f\u901a\u8fc7\u8c03\u7528\u4e0b\u9762\u7684\u6e32\u67d3\u51fd\u6570\u6765\u751f\u6210\u7684\uff0c\u5b83\u8fd8\u662f\u5f88\u6709\u610f\u601d\u7684\uff1a glDrawArrays(GL_POINTS, 0, 4); \u867d\u7136\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5b83\u7684\u786e\u5411\u4f60\u5c55\u793a\u4e86\u5982\u4f55\u80fd\u591f\u4f7f\u7528\u51e0\u4f55\u7740\u8272\u5668\u6765\uff08\u52a8\u6001\u5730\uff09\u751f\u6210\u65b0\u7684\u5f62\u72b6\u3002\u5728\u4e4b\u540e\u6211\u4eec\u4f1a\u5229\u7528\u51e0\u4f55\u7740\u8272\u5668\u521b\u5efa\u51fa\u66f4\u6709\u610f\u601d\u7684\u6548\u679c\uff0c\u4f46\u73b0\u5728\u6211\u4eec\u4ecd\u5c06\u4ece\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u51e0\u4f55\u7740\u8272\u5668\u5f00\u59cb\u3002","title":"\u51e0\u4f55\u7740\u8272\u5668"},{"location":"04%20Advanced%20OpenGL/09%20Geometry%20Shader/#_2","text":"\u4e3a\u4e86\u5c55\u793a\u51e0\u4f55\u7740\u8272\u5668\u7684\u7528\u6cd5\uff0c\u6211\u4eec\u5c06\u4f1a\u6e32\u67d3\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u573a\u666f\uff0c\u6211\u4eec\u53ea\u4f1a\u5728\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7684z\u5e73\u9762\u4e0a\u7ed8\u5236\u56db\u4e2a\u70b9\u3002\u8fd9\u4e9b\u70b9\u7684\u5750\u6807\u662f\uff1a float points[] = { -0.5f, 0.5f, // \u5de6\u4e0a 0.5f, 0.5f, // \u53f3\u4e0a 0.5f, -0.5f, // \u53f3\u4e0b -0.5f, -0.5f // \u5de6\u4e0b }; \u9876\u70b9\u7740\u8272\u5668\u53ea\u9700\u8981\u5728z\u5e73\u9762\u7ed8\u5236\u70b9\u5c31\u53ef\u4ee5\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u6700\u57fa\u672c\u9876\u70b9\u7740\u8272\u5668\uff1a #version 330 core layout (location = 0) in vec2 aPos; void main() { gl_Position = vec4(aPos.x, aPos.y, 0.0, 1.0); } \u76f4\u63a5\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u786c\u7f16\u7801\uff0c\u5c06\u6240\u6709\u7684\u70b9\u90fd\u8f93\u51fa\u4e3a\u7eff\u8272\uff1a #version 330 core out vec4 FragColor; void main() { FragColor = vec4(0.0, 1.0, 0.0, 1.0); } \u4e3a\u70b9\u7684\u9876\u70b9\u6570\u636e\u751f\u6210\u4e00\u4e2aVAO\u548c\u4e00\u4e2aVBO\uff0c\u7136\u540e\u4f7f\u7528 glDrawArrays \u8fdb\u884c\u7ed8\u5236\uff1a shader.use(); glBindVertexArray(VAO); glDrawArrays(GL_POINTS, 0, 4); \u7ed3\u679c\u662f\u5728\u9ed1\u6697\u7684\u573a\u666f\u4e2d\u6709\u56db\u4e2a\uff08\u5f88\u96be\u770b\u89c1\u7684\uff09\u7eff\u70b9\uff1a \u4f46\u6211\u4eec\u4e4b\u524d\u4e0d\u662f\u5b66\u8fc7\u8fd9\u4e9b\u5417\uff1f\u662f\u7684\uff0c\u4f46\u662f\u73b0\u5728\u6211\u4eec\u5c06\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u51e0\u4f55\u7740\u8272\u5668\uff0c\u4e3a\u573a\u666f\u6dfb\u52a0\u6d3b\u529b\u3002 \u51fa\u4e8e\u5b66\u4e60\u76ee\u7684\uff0c\u6211\u4eec\u5c06\u4f1a\u521b\u5efa\u4e00\u4e2a \u4f20\u9012 (Pass-through)\u51e0\u4f55\u7740\u8272\u5668\uff0c\u5b83\u4f1a\u63a5\u6536\u4e00\u4e2a\u70b9\u56fe\u5143\uff0c\u5e76\u76f4\u63a5\u5c06\u5b83 \u4f20\u9012 (Pass)\u5230\u4e0b\u4e00\u4e2a\u7740\u8272\u5668\uff1a #version 330 core layout (points) in; layout (points, max_vertices = 1) out; void main() { gl_Position = gl_in[0].gl_Position; EmitVertex(); EndPrimitive(); } \u73b0\u5728\u8fd9\u4e2a\u51e0\u4f55\u7740\u8272\u5668\u5e94\u8be5\u5f88\u5bb9\u6613\u7406\u89e3\u4e86\uff0c\u5b83\u53ea\u662f\u5c06\u5b83\u63a5\u6536\u5230\u7684\u9876\u70b9\u4f4d\u7f6e\u4e0d\u4f5c\u4fee\u6539\u76f4\u63a5\u53d1\u5c04\u51fa\u53bb\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u70b9\u56fe\u5143\u3002 \u548c\u9876\u70b9\u4e0e\u7247\u6bb5\u7740\u8272\u5668\u4e00\u6837\uff0c\u51e0\u4f55\u7740\u8272\u5668\u4e5f\u9700\u8981\u7f16\u8bd1\u548c\u94fe\u63a5\uff0c\u4f46\u8fd9\u6b21\u5728\u521b\u5efa\u7740\u8272\u5668\u65f6\u6211\u4eec\u5c06\u4f1a\u4f7f\u7528 GL_GEOMETRY_SHADER \u4f5c\u4e3a\u7740\u8272\u5668\u7c7b\u578b\uff1a geometryShader = glCreateShader(GL_GEOMETRY_SHADER); glShaderSource(geometryShader, 1, &gShaderCode, NULL); glCompileShader(geometryShader); ... glAttachShader(program, geometryShader); glLinkProgram(program); \u7740\u8272\u5668\u7f16\u8bd1\u7684\u4ee3\u7801\u548c\u9876\u70b9\u4e0e\u7247\u6bb5\u7740\u8272\u5668\u4ee3\u7801\u90fd\u662f\u4e00\u6837\u7684\u3002\u8bb0\u5f97\u8981\u68c0\u67e5\u7f16\u8bd1\u548c\u94fe\u63a5\u9519\u8bef\uff01 \u5982\u679c\u4f60\u73b0\u5728\u7f16\u8bd1\u5e76\u8fd0\u884c\u7a0b\u5e8f\uff0c\u4f1a\u770b\u5230\u548c\u4e0b\u9762\u7c7b\u4f3c\u7684\u7ed3\u679c\uff1a \u8fd9\u548c\u6ca1\u4f7f\u7528\u51e0\u4f55\u7740\u8272\u5668\u65f6\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff01\u6211\u627f\u8ba4\u8fd9\u662f\u6709\u70b9\u65e0\u804a\uff0c\u4f46\u65e2\u7136\u6211\u4eec\u4ecd\u7136\u80fd\u591f\u7ed8\u5236\u8fd9\u4e9b\u70b9\uff0c\u6240\u4ee5\u51e0\u4f55\u7740\u8272\u5668\u662f\u6b63\u5e38\u5de5\u4f5c\u7684\uff0c\u73b0\u5728\u662f\u65f6\u5019\u505a\u70b9\u66f4\u6709\u8da3\u7684\u4e1c\u897f\u4e86\uff01","title":"\u4f7f\u7528\u51e0\u4f55\u7740\u8272\u5668"},{"location":"04%20Advanced%20OpenGL/09%20Geometry%20Shader/#_3","text":"\u7ed8\u5236\u70b9\u548c\u7ebf\u5e76\u6ca1\u6709\u90a3\u4e48\u6709\u8da3\uff0c\u6240\u4ee5\u6211\u4eec\u4f1a\u4f7f\u7528\u4e00\u70b9\u521b\u9020\u529b\uff0c\u5229\u7528\u51e0\u4f55\u7740\u8272\u5668\u5728\u6bcf\u4e2a\u70b9\u7684\u4f4d\u7f6e\u4e0a\u7ed8\u5236\u4e00\u4e2a\u623f\u5b50\u3002\u8981\u5b9e\u73b0\u8fd9\u4e2a\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u51e0\u4f55\u7740\u8272\u5668\u7684\u8f93\u51fa\u8bbe\u7f6e\u4e3a triangle_strip \uff0c\u5e76\u7ed8\u5236\u4e09\u4e2a\u4e09\u89d2\u5f62\uff1a\u5176\u4e2d\u4e24\u4e2a\u7ec4\u6210\u4e00\u4e2a\u6b63\u65b9\u5f62\uff0c\u53e6\u4e00\u4e2a\u7528\u4f5c\u623f\u9876\u3002 OpenGL\u4e2d\uff0c\u4e09\u89d2\u5f62\u5e26(Triangle Strip)\u662f\u7ed8\u5236\u4e09\u89d2\u5f62\u66f4\u9ad8\u6548\u7684\u65b9\u5f0f\uff0c\u5b83\u4f7f\u7528\u9876\u70b9\u66f4\u5c11\u3002\u5728\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u7ed8\u5236\u5b8c\u4e4b\u540e\uff0c\u6bcf\u4e2a\u540e\u7eed\u9876\u70b9\u5c06\u4f1a\u5728\u4e0a\u4e00\u4e2a\u4e09\u89d2\u5f62\u8fb9\u4e0a\u751f\u6210\u53e6\u4e00\u4e2a\u4e09\u89d2\u5f62\uff1a\u6bcf3\u4e2a\u4e34\u8fd1\u7684\u9876\u70b9\u5c06\u4f1a\u5f62\u6210\u4e00\u4e2a\u4e09\u89d2\u5f62\u3002\u5982\u679c\u6211\u4eec\u4e00\u5171\u67096\u4e2a\u6784\u6210\u4e09\u89d2\u5f62\u5e26\u7684\u9876\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u4f1a\u5f97\u5230\u8fd9\u4e9b\u4e09\u89d2\u5f62\uff1a(1, 2, 3)\u3001(2, 3, 4)\u3001(3, 4, 5)\u548c(4, 5, 6)\uff0c\u5171\u5f62\u62104\u4e2a\u4e09\u89d2\u5f62\u3002\u4e00\u4e2a\u4e09\u89d2\u5f62\u5e26\u81f3\u5c11\u9700\u89813\u4e2a\u9876\u70b9\uff0c\u5e76\u4f1a\u751f\u6210N-2\u4e2a\u4e09\u89d2\u5f62\u3002\u4f7f\u75286\u4e2a\u9876\u70b9\uff0c\u6211\u4eec\u521b\u5efa\u4e866-2 = 4\u4e2a\u4e09\u89d2\u5f62\u3002\u4e0b\u9762\u8fd9\u5e45\u56fe\u5c55\u793a\u4e86\u8fd9\u70b9\uff1a \u901a\u8fc7\u4f7f\u7528\u4e09\u89d2\u5f62\u5e26\u4f5c\u4e3a\u51e0\u4f55\u7740\u8272\u5668\u7684\u8f93\u51fa\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u521b\u5efa\u51fa\u9700\u8981\u7684\u623f\u5b50\u5f62\u72b6\uff0c\u53ea\u9700\u8981\u4ee5\u6b63\u786e\u7684\u987a\u5e8f\u751f\u62103\u4e2a\u76f8\u8fde\u7684\u4e09\u89d2\u5f62\u5c31\u884c\u4e86\u3002\u4e0b\u9762\u8fd9\u5e45\u56fe\u5c55\u793a\u4e86\u9876\u70b9\u7ed8\u5236\u7684\u987a\u5e8f\uff0c\u84dd\u70b9\u4ee3\u8868\u7684\u662f\u8f93\u5165\u70b9\uff1a \u53d8\u4e3a\u51e0\u4f55\u7740\u8272\u5668\u662f\u8fd9\u6837\u7684\uff1a #version 330 core layout (points) in; layout (triangle_strip, max_vertices = 5) out; void build_house(vec4 position) { gl_Position = position + vec4(-0.2, -0.2, 0.0, 0.0); // 1:\u5de6\u4e0b EmitVertex(); gl_Position = position + vec4( 0.2, -0.2, 0.0, 0.0); // 2:\u53f3\u4e0b EmitVertex(); gl_Position = position + vec4(-0.2, 0.2, 0.0, 0.0); // 3:\u5de6\u4e0a EmitVertex(); gl_Position = position + vec4( 0.2, 0.2, 0.0, 0.0); // 4:\u53f3\u4e0a EmitVertex(); gl_Position = position + vec4( 0.0, 0.4, 0.0, 0.0); // 5:\u9876\u90e8 EmitVertex(); EndPrimitive(); } void main() { build_house(gl_in[0].gl_Position); } \u8fd9\u4e2a\u51e0\u4f55\u7740\u8272\u5668\u751f\u6210\u4e865\u4e2a\u9876\u70b9\uff0c\u6bcf\u4e2a\u9876\u70b9\u90fd\u662f\u539f\u59cb\u70b9\u7684\u4f4d\u7f6e\u52a0\u4e0a\u4e00\u4e2a\u504f\u79fb\u91cf\uff0c\u6765\u7ec4\u6210\u4e00\u4e2a\u5927\u7684\u4e09\u89d2\u5f62\u5e26\u3002\u6700\u7ec8\u7684\u56fe\u5143\u4f1a\u88ab\u5149\u6805\u5316\uff0c\u7136\u540e\u7247\u6bb5\u7740\u8272\u5668\u4f1a\u5904\u7406\u6574\u4e2a\u4e09\u89d2\u5f62\u5e26\uff0c\u6700\u7ec8\u5728\u6bcf\u4e2a\u7ed8\u5236\u7684\u70b9\u5904\u751f\u6210\u4e00\u4e2a\u7eff\u8272\u623f\u5b50\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6bcf\u4e2a\u623f\u5b50\u5b9e\u9645\u4e0a\u662f\u75313\u4e2a\u4e09\u89d2\u5f62\u7ec4\u6210\u7684\u2014\u2014\u5168\u90e8\u90fd\u662f\u4f7f\u7528\u7a7a\u95f4\u4e2d\u4e00\u70b9\u6765\u7ed8\u5236\u7684\u3002\u8fd9\u4e9b\u7eff\u623f\u5b50\u770b\u8d77\u6765\u662f\u6709\u70b9\u65e0\u804a\uff0c\u6240\u4ee5\u6211\u4eec\u4f1a\u518d\u7ed9\u6bcf\u4e2a\u623f\u5b50\u5206\u914d\u4e00\u4e2a\u4e0d\u540c\u7684\u989c\u8272\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\uff0c\u6211\u4eec\u9700\u8981\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u989d\u5916\u7684\u9876\u70b9\u5c5e\u6027\uff0c\u8868\u793a\u989c\u8272\u4fe1\u606f\uff0c\u5c06\u5b83\u4f20\u9012\u81f3\u51e0\u4f55\u7740\u8272\u5668\uff0c\u5e76\u518d\u6b21\u53d1\u9001\u5230\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u3002 \u4e0b\u9762\u662f\u66f4\u65b0\u540e\u7684\u9876\u70b9\u6570\u636e\uff1a float points[] = { -0.5f, 0.5f, 1.0f, 0.0f, 0.0f, // \u5de6\u4e0a 0.5f, 0.5f, 0.0f, 1.0f, 0.0f, // \u53f3\u4e0a 0.5f, -0.5f, 0.0f, 0.0f, 1.0f, // \u53f3\u4e0b -0.5f, -0.5f, 1.0f, 1.0f, 0.0f // \u5de6\u4e0b }; \u7136\u540e\u6211\u4eec\u66f4\u65b0\u9876\u70b9\u7740\u8272\u5668\uff0c\u4f7f\u7528\u4e00\u4e2a\u63a5\u53e3\u5757\u5c06\u989c\u8272\u5c5e\u6027\u53d1\u9001\u5230\u51e0\u4f55\u7740\u8272\u5668\u4e2d\uff1a #version 330 core layout (location = 0) in vec2 aPos; layout (location = 1) in vec3 aColor; out VS_OUT { vec3 color; } vs_out; void main() { gl_Position = vec4(aPos.x, aPos.y, 0.0, 1.0); vs_out.color = aColor; } \u63a5\u4e0b\u6765\u6211\u4eec\u8fd8\u9700\u8981\u5728\u51e0\u4f55\u7740\u8272\u5668\u4e2d\u58f0\u660e\u76f8\u540c\u7684\u63a5\u53e3\u5757\uff08\u4f7f\u7528\u4e00\u4e2a\u4e0d\u540c\u7684\u63a5\u53e3\u540d\uff09\uff1a in VS_OUT { vec3 color; } gs_in[]; \u56e0\u4e3a\u51e0\u4f55\u7740\u8272\u5668\u662f\u4f5c\u7528\u4e8e\u8f93\u5165\u7684\u4e00\u7ec4\u9876\u70b9\u7684\uff0c\u4ece\u9876\u70b9\u7740\u8272\u5668\u53d1\u6765\u8f93\u5165\u6570\u636e\u603b\u662f\u4f1a\u4ee5\u6570\u7ec4\u7684\u5f62\u5f0f\u8868\u793a\u51fa\u6765\uff0c\u5373\u4fbf\u6211\u4eec\u73b0\u5728\u53ea\u6709\u4e00\u4e2a\u9876\u70b9\u3002 Important \u6211\u4eec\u5e76\u4e0d\u662f\u5fc5\u987b\u8981\u7528\u63a5\u53e3\u5757\u6765\u5411\u51e0\u4f55\u7740\u8272\u5668\u4f20\u9012\u6570\u636e\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a in vec3 vColor[]; \u5982\u679c\u9876\u70b9\u7740\u8272\u5668\u53d1\u9001\u7684\u989c\u8272\u5411\u91cf\u662f out vec3 vColor \uff0c\u90a3\u8fd9\u4e48\u5199\u5c31\u6ca1\u95ee\u9898\u3002\u7136\u800c\uff0c\u63a5\u53e3\u5757\u5728\u51e0\u4f55\u7740\u8272\u5668\u8fd9\u6837\u7684\u7740\u8272\u5668\u4e2d\u4f1a\u66f4\u5bb9\u6613\u5904\u7406\u4e00\u70b9\u3002\u5b9e\u9645\u4e0a\uff0c\u51e0\u4f55\u7740\u8272\u5668\u7684\u8f93\u5165\u80fd\u591f\u53d8\u5f97\u975e\u5e38\u5927\uff0c\u5c06\u5b83\u4eec\u5408\u5e76\u4e3a\u4e00\u4e2a\u5927\u7684\u63a5\u53e3\u5757\u6570\u7ec4\u4f1a\u66f4\u7b26\u5408\u903b\u8f91\u4e00\u70b9\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u8fd8\u9700\u8981\u4e3a\u4e0b\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u9636\u6bb5\u58f0\u660e\u4e00\u4e2a\u8f93\u51fa\u989c\u8272\u5411\u91cf\uff1a out vec3 fColor; \u56e0\u4e3a\u7247\u6bb5\u7740\u8272\u5668\u53ea\u9700\u8981\u4e00\u4e2a\uff08\u63d2\u503c\u7684\uff09\u989c\u8272\uff0c\u53d1\u9001\u591a\u4e2a\u989c\u8272\u5e76\u6ca1\u6709\u4ec0\u4e48\u610f\u4e49\u3002\u6240\u4ee5\uff0c fColor \u5411\u91cf\u5c31\u4e0d\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u800c\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5411\u91cf\u3002\u5f53\u53d1\u5c04\u4e00\u4e2a\u9876\u70b9\u7684\u65f6\u5019\uff0c\u6bcf\u4e2a\u9876\u70b9\u5c06\u4f1a\u4f7f\u7528\u6700\u540e\u5728 fColor \u4e2d\u50a8\u5b58\u7684\u503c\uff0c\u6765\u7528\u4e8e\u7247\u6bb5\u7740\u8272\u5668\u7684\u8fd0\u884c\u3002\u5bf9\u6211\u4eec\u7684\u623f\u5b50\u6765\u8bf4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u7b2c\u4e00\u4e2a\u9876\u70b9\u53d1\u5c04\u4e4b\u524d\uff0c\u4f7f\u7528\u9876\u70b9\u7740\u8272\u5668\u4e2d\u7684\u989c\u8272\u586b\u5145 fColor \u4e00\u6b21\u5c31\u53ef\u4ee5\u4e86\u3002 fColor = gs_in[0].color; // gs_in[0] \u56e0\u4e3a\u53ea\u6709\u4e00\u4e2a\u8f93\u5165\u9876\u70b9 gl_Position = position + vec4(-0.2, -0.2, 0.0, 0.0); // 1:\u5de6\u4e0b EmitVertex(); gl_Position = position + vec4( 0.2, -0.2, 0.0, 0.0); // 2:\u53f3\u4e0b EmitVertex(); gl_Position = position + vec4(-0.2, 0.2, 0.0, 0.0); // 3:\u5de6\u4e0a EmitVertex(); gl_Position = position + vec4( 0.2, 0.2, 0.0, 0.0); // 4:\u53f3\u4e0a EmitVertex(); gl_Position = position + vec4( 0.0, 0.4, 0.0, 0.0); // 5:\u9876\u90e8 EmitVertex(); EndPrimitive(); \u6240\u6709\u53d1\u5c04\u51fa\u7684\u9876\u70b9\u90fd\u5c06\u5d4c\u6709\u6700\u540e\u50a8\u5b58\u5728 fColor \u4e2d\u7684\u503c\uff0c\u5373\u9876\u70b9\u7684\u989c\u8272\u5c5e\u6027\u503c\u3002\u6240\u6709\u7684\u623f\u5b50\u90fd\u4f1a\u6709\u5b83\u4eec\u81ea\u5df1\u7684\u989c\u8272\u4e86\uff1a \u4ec5\u4ec5\u662f\u4e3a\u4e86\u6709\u8da3\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5047\u88c5\u8fd9\u662f\u51ac\u5929\uff0c\u5c06\u6700\u540e\u4e00\u4e2a\u9876\u70b9\u7684\u989c\u8272\u8bbe\u7f6e\u4e3a\u767d\u8272\uff0c\u7ed9\u5c4b\u9876\u843d\u4e0a\u4e00\u4e9b\u96ea\u3002 fColor = gs_in[0].color; gl_Position = position + vec4(-0.2, -0.2, 0.0, 0.0); // 1:\u5de6\u4e0b EmitVertex(); gl_Position = position + vec4( 0.2, -0.2, 0.0, 0.0); // 2:\u53f3\u4e0b EmitVertex(); gl_Position = position + vec4(-0.2, 0.2, 0.0, 0.0); // 3:\u5de6\u4e0a EmitVertex(); gl_Position = position + vec4( 0.2, 0.2, 0.0, 0.0); // 4:\u53f3\u4e0a EmitVertex(); gl_Position = position + vec4( 0.0, 0.4, 0.0, 0.0); // 5:\u9876\u90e8 fColor = vec3(1.0, 1.0, 1.0); EmitVertex(); EndPrimitive(); \u6700\u7ec8\u7ed3\u679c\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a \u4f60\u53ef\u4ee5\u5c06\u4f60\u7684\u4ee3\u7801\u4e0e \u8fd9\u91cc \u7684OpenGL\u4ee3\u7801\u8fdb\u884c\u6bd4\u5bf9\u3002 \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6709\u4e86\u51e0\u4f55\u7740\u8272\u5668\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u5c06\u6700\u7b80\u5355\u7684\u56fe\u5143\u53d8\u5f97\u5341\u5206\u6709\u521b\u610f\u3002\u56e0\u4e3a\u8fd9\u4e9b\u5f62\u72b6\u662f\u5728GPU\u7684\u8d85\u5feb\u786c\u4ef6\u4e2d\u52a8\u6001\u751f\u6210\u7684\uff0c\u8fd9\u4f1a\u6bd4\u5728\u9876\u70b9\u7f13\u51b2\u4e2d\u624b\u52a8\u5b9a\u4e49\u56fe\u5f62\u8981\u9ad8\u6548\u5f88\u591a\u3002\u56e0\u6b64\uff0c\u51e0\u4f55\u7f13\u51b2\u5bf9\u7b80\u5355\u800c\u4e14\u7ecf\u5e38\u91cd\u590d\u7684\u5f62\u72b6\u6765\u8bf4\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f18\u5316\u5de5\u5177\uff0c\u6bd4\u5982\u4f53\u7d20(Voxel)\u4e16\u754c\u4e2d\u7684\u65b9\u5757\u548c\u5ba4\u5916\u8349\u5730\u7684\u6bcf\u4e00\u6839\u8349\u3002","title":"\u9020\u51e0\u4e2a\u623f\u5b50"},{"location":"04%20Advanced%20OpenGL/09%20Geometry%20Shader/#_4","text":"\u5c3d\u7ba1\u7ed8\u5236\u623f\u5b50\u975e\u5e38\u6709\u8da3\uff0c\u4f46\u6211\u4eec\u4e0d\u4f1a\u7ecf\u5e38\u8fd9\u4e48\u505a\u3002\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u7ee7\u7eed\u6df1\u5165\uff0c\u6765\u7206\u7834(Explode)\u7269\u4f53\uff01\u867d\u7136\u8fd9\u4e5f\u662f\u4e00\u4e2a\u4e0d\u600e\u4e48\u5e38\u7528\u7684\u4e1c\u897f\uff0c\u4f46\u662f\u5b83\u80fd\u5411\u4f60\u5c55\u793a\u51e0\u4f55\u7740\u8272\u5668\u7684\u5f3a\u5927\u4e4b\u5904\u3002 \u5f53\u6211\u4eec\u8bf4 \u7206\u7834 \u4e00\u4e2a\u7269\u4f53\u65f6\uff0c\u6211\u4eec\u5e76\u4e0d\u662f\u6307\u8981\u5c06\u5b9d\u8d35\u7684\u9876\u70b9\u96c6\u7ed9\u70b8\u6389\uff0c\u6211\u4eec\u662f\u8981\u5c06\u6bcf\u4e2a\u4e09\u89d2\u5f62\u6cbf\u7740\u6cd5\u5411\u91cf\u7684\u65b9\u5411\u79fb\u52a8\u4e00\u5c0f\u6bb5\u65f6\u95f4\u3002\u6548\u679c\u5c31\u662f\uff0c\u6574\u4e2a\u7269\u4f53\u770b\u8d77\u6765\u50cf\u662f\u6cbf\u7740\u6bcf\u4e2a\u4e09\u89d2\u5f62\u7684\u6cd5\u7ebf\u5411\u91cf \u7206\u70b8 \u4e00\u6837\u3002\u7206\u70b8\u4e09\u89d2\u5f62\u7684\u6548\u679c\u5728\u7eb3\u7c73\u88c5\u6a21\u578b\u4e0a\u770b\u8d77\u6765\u50cf\u662f\u8fd9\u6837\u7684\uff1a \u8fd9\u6837\u7684\u51e0\u4f55\u7740\u8272\u5668\u6548\u679c\u7684\u4e00\u4e2a\u597d\u5904\u5c31\u662f\uff0c\u65e0\u8bba\u7269\u4f53\u6709\u591a\u590d\u6742\uff0c\u5b83\u90fd\u80fd\u591f\u5e94\u7528\u4e0a\u53bb\u3002 \u56e0\u4e3a\u6211\u4eec\u60f3\u8981\u6cbf\u7740\u4e09\u89d2\u5f62\u7684\u6cd5\u5411\u91cf\u4f4d\u79fb\u6bcf\u4e2a\u9876\u70b9\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u8ba1\u7b97\u8fd9\u4e2a\u6cd5\u5411\u91cf\u3002\u6211\u4eec\u6240\u8981\u505a\u7684\u662f\u8ba1\u7b97\u5782\u76f4\u4e8e\u4e09\u89d2\u5f62\u8868\u9762\u7684\u5411\u91cf\uff0c\u4ec5\u4f7f\u7528\u6211\u4eec\u80fd\u591f\u8bbf\u95ee\u76843\u4e2a\u9876\u70b9\u3002\u4f60\u53ef\u80fd\u8fd8\u8bb0\u5f97\u5728 \u53d8\u6362 \u5c0f\u8282\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 \u53c9\u4e58 \u6765\u83b7\u53d6\u5782\u76f4\u4e8e\u5176\u5b83\u4e24\u4e2a\u5411\u91cf\u7684\u4e00\u4e2a\u5411\u91cf\u3002\u5982\u679c\u6211\u4eec\u80fd\u591f\u83b7\u53d6\u4e24\u4e2a\u5e73\u884c\u4e8e\u4e09\u89d2\u5f62\u8868\u9762\u7684\u5411\u91cf a \u548c b \uff0c\u6211\u4eec\u5c31\u80fd\u591f\u5bf9\u8fd9\u4e24\u4e2a\u5411\u91cf\u8fdb\u884c\u53c9\u4e58\u6765\u83b7\u53d6\u6cd5\u5411\u91cf\u4e86\u3002\u4e0b\u9762\u8fd9\u4e2a\u51e0\u4f55\u7740\u8272\u5668\u51fd\u6570\u505a\u7684\u6b63\u662f\u8fd9\u4e2a\uff0c\u6765\u4f7f\u75283\u4e2a\u8f93\u5165\u9876\u70b9\u5750\u6807\u6765\u83b7\u53d6\u6cd5\u5411\u91cf\uff1a vec3 GetNormal() { vec3 a = vec3(gl_in[0].gl_Position) - vec3(gl_in[1].gl_Position); vec3 b = vec3(gl_in[2].gl_Position) - vec3(gl_in[1].gl_Position); return normalize(cross(a, b)); } \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u51cf\u6cd5\u83b7\u53d6\u4e86\u4e24\u4e2a\u5e73\u884c\u4e8e\u4e09\u89d2\u5f62\u8868\u9762\u7684\u5411\u91cf a \u548c b \u3002\u56e0\u4e3a\u4e24\u4e2a\u5411\u91cf\u76f8\u51cf\u80fd\u591f\u5f97\u5230\u8fd9\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u5dee\u503c\uff0c\u5e76\u4e14\u4e09\u4e2a\u70b9\u90fd\u4f4d\u4e8e\u4e09\u89d2\u5e73\u9762\u4e0a\uff0c\u5bf9\u4efb\u610f\u4e24\u4e2a\u5411\u91cf\u76f8\u51cf\u90fd\u80fd\u591f\u5f97\u5230\u4e00\u4e2a\u5e73\u884c\u4e8e\u5e73\u9762\u7684\u5411\u91cf\u3002\u6ce8\u610f\uff0c\u5982\u679c\u6211\u4eec\u4ea4\u6362\u4e86 cross \u51fd\u6570\u4e2d a \u548c b \u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2a\u6307\u5411\u76f8\u53cd\u65b9\u5411\u7684\u6cd5\u5411\u91cf\u2014\u2014\u8fd9\u91cc\u7684\u987a\u5e8f\u5f88\u91cd\u8981\uff01 \u65e2\u7136\u77e5\u9053\u4e86\u5982\u4f55\u8ba1\u7b97\u6cd5\u5411\u91cf\u4e86\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u521b\u5efa\u4e00\u4e2a explode \u51fd\u6570\u4e86\uff0c\u5b83\u4f7f\u7528\u6cd5\u5411\u91cf\u548c\u9876\u70b9\u4f4d\u7f6e\u5411\u91cf\u4f5c\u4e3a\u53c2\u6570\u3002\u8fd9\u4e2a\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5411\u91cf\uff0c\u5b83\u662f\u4f4d\u7f6e\u5411\u91cf\u6cbf\u7740\u6cd5\u7ebf\u5411\u91cf\u8fdb\u884c\u4f4d\u79fb\u4e4b\u540e\u7684\u7ed3\u679c\uff1a vec4 explode(vec4 position, vec3 normal) { float magnitude = 2.0; vec3 direction = normal * ((sin(time) + 1.0) / 2.0) * magnitude; return position + vec4(direction, 0.0); } \u51fd\u6570\u672c\u8eab\u5e94\u8be5\u4e0d\u662f\u975e\u5e38\u590d\u6742\u3002 sin \u51fd\u6570\u63a5\u6536\u4e00\u4e2a time \u53c2\u6570\uff0c\u5b83\u6839\u636e\u65f6\u95f4\u8fd4\u56de\u4e00\u4e2a-1.0\u52301.0\u4e4b\u95f4\u7684\u503c\u3002\u56e0\u4e3a\u6211\u4eec\u4e0d\u60f3\u8ba9\u7269\u4f53 \u5411\u5185\u7206\u70b8 (Implode)\uff0c\u6211\u4eec\u5c06sin\u503c\u53d8\u6362\u5230\u4e86[0, 1]\u7684\u8303\u56f4\u5185\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u4f1a\u4e58\u4ee5 normal \u5411\u91cf\uff0c\u5e76\u4e14\u6700\u7ec8\u7684 direction \u5411\u91cf\u4f1a\u88ab\u52a0\u5230\u4f4d\u7f6e\u5411\u91cf\u4e0a\u3002 \u5f53\u4f7f\u7528\u6211\u4eec\u7684 \u6a21\u578b\u52a0\u8f7d\u5668 \u7ed8\u5236\u4e00\u4e2a\u6a21\u578b\u65f6\uff0c \u7206\u7834 (Explode)\u6548\u679c\u7684\u5b8c\u6574\u51e0\u4f55\u7740\u8272\u5668\u662f\u8fd9\u6837\u7684\uff1a #version 330 core layout (triangles) in; layout (triangle_strip, max_vertices = 3) out; in VS_OUT { vec2 texCoords; } gs_in[]; out vec2 TexCoords; uniform float time; vec4 explode(vec4 position, vec3 normal) { ... } vec3 GetNormal() { ... } void main() { vec3 normal = GetNormal(); gl_Position = explode(gl_in[0].gl_Position, normal); TexCoords = gs_in[0].texCoords; EmitVertex(); gl_Position = explode(gl_in[1].gl_Position, normal); TexCoords = gs_in[1].texCoords; EmitVertex(); gl_Position = explode(gl_in[2].gl_Position, normal); TexCoords = gs_in[2].texCoords; EmitVertex(); EndPrimitive(); } \u6ce8\u610f\u6211\u4eec\u5728\u53d1\u5c04\u9876\u70b9\u4e4b\u524d\u8f93\u51fa\u4e86\u5bf9\u5e94\u7684\u7eb9\u7406\u5750\u6807\u3002 \u800c\u4e14\u522b\u5fd8\u4e86\u5728OpenGL\u4ee3\u7801\u4e2d\u8bbe\u7f6e time \u53d8\u91cf\uff1a shader.setFloat(\"time\", glfwGetTime()); \u6700\u7ec8\u7684\u6548\u679c\u662f\uff0c3D\u6a21\u578b\u770b\u8d77\u6765\u968f\u7740\u65f6\u95f4\u4e0d\u65ad\u5728\u7206\u7834\u5b83\u7684\u9876\u70b9\uff0c\u5728\u8fd9\u4e4b\u540e\u53c8\u56de\u5230\u6b63\u5e38\u72b6\u6001\u3002\u867d\u7136\u8fd9\u5e76\u4e0d\u662f\u975e\u5e38\u6709\u7528\uff0c\u5b83\u7684\u786e\u5411\u4f60\u5c55\u793a\u4e86\u51e0\u4f55\u7740\u8272\u5668\u66f4\u9ad8\u7ea7\u7684\u7528\u6cd5\u3002\u4f60\u53ef\u4ee5\u5c06\u4f60\u7684\u4ee3\u7801\u548c \u8fd9\u91cc \u5b8c\u6574\u7684\u6e90\u7801\u8fdb\u884c\u6bd4\u8f83\u3002","title":"\u7206\u7834\u7269\u4f53"},{"location":"04%20Advanced%20OpenGL/09%20Geometry%20Shader/#_5","text":"\u5728\u8fd9\u4e00\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u51e0\u4f55\u7740\u8272\u5668\u6765\u5b9e\u73b0\u4e00\u4e2a\u771f\u6b63\u6709\u7528\u7684\u4f8b\u5b50\uff1a\u663e\u793a\u4efb\u610f\u7269\u4f53\u7684\u6cd5\u5411\u91cf\u3002\u5f53\u7f16\u5199\u5149\u7167\u7740\u8272\u5668\u65f6\uff0c\u4f60\u53ef\u80fd\u4f1a\u6700\u7ec8\u4f1a\u5f97\u5230\u4e00\u4e9b\u5947\u602a\u7684\u89c6\u89c9\u8f93\u51fa\uff0c\u4f46\u53c8\u5f88\u96be\u786e\u5b9a\u5bfc\u81f4\u95ee\u9898\u7684\u539f\u56e0\u3002\u5149\u7167\u9519\u8bef\u5f88\u5e38\u89c1\u7684\u539f\u56e0\u5c31\u662f\u6cd5\u5411\u91cf\u9519\u8bef\uff0c\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u4e0d\u6b63\u786e\u52a0\u8f7d\u9876\u70b9\u6570\u636e\u3001\u9519\u8bef\u5730\u5c06\u5b83\u4eec\u5b9a\u4e49\u4e3a\u9876\u70b9\u5c5e\u6027\u6216\u5728\u7740\u8272\u5668\u4e2d\u4e0d\u6b63\u786e\u5730\u7ba1\u7406\u6240\u5bfc\u81f4\u7684\u3002\u6211\u4eec\u60f3\u8981\u7684\u662f\u4f7f\u7528\u67d0\u79cd\u65b9\u5f0f\u6765\u68c0\u6d4b\u63d0\u4f9b\u7684\u6cd5\u5411\u91cf\u662f\u6b63\u786e\u7684\u3002\u68c0\u6d4b\u6cd5\u5411\u91cf\u662f\u5426\u6b63\u786e\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u65b9\u5f0f\u5c31\u662f\u5bf9\u5b83\u4eec\u8fdb\u884c\u53ef\u89c6\u5316\uff0c\u51e0\u4f55\u7740\u8272\u5668\u6b63\u662f\u5b9e\u73b0\u8fd9\u4e00\u76ee\u7684\u975e\u5e38\u6709\u7528\u7684\u5de5\u5177\u3002 \u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a\u6211\u4eec\u9996\u5148\u4e0d\u4f7f\u7528\u51e0\u4f55\u7740\u8272\u5668\u6b63\u5e38\u7ed8\u5236\u573a\u666f\u3002\u7136\u540e\u518d\u6b21\u7ed8\u5236\u573a\u666f\uff0c\u4f46\u8fd9\u6b21\u53ea\u663e\u793a\u901a\u8fc7\u51e0\u4f55\u7740\u8272\u5668\u751f\u6210\u6cd5\u5411\u91cf\u3002\u51e0\u4f55\u7740\u8272\u5668\u63a5\u6536\u4e00\u4e2a\u4e09\u89d2\u5f62\u56fe\u5143\uff0c\u5e76\u6cbf\u7740\u6cd5\u5411\u91cf\u751f\u6210\u4e09\u6761\u7ebf\u2014\u2014\u6bcf\u4e2a\u9876\u70b9\u4e00\u4e2a\u6cd5\u5411\u91cf\u3002\u4f2a\u4ee3\u7801\u770b\u8d77\u6765\u4f1a\u50cf\u662f\u8fd9\u6837\uff1a shader.use(); DrawScene(); normalDisplayShader.use(); DrawScene(); \u8fd9\u6b21\u5728\u51e0\u4f55\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u6a21\u578b\u63d0\u4f9b\u7684\u9876\u70b9\u6cd5\u7ebf\uff0c\u800c\u4e0d\u662f\u81ea\u5df1\u751f\u6210\uff0c\u4e3a\u4e86\u9002\u914d\uff08\u89c2\u5bdf\u548c\u6a21\u578b\u77e9\u9635\u7684\uff09\u7f29\u653e\u548c\u65cb\u8f6c\uff0c\u6211\u4eec\u5728\u5c06\u6cd5\u7ebf\u53d8\u6362\u5230\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u4e4b\u524d\uff0c\u5148\u4f7f\u7528\u6cd5\u7ebf\u77e9\u9635\u53d8\u6362\u4e00\u6b21\uff08\u51e0\u4f55\u7740\u8272\u5668\u63a5\u53d7\u7684\u4f4d\u7f6e\u5411\u91cf\u662f\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u5c06\u6cd5\u5411\u91cf\u53d8\u6362\u5230\u76f8\u540c\u7684\u7a7a\u95f4\u4e2d\uff09\u3002\u8fd9\u53ef\u4ee5\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5b8c\u6210\uff1a #version 330 core layout (location = 0) in vec3 aPos; layout (location = 1) in vec3 aNormal; out VS_OUT { vec3 normal; } vs_out; uniform mat4 view; uniform mat4 model; void main() { gl_Position = view * model * vec4(aPos, 1.0); mat3 normalMatrix = mat3(transpose(inverse(view * model))); vs_out.normal = normalize(vec3(vec4(normalMatrix * aNormal, 0.0))); } \u53d8\u6362\u540e\u7684\u89c2\u5bdf\u7a7a\u95f4\u6cd5\u5411\u91cf\u4f1a\u4ee5\u63a5\u53e3\u5757\u7684\u5f62\u5f0f\u4f20\u9012\u5230\u4e0b\u4e2a\u7740\u8272\u5668\u9636\u6bb5\u3002\u63a5\u4e0b\u6765\uff0c\u51e0\u4f55\u7740\u8272\u5668\u4f1a\u63a5\u6536\u6bcf\u4e00\u4e2a\u9876\u70b9\uff08\u5305\u62ec\u4e00\u4e2a\u4f4d\u7f6e\u5411\u91cf\u548c\u4e00\u4e2a\u6cd5\u5411\u91cf\uff09\uff0c\u5e76\u5728\u6bcf\u4e2a\u4f4d\u7f6e\u5411\u91cf\u5904\u7ed8\u5236\u4e00\u4e2a\u6cd5\u7ebf\u5411\u91cf\uff1a #version 330 core layout (triangles) in; layout (line_strip, max_vertices = 6) out; in VS_OUT { vec3 normal; } gs_in[]; const float MAGNITUDE = 0.4; uniform mat4 projection; void GenerateLine(int index) { gl_Position = projection * gl_in[index].gl_Position; EmitVertex(); gl_Position = projection * (gl_in[index].gl_Position + vec4(gs_in[index].normal, 0.0) * MAGNITUDE); EmitVertex(); EndPrimitive(); } void main() { GenerateLine(0); // \u7b2c\u4e00\u4e2a\u9876\u70b9\u6cd5\u7ebf GenerateLine(1); // \u7b2c\u4e8c\u4e2a\u9876\u70b9\u6cd5\u7ebf GenerateLine(2); // \u7b2c\u4e09\u4e2a\u9876\u70b9\u6cd5\u7ebf } \u50cf\u8fd9\u6837\u7684\u51e0\u4f55\u7740\u8272\u5668\u5e94\u8be5\u5f88\u5bb9\u6613\u7406\u89e3\u4e86\u3002\u6ce8\u610f\u6211\u4eec\u5c06\u6cd5\u5411\u91cf\u4e58\u4ee5\u4e86\u4e00\u4e2a MAGNITUDE \u5411\u91cf\uff0c\u6765\u9650\u5236\u663e\u793a\u51fa\u7684\u6cd5\u5411\u91cf\u5927\u5c0f\uff08\u5426\u5219\u5b83\u4eec\u5c31\u6709\u70b9\u5927\u4e86\uff09\u3002 \u56e0\u4e3a\u6cd5\u7ebf\u7684\u53ef\u89c6\u5316\u901a\u5e38\u90fd\u662f\u7528\u4e8e\u8c03\u8bd5\u76ee\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7247\u6bb5\u7740\u8272\u5668\uff0c\u5c06\u5b83\u4eec\u663e\u793a\u4e3a\u5355\u8272\u7684\u7ebf\uff08\u5982\u679c\u4f60\u613f\u610f\u4e5f\u53ef\u4ee5\u662f\u975e\u5e38\u597d\u770b\u7684\u7ebf\uff09\uff1a #version 330 core out vec4 FragColor; void main() { FragColor = vec4(1.0, 1.0, 0.0, 1.0); } \u73b0\u5728\uff0c\u9996\u5148\u4f7f\u7528\u666e\u901a\u7740\u8272\u5668\u6e32\u67d3\u6a21\u578b\uff0c\u518d\u4f7f\u7528\u7279\u522b\u7684 \u6cd5\u7ebf\u53ef\u89c6\u5316 \u7740\u8272\u5668\u6e32\u67d3\uff0c\u4f60\u5c06\u770b\u5230\u8fd9\u6837\u7684\u6548\u679c\uff1a \u9664\u4e86\u8ba9\u6211\u4eec\u7684\u80cc\u5305\u53d8\u5f97\u6bdb\u8338\u8338\u4e4b\u5916\uff0c\u5b83\u8fd8\u80fd\u8ba9\u6211\u4eec\u5f88\u597d\u5730\u5224\u65ad\u6a21\u578b\u7684\u6cd5\u5411\u91cf\u662f\u5426\u51c6\u786e\u3002\u4f60\u53ef\u4ee5\u60f3\u8c61\u5230\uff0c\u8fd9\u6837\u7684\u51e0\u4f55\u7740\u8272\u5668\u4e5f\u7ecf\u5e38\u7528\u4e8e\u7ed9\u7269\u4f53\u6dfb\u52a0 \u6bdb\u53d1 (Fur)\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u6e90\u7801\u3002","title":"\u6cd5\u5411\u91cf\u53ef\u89c6\u5316"},{"location":"04%20Advanced%20OpenGL/10%20Instancing/","text":"\u5b9e\u4f8b\u5316 \u539f\u6587 Instancing \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u5047\u8bbe\u4f60\u6709\u4e00\u4e2a\u7ed8\u5236\u4e86\u5f88\u591a\u6a21\u578b\u7684\u573a\u666f\uff0c\u800c\u5927\u90e8\u5206\u7684\u6a21\u578b\u5305\u542b\u7684\u662f\u540c\u4e00\u7ec4\u9876\u70b9\u6570\u636e\uff0c\u53ea\u4e0d\u8fc7\u8fdb\u884c\u7684\u662f\u4e0d\u540c\u7684\u4e16\u754c\u7a7a\u95f4\u53d8\u6362\u3002\u60f3\u8c61\u4e00\u4e2a\u5145\u6ee1\u8349\u7684\u573a\u666f\uff1a\u6bcf\u6839\u8349\u90fd\u662f\u4e00\u4e2a\u5305\u542b\u51e0\u4e2a\u4e09\u89d2\u5f62\u7684\u5c0f\u6a21\u578b\u3002\u4f60\u53ef\u80fd\u4f1a\u9700\u8981\u7ed8\u5236\u5f88\u591a\u6839\u8349\uff0c\u6700\u7ec8\u5728\u6bcf\u5e27\u4e2d\u4f60\u53ef\u80fd\u4f1a\u9700\u8981\u6e32\u67d3\u4e0a\u5343\u6216\u8005\u4e0a\u4e07\u6839\u8349\u3002\u56e0\u4e3a\u6bcf\u4e00\u6839\u8349\u4ec5\u4ec5\u662f\u7531\u51e0\u4e2a\u4e09\u89d2\u5f62\u6784\u6210\uff0c\u6e32\u67d3\u51e0\u4e4e\u662f\u77ac\u95f4\u5b8c\u6210\u7684\uff0c\u4f46\u4e0a\u5343\u4e2a\u6e32\u67d3\u51fd\u6570\u8c03\u7528\u5374\u4f1a\u6781\u5927\u5730\u5f71\u54cd\u6027\u80fd\u3002 \u5982\u679c\u6211\u4eec\u9700\u8981\u6e32\u67d3\u5927\u91cf\u7269\u4f53\u65f6\uff0c\u4ee3\u7801\u770b\u8d77\u6765\u4f1a\u50cf\u8fd9\u6837\uff1a for(unsigned int i = 0; i < amount_of_models_to_draw; i++) { DoSomePreparations(); // \u7ed1\u5b9aVAO\uff0c\u7ed1\u5b9a\u7eb9\u7406\uff0c\u8bbe\u7f6euniform\u7b49 glDrawArrays(GL_TRIANGLES, 0, amount_of_vertices); } \u5982\u679c\u50cf\u8fd9\u6837\u7ed8\u5236\u6a21\u578b\u7684\u5927\u91cf \u5b9e\u4f8b (Instance)\uff0c\u4f60\u5f88\u5feb\u5c31\u4f1a\u56e0\u4e3a\u7ed8\u5236\u8c03\u7528\u8fc7\u591a\u800c\u8fbe\u5230\u6027\u80fd\u74f6\u9888\u3002\u4e0e\u7ed8\u5236\u9876\u70b9\u672c\u8eab\u76f8\u6bd4\uff0c\u4f7f\u7528 glDrawArrays \u6216 glDrawElements \u51fd\u6570\u544a\u8bc9GPU\u53bb\u7ed8\u5236\u4f60\u7684\u9876\u70b9\u6570\u636e\u4f1a\u6d88\u8017\u66f4\u591a\u7684\u6027\u80fd\uff0c\u56e0\u4e3aOpenGL\u5728\u7ed8\u5236\u9876\u70b9\u6570\u636e\u4e4b\u524d\u9700\u8981\u505a\u5f88\u591a\u51c6\u5907\u5de5\u4f5c\uff08\u6bd4\u5982\u544a\u8bc9GPU\u8be5\u4ece\u54ea\u4e2a\u7f13\u51b2\u8bfb\u53d6\u6570\u636e\uff0c\u4ece\u54ea\u5bfb\u627e\u9876\u70b9\u5c5e\u6027\uff0c\u800c\u4e14\u8fd9\u4e9b\u90fd\u662f\u5728\u76f8\u5bf9\u7f13\u6162\u7684CPU\u5230GPU\u603b\u7ebf(CPU to GPU Bus)\u4e0a\u8fdb\u884c\u7684\uff09\u3002\u6240\u4ee5\uff0c\u5373\u4fbf\u6e32\u67d3\u9876\u70b9\u975e\u5e38\u5feb\uff0c\u547d\u4ee4GPU\u53bb\u6e32\u67d3\u5374\u672a\u5fc5\u3002 \u5982\u679c\u6211\u4eec\u80fd\u591f\u5c06\u6570\u636e\u4e00\u6b21\u6027\u53d1\u9001\u7ed9GPU\uff0c\u7136\u540e\u4f7f\u7528\u4e00\u4e2a\u7ed8\u5236\u51fd\u6570\u8ba9OpenGL\u5229\u7528\u8fd9\u4e9b\u6570\u636e\u7ed8\u5236\u591a\u4e2a\u7269\u4f53\uff0c\u5c31\u4f1a\u66f4\u65b9\u4fbf\u4e86\u3002\u8fd9\u5c31\u662f \u5b9e\u4f8b\u5316 (Instancing)\u3002 \u5b9e\u4f8b\u5316\u8fd9\u9879\u6280\u672f\u80fd\u591f\u8ba9\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u6e32\u67d3\u8c03\u7528\u6765\u7ed8\u5236\u591a\u4e2a\u7269\u4f53\uff0c\u6765\u8282\u7701\u6bcf\u6b21\u7ed8\u5236\u7269\u4f53\u65f6CPU -> GPU\u7684\u901a\u4fe1\uff0c\u5b83\u53ea\u9700\u8981\u4e00\u6b21\u5373\u53ef\u3002\u5982\u679c\u60f3\u4f7f\u7528\u5b9e\u4f8b\u5316\u6e32\u67d3\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06 glDrawArrays \u548c glDrawElements \u7684\u6e32\u67d3\u8c03\u7528\u5206\u522b\u6539\u4e3a glDrawArraysInstanced \u548c glDrawElementsInstanced \u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u4e9b\u6e32\u67d3\u51fd\u6570\u7684 \u5b9e\u4f8b\u5316 \u7248\u672c\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\uff0c\u53eb\u505a \u5b9e\u4f8b\u6570\u91cf (Instance Count)\uff0c\u5b83\u80fd\u591f\u8bbe\u7f6e\u6211\u4eec\u9700\u8981\u6e32\u67d3\u7684\u5b9e\u4f8b\u4e2a\u6570\u3002\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u5c06\u5fc5\u987b\u7684\u6570\u636e\u53d1\u9001\u5230GPU\u4e00\u6b21\uff0c\u7136\u540e\u4f7f\u7528\u4e00\u6b21\u51fd\u6570\u8c03\u7528\u544a\u8bc9GPU\u5b83\u5e94\u8be5\u5982\u4f55\u7ed8\u5236\u8fd9\u4e9b\u5b9e\u4f8b\u3002GPU\u5c06\u4f1a\u76f4\u63a5\u6e32\u67d3\u8fd9\u4e9b\u5b9e\u4f8b\uff0c\u800c\u4e0d\u7528\u4e0d\u65ad\u5730\u4e0eCPU\u8fdb\u884c\u901a\u4fe1\u3002 \u8fd9\u4e2a\u51fd\u6570\u672c\u8eab\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\u3002\u6e32\u67d3\u540c\u4e00\u4e2a\u7269\u4f53\u4e00\u5343\u6b21\u5bf9\u6211\u4eec\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\u5904\uff0c\u6bcf\u4e2a\u7269\u4f53\u90fd\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u800c\u4e14\u8fd8\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\u3002\u6211\u4eec\u53ea\u80fd\u770b\u89c1\u4e00\u4e2a\u7269\u4f53\uff01\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0cGLSL\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5d4c\u5165\u4e86\u53e6\u4e00\u4e2a\u5185\u5efa\u53d8\u91cf\uff0c gl_InstanceID \u3002 \u5728\u4f7f\u7528\u5b9e\u4f8b\u5316\u6e32\u67d3\u8c03\u7528\u65f6\uff0c gl_InstanceID \u4f1a\u4ece0\u5f00\u59cb\uff0c\u5728\u6bcf\u4e2a\u5b9e\u4f8b\u88ab\u6e32\u67d3\u65f6\u9012\u589e1\u3002\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u6b63\u5728\u6e32\u67d3\u7b2c43\u4e2a\u5b9e\u4f8b\uff0c\u90a3\u4e48\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5b83\u7684 gl_InstanceID \u5c06\u4f1a\u662f42\u3002\u56e0\u4e3a\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u6709\u552f\u4e00\u7684ID\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u6570\u7ec4\uff0c\u5c06ID\u4e0e\u4f4d\u7f6e\u503c\u5bf9\u5e94\u8d77\u6765\uff0c\u5c06\u6bcf\u4e2a\u5b9e\u4f8b\u653e\u7f6e\u5728\u4e16\u754c\u7684\u4e0d\u540c\u4f4d\u7f6e\u3002 \u4e3a\u4e86\u4f53\u9a8c\u4e00\u4e0b\u5b9e\u4f8b\u5316\u7ed8\u5236\uff0c\u6211\u4eec\u5c06\u4f1a\u5728\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7cfb\u4e2d\u4f7f\u7528\u4e00\u4e2a\u6e32\u67d3\u8c03\u7528\uff0c\u7ed8\u5236100\u4e2a2D\u56db\u8fb9\u5f62\u3002\u6211\u4eec\u4f1a\u7d22\u5f15\u4e00\u4e2a\u5305\u542b100\u4e2a\u504f\u79fb\u5411\u91cf\u7684uniform\u6570\u7ec4\uff0c\u5c06\u504f\u79fb\u503c\u52a0\u5230\u6bcf\u4e2a\u5b9e\u4f8b\u5316\u7684\u56db\u8fb9\u5f62\u4e0a\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u6392\u5217\u6574\u9f50\u7684\u56db\u8fb9\u5f62\u7f51\u683c\uff1a \u6bcf\u4e2a\u56db\u8fb9\u5f62\u75312\u4e2a\u4e09\u89d2\u5f62\u6240\u7ec4\u6210\uff0c\u4e00\u5171\u67096\u4e2a\u9876\u70b9\u3002\u6bcf\u4e2a\u9876\u70b9\u5305\u542b\u4e00\u4e2a2D\u7684\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u4f4d\u7f6e\u5411\u91cf\u548c\u4e00\u4e2a\u989c\u8272\u5411\u91cf\u3002 \u4e0b\u9762\u5c31\u662f\u8fd9\u4e2a\u4f8b\u5b50\u4f7f\u7528\u7684\u9876\u70b9\u6570\u636e\uff0c\u4e3a\u4e86\u5927\u91cf\u586b\u5145\u5c4f\u5e55\uff0c\u6bcf\u4e2a\u4e09\u89d2\u5f62\u90fd\u5f88\u5c0f\uff1a float quadVertices[] = { // \u4f4d\u7f6e // \u989c\u8272 -0.05f, 0.05f, 1.0f, 0.0f, 0.0f, 0.05f, -0.05f, 0.0f, 1.0f, 0.0f, -0.05f, -0.05f, 0.0f, 0.0f, 1.0f, -0.05f, 0.05f, 1.0f, 0.0f, 0.0f, 0.05f, -0.05f, 0.0f, 1.0f, 0.0f, 0.05f, 0.05f, 0.0f, 1.0f, 1.0f }; \u7247\u6bb5\u7740\u8272\u5668\u4f1a\u4ece\u9876\u70b9\u7740\u8272\u5668\u63a5\u53d7\u989c\u8272\u5411\u91cf\uff0c\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u5b83\u7684\u989c\u8272\u8f93\u51fa\uff0c\u6765\u5b9e\u73b0\u56db\u8fb9\u5f62\u7684\u989c\u8272\uff1a #version 330 core out vec4 FragColor; in vec3 fColor; void main() { FragColor = vec4(fColor, 1.0); } \u5230\u73b0\u5728\u90fd\u6ca1\u6709\u4ec0\u4e48\u65b0\u5185\u5bb9\uff0c\u4f46\u4ece\u9876\u70b9\u7740\u8272\u5668\u5f00\u59cb\u5c31\u53d8\u5f97\u5f88\u6709\u8da3\u4e86\uff1a #version 330 core layout (location = 0) in vec2 aPos; layout (location = 1) in vec3 aColor; out vec3 fColor; uniform vec2 offsets[100]; void main() { vec2 offset = offsets[gl_InstanceID]; gl_Position = vec4(aPos + offset, 0.0, 1.0); fColor = aColor; } \u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53eb\u505a offsets \u7684\u6570\u7ec4\uff0c\u5b83\u5305\u542b100\u4e2a\u504f\u79fb\u5411\u91cf\u3002\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528 gl_InstanceID \u6765\u7d22\u5f15 offsets \u6570\u7ec4\uff0c\u83b7\u53d6\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u504f\u79fb\u5411\u91cf\u3002\u5982\u679c\u6211\u4eec\u8981\u5b9e\u4f8b\u5316\u7ed8\u5236100\u4e2a\u56db\u8fb9\u5f62\uff0c\u4ec5\u4f7f\u7528\u8fd9\u4e2a\u9876\u70b9\u7740\u8272\u5668\u6211\u4eec\u5c31\u80fd\u5f97\u5230100\u4e2a\u4f4d\u4e8e\u4e0d\u540c\u4f4d\u7f6e\u7684\u56db\u8fb9\u5f62\u3002 \u5f53\u524d\uff0c\u6211\u4eec\u4ecd\u8981\u8bbe\u7f6e\u8fd9\u4e9b\u504f\u79fb\u4f4d\u7f6e\uff0c\u6211\u4eec\u4f1a\u5728\u8fdb\u5165\u6e32\u67d3\u5faa\u73af\u4e4b\u524d\u4f7f\u7528\u4e00\u4e2a\u5d4c\u5957for\u5faa\u73af\u8ba1\u7b97\uff1a glm::vec2 translations[100]; int index = 0; float offset = 0.1f; for(int y = -10; y < 10; y += 2) { for(int x = -10; x < 10; x += 2) { glm::vec2 translation; translation.x = (float)x / 10.0f + offset; translation.y = (float)y / 10.0f + offset; translations[index++] = translation; } } \u8fd9\u91cc\uff0c\u6211\u4eec\u521b\u5efa100\u4e2a\u4f4d\u79fb\u5411\u91cf\uff0c\u8868\u793a10x10\u7f51\u683c\u4e0a\u7684\u6240\u6709\u4f4d\u7f6e\u3002\u9664\u4e86\u751f\u6210 translations \u6570\u7ec4\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u6570\u636e\u8f6c\u79fb\u5230\u9876\u70b9\u7740\u8272\u5668\u7684uniform\u6570\u7ec4\u4e2d\uff1a shader.use(); for(unsigned int i = 0; i < 100; i++) { shader.setVec2((\"offsets[\" + std::to_string(i) + \"]\"), translations[i]); } \u5728\u8fd9\u4e00\u6bb5\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5c06for\u5faa\u73af\u7684\u8ba1\u6570\u5668 i \u8f6c\u6362\u4e3a\u4e00\u4e2a string \uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u6765\u52a8\u6001\u521b\u5efa\u4f4d\u7f6e\u503c\u7684\u5b57\u7b26\u4e32\uff0c\u7528\u4e8euniform\u4f4d\u7f6e\u503c\u7684\u7d22\u5f15\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4f1a\u5bf9 offsets uniform\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u9879\u8bbe\u7f6e\u5bf9\u5e94\u7684\u4f4d\u79fb\u5411\u91cf\u3002 \u73b0\u5728\u6240\u6709\u7684\u51c6\u5907\u5de5\u4f5c\u90fd\u505a\u5b8c\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u6e32\u67d3\u56db\u8fb9\u5f62\u4e86\u3002\u5bf9\u4e8e\u5b9e\u4f8b\u5316\u6e32\u67d3\uff0c\u6211\u4eec\u4f7f\u7528 glDrawArraysInstanced \u6216 glDrawElementsInstanced \u3002\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u7684\u4e0d\u662f\u7d22\u5f15\u7f13\u51b2\uff0c\u6211\u4eec\u4f1a\u8c03\u7528 glDrawArrays \u7248\u672c\u7684\u51fd\u6570\uff1a glBindVertexArray(quadVAO); glDrawArraysInstanced(GL_TRIANGLES, 0, 6, 100); glDrawArraysInstanced \u7684\u53c2\u6570\u548c glDrawArrays \u5b8c\u5168\u4e00\u6837\uff0c\u9664\u4e86\u6700\u540e\u591a\u4e86\u4e2a\u53c2\u6570\u7528\u6765\u8bbe\u7f6e\u9700\u8981\u7ed8\u5236\u7684\u5b9e\u4f8b\u6570\u91cf\u3002\u56e0\u4e3a\u6211\u4eec\u60f3\u8981\u572810x10\u7f51\u683c\u4e2d\u663e\u793a100\u4e2a\u56db\u8fb9\u5f62\uff0c\u6211\u4eec\u5c06\u5b83\u8bbe\u7f6e\u4e3a100\u3002\u8fd0\u884c\u4ee3\u7801\u4e4b\u540e\uff0c\u4f60\u5e94\u8be5\u80fd\u5f97\u5230\u719f\u6089\u7684100\u4e2a\u4e94\u5f69\u7684\u56db\u8fb9\u5f62\u3002 \u5b9e\u4f8b\u5316\u6570\u7ec4 \u867d\u7136\u4e4b\u524d\u7684\u5b9e\u73b0\u5728\u76ee\u524d\u7684\u60c5\u51b5\u4e0b\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u8981\u6e32\u67d3\u8fdc\u8d85\u8fc7100\u4e2a\u5b9e\u4f8b\u7684\u65f6\u5019\uff08\u8fd9\u5176\u5b9e\u975e\u5e38\u666e\u904d\uff09\uff0c\u6211\u4eec\u6700\u7ec8\u4f1a\u8d85\u8fc7\u6700\u5927\u80fd\u591f\u53d1\u9001\u81f3\u7740\u8272\u5668\u7684uniform\u6570\u636e\u5927\u5c0f \u4e0a\u9650 \u3002\u5b83\u7684\u4e00\u4e2a\u4ee3\u66ff\u65b9\u6848\u662f \u5b9e\u4f8b\u5316\u6570\u7ec4 (Instanced Array)\uff0c\u5b83\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\uff08\u80fd\u591f\u8ba9\u6211\u4eec\u50a8\u5b58\u66f4\u591a\u7684\u6570\u636e\uff09\uff0c\u4ec5\u5728\u9876\u70b9\u7740\u8272\u5668\u6e32\u67d3\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\u65f6\u624d\u4f1a\u66f4\u65b0\u3002 \u4f7f\u7528\u9876\u70b9\u5c5e\u6027\u65f6\uff0c\u9876\u70b9\u7740\u8272\u5668\u7684\u6bcf\u6b21\u8fd0\u884c\u90fd\u4f1a\u8ba9GLSL\u83b7\u53d6\u65b0\u4e00\u7ec4\u9002\u7528\u4e8e\u5f53\u524d\u9876\u70b9\u7684\u5c5e\u6027\u3002\u800c\u5f53\u6211\u4eec\u5c06\u9876\u70b9\u5c5e\u6027\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u5b9e\u4f8b\u5316\u6570\u7ec4\u65f6\uff0c\u9876\u70b9\u7740\u8272\u5668\u5c31\u53ea\u9700\u8981\u5bf9\u6bcf\u4e2a\u5b9e\u4f8b\uff0c\u800c\u4e0d\u662f\u6bcf\u4e2a\u9876\u70b9\uff0c\u66f4\u65b0\u9876\u70b9\u5c5e\u6027\u7684\u5185\u5bb9\u4e86\u3002\u8fd9\u5141\u8bb8\u6211\u4eec\u5bf9\u9010\u9876\u70b9\u7684\u6570\u636e\u4f7f\u7528\u666e\u901a\u7684\u9876\u70b9\u5c5e\u6027\uff0c\u800c\u5bf9\u9010\u5b9e\u4f8b\u7684\u6570\u636e\u4f7f\u7528\u5b9e\u4f8b\u5316\u6570\u7ec4\u3002 \u4e3a\u4e86\u7ed9\u4f60\u4e00\u4e2a\u5b9e\u4f8b\u5316\u6570\u7ec4\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e4b\u524d\u7684\u4f8b\u5b50\uff0c\u5e76\u5c06\u504f\u79fb\u91cfuniform\u6570\u7ec4\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u5b9e\u4f8b\u5316\u6570\u7ec4\u3002\u6211\u4eec\u9700\u8981\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u518d\u6dfb\u52a0\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\uff1a #version 330 core layout (location = 0) in vec2 aPos; layout (location = 1) in vec3 aColor; layout (location = 2) in vec2 aOffset; out vec3 fColor; void main() { gl_Position = vec4(aPos + aOffset, 0.0, 1.0); fColor = aColor; } \u6211\u4eec\u4e0d\u518d\u4f7f\u7528 gl_InstanceID \uff0c\u73b0\u5728\u4e0d\u9700\u8981\u7d22\u5f15\u4e00\u4e2auniform\u6570\u7ec4\u5c31\u80fd\u591f\u76f4\u63a5\u4f7f\u7528 offset \u5c5e\u6027\u4e86\u3002 \u56e0\u4e3a\u5b9e\u4f8b\u5316\u6570\u7ec4\u548c position \u4e0e color \u53d8\u91cf\u4e00\u6837\uff0c\u90fd\u662f\u9876\u70b9\u5c5e\u6027\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u5b83\u7684\u5185\u5bb9\u5b58\u5728\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u4e2d\uff0c\u5e76\u4e14\u914d\u7f6e\u5b83\u7684\u5c5e\u6027\u6307\u9488\u3002\u6211\u4eec\u9996\u5148\u5c06\uff08\u4e0a\u4e00\u90e8\u5206\u7684\uff09 translations \u6570\u7ec4\u5b58\u5230\u4e00\u4e2a\u65b0\u7684\u7f13\u51b2\u5bf9\u8c61\u4e2d\uff1a unsigned int instanceVBO; glGenBuffers(1, &instanceVBO); glBindBuffer(GL_ARRAY_BUFFER, instanceVBO); glBufferData(GL_ARRAY_BUFFER, sizeof(glm::vec2) * 100, &translations[0], GL_STATIC_DRAW); glBindBuffer(GL_ARRAY_BUFFER, 0); \u4e4b\u540e\u6211\u4eec\u8fd8\u9700\u8981\u8bbe\u7f6e\u5b83\u7684\u9876\u70b9\u5c5e\u6027\u6307\u9488\uff0c\u5e76\u542f\u7528\u9876\u70b9\u5c5e\u6027\uff1a glEnableVertexAttribArray(2); glBindBuffer(GL_ARRAY_BUFFER, instanceVBO); glVertexAttribPointer(2, 2, GL_FLOAT, GL_FALSE, 2 * sizeof(float), (void*)0); glBindBuffer(GL_ARRAY_BUFFER, 0); glVertexAttribDivisor(2, 1); \u8fd9\u6bb5\u4ee3\u7801\u5f88\u6709\u610f\u601d\u7684\u5730\u65b9\u5728\u4e8e\u6700\u540e\u4e00\u884c\uff0c\u6211\u4eec\u8c03\u7528\u4e86 glVertexAttribDivisor \u3002\u8fd9\u4e2a\u51fd\u6570\u544a\u8bc9\u4e86OpenGL\u8be5 \u4ec0\u4e48\u65f6\u5019 \u66f4\u65b0\u9876\u70b9\u5c5e\u6027\u7684\u5185\u5bb9\u81f3\u65b0\u4e00\u7ec4\u6570\u636e\u3002\u5b83\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u9700\u8981\u7684\u9876\u70b9\u5c5e\u6027\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f \u5c5e\u6027\u9664\u6570 (Attribute Divisor)\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5c5e\u6027\u9664\u6570\u662f0\uff0c\u544a\u8bc9OpenGL\u6211\u4eec\u9700\u8981\u5728\u9876\u70b9\u7740\u8272\u5668\u7684\u6bcf\u6b21\u8fed\u4ee3\u65f6\u66f4\u65b0\u9876\u70b9\u5c5e\u6027\u3002\u5c06\u5b83\u8bbe\u7f6e\u4e3a1\u65f6\uff0c\u6211\u4eec\u544a\u8bc9OpenGL\u6211\u4eec\u5e0c\u671b\u5728\u6e32\u67d3\u4e00\u4e2a\u65b0\u5b9e\u4f8b\u7684\u65f6\u5019\u66f4\u65b0\u9876\u70b9\u5c5e\u6027\u3002\u800c\u8bbe\u7f6e\u4e3a2\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u6bcf2\u4e2a\u5b9e\u4f8b\u66f4\u65b0\u4e00\u6b21\u5c5e\u6027\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u6211\u4eec\u5c06\u5c5e\u6027\u9664\u6570\u8bbe\u7f6e\u4e3a1\uff0c\u662f\u5728\u544a\u8bc9OpenGL\uff0c\u5904\u4e8e\u4f4d\u7f6e\u503c2\u7684\u9876\u70b9\u5c5e\u6027\u662f\u4e00\u4e2a\u5b9e\u4f8b\u5316\u6570\u7ec4\u3002 \u5982\u679c\u6211\u4eec\u73b0\u5728\u4f7f\u7528 glDrawArraysInstanced \uff0c\u518d\u6b21\u6e32\u67d3\u56db\u8fb9\u5f62\uff0c\u4f1a\u5f97\u5230\u4ee5\u4e0b\u8f93\u51fa\uff1a \u8fd9\u548c\u4e4b\u524d\u7684\u4f8b\u5b50\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u4f46\u8fd9\u6b21\u662f\u4f7f\u7528\u5b9e\u4f8b\u5316\u6570\u7ec4\u5b9e\u73b0\u7684\uff0c\u8fd9\u8ba9\u6211\u4eec\u80fd\u591f\u4f20\u9012\u66f4\u591a\u7684\u6570\u636e\u5230\u9876\u70b9\u7740\u8272\u5668\uff08\u53ea\u8981\u5185\u5b58\u5141\u8bb8\uff09\u6765\u7528\u4e8e\u5b9e\u4f8b\u5316\u7ed8\u5236\u3002 \u4e3a\u4e86\u66f4\u6709\u8da3\u4e00\u70b9\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 gl_InstanceID \uff0c\u4ece\u53f3\u4e0a\u5230\u5de6\u4e0b\u9010\u6e10\u7f29\u5c0f\u56db\u8fb9\u5f62\uff1a void main() { vec2 pos = aPos * (gl_InstanceID / 100.0); gl_Position = vec4(pos + aOffset, 0.0, 1.0); fColor = aColor; } \u7ed3\u679c\u5c31\u662f\uff0c\u7b2c\u4e00\u4e2a\u56db\u8fb9\u5f62\u7684\u5b9e\u4f8b\u4f1a\u975e\u5e38\u5c0f\uff0c\u968f\u7740\u7ed8\u5236\u5b9e\u4f8b\u7684\u589e\u52a0\uff0c gl_InstanceID \u4f1a\u8d8a\u6765\u8d8a\u63a5\u8fd1100\uff0c\u56db\u8fb9\u5f62\u4e5f\u5c31\u8d8a\u6765\u8d8a\u63a5\u8fd1\u539f\u59cb\u5927\u5c0f\u3002\u50cf\u8fd9\u6837\u5c06\u5b9e\u4f8b\u5316\u6570\u7ec4\u4e0e gl_InstanceID \u7ed3\u5408\u4f7f\u7528\u662f\u5b8c\u5168\u53ef\u884c\u7684\u3002 \u5982\u679c\u4f60\u8fd8\u662f\u4e0d\u786e\u5b9a\u5b9e\u4f8b\u5316\u6e32\u67d3\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u6216\u8005\u60f3\u770b\u770b\u6240\u6709\u4ee3\u7801\u662f\u5982\u4f55\u7ec4\u5408\u8d77\u6765\u7684\uff0c\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801\u3002 \u867d\u7136\u5f88\u6709\u8da3\uff0c\u4f46\u662f\u8fd9\u4e9b\u4f8b\u5b50\u5e76\u4e0d\u662f\u5b9e\u4f8b\u5316\u7684\u597d\u4f8b\u5b50\u3002\u662f\u7684\uff0c\u5b83\u4eec\u7684\u786e\u8ba9\u4f60\u77e5\u9053\u5b9e\u4f8b\u5316\u662f\u600e\u4e48\u5de5\u4f5c\u7684\uff0c\u4f46\u662f\u6211\u4eec\u8fd8\u6ca1\u63a5\u89e6\u5230\u5b83\u6700\u6709\u7528\u7684\u4e00\u70b9\uff1a\u7ed8\u5236\u5de8\u5927\u6570\u91cf\u7684\u76f8\u4f3c\u7269\u4f53\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6211\u4eec\u5c06\u4f1a\u5728\u4e0b\u4e00\u90e8\u5206\u8fdb\u5165\u592a\u7a7a\u63a2\u9669\uff0c\u89c1\u8bc6\u5b9e\u4f8b\u5316\u6e32\u67d3\u771f\u6b63\u7684\u5a01\u529b\u3002 \u5c0f\u884c\u661f\u5e26 \u60f3\u8c61\u8fd9\u6837\u4e00\u4e2a\u573a\u666f\uff0c\u5728\u5b87\u5b99\u4e2d\u6709\u4e00\u4e2a\u5927\u7684\u884c\u661f\uff0c\u5b83\u4f4d\u4e8e\u5c0f\u884c\u661f\u5e26\u7684\u4e2d\u592e\u3002\u8fd9\u6837\u7684\u5c0f\u884c\u661f\u5e26\u53ef\u80fd\u5305\u542b\u6210\u5343\u4e0a\u4e07\u7684\u5ca9\u5757\uff0c\u5728\u5f88\u4e0d\u9519\u7684\u663e\u5361\u4e0a\u4e5f\u5f88\u96be\u5b8c\u6210\u8fd9\u6837\u7684\u6e32\u67d3\u3002\u5b9e\u4f8b\u5316\u6e32\u67d3\u6b63\u662f\u9002\u7528\u4e8e\u8fd9\u6837\u7684\u573a\u666f\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u5c0f\u884c\u661f\u90fd\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6a21\u578b\u6765\u8868\u793a\u3002\u6bcf\u4e2a\u5c0f\u884c\u661f\u53ef\u4ee5\u518d\u4f7f\u7528\u4e0d\u540c\u7684\u53d8\u6362\u77e9\u9635\u6765\u8fdb\u884c\u5c11\u8bb8\u7684\u53d8\u5316\u3002 \u4e3a\u4e86\u5c55\u793a\u5b9e\u4f8b\u5316\u6e32\u67d3\u7684\u4f5c\u7528\uff0c\u6211\u4eec\u9996\u5148\u4f1a \u4e0d\u4f7f\u7528 \u5b9e\u4f8b\u5316\u6e32\u67d3\uff0c\u6765\u6e32\u67d3\u5c0f\u884c\u661f\u7ed5\u7740\u884c\u661f\u98de\u884c\u7684\u573a\u666f\u3002\u8fd9\u4e2a\u573a\u666f\u5c06\u4f1a\u5305\u542b\u4e00\u4e2a\u5927\u7684\u884c\u661f\u6a21\u578b\uff0c\u5b83\u53ef\u4ee5\u5728 \u8fd9\u91cc \u4e0b\u8f7d\uff0c\u4ee5\u53ca\u5f88\u591a\u73af\u7ed5\u7740\u884c\u661f\u7684\u5c0f\u884c\u661f\u3002\u5c0f\u884c\u661f\u7684\u5ca9\u77f3\u6a21\u578b\u53ef\u4ee5\u5728 \u8fd9\u91cc \u4e0b\u8f7d\u3002 \u5728\u4ee3\u7801\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u5728 \u6a21\u578b\u52a0\u8f7d \u5c0f\u8282\u4e2d\u5b9a\u4e49\u7684\u6a21\u578b\u52a0\u8f7d\u5668\u6765\u52a0\u8f7d\u6a21\u578b\u3002 \u4e3a\u4e86\u5f97\u5230\u60f3\u8981\u7684\u6548\u679c\uff0c\u6211\u4eec\u5c06\u4f1a\u4e3a\u6bcf\u4e2a\u5c0f\u884c\u661f\u751f\u6210\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\uff0c\u7528\u4f5c\u5b83\u4eec\u7684\u6a21\u578b\u77e9\u9635\u3002\u53d8\u6362\u77e9\u9635\u9996\u5148\u5c06\u5c0f\u884c\u661f\u4f4d\u79fb\u5230\u5c0f\u884c\u661f\u5e26\u4e2d\u7684\u67d0\u5904\uff0c\u6211\u4eec\u8fd8\u4f1a\u52a0\u4e00\u4e2a\u5c0f\u7684\u968f\u673a\u504f\u79fb\u503c\u5230\u8fd9\u4e2a\u504f\u79fb\u91cf\u4e0a\uff0c\u8ba9\u8fd9\u4e2a\u5706\u73af\u770b\u8d77\u6765\u66f4\u81ea\u7136\u4e00\u70b9\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5e94\u7528\u4e00\u4e2a\u968f\u673a\u7684\u7f29\u653e\uff0c\u5e76\u4e14\u4ee5\u4e00\u4e2a\u65cb\u8f6c\u5411\u91cf\u4e3a\u8f74\u8fdb\u884c\u4e00\u4e2a\u968f\u673a\u7684\u65cb\u8f6c\u3002\u6700\u7ec8\u7684\u53d8\u6362\u77e9\u9635\u4e0d\u4ec5\u80fd\u5c06\u5c0f\u884c\u661f\u53d8\u6362\u5230\u884c\u661f\u7684\u5468\u56f4\uff0c\u800c\u4e14\u4f1a\u8ba9\u5b83\u770b\u8d77\u6765\u66f4\u81ea\u7136\uff0c\u4e0e\u5176\u5b83\u5c0f\u884c\u661f\u4e0d\u540c\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u5e03\u6ee1\u5c0f\u884c\u661f\u7684\u5706\u73af\uff0c\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5c0f\u884c\u661f\u90fd\u4e0e\u4f17\u4e0d\u540c\u3002 unsigned int amount = 1000; glm::mat4 *modelMatrices; modelMatrices = new glm::mat4[amount]; srand(glfwGetTime()); // \u521d\u59cb\u5316\u968f\u673a\u79cd\u5b50 float radius = 50.0; float offset = 2.5f; for(unsigned int i = 0; i < amount; i++) { glm::mat4 model; // 1. \u4f4d\u79fb\uff1a\u5206\u5e03\u5728\u534a\u5f84\u4e3a 'radius' \u7684\u5706\u5f62\u4e0a\uff0c\u504f\u79fb\u7684\u8303\u56f4\u662f [-offset, offset] float angle = (float)i / (float)amount * 360.0f; float displacement = (rand() % (int)(2 * offset * 100)) / 100.0f - offset; float x = sin(angle) * radius + displacement; displacement = (rand() % (int)(2 * offset * 100)) / 100.0f - offset; float y = displacement * 0.4f; // \u8ba9\u884c\u661f\u5e26\u7684\u9ad8\u5ea6\u6bd4x\u548cz\u7684\u5bbd\u5ea6\u8981\u5c0f displacement = (rand() % (int)(2 * offset * 100)) / 100.0f - offset; float z = cos(angle) * radius + displacement; model = glm::translate(model, glm::vec3(x, y, z)); // 2. \u7f29\u653e\uff1a\u5728 0.05 \u548c 0.25f \u4e4b\u95f4\u7f29\u653e float scale = (rand() % 20) / 100.0f + 0.05; model = glm::scale(model, glm::vec3(scale)); // 3. \u65cb\u8f6c\uff1a\u7ed5\u7740\u4e00\u4e2a\uff08\u534a\uff09\u968f\u673a\u9009\u62e9\u7684\u65cb\u8f6c\u8f74\u5411\u91cf\u8fdb\u884c\u968f\u673a\u7684\u65cb\u8f6c float rotAngle = (rand() % 360); model = glm::rotate(model, rotAngle, glm::vec3(0.4f, 0.6f, 0.8f)); // 4. \u6dfb\u52a0\u5230\u77e9\u9635\u7684\u6570\u7ec4\u4e2d modelMatrices[i] = model; } \u8fd9\u6bb5\u4ee3\u7801\u770b\u8d77\u6765\u53ef\u80fd\u6709\u70b9\u5413\u4eba\uff0c\u4f46\u6211\u4eec\u53ea\u662f\u5c06\u5c0f\u884c\u661f\u7684 x \u548c z \u4f4d\u7f6e\u53d8\u6362\u5230\u4e86\u4e00\u4e2a\u534a\u5f84\u4e3a radius \u7684\u5706\u5f62\u4e0a\uff0c\u5e76\u4e14\u5728\u534a\u5f84\u7684\u57fa\u7840\u4e0a\u504f\u79fb\u4e86 -offset \u5230 offset \u3002\u6211\u4eec\u8ba9 y \u504f\u79fb\u7684\u5f71\u54cd\u66f4\u5c0f\u4e00\u70b9\uff0c\u8ba9\u5c0f\u884c\u661f\u5e26\u66f4\u6241\u5e73\u4e00\u70b9\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5e94\u7528\u4e86\u7f29\u653e\u548c\u65cb\u8f6c\u53d8\u6362\uff0c\u5e76\u5c06\u6700\u7ec8\u7684\u53d8\u6362\u77e9\u9635\u50a8\u5b58\u5728 modelMatrices \u4e2d\uff0c\u8fd9\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\u662f amount \u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u4e00\u5171\u751f\u62101000\u4e2a\u6a21\u578b\u77e9\u9635\uff0c\u6bcf\u4e2a\u5c0f\u884c\u661f\u4e00\u4e2a\u3002 \u5728\u52a0\u8f7d\u5b8c\u884c\u661f\u548c\u5ca9\u77f3\u6a21\u578b\uff0c\u5e76\u7f16\u8bd1\u5b8c\u7740\u8272\u5668\u4e4b\u540e\uff0c\u6e32\u67d3\u7684\u4ee3\u7801\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a // \u7ed8\u5236\u884c\u661f shader.use(); glm::mat4 model; model = glm::translate(model, glm::vec3(0.0f, -3.0f, 0.0f)); model = glm::scale(model, glm::vec3(4.0f, 4.0f, 4.0f)); shader.setMat4(\"model\", model); planet.Draw(shader); // \u7ed8\u5236\u5c0f\u884c\u661f for(unsigned int i = 0; i < amount; i++) { shader.setMat4(\"model\", modelMatrices[i]); rock.Draw(shader); } \u6211\u4eec\u9996\u5148\u7ed8\u5236\u4e86\u884c\u661f\u7684\u6a21\u578b\uff0c\u5e76\u5bf9\u5b83\u8fdb\u884c\u4f4d\u79fb\u548c\u7f29\u653e\uff0c\u4ee5\u9002\u5e94\u573a\u666f\uff0c\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u7ed8\u5236 amount \u6570\u91cf\u7684\u5ca9\u77f3\u6a21\u578b\u3002\u5728\u7ed8\u5236\u6bcf\u4e2a\u5ca9\u77f3\u4e4b\u524d\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u5728\u7740\u8272\u5668\u5185\u8bbe\u7f6e\u5bf9\u5e94\u7684\u6a21\u578b\u53d8\u6362\u77e9\u9635\u3002 \u6700\u7ec8\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u770b\u8d77\u6765\u50cf\u662f\u592a\u7a7a\u7684\u573a\u666f\uff0c\u73af\u7ed5\u7740\u884c\u661f\u7684\u662f\u770b\u8d77\u6765\u5f88\u81ea\u7136\u7684\u5c0f\u884c\u661f\u5e26\uff1a \u8fd9\u4e2a\u573a\u666f\u6bcf\u5e27\u5305\u542b1001\u6b21\u6e32\u67d3\u8c03\u7528\uff0c\u5176\u4e2d1000\u4e2a\u662f\u5ca9\u77f3\u6a21\u578b\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u6e90\u4ee3\u7801\u3002 \u5f53\u6211\u4eec\u5f00\u59cb\u589e\u52a0\u8fd9\u4e2a\u6570\u5b57\u7684\u65f6\u5019\uff0c\u4f60\u5f88\u5feb\u5c31\u4f1a\u53d1\u73b0\u573a\u666f\u4e0d\u518d\u80fd\u591f\u6d41\u7545\u8fd0\u884c\u4e86\uff0c\u5e27\u6570\u4e5f\u4e0b\u964d\u5f88\u5389\u5bb3\u3002\u5f53\u6211\u4eec\u5c06 amount \u8bbe\u7f6e\u4e3a2000\u7684\u65f6\u5019\uff0c\u573a\u666f\u5c31\u5df2\u7ecf\u6162\u5230\u79fb\u52a8\u90fd\u5f88\u56f0\u96be\u7684\u7a0b\u5ea6\u4e86\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u6765\u5c1d\u8bd5\u4f7f\u7528\u5b9e\u4f8b\u5316\u6e32\u67d3\u6765\u6e32\u67d3\u76f8\u540c\u7684\u573a\u666f\u3002\u6211\u4eec\u9996\u5148\u5bf9\u9876\u70b9\u7740\u8272\u5668\u8fdb\u884c\u4e00\u70b9\u4fee\u6539\uff1a #version 330 core layout (location = 0) in vec3 aPos; layout (location = 2) in vec2 aTexCoords; layout (location = 3) in mat4 instanceMatrix; out vec2 TexCoords; uniform mat4 projection; uniform mat4 view; void main() { gl_Position = projection * view * instanceMatrix * vec4(aPos, 1.0); TexCoords = aTexCoords; } \u6211\u4eec\u4e0d\u518d\u4f7f\u7528\u6a21\u578buniform\u53d8\u91cf\uff0c\u6539\u4e3a\u4e00\u4e2a mat4 \u7684\u9876\u70b9\u5c5e\u6027\uff0c\u8ba9\u6211\u4eec\u80fd\u591f\u5b58\u50a8\u4e00\u4e2a\u5b9e\u4f8b\u5316\u6570\u7ec4\u7684\u53d8\u6362\u77e9\u9635\u3002\u7136\u800c\uff0c\u5f53\u6211\u4eec\u9876\u70b9\u5c5e\u6027\u7684\u7c7b\u578b\u5927\u4e8e vec4 \u65f6\uff0c\u5c31\u8981\u591a\u8fdb\u884c\u4e00\u6b65\u5904\u7406\u4e86\u3002\u9876\u70b9\u5c5e\u6027\u6700\u5927\u5141\u8bb8\u7684\u6570\u636e\u5927\u5c0f\u7b49\u4e8e\u4e00\u4e2a vec4 \u3002\u56e0\u4e3a\u4e00\u4e2a mat4 \u672c\u8d28\u4e0a\u662f4\u4e2a vec4 \uff0c\u6211\u4eec\u9700\u8981\u4e3a\u8fd9\u4e2a\u77e9\u9635\u9884\u75594\u4e2a\u9876\u70b9\u5c5e\u6027\u3002\u56e0\u4e3a\u6211\u4eec\u5c06\u5b83\u7684\u4f4d\u7f6e\u503c\u8bbe\u7f6e\u4e3a3\uff0c\u77e9\u9635\u6bcf\u4e00\u5217\u7684\u9876\u70b9\u5c5e\u6027\u4f4d\u7f6e\u503c\u5c31\u662f3\u30014\u30015\u548c6\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u8fd94\u4e2a\u9876\u70b9\u5c5e\u6027\u8bbe\u7f6e\u5c5e\u6027\u6307\u9488\uff0c\u5e76\u5c06\u5b83\u4eec\u8bbe\u7f6e\u4e3a\u5b9e\u4f8b\u5316\u6570\u7ec4\uff1a // \u9876\u70b9\u7f13\u51b2\u5bf9\u8c61 unsigned int buffer; glGenBuffers(1, &buffer); glBindBuffer(GL_ARRAY_BUFFER, buffer); glBufferData(GL_ARRAY_BUFFER, amount * sizeof(glm::mat4), &modelMatrices[0], GL_STATIC_DRAW); for(unsigned int i = 0; i < rock.meshes.size(); i++) { unsigned int VAO = rock.meshes[i].VAO; glBindVertexArray(VAO); // \u9876\u70b9\u5c5e\u6027 GLsizei vec4Size = sizeof(glm::vec4); glEnableVertexAttribArray(3); glVertexAttribPointer(3, 4, GL_FLOAT, GL_FALSE, 4 * vec4Size, (void*)0); glEnableVertexAttribArray(4); glVertexAttribPointer(4, 4, GL_FLOAT, GL_FALSE, 4 * vec4Size, (void*)(1 * vec4Size)); glEnableVertexAttribArray(5); glVertexAttribPointer(5, 4, GL_FLOAT, GL_FALSE, 4 * vec4Size, (void*)(2 * vec4Size)); glEnableVertexAttribArray(6); glVertexAttribPointer(6, 4, GL_FLOAT, GL_FALSE, 4 * vec4Size, (void*)(3 * vec4Size)); glVertexAttribDivisor(3, 1); glVertexAttribDivisor(4, 1); glVertexAttribDivisor(5, 1); glVertexAttribDivisor(6, 1); glBindVertexArray(0); } \u6ce8\u610f\u8fd9\u91cc\u6211\u4eec\u5c06 Mesh \u7684 VAO \u4ece\u79c1\u6709\u53d8\u91cf\u6539\u4e3a\u4e86\u516c\u6709\u53d8\u91cf\uff0c\u8ba9\u6211\u4eec\u80fd\u591f\u8bbf\u95ee\u5b83\u7684\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\u3002\u8fd9\u5e76\u4e0d\u662f\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u53ea\u662f\u4e3a\u4e86\u914d\u5408\u672c\u5c0f\u8282\u7684\u4e00\u4e2a\u7b80\u5355\u7684\u6539\u52a8\u3002\u9664\u6b64\u4e4b\u5916\u4ee3\u7801\u5c31\u5e94\u8be5\u5f88\u6e05\u695a\u4e86\u3002\u6211\u4eec\u544a\u8bc9\u4e86OpenGL\u5e94\u8be5\u5982\u4f55\u89e3\u91ca\u6bcf\u4e2a\u7f13\u51b2\u9876\u70b9\u5c5e\u6027\u7684\u7f13\u51b2\uff0c\u5e76\u4e14\u544a\u8bc9\u5b83\u8fd9\u4e9b\u9876\u70b9\u5c5e\u6027\u662f\u5b9e\u4f8b\u5316\u6570\u7ec4\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u518d\u6b21\u4f7f\u7528\u7f51\u683c\u7684 VAO \uff0c\u8fd9\u4e00\u6b21\u4f7f\u7528 glDrawElementsInstanced \u8fdb\u884c\u7ed8\u5236\uff1a // \u7ed8\u5236\u5c0f\u884c\u661f instanceShader.use(); for(unsigned int i = 0; i < rock.meshes.size(); i++) { glBindVertexArray(rock.meshes[i].VAO); glDrawElementsInstanced( GL_TRIANGLES, rock.meshes[i].indices.size(), GL_UNSIGNED_INT, 0, amount ); } \u8fd9\u91cc\uff0c\u6211\u4eec\u7ed8\u5236\u4e0e\u4e4b\u524d\u76f8\u540c\u6570\u91cf amount \u7684\u5c0f\u884c\u661f\uff0c\u4f46\u662f\u4f7f\u7528\u7684\u662f\u5b9e\u4f8b\u6e32\u67d3\u3002\u7ed3\u679c\u5e94\u8be5\u662f\u975e\u5e38\u76f8\u4f3c\u7684\uff0c\u4f46\u5982\u679c\u4f60\u5f00\u59cb\u589e\u52a0 amount \u53d8\u91cf\uff0c\u4f60\u5c31\u80fd\u770b\u89c1\u5b9e\u4f8b\u5316\u6e32\u67d3\u7684\u6548\u679c\u4e86\u3002\u6ca1\u6709\u5b9e\u4f8b\u5316\u6e32\u67d3\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u80fd\u6d41\u7545\u6e32\u67d31000\u52301500\u4e2a\u5c0f\u884c\u661f\u3002\u800c\u4f7f\u7528\u4e86\u5b9e\u4f8b\u5316\u6e32\u67d3\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u503c\u8bbe\u7f6e\u4e3a100000\uff0c\u6bcf\u4e2a\u5ca9\u77f3\u6a21\u578b\u6709576\u4e2a\u9876\u70b9\uff0c\u6bcf\u5e27\u52a0\u8d77\u6765\u5927\u6982\u8981\u7ed8\u52365700\u4e07\u4e2a\u9876\u70b9\uff0c\u4f46\u6027\u80fd\u5374\u6ca1\u6709\u53d7\u5230\u4efb\u4f55\u5f71\u54cd\uff01 \u4e0a\u9762\u8fd9\u5e45\u56fe\u6e32\u67d3\u4e8610\u4e07\u4e2a\u5c0f\u884c\u661f\uff0c\u534a\u5f84\u4e3a 150.0f \uff0c\u504f\u79fb\u91cf\u7b49\u4e8e 25.0f \u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5b9e\u4f8b\u5316\u6e32\u67d3\u7684\u4ee3\u7801\u3002 Important \u5728\u67d0\u4e9b\u673a\u5668\u4e0a\uff0c10\u4e07\u4e2a\u5c0f\u884c\u661f\u53ef\u80fd\u4f1a\u592a\u591a\u4e86\uff0c\u6240\u4ee5\u5c1d\u8bd5\u4fee\u6539\u8fd9\u4e2a\u503c\uff0c\u76f4\u5230\u8fbe\u5230\u4e00\u4e2a\u4f60\u80fd\u63a5\u53d7\u7684\u5e27\u7387\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u5728\u5408\u9002\u7684\u73af\u5883\u4e0b\uff0c\u5b9e\u4f8b\u5316\u6e32\u67d3\u80fd\u591f\u5927\u5927\u589e\u52a0\u663e\u5361\u7684\u6e32\u67d3\u80fd\u529b\u3002\u6b63\u662f\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u5b9e\u4f8b\u5316\u6e32\u67d3\u901a\u5e38\u4f1a\u7528\u4e8e\u6e32\u67d3\u8349\u3001\u690d\u88ab\u3001\u7c92\u5b50\uff0c\u4ee5\u53ca\u4e0a\u9762\u8fd9\u6837\u7684\u573a\u666f\uff0c\u57fa\u672c\u4e0a\u53ea\u8981\u573a\u666f\u4e2d\u6709\u5f88\u591a\u91cd\u590d\u7684\u5f62\u72b6\uff0c\u90fd\u80fd\u591f\u4f7f\u7528\u5b9e\u4f8b\u5316\u6e32\u67d3\u6765\u63d0\u9ad8\u6027\u80fd\u3002","title":"\u5b9e\u4f8b\u5316"},{"location":"04%20Advanced%20OpenGL/10%20Instancing/#_1","text":"\u539f\u6587 Instancing \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u5047\u8bbe\u4f60\u6709\u4e00\u4e2a\u7ed8\u5236\u4e86\u5f88\u591a\u6a21\u578b\u7684\u573a\u666f\uff0c\u800c\u5927\u90e8\u5206\u7684\u6a21\u578b\u5305\u542b\u7684\u662f\u540c\u4e00\u7ec4\u9876\u70b9\u6570\u636e\uff0c\u53ea\u4e0d\u8fc7\u8fdb\u884c\u7684\u662f\u4e0d\u540c\u7684\u4e16\u754c\u7a7a\u95f4\u53d8\u6362\u3002\u60f3\u8c61\u4e00\u4e2a\u5145\u6ee1\u8349\u7684\u573a\u666f\uff1a\u6bcf\u6839\u8349\u90fd\u662f\u4e00\u4e2a\u5305\u542b\u51e0\u4e2a\u4e09\u89d2\u5f62\u7684\u5c0f\u6a21\u578b\u3002\u4f60\u53ef\u80fd\u4f1a\u9700\u8981\u7ed8\u5236\u5f88\u591a\u6839\u8349\uff0c\u6700\u7ec8\u5728\u6bcf\u5e27\u4e2d\u4f60\u53ef\u80fd\u4f1a\u9700\u8981\u6e32\u67d3\u4e0a\u5343\u6216\u8005\u4e0a\u4e07\u6839\u8349\u3002\u56e0\u4e3a\u6bcf\u4e00\u6839\u8349\u4ec5\u4ec5\u662f\u7531\u51e0\u4e2a\u4e09\u89d2\u5f62\u6784\u6210\uff0c\u6e32\u67d3\u51e0\u4e4e\u662f\u77ac\u95f4\u5b8c\u6210\u7684\uff0c\u4f46\u4e0a\u5343\u4e2a\u6e32\u67d3\u51fd\u6570\u8c03\u7528\u5374\u4f1a\u6781\u5927\u5730\u5f71\u54cd\u6027\u80fd\u3002 \u5982\u679c\u6211\u4eec\u9700\u8981\u6e32\u67d3\u5927\u91cf\u7269\u4f53\u65f6\uff0c\u4ee3\u7801\u770b\u8d77\u6765\u4f1a\u50cf\u8fd9\u6837\uff1a for(unsigned int i = 0; i < amount_of_models_to_draw; i++) { DoSomePreparations(); // \u7ed1\u5b9aVAO\uff0c\u7ed1\u5b9a\u7eb9\u7406\uff0c\u8bbe\u7f6euniform\u7b49 glDrawArrays(GL_TRIANGLES, 0, amount_of_vertices); } \u5982\u679c\u50cf\u8fd9\u6837\u7ed8\u5236\u6a21\u578b\u7684\u5927\u91cf \u5b9e\u4f8b (Instance)\uff0c\u4f60\u5f88\u5feb\u5c31\u4f1a\u56e0\u4e3a\u7ed8\u5236\u8c03\u7528\u8fc7\u591a\u800c\u8fbe\u5230\u6027\u80fd\u74f6\u9888\u3002\u4e0e\u7ed8\u5236\u9876\u70b9\u672c\u8eab\u76f8\u6bd4\uff0c\u4f7f\u7528 glDrawArrays \u6216 glDrawElements \u51fd\u6570\u544a\u8bc9GPU\u53bb\u7ed8\u5236\u4f60\u7684\u9876\u70b9\u6570\u636e\u4f1a\u6d88\u8017\u66f4\u591a\u7684\u6027\u80fd\uff0c\u56e0\u4e3aOpenGL\u5728\u7ed8\u5236\u9876\u70b9\u6570\u636e\u4e4b\u524d\u9700\u8981\u505a\u5f88\u591a\u51c6\u5907\u5de5\u4f5c\uff08\u6bd4\u5982\u544a\u8bc9GPU\u8be5\u4ece\u54ea\u4e2a\u7f13\u51b2\u8bfb\u53d6\u6570\u636e\uff0c\u4ece\u54ea\u5bfb\u627e\u9876\u70b9\u5c5e\u6027\uff0c\u800c\u4e14\u8fd9\u4e9b\u90fd\u662f\u5728\u76f8\u5bf9\u7f13\u6162\u7684CPU\u5230GPU\u603b\u7ebf(CPU to GPU Bus)\u4e0a\u8fdb\u884c\u7684\uff09\u3002\u6240\u4ee5\uff0c\u5373\u4fbf\u6e32\u67d3\u9876\u70b9\u975e\u5e38\u5feb\uff0c\u547d\u4ee4GPU\u53bb\u6e32\u67d3\u5374\u672a\u5fc5\u3002 \u5982\u679c\u6211\u4eec\u80fd\u591f\u5c06\u6570\u636e\u4e00\u6b21\u6027\u53d1\u9001\u7ed9GPU\uff0c\u7136\u540e\u4f7f\u7528\u4e00\u4e2a\u7ed8\u5236\u51fd\u6570\u8ba9OpenGL\u5229\u7528\u8fd9\u4e9b\u6570\u636e\u7ed8\u5236\u591a\u4e2a\u7269\u4f53\uff0c\u5c31\u4f1a\u66f4\u65b9\u4fbf\u4e86\u3002\u8fd9\u5c31\u662f \u5b9e\u4f8b\u5316 (Instancing)\u3002 \u5b9e\u4f8b\u5316\u8fd9\u9879\u6280\u672f\u80fd\u591f\u8ba9\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u6e32\u67d3\u8c03\u7528\u6765\u7ed8\u5236\u591a\u4e2a\u7269\u4f53\uff0c\u6765\u8282\u7701\u6bcf\u6b21\u7ed8\u5236\u7269\u4f53\u65f6CPU -> GPU\u7684\u901a\u4fe1\uff0c\u5b83\u53ea\u9700\u8981\u4e00\u6b21\u5373\u53ef\u3002\u5982\u679c\u60f3\u4f7f\u7528\u5b9e\u4f8b\u5316\u6e32\u67d3\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06 glDrawArrays \u548c glDrawElements \u7684\u6e32\u67d3\u8c03\u7528\u5206\u522b\u6539\u4e3a glDrawArraysInstanced \u548c glDrawElementsInstanced \u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u4e9b\u6e32\u67d3\u51fd\u6570\u7684 \u5b9e\u4f8b\u5316 \u7248\u672c\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\uff0c\u53eb\u505a \u5b9e\u4f8b\u6570\u91cf (Instance Count)\uff0c\u5b83\u80fd\u591f\u8bbe\u7f6e\u6211\u4eec\u9700\u8981\u6e32\u67d3\u7684\u5b9e\u4f8b\u4e2a\u6570\u3002\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u5c06\u5fc5\u987b\u7684\u6570\u636e\u53d1\u9001\u5230GPU\u4e00\u6b21\uff0c\u7136\u540e\u4f7f\u7528\u4e00\u6b21\u51fd\u6570\u8c03\u7528\u544a\u8bc9GPU\u5b83\u5e94\u8be5\u5982\u4f55\u7ed8\u5236\u8fd9\u4e9b\u5b9e\u4f8b\u3002GPU\u5c06\u4f1a\u76f4\u63a5\u6e32\u67d3\u8fd9\u4e9b\u5b9e\u4f8b\uff0c\u800c\u4e0d\u7528\u4e0d\u65ad\u5730\u4e0eCPU\u8fdb\u884c\u901a\u4fe1\u3002 \u8fd9\u4e2a\u51fd\u6570\u672c\u8eab\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\u3002\u6e32\u67d3\u540c\u4e00\u4e2a\u7269\u4f53\u4e00\u5343\u6b21\u5bf9\u6211\u4eec\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\u5904\uff0c\u6bcf\u4e2a\u7269\u4f53\u90fd\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u800c\u4e14\u8fd8\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\u3002\u6211\u4eec\u53ea\u80fd\u770b\u89c1\u4e00\u4e2a\u7269\u4f53\uff01\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0cGLSL\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5d4c\u5165\u4e86\u53e6\u4e00\u4e2a\u5185\u5efa\u53d8\u91cf\uff0c gl_InstanceID \u3002 \u5728\u4f7f\u7528\u5b9e\u4f8b\u5316\u6e32\u67d3\u8c03\u7528\u65f6\uff0c gl_InstanceID \u4f1a\u4ece0\u5f00\u59cb\uff0c\u5728\u6bcf\u4e2a\u5b9e\u4f8b\u88ab\u6e32\u67d3\u65f6\u9012\u589e1\u3002\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u6b63\u5728\u6e32\u67d3\u7b2c43\u4e2a\u5b9e\u4f8b\uff0c\u90a3\u4e48\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5b83\u7684 gl_InstanceID \u5c06\u4f1a\u662f42\u3002\u56e0\u4e3a\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u6709\u552f\u4e00\u7684ID\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u6570\u7ec4\uff0c\u5c06ID\u4e0e\u4f4d\u7f6e\u503c\u5bf9\u5e94\u8d77\u6765\uff0c\u5c06\u6bcf\u4e2a\u5b9e\u4f8b\u653e\u7f6e\u5728\u4e16\u754c\u7684\u4e0d\u540c\u4f4d\u7f6e\u3002 \u4e3a\u4e86\u4f53\u9a8c\u4e00\u4e0b\u5b9e\u4f8b\u5316\u7ed8\u5236\uff0c\u6211\u4eec\u5c06\u4f1a\u5728\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7cfb\u4e2d\u4f7f\u7528\u4e00\u4e2a\u6e32\u67d3\u8c03\u7528\uff0c\u7ed8\u5236100\u4e2a2D\u56db\u8fb9\u5f62\u3002\u6211\u4eec\u4f1a\u7d22\u5f15\u4e00\u4e2a\u5305\u542b100\u4e2a\u504f\u79fb\u5411\u91cf\u7684uniform\u6570\u7ec4\uff0c\u5c06\u504f\u79fb\u503c\u52a0\u5230\u6bcf\u4e2a\u5b9e\u4f8b\u5316\u7684\u56db\u8fb9\u5f62\u4e0a\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u6392\u5217\u6574\u9f50\u7684\u56db\u8fb9\u5f62\u7f51\u683c\uff1a \u6bcf\u4e2a\u56db\u8fb9\u5f62\u75312\u4e2a\u4e09\u89d2\u5f62\u6240\u7ec4\u6210\uff0c\u4e00\u5171\u67096\u4e2a\u9876\u70b9\u3002\u6bcf\u4e2a\u9876\u70b9\u5305\u542b\u4e00\u4e2a2D\u7684\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u4f4d\u7f6e\u5411\u91cf\u548c\u4e00\u4e2a\u989c\u8272\u5411\u91cf\u3002 \u4e0b\u9762\u5c31\u662f\u8fd9\u4e2a\u4f8b\u5b50\u4f7f\u7528\u7684\u9876\u70b9\u6570\u636e\uff0c\u4e3a\u4e86\u5927\u91cf\u586b\u5145\u5c4f\u5e55\uff0c\u6bcf\u4e2a\u4e09\u89d2\u5f62\u90fd\u5f88\u5c0f\uff1a float quadVertices[] = { // \u4f4d\u7f6e // \u989c\u8272 -0.05f, 0.05f, 1.0f, 0.0f, 0.0f, 0.05f, -0.05f, 0.0f, 1.0f, 0.0f, -0.05f, -0.05f, 0.0f, 0.0f, 1.0f, -0.05f, 0.05f, 1.0f, 0.0f, 0.0f, 0.05f, -0.05f, 0.0f, 1.0f, 0.0f, 0.05f, 0.05f, 0.0f, 1.0f, 1.0f }; \u7247\u6bb5\u7740\u8272\u5668\u4f1a\u4ece\u9876\u70b9\u7740\u8272\u5668\u63a5\u53d7\u989c\u8272\u5411\u91cf\uff0c\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u5b83\u7684\u989c\u8272\u8f93\u51fa\uff0c\u6765\u5b9e\u73b0\u56db\u8fb9\u5f62\u7684\u989c\u8272\uff1a #version 330 core out vec4 FragColor; in vec3 fColor; void main() { FragColor = vec4(fColor, 1.0); } \u5230\u73b0\u5728\u90fd\u6ca1\u6709\u4ec0\u4e48\u65b0\u5185\u5bb9\uff0c\u4f46\u4ece\u9876\u70b9\u7740\u8272\u5668\u5f00\u59cb\u5c31\u53d8\u5f97\u5f88\u6709\u8da3\u4e86\uff1a #version 330 core layout (location = 0) in vec2 aPos; layout (location = 1) in vec3 aColor; out vec3 fColor; uniform vec2 offsets[100]; void main() { vec2 offset = offsets[gl_InstanceID]; gl_Position = vec4(aPos + offset, 0.0, 1.0); fColor = aColor; } \u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53eb\u505a offsets \u7684\u6570\u7ec4\uff0c\u5b83\u5305\u542b100\u4e2a\u504f\u79fb\u5411\u91cf\u3002\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528 gl_InstanceID \u6765\u7d22\u5f15 offsets \u6570\u7ec4\uff0c\u83b7\u53d6\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u504f\u79fb\u5411\u91cf\u3002\u5982\u679c\u6211\u4eec\u8981\u5b9e\u4f8b\u5316\u7ed8\u5236100\u4e2a\u56db\u8fb9\u5f62\uff0c\u4ec5\u4f7f\u7528\u8fd9\u4e2a\u9876\u70b9\u7740\u8272\u5668\u6211\u4eec\u5c31\u80fd\u5f97\u5230100\u4e2a\u4f4d\u4e8e\u4e0d\u540c\u4f4d\u7f6e\u7684\u56db\u8fb9\u5f62\u3002 \u5f53\u524d\uff0c\u6211\u4eec\u4ecd\u8981\u8bbe\u7f6e\u8fd9\u4e9b\u504f\u79fb\u4f4d\u7f6e\uff0c\u6211\u4eec\u4f1a\u5728\u8fdb\u5165\u6e32\u67d3\u5faa\u73af\u4e4b\u524d\u4f7f\u7528\u4e00\u4e2a\u5d4c\u5957for\u5faa\u73af\u8ba1\u7b97\uff1a glm::vec2 translations[100]; int index = 0; float offset = 0.1f; for(int y = -10; y < 10; y += 2) { for(int x = -10; x < 10; x += 2) { glm::vec2 translation; translation.x = (float)x / 10.0f + offset; translation.y = (float)y / 10.0f + offset; translations[index++] = translation; } } \u8fd9\u91cc\uff0c\u6211\u4eec\u521b\u5efa100\u4e2a\u4f4d\u79fb\u5411\u91cf\uff0c\u8868\u793a10x10\u7f51\u683c\u4e0a\u7684\u6240\u6709\u4f4d\u7f6e\u3002\u9664\u4e86\u751f\u6210 translations \u6570\u7ec4\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u6570\u636e\u8f6c\u79fb\u5230\u9876\u70b9\u7740\u8272\u5668\u7684uniform\u6570\u7ec4\u4e2d\uff1a shader.use(); for(unsigned int i = 0; i < 100; i++) { shader.setVec2((\"offsets[\" + std::to_string(i) + \"]\"), translations[i]); } \u5728\u8fd9\u4e00\u6bb5\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5c06for\u5faa\u73af\u7684\u8ba1\u6570\u5668 i \u8f6c\u6362\u4e3a\u4e00\u4e2a string \uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u6765\u52a8\u6001\u521b\u5efa\u4f4d\u7f6e\u503c\u7684\u5b57\u7b26\u4e32\uff0c\u7528\u4e8euniform\u4f4d\u7f6e\u503c\u7684\u7d22\u5f15\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4f1a\u5bf9 offsets uniform\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u9879\u8bbe\u7f6e\u5bf9\u5e94\u7684\u4f4d\u79fb\u5411\u91cf\u3002 \u73b0\u5728\u6240\u6709\u7684\u51c6\u5907\u5de5\u4f5c\u90fd\u505a\u5b8c\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u6e32\u67d3\u56db\u8fb9\u5f62\u4e86\u3002\u5bf9\u4e8e\u5b9e\u4f8b\u5316\u6e32\u67d3\uff0c\u6211\u4eec\u4f7f\u7528 glDrawArraysInstanced \u6216 glDrawElementsInstanced \u3002\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u7684\u4e0d\u662f\u7d22\u5f15\u7f13\u51b2\uff0c\u6211\u4eec\u4f1a\u8c03\u7528 glDrawArrays \u7248\u672c\u7684\u51fd\u6570\uff1a glBindVertexArray(quadVAO); glDrawArraysInstanced(GL_TRIANGLES, 0, 6, 100); glDrawArraysInstanced \u7684\u53c2\u6570\u548c glDrawArrays \u5b8c\u5168\u4e00\u6837\uff0c\u9664\u4e86\u6700\u540e\u591a\u4e86\u4e2a\u53c2\u6570\u7528\u6765\u8bbe\u7f6e\u9700\u8981\u7ed8\u5236\u7684\u5b9e\u4f8b\u6570\u91cf\u3002\u56e0\u4e3a\u6211\u4eec\u60f3\u8981\u572810x10\u7f51\u683c\u4e2d\u663e\u793a100\u4e2a\u56db\u8fb9\u5f62\uff0c\u6211\u4eec\u5c06\u5b83\u8bbe\u7f6e\u4e3a100\u3002\u8fd0\u884c\u4ee3\u7801\u4e4b\u540e\uff0c\u4f60\u5e94\u8be5\u80fd\u5f97\u5230\u719f\u6089\u7684100\u4e2a\u4e94\u5f69\u7684\u56db\u8fb9\u5f62\u3002","title":"\u5b9e\u4f8b\u5316"},{"location":"04%20Advanced%20OpenGL/10%20Instancing/#_2","text":"\u867d\u7136\u4e4b\u524d\u7684\u5b9e\u73b0\u5728\u76ee\u524d\u7684\u60c5\u51b5\u4e0b\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u8981\u6e32\u67d3\u8fdc\u8d85\u8fc7100\u4e2a\u5b9e\u4f8b\u7684\u65f6\u5019\uff08\u8fd9\u5176\u5b9e\u975e\u5e38\u666e\u904d\uff09\uff0c\u6211\u4eec\u6700\u7ec8\u4f1a\u8d85\u8fc7\u6700\u5927\u80fd\u591f\u53d1\u9001\u81f3\u7740\u8272\u5668\u7684uniform\u6570\u636e\u5927\u5c0f \u4e0a\u9650 \u3002\u5b83\u7684\u4e00\u4e2a\u4ee3\u66ff\u65b9\u6848\u662f \u5b9e\u4f8b\u5316\u6570\u7ec4 (Instanced Array)\uff0c\u5b83\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\uff08\u80fd\u591f\u8ba9\u6211\u4eec\u50a8\u5b58\u66f4\u591a\u7684\u6570\u636e\uff09\uff0c\u4ec5\u5728\u9876\u70b9\u7740\u8272\u5668\u6e32\u67d3\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\u65f6\u624d\u4f1a\u66f4\u65b0\u3002 \u4f7f\u7528\u9876\u70b9\u5c5e\u6027\u65f6\uff0c\u9876\u70b9\u7740\u8272\u5668\u7684\u6bcf\u6b21\u8fd0\u884c\u90fd\u4f1a\u8ba9GLSL\u83b7\u53d6\u65b0\u4e00\u7ec4\u9002\u7528\u4e8e\u5f53\u524d\u9876\u70b9\u7684\u5c5e\u6027\u3002\u800c\u5f53\u6211\u4eec\u5c06\u9876\u70b9\u5c5e\u6027\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u5b9e\u4f8b\u5316\u6570\u7ec4\u65f6\uff0c\u9876\u70b9\u7740\u8272\u5668\u5c31\u53ea\u9700\u8981\u5bf9\u6bcf\u4e2a\u5b9e\u4f8b\uff0c\u800c\u4e0d\u662f\u6bcf\u4e2a\u9876\u70b9\uff0c\u66f4\u65b0\u9876\u70b9\u5c5e\u6027\u7684\u5185\u5bb9\u4e86\u3002\u8fd9\u5141\u8bb8\u6211\u4eec\u5bf9\u9010\u9876\u70b9\u7684\u6570\u636e\u4f7f\u7528\u666e\u901a\u7684\u9876\u70b9\u5c5e\u6027\uff0c\u800c\u5bf9\u9010\u5b9e\u4f8b\u7684\u6570\u636e\u4f7f\u7528\u5b9e\u4f8b\u5316\u6570\u7ec4\u3002 \u4e3a\u4e86\u7ed9\u4f60\u4e00\u4e2a\u5b9e\u4f8b\u5316\u6570\u7ec4\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e4b\u524d\u7684\u4f8b\u5b50\uff0c\u5e76\u5c06\u504f\u79fb\u91cfuniform\u6570\u7ec4\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u5b9e\u4f8b\u5316\u6570\u7ec4\u3002\u6211\u4eec\u9700\u8981\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u518d\u6dfb\u52a0\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\uff1a #version 330 core layout (location = 0) in vec2 aPos; layout (location = 1) in vec3 aColor; layout (location = 2) in vec2 aOffset; out vec3 fColor; void main() { gl_Position = vec4(aPos + aOffset, 0.0, 1.0); fColor = aColor; } \u6211\u4eec\u4e0d\u518d\u4f7f\u7528 gl_InstanceID \uff0c\u73b0\u5728\u4e0d\u9700\u8981\u7d22\u5f15\u4e00\u4e2auniform\u6570\u7ec4\u5c31\u80fd\u591f\u76f4\u63a5\u4f7f\u7528 offset \u5c5e\u6027\u4e86\u3002 \u56e0\u4e3a\u5b9e\u4f8b\u5316\u6570\u7ec4\u548c position \u4e0e color \u53d8\u91cf\u4e00\u6837\uff0c\u90fd\u662f\u9876\u70b9\u5c5e\u6027\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u5b83\u7684\u5185\u5bb9\u5b58\u5728\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u4e2d\uff0c\u5e76\u4e14\u914d\u7f6e\u5b83\u7684\u5c5e\u6027\u6307\u9488\u3002\u6211\u4eec\u9996\u5148\u5c06\uff08\u4e0a\u4e00\u90e8\u5206\u7684\uff09 translations \u6570\u7ec4\u5b58\u5230\u4e00\u4e2a\u65b0\u7684\u7f13\u51b2\u5bf9\u8c61\u4e2d\uff1a unsigned int instanceVBO; glGenBuffers(1, &instanceVBO); glBindBuffer(GL_ARRAY_BUFFER, instanceVBO); glBufferData(GL_ARRAY_BUFFER, sizeof(glm::vec2) * 100, &translations[0], GL_STATIC_DRAW); glBindBuffer(GL_ARRAY_BUFFER, 0); \u4e4b\u540e\u6211\u4eec\u8fd8\u9700\u8981\u8bbe\u7f6e\u5b83\u7684\u9876\u70b9\u5c5e\u6027\u6307\u9488\uff0c\u5e76\u542f\u7528\u9876\u70b9\u5c5e\u6027\uff1a glEnableVertexAttribArray(2); glBindBuffer(GL_ARRAY_BUFFER, instanceVBO); glVertexAttribPointer(2, 2, GL_FLOAT, GL_FALSE, 2 * sizeof(float), (void*)0); glBindBuffer(GL_ARRAY_BUFFER, 0); glVertexAttribDivisor(2, 1); \u8fd9\u6bb5\u4ee3\u7801\u5f88\u6709\u610f\u601d\u7684\u5730\u65b9\u5728\u4e8e\u6700\u540e\u4e00\u884c\uff0c\u6211\u4eec\u8c03\u7528\u4e86 glVertexAttribDivisor \u3002\u8fd9\u4e2a\u51fd\u6570\u544a\u8bc9\u4e86OpenGL\u8be5 \u4ec0\u4e48\u65f6\u5019 \u66f4\u65b0\u9876\u70b9\u5c5e\u6027\u7684\u5185\u5bb9\u81f3\u65b0\u4e00\u7ec4\u6570\u636e\u3002\u5b83\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u9700\u8981\u7684\u9876\u70b9\u5c5e\u6027\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f \u5c5e\u6027\u9664\u6570 (Attribute Divisor)\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5c5e\u6027\u9664\u6570\u662f0\uff0c\u544a\u8bc9OpenGL\u6211\u4eec\u9700\u8981\u5728\u9876\u70b9\u7740\u8272\u5668\u7684\u6bcf\u6b21\u8fed\u4ee3\u65f6\u66f4\u65b0\u9876\u70b9\u5c5e\u6027\u3002\u5c06\u5b83\u8bbe\u7f6e\u4e3a1\u65f6\uff0c\u6211\u4eec\u544a\u8bc9OpenGL\u6211\u4eec\u5e0c\u671b\u5728\u6e32\u67d3\u4e00\u4e2a\u65b0\u5b9e\u4f8b\u7684\u65f6\u5019\u66f4\u65b0\u9876\u70b9\u5c5e\u6027\u3002\u800c\u8bbe\u7f6e\u4e3a2\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u6bcf2\u4e2a\u5b9e\u4f8b\u66f4\u65b0\u4e00\u6b21\u5c5e\u6027\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u6211\u4eec\u5c06\u5c5e\u6027\u9664\u6570\u8bbe\u7f6e\u4e3a1\uff0c\u662f\u5728\u544a\u8bc9OpenGL\uff0c\u5904\u4e8e\u4f4d\u7f6e\u503c2\u7684\u9876\u70b9\u5c5e\u6027\u662f\u4e00\u4e2a\u5b9e\u4f8b\u5316\u6570\u7ec4\u3002 \u5982\u679c\u6211\u4eec\u73b0\u5728\u4f7f\u7528 glDrawArraysInstanced \uff0c\u518d\u6b21\u6e32\u67d3\u56db\u8fb9\u5f62\uff0c\u4f1a\u5f97\u5230\u4ee5\u4e0b\u8f93\u51fa\uff1a \u8fd9\u548c\u4e4b\u524d\u7684\u4f8b\u5b50\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u4f46\u8fd9\u6b21\u662f\u4f7f\u7528\u5b9e\u4f8b\u5316\u6570\u7ec4\u5b9e\u73b0\u7684\uff0c\u8fd9\u8ba9\u6211\u4eec\u80fd\u591f\u4f20\u9012\u66f4\u591a\u7684\u6570\u636e\u5230\u9876\u70b9\u7740\u8272\u5668\uff08\u53ea\u8981\u5185\u5b58\u5141\u8bb8\uff09\u6765\u7528\u4e8e\u5b9e\u4f8b\u5316\u7ed8\u5236\u3002 \u4e3a\u4e86\u66f4\u6709\u8da3\u4e00\u70b9\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 gl_InstanceID \uff0c\u4ece\u53f3\u4e0a\u5230\u5de6\u4e0b\u9010\u6e10\u7f29\u5c0f\u56db\u8fb9\u5f62\uff1a void main() { vec2 pos = aPos * (gl_InstanceID / 100.0); gl_Position = vec4(pos + aOffset, 0.0, 1.0); fColor = aColor; } \u7ed3\u679c\u5c31\u662f\uff0c\u7b2c\u4e00\u4e2a\u56db\u8fb9\u5f62\u7684\u5b9e\u4f8b\u4f1a\u975e\u5e38\u5c0f\uff0c\u968f\u7740\u7ed8\u5236\u5b9e\u4f8b\u7684\u589e\u52a0\uff0c gl_InstanceID \u4f1a\u8d8a\u6765\u8d8a\u63a5\u8fd1100\uff0c\u56db\u8fb9\u5f62\u4e5f\u5c31\u8d8a\u6765\u8d8a\u63a5\u8fd1\u539f\u59cb\u5927\u5c0f\u3002\u50cf\u8fd9\u6837\u5c06\u5b9e\u4f8b\u5316\u6570\u7ec4\u4e0e gl_InstanceID \u7ed3\u5408\u4f7f\u7528\u662f\u5b8c\u5168\u53ef\u884c\u7684\u3002 \u5982\u679c\u4f60\u8fd8\u662f\u4e0d\u786e\u5b9a\u5b9e\u4f8b\u5316\u6e32\u67d3\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u6216\u8005\u60f3\u770b\u770b\u6240\u6709\u4ee3\u7801\u662f\u5982\u4f55\u7ec4\u5408\u8d77\u6765\u7684\uff0c\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801\u3002 \u867d\u7136\u5f88\u6709\u8da3\uff0c\u4f46\u662f\u8fd9\u4e9b\u4f8b\u5b50\u5e76\u4e0d\u662f\u5b9e\u4f8b\u5316\u7684\u597d\u4f8b\u5b50\u3002\u662f\u7684\uff0c\u5b83\u4eec\u7684\u786e\u8ba9\u4f60\u77e5\u9053\u5b9e\u4f8b\u5316\u662f\u600e\u4e48\u5de5\u4f5c\u7684\uff0c\u4f46\u662f\u6211\u4eec\u8fd8\u6ca1\u63a5\u89e6\u5230\u5b83\u6700\u6709\u7528\u7684\u4e00\u70b9\uff1a\u7ed8\u5236\u5de8\u5927\u6570\u91cf\u7684\u76f8\u4f3c\u7269\u4f53\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6211\u4eec\u5c06\u4f1a\u5728\u4e0b\u4e00\u90e8\u5206\u8fdb\u5165\u592a\u7a7a\u63a2\u9669\uff0c\u89c1\u8bc6\u5b9e\u4f8b\u5316\u6e32\u67d3\u771f\u6b63\u7684\u5a01\u529b\u3002","title":"\u5b9e\u4f8b\u5316\u6570\u7ec4"},{"location":"04%20Advanced%20OpenGL/10%20Instancing/#_3","text":"\u60f3\u8c61\u8fd9\u6837\u4e00\u4e2a\u573a\u666f\uff0c\u5728\u5b87\u5b99\u4e2d\u6709\u4e00\u4e2a\u5927\u7684\u884c\u661f\uff0c\u5b83\u4f4d\u4e8e\u5c0f\u884c\u661f\u5e26\u7684\u4e2d\u592e\u3002\u8fd9\u6837\u7684\u5c0f\u884c\u661f\u5e26\u53ef\u80fd\u5305\u542b\u6210\u5343\u4e0a\u4e07\u7684\u5ca9\u5757\uff0c\u5728\u5f88\u4e0d\u9519\u7684\u663e\u5361\u4e0a\u4e5f\u5f88\u96be\u5b8c\u6210\u8fd9\u6837\u7684\u6e32\u67d3\u3002\u5b9e\u4f8b\u5316\u6e32\u67d3\u6b63\u662f\u9002\u7528\u4e8e\u8fd9\u6837\u7684\u573a\u666f\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u5c0f\u884c\u661f\u90fd\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6a21\u578b\u6765\u8868\u793a\u3002\u6bcf\u4e2a\u5c0f\u884c\u661f\u53ef\u4ee5\u518d\u4f7f\u7528\u4e0d\u540c\u7684\u53d8\u6362\u77e9\u9635\u6765\u8fdb\u884c\u5c11\u8bb8\u7684\u53d8\u5316\u3002 \u4e3a\u4e86\u5c55\u793a\u5b9e\u4f8b\u5316\u6e32\u67d3\u7684\u4f5c\u7528\uff0c\u6211\u4eec\u9996\u5148\u4f1a \u4e0d\u4f7f\u7528 \u5b9e\u4f8b\u5316\u6e32\u67d3\uff0c\u6765\u6e32\u67d3\u5c0f\u884c\u661f\u7ed5\u7740\u884c\u661f\u98de\u884c\u7684\u573a\u666f\u3002\u8fd9\u4e2a\u573a\u666f\u5c06\u4f1a\u5305\u542b\u4e00\u4e2a\u5927\u7684\u884c\u661f\u6a21\u578b\uff0c\u5b83\u53ef\u4ee5\u5728 \u8fd9\u91cc \u4e0b\u8f7d\uff0c\u4ee5\u53ca\u5f88\u591a\u73af\u7ed5\u7740\u884c\u661f\u7684\u5c0f\u884c\u661f\u3002\u5c0f\u884c\u661f\u7684\u5ca9\u77f3\u6a21\u578b\u53ef\u4ee5\u5728 \u8fd9\u91cc \u4e0b\u8f7d\u3002 \u5728\u4ee3\u7801\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u5728 \u6a21\u578b\u52a0\u8f7d \u5c0f\u8282\u4e2d\u5b9a\u4e49\u7684\u6a21\u578b\u52a0\u8f7d\u5668\u6765\u52a0\u8f7d\u6a21\u578b\u3002 \u4e3a\u4e86\u5f97\u5230\u60f3\u8981\u7684\u6548\u679c\uff0c\u6211\u4eec\u5c06\u4f1a\u4e3a\u6bcf\u4e2a\u5c0f\u884c\u661f\u751f\u6210\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\uff0c\u7528\u4f5c\u5b83\u4eec\u7684\u6a21\u578b\u77e9\u9635\u3002\u53d8\u6362\u77e9\u9635\u9996\u5148\u5c06\u5c0f\u884c\u661f\u4f4d\u79fb\u5230\u5c0f\u884c\u661f\u5e26\u4e2d\u7684\u67d0\u5904\uff0c\u6211\u4eec\u8fd8\u4f1a\u52a0\u4e00\u4e2a\u5c0f\u7684\u968f\u673a\u504f\u79fb\u503c\u5230\u8fd9\u4e2a\u504f\u79fb\u91cf\u4e0a\uff0c\u8ba9\u8fd9\u4e2a\u5706\u73af\u770b\u8d77\u6765\u66f4\u81ea\u7136\u4e00\u70b9\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5e94\u7528\u4e00\u4e2a\u968f\u673a\u7684\u7f29\u653e\uff0c\u5e76\u4e14\u4ee5\u4e00\u4e2a\u65cb\u8f6c\u5411\u91cf\u4e3a\u8f74\u8fdb\u884c\u4e00\u4e2a\u968f\u673a\u7684\u65cb\u8f6c\u3002\u6700\u7ec8\u7684\u53d8\u6362\u77e9\u9635\u4e0d\u4ec5\u80fd\u5c06\u5c0f\u884c\u661f\u53d8\u6362\u5230\u884c\u661f\u7684\u5468\u56f4\uff0c\u800c\u4e14\u4f1a\u8ba9\u5b83\u770b\u8d77\u6765\u66f4\u81ea\u7136\uff0c\u4e0e\u5176\u5b83\u5c0f\u884c\u661f\u4e0d\u540c\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u5e03\u6ee1\u5c0f\u884c\u661f\u7684\u5706\u73af\uff0c\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5c0f\u884c\u661f\u90fd\u4e0e\u4f17\u4e0d\u540c\u3002 unsigned int amount = 1000; glm::mat4 *modelMatrices; modelMatrices = new glm::mat4[amount]; srand(glfwGetTime()); // \u521d\u59cb\u5316\u968f\u673a\u79cd\u5b50 float radius = 50.0; float offset = 2.5f; for(unsigned int i = 0; i < amount; i++) { glm::mat4 model; // 1. \u4f4d\u79fb\uff1a\u5206\u5e03\u5728\u534a\u5f84\u4e3a 'radius' \u7684\u5706\u5f62\u4e0a\uff0c\u504f\u79fb\u7684\u8303\u56f4\u662f [-offset, offset] float angle = (float)i / (float)amount * 360.0f; float displacement = (rand() % (int)(2 * offset * 100)) / 100.0f - offset; float x = sin(angle) * radius + displacement; displacement = (rand() % (int)(2 * offset * 100)) / 100.0f - offset; float y = displacement * 0.4f; // \u8ba9\u884c\u661f\u5e26\u7684\u9ad8\u5ea6\u6bd4x\u548cz\u7684\u5bbd\u5ea6\u8981\u5c0f displacement = (rand() % (int)(2 * offset * 100)) / 100.0f - offset; float z = cos(angle) * radius + displacement; model = glm::translate(model, glm::vec3(x, y, z)); // 2. \u7f29\u653e\uff1a\u5728 0.05 \u548c 0.25f \u4e4b\u95f4\u7f29\u653e float scale = (rand() % 20) / 100.0f + 0.05; model = glm::scale(model, glm::vec3(scale)); // 3. \u65cb\u8f6c\uff1a\u7ed5\u7740\u4e00\u4e2a\uff08\u534a\uff09\u968f\u673a\u9009\u62e9\u7684\u65cb\u8f6c\u8f74\u5411\u91cf\u8fdb\u884c\u968f\u673a\u7684\u65cb\u8f6c float rotAngle = (rand() % 360); model = glm::rotate(model, rotAngle, glm::vec3(0.4f, 0.6f, 0.8f)); // 4. \u6dfb\u52a0\u5230\u77e9\u9635\u7684\u6570\u7ec4\u4e2d modelMatrices[i] = model; } \u8fd9\u6bb5\u4ee3\u7801\u770b\u8d77\u6765\u53ef\u80fd\u6709\u70b9\u5413\u4eba\uff0c\u4f46\u6211\u4eec\u53ea\u662f\u5c06\u5c0f\u884c\u661f\u7684 x \u548c z \u4f4d\u7f6e\u53d8\u6362\u5230\u4e86\u4e00\u4e2a\u534a\u5f84\u4e3a radius \u7684\u5706\u5f62\u4e0a\uff0c\u5e76\u4e14\u5728\u534a\u5f84\u7684\u57fa\u7840\u4e0a\u504f\u79fb\u4e86 -offset \u5230 offset \u3002\u6211\u4eec\u8ba9 y \u504f\u79fb\u7684\u5f71\u54cd\u66f4\u5c0f\u4e00\u70b9\uff0c\u8ba9\u5c0f\u884c\u661f\u5e26\u66f4\u6241\u5e73\u4e00\u70b9\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5e94\u7528\u4e86\u7f29\u653e\u548c\u65cb\u8f6c\u53d8\u6362\uff0c\u5e76\u5c06\u6700\u7ec8\u7684\u53d8\u6362\u77e9\u9635\u50a8\u5b58\u5728 modelMatrices \u4e2d\uff0c\u8fd9\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\u662f amount \u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u4e00\u5171\u751f\u62101000\u4e2a\u6a21\u578b\u77e9\u9635\uff0c\u6bcf\u4e2a\u5c0f\u884c\u661f\u4e00\u4e2a\u3002 \u5728\u52a0\u8f7d\u5b8c\u884c\u661f\u548c\u5ca9\u77f3\u6a21\u578b\uff0c\u5e76\u7f16\u8bd1\u5b8c\u7740\u8272\u5668\u4e4b\u540e\uff0c\u6e32\u67d3\u7684\u4ee3\u7801\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a // \u7ed8\u5236\u884c\u661f shader.use(); glm::mat4 model; model = glm::translate(model, glm::vec3(0.0f, -3.0f, 0.0f)); model = glm::scale(model, glm::vec3(4.0f, 4.0f, 4.0f)); shader.setMat4(\"model\", model); planet.Draw(shader); // \u7ed8\u5236\u5c0f\u884c\u661f for(unsigned int i = 0; i < amount; i++) { shader.setMat4(\"model\", modelMatrices[i]); rock.Draw(shader); } \u6211\u4eec\u9996\u5148\u7ed8\u5236\u4e86\u884c\u661f\u7684\u6a21\u578b\uff0c\u5e76\u5bf9\u5b83\u8fdb\u884c\u4f4d\u79fb\u548c\u7f29\u653e\uff0c\u4ee5\u9002\u5e94\u573a\u666f\uff0c\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u7ed8\u5236 amount \u6570\u91cf\u7684\u5ca9\u77f3\u6a21\u578b\u3002\u5728\u7ed8\u5236\u6bcf\u4e2a\u5ca9\u77f3\u4e4b\u524d\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u5728\u7740\u8272\u5668\u5185\u8bbe\u7f6e\u5bf9\u5e94\u7684\u6a21\u578b\u53d8\u6362\u77e9\u9635\u3002 \u6700\u7ec8\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u770b\u8d77\u6765\u50cf\u662f\u592a\u7a7a\u7684\u573a\u666f\uff0c\u73af\u7ed5\u7740\u884c\u661f\u7684\u662f\u770b\u8d77\u6765\u5f88\u81ea\u7136\u7684\u5c0f\u884c\u661f\u5e26\uff1a \u8fd9\u4e2a\u573a\u666f\u6bcf\u5e27\u5305\u542b1001\u6b21\u6e32\u67d3\u8c03\u7528\uff0c\u5176\u4e2d1000\u4e2a\u662f\u5ca9\u77f3\u6a21\u578b\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u6e90\u4ee3\u7801\u3002 \u5f53\u6211\u4eec\u5f00\u59cb\u589e\u52a0\u8fd9\u4e2a\u6570\u5b57\u7684\u65f6\u5019\uff0c\u4f60\u5f88\u5feb\u5c31\u4f1a\u53d1\u73b0\u573a\u666f\u4e0d\u518d\u80fd\u591f\u6d41\u7545\u8fd0\u884c\u4e86\uff0c\u5e27\u6570\u4e5f\u4e0b\u964d\u5f88\u5389\u5bb3\u3002\u5f53\u6211\u4eec\u5c06 amount \u8bbe\u7f6e\u4e3a2000\u7684\u65f6\u5019\uff0c\u573a\u666f\u5c31\u5df2\u7ecf\u6162\u5230\u79fb\u52a8\u90fd\u5f88\u56f0\u96be\u7684\u7a0b\u5ea6\u4e86\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u6765\u5c1d\u8bd5\u4f7f\u7528\u5b9e\u4f8b\u5316\u6e32\u67d3\u6765\u6e32\u67d3\u76f8\u540c\u7684\u573a\u666f\u3002\u6211\u4eec\u9996\u5148\u5bf9\u9876\u70b9\u7740\u8272\u5668\u8fdb\u884c\u4e00\u70b9\u4fee\u6539\uff1a #version 330 core layout (location = 0) in vec3 aPos; layout (location = 2) in vec2 aTexCoords; layout (location = 3) in mat4 instanceMatrix; out vec2 TexCoords; uniform mat4 projection; uniform mat4 view; void main() { gl_Position = projection * view * instanceMatrix * vec4(aPos, 1.0); TexCoords = aTexCoords; } \u6211\u4eec\u4e0d\u518d\u4f7f\u7528\u6a21\u578buniform\u53d8\u91cf\uff0c\u6539\u4e3a\u4e00\u4e2a mat4 \u7684\u9876\u70b9\u5c5e\u6027\uff0c\u8ba9\u6211\u4eec\u80fd\u591f\u5b58\u50a8\u4e00\u4e2a\u5b9e\u4f8b\u5316\u6570\u7ec4\u7684\u53d8\u6362\u77e9\u9635\u3002\u7136\u800c\uff0c\u5f53\u6211\u4eec\u9876\u70b9\u5c5e\u6027\u7684\u7c7b\u578b\u5927\u4e8e vec4 \u65f6\uff0c\u5c31\u8981\u591a\u8fdb\u884c\u4e00\u6b65\u5904\u7406\u4e86\u3002\u9876\u70b9\u5c5e\u6027\u6700\u5927\u5141\u8bb8\u7684\u6570\u636e\u5927\u5c0f\u7b49\u4e8e\u4e00\u4e2a vec4 \u3002\u56e0\u4e3a\u4e00\u4e2a mat4 \u672c\u8d28\u4e0a\u662f4\u4e2a vec4 \uff0c\u6211\u4eec\u9700\u8981\u4e3a\u8fd9\u4e2a\u77e9\u9635\u9884\u75594\u4e2a\u9876\u70b9\u5c5e\u6027\u3002\u56e0\u4e3a\u6211\u4eec\u5c06\u5b83\u7684\u4f4d\u7f6e\u503c\u8bbe\u7f6e\u4e3a3\uff0c\u77e9\u9635\u6bcf\u4e00\u5217\u7684\u9876\u70b9\u5c5e\u6027\u4f4d\u7f6e\u503c\u5c31\u662f3\u30014\u30015\u548c6\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u8fd94\u4e2a\u9876\u70b9\u5c5e\u6027\u8bbe\u7f6e\u5c5e\u6027\u6307\u9488\uff0c\u5e76\u5c06\u5b83\u4eec\u8bbe\u7f6e\u4e3a\u5b9e\u4f8b\u5316\u6570\u7ec4\uff1a // \u9876\u70b9\u7f13\u51b2\u5bf9\u8c61 unsigned int buffer; glGenBuffers(1, &buffer); glBindBuffer(GL_ARRAY_BUFFER, buffer); glBufferData(GL_ARRAY_BUFFER, amount * sizeof(glm::mat4), &modelMatrices[0], GL_STATIC_DRAW); for(unsigned int i = 0; i < rock.meshes.size(); i++) { unsigned int VAO = rock.meshes[i].VAO; glBindVertexArray(VAO); // \u9876\u70b9\u5c5e\u6027 GLsizei vec4Size = sizeof(glm::vec4); glEnableVertexAttribArray(3); glVertexAttribPointer(3, 4, GL_FLOAT, GL_FALSE, 4 * vec4Size, (void*)0); glEnableVertexAttribArray(4); glVertexAttribPointer(4, 4, GL_FLOAT, GL_FALSE, 4 * vec4Size, (void*)(1 * vec4Size)); glEnableVertexAttribArray(5); glVertexAttribPointer(5, 4, GL_FLOAT, GL_FALSE, 4 * vec4Size, (void*)(2 * vec4Size)); glEnableVertexAttribArray(6); glVertexAttribPointer(6, 4, GL_FLOAT, GL_FALSE, 4 * vec4Size, (void*)(3 * vec4Size)); glVertexAttribDivisor(3, 1); glVertexAttribDivisor(4, 1); glVertexAttribDivisor(5, 1); glVertexAttribDivisor(6, 1); glBindVertexArray(0); } \u6ce8\u610f\u8fd9\u91cc\u6211\u4eec\u5c06 Mesh \u7684 VAO \u4ece\u79c1\u6709\u53d8\u91cf\u6539\u4e3a\u4e86\u516c\u6709\u53d8\u91cf\uff0c\u8ba9\u6211\u4eec\u80fd\u591f\u8bbf\u95ee\u5b83\u7684\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\u3002\u8fd9\u5e76\u4e0d\u662f\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u53ea\u662f\u4e3a\u4e86\u914d\u5408\u672c\u5c0f\u8282\u7684\u4e00\u4e2a\u7b80\u5355\u7684\u6539\u52a8\u3002\u9664\u6b64\u4e4b\u5916\u4ee3\u7801\u5c31\u5e94\u8be5\u5f88\u6e05\u695a\u4e86\u3002\u6211\u4eec\u544a\u8bc9\u4e86OpenGL\u5e94\u8be5\u5982\u4f55\u89e3\u91ca\u6bcf\u4e2a\u7f13\u51b2\u9876\u70b9\u5c5e\u6027\u7684\u7f13\u51b2\uff0c\u5e76\u4e14\u544a\u8bc9\u5b83\u8fd9\u4e9b\u9876\u70b9\u5c5e\u6027\u662f\u5b9e\u4f8b\u5316\u6570\u7ec4\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u518d\u6b21\u4f7f\u7528\u7f51\u683c\u7684 VAO \uff0c\u8fd9\u4e00\u6b21\u4f7f\u7528 glDrawElementsInstanced \u8fdb\u884c\u7ed8\u5236\uff1a // \u7ed8\u5236\u5c0f\u884c\u661f instanceShader.use(); for(unsigned int i = 0; i < rock.meshes.size(); i++) { glBindVertexArray(rock.meshes[i].VAO); glDrawElementsInstanced( GL_TRIANGLES, rock.meshes[i].indices.size(), GL_UNSIGNED_INT, 0, amount ); } \u8fd9\u91cc\uff0c\u6211\u4eec\u7ed8\u5236\u4e0e\u4e4b\u524d\u76f8\u540c\u6570\u91cf amount \u7684\u5c0f\u884c\u661f\uff0c\u4f46\u662f\u4f7f\u7528\u7684\u662f\u5b9e\u4f8b\u6e32\u67d3\u3002\u7ed3\u679c\u5e94\u8be5\u662f\u975e\u5e38\u76f8\u4f3c\u7684\uff0c\u4f46\u5982\u679c\u4f60\u5f00\u59cb\u589e\u52a0 amount \u53d8\u91cf\uff0c\u4f60\u5c31\u80fd\u770b\u89c1\u5b9e\u4f8b\u5316\u6e32\u67d3\u7684\u6548\u679c\u4e86\u3002\u6ca1\u6709\u5b9e\u4f8b\u5316\u6e32\u67d3\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u80fd\u6d41\u7545\u6e32\u67d31000\u52301500\u4e2a\u5c0f\u884c\u661f\u3002\u800c\u4f7f\u7528\u4e86\u5b9e\u4f8b\u5316\u6e32\u67d3\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u503c\u8bbe\u7f6e\u4e3a100000\uff0c\u6bcf\u4e2a\u5ca9\u77f3\u6a21\u578b\u6709576\u4e2a\u9876\u70b9\uff0c\u6bcf\u5e27\u52a0\u8d77\u6765\u5927\u6982\u8981\u7ed8\u52365700\u4e07\u4e2a\u9876\u70b9\uff0c\u4f46\u6027\u80fd\u5374\u6ca1\u6709\u53d7\u5230\u4efb\u4f55\u5f71\u54cd\uff01 \u4e0a\u9762\u8fd9\u5e45\u56fe\u6e32\u67d3\u4e8610\u4e07\u4e2a\u5c0f\u884c\u661f\uff0c\u534a\u5f84\u4e3a 150.0f \uff0c\u504f\u79fb\u91cf\u7b49\u4e8e 25.0f \u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5b9e\u4f8b\u5316\u6e32\u67d3\u7684\u4ee3\u7801\u3002 Important \u5728\u67d0\u4e9b\u673a\u5668\u4e0a\uff0c10\u4e07\u4e2a\u5c0f\u884c\u661f\u53ef\u80fd\u4f1a\u592a\u591a\u4e86\uff0c\u6240\u4ee5\u5c1d\u8bd5\u4fee\u6539\u8fd9\u4e2a\u503c\uff0c\u76f4\u5230\u8fbe\u5230\u4e00\u4e2a\u4f60\u80fd\u63a5\u53d7\u7684\u5e27\u7387\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u5728\u5408\u9002\u7684\u73af\u5883\u4e0b\uff0c\u5b9e\u4f8b\u5316\u6e32\u67d3\u80fd\u591f\u5927\u5927\u589e\u52a0\u663e\u5361\u7684\u6e32\u67d3\u80fd\u529b\u3002\u6b63\u662f\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u5b9e\u4f8b\u5316\u6e32\u67d3\u901a\u5e38\u4f1a\u7528\u4e8e\u6e32\u67d3\u8349\u3001\u690d\u88ab\u3001\u7c92\u5b50\uff0c\u4ee5\u53ca\u4e0a\u9762\u8fd9\u6837\u7684\u573a\u666f\uff0c\u57fa\u672c\u4e0a\u53ea\u8981\u573a\u666f\u4e2d\u6709\u5f88\u591a\u91cd\u590d\u7684\u5f62\u72b6\uff0c\u90fd\u80fd\u591f\u4f7f\u7528\u5b9e\u4f8b\u5316\u6e32\u67d3\u6765\u63d0\u9ad8\u6027\u80fd\u3002","title":"\u5c0f\u884c\u661f\u5e26"},{"location":"04%20Advanced%20OpenGL/11%20Anti%20Aliasing/","text":"\u6297\u952f\u9f7f \u539f\u6587 Anti Aliasing \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet, Django \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u5728\u5b66\u4e60\u6e32\u67d3\u7684\u65c5\u9014\u4e2d\uff0c\u4f60\u53ef\u80fd\u4f1a\u65f6\u4e0d\u65f6\u9047\u5230\u6a21\u578b\u8fb9\u7f18\u6709\u952f\u9f7f\u7684\u60c5\u51b5\u3002\u8fd9\u4e9b \u952f\u9f7f\u8fb9\u7f18 (Jagged Edges)\u7684\u4ea7\u751f\u548c\u5149\u6805\u5668\u5c06\u9876\u70b9\u6570\u636e\u8f6c\u5316\u4e3a\u7247\u6bb5\u7684\u65b9\u5f0f\u6709\u5173\u3002\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u53ea\u662f\u7ed8\u5236\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u7acb\u65b9\u4f53\uff0c\u4f60\u5c31\u80fd\u6ce8\u610f\u5230\u5b83\u5b58\u5728\u952f\u9f7f\u8fb9\u7f18\u4e86\uff1a \u53ef\u80fd\u4e0d\u662f\u975e\u5e38\u660e\u663e\uff0c\u4f46\u5982\u679c\u4f60\u79bb\u8fd1\u4ed4\u7ec6\u89c2\u5bdf\u7acb\u65b9\u4f53\u7684\u8fb9\u7f18\uff0c\u4f60\u5c31\u5e94\u8be5\u80fd\u591f\u770b\u5230\u952f\u9f7f\u72b6\u7684\u56fe\u6848\u3002\u5982\u679c\u653e\u5927\u7684\u8bdd\uff0c\u4f60\u4f1a\u770b\u5230\u4e0b\u9762\u7684\u56fe\u6848\uff1a \u8fd9\u5f88\u660e\u663e\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u5728\u6700\u7ec8\u7a0b\u5e8f\u4e2d\u6240\u5b9e\u73b0\u7684\u6548\u679c\u3002\u4f60\u80fd\u591f\u6e05\u695a\u770b\u89c1\u5f62\u6210\u8fb9\u7f18\u7684\u50cf\u7d20\u3002\u8fd9\u79cd\u73b0\u8c61\u88ab\u79f0\u4e4b\u4e3a \u8d70\u6837 (Aliasing)\u3002\u6709\u5f88\u591a\u79cd\u6297\u952f\u9f7f\uff08Anti-aliasing\uff0c\u4e5f\u88ab\u79f0\u4e3a\u53cd\u8d70\u6837\uff09\u7684\u6280\u672f\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u7f13\u89e3\u8fd9\u79cd\u73b0\u8c61\uff0c\u4ece\u800c\u4ea7\u751f\u66f4 \u5e73\u6ed1 \u7684\u8fb9\u7f18\u3002 \u6700\u5f00\u59cb\u6211\u4eec\u6709\u4e00\u79cd\u53eb\u505a \u8d85\u91c7\u6837\u6297\u952f\u9f7f (Super Sample Anti-aliasing, SSAA)\u7684\u6280\u672f\uff0c\u5b83\u4f1a\u4f7f\u7528\u6bd4\u6b63\u5e38\u5206\u8fa8\u7387\u66f4\u9ad8\u7684\u5206\u8fa8\u7387\uff08\u5373\u8d85\u91c7\u6837\uff09\u6765\u6e32\u67d3\u573a\u666f\uff0c\u5f53\u56fe\u50cf\u8f93\u51fa\u5728\u5e27\u7f13\u51b2\u4e2d\u66f4\u65b0\u65f6\uff0c\u5206\u8fa8\u7387\u4f1a\u88ab\u4e0b\u91c7\u6837(Downsample)\u81f3\u6b63\u5e38\u7684\u5206\u8fa8\u7387\u3002\u8fd9\u4e9b \u989d\u5916\u7684 \u5206\u8fa8\u7387\u4f1a\u88ab\u7528\u6765\u9632\u6b62\u952f\u9f7f\u8fb9\u7f18\u7684\u4ea7\u751f\u3002\u867d\u7136\u5b83\u786e\u5b9e\u80fd\u591f\u89e3\u51b3\u8d70\u6837\u7684\u95ee\u9898\uff0c\u4f46\u662f\u7531\u4e8e\u8fd9\u6837\u6bd4\u5e73\u65f6\u8981\u7ed8\u5236\u66f4\u591a\u7684\u7247\u6bb5\uff0c\u5b83\u4e5f\u4f1a\u5e26\u6765\u5f88\u5927\u7684\u6027\u80fd\u5f00\u9500\u3002\u6240\u4ee5\u8fd9\u9879\u6280\u672f\u53ea\u62e5\u6709\u4e86\u77ed\u6682\u7684\u8f89\u714c\u3002 \u7136\u800c\uff0c\u5728\u8fd9\u9879\u6280\u672f\u7684\u57fa\u7840\u4e0a\u4e5f\u8bde\u751f\u4e86\u66f4\u4e3a\u73b0\u4ee3\u7684\u6280\u672f\uff0c\u53eb\u505a \u591a\u91cd\u91c7\u6837\u6297\u952f\u9f7f (Multisample Anti-aliasing, MSAA)\u3002\u5b83\u501f\u9274\u4e86SSAA\u80cc\u540e\u7684\u7406\u5ff5\uff0c\u4f46\u5374\u4ee5\u66f4\u52a0\u9ad8\u6548\u7684\u65b9\u5f0f\u5b9e\u73b0\u4e86\u6297\u952f\u9f7f\u3002\u6211\u4eec\u5728\u8fd9\u4e00\u8282\u4e2d\u4f1a\u6df1\u5ea6\u8ba8\u8bbaOpenGL\u4e2d\u5185\u5efa\u7684MSAA\u6280\u672f\u3002 \u591a\u91cd\u91c7\u6837 \u4e3a\u4e86\u7406\u89e3\u4ec0\u4e48\u662f\u591a\u91cd\u91c7\u6837(Multisampling)\uff0c\u4ee5\u53ca\u5b83\u662f\u5982\u4f55\u89e3\u51b3\u952f\u9f7f\u95ee\u9898\u7684\uff0c\u6211\u4eec\u6709\u5fc5\u8981\u66f4\u52a0\u6df1\u5165\u5730\u4e86\u89e3OpenGL\u5149\u6805\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002 \u5149\u6805\u5668\u662f\u4f4d\u4e8e\u6700\u7ec8\u5904\u7406\u8fc7\u7684\u9876\u70b9\u4e4b\u540e\u5230\u7247\u6bb5\u7740\u8272\u5668\u4e4b\u524d\u6240\u7ecf\u8fc7\u7684\u6240\u6709\u7684\u7b97\u6cd5\u4e0e\u8fc7\u7a0b\u7684\u603b\u548c\u3002\u5149\u6805\u5668\u4f1a\u5c06\u4e00\u4e2a\u56fe\u5143\u7684\u6240\u6709\u9876\u70b9\u4f5c\u4e3a\u8f93\u5165\uff0c\u5e76\u5c06\u5b83\u8f6c\u6362\u4e3a\u4e00\u7cfb\u5217\u7684\u7247\u6bb5\u3002\u9876\u70b9\u5750\u6807\u7406\u8bba\u4e0a\u53ef\u4ee5\u53d6\u4efb\u610f\u503c\uff0c\u4f46\u7247\u6bb5\u4e0d\u884c\uff0c\u56e0\u4e3a\u5b83\u4eec\u53d7\u9650\u4e8e\u4f60\u7a97\u53e3\u7684\u5206\u8fa8\u7387\u3002\u9876\u70b9\u5750\u6807\u4e0e\u7247\u6bb5\u4e4b\u95f4\u51e0\u4e4e\u6c38\u8fdc\u4e5f\u4e0d\u4f1a\u6709\u4e00\u5bf9\u4e00\u7684\u6620\u5c04\uff0c\u6240\u4ee5\u5149\u6805\u5668\u5fc5\u987b\u4ee5\u67d0\u79cd\u65b9\u5f0f\u6765\u51b3\u5b9a\u6bcf\u4e2a\u9876\u70b9\u6700\u7ec8\u6240\u5728\u7684\u7247\u6bb5/\u5c4f\u5e55\u5750\u6807\u3002 \u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u5c4f\u5e55\u50cf\u7d20\u7684\u7f51\u683c\uff0c\u6bcf\u4e2a\u50cf\u7d20\u7684\u4e2d\u5fc3\u5305\u542b\u6709\u4e00\u4e2a \u91c7\u6837\u70b9 (Sample Point)\uff0c\u5b83\u4f1a\u88ab\u7528\u6765\u51b3\u5b9a\u8fd9\u4e2a\u4e09\u89d2\u5f62\u662f\u5426\u906e\u76d6\u4e86\u67d0\u4e2a\u50cf\u7d20\u3002\u56fe\u4e2d\u7ea2\u8272\u7684\u91c7\u6837\u70b9\u88ab\u4e09\u89d2\u5f62\u6240\u906e\u76d6\uff0c\u5728\u6bcf\u4e00\u4e2a\u906e\u4f4f\u7684\u50cf\u7d20\u5904\u90fd\u4f1a\u751f\u6210\u4e00\u4e2a\u7247\u6bb5\u3002\u867d\u7136\u4e09\u89d2\u5f62\u8fb9\u7f18\u7684\u4e00\u4e9b\u90e8\u5206\u4e5f\u906e\u4f4f\u4e86\u67d0\u4e9b\u5c4f\u5e55\u50cf\u7d20\uff0c\u4f46\u662f\u8fd9\u4e9b\u50cf\u7d20\u7684\u91c7\u6837\u70b9\u5e76\u6ca1\u6709\u88ab\u4e09\u89d2\u5f62 \u5185\u90e8 \u6240\u906e\u76d6\uff0c\u6240\u4ee5\u5b83\u4eec\u4e0d\u4f1a\u53d7\u5230\u7247\u6bb5\u7740\u8272\u5668\u7684\u5f71\u54cd\u3002 \u4f60\u73b0\u5728\u53ef\u80fd\u5df2\u7ecf\u6e05\u695a\u8d70\u6837\u7684\u539f\u56e0\u4e86\u3002\u5b8c\u6574\u6e32\u67d3\u540e\u7684\u4e09\u89d2\u5f62\u5728\u5c4f\u5e55\u4e0a\u4f1a\u662f\u8fd9\u6837\u7684\uff1a \u7531\u4e8e\u5c4f\u5e55\u50cf\u7d20\u603b\u91cf\u7684\u9650\u5236\uff0c\u6709\u4e9b\u8fb9\u7f18\u7684\u50cf\u7d20\u80fd\u591f\u88ab\u6e32\u67d3\u51fa\u6765\uff0c\u800c\u6709\u4e9b\u5219\u4e0d\u4f1a\u3002\u7ed3\u679c\u5c31\u662f\u6211\u4eec\u4f7f\u7528\u4e86\u4e0d\u5149\u6ed1\u7684\u8fb9\u7f18\u6765\u6e32\u67d3\u56fe\u5143\uff0c\u5bfc\u81f4\u4e4b\u524d\u8ba8\u8bba\u5230\u7684\u952f\u9f7f\u8fb9\u7f18\u3002 \u591a\u91cd\u91c7\u6837\u6240\u505a\u7684\u6b63\u662f\u5c06\u5355\u4e00\u7684\u91c7\u6837\u70b9\u53d8\u4e3a\u591a\u4e2a\u91c7\u6837\u70b9\uff08\u8fd9\u4e5f\u662f\u5b83\u540d\u79f0\u7684\u7531\u6765\uff09\u3002\u6211\u4eec\u4e0d\u518d\u4f7f\u7528\u50cf\u7d20\u4e2d\u5fc3\u7684\u5355\u4e00\u91c7\u6837\u70b9\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u4ee5\u7279\u5b9a\u56fe\u6848\u6392\u5217\u76844\u4e2a\u5b50\u91c7\u6837\u70b9(Subsample)\u3002\u6211\u4eec\u5c06\u7528\u8fd9\u4e9b\u5b50\u91c7\u6837\u70b9\u6765\u51b3\u5b9a\u50cf\u7d20\u7684\u906e\u76d6\u5ea6\u3002 \u4e0a\u56fe\u7684\u5de6\u4fa7\u5c55\u793a\u4e86\u6b63\u5e38\u60c5\u51b5\u4e0b\u5224\u5b9a\u4e09\u89d2\u5f62\u662f\u5426\u906e\u76d6\u7684\u65b9\u5f0f\u3002\u5728\u4f8b\u5b50\u4e2d\u7684\u8fd9\u4e2a\u50cf\u7d20\u4e0a\u4e0d\u4f1a\u8fd0\u884c\u7247\u6bb5\u7740\u8272\u5668\uff08\u6240\u4ee5\u5b83\u4f1a\u4fdd\u6301\u7a7a\u767d\uff09\u3002\u56e0\u4e3a\u5b83\u7684\u91c7\u6837\u70b9\u5e76\u672a\u88ab\u4e09\u89d2\u5f62\u6240\u8986\u76d6\u3002\u4e0a\u56fe\u7684\u53f3\u4fa7\u5c55\u793a\u7684\u662f\u5b9e\u65bd\u591a\u91cd\u91c7\u6837\u4e4b\u540e\u7684\u7248\u672c\uff0c\u6bcf\u4e2a\u50cf\u7d20\u5305\u542b\u67094\u4e2a\u91c7\u6837\u70b9\u3002\u8fd9\u91cc\uff0c\u53ea\u6709\u4e24\u4e2a\u91c7\u6837\u70b9\u906e\u76d6\u4f4f\u4e86\u4e09\u89d2\u5f62\u3002 Important \u91c7\u6837\u70b9\u7684\u6570\u91cf\u53ef\u4ee5\u662f\u4efb\u610f\u7684\uff0c\u66f4\u591a\u7684\u91c7\u6837\u70b9\u80fd\u5e26\u6765\u66f4\u7cbe\u786e\u7684\u906e\u76d6\u7387\u3002 \u4ece\u8fd9\u91cc\u5f00\u59cb\u591a\u91cd\u91c7\u6837\u5c31\u53d8\u5f97\u6709\u8da3\u8d77\u6765\u4e86\u3002\u6211\u4eec\u77e5\u9053\u4e09\u89d2\u5f62\u53ea\u906e\u76d6\u4e862\u4e2a\u5b50\u91c7\u6837\u70b9\uff0c\u6240\u4ee5\u4e0b\u4e00\u6b65\u662f\u51b3\u5b9a\u8fd9\u4e2a\u50cf\u7d20\u7684\u989c\u8272\u3002\u4f60\u7684\u731c\u60f3\u53ef\u80fd\u662f\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e2a\u88ab\u906e\u76d6\u4f4f\u7684\u5b50\u91c7\u6837\u70b9\u8fd0\u884c\u4e00\u6b21\u7247\u6bb5\u7740\u8272\u5668\uff0c\u6700\u540e\u5c06\u6bcf\u4e2a\u50cf\u7d20\u6240\u6709\u5b50\u91c7\u6837\u70b9\u7684\u989c\u8272\u5e73\u5747\u4e00\u4e0b\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5728\u4e24\u4e2a\u5b50\u91c7\u6837\u70b9\u4e0a\u5bf9\u88ab\u63d2\u503c\u7684\u9876\u70b9\u6570\u636e\u8fd0\u884c\u4e24\u6b21\u7247\u6bb5\u7740\u8272\u5668\uff0c\u5e76\u5c06\u7ed3\u679c\u7684\u989c\u8272\u50a8\u5b58\u5728\u8fd9\u4e9b\u91c7\u6837\u70b9\u4e2d\u3002\uff08\u5e78\u8fd0\u7684\u662f\uff09\u8fd9\u5e76 \u4e0d\u662f \u5b83\u5de5\u4f5c\u7684\u65b9\u5f0f\uff0c\u56e0\u4e3a\u8fd9\u672c\u8d28\u4e0a\u8bf4\u8fd8\u662f\u9700\u8981\u8fd0\u884c\u66f4\u591a\u6b21\u7684\u7247\u6bb5\u7740\u8272\u5668\uff0c\u4f1a\u663e\u8457\u5730\u964d\u4f4e\u6027\u80fd\u3002 MSAA\u771f\u6b63\u7684\u5de5\u4f5c\u65b9\u5f0f\u662f\uff0c\u65e0\u8bba\u4e09\u89d2\u5f62\u906e\u76d6\u4e86\u591a\u5c11\u4e2a\u5b50\u91c7\u6837\u70b9\uff0c\uff08\u6bcf\u4e2a\u56fe\u5143\u4e2d\uff09\u6bcf\u4e2a\u50cf\u7d20\u53ea\u8fd0\u884c \u4e00\u6b21 \u7247\u6bb5\u7740\u8272\u5668\u3002\u7247\u6bb5\u7740\u8272\u5668\u4f7f\u7528\u63d2\u503c\u5230\u50cf\u7d20 \u4e2d\u5fc3 \u7684\u9876\u70b9\u6570\u636e\uff0c\u7136\u540e\uff0cMSAA\u4f7f\u7528\u66f4\u5927\u7684\u6df1\u5ea6/\u6a21\u677f\u7f13\u51b2\u533a\u6765\u786e\u5b9a\u5b50\u91c7\u6837\u70b9\u7684\u8986\u76d6\u7387\u3002\u88ab\u8986\u76d6\u7684\u5b50\u91c7\u6837\u70b9\u6570\u91cf\u5c06\u51b3\u5b9a\u4e86\u50cf\u7d20\u989c\u8272\u5bf9\u5e27\u7f13\u51b2\u7684\u5f71\u54cd\u7a0b\u5ea6\u3002\u56e0\u4e3a\u4e0a\u56fe\u76844\u4e2a\u91c7\u6837\u70b9\u4e2d\u53ea\u67092\u4e2a\u88ab\u906e\u76d6\u4f4f\u4e86\uff0c\u6240\u4ee5\u4e09\u89d2\u5f62\u7684\u989c\u8272\u4f1a\u6709\u4e00\u534a\u4e0e\u5e27\u7f13\u51b2\u533a\u7684\u989c\u8272\uff08\u5728\u8fd9\u91cc\u662f\u65e0\u8272\uff09\u8fdb\u884c\u6df7\u5408\uff0c\u6700\u7ec8\u5f62\u6210\u4e00\u79cd\u6de1\u84dd\u8272\u3002 \u8fd9\u6837\u5b50\u505a\u4e4b\u540e\uff0c\u989c\u8272\u7f13\u51b2\u4e2d\u6240\u6709\u7684\u56fe\u5143\u8fb9\u7f18\u5c06\u4f1a\u4ea7\u751f\u4e00\u79cd\u66f4\u5e73\u6ed1\u7684\u56fe\u5f62\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b\u524d\u9762\u4e09\u89d2\u5f62\u7684\u591a\u91cd\u91c7\u6837\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\uff1a \u8fd9\u91cc\uff0c\u6bcf\u4e2a\u50cf\u7d20\u5305\u542b4\u4e2a\u5b50\u91c7\u6837\u70b9\uff08\u4e0d\u76f8\u5173\u7684\u91c7\u6837\u70b9\u90fd\u6ca1\u6709\u6807\u6ce8\uff09\uff0c\u84dd\u8272\u7684\u91c7\u6837\u70b9\u88ab\u4e09\u89d2\u5f62\u6240\u906e\u76d6\uff0c\u800c\u7070\u8272\u7684\u5219\u6ca1\u6709\u3002\u5bf9\u4e8e\u4e09\u89d2\u5f62\u7684\u5185\u90e8\u7684\u50cf\u7d20\uff0c\u7247\u6bb5\u7740\u8272\u5668\u53ea\u4f1a\u8fd0\u884c\u4e00\u6b21\uff0c\u989c\u8272\u8f93\u51fa\u4f1a\u88ab\u5b58\u50a8\u5230\u5168\u90e8\u76844\u4e2a\u5b50\u6837\u672c\u4e2d\u3002\u800c\u5728\u4e09\u89d2\u5f62\u7684\u8fb9\u7f18\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u7684\u5b50\u91c7\u6837\u70b9\u90fd\u88ab\u906e\u76d6\uff0c\u6240\u4ee5\u7247\u6bb5\u7740\u8272\u5668\u7684\u7ed3\u679c\u5c06\u53ea\u4f1a\u50a8\u5b58\u5230\u90e8\u5206\u7684\u5b50\u6837\u672c\u4e2d\u3002\u6839\u636e\u88ab\u906e\u76d6\u7684\u5b50\u6837\u672c\u7684\u6570\u91cf\uff0c\u6700\u7ec8\u7684\u50cf\u7d20\u989c\u8272\u5c06\u7531\u4e09\u89d2\u5f62\u7684\u989c\u8272\u4e0e\u5176\u5b83\u5b50\u6837\u672c\u4e2d\u6240\u50a8\u5b58\u7684\u989c\u8272\u6765\u51b3\u5b9a\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u4e00\u4e2a\u50cf\u7d20\u4e2d\u5982\u679c\u6709\u66f4\u591a\u7684\u91c7\u6837\u70b9\u88ab\u4e09\u89d2\u5f62\u906e\u76d6\uff0c\u90a3\u4e48\u8fd9\u4e2a\u50cf\u7d20\u7684\u989c\u8272\u5c31\u4f1a\u66f4\u63a5\u8fd1\u4e8e\u4e09\u89d2\u5f62\u7684\u989c\u8272\u3002\u5982\u679c\u6211\u4eec\u7ed9\u4e0a\u9762\u7684\u4e09\u89d2\u5f62\u586b\u5145\u989c\u8272\uff0c\u5c31\u80fd\u5f97\u5230\u4ee5\u4e0b\u7684\u6548\u679c\uff1a \u4e09\u89d2\u5f62\u7684\u4e0d\u5e73\u6ed1\u8fb9\u7f18\u88ab\u7a0d\u6d45\u7684\u989c\u8272\u6240\u5305\u56f4\u540e\uff0c\u4ece\u8fdc\u5904\u89c2\u5bdf\u65f6\u5c31\u4f1a\u663e\u5f97\u66f4\u52a0\u5e73\u6ed1\u4e86\u3002 \u6df1\u5ea6\u503c\u548c\u6a21\u677f\u503c\u4f1a\u6309\u5404\u4e2a\u5b50\u91c7\u6837\u70b9\u5b58\u50a8\uff0c\u5e76\u4e14\u5f53\u591a\u4e2a\u4e09\u89d2\u5f62\u91cd\u53e0\u5355\u4e2a\u50cf\u7d20\u65f6\uff0c\u5373\u4f7f\u6211\u4eec\u53ea\u8fd0\u884c\u4e00\u6b21\u7247\u6bb5\u7740\u8272\u5668\uff0c\u989c\u8272\u503c\u4e5f\u4f9d\u7136\u4f1a\u6309\u5b50\u91c7\u6837\u70b9\u5b58\u50a8\u3002\u5bf9\u6df1\u5ea6\u6d4b\u8bd5\u6765\u8bf4\uff0c\u5728\u8fd0\u884c\u6df1\u5ea6\u6d4b\u8bd5\u4e4b\u524d\uff0c\u6bcf\u4e2a\u9876\u70b9\u7684\u6df1\u5ea6\u503c\u4f1a\u88ab\u63d2\u503c\u5230\u5404\u4e2a\u5b50\u6837\u672c\u4e2d\u3002\u800c\u5bf9\u6a21\u677f\u6d4b\u8bd5\u6765\u8bf4\uff0c\u6211\u4eec\u4f1a\u4e3a\u6bcf\u4e2a\u5b50\u6837\u672c\u5b58\u50a8\u6a21\u677f\u503c\uff0c\u8fd9\u610f\u5473\u7740\u7f13\u51b2\u533a\u7684\u5927\u5c0f\u4f1a\u6839\u636e\u6bcf\u4e2a\u50cf\u7d20\u7684\u5b50\u91c7\u6837\u70b9\u6570\u91cf\u800c\u76f8\u5e94\u589e\u52a0\u3002 \u6211\u4eec\u5230\u76ee\u524d\u4e3a\u6b62\u8ba8\u8bba\u7684\u90fd\u662f\u591a\u91cd\u91c7\u6837\u6297\u952f\u9f7f\u7684\u80cc\u540e\u539f\u7406\uff0c\u5149\u6805\u5668\u80cc\u540e\u7684\u5b9e\u9645\u903b\u8f91\u6bd4\u76ee\u524d\u8ba8\u8bba\u7684\u8981\u590d\u6742\uff0c\u4f46\u4f60\u73b0\u5728\u5e94\u8be5\u5df2\u7ecf\u53ef\u4ee5\u7406\u89e3\u591a\u91cd\u91c7\u6837\u6297\u952f\u9f7f\u7684\u5927\u4f53\u6982\u5ff5\u548c\u903b\u8f91\u4e86\u3002 (\u8bd1\u8005\u6ce8\uff1a \u5982\u679c\u770b\u5230\u8fd9\u91cc\u8fd8\u662f\u5bf9\u539f\u7406\u4f3c\u61c2\u975e\u61c2\uff0c\u53ef\u4ee5\u7b80\u5355\u770b\u770b\u77e5\u4e4e\u4e0a @\u6587\u5200\u79cb\u4e8c \u5bf9\u6297\u952f\u9f7f\u6280\u672f\u7684 \u7cbe\u5f69\u4ecb\u7ecd ) OpenGL\u4e2d\u7684MSAA \u5982\u679c\u6211\u4eec\u60f3\u8981\u5728OpenGL\u4e2d\u4f7f\u7528MSAA\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u4f7f\u7528\u4e00\u4e2a\u80fd\u5728\u6bcf\u4e2a\u50cf\u7d20\u4e2d\u5b58\u50a8\u5927\u4e8e1\u4e2a\u989c\u8272\u503c\u7684\u989c\u8272\u7f13\u51b2\uff08\u56e0\u4e3a\u591a\u91cd\u91c7\u6837\u9700\u8981\u6211\u4eec\u4e3a\u6bcf\u4e2a\u91c7\u6837\u70b9\u90fd\u50a8\u5b58\u4e00\u4e2a\u989c\u8272\uff09\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u7f13\u51b2\u7c7b\u578b\uff0c\u6765\u5b58\u50a8\u7279\u5b9a\u6570\u91cf\u7684\u591a\u91cd\u91c7\u6837\u6837\u672c\uff0c\u5b83\u53eb\u505a \u591a\u91cd\u91c7\u6837\u7f13\u51b2 (Multisample Buffer)\u3002 \u5927\u591a\u6570\u7684\u7a97\u53e3\u7cfb\u7edf\u90fd\u5e94\u8be5\u63d0\u4f9b\u4e86\u4e00\u4e2a\u591a\u91cd\u91c7\u6837\u7f13\u51b2\uff0c\u7528\u4ee5\u4ee3\u66ff\u9ed8\u8ba4\u7684\u989c\u8272\u7f13\u51b2\u3002GLFW\u540c\u6837\u7ed9\u4e86\u6211\u4eec\u8fd9\u4e2a\u529f\u80fd\uff0c\u6211\u4eec\u6240\u8981\u505a\u7684\u53ea\u662f \u63d0\u793a (Hint) GLFW\uff0c\u6211\u4eec\u5e0c\u671b\u4f7f\u7528\u4e00\u4e2a\u5305\u542bN\u4e2a\u6837\u672c\u7684\u591a\u91cd\u91c7\u6837\u7f13\u51b2\u3002\u8fd9\u53ef\u4ee5\u5728\u521b\u5efa\u7a97\u53e3\u4e4b\u524d\u8c03\u7528 glfwWindowHint \u6765\u5b8c\u6210\u3002 glfwWindowHint(GLFW_SAMPLES, 4); \u73b0\u5728\u518d\u8c03\u7528 glfwCreateWindow \u521b\u5efa\u6e32\u67d3\u7a97\u53e3\u65f6\uff0c\u6bcf\u4e2a\u5c4f\u5e55\u5750\u6807\u5c31\u4f1a\u4f7f\u7528\u4e00\u4e2a\u5305\u542b4\u4e2a\u5b50\u91c7\u6837\u70b9\u7684\u989c\u8272\u7f13\u51b2\u4e86\u3002GLFW\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u6bcf\u50cf\u7d204\u4e2a\u5b50\u91c7\u6837\u70b9\u7684\u6df1\u5ea6\u548c\u6837\u672c\u7f13\u51b2\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u6240\u6709\u7f13\u51b2\u7684\u5927\u5c0f\u90fd\u589e\u957f\u4e864\u500d\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5411GLFW\u8bf7\u6c42\u4e86\u591a\u91cd\u91c7\u6837\u7f13\u51b2\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u8c03\u7528 glEnable \u5e76\u542f\u7528 GL_MULTISAMPLE \uff0c\u6765\u542f\u7528\u591a\u91cd\u91c7\u6837\u3002\u5728\u5927\u591a\u6570OpenGL\u7684\u9a71\u52a8\u4e0a\uff0c\u591a\u91cd\u91c7\u6837\u90fd\u662f\u9ed8\u8ba4\u542f\u7528\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8c03\u7528\u53ef\u80fd\u4f1a\u6709\u70b9\u591a\u4f59\uff0c\u4f46\u663e\u5f0f\u5730\u8c03\u7528\u4e00\u4e0b\u4f1a\u66f4\u4fdd\u9669\u4e00\u70b9\u3002\u8fd9\u6837\u5b50\u4e0d\u8bba\u662f\u4ec0\u4e48OpenGL\u7684\u5b9e\u73b0\u90fd\u80fd\u591f\u6b63\u5e38\u542f\u7528\u591a\u91cd\u91c7\u6837\u4e86\u3002 glEnable(GL_MULTISAMPLE); \u56e0\u4e3a\u591a\u91cd\u91c7\u6837\u7684\u7b97\u6cd5\u90fd\u5728OpenGL\u9a71\u52a8\u7684\u5149\u6805\u5668\u4e2d\u5b9e\u73b0\u4e86\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u518d\u591a\u505a\u4ec0\u4e48\u3002\u5982\u679c\u73b0\u5728\u518d\u6765\u6e32\u67d3\u672c\u8282\u4e00\u5f00\u59cb\u7684\u90a3\u4e2a\u7eff\u8272\u7684\u7acb\u65b9\u4f53\uff0c\u6211\u4eec\u5e94\u8be5\u80fd\u770b\u5230\u66f4\u5e73\u6ed1\u7684\u8fb9\u7f18\uff1a \u8fd9\u4e2a\u7bb1\u5b50\u770b\u8d77\u6765\u7684\u786e\u8981\u5e73\u6ed1\u591a\u4e86\uff0c\u5982\u679c\u5728\u573a\u666f\u4e2d\u6709\u5176\u5b83\u7684\u7269\u4f53\uff0c\u5b83\u4eec\u4e5f\u4f1a\u770b\u8d77\u6765\u5e73\u6ed1\u5f88\u591a\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u8fd9\u4e2a\u7b80\u5355\u4f8b\u5b50\u7684\u6e90\u4ee3\u7801\u3002 \u79bb\u5c4fMSAA \u7531\u4e8eGLFW\u8d1f\u8d23\u4e86\u521b\u5efa\u591a\u91cd\u91c7\u6837\u7f13\u51b2\uff0c\u542f\u7528MSAA\u975e\u5e38\u7b80\u5355\u3002\u7136\u800c\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u4f7f\u7528\u6211\u4eec\u81ea\u5df1\u7684\u5e27\u7f13\u51b2\u6765\u8fdb\u884c\u79bb\u5c4f\u6e32\u67d3\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5fc5\u987b\u8981\u81ea\u5df1\u52a8\u624b\u751f\u6210\u591a\u91cd\u91c7\u6837\u7f13\u51b2\u4e86\u3002\u73b0\u5728\uff0c\u6211\u4eec \u786e\u5b9e \u9700\u8981\u81ea\u5df1\u521b\u5efa\u591a\u91cd\u91c7\u6837\u7f13\u51b2\u533a\u3002 \u6709\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u521b\u5efa\u591a\u91cd\u91c7\u6837\u7f13\u51b2\uff0c\u5c06\u5176\u4f5c\u4e3a\u5e27\u7f13\u51b2\u7684\u9644\u4ef6\uff1a\u7eb9\u7406\u9644\u4ef6\u548c\u6e32\u67d3\u7f13\u51b2\u9644\u4ef6\uff0c\u8fd9\u548c\u5728 \u5e27\u7f13\u51b2 \u6559\u7a0b\u4e2d\u6240\u8ba8\u8bba\u7684\u666e\u901a\u9644\u4ef6\u5f88\u76f8\u4f3c\u3002 \u591a\u91cd\u91c7\u6837\u7eb9\u7406\u9644\u4ef6 \u4e3a\u4e86\u521b\u5efa\u4e00\u4e2a\u652f\u6301\u50a8\u5b58\u591a\u4e2a\u91c7\u6837\u70b9\u7684\u7eb9\u7406\uff0c\u6211\u4eec\u4f7f\u7528 glTexImage2DMultisample \u6765\u66ff\u4ee3 glTexImage2D \uff0c\u5b83\u7684\u7eb9\u7406\u76ee\u6807\u662f GL_TEXTURE_2D_MULTISAPLE \u3002 glBindTexture(GL_TEXTURE_2D_MULTISAMPLE, tex); glTexImage2DMultisample(GL_TEXTURE_2D_MULTISAMPLE, samples, GL_RGB, width, height, GL_TRUE); glBindTexture(GL_TEXTURE_2D_MULTISAMPLE, 0); \u5b83\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8bbe\u7f6e\u7684\u662f\u7eb9\u7406\u6240\u62e5\u6709\u7684\u6837\u672c\u4e2a\u6570\u3002\u5982\u679c\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u4e3a GL_TRUE \uff0c\u56fe\u50cf\u5c06\u4f1a\u5bf9\u6bcf\u4e2a\u7eb9\u7d20\u4f7f\u7528\u76f8\u540c\u7684\u6837\u672c\u4f4d\u7f6e\u4ee5\u53ca\u76f8\u540c\u6570\u91cf\u7684\u5b50\u91c7\u6837\u70b9\u4e2a\u6570\u3002 \u6211\u4eec\u4f7f\u7528 glFramebufferTexture2D \u5c06\u591a\u91cd\u91c7\u6837\u7eb9\u7406\u9644\u52a0\u5230\u5e27\u7f13\u51b2\u4e0a\uff0c\u4f46\u8fd9\u91cc\u7eb9\u7406\u7c7b\u578b\u4f7f\u7528\u7684\u662f GL_TEXTURE_2D_MULTISAMPLE \u3002 glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D_MULTISAMPLE, tex, 0); \u5f53\u524d\u7ed1\u5b9a\u7684\u5e27\u7f13\u51b2\u73b0\u5728\u5c31\u6709\u4e86\u4e00\u4e2a\u7eb9\u7406\u56fe\u50cf\u5f62\u5f0f\u7684\u591a\u91cd\u91c7\u6837\u989c\u8272\u7f13\u51b2\u3002 \u591a\u91cd\u91c7\u6837\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61 \u548c\u7eb9\u7406\u7c7b\u4f3c\uff0c\u521b\u5efa\u4e00\u4e2a\u591a\u91cd\u91c7\u6837\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u5e76\u4e0d\u96be\u3002\u6211\u4eec\u6240\u8981\u505a\u7684\u53ea\u662f\u5728\u6307\u5b9a\uff08\u5f53\u524d\u7ed1\u5b9a\u7684\uff09\u6e32\u67d3\u7f13\u51b2\u7684\u5185\u5b58\u5b58\u50a8\u65f6\uff0c\u5c06 glRenderbufferStorage \u7684\u8c03\u7528\u6539\u4e3a glRenderbufferStorageMultisample \u5c31\u53ef\u4ee5\u4e86\u3002 glRenderbufferStorageMultisample(GL_RENDERBUFFER, 4, GL_DEPTH24_STENCIL8, width, height); \u51fd\u6570\u4e2d\uff0c\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u540e\u7684\u53c2\u6570\u6211\u4eec\u5c06\u8bbe\u5b9a\u4e3a\u6837\u672c\u7684\u6570\u91cf\uff0c\u5728\u5f53\u524d\u7684\u4f8b\u5b50\u4e2d\u662f4\u3002 \u6e32\u67d3\u5230\u591a\u91cd\u91c7\u6837\u5e27\u7f13\u51b2 \u6e32\u67d3\u5230\u591a\u91cd\u91c7\u6837\u5e27\u7f13\u51b2\u5bf9\u8c61\u7684\u8fc7\u7a0b\u975e\u5e38\u7b80\u5355\u3002\u53ea\u8981\u6211\u4eec\u5728\u5e27\u7f13\u51b2\u7ed1\u5b9a\u65f6\u7ed8\u5236\u4efb\u4f55\u4e1c\u897f\uff0c\u5149\u6805\u5668\u5c31\u4f1a\u8d1f\u8d23\u6240\u6709\u7684\u591a\u91cd\u91c7\u6837\u8fd0\u7b97\u3002\u6211\u4eec\u6700\u7ec8\u4f1a\u5f97\u5230\u4e00\u4e2a\u591a\u91cd\u91c7\u6837\u989c\u8272\u7f13\u51b2\u4ee5\u53ca/\u6216\u6df1\u5ea6\u548c\u6a21\u677f\u7f13\u51b2\u3002\u56e0\u4e3a\u591a\u91cd\u91c7\u6837\u7f13\u51b2\u6709\u4e00\u70b9\u7279\u522b\uff0c\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u5c06\u5b83\u4eec\u7684\u7f13\u51b2\u56fe\u50cf\u7528\u4e8e\u5176\u4ed6\u8fd0\u7b97\uff0c\u6bd4\u5982\u5728\u7740\u8272\u5668\u4e2d\u5bf9\u5b83\u4eec\u8fdb\u884c\u91c7\u6837\u3002 \u4e00\u4e2a\u591a\u91cd\u91c7\u6837\u7684\u56fe\u50cf\u5305\u542b\u6bd4\u666e\u901a\u56fe\u50cf\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u6240\u8981\u505a\u7684\u662f\u7f29\u5c0f\u6216\u8005 \u8fd8\u539f (Resolve)\u56fe\u50cf\u3002\u591a\u91cd\u91c7\u6837\u5e27\u7f13\u51b2\u7684\u8fd8\u539f\u901a\u5e38\u662f\u901a\u8fc7 glBlitFramebuffer \u6765\u5b8c\u6210\uff0c\u5b83\u80fd\u591f\u5c06\u4e00\u4e2a\u5e27\u7f13\u51b2\u4e2d\u7684\u67d0\u4e2a\u533a\u57df\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u5e27\u7f13\u51b2\u4e2d\uff0c\u5e76\u4e14\u5c06\u591a\u91cd\u91c7\u6837\u7f13\u51b2\u8fd8\u539f\u3002 glBlitFramebuffer \u4f1a\u5c06\u4e00\u4e2a\u75284\u4e2a\u5c4f\u5e55\u7a7a\u95f4\u5750\u6807\u6240\u5b9a\u4e49\u7684 \u6e90 \u533a\u57df\u590d\u5236\u5230\u4e00\u4e2a\u540c\u6837\u75284\u4e2a\u5c4f\u5e55\u7a7a\u95f4\u5750\u6807\u6240\u5b9a\u4e49\u7684 \u76ee\u6807 \u533a\u57df\u4e2d\u3002\u4f60\u53ef\u80fd\u8bb0\u5f97\u5728 \u5e27\u7f13\u51b2 \u6559\u7a0b\u4e2d\uff0c\u5f53\u6211\u4eec\u7ed1\u5b9a\u5230 GL_FRAMEBUFFER \u65f6\uff0c\u6211\u4eec\u662f\u540c\u65f6\u7ed1\u5b9a\u4e86\u8bfb\u53d6\u548c\u7ed8\u5236\u7684\u5e27\u7f13\u51b2\u76ee\u6807\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u5e27\u7f13\u51b2\u5206\u5f00\u7ed1\u5b9a\u81f3 GL_READ_FRAMEBUFFER \u4e0e GL_DRAW_FRAMEBUFFER \u3002 glBlitFramebuffer \u51fd\u6570\u4f1a\u6839\u636e\u8fd9\u4e24\u4e2a\u76ee\u6807\uff0c\u51b3\u5b9a\u54ea\u4e2a\u662f\u6e90\u5e27\u7f13\u51b2\uff0c\u54ea\u4e2a\u662f\u76ee\u6807\u5e27\u7f13\u51b2\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u56fe\u50cf \u4f4d\u5757\u4f20\u9001 (Blit)\u5230\u9ed8\u8ba4\u7684\u5e27\u7f13\u51b2\u4e2d\uff0c\u5c06\u591a\u91cd\u91c7\u6837\u7684\u5e27\u7f13\u51b2\u4f20\u9001\u5230\u5c4f\u5e55\u4e0a\u3002 glBindFramebuffer(GL_READ_FRAMEBUFFER, multisampledFBO); glBindFramebuffer(GL_DRAW_FRAMEBUFFER, 0); glBlitFramebuffer(0, 0, width, height, 0, 0, width, height, GL_COLOR_BUFFER_BIT, GL_NEAREST); \u5982\u679c\u73b0\u5728\u518d\u6765\u6e32\u67d3\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e0e\u4e4b\u524d\u5b8c\u5168\u4e00\u6837\u7684\u7ed3\u679c\uff1a\u4e00\u4e2a\u4f7f\u7528MSAA\u663e\u793a\u51fa\u6765\u7684\u6a44\u6984\u7eff\u8272\u7684\u7acb\u65b9\u4f53\uff0c\u800c\u4e14\u952f\u9f7f\u8fb9\u7f18\u660e\u663e\u51cf\u5c11\u4e86\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u6e90\u4ee3\u7801\u3002 \u4f46\u5982\u679c\u6211\u4eec\u60f3\u8981\u4f7f\u7528\u591a\u91cd\u91c7\u6837\u5e27\u7f13\u51b2\u7684\u7eb9\u7406\u8f93\u51fa\u6765\u505a\u50cf\u662f\u540e\u671f\u5904\u7406\u8fd9\u6837\u7684\u4e8b\u60c5\u5462\uff1f\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u591a\u91cd\u91c7\u6837\u7684\u7eb9\u7406\u3002\u4f46\u6211\u4eec\u80fd\u505a\u7684\u662f\u5c06\u591a\u91cd\u91c7\u6837\u7f13\u51b2\u4f4d\u5757\u4f20\u9001\u5230\u4e00\u4e2a\u6ca1\u6709\u4f7f\u7528\u591a\u91cd\u91c7\u6837\u7eb9\u7406\u9644\u4ef6\u7684FBO\u4e2d\u3002\u7136\u540e\u7528\u8fd9\u4e2a\u666e\u901a\u7684\u989c\u8272\u9644\u4ef6\u6765\u505a\u540e\u671f\u5904\u7406\uff0c\u4ece\u800c\u8fbe\u5230\u6211\u4eec\u7684\u76ee\u7684\u3002\u7136\u800c\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u751f\u6210\u4e00\u4e2a\u65b0\u7684FBO\uff0c\u4f5c\u4e3a\u4e2d\u4ecb\u5e27\u7f13\u51b2\u5bf9\u8c61\uff0c\u5c06\u591a\u91cd\u91c7\u6837\u7f13\u51b2\u8fd8\u539f\u4e3a\u4e00\u4e2a\u80fd\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u7684\u666e\u901a2D\u7eb9\u7406\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u4f2a\u4ee3\u7801\u662f\u8fd9\u6837\u7684\uff1a unsigned int msFBO = CreateFBOWithMultiSampledAttachments(); // \u4f7f\u7528\u666e\u901a\u7684\u7eb9\u7406\u989c\u8272\u9644\u4ef6\u521b\u5efa\u4e00\u4e2a\u65b0\u7684FBO ... glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, screenTexture, 0); ... while(!glfwWindowShouldClose(window)) { ... glBindFramebuffer(msFBO); ClearFrameBuffer(); DrawScene(); // \u5c06\u591a\u91cd\u91c7\u6837\u7f13\u51b2\u8fd8\u539f\u5230\u4e2d\u4ecbFBO\u4e0a glBindFramebuffer(GL_READ_FRAMEBUFFER, msFBO); glBindFramebuffer(GL_DRAW_FRAMEBUFFER, intermediateFBO); glBlitFramebuffer(0, 0, width, height, 0, 0, width, height, GL_COLOR_BUFFER_BIT, GL_NEAREST); // \u73b0\u5728\u573a\u666f\u662f\u4e00\u4e2a2D\u7eb9\u7406\u7f13\u51b2\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u56fe\u50cf\u7528\u6765\u540e\u671f\u5904\u7406 glBindFramebuffer(GL_FRAMEBUFFER, 0); ClearFramebuffer(); glBindTexture(GL_TEXTURE_2D, screenTexture); DrawPostProcessingQuad(); ... } \u5982\u679c\u73b0\u5728\u518d\u5b9e\u73b0 \u5e27\u7f13\u51b2 \u6559\u7a0b\u4e2d\u7684\u540e\u671f\u5904\u7406\u6548\u679c\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u5728\u4e00\u4e2a\u51e0\u4e4e\u6ca1\u6709\u952f\u9f7f\u7684\u573a\u666f\u7eb9\u7406\u4e0a\u8fdb\u884c\u540e\u671f\u5904\u7406\u4e86\u3002\u5982\u679c\u8ba9\u56fe\u50cf\u7070\u5ea6\u5316\uff0c\u770b\u8d77\u6765\u5c06\u4f1a\u662f\u8fd9\u6837\uff1a Important \u56e0\u4e3a\u5c4f\u5e55\u7eb9\u7406\u53c8\u53d8\u56de\u4e86\u4e00\u4e2a\u53ea\u6709\u5355\u4e00\u91c7\u6837\u70b9\u7684\u666e\u901a\u7eb9\u7406\uff0c\u50cf\u662f \u8fb9\u7f18\u68c0\u6d4b \u8fd9\u6837\u7684\u540e\u671f\u5904\u7406\u6ee4\u955c\u4f1a\u91cd\u65b0\u5bfc\u81f4\u952f\u9f7f\u3002\u4e3a\u4e86\u8865\u507f\u8fd9\u4e00\u95ee\u9898\uff0c\u4f60\u53ef\u4ee5\u4e4b\u540e\u5bf9\u7eb9\u7406\u8fdb\u884c\u6a21\u7cca\u5904\u7406\uff0c\u6216\u8005\u60f3\u51fa\u4f60\u81ea\u5df1\u7684\u6297\u952f\u9f7f\u7b97\u6cd5\u3002 \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u5982\u679c\u5c06\u591a\u91cd\u91c7\u6837\u4e0e\u79bb\u5c4f\u6e32\u67d3\u7ed3\u5408\u8d77\u6765\uff0c\u6211\u4eec\u9700\u8981\u81ea\u5df1\u8d1f\u8d23\u4e00\u4e9b\u989d\u5916\u7684\u7ec6\u8282\u3002\u4f46\u6240\u6709\u7684\u8fd9\u4e9b\u7ec6\u8282\u90fd\u662f\u503c\u5f97\u989d\u5916\u7684\u52aa\u529b\u7684\uff0c\u56e0\u4e3a\u591a\u91cd\u91c7\u6837\u80fd\u591f\u663e\u8457\u63d0\u5347\u573a\u666f\u7684\u89c6\u89c9\u8d28\u91cf\u3002\u5f53\u7136\uff0c\u8981\u6ce8\u610f\uff0c\u5982\u679c\u4f7f\u7528\u7684\u91c7\u6837\u70b9\u975e\u5e38\u591a\uff0c\u542f\u7528\u591a\u91cd\u91c7\u6837\u4f1a\u663e\u8457\u964d\u4f4e\u7a0b\u5e8f\u7684\u6027\u80fd\u3002\u5728\u672c\u8282\u5199\u4f5c\u65f6\uff0c\u901a\u5e38\u91c7\u7528\u7684\u662f4\u91c7\u6837\u70b9\u7684MSAA\u3002 \u81ea\u5b9a\u4e49\u6297\u952f\u9f7f\u7b97\u6cd5 \u5c06\u4e00\u4e2a\u591a\u91cd\u91c7\u6837\u7684\u7eb9\u7406\u56fe\u50cf\u4e0d\u8fdb\u884c\u8fd8\u539f\u76f4\u63a5\u4f20\u5165\u7740\u8272\u5668\u4e5f\u662f\u53ef\u884c\u7684\u3002GLSL\u63d0\u4f9b\u4e86\u8fd9\u6837\u7684\u9009\u9879\uff0c\u8ba9\u6211\u4eec\u80fd\u591f\u5bf9\u7eb9\u7406\u56fe\u50cf\u7684\u6bcf\u4e2a\u5b50\u6837\u672c\u8fdb\u884c\u91c7\u6837\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u6211\u4eec\u81ea\u5df1\u7684\u6297\u952f\u9f7f\u7b97\u6cd5\u3002\u5728\u5927\u578b\u7684\u56fe\u5f62\u5e94\u7528\u4e2d\u901a\u5e38\u90fd\u4f1a\u8fd9\u4e48\u505a\u3002 \u8981\u60f3\u83b7\u53d6\u6bcf\u4e2a\u5b50\u6837\u672c\u7684\u989c\u8272\u503c\uff0c\u4f60\u9700\u8981\u5c06\u7eb9\u7406uniform\u91c7\u6837\u5668\u8bbe\u7f6e\u4e3a sampler2DMS \uff0c\u800c\u4e0d\u662f\u5e73\u5e38\u4f7f\u7528\u7684 sampler2D \uff1a uniform sampler2DMS screenTextureMS; \u4f7f\u7528 texelFetch \u51fd\u6570\u5c31\u80fd\u591f\u83b7\u53d6\u6bcf\u4e2a\u5b50\u6837\u672c\u7684\u989c\u8272\u503c\u4e86\uff1a vec4 colorSample = texelFetch(screenTextureMS, TexCoords, 3); // \u7b2c4\u4e2a\u5b50\u6837\u672c \u6211\u4eec\u4e0d\u4f1a\u6df1\u5165\u63a2\u7a76\u81ea\u5b9a\u4e49\u6297\u952f\u9f7f\u6280\u672f\u7684\u7ec6\u8282\uff0c\u8fd9\u91cc\u4ec5\u4ec5\u662f\u7ed9\u4f60\u4e00\u70b9\u542f\u53d1\u3002","title":"\u6297\u952f\u9f7f"},{"location":"04%20Advanced%20OpenGL/11%20Anti%20Aliasing/#_1","text":"\u539f\u6587 Anti Aliasing \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet, Django \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u5728\u5b66\u4e60\u6e32\u67d3\u7684\u65c5\u9014\u4e2d\uff0c\u4f60\u53ef\u80fd\u4f1a\u65f6\u4e0d\u65f6\u9047\u5230\u6a21\u578b\u8fb9\u7f18\u6709\u952f\u9f7f\u7684\u60c5\u51b5\u3002\u8fd9\u4e9b \u952f\u9f7f\u8fb9\u7f18 (Jagged Edges)\u7684\u4ea7\u751f\u548c\u5149\u6805\u5668\u5c06\u9876\u70b9\u6570\u636e\u8f6c\u5316\u4e3a\u7247\u6bb5\u7684\u65b9\u5f0f\u6709\u5173\u3002\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u53ea\u662f\u7ed8\u5236\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u7acb\u65b9\u4f53\uff0c\u4f60\u5c31\u80fd\u6ce8\u610f\u5230\u5b83\u5b58\u5728\u952f\u9f7f\u8fb9\u7f18\u4e86\uff1a \u53ef\u80fd\u4e0d\u662f\u975e\u5e38\u660e\u663e\uff0c\u4f46\u5982\u679c\u4f60\u79bb\u8fd1\u4ed4\u7ec6\u89c2\u5bdf\u7acb\u65b9\u4f53\u7684\u8fb9\u7f18\uff0c\u4f60\u5c31\u5e94\u8be5\u80fd\u591f\u770b\u5230\u952f\u9f7f\u72b6\u7684\u56fe\u6848\u3002\u5982\u679c\u653e\u5927\u7684\u8bdd\uff0c\u4f60\u4f1a\u770b\u5230\u4e0b\u9762\u7684\u56fe\u6848\uff1a \u8fd9\u5f88\u660e\u663e\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u5728\u6700\u7ec8\u7a0b\u5e8f\u4e2d\u6240\u5b9e\u73b0\u7684\u6548\u679c\u3002\u4f60\u80fd\u591f\u6e05\u695a\u770b\u89c1\u5f62\u6210\u8fb9\u7f18\u7684\u50cf\u7d20\u3002\u8fd9\u79cd\u73b0\u8c61\u88ab\u79f0\u4e4b\u4e3a \u8d70\u6837 (Aliasing)\u3002\u6709\u5f88\u591a\u79cd\u6297\u952f\u9f7f\uff08Anti-aliasing\uff0c\u4e5f\u88ab\u79f0\u4e3a\u53cd\u8d70\u6837\uff09\u7684\u6280\u672f\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u7f13\u89e3\u8fd9\u79cd\u73b0\u8c61\uff0c\u4ece\u800c\u4ea7\u751f\u66f4 \u5e73\u6ed1 \u7684\u8fb9\u7f18\u3002 \u6700\u5f00\u59cb\u6211\u4eec\u6709\u4e00\u79cd\u53eb\u505a \u8d85\u91c7\u6837\u6297\u952f\u9f7f (Super Sample Anti-aliasing, SSAA)\u7684\u6280\u672f\uff0c\u5b83\u4f1a\u4f7f\u7528\u6bd4\u6b63\u5e38\u5206\u8fa8\u7387\u66f4\u9ad8\u7684\u5206\u8fa8\u7387\uff08\u5373\u8d85\u91c7\u6837\uff09\u6765\u6e32\u67d3\u573a\u666f\uff0c\u5f53\u56fe\u50cf\u8f93\u51fa\u5728\u5e27\u7f13\u51b2\u4e2d\u66f4\u65b0\u65f6\uff0c\u5206\u8fa8\u7387\u4f1a\u88ab\u4e0b\u91c7\u6837(Downsample)\u81f3\u6b63\u5e38\u7684\u5206\u8fa8\u7387\u3002\u8fd9\u4e9b \u989d\u5916\u7684 \u5206\u8fa8\u7387\u4f1a\u88ab\u7528\u6765\u9632\u6b62\u952f\u9f7f\u8fb9\u7f18\u7684\u4ea7\u751f\u3002\u867d\u7136\u5b83\u786e\u5b9e\u80fd\u591f\u89e3\u51b3\u8d70\u6837\u7684\u95ee\u9898\uff0c\u4f46\u662f\u7531\u4e8e\u8fd9\u6837\u6bd4\u5e73\u65f6\u8981\u7ed8\u5236\u66f4\u591a\u7684\u7247\u6bb5\uff0c\u5b83\u4e5f\u4f1a\u5e26\u6765\u5f88\u5927\u7684\u6027\u80fd\u5f00\u9500\u3002\u6240\u4ee5\u8fd9\u9879\u6280\u672f\u53ea\u62e5\u6709\u4e86\u77ed\u6682\u7684\u8f89\u714c\u3002 \u7136\u800c\uff0c\u5728\u8fd9\u9879\u6280\u672f\u7684\u57fa\u7840\u4e0a\u4e5f\u8bde\u751f\u4e86\u66f4\u4e3a\u73b0\u4ee3\u7684\u6280\u672f\uff0c\u53eb\u505a \u591a\u91cd\u91c7\u6837\u6297\u952f\u9f7f (Multisample Anti-aliasing, MSAA)\u3002\u5b83\u501f\u9274\u4e86SSAA\u80cc\u540e\u7684\u7406\u5ff5\uff0c\u4f46\u5374\u4ee5\u66f4\u52a0\u9ad8\u6548\u7684\u65b9\u5f0f\u5b9e\u73b0\u4e86\u6297\u952f\u9f7f\u3002\u6211\u4eec\u5728\u8fd9\u4e00\u8282\u4e2d\u4f1a\u6df1\u5ea6\u8ba8\u8bbaOpenGL\u4e2d\u5185\u5efa\u7684MSAA\u6280\u672f\u3002","title":"\u6297\u952f\u9f7f"},{"location":"04%20Advanced%20OpenGL/11%20Anti%20Aliasing/#_2","text":"\u4e3a\u4e86\u7406\u89e3\u4ec0\u4e48\u662f\u591a\u91cd\u91c7\u6837(Multisampling)\uff0c\u4ee5\u53ca\u5b83\u662f\u5982\u4f55\u89e3\u51b3\u952f\u9f7f\u95ee\u9898\u7684\uff0c\u6211\u4eec\u6709\u5fc5\u8981\u66f4\u52a0\u6df1\u5165\u5730\u4e86\u89e3OpenGL\u5149\u6805\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002 \u5149\u6805\u5668\u662f\u4f4d\u4e8e\u6700\u7ec8\u5904\u7406\u8fc7\u7684\u9876\u70b9\u4e4b\u540e\u5230\u7247\u6bb5\u7740\u8272\u5668\u4e4b\u524d\u6240\u7ecf\u8fc7\u7684\u6240\u6709\u7684\u7b97\u6cd5\u4e0e\u8fc7\u7a0b\u7684\u603b\u548c\u3002\u5149\u6805\u5668\u4f1a\u5c06\u4e00\u4e2a\u56fe\u5143\u7684\u6240\u6709\u9876\u70b9\u4f5c\u4e3a\u8f93\u5165\uff0c\u5e76\u5c06\u5b83\u8f6c\u6362\u4e3a\u4e00\u7cfb\u5217\u7684\u7247\u6bb5\u3002\u9876\u70b9\u5750\u6807\u7406\u8bba\u4e0a\u53ef\u4ee5\u53d6\u4efb\u610f\u503c\uff0c\u4f46\u7247\u6bb5\u4e0d\u884c\uff0c\u56e0\u4e3a\u5b83\u4eec\u53d7\u9650\u4e8e\u4f60\u7a97\u53e3\u7684\u5206\u8fa8\u7387\u3002\u9876\u70b9\u5750\u6807\u4e0e\u7247\u6bb5\u4e4b\u95f4\u51e0\u4e4e\u6c38\u8fdc\u4e5f\u4e0d\u4f1a\u6709\u4e00\u5bf9\u4e00\u7684\u6620\u5c04\uff0c\u6240\u4ee5\u5149\u6805\u5668\u5fc5\u987b\u4ee5\u67d0\u79cd\u65b9\u5f0f\u6765\u51b3\u5b9a\u6bcf\u4e2a\u9876\u70b9\u6700\u7ec8\u6240\u5728\u7684\u7247\u6bb5/\u5c4f\u5e55\u5750\u6807\u3002 \u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u5c4f\u5e55\u50cf\u7d20\u7684\u7f51\u683c\uff0c\u6bcf\u4e2a\u50cf\u7d20\u7684\u4e2d\u5fc3\u5305\u542b\u6709\u4e00\u4e2a \u91c7\u6837\u70b9 (Sample Point)\uff0c\u5b83\u4f1a\u88ab\u7528\u6765\u51b3\u5b9a\u8fd9\u4e2a\u4e09\u89d2\u5f62\u662f\u5426\u906e\u76d6\u4e86\u67d0\u4e2a\u50cf\u7d20\u3002\u56fe\u4e2d\u7ea2\u8272\u7684\u91c7\u6837\u70b9\u88ab\u4e09\u89d2\u5f62\u6240\u906e\u76d6\uff0c\u5728\u6bcf\u4e00\u4e2a\u906e\u4f4f\u7684\u50cf\u7d20\u5904\u90fd\u4f1a\u751f\u6210\u4e00\u4e2a\u7247\u6bb5\u3002\u867d\u7136\u4e09\u89d2\u5f62\u8fb9\u7f18\u7684\u4e00\u4e9b\u90e8\u5206\u4e5f\u906e\u4f4f\u4e86\u67d0\u4e9b\u5c4f\u5e55\u50cf\u7d20\uff0c\u4f46\u662f\u8fd9\u4e9b\u50cf\u7d20\u7684\u91c7\u6837\u70b9\u5e76\u6ca1\u6709\u88ab\u4e09\u89d2\u5f62 \u5185\u90e8 \u6240\u906e\u76d6\uff0c\u6240\u4ee5\u5b83\u4eec\u4e0d\u4f1a\u53d7\u5230\u7247\u6bb5\u7740\u8272\u5668\u7684\u5f71\u54cd\u3002 \u4f60\u73b0\u5728\u53ef\u80fd\u5df2\u7ecf\u6e05\u695a\u8d70\u6837\u7684\u539f\u56e0\u4e86\u3002\u5b8c\u6574\u6e32\u67d3\u540e\u7684\u4e09\u89d2\u5f62\u5728\u5c4f\u5e55\u4e0a\u4f1a\u662f\u8fd9\u6837\u7684\uff1a \u7531\u4e8e\u5c4f\u5e55\u50cf\u7d20\u603b\u91cf\u7684\u9650\u5236\uff0c\u6709\u4e9b\u8fb9\u7f18\u7684\u50cf\u7d20\u80fd\u591f\u88ab\u6e32\u67d3\u51fa\u6765\uff0c\u800c\u6709\u4e9b\u5219\u4e0d\u4f1a\u3002\u7ed3\u679c\u5c31\u662f\u6211\u4eec\u4f7f\u7528\u4e86\u4e0d\u5149\u6ed1\u7684\u8fb9\u7f18\u6765\u6e32\u67d3\u56fe\u5143\uff0c\u5bfc\u81f4\u4e4b\u524d\u8ba8\u8bba\u5230\u7684\u952f\u9f7f\u8fb9\u7f18\u3002 \u591a\u91cd\u91c7\u6837\u6240\u505a\u7684\u6b63\u662f\u5c06\u5355\u4e00\u7684\u91c7\u6837\u70b9\u53d8\u4e3a\u591a\u4e2a\u91c7\u6837\u70b9\uff08\u8fd9\u4e5f\u662f\u5b83\u540d\u79f0\u7684\u7531\u6765\uff09\u3002\u6211\u4eec\u4e0d\u518d\u4f7f\u7528\u50cf\u7d20\u4e2d\u5fc3\u7684\u5355\u4e00\u91c7\u6837\u70b9\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u4ee5\u7279\u5b9a\u56fe\u6848\u6392\u5217\u76844\u4e2a\u5b50\u91c7\u6837\u70b9(Subsample)\u3002\u6211\u4eec\u5c06\u7528\u8fd9\u4e9b\u5b50\u91c7\u6837\u70b9\u6765\u51b3\u5b9a\u50cf\u7d20\u7684\u906e\u76d6\u5ea6\u3002 \u4e0a\u56fe\u7684\u5de6\u4fa7\u5c55\u793a\u4e86\u6b63\u5e38\u60c5\u51b5\u4e0b\u5224\u5b9a\u4e09\u89d2\u5f62\u662f\u5426\u906e\u76d6\u7684\u65b9\u5f0f\u3002\u5728\u4f8b\u5b50\u4e2d\u7684\u8fd9\u4e2a\u50cf\u7d20\u4e0a\u4e0d\u4f1a\u8fd0\u884c\u7247\u6bb5\u7740\u8272\u5668\uff08\u6240\u4ee5\u5b83\u4f1a\u4fdd\u6301\u7a7a\u767d\uff09\u3002\u56e0\u4e3a\u5b83\u7684\u91c7\u6837\u70b9\u5e76\u672a\u88ab\u4e09\u89d2\u5f62\u6240\u8986\u76d6\u3002\u4e0a\u56fe\u7684\u53f3\u4fa7\u5c55\u793a\u7684\u662f\u5b9e\u65bd\u591a\u91cd\u91c7\u6837\u4e4b\u540e\u7684\u7248\u672c\uff0c\u6bcf\u4e2a\u50cf\u7d20\u5305\u542b\u67094\u4e2a\u91c7\u6837\u70b9\u3002\u8fd9\u91cc\uff0c\u53ea\u6709\u4e24\u4e2a\u91c7\u6837\u70b9\u906e\u76d6\u4f4f\u4e86\u4e09\u89d2\u5f62\u3002 Important \u91c7\u6837\u70b9\u7684\u6570\u91cf\u53ef\u4ee5\u662f\u4efb\u610f\u7684\uff0c\u66f4\u591a\u7684\u91c7\u6837\u70b9\u80fd\u5e26\u6765\u66f4\u7cbe\u786e\u7684\u906e\u76d6\u7387\u3002 \u4ece\u8fd9\u91cc\u5f00\u59cb\u591a\u91cd\u91c7\u6837\u5c31\u53d8\u5f97\u6709\u8da3\u8d77\u6765\u4e86\u3002\u6211\u4eec\u77e5\u9053\u4e09\u89d2\u5f62\u53ea\u906e\u76d6\u4e862\u4e2a\u5b50\u91c7\u6837\u70b9\uff0c\u6240\u4ee5\u4e0b\u4e00\u6b65\u662f\u51b3\u5b9a\u8fd9\u4e2a\u50cf\u7d20\u7684\u989c\u8272\u3002\u4f60\u7684\u731c\u60f3\u53ef\u80fd\u662f\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e2a\u88ab\u906e\u76d6\u4f4f\u7684\u5b50\u91c7\u6837\u70b9\u8fd0\u884c\u4e00\u6b21\u7247\u6bb5\u7740\u8272\u5668\uff0c\u6700\u540e\u5c06\u6bcf\u4e2a\u50cf\u7d20\u6240\u6709\u5b50\u91c7\u6837\u70b9\u7684\u989c\u8272\u5e73\u5747\u4e00\u4e0b\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5728\u4e24\u4e2a\u5b50\u91c7\u6837\u70b9\u4e0a\u5bf9\u88ab\u63d2\u503c\u7684\u9876\u70b9\u6570\u636e\u8fd0\u884c\u4e24\u6b21\u7247\u6bb5\u7740\u8272\u5668\uff0c\u5e76\u5c06\u7ed3\u679c\u7684\u989c\u8272\u50a8\u5b58\u5728\u8fd9\u4e9b\u91c7\u6837\u70b9\u4e2d\u3002\uff08\u5e78\u8fd0\u7684\u662f\uff09\u8fd9\u5e76 \u4e0d\u662f \u5b83\u5de5\u4f5c\u7684\u65b9\u5f0f\uff0c\u56e0\u4e3a\u8fd9\u672c\u8d28\u4e0a\u8bf4\u8fd8\u662f\u9700\u8981\u8fd0\u884c\u66f4\u591a\u6b21\u7684\u7247\u6bb5\u7740\u8272\u5668\uff0c\u4f1a\u663e\u8457\u5730\u964d\u4f4e\u6027\u80fd\u3002 MSAA\u771f\u6b63\u7684\u5de5\u4f5c\u65b9\u5f0f\u662f\uff0c\u65e0\u8bba\u4e09\u89d2\u5f62\u906e\u76d6\u4e86\u591a\u5c11\u4e2a\u5b50\u91c7\u6837\u70b9\uff0c\uff08\u6bcf\u4e2a\u56fe\u5143\u4e2d\uff09\u6bcf\u4e2a\u50cf\u7d20\u53ea\u8fd0\u884c \u4e00\u6b21 \u7247\u6bb5\u7740\u8272\u5668\u3002\u7247\u6bb5\u7740\u8272\u5668\u4f7f\u7528\u63d2\u503c\u5230\u50cf\u7d20 \u4e2d\u5fc3 \u7684\u9876\u70b9\u6570\u636e\uff0c\u7136\u540e\uff0cMSAA\u4f7f\u7528\u66f4\u5927\u7684\u6df1\u5ea6/\u6a21\u677f\u7f13\u51b2\u533a\u6765\u786e\u5b9a\u5b50\u91c7\u6837\u70b9\u7684\u8986\u76d6\u7387\u3002\u88ab\u8986\u76d6\u7684\u5b50\u91c7\u6837\u70b9\u6570\u91cf\u5c06\u51b3\u5b9a\u4e86\u50cf\u7d20\u989c\u8272\u5bf9\u5e27\u7f13\u51b2\u7684\u5f71\u54cd\u7a0b\u5ea6\u3002\u56e0\u4e3a\u4e0a\u56fe\u76844\u4e2a\u91c7\u6837\u70b9\u4e2d\u53ea\u67092\u4e2a\u88ab\u906e\u76d6\u4f4f\u4e86\uff0c\u6240\u4ee5\u4e09\u89d2\u5f62\u7684\u989c\u8272\u4f1a\u6709\u4e00\u534a\u4e0e\u5e27\u7f13\u51b2\u533a\u7684\u989c\u8272\uff08\u5728\u8fd9\u91cc\u662f\u65e0\u8272\uff09\u8fdb\u884c\u6df7\u5408\uff0c\u6700\u7ec8\u5f62\u6210\u4e00\u79cd\u6de1\u84dd\u8272\u3002 \u8fd9\u6837\u5b50\u505a\u4e4b\u540e\uff0c\u989c\u8272\u7f13\u51b2\u4e2d\u6240\u6709\u7684\u56fe\u5143\u8fb9\u7f18\u5c06\u4f1a\u4ea7\u751f\u4e00\u79cd\u66f4\u5e73\u6ed1\u7684\u56fe\u5f62\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b\u524d\u9762\u4e09\u89d2\u5f62\u7684\u591a\u91cd\u91c7\u6837\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\uff1a \u8fd9\u91cc\uff0c\u6bcf\u4e2a\u50cf\u7d20\u5305\u542b4\u4e2a\u5b50\u91c7\u6837\u70b9\uff08\u4e0d\u76f8\u5173\u7684\u91c7\u6837\u70b9\u90fd\u6ca1\u6709\u6807\u6ce8\uff09\uff0c\u84dd\u8272\u7684\u91c7\u6837\u70b9\u88ab\u4e09\u89d2\u5f62\u6240\u906e\u76d6\uff0c\u800c\u7070\u8272\u7684\u5219\u6ca1\u6709\u3002\u5bf9\u4e8e\u4e09\u89d2\u5f62\u7684\u5185\u90e8\u7684\u50cf\u7d20\uff0c\u7247\u6bb5\u7740\u8272\u5668\u53ea\u4f1a\u8fd0\u884c\u4e00\u6b21\uff0c\u989c\u8272\u8f93\u51fa\u4f1a\u88ab\u5b58\u50a8\u5230\u5168\u90e8\u76844\u4e2a\u5b50\u6837\u672c\u4e2d\u3002\u800c\u5728\u4e09\u89d2\u5f62\u7684\u8fb9\u7f18\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u7684\u5b50\u91c7\u6837\u70b9\u90fd\u88ab\u906e\u76d6\uff0c\u6240\u4ee5\u7247\u6bb5\u7740\u8272\u5668\u7684\u7ed3\u679c\u5c06\u53ea\u4f1a\u50a8\u5b58\u5230\u90e8\u5206\u7684\u5b50\u6837\u672c\u4e2d\u3002\u6839\u636e\u88ab\u906e\u76d6\u7684\u5b50\u6837\u672c\u7684\u6570\u91cf\uff0c\u6700\u7ec8\u7684\u50cf\u7d20\u989c\u8272\u5c06\u7531\u4e09\u89d2\u5f62\u7684\u989c\u8272\u4e0e\u5176\u5b83\u5b50\u6837\u672c\u4e2d\u6240\u50a8\u5b58\u7684\u989c\u8272\u6765\u51b3\u5b9a\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u4e00\u4e2a\u50cf\u7d20\u4e2d\u5982\u679c\u6709\u66f4\u591a\u7684\u91c7\u6837\u70b9\u88ab\u4e09\u89d2\u5f62\u906e\u76d6\uff0c\u90a3\u4e48\u8fd9\u4e2a\u50cf\u7d20\u7684\u989c\u8272\u5c31\u4f1a\u66f4\u63a5\u8fd1\u4e8e\u4e09\u89d2\u5f62\u7684\u989c\u8272\u3002\u5982\u679c\u6211\u4eec\u7ed9\u4e0a\u9762\u7684\u4e09\u89d2\u5f62\u586b\u5145\u989c\u8272\uff0c\u5c31\u80fd\u5f97\u5230\u4ee5\u4e0b\u7684\u6548\u679c\uff1a \u4e09\u89d2\u5f62\u7684\u4e0d\u5e73\u6ed1\u8fb9\u7f18\u88ab\u7a0d\u6d45\u7684\u989c\u8272\u6240\u5305\u56f4\u540e\uff0c\u4ece\u8fdc\u5904\u89c2\u5bdf\u65f6\u5c31\u4f1a\u663e\u5f97\u66f4\u52a0\u5e73\u6ed1\u4e86\u3002 \u6df1\u5ea6\u503c\u548c\u6a21\u677f\u503c\u4f1a\u6309\u5404\u4e2a\u5b50\u91c7\u6837\u70b9\u5b58\u50a8\uff0c\u5e76\u4e14\u5f53\u591a\u4e2a\u4e09\u89d2\u5f62\u91cd\u53e0\u5355\u4e2a\u50cf\u7d20\u65f6\uff0c\u5373\u4f7f\u6211\u4eec\u53ea\u8fd0\u884c\u4e00\u6b21\u7247\u6bb5\u7740\u8272\u5668\uff0c\u989c\u8272\u503c\u4e5f\u4f9d\u7136\u4f1a\u6309\u5b50\u91c7\u6837\u70b9\u5b58\u50a8\u3002\u5bf9\u6df1\u5ea6\u6d4b\u8bd5\u6765\u8bf4\uff0c\u5728\u8fd0\u884c\u6df1\u5ea6\u6d4b\u8bd5\u4e4b\u524d\uff0c\u6bcf\u4e2a\u9876\u70b9\u7684\u6df1\u5ea6\u503c\u4f1a\u88ab\u63d2\u503c\u5230\u5404\u4e2a\u5b50\u6837\u672c\u4e2d\u3002\u800c\u5bf9\u6a21\u677f\u6d4b\u8bd5\u6765\u8bf4\uff0c\u6211\u4eec\u4f1a\u4e3a\u6bcf\u4e2a\u5b50\u6837\u672c\u5b58\u50a8\u6a21\u677f\u503c\uff0c\u8fd9\u610f\u5473\u7740\u7f13\u51b2\u533a\u7684\u5927\u5c0f\u4f1a\u6839\u636e\u6bcf\u4e2a\u50cf\u7d20\u7684\u5b50\u91c7\u6837\u70b9\u6570\u91cf\u800c\u76f8\u5e94\u589e\u52a0\u3002 \u6211\u4eec\u5230\u76ee\u524d\u4e3a\u6b62\u8ba8\u8bba\u7684\u90fd\u662f\u591a\u91cd\u91c7\u6837\u6297\u952f\u9f7f\u7684\u80cc\u540e\u539f\u7406\uff0c\u5149\u6805\u5668\u80cc\u540e\u7684\u5b9e\u9645\u903b\u8f91\u6bd4\u76ee\u524d\u8ba8\u8bba\u7684\u8981\u590d\u6742\uff0c\u4f46\u4f60\u73b0\u5728\u5e94\u8be5\u5df2\u7ecf\u53ef\u4ee5\u7406\u89e3\u591a\u91cd\u91c7\u6837\u6297\u952f\u9f7f\u7684\u5927\u4f53\u6982\u5ff5\u548c\u903b\u8f91\u4e86\u3002 (\u8bd1\u8005\u6ce8\uff1a \u5982\u679c\u770b\u5230\u8fd9\u91cc\u8fd8\u662f\u5bf9\u539f\u7406\u4f3c\u61c2\u975e\u61c2\uff0c\u53ef\u4ee5\u7b80\u5355\u770b\u770b\u77e5\u4e4e\u4e0a @\u6587\u5200\u79cb\u4e8c \u5bf9\u6297\u952f\u9f7f\u6280\u672f\u7684 \u7cbe\u5f69\u4ecb\u7ecd )","title":"\u591a\u91cd\u91c7\u6837"},{"location":"04%20Advanced%20OpenGL/11%20Anti%20Aliasing/#openglmsaa","text":"\u5982\u679c\u6211\u4eec\u60f3\u8981\u5728OpenGL\u4e2d\u4f7f\u7528MSAA\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u4f7f\u7528\u4e00\u4e2a\u80fd\u5728\u6bcf\u4e2a\u50cf\u7d20\u4e2d\u5b58\u50a8\u5927\u4e8e1\u4e2a\u989c\u8272\u503c\u7684\u989c\u8272\u7f13\u51b2\uff08\u56e0\u4e3a\u591a\u91cd\u91c7\u6837\u9700\u8981\u6211\u4eec\u4e3a\u6bcf\u4e2a\u91c7\u6837\u70b9\u90fd\u50a8\u5b58\u4e00\u4e2a\u989c\u8272\uff09\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u7f13\u51b2\u7c7b\u578b\uff0c\u6765\u5b58\u50a8\u7279\u5b9a\u6570\u91cf\u7684\u591a\u91cd\u91c7\u6837\u6837\u672c\uff0c\u5b83\u53eb\u505a \u591a\u91cd\u91c7\u6837\u7f13\u51b2 (Multisample Buffer)\u3002 \u5927\u591a\u6570\u7684\u7a97\u53e3\u7cfb\u7edf\u90fd\u5e94\u8be5\u63d0\u4f9b\u4e86\u4e00\u4e2a\u591a\u91cd\u91c7\u6837\u7f13\u51b2\uff0c\u7528\u4ee5\u4ee3\u66ff\u9ed8\u8ba4\u7684\u989c\u8272\u7f13\u51b2\u3002GLFW\u540c\u6837\u7ed9\u4e86\u6211\u4eec\u8fd9\u4e2a\u529f\u80fd\uff0c\u6211\u4eec\u6240\u8981\u505a\u7684\u53ea\u662f \u63d0\u793a (Hint) GLFW\uff0c\u6211\u4eec\u5e0c\u671b\u4f7f\u7528\u4e00\u4e2a\u5305\u542bN\u4e2a\u6837\u672c\u7684\u591a\u91cd\u91c7\u6837\u7f13\u51b2\u3002\u8fd9\u53ef\u4ee5\u5728\u521b\u5efa\u7a97\u53e3\u4e4b\u524d\u8c03\u7528 glfwWindowHint \u6765\u5b8c\u6210\u3002 glfwWindowHint(GLFW_SAMPLES, 4); \u73b0\u5728\u518d\u8c03\u7528 glfwCreateWindow \u521b\u5efa\u6e32\u67d3\u7a97\u53e3\u65f6\uff0c\u6bcf\u4e2a\u5c4f\u5e55\u5750\u6807\u5c31\u4f1a\u4f7f\u7528\u4e00\u4e2a\u5305\u542b4\u4e2a\u5b50\u91c7\u6837\u70b9\u7684\u989c\u8272\u7f13\u51b2\u4e86\u3002GLFW\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u6bcf\u50cf\u7d204\u4e2a\u5b50\u91c7\u6837\u70b9\u7684\u6df1\u5ea6\u548c\u6837\u672c\u7f13\u51b2\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u6240\u6709\u7f13\u51b2\u7684\u5927\u5c0f\u90fd\u589e\u957f\u4e864\u500d\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5411GLFW\u8bf7\u6c42\u4e86\u591a\u91cd\u91c7\u6837\u7f13\u51b2\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u8c03\u7528 glEnable \u5e76\u542f\u7528 GL_MULTISAMPLE \uff0c\u6765\u542f\u7528\u591a\u91cd\u91c7\u6837\u3002\u5728\u5927\u591a\u6570OpenGL\u7684\u9a71\u52a8\u4e0a\uff0c\u591a\u91cd\u91c7\u6837\u90fd\u662f\u9ed8\u8ba4\u542f\u7528\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8c03\u7528\u53ef\u80fd\u4f1a\u6709\u70b9\u591a\u4f59\uff0c\u4f46\u663e\u5f0f\u5730\u8c03\u7528\u4e00\u4e0b\u4f1a\u66f4\u4fdd\u9669\u4e00\u70b9\u3002\u8fd9\u6837\u5b50\u4e0d\u8bba\u662f\u4ec0\u4e48OpenGL\u7684\u5b9e\u73b0\u90fd\u80fd\u591f\u6b63\u5e38\u542f\u7528\u591a\u91cd\u91c7\u6837\u4e86\u3002 glEnable(GL_MULTISAMPLE); \u56e0\u4e3a\u591a\u91cd\u91c7\u6837\u7684\u7b97\u6cd5\u90fd\u5728OpenGL\u9a71\u52a8\u7684\u5149\u6805\u5668\u4e2d\u5b9e\u73b0\u4e86\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u518d\u591a\u505a\u4ec0\u4e48\u3002\u5982\u679c\u73b0\u5728\u518d\u6765\u6e32\u67d3\u672c\u8282\u4e00\u5f00\u59cb\u7684\u90a3\u4e2a\u7eff\u8272\u7684\u7acb\u65b9\u4f53\uff0c\u6211\u4eec\u5e94\u8be5\u80fd\u770b\u5230\u66f4\u5e73\u6ed1\u7684\u8fb9\u7f18\uff1a \u8fd9\u4e2a\u7bb1\u5b50\u770b\u8d77\u6765\u7684\u786e\u8981\u5e73\u6ed1\u591a\u4e86\uff0c\u5982\u679c\u5728\u573a\u666f\u4e2d\u6709\u5176\u5b83\u7684\u7269\u4f53\uff0c\u5b83\u4eec\u4e5f\u4f1a\u770b\u8d77\u6765\u5e73\u6ed1\u5f88\u591a\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u8fd9\u4e2a\u7b80\u5355\u4f8b\u5b50\u7684\u6e90\u4ee3\u7801\u3002","title":"OpenGL\u4e2d\u7684MSAA"},{"location":"04%20Advanced%20OpenGL/11%20Anti%20Aliasing/#msaa","text":"\u7531\u4e8eGLFW\u8d1f\u8d23\u4e86\u521b\u5efa\u591a\u91cd\u91c7\u6837\u7f13\u51b2\uff0c\u542f\u7528MSAA\u975e\u5e38\u7b80\u5355\u3002\u7136\u800c\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u4f7f\u7528\u6211\u4eec\u81ea\u5df1\u7684\u5e27\u7f13\u51b2\u6765\u8fdb\u884c\u79bb\u5c4f\u6e32\u67d3\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5fc5\u987b\u8981\u81ea\u5df1\u52a8\u624b\u751f\u6210\u591a\u91cd\u91c7\u6837\u7f13\u51b2\u4e86\u3002\u73b0\u5728\uff0c\u6211\u4eec \u786e\u5b9e \u9700\u8981\u81ea\u5df1\u521b\u5efa\u591a\u91cd\u91c7\u6837\u7f13\u51b2\u533a\u3002 \u6709\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u521b\u5efa\u591a\u91cd\u91c7\u6837\u7f13\u51b2\uff0c\u5c06\u5176\u4f5c\u4e3a\u5e27\u7f13\u51b2\u7684\u9644\u4ef6\uff1a\u7eb9\u7406\u9644\u4ef6\u548c\u6e32\u67d3\u7f13\u51b2\u9644\u4ef6\uff0c\u8fd9\u548c\u5728 \u5e27\u7f13\u51b2 \u6559\u7a0b\u4e2d\u6240\u8ba8\u8bba\u7684\u666e\u901a\u9644\u4ef6\u5f88\u76f8\u4f3c\u3002","title":"\u79bb\u5c4fMSAA"},{"location":"04%20Advanced%20OpenGL/11%20Anti%20Aliasing/#_3","text":"\u4e3a\u4e86\u521b\u5efa\u4e00\u4e2a\u652f\u6301\u50a8\u5b58\u591a\u4e2a\u91c7\u6837\u70b9\u7684\u7eb9\u7406\uff0c\u6211\u4eec\u4f7f\u7528 glTexImage2DMultisample \u6765\u66ff\u4ee3 glTexImage2D \uff0c\u5b83\u7684\u7eb9\u7406\u76ee\u6807\u662f GL_TEXTURE_2D_MULTISAPLE \u3002 glBindTexture(GL_TEXTURE_2D_MULTISAMPLE, tex); glTexImage2DMultisample(GL_TEXTURE_2D_MULTISAMPLE, samples, GL_RGB, width, height, GL_TRUE); glBindTexture(GL_TEXTURE_2D_MULTISAMPLE, 0); \u5b83\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8bbe\u7f6e\u7684\u662f\u7eb9\u7406\u6240\u62e5\u6709\u7684\u6837\u672c\u4e2a\u6570\u3002\u5982\u679c\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u4e3a GL_TRUE \uff0c\u56fe\u50cf\u5c06\u4f1a\u5bf9\u6bcf\u4e2a\u7eb9\u7d20\u4f7f\u7528\u76f8\u540c\u7684\u6837\u672c\u4f4d\u7f6e\u4ee5\u53ca\u76f8\u540c\u6570\u91cf\u7684\u5b50\u91c7\u6837\u70b9\u4e2a\u6570\u3002 \u6211\u4eec\u4f7f\u7528 glFramebufferTexture2D \u5c06\u591a\u91cd\u91c7\u6837\u7eb9\u7406\u9644\u52a0\u5230\u5e27\u7f13\u51b2\u4e0a\uff0c\u4f46\u8fd9\u91cc\u7eb9\u7406\u7c7b\u578b\u4f7f\u7528\u7684\u662f GL_TEXTURE_2D_MULTISAMPLE \u3002 glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D_MULTISAMPLE, tex, 0); \u5f53\u524d\u7ed1\u5b9a\u7684\u5e27\u7f13\u51b2\u73b0\u5728\u5c31\u6709\u4e86\u4e00\u4e2a\u7eb9\u7406\u56fe\u50cf\u5f62\u5f0f\u7684\u591a\u91cd\u91c7\u6837\u989c\u8272\u7f13\u51b2\u3002","title":"\u591a\u91cd\u91c7\u6837\u7eb9\u7406\u9644\u4ef6"},{"location":"04%20Advanced%20OpenGL/11%20Anti%20Aliasing/#_4","text":"\u548c\u7eb9\u7406\u7c7b\u4f3c\uff0c\u521b\u5efa\u4e00\u4e2a\u591a\u91cd\u91c7\u6837\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u5e76\u4e0d\u96be\u3002\u6211\u4eec\u6240\u8981\u505a\u7684\u53ea\u662f\u5728\u6307\u5b9a\uff08\u5f53\u524d\u7ed1\u5b9a\u7684\uff09\u6e32\u67d3\u7f13\u51b2\u7684\u5185\u5b58\u5b58\u50a8\u65f6\uff0c\u5c06 glRenderbufferStorage \u7684\u8c03\u7528\u6539\u4e3a glRenderbufferStorageMultisample \u5c31\u53ef\u4ee5\u4e86\u3002 glRenderbufferStorageMultisample(GL_RENDERBUFFER, 4, GL_DEPTH24_STENCIL8, width, height); \u51fd\u6570\u4e2d\uff0c\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u540e\u7684\u53c2\u6570\u6211\u4eec\u5c06\u8bbe\u5b9a\u4e3a\u6837\u672c\u7684\u6570\u91cf\uff0c\u5728\u5f53\u524d\u7684\u4f8b\u5b50\u4e2d\u662f4\u3002","title":"\u591a\u91cd\u91c7\u6837\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61"},{"location":"04%20Advanced%20OpenGL/11%20Anti%20Aliasing/#_5","text":"\u6e32\u67d3\u5230\u591a\u91cd\u91c7\u6837\u5e27\u7f13\u51b2\u5bf9\u8c61\u7684\u8fc7\u7a0b\u975e\u5e38\u7b80\u5355\u3002\u53ea\u8981\u6211\u4eec\u5728\u5e27\u7f13\u51b2\u7ed1\u5b9a\u65f6\u7ed8\u5236\u4efb\u4f55\u4e1c\u897f\uff0c\u5149\u6805\u5668\u5c31\u4f1a\u8d1f\u8d23\u6240\u6709\u7684\u591a\u91cd\u91c7\u6837\u8fd0\u7b97\u3002\u6211\u4eec\u6700\u7ec8\u4f1a\u5f97\u5230\u4e00\u4e2a\u591a\u91cd\u91c7\u6837\u989c\u8272\u7f13\u51b2\u4ee5\u53ca/\u6216\u6df1\u5ea6\u548c\u6a21\u677f\u7f13\u51b2\u3002\u56e0\u4e3a\u591a\u91cd\u91c7\u6837\u7f13\u51b2\u6709\u4e00\u70b9\u7279\u522b\uff0c\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u5c06\u5b83\u4eec\u7684\u7f13\u51b2\u56fe\u50cf\u7528\u4e8e\u5176\u4ed6\u8fd0\u7b97\uff0c\u6bd4\u5982\u5728\u7740\u8272\u5668\u4e2d\u5bf9\u5b83\u4eec\u8fdb\u884c\u91c7\u6837\u3002 \u4e00\u4e2a\u591a\u91cd\u91c7\u6837\u7684\u56fe\u50cf\u5305\u542b\u6bd4\u666e\u901a\u56fe\u50cf\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u6240\u8981\u505a\u7684\u662f\u7f29\u5c0f\u6216\u8005 \u8fd8\u539f (Resolve)\u56fe\u50cf\u3002\u591a\u91cd\u91c7\u6837\u5e27\u7f13\u51b2\u7684\u8fd8\u539f\u901a\u5e38\u662f\u901a\u8fc7 glBlitFramebuffer \u6765\u5b8c\u6210\uff0c\u5b83\u80fd\u591f\u5c06\u4e00\u4e2a\u5e27\u7f13\u51b2\u4e2d\u7684\u67d0\u4e2a\u533a\u57df\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u5e27\u7f13\u51b2\u4e2d\uff0c\u5e76\u4e14\u5c06\u591a\u91cd\u91c7\u6837\u7f13\u51b2\u8fd8\u539f\u3002 glBlitFramebuffer \u4f1a\u5c06\u4e00\u4e2a\u75284\u4e2a\u5c4f\u5e55\u7a7a\u95f4\u5750\u6807\u6240\u5b9a\u4e49\u7684 \u6e90 \u533a\u57df\u590d\u5236\u5230\u4e00\u4e2a\u540c\u6837\u75284\u4e2a\u5c4f\u5e55\u7a7a\u95f4\u5750\u6807\u6240\u5b9a\u4e49\u7684 \u76ee\u6807 \u533a\u57df\u4e2d\u3002\u4f60\u53ef\u80fd\u8bb0\u5f97\u5728 \u5e27\u7f13\u51b2 \u6559\u7a0b\u4e2d\uff0c\u5f53\u6211\u4eec\u7ed1\u5b9a\u5230 GL_FRAMEBUFFER \u65f6\uff0c\u6211\u4eec\u662f\u540c\u65f6\u7ed1\u5b9a\u4e86\u8bfb\u53d6\u548c\u7ed8\u5236\u7684\u5e27\u7f13\u51b2\u76ee\u6807\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u5e27\u7f13\u51b2\u5206\u5f00\u7ed1\u5b9a\u81f3 GL_READ_FRAMEBUFFER \u4e0e GL_DRAW_FRAMEBUFFER \u3002 glBlitFramebuffer \u51fd\u6570\u4f1a\u6839\u636e\u8fd9\u4e24\u4e2a\u76ee\u6807\uff0c\u51b3\u5b9a\u54ea\u4e2a\u662f\u6e90\u5e27\u7f13\u51b2\uff0c\u54ea\u4e2a\u662f\u76ee\u6807\u5e27\u7f13\u51b2\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u56fe\u50cf \u4f4d\u5757\u4f20\u9001 (Blit)\u5230\u9ed8\u8ba4\u7684\u5e27\u7f13\u51b2\u4e2d\uff0c\u5c06\u591a\u91cd\u91c7\u6837\u7684\u5e27\u7f13\u51b2\u4f20\u9001\u5230\u5c4f\u5e55\u4e0a\u3002 glBindFramebuffer(GL_READ_FRAMEBUFFER, multisampledFBO); glBindFramebuffer(GL_DRAW_FRAMEBUFFER, 0); glBlitFramebuffer(0, 0, width, height, 0, 0, width, height, GL_COLOR_BUFFER_BIT, GL_NEAREST); \u5982\u679c\u73b0\u5728\u518d\u6765\u6e32\u67d3\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e0e\u4e4b\u524d\u5b8c\u5168\u4e00\u6837\u7684\u7ed3\u679c\uff1a\u4e00\u4e2a\u4f7f\u7528MSAA\u663e\u793a\u51fa\u6765\u7684\u6a44\u6984\u7eff\u8272\u7684\u7acb\u65b9\u4f53\uff0c\u800c\u4e14\u952f\u9f7f\u8fb9\u7f18\u660e\u663e\u51cf\u5c11\u4e86\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u6e90\u4ee3\u7801\u3002 \u4f46\u5982\u679c\u6211\u4eec\u60f3\u8981\u4f7f\u7528\u591a\u91cd\u91c7\u6837\u5e27\u7f13\u51b2\u7684\u7eb9\u7406\u8f93\u51fa\u6765\u505a\u50cf\u662f\u540e\u671f\u5904\u7406\u8fd9\u6837\u7684\u4e8b\u60c5\u5462\uff1f\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u591a\u91cd\u91c7\u6837\u7684\u7eb9\u7406\u3002\u4f46\u6211\u4eec\u80fd\u505a\u7684\u662f\u5c06\u591a\u91cd\u91c7\u6837\u7f13\u51b2\u4f4d\u5757\u4f20\u9001\u5230\u4e00\u4e2a\u6ca1\u6709\u4f7f\u7528\u591a\u91cd\u91c7\u6837\u7eb9\u7406\u9644\u4ef6\u7684FBO\u4e2d\u3002\u7136\u540e\u7528\u8fd9\u4e2a\u666e\u901a\u7684\u989c\u8272\u9644\u4ef6\u6765\u505a\u540e\u671f\u5904\u7406\uff0c\u4ece\u800c\u8fbe\u5230\u6211\u4eec\u7684\u76ee\u7684\u3002\u7136\u800c\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u751f\u6210\u4e00\u4e2a\u65b0\u7684FBO\uff0c\u4f5c\u4e3a\u4e2d\u4ecb\u5e27\u7f13\u51b2\u5bf9\u8c61\uff0c\u5c06\u591a\u91cd\u91c7\u6837\u7f13\u51b2\u8fd8\u539f\u4e3a\u4e00\u4e2a\u80fd\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u7684\u666e\u901a2D\u7eb9\u7406\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u4f2a\u4ee3\u7801\u662f\u8fd9\u6837\u7684\uff1a unsigned int msFBO = CreateFBOWithMultiSampledAttachments(); // \u4f7f\u7528\u666e\u901a\u7684\u7eb9\u7406\u989c\u8272\u9644\u4ef6\u521b\u5efa\u4e00\u4e2a\u65b0\u7684FBO ... glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, screenTexture, 0); ... while(!glfwWindowShouldClose(window)) { ... glBindFramebuffer(msFBO); ClearFrameBuffer(); DrawScene(); // \u5c06\u591a\u91cd\u91c7\u6837\u7f13\u51b2\u8fd8\u539f\u5230\u4e2d\u4ecbFBO\u4e0a glBindFramebuffer(GL_READ_FRAMEBUFFER, msFBO); glBindFramebuffer(GL_DRAW_FRAMEBUFFER, intermediateFBO); glBlitFramebuffer(0, 0, width, height, 0, 0, width, height, GL_COLOR_BUFFER_BIT, GL_NEAREST); // \u73b0\u5728\u573a\u666f\u662f\u4e00\u4e2a2D\u7eb9\u7406\u7f13\u51b2\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u56fe\u50cf\u7528\u6765\u540e\u671f\u5904\u7406 glBindFramebuffer(GL_FRAMEBUFFER, 0); ClearFramebuffer(); glBindTexture(GL_TEXTURE_2D, screenTexture); DrawPostProcessingQuad(); ... } \u5982\u679c\u73b0\u5728\u518d\u5b9e\u73b0 \u5e27\u7f13\u51b2 \u6559\u7a0b\u4e2d\u7684\u540e\u671f\u5904\u7406\u6548\u679c\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u5728\u4e00\u4e2a\u51e0\u4e4e\u6ca1\u6709\u952f\u9f7f\u7684\u573a\u666f\u7eb9\u7406\u4e0a\u8fdb\u884c\u540e\u671f\u5904\u7406\u4e86\u3002\u5982\u679c\u8ba9\u56fe\u50cf\u7070\u5ea6\u5316\uff0c\u770b\u8d77\u6765\u5c06\u4f1a\u662f\u8fd9\u6837\uff1a Important \u56e0\u4e3a\u5c4f\u5e55\u7eb9\u7406\u53c8\u53d8\u56de\u4e86\u4e00\u4e2a\u53ea\u6709\u5355\u4e00\u91c7\u6837\u70b9\u7684\u666e\u901a\u7eb9\u7406\uff0c\u50cf\u662f \u8fb9\u7f18\u68c0\u6d4b \u8fd9\u6837\u7684\u540e\u671f\u5904\u7406\u6ee4\u955c\u4f1a\u91cd\u65b0\u5bfc\u81f4\u952f\u9f7f\u3002\u4e3a\u4e86\u8865\u507f\u8fd9\u4e00\u95ee\u9898\uff0c\u4f60\u53ef\u4ee5\u4e4b\u540e\u5bf9\u7eb9\u7406\u8fdb\u884c\u6a21\u7cca\u5904\u7406\uff0c\u6216\u8005\u60f3\u51fa\u4f60\u81ea\u5df1\u7684\u6297\u952f\u9f7f\u7b97\u6cd5\u3002 \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u5982\u679c\u5c06\u591a\u91cd\u91c7\u6837\u4e0e\u79bb\u5c4f\u6e32\u67d3\u7ed3\u5408\u8d77\u6765\uff0c\u6211\u4eec\u9700\u8981\u81ea\u5df1\u8d1f\u8d23\u4e00\u4e9b\u989d\u5916\u7684\u7ec6\u8282\u3002\u4f46\u6240\u6709\u7684\u8fd9\u4e9b\u7ec6\u8282\u90fd\u662f\u503c\u5f97\u989d\u5916\u7684\u52aa\u529b\u7684\uff0c\u56e0\u4e3a\u591a\u91cd\u91c7\u6837\u80fd\u591f\u663e\u8457\u63d0\u5347\u573a\u666f\u7684\u89c6\u89c9\u8d28\u91cf\u3002\u5f53\u7136\uff0c\u8981\u6ce8\u610f\uff0c\u5982\u679c\u4f7f\u7528\u7684\u91c7\u6837\u70b9\u975e\u5e38\u591a\uff0c\u542f\u7528\u591a\u91cd\u91c7\u6837\u4f1a\u663e\u8457\u964d\u4f4e\u7a0b\u5e8f\u7684\u6027\u80fd\u3002\u5728\u672c\u8282\u5199\u4f5c\u65f6\uff0c\u901a\u5e38\u91c7\u7528\u7684\u662f4\u91c7\u6837\u70b9\u7684MSAA\u3002","title":"\u6e32\u67d3\u5230\u591a\u91cd\u91c7\u6837\u5e27\u7f13\u51b2"},{"location":"04%20Advanced%20OpenGL/11%20Anti%20Aliasing/#_6","text":"\u5c06\u4e00\u4e2a\u591a\u91cd\u91c7\u6837\u7684\u7eb9\u7406\u56fe\u50cf\u4e0d\u8fdb\u884c\u8fd8\u539f\u76f4\u63a5\u4f20\u5165\u7740\u8272\u5668\u4e5f\u662f\u53ef\u884c\u7684\u3002GLSL\u63d0\u4f9b\u4e86\u8fd9\u6837\u7684\u9009\u9879\uff0c\u8ba9\u6211\u4eec\u80fd\u591f\u5bf9\u7eb9\u7406\u56fe\u50cf\u7684\u6bcf\u4e2a\u5b50\u6837\u672c\u8fdb\u884c\u91c7\u6837\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u6211\u4eec\u81ea\u5df1\u7684\u6297\u952f\u9f7f\u7b97\u6cd5\u3002\u5728\u5927\u578b\u7684\u56fe\u5f62\u5e94\u7528\u4e2d\u901a\u5e38\u90fd\u4f1a\u8fd9\u4e48\u505a\u3002 \u8981\u60f3\u83b7\u53d6\u6bcf\u4e2a\u5b50\u6837\u672c\u7684\u989c\u8272\u503c\uff0c\u4f60\u9700\u8981\u5c06\u7eb9\u7406uniform\u91c7\u6837\u5668\u8bbe\u7f6e\u4e3a sampler2DMS \uff0c\u800c\u4e0d\u662f\u5e73\u5e38\u4f7f\u7528\u7684 sampler2D \uff1a uniform sampler2DMS screenTextureMS; \u4f7f\u7528 texelFetch \u51fd\u6570\u5c31\u80fd\u591f\u83b7\u53d6\u6bcf\u4e2a\u5b50\u6837\u672c\u7684\u989c\u8272\u503c\u4e86\uff1a vec4 colorSample = texelFetch(screenTextureMS, TexCoords, 3); // \u7b2c4\u4e2a\u5b50\u6837\u672c \u6211\u4eec\u4e0d\u4f1a\u6df1\u5165\u63a2\u7a76\u81ea\u5b9a\u4e49\u6297\u952f\u9f7f\u6280\u672f\u7684\u7ec6\u8282\uff0c\u8fd9\u91cc\u4ec5\u4ec5\u662f\u7ed9\u4f60\u4e00\u70b9\u542f\u53d1\u3002","title":"\u81ea\u5b9a\u4e49\u6297\u952f\u9f7f\u7b97\u6cd5"},{"location":"05%20Advanced%20Lighting/01%20Advanced%20Lighting/","text":"\u9ad8\u7ea7\u5149\u7167 \u539f\u6587 Advanced Lighting \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u5728 \u5149\u7167 \u5c0f\u8282\u4e2d\uff0c\u6211\u4eec\u7b80\u5355\u5730\u4ecb\u7ecd\u4e86\u98ce\u6c0f\u5149\u7167\u6a21\u578b\uff0c\u5b83\u8ba9\u6211\u4eec\u7684\u573a\u666f\u6709\u4e86\u4e00\u5b9a\u7684\u771f\u5b9e\u611f\u3002\u867d\u7136\u98ce\u6c0f\u6a21\u578b\u770b\u8d77\u6765\u5df2\u7ecf\u5f88\u4e0d\u9519\u4e86\uff0c\u4f46\u662f\u4f7f\u7528\u5b83\u7684\u65f6\u5019\u4ecd\u7136\u5b58\u5728\u4e00\u4e9b\u7ec6\u8282\u95ee\u9898\uff0c\u6211\u4eec\u5c06\u5728\u8fd9\u4e00\u8282\u91cc\u8ba8\u8bba\u5b83\u4eec\u3002 Blinn-Phong \u98ce\u6c0f\u5149\u7167\u4e0d\u4ec5\u5bf9\u771f\u5b9e\u5149\u7167\u6709\u5f88\u597d\u7684\u8fd1\u4f3c\uff0c\u800c\u4e14\u6027\u80fd\u4e5f\u5f88\u9ad8\u3002\u4f46\u662f\u5b83\u7684\u955c\u9762\u53cd\u5c04\u4f1a\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\u51fa\u73b0\u95ee\u9898\uff0c\u7279\u522b\u662f\u7269\u4f53\u53cd\u5149\u5ea6\u5f88\u4f4e\u65f6\uff0c\u4f1a\u5bfc\u81f4\u5927\u7247\uff08\u7c97\u7cd9\u7684\uff09\u9ad8\u5149\u533a\u57df\u3002\u4e0b\u9762\u8fd9\u5f20\u56fe\u5c55\u793a\u4e86\u5f53\u53cd\u5149\u5ea6\u4e3a1.0\u65f6\u5730\u677f\u4f1a\u51fa\u73b0\u7684\u6548\u679c\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u5728\u955c\u9762\u9ad8\u5149\u533a\u57df\u7684\u8fb9\u7f18\u51fa\u73b0\u4e86\u4e00\u9053\u5f88\u660e\u663e\u7684\u65ad\u5c42\u3002\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u7684\u539f\u56e0\u662f\u89c2\u5bdf\u5411\u91cf\u548c\u53cd\u5c04\u5411\u91cf\u95f4\u7684\u5939\u89d2\u4e0d\u80fd\u5927\u4e8e90\u5ea6\u3002\u5982\u679c\u70b9\u79ef\u7684\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u955c\u9762\u5149\u5206\u91cf\u4f1a\u53d8\u4e3a0.0\u3002\u4f60\u53ef\u80fd\u4f1a\u89c9\u5f97\uff0c\u5f53\u5149\u7ebf\u4e0e\u89c6\u7ebf\u5939\u89d2\u5927\u4e8e90\u5ea6\u65f6\u4f60\u5e94\u8be5\u4e0d\u4f1a\u63a5\u6536\u5230\u4efb\u4f55\u5149\u624d\u5bf9\uff0c\u6240\u4ee5\u8fd9\u4e0d\u662f\u4ec0\u4e48\u95ee\u9898\u3002 \u7136\u800c\uff0c\u8fd9\u79cd\u60f3\u6cd5\u4ec5\u4ec5\u53ea\u9002\u7528\u4e8e\u6f2b\u53cd\u5c04\u5206\u91cf\u3002\u5f53\u8003\u8651\u6f2b\u53cd\u5c04\u5149\u7684\u65f6\u5019\uff0c\u5982\u679c\u6cd5\u7ebf\u548c\u5149\u6e90\u5939\u89d2\u5927\u4e8e90\u5ea6\uff0c\u5149\u6e90\u4f1a\u5904\u4e8e\u88ab\u7167\u8868\u9762\u7684\u4e0b\u65b9\uff0c\u8fd9\u4e2a\u65f6\u5019\u5149\u7167\u7684\u6f2b\u53cd\u5c04\u5206\u91cf\u7684\u786e\u662f\u4e3a0.0\u3002\u4f46\u662f\uff0c\u5728\u8003\u8651\u955c\u9762\u9ad8\u5149\u65f6\uff0c\u6211\u4eec\u6d4b\u91cf\u7684\u89d2\u5ea6\u5e76\u4e0d\u662f\u5149\u6e90\u4e0e\u6cd5\u7ebf\u7684\u5939\u89d2\uff0c\u800c\u662f\u89c6\u7ebf\u4e0e\u53cd\u5c04\u5149\u7ebf\u5411\u91cf\u7684\u5939\u89d2\u3002\u770b\u4e00\u4e0b\u4e0b\u9762\u8fd9\u4e24\u5f20\u56fe\uff1a \u73b0\u5728\u95ee\u9898\u5c31\u5e94\u8be5\u5f88\u660e\u663e\u4e86\u3002\u5de6\u56fe\u4e2d\u662f\u6211\u4eec\u719f\u6089\u7684\u98ce\u6c0f\u5149\u7167\u4e2d\u7684\u53cd\u5c04\u5411\u91cf\uff0c\u5176\u4e2d$\\theta$\u89d2\u5c0f\u4e8e90\u5ea6\u3002\u800c\u53f3\u56fe\u4e2d\uff0c\u89c6\u7ebf\u4e0e\u53cd\u5c04\u65b9\u5411\u4e4b\u95f4\u7684\u5939\u89d2\u660e\u663e\u5927\u4e8e90\u5ea6\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u955c\u9762\u5149\u5206\u91cf\u4f1a\u53d8\u4e3a0.0\u3002\u8fd9\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u4e0d\u662f\u4ec0\u4e48\u95ee\u9898\uff0c\u56e0\u4e3a\u89c2\u5bdf\u65b9\u5411\u79bb\u53cd\u5c04\u65b9\u5411\u90fd\u975e\u5e38\u8fdc\u3002\u7136\u800c\uff0c\u5f53\u7269\u4f53\u7684\u53cd\u5149\u5ea6\u975e\u5e38\u5c0f\u65f6\uff0c\u5b83\u4ea7\u751f\u7684\u955c\u9762\u9ad8\u5149\u534a\u5f84\u8db3\u4ee5\u8ba9\u8fd9\u4e9b\u76f8\u53cd\u65b9\u5411\u7684\u5149\u7ebf\u5bf9\u4eae\u5ea6\u4ea7\u751f\u8db3\u591f\u5927\u7684\u5f71\u54cd\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5c31\u4e0d\u80fd\u5ffd\u7565\u5b83\u4eec\u5bf9\u955c\u9762\u5149\u5206\u91cf\u7684\u8d21\u732e\u4e86\u3002 1977\u5e74\uff0cJames F. Blinn\u5728\u98ce\u6c0f\u7740\u8272\u6a21\u578b\u4e0a\u52a0\u4ee5\u62d3\u5c55\uff0c\u5f15\u5165\u4e86 Blinn-Phong \u7740\u8272\u6a21\u578b\u3002Blinn-Phong\u6a21\u578b\u4e0e\u98ce\u6c0f\u6a21\u578b\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u662f\u5b83\u5bf9\u955c\u9762\u5149\u6a21\u578b\u7684\u5904\u7406\u4e0a\u6709\u4e00\u4e9b\u4e0d\u540c\uff0c\u8ba9\u6211\u4eec\u80fd\u591f\u89e3\u51b3\u4e4b\u524d\u63d0\u5230\u7684\u95ee\u9898\u3002Blinn-Phong\u6a21\u578b\u4e0d\u518d\u4f9d\u8d56\u4e8e\u53cd\u5c04\u5411\u91cf\uff0c\u800c\u662f\u91c7\u7528\u4e86\u6240\u8c13\u7684 \u534a\u7a0b\u5411\u91cf (Halfway Vector)\uff0c\u5373\u5149\u7ebf\u4e0e\u89c6\u7ebf\u5939\u89d2\u4e00\u534a\u65b9\u5411\u4e0a\u7684\u4e00\u4e2a\u5355\u4f4d\u5411\u91cf\u3002\u5f53\u534a\u7a0b\u5411\u91cf\u4e0e\u6cd5\u7ebf\u5411\u91cf\u8d8a\u63a5\u8fd1\u65f6\uff0c\u955c\u9762\u5149\u5206\u91cf\u5c31\u8d8a\u5927\u3002 \u5f53\u89c6\u7ebf\u6b63\u597d\u4e0e\uff08\u73b0\u5728\u4e0d\u9700\u8981\u7684\uff09\u53cd\u5c04\u5411\u91cf\u5bf9\u9f50\u65f6\uff0c\u534a\u7a0b\u5411\u91cf\u5c31\u4f1a\u4e0e\u6cd5\u7ebf\u5b8c\u7f8e\u5951\u5408\u3002\u6240\u4ee5\u5f53\u89c2\u5bdf\u8005\u89c6\u7ebf\u8d8a\u63a5\u8fd1\u4e8e\u539f\u672c\u53cd\u5c04\u5149\u7ebf\u7684\u65b9\u5411\u65f6\uff0c\u955c\u9762\u9ad8\u5149\u5c31\u4f1a\u8d8a\u5f3a\u3002 \u73b0\u5728\uff0c\u4e0d\u8bba\u89c2\u5bdf\u8005\u5411\u54ea\u4e2a\u65b9\u5411\u770b\uff0c\u534a\u7a0b\u5411\u91cf\u4e0e\u8868\u9762\u6cd5\u7ebf\u4e4b\u95f4\u7684\u5939\u89d2\u90fd\u4e0d\u4f1a\u8d85\u8fc790\u5ea6\uff08\u9664\u975e\u5149\u6e90\u5728\u8868\u9762\u4ee5\u4e0b\uff09\u3002\u5b83\u4ea7\u751f\u7684\u6548\u679c\u4f1a\u4e0e\u98ce\u6c0f\u5149\u7167\u6709\u4e9b\u8bb8\u4e0d\u540c\uff0c\u4f46\u662f\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u770b\u8d77\u6765\u4f1a\u66f4\u81ea\u7136\u4e00\u70b9\uff0c\u7279\u522b\u662f\u4f4e\u9ad8\u5149\u7684\u533a\u57df\u3002Blinn-Phong\u7740\u8272\u6a21\u578b\u6b63\u662f\u65e9\u671f\u56fa\u5b9a\u6e32\u67d3\u7ba1\u7ebf\u65f6\u4ee3\u65f6OpenGL\u6240\u91c7\u7528\u7684\u5149\u7167\u6a21\u578b\u3002 \u83b7\u53d6\u534a\u7a0b\u5411\u91cf\u7684\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5c06\u5149\u7ebf\u7684\u65b9\u5411\u5411\u91cf\u548c\u89c2\u5bdf\u5411\u91cf\u52a0\u5230\u4e00\u8d77\uff0c\u5e76\u5c06\u7ed3\u679c\u6b63\u89c4\u5316(Normalize)\u5c31\u53ef\u4ee5\u4e86\uff1a \\bar{H} = \\frac{\\bar{L} + \\bar{V}}{||\\bar{L} + \\bar{V}||} \u7ffb\u8bd1\u6210GLSL\u4ee3\u7801\u5982\u4e0b\uff1a vec3 lightDir = normalize(lightPos - FragPos); vec3 viewDir = normalize(viewPos - FragPos); vec3 halfwayDir = normalize(lightDir + viewDir); \u63a5\u4e0b\u6765\uff0c\u955c\u9762\u5149\u5206\u91cf\u7684\u5b9e\u9645\u8ba1\u7b97\u53ea\u4e0d\u8fc7\u662f\u5bf9\u8868\u9762\u6cd5\u7ebf\u548c\u534a\u7a0b\u5411\u91cf\u8fdb\u884c\u4e00\u6b21\u7ea6\u675f\u70b9\u4e58(Clamped Dot Product)\uff0c\u8ba9\u70b9\u4e58\u7ed3\u679c\u4e0d\u4e3a\u8d1f\uff0c\u4ece\u800c\u83b7\u53d6\u5b83\u4eec\u4e4b\u95f4\u5939\u89d2\u7684\u4f59\u5f26\u503c\uff0c\u4e4b\u540e\u6211\u4eec\u5bf9\u8fd9\u4e2a\u503c\u53d6\u53cd\u5149\u5ea6\u6b21\u65b9\uff1a float spec = pow(max(dot(normal, halfwayDir), 0.0), shininess); vec3 specular = lightColor * spec; \u9664\u6b64\u4e4b\u5916Blinn-Phong\u6a21\u578b\u5c31\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u4e86\uff0cBlinn-Phong\u4e0e\u98ce\u6c0f\u6a21\u578b\u552f\u4e00\u7684\u533a\u522b\u5c31\u662f\uff0cBlinn-Phong\u6d4b\u91cf\u7684\u662f\u6cd5\u7ebf\u4e0e\u534a\u7a0b\u5411\u91cf\u4e4b\u95f4\u7684\u5939\u89d2\uff0c\u800c\u98ce\u6c0f\u6a21\u578b\u6d4b\u91cf\u7684\u662f\u89c2\u5bdf\u65b9\u5411\u4e0e\u53cd\u5c04\u5411\u91cf\u95f4\u7684\u5939\u89d2\u3002 \u5728\u5f15\u5165\u534a\u7a0b\u5411\u91cf\u4e4b\u540e\uff0c\u6211\u4eec\u73b0\u5728\u5e94\u8be5\u5c31\u4e0d\u4f1a\u518d\u770b\u5230\u98ce\u6c0f\u5149\u7167\u4e2d\u9ad8\u5149\u65ad\u5c42\u7684\u60c5\u51b5\u4e86\u3002\u4e0b\u9762\u4e24\u4e2a\u56fe\u7247\u5c55\u793a\u7684\u662f\u4e24\u79cd\u65b9\u6cd5\u5728\u955c\u9762\u5149\u5206\u91cf\u4e3a0.5\u65f6\u7684\u5bf9\u6bd4\uff1a \u9664\u6b64\u4e4b\u5916\uff0c\u98ce\u6c0f\u6a21\u578b\u4e0eBlinn-Phong\u6a21\u578b\u4e5f\u6709\u4e00\u4e9b\u7ec6\u5fae\u7684\u5dee\u522b\uff1a\u534a\u7a0b\u5411\u91cf\u4e0e\u8868\u9762\u6cd5\u7ebf\u7684\u5939\u89d2\u901a\u5e38\u4f1a\u5c0f\u4e8e\u89c2\u5bdf\u4e0e\u53cd\u5c04\u5411\u91cf\u7684\u5939\u89d2\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u60f3\u83b7\u5f97\u548c\u98ce\u6c0f\u7740\u8272\u7c7b\u4f3c\u7684\u6548\u679c\uff0c\u5c31\u5fc5\u987b\u5728\u4f7f\u7528Blinn-Phong\u6a21\u578b\u65f6\u5c06\u955c\u9762\u53cd\u5149\u5ea6\u8bbe\u7f6e\u66f4\u9ad8\u4e00\u70b9\u3002\u901a\u5e38\u6211\u4eec\u4f1a\u9009\u62e9\u98ce\u6c0f\u7740\u8272\u65f6\u53cd\u5149\u5ea6\u5206\u91cf\u76842\u52304\u500d\u3002 \u4e0b\u9762\u662f\u98ce\u6c0f\u7740\u8272\u53cd\u5149\u5ea6\u4e3a8.0\uff0cBlinn-Phong\u7740\u8272\u53cd\u5149\u5ea6\u4e3a32.0\u65f6\u7684\u4e00\u4e2a\u5bf9\u6bd4\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\uff0cBlinn-Phong\u7684\u955c\u9762\u5149\u5206\u91cf\u4f1a\u6bd4\u98ce\u6c0f\u6a21\u578b\u66f4\u9510\u5229\u4e00\u4e9b\u3002\u4e3a\u4e86\u5f97\u5230\u4e0e\u98ce\u6c0f\u6a21\u578b\u7c7b\u4f3c\u7684\u7ed3\u679c\uff0c\u4f60\u53ef\u80fd\u4f1a\u9700\u8981\u4e0d\u65ad\u8fdb\u884c\u4e00\u4e9b\u5fae\u8c03\uff0c\u4f46Blinn-Phong\u6a21\u578b\u901a\u5e38\u4f1a\u4ea7\u51fa\u66f4\u771f\u5b9e\u7684\u7ed3\u679c\u3002 \u8fd9\u91cc\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u7247\u6bb5\u7740\u8272\u5668\uff0c\u8ba9\u6211\u4eec\u80fd\u591f\u5728\u98ce\u6c0f\u53cd\u5c04\u4e0eBlinn-Phong\u53cd\u5c04\u95f4\u8fdb\u884c\u5207\u6362\uff1a void main() { [...] float spec = 0.0; if(blinn) { vec3 halfwayDir = normalize(lightDir + viewDir); spec = pow(max(dot(normal, halfwayDir), 0.0), 16.0); } else { vec3 reflectDir = reflect(-lightDir, normal); spec = pow(max(dot(viewDir, reflectDir), 0.0), 8.0); } \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u8fd9\u4e2aDemo\u7684\u6e90\u4ee3\u7801\u3002\u4f60\u53ef\u4ee5\u6309\u4e0b B \u952e\u6765\u5207\u6362\u98ce\u6c0f\u5149\u7167\u4e0eBlinn-Phong\u5149\u7167\u3002","title":"\u9ad8\u7ea7\u5149\u7167"},{"location":"05%20Advanced%20Lighting/01%20Advanced%20Lighting/#_1","text":"\u539f\u6587 Advanced Lighting \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 \u5728 \u5149\u7167 \u5c0f\u8282\u4e2d\uff0c\u6211\u4eec\u7b80\u5355\u5730\u4ecb\u7ecd\u4e86\u98ce\u6c0f\u5149\u7167\u6a21\u578b\uff0c\u5b83\u8ba9\u6211\u4eec\u7684\u573a\u666f\u6709\u4e86\u4e00\u5b9a\u7684\u771f\u5b9e\u611f\u3002\u867d\u7136\u98ce\u6c0f\u6a21\u578b\u770b\u8d77\u6765\u5df2\u7ecf\u5f88\u4e0d\u9519\u4e86\uff0c\u4f46\u662f\u4f7f\u7528\u5b83\u7684\u65f6\u5019\u4ecd\u7136\u5b58\u5728\u4e00\u4e9b\u7ec6\u8282\u95ee\u9898\uff0c\u6211\u4eec\u5c06\u5728\u8fd9\u4e00\u8282\u91cc\u8ba8\u8bba\u5b83\u4eec\u3002","title":"\u9ad8\u7ea7\u5149\u7167"},{"location":"05%20Advanced%20Lighting/01%20Advanced%20Lighting/#blinn-phong","text":"\u98ce\u6c0f\u5149\u7167\u4e0d\u4ec5\u5bf9\u771f\u5b9e\u5149\u7167\u6709\u5f88\u597d\u7684\u8fd1\u4f3c\uff0c\u800c\u4e14\u6027\u80fd\u4e5f\u5f88\u9ad8\u3002\u4f46\u662f\u5b83\u7684\u955c\u9762\u53cd\u5c04\u4f1a\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\u51fa\u73b0\u95ee\u9898\uff0c\u7279\u522b\u662f\u7269\u4f53\u53cd\u5149\u5ea6\u5f88\u4f4e\u65f6\uff0c\u4f1a\u5bfc\u81f4\u5927\u7247\uff08\u7c97\u7cd9\u7684\uff09\u9ad8\u5149\u533a\u57df\u3002\u4e0b\u9762\u8fd9\u5f20\u56fe\u5c55\u793a\u4e86\u5f53\u53cd\u5149\u5ea6\u4e3a1.0\u65f6\u5730\u677f\u4f1a\u51fa\u73b0\u7684\u6548\u679c\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u5728\u955c\u9762\u9ad8\u5149\u533a\u57df\u7684\u8fb9\u7f18\u51fa\u73b0\u4e86\u4e00\u9053\u5f88\u660e\u663e\u7684\u65ad\u5c42\u3002\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u7684\u539f\u56e0\u662f\u89c2\u5bdf\u5411\u91cf\u548c\u53cd\u5c04\u5411\u91cf\u95f4\u7684\u5939\u89d2\u4e0d\u80fd\u5927\u4e8e90\u5ea6\u3002\u5982\u679c\u70b9\u79ef\u7684\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u955c\u9762\u5149\u5206\u91cf\u4f1a\u53d8\u4e3a0.0\u3002\u4f60\u53ef\u80fd\u4f1a\u89c9\u5f97\uff0c\u5f53\u5149\u7ebf\u4e0e\u89c6\u7ebf\u5939\u89d2\u5927\u4e8e90\u5ea6\u65f6\u4f60\u5e94\u8be5\u4e0d\u4f1a\u63a5\u6536\u5230\u4efb\u4f55\u5149\u624d\u5bf9\uff0c\u6240\u4ee5\u8fd9\u4e0d\u662f\u4ec0\u4e48\u95ee\u9898\u3002 \u7136\u800c\uff0c\u8fd9\u79cd\u60f3\u6cd5\u4ec5\u4ec5\u53ea\u9002\u7528\u4e8e\u6f2b\u53cd\u5c04\u5206\u91cf\u3002\u5f53\u8003\u8651\u6f2b\u53cd\u5c04\u5149\u7684\u65f6\u5019\uff0c\u5982\u679c\u6cd5\u7ebf\u548c\u5149\u6e90\u5939\u89d2\u5927\u4e8e90\u5ea6\uff0c\u5149\u6e90\u4f1a\u5904\u4e8e\u88ab\u7167\u8868\u9762\u7684\u4e0b\u65b9\uff0c\u8fd9\u4e2a\u65f6\u5019\u5149\u7167\u7684\u6f2b\u53cd\u5c04\u5206\u91cf\u7684\u786e\u662f\u4e3a0.0\u3002\u4f46\u662f\uff0c\u5728\u8003\u8651\u955c\u9762\u9ad8\u5149\u65f6\uff0c\u6211\u4eec\u6d4b\u91cf\u7684\u89d2\u5ea6\u5e76\u4e0d\u662f\u5149\u6e90\u4e0e\u6cd5\u7ebf\u7684\u5939\u89d2\uff0c\u800c\u662f\u89c6\u7ebf\u4e0e\u53cd\u5c04\u5149\u7ebf\u5411\u91cf\u7684\u5939\u89d2\u3002\u770b\u4e00\u4e0b\u4e0b\u9762\u8fd9\u4e24\u5f20\u56fe\uff1a \u73b0\u5728\u95ee\u9898\u5c31\u5e94\u8be5\u5f88\u660e\u663e\u4e86\u3002\u5de6\u56fe\u4e2d\u662f\u6211\u4eec\u719f\u6089\u7684\u98ce\u6c0f\u5149\u7167\u4e2d\u7684\u53cd\u5c04\u5411\u91cf\uff0c\u5176\u4e2d$\\theta$\u89d2\u5c0f\u4e8e90\u5ea6\u3002\u800c\u53f3\u56fe\u4e2d\uff0c\u89c6\u7ebf\u4e0e\u53cd\u5c04\u65b9\u5411\u4e4b\u95f4\u7684\u5939\u89d2\u660e\u663e\u5927\u4e8e90\u5ea6\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u955c\u9762\u5149\u5206\u91cf\u4f1a\u53d8\u4e3a0.0\u3002\u8fd9\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u4e0d\u662f\u4ec0\u4e48\u95ee\u9898\uff0c\u56e0\u4e3a\u89c2\u5bdf\u65b9\u5411\u79bb\u53cd\u5c04\u65b9\u5411\u90fd\u975e\u5e38\u8fdc\u3002\u7136\u800c\uff0c\u5f53\u7269\u4f53\u7684\u53cd\u5149\u5ea6\u975e\u5e38\u5c0f\u65f6\uff0c\u5b83\u4ea7\u751f\u7684\u955c\u9762\u9ad8\u5149\u534a\u5f84\u8db3\u4ee5\u8ba9\u8fd9\u4e9b\u76f8\u53cd\u65b9\u5411\u7684\u5149\u7ebf\u5bf9\u4eae\u5ea6\u4ea7\u751f\u8db3\u591f\u5927\u7684\u5f71\u54cd\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5c31\u4e0d\u80fd\u5ffd\u7565\u5b83\u4eec\u5bf9\u955c\u9762\u5149\u5206\u91cf\u7684\u8d21\u732e\u4e86\u3002 1977\u5e74\uff0cJames F. Blinn\u5728\u98ce\u6c0f\u7740\u8272\u6a21\u578b\u4e0a\u52a0\u4ee5\u62d3\u5c55\uff0c\u5f15\u5165\u4e86 Blinn-Phong \u7740\u8272\u6a21\u578b\u3002Blinn-Phong\u6a21\u578b\u4e0e\u98ce\u6c0f\u6a21\u578b\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u662f\u5b83\u5bf9\u955c\u9762\u5149\u6a21\u578b\u7684\u5904\u7406\u4e0a\u6709\u4e00\u4e9b\u4e0d\u540c\uff0c\u8ba9\u6211\u4eec\u80fd\u591f\u89e3\u51b3\u4e4b\u524d\u63d0\u5230\u7684\u95ee\u9898\u3002Blinn-Phong\u6a21\u578b\u4e0d\u518d\u4f9d\u8d56\u4e8e\u53cd\u5c04\u5411\u91cf\uff0c\u800c\u662f\u91c7\u7528\u4e86\u6240\u8c13\u7684 \u534a\u7a0b\u5411\u91cf (Halfway Vector)\uff0c\u5373\u5149\u7ebf\u4e0e\u89c6\u7ebf\u5939\u89d2\u4e00\u534a\u65b9\u5411\u4e0a\u7684\u4e00\u4e2a\u5355\u4f4d\u5411\u91cf\u3002\u5f53\u534a\u7a0b\u5411\u91cf\u4e0e\u6cd5\u7ebf\u5411\u91cf\u8d8a\u63a5\u8fd1\u65f6\uff0c\u955c\u9762\u5149\u5206\u91cf\u5c31\u8d8a\u5927\u3002 \u5f53\u89c6\u7ebf\u6b63\u597d\u4e0e\uff08\u73b0\u5728\u4e0d\u9700\u8981\u7684\uff09\u53cd\u5c04\u5411\u91cf\u5bf9\u9f50\u65f6\uff0c\u534a\u7a0b\u5411\u91cf\u5c31\u4f1a\u4e0e\u6cd5\u7ebf\u5b8c\u7f8e\u5951\u5408\u3002\u6240\u4ee5\u5f53\u89c2\u5bdf\u8005\u89c6\u7ebf\u8d8a\u63a5\u8fd1\u4e8e\u539f\u672c\u53cd\u5c04\u5149\u7ebf\u7684\u65b9\u5411\u65f6\uff0c\u955c\u9762\u9ad8\u5149\u5c31\u4f1a\u8d8a\u5f3a\u3002 \u73b0\u5728\uff0c\u4e0d\u8bba\u89c2\u5bdf\u8005\u5411\u54ea\u4e2a\u65b9\u5411\u770b\uff0c\u534a\u7a0b\u5411\u91cf\u4e0e\u8868\u9762\u6cd5\u7ebf\u4e4b\u95f4\u7684\u5939\u89d2\u90fd\u4e0d\u4f1a\u8d85\u8fc790\u5ea6\uff08\u9664\u975e\u5149\u6e90\u5728\u8868\u9762\u4ee5\u4e0b\uff09\u3002\u5b83\u4ea7\u751f\u7684\u6548\u679c\u4f1a\u4e0e\u98ce\u6c0f\u5149\u7167\u6709\u4e9b\u8bb8\u4e0d\u540c\uff0c\u4f46\u662f\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u770b\u8d77\u6765\u4f1a\u66f4\u81ea\u7136\u4e00\u70b9\uff0c\u7279\u522b\u662f\u4f4e\u9ad8\u5149\u7684\u533a\u57df\u3002Blinn-Phong\u7740\u8272\u6a21\u578b\u6b63\u662f\u65e9\u671f\u56fa\u5b9a\u6e32\u67d3\u7ba1\u7ebf\u65f6\u4ee3\u65f6OpenGL\u6240\u91c7\u7528\u7684\u5149\u7167\u6a21\u578b\u3002 \u83b7\u53d6\u534a\u7a0b\u5411\u91cf\u7684\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5c06\u5149\u7ebf\u7684\u65b9\u5411\u5411\u91cf\u548c\u89c2\u5bdf\u5411\u91cf\u52a0\u5230\u4e00\u8d77\uff0c\u5e76\u5c06\u7ed3\u679c\u6b63\u89c4\u5316(Normalize)\u5c31\u53ef\u4ee5\u4e86\uff1a \\bar{H} = \\frac{\\bar{L} + \\bar{V}}{||\\bar{L} + \\bar{V}||} \u7ffb\u8bd1\u6210GLSL\u4ee3\u7801\u5982\u4e0b\uff1a vec3 lightDir = normalize(lightPos - FragPos); vec3 viewDir = normalize(viewPos - FragPos); vec3 halfwayDir = normalize(lightDir + viewDir); \u63a5\u4e0b\u6765\uff0c\u955c\u9762\u5149\u5206\u91cf\u7684\u5b9e\u9645\u8ba1\u7b97\u53ea\u4e0d\u8fc7\u662f\u5bf9\u8868\u9762\u6cd5\u7ebf\u548c\u534a\u7a0b\u5411\u91cf\u8fdb\u884c\u4e00\u6b21\u7ea6\u675f\u70b9\u4e58(Clamped Dot Product)\uff0c\u8ba9\u70b9\u4e58\u7ed3\u679c\u4e0d\u4e3a\u8d1f\uff0c\u4ece\u800c\u83b7\u53d6\u5b83\u4eec\u4e4b\u95f4\u5939\u89d2\u7684\u4f59\u5f26\u503c\uff0c\u4e4b\u540e\u6211\u4eec\u5bf9\u8fd9\u4e2a\u503c\u53d6\u53cd\u5149\u5ea6\u6b21\u65b9\uff1a float spec = pow(max(dot(normal, halfwayDir), 0.0), shininess); vec3 specular = lightColor * spec; \u9664\u6b64\u4e4b\u5916Blinn-Phong\u6a21\u578b\u5c31\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u4e86\uff0cBlinn-Phong\u4e0e\u98ce\u6c0f\u6a21\u578b\u552f\u4e00\u7684\u533a\u522b\u5c31\u662f\uff0cBlinn-Phong\u6d4b\u91cf\u7684\u662f\u6cd5\u7ebf\u4e0e\u534a\u7a0b\u5411\u91cf\u4e4b\u95f4\u7684\u5939\u89d2\uff0c\u800c\u98ce\u6c0f\u6a21\u578b\u6d4b\u91cf\u7684\u662f\u89c2\u5bdf\u65b9\u5411\u4e0e\u53cd\u5c04\u5411\u91cf\u95f4\u7684\u5939\u89d2\u3002 \u5728\u5f15\u5165\u534a\u7a0b\u5411\u91cf\u4e4b\u540e\uff0c\u6211\u4eec\u73b0\u5728\u5e94\u8be5\u5c31\u4e0d\u4f1a\u518d\u770b\u5230\u98ce\u6c0f\u5149\u7167\u4e2d\u9ad8\u5149\u65ad\u5c42\u7684\u60c5\u51b5\u4e86\u3002\u4e0b\u9762\u4e24\u4e2a\u56fe\u7247\u5c55\u793a\u7684\u662f\u4e24\u79cd\u65b9\u6cd5\u5728\u955c\u9762\u5149\u5206\u91cf\u4e3a0.5\u65f6\u7684\u5bf9\u6bd4\uff1a \u9664\u6b64\u4e4b\u5916\uff0c\u98ce\u6c0f\u6a21\u578b\u4e0eBlinn-Phong\u6a21\u578b\u4e5f\u6709\u4e00\u4e9b\u7ec6\u5fae\u7684\u5dee\u522b\uff1a\u534a\u7a0b\u5411\u91cf\u4e0e\u8868\u9762\u6cd5\u7ebf\u7684\u5939\u89d2\u901a\u5e38\u4f1a\u5c0f\u4e8e\u89c2\u5bdf\u4e0e\u53cd\u5c04\u5411\u91cf\u7684\u5939\u89d2\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u60f3\u83b7\u5f97\u548c\u98ce\u6c0f\u7740\u8272\u7c7b\u4f3c\u7684\u6548\u679c\uff0c\u5c31\u5fc5\u987b\u5728\u4f7f\u7528Blinn-Phong\u6a21\u578b\u65f6\u5c06\u955c\u9762\u53cd\u5149\u5ea6\u8bbe\u7f6e\u66f4\u9ad8\u4e00\u70b9\u3002\u901a\u5e38\u6211\u4eec\u4f1a\u9009\u62e9\u98ce\u6c0f\u7740\u8272\u65f6\u53cd\u5149\u5ea6\u5206\u91cf\u76842\u52304\u500d\u3002 \u4e0b\u9762\u662f\u98ce\u6c0f\u7740\u8272\u53cd\u5149\u5ea6\u4e3a8.0\uff0cBlinn-Phong\u7740\u8272\u53cd\u5149\u5ea6\u4e3a32.0\u65f6\u7684\u4e00\u4e2a\u5bf9\u6bd4\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\uff0cBlinn-Phong\u7684\u955c\u9762\u5149\u5206\u91cf\u4f1a\u6bd4\u98ce\u6c0f\u6a21\u578b\u66f4\u9510\u5229\u4e00\u4e9b\u3002\u4e3a\u4e86\u5f97\u5230\u4e0e\u98ce\u6c0f\u6a21\u578b\u7c7b\u4f3c\u7684\u7ed3\u679c\uff0c\u4f60\u53ef\u80fd\u4f1a\u9700\u8981\u4e0d\u65ad\u8fdb\u884c\u4e00\u4e9b\u5fae\u8c03\uff0c\u4f46Blinn-Phong\u6a21\u578b\u901a\u5e38\u4f1a\u4ea7\u51fa\u66f4\u771f\u5b9e\u7684\u7ed3\u679c\u3002 \u8fd9\u91cc\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u7247\u6bb5\u7740\u8272\u5668\uff0c\u8ba9\u6211\u4eec\u80fd\u591f\u5728\u98ce\u6c0f\u53cd\u5c04\u4e0eBlinn-Phong\u53cd\u5c04\u95f4\u8fdb\u884c\u5207\u6362\uff1a void main() { [...] float spec = 0.0; if(blinn) { vec3 halfwayDir = normalize(lightDir + viewDir); spec = pow(max(dot(normal, halfwayDir), 0.0), 16.0); } else { vec3 reflectDir = reflect(-lightDir, normal); spec = pow(max(dot(viewDir, reflectDir), 0.0), 8.0); } \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u8fd9\u4e2aDemo\u7684\u6e90\u4ee3\u7801\u3002\u4f60\u53ef\u4ee5\u6309\u4e0b B \u952e\u6765\u5207\u6362\u98ce\u6c0f\u5149\u7167\u4e0eBlinn-Phong\u5149\u7167\u3002","title":"Blinn-Phong"},{"location":"05%20Advanced%20Lighting/02%20Gamma%20Correction/","text":"Gamma\u6821\u6b63 \u539f\u6587 Gamma Correction \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django \u6821\u5bf9 AoZhang Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u5f53\u6211\u4eec\u8ba1\u7b97\u51fa\u573a\u666f\u4e2d\u6240\u6709\u50cf\u7d20\u7684\u6700\u7ec8\u989c\u8272\u4ee5\u540e\uff0c\u6211\u4eec\u5c31\u5fc5\u987b\u628a\u5b83\u4eec\u663e\u793a\u5728\u663e\u793a\u5668\u4e0a\u3002\u8fc7\u53bb\uff0c\u5927\u591a\u6570\u663e\u793a\u5668\u662f\u9634\u6781\u5c04\u7ebf\u7ba1\u663e\u793a\u5668\uff08CRT\uff09\u3002\u8fd9\u4e9b\u663e\u793a\u5668\u6709\u4e00\u4e2a\u7269\u7406\u7279\u6027\u5c31\u662f\u4e24\u500d\u7684\u8f93\u5165\u7535\u538b\u5e76\u4e0d\u80fd\u4ea7\u751f\u4e24\u500d\u7684\u4eae\u5ea6\u3002\u5c06\u8f93\u5165\u7535\u538b\u52a0\u500d\u4ea7\u751f\u7684\u4eae\u5ea6\u7ea6\u4e3a\u8f93\u5165\u7535\u538b\u76842.2\u6b21\u5e42\uff0c\u8fd9\u53eb\u505a\u663e\u793a\u5668Gamma\u3002 \u8bd1\u6ce8 Gamma\u4e5f\u53eb\u7070\u5ea6\u7cfb\u6570\uff0c\u6bcf\u79cd\u663e\u793a\u8bbe\u5907\u90fd\u6709\u81ea\u5df1\u7684Gamma\u503c\uff0c\u90fd\u4e0d\u76f8\u540c\uff0c\u6709\u4e00\u4e2a\u516c\u5f0f\uff1a\u8bbe\u5907\u8f93\u51fa\u4eae\u5ea6 = \u7535\u538b\u7684Gamma\u6b21\u5e42\uff0c\u4efb\u4f55\u8bbe\u5907Gamma\u57fa\u672c\u4e0a\u90fd\u4e0d\u4f1a\u7b49\u4e8e1\uff0c\u7b49\u4e8e1\u662f\u4e00\u79cd\u7406\u60f3\u7684\u7ebf\u6027\u72b6\u6001\uff0c\u8fd9\u79cd\u7406\u60f3\u72b6\u6001\u662f\uff1a\u5982\u679c\u7535\u538b\u548c\u4eae\u5ea6\u90fd\u662f\u57280\u52301\u7684\u533a\u95f4\uff0c\u90a3\u4e48\u591a\u5c11\u7535\u538b\u5c31\u7b49\u4e8e\u591a\u5c11\u4eae\u5ea6\u3002\u5bf9\u4e8eCRT\uff0cGamma\u901a\u5e38\u4e3a2.2\uff0c\u56e0\u800c\uff0c\u8f93\u51fa\u4eae\u5ea6 = \u8f93\u5165\u7535\u538b\u76842.2\u6b21\u5e42\uff0c\u4f60\u53ef\u4ee5\u4ece\u672c\u8282\u7b2c\u4e8c\u5f20\u56fe\u4e2d\u770b\u5230Gamma2.2\u5b9e\u9645\u663e\u793a\u51fa\u6765\u7684\u603b\u4f1a\u6bd4\u9884\u671f\u6697\uff0c\u76f8\u53cdGamma0.45\u5c31\u4f1a\u6bd4\u7406\u60f3\u9884\u671f\u4eae\uff0c\u5982\u679c\u4f60\u8bb2Gamma0.45\u53e0\u52a0\u5230Gamma2.2\u7684\u663e\u793a\u8bbe\u5907\u4e0a\uff0c\u4fbf\u4f1a\u5bf9\u504f\u6697\u7684\u663e\u793a\u6548\u679c\u505a\u5230\u6821\u6b63\uff0c\u8fd9\u4e2a\u7b80\u5355\u7684\u601d\u8def\u5c31\u662f\u672c\u8282\u7684\u6838\u5fc3 \u4eba\u7c7b\u6240\u611f\u77e5\u7684\u4eae\u5ea6\u6070\u597d\u548cCRT\u6240\u663e\u793a\u51fa\u6765\u76f8\u4f3c\u7684\u6307\u6570\u5173\u7cfb\u975e\u5e38\u5339\u914d\u3002\u4e3a\u4e86\u66f4\u597d\u7684\u7406\u89e3\u6240\u6709\u542b\u4e49\uff0c\u8bf7\u770b\u4e0b\u9762\u7684\u56fe\u7247\uff1a \u7b2c\u4e00\u884c\u662f\u4eba\u773c\u6240\u611f\u77e5\u5230\u7684\u6b63\u5e38\u7684\u7070\u9636\uff0c\u4eae\u5ea6\u8981\u589e\u52a0\u4e00\u500d\uff08\u6bd4\u5982\u4ece0.1\u52300.2\uff09\u4f60\u624d\u4f1a\u611f\u89c9\u6bd4\u539f\u6765\u53d8\u4eae\u4e86\u4e00\u500d\uff08\u8bd1\u6ce8\uff1a\u6211\u4eec\u5728\u770b\u989c\u8272\u503c\u4ece0\u52301\uff08\u4ece\u9ed1\u5230\u767d\uff09\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4eae\u5ea6\u8981\u589e\u52a0\u4e00\u500d\uff0c\u6211\u4eec\u624d\u4f1a\u611f\u53d7\u5230\u660e\u663e\u7684\u989c\u8272\u53d8\u5316\uff08\u53d8\u4eae\u4e00\u500d\uff09\u3002\u6253\u4e2a\u6bd4\u65b9\uff1a\u989c\u8272\u503c\u4ece0.1\u52300.2\uff0c\u6211\u4eec\u4f1a\u611f\u53d7\u5230\u4e00\u500d\u7684\u989c\u8272\u53d8\u5316\uff0c\u800c\u4ece0.4\u52300.8\u6211\u4eec\u624d\u80fd\u611f\u53d7\u5230\u76f8\u540c\u7a0b\u5ea6\uff08\u53d8\u4eae\u4e00\u500d\uff09\u7684\u989c\u8272\u53d8\u5316\u3002\u5982\u679c\u8fd8\u662f\u4e0d\u7406\u89e3\uff0c\u53ef\u4ee5\u53c2\u8003\u77e5\u4e4e\u7684 \u7b54\u6848 \uff09\u3002\u7136\u800c\uff0c\u5f53\u6211\u4eec\u8c08\u8bba\u5149\u7684\u7269\u7406\u4eae\u5ea6\uff0c\u6bd4\u5982\u5149\u6e90\u53d1\u5c04\u5149\u5b50\u7684\u6570\u91cf\u7684\u65f6\u5019\uff0c\u5e95\u90e8\uff08\u7b2c\u4e8c\u884c\uff09\u7684\u7070\u9636\u663e\u793a\u51fa\u7684\u624d\u662f\u7269\u7406\u4e16\u754c\u771f\u5b9e\u7684\u4eae\u5ea6\u3002\u5982\u5e95\u90e8\u7684\u7070\u9636\u663e\u793a\uff0c\u4eae\u5ea6\u52a0\u500d\u65f6\u8fd4\u56de\u7684\u4e5f\u662f\u771f\u5b9e\u7684\u7269\u7406\u4eae\u5ea6\uff08\u8bd1\u6ce8\uff1a\u8fd9\u91cc\u4eae\u5ea6\u662f\u6307\u5149\u5b50\u6570\u91cf\u548c\u6b63\u76f8\u5173\u7684\u4eae\u5ea6\uff0c\u5373\u7269\u7406\u4eae\u5ea6\uff0c\u524d\u9762\u8ba8\u8bba\u7684\u662f\u4eba\u7684\u611f\u77e5\u4eae\u5ea6\uff1b\u7269\u7406\u4eae\u5ea6\u548c\u611f\u77e5\u4eae\u5ea6\u7684\u533a\u522b\u5728\u4e8e\uff0c\u7269\u7406\u4eae\u5ea6\u57fa\u4e8e\u5149\u5b50\u6570\u91cf\uff0c\u611f\u77e5\u4eae\u5ea6\u57fa\u4e8e\u4eba\u7684\u611f\u89c9\uff0c\u6bd4\u5982\u7b2c\u4e8c\u4e2a\u7070\u9636\u91cc\u4eae\u5ea60.1\u7684\u5149\u5b50\u6570\u91cf\u662f0.2\u7684\u4e8c\u5206\u4e4b\u4e00\uff09\uff0c\u4f46\u662f\u7531\u4e8e\u8fd9\u4e0e\u6211\u4eec\u7684\u773c\u775b\u611f\u77e5\u4eae\u5ea6\u4e0d\u5b8c\u5168\u4e00\u81f4\uff08\u5bf9\u6bd4\u8f83\u6697\u7684\u989c\u8272\u53d8\u5316\u66f4\u654f\u611f\uff09\uff0c\u6240\u4ee5\u5b83\u770b\u8d77\u6765\u6709\u5dee\u5f02\u3002 \u56e0\u4e3a\u4eba\u773c\u770b\u5230\u989c\u8272\u7684\u4eae\u5ea6\u66f4\u503e\u5411\u4e8e\u9876\u90e8\u7684\u7070\u9636\uff0c\u663e\u793a\u5668\u4f7f\u7528\u7684\u4e5f\u662f\u4e00\u79cd\u6307\u6570\u5173\u7cfb\uff08\u7535\u538b\u76842.2\u6b21\u5e42\uff09\uff0c\u6240\u4ee5\u7269\u7406\u4eae\u5ea6\u901a\u8fc7\u663e\u793a\u5668\u80fd\u591f\u88ab\u6620\u5c04\u5230\u9876\u90e8\u7684\u975e\u7ebf\u6027\u4eae\u5ea6\uff1b\u56e0\u6b64\u770b\u8d77\u6765\u6548\u679c\u4e0d\u9519\u3002 \u663e\u793a\u5668\u7684\u8fd9\u4e2a\u975e\u7ebf\u6027\u6620\u5c04\u7684\u786e\u53ef\u4ee5\u8ba9\u4eae\u5ea6\u5728\u6211\u4eec\u773c\u4e2d\u770b\u8d77\u6765\u66f4\u597d\uff0c\u4f46\u5f53\u6e32\u67d3\u56fe\u50cf\u65f6\uff0c\u4f1a\u4ea7\u751f\u4e00\u4e2a\u95ee\u9898\uff1a\u6211\u4eec\u5728\u5e94\u7528\u4e2d\u914d\u7f6e\u7684\u4eae\u5ea6\u548c\u989c\u8272\u662f\u57fa\u4e8e\u6211\u4eec\u4ece\u663e\u793a\u5668\u6240\u770b\u5230\u7684\uff0c\u8fd9\u6837\u6240\u6709\u7684\u914d\u7f6e\u5b9e\u9645\u4e0a\u662f\u975e\u7ebf\u6027\u7684\u4eae\u5ea6/\u989c\u8272\u914d\u7f6e\u3002\u8bf7\u770b\u4e0b\u56fe\uff1a \u70b9\u7ebf\u4ee3\u8868\u7ebf\u6027\u989c\u8272/\u4eae\u5ea6\u503c\uff08\u8bd1\u6ce8\uff1a\u8fd9\u8868\u793a\u7684\u662f\u7406\u60f3\u72b6\u6001\uff0cGamma\u4e3a1\uff09\uff0c\u5b9e\u7ebf\u4ee3\u8868\u663e\u793a\u5668\u5668\u663e\u793a\u7684\u989c\u8272\u3002\u5982\u679c\u6211\u4eec\u628a\u4e00\u4e2a\u70b9\u7ebf\u7ebf\u6027\u7684\u989c\u8272\u7ffb\u4e00\u500d\uff0c\u7ed3\u679c\u5c31\u662f\u8fd9\u4e2a\u503c\u7684\u4e24\u500d\u3002\u6bd4\u5982\uff0c\u5149\u7684\u989c\u8272\u5411\u91cf \\bar{L} = (0.5, 0.0, 0.0) \u4ee3\u8868\u7684\u662f\u534a\u6697\u7ea2\u8272\u3002\u5982\u679c\u6211\u4eec\u5728\u7ebf\u6027\u7a7a\u95f4\u4e2d\u628a\u5b83\u7ffb\u500d\uff0c\u5c31\u4f1a\u53d8\u6210 (1.0, 0.0, 0.0) \uff0c\u5c31\u50cf\u4f60\u5728\u56fe\u4e2d\u770b\u5230\u7684\u90a3\u6837\u3002\u7136\u800c\uff0c\u7531\u4e8e\u6211\u4eec\u5b9a\u4e49\u7684\u989c\u8272\u4ecd\u7136\u9700\u8981\u8f93\u51fa\u7684\u663e\u793a\u5668\u4e0a\uff0c\u663e\u793a\u5668\u4e0a\u663e\u793a\u7684\u5b9e\u9645\u989c\u8272\u5c31\u4f1a\u662f (0.218, 0.0, 0.0) \u3002\u5728\u8fd9\u513f\u95ee\u9898\u5c31\u51fa\u73b0\u4e86\uff1a\u5f53\u6211\u4eec\u5c06\u7406\u60f3\u4e2d\u76f4\u7ebf\u4e0a\u7684\u90a3\u4e2a\u534a\u6697\u7ea2\u8272\u7ffb\u4e00\u500d\u65f6\uff0c\u5728\u663e\u793a\u5668\u4e0a\u5b9e\u9645\u4e0a\u4eae\u5ea6\u7ffb\u4e864.5\u500d\u4ee5\u4e0a\uff01 \u76f4\u5230\u73b0\u5728\uff0c\u6211\u4eec\u8fd8\u4e00\u76f4\u5047\u8bbe\u6211\u4eec\u6240\u6709\u7684\u5de5\u4f5c\u90fd\u662f\u5728\u7ebf\u6027\u7a7a\u95f4\u4e2d\u8fdb\u884c\u7684\uff08\u8bd1\u6ce8\uff1aGamma\u4e3a1\uff09\uff0c\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u4e00\u76f4\u5728\u663e\u793a\u5668\u7684\u8f93\u51fa\u7a7a\u95f4\u4e2d\u5de5\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u914d\u7f6e\u7684\u6240\u6709\u989c\u8272\u548c\u7167\u660e\u53d8\u91cf\u5728\u7269\u7406\u4e0a\u90fd\u4e0d\u6b63\u786e\uff0c\u4f46\u5728\u663e\u793a\u5668\u4e0a\u770b\u8d77\u6765(\u6709\u70b9)\u6b63\u786e\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6211\u4eec\uff08\u4ee5\u53ca\u827a\u672f\u5bb6\uff09\u901a\u5e38\u5c06\u5149\u7167\u503c\u8bbe\u7f6e\u5f97\u6bd4\u672c\u6765\u66f4\u4eae\u4e00\u4e9b\uff08\u7531\u4e8e\u663e\u793a\u5668\u4f1a\u5c06\u5176\u4eae\u5ea6\u663e\u793a\u7684\u66f4\u6697\u4e00\u4e9b\uff09\uff0c\u8fd9\u5bfc\u81f4\u5927\u591a\u6570\u5728\u7ebf\u6027\u7a7a\u95f4\u91cc\u7684\u8ba1\u7b97\u4e0d\u6b63\u786e\u3002\u540c\u65f6\uff0c\u8fd8\u8981\u8bb0\u4f4f\uff0c\u663e\u793a\u5668\u6240\u663e\u793a\u51fa\u6765\u7684\u56fe\u50cf\u548c\u7ebf\u6027\u56fe\u50cf\u7684\u6700\u5c0f\u4eae\u5ea6\u662f\u76f8\u540c\u7684\uff0c\u5b83\u4eec\u6700\u5927\u7684\u4eae\u5ea6\u4e5f\u662f\u76f8\u540c\u7684\uff1b\u53ea\u662f\u4e2d\u95f4\u4eae\u5ea6\u90e8\u5206\u4f1a\u88ab\u538b\u6697\u3002 \u56e0\u4e3a\u989c\u8272\u662f\u6839\u636e\u663e\u793a\u5668\u7684\u8f93\u51fa\u914d\u7f6e\u7684\uff0c\u6240\u4ee5\u7ebf\u6027\u7a7a\u95f4\u4e2d\u7684\u6240\u6709\u4e2d\u95f4(\u7167\u660e)\u8ba1\u7b97\u5728\u7269\u7406\u4e0a\u90fd\u662f\u4e0d\u6b63\u786e\u7684\u3002\u968f\u7740\u66f4\u591a\u5148\u8fdb\u7684\u7167\u660e\u7b97\u6cd5\u7684\u5f15\u5165\uff0c\u8fd9\u4e00\u70b9\u53d8\u5f97\u66f4\u52a0\u660e\u663e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u901a\u8fc7\u4f3d\u739b\u6821\u6b63\uff0c(\u66f4\u65b0\u7684)\u989c\u8272\u503c\u53ef\u4ee5\u5f88\u597d\u5730\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u8f83\u6697\u7684\u533a\u57df\u663e\u793a\u66f4\u591a\u7684\u7ec6\u8282\u3002\u603b\u7684\u6765\u8bf4\uff0c\u4e00\u4e2a\u66f4\u597d\u7684\u56fe\u50cf\u8d28\u91cf\u4e0e\u4e00\u4e9b\u5c0f\u7684\u4fee\u6539\u3002 \u5982\u679c\u6ca1\u6709\u9002\u5f53\u5730\u7ea0\u6b63\u8fd9\u4e2a\u663e\u793a\u5668\u4f3d\u9a6c\uff0c\u7167\u660e\u770b\u8d77\u6765\u662f\u9519\u8bef\u7684\uff0c\u827a\u672f\u5bb6\u5c06\u5f88\u96be\u83b7\u5f97\u903c\u771f\u548c\u597d\u770b\u7684\u7ed3\u679c\u3002\u89e3\u51b3\u65b9\u6848\u6b63\u662f\u5e94\u7528 \u4f3d\u9a6c\u6821\u6b63 \u3002 Gamma\u6821\u6b63 Gamma\u6821\u6b63(Gamma Correction)\u7684\u601d\u8def\u662f\u5728\u6700\u7ec8\u7684\u989c\u8272\u8f93\u51fa\u5230\u663e\u793a\u5668\u4e4b\u524d\u5148\u5c06Gamma\u7684\u5012\u6570\u4f5c\u7528\u5230\u989c\u8272\u4e0a\u3002\u56de\u987e\u672c\u7ae0\u524d\u9762\u7684\u4f3d\u9a6c\u66f2\u7ebf\u56fe\uff0c\u6211\u4eec\u770b\u5230\u53e6\u4e00\u6761\u865a\u7ebf\uff0c\u5b83\u4e0e\u663e\u793a\u5668\u7684\u4f3d\u9a6c\u66f2\u7ebf\u76f8\u53cd\u3002\u6211\u4eec\u5c06\u6bcf\u4e2a\u7ebf\u6027\u8f93\u51fa\u989c\u8272\u4e58\u4ee5\u8fd9\u4e2a\u9006\u4f3d\u9a6c\u66f2\u7ebf(\u4f7f\u5b83\u4eec\u66f4\u4eae)\uff0c\u4e00\u65e6\u989c\u8272\u663e\u793a\u5728\u663e\u793a\u5668\u4e0a\uff0c\u663e\u793a\u5668\u7684\u4f3d\u9a6c\u66f2\u7ebf\u5c31\u88ab\u5e94\u7528\uff0c\u7ed3\u679c\u989c\u8272\u5c31\u53d8\u6210\u7ebf\u6027\u7684\u3002\u6211\u4eec\u6709\u6548\u5730\u4f7f\u4e2d\u95f4\u989c\u8272\u53d8\u4eae\uff0c\u8fd9\u6837\u4e00\u65e6\u663e\u793a\u5668\u53d8\u6697\uff0c\u5b83\u4eec\u5c31\u4f1a\u5e73\u8861\u3002 \u6211\u4eec\u6765\u770b\u53e6\u4e00\u4e2a\u4f8b\u5b50\u3002\u8fd8\u662f\u90a3\u4e2a\u6697\u7ea2\u8272 (0.5, 0.0, 0.0) \u3002\u5728\u5c06\u989c\u8272\u663e\u793a\u5230\u663e\u793a\u5668\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u5bf9\u989c\u8272\u5e94\u7528Gamma\u6821\u6b63\u66f2\u7ebf\u3002\u7ebf\u6027\u7684\u989c\u8272\u663e\u793a\u5728\u663e\u793a\u5668\u4e0a\u76f8\u5f53\u4e8e\u964d\u4f4e\u4e86 2.2 \u6b21\u5e42\u7684\u4eae\u5ea6\uff0c\u6240\u4ee5\u5012\u6570\u5c31\u662f 1/2.2 \u6b21\u5e42\u3002Gamma\u6821\u6b63\u540e\u7684\u6697\u7ea2\u8272\u5c31\u4f1a\u6210\u4e3a (0.5, 0.0, 0.0)^{1/2.2} = (0.5, 0.0, 0.0)^{0.45} = (0.73, 0.0, 0.0) \u3002\u6821\u6b63\u540e\u7684\u989c\u8272\u63a5\u7740\u88ab\u53d1\u9001\u7ed9\u663e\u793a\u5668\uff0c\u6700\u7ec8\u663e\u793a\u51fa\u6765\u7684\u989c\u8272\u662f (0.73, 0.0, 0.0)^{2.2} = (0.5, 0.0, 0.0) \u3002\u4f60\u4f1a\u53d1\u73b0\u4f7f\u7528\u4e86Gamma\u6821\u6b63\uff0c\u663e\u793a\u5668\u6700\u7ec8\u4f1a\u663e\u793a\u51fa\u6211\u4eec\u5728\u5e94\u7528\u4e2d\u8bbe\u7f6e\u7684\u90a3\u79cd\u7ebf\u6027\u7684\u989c\u8272\u3002 Important 2.2\u901a\u5e38\u662f\u662f\u5927\u591a\u6570\u663e\u793a\u8bbe\u5907\u7684\u5927\u6982\u5e73\u5747gamma\u503c\u3002\u57fa\u4e8egamma2.2\u7684\u989c\u8272\u7a7a\u95f4\u53eb\u505asRGB\u989c\u8272\u7a7a\u95f4\u3002\u6bcf\u4e2a\u663e\u793a\u5668\u7684gamma\u66f2\u7ebf\u90fd\u6709\u6240\u4e0d\u540c\uff0c\u4f46\u662fgamma2.2\u5728\u5927\u591a\u6570\u663e\u793a\u5668\u4e0a\u8868\u73b0\u90fd\u4e0d\u9519\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6e38\u620f\u7ecf\u5e38\u90fd\u4f1a\u4e3a\u73a9\u5bb6\u63d0\u4f9b\u6539\u53d8\u6e38\u620fgamma\u8bbe\u7f6e\u7684\u9009\u9879\uff0c\u4ee5\u9002\u5e94\u6bcf\u4e2a\u663e\u793a\u5668\uff08\u8bd1\u6ce8\uff1a\u73b0\u5728Gamma2.2\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6807\u51c6\uff0c\u540e\u6587\u4e2d\u4f60\u4f1a\u770b\u5230\u3002\u4f46\u73b0\u5728\u4f60\u53ef\u80fd\u4f1a\u95ee\uff0c\u524d\u9762\u4e0d\u662f\u8bf4Gamma2.2\u7684\u66f2\u7ebf\u4e0d\u662f\u548c\u4eba\u773c\u8bc6\u522b\u4eae\u5ea6\u7684\u7279\u70b9\u76f8\u540c\u5417\uff0c\u4e3a\u4f55\u8fd8\u9700\u8981\u6821\u6b63\u3002\u5176\u5b9e\u6211\u4eec\u4e0d\u9700\u8981\u8003\u8651\u4eba\u773c\u8bc6\u522b\u4eae\u5ea6\u7684\u7279\u70b9\uff0c\u6211\u4eec\u91cd\u70b9\u9700\u8981\u5173\u6ce8\u4fdd\u6301\u4eae\u5ea6\u7684\u7ebf\u6027\u53d8\u5316\u7279\u70b9\u3002\u4f60\u5728\u7a0b\u5e8f\u4e2d\u8bbe\u7f6e\u7684\u989c\u8272\uff0c\u6bd4\u5982\u5149\u7167\u90fd\u662f\u57fa\u4e8e\u7ebf\u6027Gamma\uff0c\u5373Gamma1\uff0c\u6bd4\u59821.0\u7684\u4eae\u5ea6\u5e94\u8be5\u662f0.5\u7684\u4e8c\u500d\uff0c\u5982\u679c\u4e0d\u8fdb\u884cgamma\u77eb\u6b63\uff0c\u7ebf\u60270.5\u7684\u4eae\u5ea6\u4f1a\u8f93\u51fa\u4e3a0.22\uff0c\u7ebf\u60271.0\u7684\u4eae\u5ea6\u4f1a\u88ab\u8f93\u51fa\u4e3a1.0\uff0c\u4eae\u5ea6\u76f8\u5dee\u4e86\u5f88\u591a\u500d\uff0c\u548c\u4f60\u7684\u9884\u671f\u4f1a\u5f88\u4e0d\u4e00\u6837\uff09\u3002 \u6709\u4e24\u79cd\u5728\u4f60\u7684\u573a\u666f\u4e2d\u5e94\u7528gamma\u6821\u6b63\u7684\u65b9\u5f0f\uff1a \u4f7f\u7528OpenGL\u5185\u5efa\u7684sRGB\u5e27\u7f13\u51b2\u3002 \u81ea\u5df1\u5728\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u8fdb\u884cgamma\u6821\u6b63\u3002 \u7b2c\u4e00\u4e2a\u9009\u9879\u4e5f\u8bb8\u662f\u6700\u7b80\u5355\u7684\u65b9\u5f0f\uff0c\u4f46\u662f\u6211\u4eec\u4e5f\u4f1a\u4e27\u5931\u4e00\u4e9b\u63a7\u5236\u6743\u3002\u5f00\u542fGL_FRAMEBUFFER_SRGB\uff0c\u53ef\u4ee5\u544a\u8bc9OpenGL\u6bcf\u4e2a\u540e\u7eed\u7684\u7ed8\u5236\u547d\u4ee4\u91cc\uff0c\u5728\u989c\u8272\u50a8\u5b58\u5230\u989c\u8272\u7f13\u51b2\u4e4b\u524d\u5148\u6821\u6b63sRGB\u989c\u8272\u3002sRGB\u8fd9\u4e2a\u989c\u8272\u7a7a\u95f4\u5927\u81f4\u5bf9\u5e94\u4e8egamma2.2\uff0c\u5b83\u4e5f\u662f\u5927\u591a\u6570\u8bbe\u5907\u7684\u4e00\u4e2a\u6807\u51c6\u3002\u5f00\u542fGL_FRAMEBUFFER_SRGB\u4ee5\u540e\uff0c\u6bcf\u6b21\u50cf\u7d20\u7740\u8272\u5668\u8fd0\u884c\u540e\u7eed\u5e27\u7f13\u51b2\uff0cOpenGL\u5c06\u81ea\u52a8\u6267\u884cgamma\u6821\u6b63\uff0c\u5305\u62ec\u9ed8\u8ba4\u5e27\u7f13\u51b2\u3002 \u5f00\u542fGL_FRAMEBUFFER_SRGB\u7b80\u5355\u7684\u8c03\u7528glEnable\u5c31\u884c\uff1a glEnable(GL_FRAMEBUFFER_SRGB); \u81ea\u6b64\uff0c\u4f60\u6e32\u67d3\u7684\u56fe\u50cf\u5c31\u88ab\u8fdb\u884cgamma\u6821\u6b63\u5904\u7406\uff0c\u4f60\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u4e8b\u60c5\u786c\u4ef6\u5c31\u5e2e\u4f60\u5904\u7406\u4e86\u3002\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5(\u548c\u5176\u4ed6\u65b9\u6cd5)\u4f60\u5e94\u8be5\u8bb0\u4f4f\u7684\u91cd\u70b9\u662f\uff0c\u4f3d\u9a6c\u6821\u6b63(\u4e5f)\u5c06\u989c\u8272\u4ece\u7ebf\u6027\u7a7a\u95f4\u8f6c\u6362\u4e3a\u975e\u7ebf\u6027\u7a7a\u95f4\uff0c\u6240\u4ee5\u53ea\u5728\u6700\u540e\u4e00\u6b65\u8fdb\u884c\u4f3d\u9a6c\u6821\u6b63\u3002\u5982\u679c\u4f60\u5728\u6700\u540e\u8f93\u51fa\u4e4b\u524d\u5c31\u8fdb\u884cgamma\u6821\u6b63\uff0c\u6240\u6709\u7684\u540e\u7eed\u64cd\u4f5c\u90fd\u662f\u5728\u64cd\u4f5c\u4e0d\u6b63\u786e\u7684\u989c\u8272\u503c\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u591a\u4e2a\u5e27\u7f13\u51b2\uff0c\u4f60\u53ef\u80fd\u6253\u7b97\u8ba9\u4e24\u4e2a\u5e27\u7f13\u51b2\u4e4b\u95f4\u4f20\u9012\u7684\u4e2d\u95f4\u7ed3\u679c\u4ecd\u7136\u4fdd\u6301\u7ebf\u6027\u7a7a\u95f4\u989c\u8272\uff0c\u53ea\u662f\u7ed9\u53d1\u9001\u7ed9\u663e\u793a\u5668\u7684\u6700\u540e\u7684\u90a3\u4e2a\u5e27\u7f13\u51b2\u5e94\u7528gamma\u6821\u6b63\u3002 \u7b2c\u4e8c\u79cd\u65b9\u6cd5\u9700\u8981\u66f4\u591a\u7684\u5de5\u4f5c\uff0c\u4f46\u4e5f\u8ba9\u6211\u4eec\u5b8c\u5168\u63a7\u5236\u4f3d\u9a6c\u64cd\u4f5c\u3002\u6211\u4eec\u5728\u6bcf\u4e2a\u76f8\u5173\u7684\u50cf\u7d20\u7740\u8272\u5668\u8fd0\u884c\u7ed3\u675f\u65f6\u5e94\u7528\u4f3d\u739b\u6821\u6b63\uff0c\u56e0\u6b64\u6700\u7ec8\u7684\u989c\u8272\u5728\u53d1\u9001\u5230\u663e\u793a\u5668\u4e4b\u524d\u7ed3\u675f\u4f3d\u739b\u6821\u6b63\u3002 void main() { // \u5728\u7ebf\u6027\u7a7a\u95f4\u505a\u70ab\u9177\u7684\u5149\u7167\u6548\u679c [...] // \u5e94\u7528\u4f3d\u9a6c\u77eb\u6b63 float gamma = 2.2; fragColor.rgb = pow(fragColor.rgb, vec3(1.0/gamma)); } \u6700\u540e\u4e00\u884c\u4ee3\u7801\uff0c\u5c06fragColor\u7684\u6bcf\u4e2a\u989c\u8272\u5143\u7d20\u5e94\u7528\u6709\u4e00\u4e2a1.0/gamma\u7684\u5e42\u8fd0\u7b97\uff0c\u6821\u6b63\u50cf\u7d20\u7740\u8272\u5668\u7684\u989c\u8272\u8f93\u51fa\u3002 \u8fd9\u79cd\u65b9\u6cd5\u7684\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u4e3a\u4e86\u4fdd\u6301\u4e00\u81f4\u6027\uff0c\u4f60\u5fc5\u987b\u5bf9\u6bcf\u4e2a\u6709\u52a9\u4e8e\u6700\u7ec8\u8f93\u51fa\u7684\u7247\u6bb5\u7740\u8272\u5668\u5e94\u7528\u4f3d\u739b\u6821\u6b63\u3002\u5982\u679c\u4f60\u6709\u591a\u4e2a\u5bf9\u8c61\u7684\u5341\u51e0\u4e2a\u7247\u6bb5\u7740\u8272\u5668\uff0c\u4f60\u5fc5\u987b\u4e3a\u6bcf\u4e2a\u7740\u8272\u5668\u6dfb\u52a0\u4f3d\u9a6c\u6821\u6b63\u4ee3\u7801\u3002\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5728\u4f60\u7684\u6e32\u67d3\u5faa\u73af\u4e2d\u5f15\u5165\u4e00\u4e2a\u540e\u5904\u7406\u9636\u6bb5\uff0c\u5e76\u5728\u540e\u5904\u7406\u7684\u56db\u8fb9\u5f62\u4e0a\u5e94\u7528\u4f3d\u9a6c\u6821\u6b63\u4f5c\u4e3a\u6700\u540e\u4e00\u6b65\uff0c\u8fd9\u6837\u4f60\u53ea\u9700\u8981\u505a\u4e00\u6b21\u4f3d\u9a6c\u77eb\u6b63\u5373\u53ef\u3002 \u8fd9\u53e5\u5355\u884c\u4ee3\u7801\u4ee3\u8868\u4e86gamma\u6821\u6b63\u7684\u5b9e\u73b0\u3002\u4e0d\u90a3\u4e48\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\uff0c\u4f46\u5f53\u4f60\u8fdb\u884cgamma\u6821\u6b63\u7684\u65f6\u5019\u6709\u4e00\u4e9b\u989d\u5916\u7684\u4e8b\u60c5\u522b\u5fd8\u4e86\u8003\u8651\u3002 sRGB\u7eb9\u7406 \u56e0\u4e3a\u663e\u793a\u5668\u603b\u662f\u5728sRGB\u7a7a\u95f4\u4e2d\u663e\u793a\u5e94\u7528\u4e86gamma\u7684\u989c\u8272\uff0c\u65e0\u8bba\u4ec0\u4e48\u65f6\u5019\u5f53\u4f60\u5728\u8ba1\u7b97\u673a\u4e0a\u7ed8\u5236\u3001\u7f16\u8f91\u6216\u8005\u7ed8\u5236\u4e00\u4e2a\u56fe\u7247\u7684\u65f6\u5019\uff0c\u4f60\u6240\u9009\u7684\u989c\u8272\u90fd\u662f\u6839\u636e\u4f60\u5728\u663e\u793a\u5668\u4e0a\u770b\u5230\u7684\u90a3\u79cd\u3002\u8fd9\u5b9e\u9645\u610f\u5473\u7740\u6240\u6709\u4f60\u521b\u5efa\u6216\u7f16\u8f91\u7684\u56fe\u7247\u5e76\u4e0d\u662f\u5728\u7ebf\u6027\u7a7a\u95f4\uff0c\u800c\u662f\u5728sRGB\u7a7a\u95f4\u4e2d\uff08\u8bd1\u6ce8\uff1asRGB\u7a7a\u95f4\u5b9a\u4e49\u7684gamma\u63a5\u8fd1\u4e8e2.2\uff09\uff0c\u5047\u5982\u5728\u4f60\u7684\u5c4f\u5e55\u4e0a\u5bf9\u6697\u7ea2\u8272\u7ffb\u4e00\u500d\uff0c\u4fbf\u662f\u6839\u636e\u4f60\u6240\u611f\u77e5\u5230\u7684\u4eae\u5ea6\u8fdb\u884c\u7684\uff0c\u5e76\u4e0d\u7b49\u4e8e\u5c06\u7ea2\u8272\u5143\u7d20\u52a0\u500d\u3002 \u7ed3\u679c\u5c31\u662f\u7eb9\u7406\u7f16\u8f91\u8005\uff0c\u6240\u521b\u5efa\u7684\u6240\u6709\u7eb9\u7406\u90fd\u662f\u5728sRGB\u7a7a\u95f4\u4e2d\u7684\u7eb9\u7406\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u5728\u6e32\u67d3\u5e94\u7528\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u7eb9\u7406\uff0c\u6211\u4eec\u5fc5\u987b\u8003\u8651\u5230\u8fd9\u70b9\u3002\u5728\u6211\u4eec\u4e0d\u77e5\u9053gamma\u6821\u6b63\u4e4b\u524d\uff0c\u8fd9\u4e0d\u662f\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u7eb9\u7406\u5728sRGB\u7a7a\u95f4\u521b\u5efa\u548c\u5c55\u793a\uff0c\u540c\u6837\u6211\u4eec\u8fd8\u662f\u5728sRGB\u7a7a\u95f4\u4e2d\u4f7f\u7528\uff0c\u4ece\u800c\u4e0d\u5fc5gamma\u6821\u6b63\u7eb9\u7406\u663e\u793a\u4e5f\u6ca1\u95ee\u9898\u3002\u7136\u800c\uff0c\u73b0\u5728\u6211\u4eec\u662f\u628a\u6240\u6709\u4e1c\u897f\u90fd\u653e\u5728\u7ebf\u6027\u7a7a\u95f4\u4e2d\u5c55\u793a\u7684\uff0c\u7eb9\u7406\u989c\u8272\u5c31\u4f1a\u53d8\u574f\uff0c\u5982\u4e0b\u56fe\u5c55\u793a\u7684\u90a3\u6837\uff1a \u7eb9\u7406\u56fe\u50cf\u592a\u4eae\u4e86\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b83\u5b9e\u9645\u4e0a\u88ab\u4f3d\u739b\u6821\u6b63\u4e86\u4e24\u6b21!\u60f3\u60f3\u770b\uff0c\u5f53\u6211\u4eec\u6839\u636e\u5728\u663e\u793a\u5668\u4e0a\u770b\u5230\u7684\u521b\u5efa\u56fe\u50cf\u65f6\uff0c\u6211\u4eec\u6709\u6548\u5730\u5bf9\u56fe\u50cf\u7684\u989c\u8272\u503c\u8fdb\u884c\u4f3d\u739b\u6821\u6b63\uff0c\u4f7f\u5176\u5728\u663e\u793a\u5668\u4e0a\u770b\u8d77\u6765\u6b63\u786e\u3002\u56e0\u4e3a\u6211\u4eec\u5728\u6e32\u67d3\u5668\u4e2d\u518d\u6b21\u8fdb\u884c\u4f3d\u739b\u6821\u6b63\uff0c\u56fe\u50cf\u6700\u7ec8\u53d8\u5f97\u592a\u4eae\u4e86\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5fc5\u987b\u786e\u4fdd\u7eb9\u7406\u7f8e\u5de5\u5728\u7ebf\u6027\u7a7a\u95f4\u4e2d\u5de5\u4f5c\u3002\u7136\u800c\uff0c\u56e0\u4e3a\u5728sRGB\u7a7a\u95f4\u4e2d\u5de5\u4f5c\u66f4\u5bb9\u6613\uff0c\u800c\u4e14\u5927\u591a\u6570\u5de5\u5177\u751a\u81f3\u4e0d\u652f\u6301\u7ebf\u6027\u7eb9\u7406\uff0c\u6240\u4ee5\u8fd9\u53ef\u80fd\u4e0d\u662f\u9996\u9009\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u53e6\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\u5728\u5bf9\u5176\u989c\u8272\u503c\u8fdb\u884c\u4efb\u4f55\u8ba1\u7b97\u4e4b\u524d\u91cd\u65b0\u6821\u6b63\u6216\u5c06\u8fd9\u4e9bsRGB\u7eb9\u7406\u8f6c\u6362\u4e3a\u7ebf\u6027\u7a7a\u95f4\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u505a float gamma = 2.2; vec3 diffuseColor = pow(texture(diffuse, texCoords).rgb, vec3(gamma)); \u4e3a\u6bcf\u4e2asRGB\u7a7a\u95f4\u7684\u7eb9\u7406\u505a\u8fd9\u4ef6\u4e8b\u975e\u5e38\u70e6\u4eba\u3002\u5e78\u597d\uff0cOpenGL\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u53e6\u4e00\u4e2a\u65b9\u6848\u6765\u89e3\u51b3\u6211\u4eec\u7684\u9ebb\u70e6\uff0c\u8fd9\u5c31\u662fGL_SRGB\u548cGL_SRGB_ALPHA\u5185\u90e8\u7eb9\u7406\u683c\u5f0f\u3002 \u5982\u679c\u6211\u4eec\u5728OpenGL\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u7eb9\u7406\uff0c\u628a\u5b83\u6307\u5b9a\u4e3a\u4ee5\u4e0a\u4e24\u79cdsRGB\u7eb9\u7406\u683c\u5f0f\u5176\u4e2d\u4e4b\u4e00\uff0cOpenGL\u5c06\u81ea\u52a8\u628a\u989c\u8272\u6821\u6b63\u5230\u7ebf\u6027\u7a7a\u95f4\u4e2d\uff0c\u8fd9\u6837\u6211\u4eec\u6240\u4f7f\u7528\u7684\u6240\u6709\u989c\u8272\u503c\u90fd\u662f\u5728\u7ebf\u6027\u7a7a\u95f4\u4e2d\u7684\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u628a\u4e00\u4e2a\u7eb9\u7406\u6307\u5b9a\u4e3a\u4e00\u4e2asRGB\u7eb9\u7406\uff1a glTexImage2D(GL_TEXTURE_2D, 0, GL_SRGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, image); \u5982\u679c\u4f60\u8fd8\u6253\u7b97\u5728\u4f60\u7684\u7eb9\u7406\u4e2d\u5f15\u5165alpha\u5143\u7d20\uff0c\u4f60\u5fc5\u987b\u5c06\u7eb9\u7406\u7684\u5185\u90e8\u683c\u5f0f\u6307\u5b9a\u4e3aGL_SRGB_ALPHA\u3002 \u56e0\u4e3a\u4e0d\u662f\u6240\u6709\u7eb9\u7406\u90fd\u662f\u5728sRGB\u7a7a\u95f4\u4e2d\u7684\u6240\u4ee5\u5f53\u4f60\u628a\u7eb9\u7406\u6307\u5b9a\u4e3asRGB\u7eb9\u7406\u65f6\u8981\u683c\u5916\u5c0f\u5fc3\u3002\u6bd4\u5982diffuse\u7eb9\u7406\uff0c\u8fd9\u79cd\u4e3a\u7269\u4f53\u4e0a\u8272\u7684\u7eb9\u7406\u51e0\u4e4e\u90fd\u662f\u5728sRGB\u7a7a\u95f4\u4e2d\u7684\u3002\u800c\u4e3a\u4e86\u83b7\u53d6\u5149\u7167\u53c2\u6570\u7684\u7eb9\u7406\uff0c\u50cfspecular\u8d34\u56fe\u548c\u6cd5\u7ebf\u8d34\u56fe\u51e0\u4e4e\u90fd\u5728\u7ebf\u6027\u7a7a\u95f4\u4e2d\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u628a\u5b83\u4eec\u4e5f\u914d\u7f6e\u4e3asRGB\u7eb9\u7406\u7684\u8bdd\uff0c\u5149\u7167\u5c31\u574f\u6389\u4e86\u3002\u6307\u5b9asRGB\u7eb9\u7406\u65f6\u8981\u5f53\u5fc3\u3002 \u5c06diffuse\u7eb9\u7406\u5b9a\u4e49\u4e3asRGB\u7eb9\u7406\u4e4b\u540e\uff0c\u4f60\u5c06\u83b7\u5f97\u4f60\u6240\u671f\u671b\u7684\u89c6\u89c9\u8f93\u51fa\uff0c\u4f46\u8fd9\u6b21\u6bcf\u4e2a\u7269\u4f53\u90fd\u4f1a\u53ea\u8fdb\u884c\u4e00\u6b21gamma\u6821\u6b63\u3002 \u8870\u51cf \u4f3d\u9a6c\u6821\u6b63\u7684\u53e6\u4e00\u4e2a\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5149\u7167\u8870\u51cf\u3002\u5728\u771f\u5b9e\u7684\u7269\u7406\u4e16\u754c\u4e2d\uff0c\u5149\u8870\u51cf\u4e0e\u5149\u6e90\u8ddd\u79bb\u7684\u5e73\u65b9\u6210\u53cd\u6bd4\u3002\u8bf4\u901a\u4fd7\u70b9\uff0c\u5149\u5f3a\u5ea6\u968f\u7740\u79bb\u5149\u6e90\u8ddd\u79bb\u7684\u5e73\u65b9\u589e\u52a0\u800c\u51cf\u5c11\uff0c\u5982\u4e0b\u56fe\u6240\u793a float attenuation = 1.0 / (distance * distance); \u7136\u800c\uff0c\u5f53\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a\u8870\u51cf\u516c\u5f0f\u7684\u65f6\u5019\uff0c\u8870\u51cf\u6548\u679c\u603b\u662f\u8fc7\u4e8e\u5f3a\u70c8\uff0c\u5149\u53ea\u80fd\u7167\u4eae\u4e00\u5c0f\u5708\uff0c\u770b\u8d77\u6765\u5e76\u4e0d\u771f\u5b9e\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6211\u4eec\u4f7f\u7528\u5728\u57fa\u672c\u5149\u7167\u6559\u7a0b\u4e2d\u6240\u8ba8\u8bba\u7684\u90a3\u79cd\u8870\u51cf\u65b9\u7a0b\uff0c\u5b83\u7ed9\u4e86\u6211\u4eec\u66f4\u5927\u7684\u63a7\u5236\u6743\uff0c\u6b64\u5916\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u53cc\u66f2\u7ebf\u51fd\u6570\uff1a float attenuation = 1.0 / distance; \u53cc\u66f2\u7ebf\u6bd4\u4f7f\u7528\u4e8c\u6b21\u51fd\u6570\u53d8\u4f53\u5728\u4e0d\u7528gamma\u6821\u6b63\u7684\u65f6\u5019\u770b\u8d77\u6765\u66f4\u771f\u5b9e\uff0c\u4e0d\u8fc7\u4f46\u6211\u4eec\u5f00\u542fgamma\u6821\u6b63\u4ee5\u540e\u7ebf\u6027\u8870\u51cf\u770b\u8d77\u6765\u592a\u5f31\u4e86\uff0c\u7b26\u5408\u7269\u7406\u7684\u4e8c\u6b21\u51fd\u6570\u7a81\u7136\u51fa\u73b0\u4e86\u66f4\u597d\u7684\u6548\u679c\u3002\u4e0b\u56fe\u663e\u793a\u4e86\u5176\u4e2d\u7684\u4e0d\u540c\uff1a \u8fd9\u79cd\u5dee\u5f02\u4ea7\u751f\u7684\u539f\u56e0\u662f\uff0c\u5149\u7684\u8870\u51cf\u65b9\u7a0b\u6539\u53d8\u4e86\u4eae\u5ea6\u503c\uff0c\u800c\u4e14\u5c4f\u5e55\u4e0a\u663e\u793a\u51fa\u6765\u7684\u4e5f\u4e0d\u662f\u7ebf\u6027\u7a7a\u95f4\uff0c\u5728\u663e\u793a\u5668\u4e0a\u6548\u679c\u6700\u597d\u7684\u8870\u51cf\u65b9\u7a0b\uff0c\u5e76\u4e0d\u662f\u7b26\u5408\u7269\u7406\u7684\u3002\u60f3\u60f3\u5e73\u65b9\u8870\u51cf\u65b9\u7a0b\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a\u65b9\u7a0b\uff0c\u800c\u4e14\u4e0d\u8fdb\u884cgamma\u6821\u6b63\uff0c\u663e\u793a\u5728\u76d1\u89c6\u5668\u4e0a\u7684\u8870\u51cf\u65b9\u7a0b\u5b9e\u9645\u4e0a\u5c06\u53d8\u6210 (1.0 / distance^2)^{2.2} \u3002\u82e5\u4e0d\u8fdb\u884cgamma\u6821\u6b63\uff0c\u5c06\u4ea7\u751f\u66f4\u5f3a\u70c8\u7684\u8870\u51cf\u3002\u8fd9\u4e5f\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u53cc\u66f2\u7ebf\u4e0d\u7528gamma\u6821\u6b63\u65f6\u770b\u8d77\u6765\u66f4\u771f\u5b9e\uff0c\u56e0\u4e3a\u5b83\u5b9e\u9645\u53d8\u6210\u4e86 (1.0 / distance)^{2.2} = 1.0 / distance^{2.2} \u3002\u8fd9\u548c\u7269\u7406\u516c\u5f0f\u662f\u5f88\u76f8\u4f3c\u7684\u3002 Important \u6211\u4eec\u5728\u57fa\u7840\u5149\u7167\u6559\u7a0b\u4e2d\u8ba8\u8bba\u7684\u66f4\u9ad8\u7ea7\u7684\u90a3\u4e2a\u8870\u51cf\u65b9\u7a0b\u5728\u6709gamma\u6821\u6b63\u7684\u573a\u666f\u4e2d\u4e5f\u4ecd\u7136\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u8ba9\u6211\u4eec\u5bf9\u8870\u51cf\u62e5\u6709\u66f4\u591a\u51c6\u786e\u7684\u63a7\u5236\u6743\uff08\u4e0d\u8fc7\uff0c\u5728\u8fdb\u884cgamma\u6821\u6b63\u7684\u573a\u666f\u4e2d\u5f53\u7136\u9700\u8981\u4e0d\u540c\u7684\u53c2\u6570\uff09\u3002 \u6211\u521b\u5efa\u7684\u8fd9\u4e2a\u7b80\u5355\u7684demo\u573a\u666f\uff0c\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u6e90\u7801\u3002\u6309\u4e0b\u7a7a\u683c\u5c31\u80fd\u5728\u6709gamma\u6821\u6b63\u548c\u65e0gamma\u6821\u6b63\u7684\u573a\u666f\u8fdb\u884c\u5207\u6362\uff0c\u4e24\u4e2a\u573a\u666f\u4f7f\u7528\u7684\u662f\u76f8\u540c\u7684\u7eb9\u7406\u548c\u8870\u51cf\u3002\u8fd9\u4e0d\u662f\u6548\u679c\u6700\u597d\u7684demo\uff0c\u4e0d\u8fc7\u5b83\u80fd\u5c55\u793a\u51fa\u5982\u4f55\u5e94\u7528\u6240\u6709\u8fd9\u4e9b\u6280\u672f\u3002 \u603b\u800c\u8a00\u4e4b\uff0cgamma\u6821\u6b63\u4f7f\u4f60\u53ef\u4ee5\u5728\u7ebf\u6027\u7a7a\u95f4\u4e2d\u8fdb\u884c\u64cd\u4f5c\u3002\u56e0\u4e3a\u7ebf\u6027\u7a7a\u95f4\u66f4\u7b26\u5408\u7269\u7406\u4e16\u754c\uff0c\u5927\u591a\u6570\u7269\u7406\u516c\u5f0f\u73b0\u5728\u90fd\u53ef\u4ee5\u83b7\u5f97\u8f83\u597d\u6548\u679c\uff0c\u6bd4\u5982\u771f\u5b9e\u7684\u5149\u7684\u8870\u51cf\u3002\u4f60\u7684\u5149\u7167\u8d8a\u771f\u5b9e\uff0c\u4f7f\u7528gamma\u6821\u6b63\u83b7\u5f97\u6f02\u4eae\u7684\u6548\u679c\u5c31\u8d8a\u5bb9\u6613\u3002\u8fd9\u4e5f\u6b63\u662f\u4e3a\u4ec0\u4e48\u5f53\u5f15\u8fdbgamma\u6821\u6b63\u65f6\uff0c\u5efa\u8bae\u53ea\u53bb\u8c03\u6574\u5149\u7167\u53c2\u6570\u7684\u539f\u56e0\u3002 \u9644\u52a0\u8d44\u6e90 What every coder should know about gamma John Novak\u5199\u7684\u4e00\u7bc7\u5173\u4e8e\u4f3d\u9a6c\u6821\u6b63\u7684\u6df1\u5ea6\u6587\u7ae0\u3002 cambridgeincolour.com :\u66f4\u591a\u5173\u4e8egamma\u548cgamma\u6821\u6b63\u7684\u5185\u5bb9\u3002 blog.wolfire.com : \u8fd9\u662fDavid Rosen\u7684\u4e00\u7bc7\u5173\u4e8e\u4f3d\u9a6c\u6821\u6b63\u5728\u56fe\u5f62\u6e32\u67d3\u4e2d\u7684\u597d\u5904\u7684\u535a\u5ba2\u3002 renderwonk.com : \u4e00\u4e9b\u989d\u5916\u7684\u5b9e\u8df5\u4e0a\u7684\u601d\u8003\u3002","title":"Gamma\u6821\u6b63"},{"location":"05%20Advanced%20Lighting/02%20Gamma%20Correction/#gamma","text":"\u539f\u6587 Gamma Correction \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django \u6821\u5bf9 AoZhang Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u5f53\u6211\u4eec\u8ba1\u7b97\u51fa\u573a\u666f\u4e2d\u6240\u6709\u50cf\u7d20\u7684\u6700\u7ec8\u989c\u8272\u4ee5\u540e\uff0c\u6211\u4eec\u5c31\u5fc5\u987b\u628a\u5b83\u4eec\u663e\u793a\u5728\u663e\u793a\u5668\u4e0a\u3002\u8fc7\u53bb\uff0c\u5927\u591a\u6570\u663e\u793a\u5668\u662f\u9634\u6781\u5c04\u7ebf\u7ba1\u663e\u793a\u5668\uff08CRT\uff09\u3002\u8fd9\u4e9b\u663e\u793a\u5668\u6709\u4e00\u4e2a\u7269\u7406\u7279\u6027\u5c31\u662f\u4e24\u500d\u7684\u8f93\u5165\u7535\u538b\u5e76\u4e0d\u80fd\u4ea7\u751f\u4e24\u500d\u7684\u4eae\u5ea6\u3002\u5c06\u8f93\u5165\u7535\u538b\u52a0\u500d\u4ea7\u751f\u7684\u4eae\u5ea6\u7ea6\u4e3a\u8f93\u5165\u7535\u538b\u76842.2\u6b21\u5e42\uff0c\u8fd9\u53eb\u505a\u663e\u793a\u5668Gamma\u3002 \u8bd1\u6ce8 Gamma\u4e5f\u53eb\u7070\u5ea6\u7cfb\u6570\uff0c\u6bcf\u79cd\u663e\u793a\u8bbe\u5907\u90fd\u6709\u81ea\u5df1\u7684Gamma\u503c\uff0c\u90fd\u4e0d\u76f8\u540c\uff0c\u6709\u4e00\u4e2a\u516c\u5f0f\uff1a\u8bbe\u5907\u8f93\u51fa\u4eae\u5ea6 = \u7535\u538b\u7684Gamma\u6b21\u5e42\uff0c\u4efb\u4f55\u8bbe\u5907Gamma\u57fa\u672c\u4e0a\u90fd\u4e0d\u4f1a\u7b49\u4e8e1\uff0c\u7b49\u4e8e1\u662f\u4e00\u79cd\u7406\u60f3\u7684\u7ebf\u6027\u72b6\u6001\uff0c\u8fd9\u79cd\u7406\u60f3\u72b6\u6001\u662f\uff1a\u5982\u679c\u7535\u538b\u548c\u4eae\u5ea6\u90fd\u662f\u57280\u52301\u7684\u533a\u95f4\uff0c\u90a3\u4e48\u591a\u5c11\u7535\u538b\u5c31\u7b49\u4e8e\u591a\u5c11\u4eae\u5ea6\u3002\u5bf9\u4e8eCRT\uff0cGamma\u901a\u5e38\u4e3a2.2\uff0c\u56e0\u800c\uff0c\u8f93\u51fa\u4eae\u5ea6 = \u8f93\u5165\u7535\u538b\u76842.2\u6b21\u5e42\uff0c\u4f60\u53ef\u4ee5\u4ece\u672c\u8282\u7b2c\u4e8c\u5f20\u56fe\u4e2d\u770b\u5230Gamma2.2\u5b9e\u9645\u663e\u793a\u51fa\u6765\u7684\u603b\u4f1a\u6bd4\u9884\u671f\u6697\uff0c\u76f8\u53cdGamma0.45\u5c31\u4f1a\u6bd4\u7406\u60f3\u9884\u671f\u4eae\uff0c\u5982\u679c\u4f60\u8bb2Gamma0.45\u53e0\u52a0\u5230Gamma2.2\u7684\u663e\u793a\u8bbe\u5907\u4e0a\uff0c\u4fbf\u4f1a\u5bf9\u504f\u6697\u7684\u663e\u793a\u6548\u679c\u505a\u5230\u6821\u6b63\uff0c\u8fd9\u4e2a\u7b80\u5355\u7684\u601d\u8def\u5c31\u662f\u672c\u8282\u7684\u6838\u5fc3 \u4eba\u7c7b\u6240\u611f\u77e5\u7684\u4eae\u5ea6\u6070\u597d\u548cCRT\u6240\u663e\u793a\u51fa\u6765\u76f8\u4f3c\u7684\u6307\u6570\u5173\u7cfb\u975e\u5e38\u5339\u914d\u3002\u4e3a\u4e86\u66f4\u597d\u7684\u7406\u89e3\u6240\u6709\u542b\u4e49\uff0c\u8bf7\u770b\u4e0b\u9762\u7684\u56fe\u7247\uff1a \u7b2c\u4e00\u884c\u662f\u4eba\u773c\u6240\u611f\u77e5\u5230\u7684\u6b63\u5e38\u7684\u7070\u9636\uff0c\u4eae\u5ea6\u8981\u589e\u52a0\u4e00\u500d\uff08\u6bd4\u5982\u4ece0.1\u52300.2\uff09\u4f60\u624d\u4f1a\u611f\u89c9\u6bd4\u539f\u6765\u53d8\u4eae\u4e86\u4e00\u500d\uff08\u8bd1\u6ce8\uff1a\u6211\u4eec\u5728\u770b\u989c\u8272\u503c\u4ece0\u52301\uff08\u4ece\u9ed1\u5230\u767d\uff09\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4eae\u5ea6\u8981\u589e\u52a0\u4e00\u500d\uff0c\u6211\u4eec\u624d\u4f1a\u611f\u53d7\u5230\u660e\u663e\u7684\u989c\u8272\u53d8\u5316\uff08\u53d8\u4eae\u4e00\u500d\uff09\u3002\u6253\u4e2a\u6bd4\u65b9\uff1a\u989c\u8272\u503c\u4ece0.1\u52300.2\uff0c\u6211\u4eec\u4f1a\u611f\u53d7\u5230\u4e00\u500d\u7684\u989c\u8272\u53d8\u5316\uff0c\u800c\u4ece0.4\u52300.8\u6211\u4eec\u624d\u80fd\u611f\u53d7\u5230\u76f8\u540c\u7a0b\u5ea6\uff08\u53d8\u4eae\u4e00\u500d\uff09\u7684\u989c\u8272\u53d8\u5316\u3002\u5982\u679c\u8fd8\u662f\u4e0d\u7406\u89e3\uff0c\u53ef\u4ee5\u53c2\u8003\u77e5\u4e4e\u7684 \u7b54\u6848 \uff09\u3002\u7136\u800c\uff0c\u5f53\u6211\u4eec\u8c08\u8bba\u5149\u7684\u7269\u7406\u4eae\u5ea6\uff0c\u6bd4\u5982\u5149\u6e90\u53d1\u5c04\u5149\u5b50\u7684\u6570\u91cf\u7684\u65f6\u5019\uff0c\u5e95\u90e8\uff08\u7b2c\u4e8c\u884c\uff09\u7684\u7070\u9636\u663e\u793a\u51fa\u7684\u624d\u662f\u7269\u7406\u4e16\u754c\u771f\u5b9e\u7684\u4eae\u5ea6\u3002\u5982\u5e95\u90e8\u7684\u7070\u9636\u663e\u793a\uff0c\u4eae\u5ea6\u52a0\u500d\u65f6\u8fd4\u56de\u7684\u4e5f\u662f\u771f\u5b9e\u7684\u7269\u7406\u4eae\u5ea6\uff08\u8bd1\u6ce8\uff1a\u8fd9\u91cc\u4eae\u5ea6\u662f\u6307\u5149\u5b50\u6570\u91cf\u548c\u6b63\u76f8\u5173\u7684\u4eae\u5ea6\uff0c\u5373\u7269\u7406\u4eae\u5ea6\uff0c\u524d\u9762\u8ba8\u8bba\u7684\u662f\u4eba\u7684\u611f\u77e5\u4eae\u5ea6\uff1b\u7269\u7406\u4eae\u5ea6\u548c\u611f\u77e5\u4eae\u5ea6\u7684\u533a\u522b\u5728\u4e8e\uff0c\u7269\u7406\u4eae\u5ea6\u57fa\u4e8e\u5149\u5b50\u6570\u91cf\uff0c\u611f\u77e5\u4eae\u5ea6\u57fa\u4e8e\u4eba\u7684\u611f\u89c9\uff0c\u6bd4\u5982\u7b2c\u4e8c\u4e2a\u7070\u9636\u91cc\u4eae\u5ea60.1\u7684\u5149\u5b50\u6570\u91cf\u662f0.2\u7684\u4e8c\u5206\u4e4b\u4e00\uff09\uff0c\u4f46\u662f\u7531\u4e8e\u8fd9\u4e0e\u6211\u4eec\u7684\u773c\u775b\u611f\u77e5\u4eae\u5ea6\u4e0d\u5b8c\u5168\u4e00\u81f4\uff08\u5bf9\u6bd4\u8f83\u6697\u7684\u989c\u8272\u53d8\u5316\u66f4\u654f\u611f\uff09\uff0c\u6240\u4ee5\u5b83\u770b\u8d77\u6765\u6709\u5dee\u5f02\u3002 \u56e0\u4e3a\u4eba\u773c\u770b\u5230\u989c\u8272\u7684\u4eae\u5ea6\u66f4\u503e\u5411\u4e8e\u9876\u90e8\u7684\u7070\u9636\uff0c\u663e\u793a\u5668\u4f7f\u7528\u7684\u4e5f\u662f\u4e00\u79cd\u6307\u6570\u5173\u7cfb\uff08\u7535\u538b\u76842.2\u6b21\u5e42\uff09\uff0c\u6240\u4ee5\u7269\u7406\u4eae\u5ea6\u901a\u8fc7\u663e\u793a\u5668\u80fd\u591f\u88ab\u6620\u5c04\u5230\u9876\u90e8\u7684\u975e\u7ebf\u6027\u4eae\u5ea6\uff1b\u56e0\u6b64\u770b\u8d77\u6765\u6548\u679c\u4e0d\u9519\u3002 \u663e\u793a\u5668\u7684\u8fd9\u4e2a\u975e\u7ebf\u6027\u6620\u5c04\u7684\u786e\u53ef\u4ee5\u8ba9\u4eae\u5ea6\u5728\u6211\u4eec\u773c\u4e2d\u770b\u8d77\u6765\u66f4\u597d\uff0c\u4f46\u5f53\u6e32\u67d3\u56fe\u50cf\u65f6\uff0c\u4f1a\u4ea7\u751f\u4e00\u4e2a\u95ee\u9898\uff1a\u6211\u4eec\u5728\u5e94\u7528\u4e2d\u914d\u7f6e\u7684\u4eae\u5ea6\u548c\u989c\u8272\u662f\u57fa\u4e8e\u6211\u4eec\u4ece\u663e\u793a\u5668\u6240\u770b\u5230\u7684\uff0c\u8fd9\u6837\u6240\u6709\u7684\u914d\u7f6e\u5b9e\u9645\u4e0a\u662f\u975e\u7ebf\u6027\u7684\u4eae\u5ea6/\u989c\u8272\u914d\u7f6e\u3002\u8bf7\u770b\u4e0b\u56fe\uff1a \u70b9\u7ebf\u4ee3\u8868\u7ebf\u6027\u989c\u8272/\u4eae\u5ea6\u503c\uff08\u8bd1\u6ce8\uff1a\u8fd9\u8868\u793a\u7684\u662f\u7406\u60f3\u72b6\u6001\uff0cGamma\u4e3a1\uff09\uff0c\u5b9e\u7ebf\u4ee3\u8868\u663e\u793a\u5668\u5668\u663e\u793a\u7684\u989c\u8272\u3002\u5982\u679c\u6211\u4eec\u628a\u4e00\u4e2a\u70b9\u7ebf\u7ebf\u6027\u7684\u989c\u8272\u7ffb\u4e00\u500d\uff0c\u7ed3\u679c\u5c31\u662f\u8fd9\u4e2a\u503c\u7684\u4e24\u500d\u3002\u6bd4\u5982\uff0c\u5149\u7684\u989c\u8272\u5411\u91cf \\bar{L} = (0.5, 0.0, 0.0) \u4ee3\u8868\u7684\u662f\u534a\u6697\u7ea2\u8272\u3002\u5982\u679c\u6211\u4eec\u5728\u7ebf\u6027\u7a7a\u95f4\u4e2d\u628a\u5b83\u7ffb\u500d\uff0c\u5c31\u4f1a\u53d8\u6210 (1.0, 0.0, 0.0) \uff0c\u5c31\u50cf\u4f60\u5728\u56fe\u4e2d\u770b\u5230\u7684\u90a3\u6837\u3002\u7136\u800c\uff0c\u7531\u4e8e\u6211\u4eec\u5b9a\u4e49\u7684\u989c\u8272\u4ecd\u7136\u9700\u8981\u8f93\u51fa\u7684\u663e\u793a\u5668\u4e0a\uff0c\u663e\u793a\u5668\u4e0a\u663e\u793a\u7684\u5b9e\u9645\u989c\u8272\u5c31\u4f1a\u662f (0.218, 0.0, 0.0) \u3002\u5728\u8fd9\u513f\u95ee\u9898\u5c31\u51fa\u73b0\u4e86\uff1a\u5f53\u6211\u4eec\u5c06\u7406\u60f3\u4e2d\u76f4\u7ebf\u4e0a\u7684\u90a3\u4e2a\u534a\u6697\u7ea2\u8272\u7ffb\u4e00\u500d\u65f6\uff0c\u5728\u663e\u793a\u5668\u4e0a\u5b9e\u9645\u4e0a\u4eae\u5ea6\u7ffb\u4e864.5\u500d\u4ee5\u4e0a\uff01 \u76f4\u5230\u73b0\u5728\uff0c\u6211\u4eec\u8fd8\u4e00\u76f4\u5047\u8bbe\u6211\u4eec\u6240\u6709\u7684\u5de5\u4f5c\u90fd\u662f\u5728\u7ebf\u6027\u7a7a\u95f4\u4e2d\u8fdb\u884c\u7684\uff08\u8bd1\u6ce8\uff1aGamma\u4e3a1\uff09\uff0c\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u4e00\u76f4\u5728\u663e\u793a\u5668\u7684\u8f93\u51fa\u7a7a\u95f4\u4e2d\u5de5\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u914d\u7f6e\u7684\u6240\u6709\u989c\u8272\u548c\u7167\u660e\u53d8\u91cf\u5728\u7269\u7406\u4e0a\u90fd\u4e0d\u6b63\u786e\uff0c\u4f46\u5728\u663e\u793a\u5668\u4e0a\u770b\u8d77\u6765(\u6709\u70b9)\u6b63\u786e\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6211\u4eec\uff08\u4ee5\u53ca\u827a\u672f\u5bb6\uff09\u901a\u5e38\u5c06\u5149\u7167\u503c\u8bbe\u7f6e\u5f97\u6bd4\u672c\u6765\u66f4\u4eae\u4e00\u4e9b\uff08\u7531\u4e8e\u663e\u793a\u5668\u4f1a\u5c06\u5176\u4eae\u5ea6\u663e\u793a\u7684\u66f4\u6697\u4e00\u4e9b\uff09\uff0c\u8fd9\u5bfc\u81f4\u5927\u591a\u6570\u5728\u7ebf\u6027\u7a7a\u95f4\u91cc\u7684\u8ba1\u7b97\u4e0d\u6b63\u786e\u3002\u540c\u65f6\uff0c\u8fd8\u8981\u8bb0\u4f4f\uff0c\u663e\u793a\u5668\u6240\u663e\u793a\u51fa\u6765\u7684\u56fe\u50cf\u548c\u7ebf\u6027\u56fe\u50cf\u7684\u6700\u5c0f\u4eae\u5ea6\u662f\u76f8\u540c\u7684\uff0c\u5b83\u4eec\u6700\u5927\u7684\u4eae\u5ea6\u4e5f\u662f\u76f8\u540c\u7684\uff1b\u53ea\u662f\u4e2d\u95f4\u4eae\u5ea6\u90e8\u5206\u4f1a\u88ab\u538b\u6697\u3002 \u56e0\u4e3a\u989c\u8272\u662f\u6839\u636e\u663e\u793a\u5668\u7684\u8f93\u51fa\u914d\u7f6e\u7684\uff0c\u6240\u4ee5\u7ebf\u6027\u7a7a\u95f4\u4e2d\u7684\u6240\u6709\u4e2d\u95f4(\u7167\u660e)\u8ba1\u7b97\u5728\u7269\u7406\u4e0a\u90fd\u662f\u4e0d\u6b63\u786e\u7684\u3002\u968f\u7740\u66f4\u591a\u5148\u8fdb\u7684\u7167\u660e\u7b97\u6cd5\u7684\u5f15\u5165\uff0c\u8fd9\u4e00\u70b9\u53d8\u5f97\u66f4\u52a0\u660e\u663e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u901a\u8fc7\u4f3d\u739b\u6821\u6b63\uff0c(\u66f4\u65b0\u7684)\u989c\u8272\u503c\u53ef\u4ee5\u5f88\u597d\u5730\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u8f83\u6697\u7684\u533a\u57df\u663e\u793a\u66f4\u591a\u7684\u7ec6\u8282\u3002\u603b\u7684\u6765\u8bf4\uff0c\u4e00\u4e2a\u66f4\u597d\u7684\u56fe\u50cf\u8d28\u91cf\u4e0e\u4e00\u4e9b\u5c0f\u7684\u4fee\u6539\u3002 \u5982\u679c\u6ca1\u6709\u9002\u5f53\u5730\u7ea0\u6b63\u8fd9\u4e2a\u663e\u793a\u5668\u4f3d\u9a6c\uff0c\u7167\u660e\u770b\u8d77\u6765\u662f\u9519\u8bef\u7684\uff0c\u827a\u672f\u5bb6\u5c06\u5f88\u96be\u83b7\u5f97\u903c\u771f\u548c\u597d\u770b\u7684\u7ed3\u679c\u3002\u89e3\u51b3\u65b9\u6848\u6b63\u662f\u5e94\u7528 \u4f3d\u9a6c\u6821\u6b63 \u3002","title":"Gamma\u6821\u6b63"},{"location":"05%20Advanced%20Lighting/02%20Gamma%20Correction/#gamma_1","text":"Gamma\u6821\u6b63(Gamma Correction)\u7684\u601d\u8def\u662f\u5728\u6700\u7ec8\u7684\u989c\u8272\u8f93\u51fa\u5230\u663e\u793a\u5668\u4e4b\u524d\u5148\u5c06Gamma\u7684\u5012\u6570\u4f5c\u7528\u5230\u989c\u8272\u4e0a\u3002\u56de\u987e\u672c\u7ae0\u524d\u9762\u7684\u4f3d\u9a6c\u66f2\u7ebf\u56fe\uff0c\u6211\u4eec\u770b\u5230\u53e6\u4e00\u6761\u865a\u7ebf\uff0c\u5b83\u4e0e\u663e\u793a\u5668\u7684\u4f3d\u9a6c\u66f2\u7ebf\u76f8\u53cd\u3002\u6211\u4eec\u5c06\u6bcf\u4e2a\u7ebf\u6027\u8f93\u51fa\u989c\u8272\u4e58\u4ee5\u8fd9\u4e2a\u9006\u4f3d\u9a6c\u66f2\u7ebf(\u4f7f\u5b83\u4eec\u66f4\u4eae)\uff0c\u4e00\u65e6\u989c\u8272\u663e\u793a\u5728\u663e\u793a\u5668\u4e0a\uff0c\u663e\u793a\u5668\u7684\u4f3d\u9a6c\u66f2\u7ebf\u5c31\u88ab\u5e94\u7528\uff0c\u7ed3\u679c\u989c\u8272\u5c31\u53d8\u6210\u7ebf\u6027\u7684\u3002\u6211\u4eec\u6709\u6548\u5730\u4f7f\u4e2d\u95f4\u989c\u8272\u53d8\u4eae\uff0c\u8fd9\u6837\u4e00\u65e6\u663e\u793a\u5668\u53d8\u6697\uff0c\u5b83\u4eec\u5c31\u4f1a\u5e73\u8861\u3002 \u6211\u4eec\u6765\u770b\u53e6\u4e00\u4e2a\u4f8b\u5b50\u3002\u8fd8\u662f\u90a3\u4e2a\u6697\u7ea2\u8272 (0.5, 0.0, 0.0) \u3002\u5728\u5c06\u989c\u8272\u663e\u793a\u5230\u663e\u793a\u5668\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u5bf9\u989c\u8272\u5e94\u7528Gamma\u6821\u6b63\u66f2\u7ebf\u3002\u7ebf\u6027\u7684\u989c\u8272\u663e\u793a\u5728\u663e\u793a\u5668\u4e0a\u76f8\u5f53\u4e8e\u964d\u4f4e\u4e86 2.2 \u6b21\u5e42\u7684\u4eae\u5ea6\uff0c\u6240\u4ee5\u5012\u6570\u5c31\u662f 1/2.2 \u6b21\u5e42\u3002Gamma\u6821\u6b63\u540e\u7684\u6697\u7ea2\u8272\u5c31\u4f1a\u6210\u4e3a (0.5, 0.0, 0.0)^{1/2.2} = (0.5, 0.0, 0.0)^{0.45} = (0.73, 0.0, 0.0) \u3002\u6821\u6b63\u540e\u7684\u989c\u8272\u63a5\u7740\u88ab\u53d1\u9001\u7ed9\u663e\u793a\u5668\uff0c\u6700\u7ec8\u663e\u793a\u51fa\u6765\u7684\u989c\u8272\u662f (0.73, 0.0, 0.0)^{2.2} = (0.5, 0.0, 0.0) \u3002\u4f60\u4f1a\u53d1\u73b0\u4f7f\u7528\u4e86Gamma\u6821\u6b63\uff0c\u663e\u793a\u5668\u6700\u7ec8\u4f1a\u663e\u793a\u51fa\u6211\u4eec\u5728\u5e94\u7528\u4e2d\u8bbe\u7f6e\u7684\u90a3\u79cd\u7ebf\u6027\u7684\u989c\u8272\u3002 Important 2.2\u901a\u5e38\u662f\u662f\u5927\u591a\u6570\u663e\u793a\u8bbe\u5907\u7684\u5927\u6982\u5e73\u5747gamma\u503c\u3002\u57fa\u4e8egamma2.2\u7684\u989c\u8272\u7a7a\u95f4\u53eb\u505asRGB\u989c\u8272\u7a7a\u95f4\u3002\u6bcf\u4e2a\u663e\u793a\u5668\u7684gamma\u66f2\u7ebf\u90fd\u6709\u6240\u4e0d\u540c\uff0c\u4f46\u662fgamma2.2\u5728\u5927\u591a\u6570\u663e\u793a\u5668\u4e0a\u8868\u73b0\u90fd\u4e0d\u9519\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6e38\u620f\u7ecf\u5e38\u90fd\u4f1a\u4e3a\u73a9\u5bb6\u63d0\u4f9b\u6539\u53d8\u6e38\u620fgamma\u8bbe\u7f6e\u7684\u9009\u9879\uff0c\u4ee5\u9002\u5e94\u6bcf\u4e2a\u663e\u793a\u5668\uff08\u8bd1\u6ce8\uff1a\u73b0\u5728Gamma2.2\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6807\u51c6\uff0c\u540e\u6587\u4e2d\u4f60\u4f1a\u770b\u5230\u3002\u4f46\u73b0\u5728\u4f60\u53ef\u80fd\u4f1a\u95ee\uff0c\u524d\u9762\u4e0d\u662f\u8bf4Gamma2.2\u7684\u66f2\u7ebf\u4e0d\u662f\u548c\u4eba\u773c\u8bc6\u522b\u4eae\u5ea6\u7684\u7279\u70b9\u76f8\u540c\u5417\uff0c\u4e3a\u4f55\u8fd8\u9700\u8981\u6821\u6b63\u3002\u5176\u5b9e\u6211\u4eec\u4e0d\u9700\u8981\u8003\u8651\u4eba\u773c\u8bc6\u522b\u4eae\u5ea6\u7684\u7279\u70b9\uff0c\u6211\u4eec\u91cd\u70b9\u9700\u8981\u5173\u6ce8\u4fdd\u6301\u4eae\u5ea6\u7684\u7ebf\u6027\u53d8\u5316\u7279\u70b9\u3002\u4f60\u5728\u7a0b\u5e8f\u4e2d\u8bbe\u7f6e\u7684\u989c\u8272\uff0c\u6bd4\u5982\u5149\u7167\u90fd\u662f\u57fa\u4e8e\u7ebf\u6027Gamma\uff0c\u5373Gamma1\uff0c\u6bd4\u59821.0\u7684\u4eae\u5ea6\u5e94\u8be5\u662f0.5\u7684\u4e8c\u500d\uff0c\u5982\u679c\u4e0d\u8fdb\u884cgamma\u77eb\u6b63\uff0c\u7ebf\u60270.5\u7684\u4eae\u5ea6\u4f1a\u8f93\u51fa\u4e3a0.22\uff0c\u7ebf\u60271.0\u7684\u4eae\u5ea6\u4f1a\u88ab\u8f93\u51fa\u4e3a1.0\uff0c\u4eae\u5ea6\u76f8\u5dee\u4e86\u5f88\u591a\u500d\uff0c\u548c\u4f60\u7684\u9884\u671f\u4f1a\u5f88\u4e0d\u4e00\u6837\uff09\u3002 \u6709\u4e24\u79cd\u5728\u4f60\u7684\u573a\u666f\u4e2d\u5e94\u7528gamma\u6821\u6b63\u7684\u65b9\u5f0f\uff1a \u4f7f\u7528OpenGL\u5185\u5efa\u7684sRGB\u5e27\u7f13\u51b2\u3002 \u81ea\u5df1\u5728\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u8fdb\u884cgamma\u6821\u6b63\u3002 \u7b2c\u4e00\u4e2a\u9009\u9879\u4e5f\u8bb8\u662f\u6700\u7b80\u5355\u7684\u65b9\u5f0f\uff0c\u4f46\u662f\u6211\u4eec\u4e5f\u4f1a\u4e27\u5931\u4e00\u4e9b\u63a7\u5236\u6743\u3002\u5f00\u542fGL_FRAMEBUFFER_SRGB\uff0c\u53ef\u4ee5\u544a\u8bc9OpenGL\u6bcf\u4e2a\u540e\u7eed\u7684\u7ed8\u5236\u547d\u4ee4\u91cc\uff0c\u5728\u989c\u8272\u50a8\u5b58\u5230\u989c\u8272\u7f13\u51b2\u4e4b\u524d\u5148\u6821\u6b63sRGB\u989c\u8272\u3002sRGB\u8fd9\u4e2a\u989c\u8272\u7a7a\u95f4\u5927\u81f4\u5bf9\u5e94\u4e8egamma2.2\uff0c\u5b83\u4e5f\u662f\u5927\u591a\u6570\u8bbe\u5907\u7684\u4e00\u4e2a\u6807\u51c6\u3002\u5f00\u542fGL_FRAMEBUFFER_SRGB\u4ee5\u540e\uff0c\u6bcf\u6b21\u50cf\u7d20\u7740\u8272\u5668\u8fd0\u884c\u540e\u7eed\u5e27\u7f13\u51b2\uff0cOpenGL\u5c06\u81ea\u52a8\u6267\u884cgamma\u6821\u6b63\uff0c\u5305\u62ec\u9ed8\u8ba4\u5e27\u7f13\u51b2\u3002 \u5f00\u542fGL_FRAMEBUFFER_SRGB\u7b80\u5355\u7684\u8c03\u7528glEnable\u5c31\u884c\uff1a glEnable(GL_FRAMEBUFFER_SRGB); \u81ea\u6b64\uff0c\u4f60\u6e32\u67d3\u7684\u56fe\u50cf\u5c31\u88ab\u8fdb\u884cgamma\u6821\u6b63\u5904\u7406\uff0c\u4f60\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u4e8b\u60c5\u786c\u4ef6\u5c31\u5e2e\u4f60\u5904\u7406\u4e86\u3002\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5(\u548c\u5176\u4ed6\u65b9\u6cd5)\u4f60\u5e94\u8be5\u8bb0\u4f4f\u7684\u91cd\u70b9\u662f\uff0c\u4f3d\u9a6c\u6821\u6b63(\u4e5f)\u5c06\u989c\u8272\u4ece\u7ebf\u6027\u7a7a\u95f4\u8f6c\u6362\u4e3a\u975e\u7ebf\u6027\u7a7a\u95f4\uff0c\u6240\u4ee5\u53ea\u5728\u6700\u540e\u4e00\u6b65\u8fdb\u884c\u4f3d\u9a6c\u6821\u6b63\u3002\u5982\u679c\u4f60\u5728\u6700\u540e\u8f93\u51fa\u4e4b\u524d\u5c31\u8fdb\u884cgamma\u6821\u6b63\uff0c\u6240\u6709\u7684\u540e\u7eed\u64cd\u4f5c\u90fd\u662f\u5728\u64cd\u4f5c\u4e0d\u6b63\u786e\u7684\u989c\u8272\u503c\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u591a\u4e2a\u5e27\u7f13\u51b2\uff0c\u4f60\u53ef\u80fd\u6253\u7b97\u8ba9\u4e24\u4e2a\u5e27\u7f13\u51b2\u4e4b\u95f4\u4f20\u9012\u7684\u4e2d\u95f4\u7ed3\u679c\u4ecd\u7136\u4fdd\u6301\u7ebf\u6027\u7a7a\u95f4\u989c\u8272\uff0c\u53ea\u662f\u7ed9\u53d1\u9001\u7ed9\u663e\u793a\u5668\u7684\u6700\u540e\u7684\u90a3\u4e2a\u5e27\u7f13\u51b2\u5e94\u7528gamma\u6821\u6b63\u3002 \u7b2c\u4e8c\u79cd\u65b9\u6cd5\u9700\u8981\u66f4\u591a\u7684\u5de5\u4f5c\uff0c\u4f46\u4e5f\u8ba9\u6211\u4eec\u5b8c\u5168\u63a7\u5236\u4f3d\u9a6c\u64cd\u4f5c\u3002\u6211\u4eec\u5728\u6bcf\u4e2a\u76f8\u5173\u7684\u50cf\u7d20\u7740\u8272\u5668\u8fd0\u884c\u7ed3\u675f\u65f6\u5e94\u7528\u4f3d\u739b\u6821\u6b63\uff0c\u56e0\u6b64\u6700\u7ec8\u7684\u989c\u8272\u5728\u53d1\u9001\u5230\u663e\u793a\u5668\u4e4b\u524d\u7ed3\u675f\u4f3d\u739b\u6821\u6b63\u3002 void main() { // \u5728\u7ebf\u6027\u7a7a\u95f4\u505a\u70ab\u9177\u7684\u5149\u7167\u6548\u679c [...] // \u5e94\u7528\u4f3d\u9a6c\u77eb\u6b63 float gamma = 2.2; fragColor.rgb = pow(fragColor.rgb, vec3(1.0/gamma)); } \u6700\u540e\u4e00\u884c\u4ee3\u7801\uff0c\u5c06fragColor\u7684\u6bcf\u4e2a\u989c\u8272\u5143\u7d20\u5e94\u7528\u6709\u4e00\u4e2a1.0/gamma\u7684\u5e42\u8fd0\u7b97\uff0c\u6821\u6b63\u50cf\u7d20\u7740\u8272\u5668\u7684\u989c\u8272\u8f93\u51fa\u3002 \u8fd9\u79cd\u65b9\u6cd5\u7684\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u4e3a\u4e86\u4fdd\u6301\u4e00\u81f4\u6027\uff0c\u4f60\u5fc5\u987b\u5bf9\u6bcf\u4e2a\u6709\u52a9\u4e8e\u6700\u7ec8\u8f93\u51fa\u7684\u7247\u6bb5\u7740\u8272\u5668\u5e94\u7528\u4f3d\u739b\u6821\u6b63\u3002\u5982\u679c\u4f60\u6709\u591a\u4e2a\u5bf9\u8c61\u7684\u5341\u51e0\u4e2a\u7247\u6bb5\u7740\u8272\u5668\uff0c\u4f60\u5fc5\u987b\u4e3a\u6bcf\u4e2a\u7740\u8272\u5668\u6dfb\u52a0\u4f3d\u9a6c\u6821\u6b63\u4ee3\u7801\u3002\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5728\u4f60\u7684\u6e32\u67d3\u5faa\u73af\u4e2d\u5f15\u5165\u4e00\u4e2a\u540e\u5904\u7406\u9636\u6bb5\uff0c\u5e76\u5728\u540e\u5904\u7406\u7684\u56db\u8fb9\u5f62\u4e0a\u5e94\u7528\u4f3d\u9a6c\u6821\u6b63\u4f5c\u4e3a\u6700\u540e\u4e00\u6b65\uff0c\u8fd9\u6837\u4f60\u53ea\u9700\u8981\u505a\u4e00\u6b21\u4f3d\u9a6c\u77eb\u6b63\u5373\u53ef\u3002 \u8fd9\u53e5\u5355\u884c\u4ee3\u7801\u4ee3\u8868\u4e86gamma\u6821\u6b63\u7684\u5b9e\u73b0\u3002\u4e0d\u90a3\u4e48\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\uff0c\u4f46\u5f53\u4f60\u8fdb\u884cgamma\u6821\u6b63\u7684\u65f6\u5019\u6709\u4e00\u4e9b\u989d\u5916\u7684\u4e8b\u60c5\u522b\u5fd8\u4e86\u8003\u8651\u3002","title":"Gamma\u6821\u6b63"},{"location":"05%20Advanced%20Lighting/02%20Gamma%20Correction/#srgb","text":"\u56e0\u4e3a\u663e\u793a\u5668\u603b\u662f\u5728sRGB\u7a7a\u95f4\u4e2d\u663e\u793a\u5e94\u7528\u4e86gamma\u7684\u989c\u8272\uff0c\u65e0\u8bba\u4ec0\u4e48\u65f6\u5019\u5f53\u4f60\u5728\u8ba1\u7b97\u673a\u4e0a\u7ed8\u5236\u3001\u7f16\u8f91\u6216\u8005\u7ed8\u5236\u4e00\u4e2a\u56fe\u7247\u7684\u65f6\u5019\uff0c\u4f60\u6240\u9009\u7684\u989c\u8272\u90fd\u662f\u6839\u636e\u4f60\u5728\u663e\u793a\u5668\u4e0a\u770b\u5230\u7684\u90a3\u79cd\u3002\u8fd9\u5b9e\u9645\u610f\u5473\u7740\u6240\u6709\u4f60\u521b\u5efa\u6216\u7f16\u8f91\u7684\u56fe\u7247\u5e76\u4e0d\u662f\u5728\u7ebf\u6027\u7a7a\u95f4\uff0c\u800c\u662f\u5728sRGB\u7a7a\u95f4\u4e2d\uff08\u8bd1\u6ce8\uff1asRGB\u7a7a\u95f4\u5b9a\u4e49\u7684gamma\u63a5\u8fd1\u4e8e2.2\uff09\uff0c\u5047\u5982\u5728\u4f60\u7684\u5c4f\u5e55\u4e0a\u5bf9\u6697\u7ea2\u8272\u7ffb\u4e00\u500d\uff0c\u4fbf\u662f\u6839\u636e\u4f60\u6240\u611f\u77e5\u5230\u7684\u4eae\u5ea6\u8fdb\u884c\u7684\uff0c\u5e76\u4e0d\u7b49\u4e8e\u5c06\u7ea2\u8272\u5143\u7d20\u52a0\u500d\u3002 \u7ed3\u679c\u5c31\u662f\u7eb9\u7406\u7f16\u8f91\u8005\uff0c\u6240\u521b\u5efa\u7684\u6240\u6709\u7eb9\u7406\u90fd\u662f\u5728sRGB\u7a7a\u95f4\u4e2d\u7684\u7eb9\u7406\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u5728\u6e32\u67d3\u5e94\u7528\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u7eb9\u7406\uff0c\u6211\u4eec\u5fc5\u987b\u8003\u8651\u5230\u8fd9\u70b9\u3002\u5728\u6211\u4eec\u4e0d\u77e5\u9053gamma\u6821\u6b63\u4e4b\u524d\uff0c\u8fd9\u4e0d\u662f\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u7eb9\u7406\u5728sRGB\u7a7a\u95f4\u521b\u5efa\u548c\u5c55\u793a\uff0c\u540c\u6837\u6211\u4eec\u8fd8\u662f\u5728sRGB\u7a7a\u95f4\u4e2d\u4f7f\u7528\uff0c\u4ece\u800c\u4e0d\u5fc5gamma\u6821\u6b63\u7eb9\u7406\u663e\u793a\u4e5f\u6ca1\u95ee\u9898\u3002\u7136\u800c\uff0c\u73b0\u5728\u6211\u4eec\u662f\u628a\u6240\u6709\u4e1c\u897f\u90fd\u653e\u5728\u7ebf\u6027\u7a7a\u95f4\u4e2d\u5c55\u793a\u7684\uff0c\u7eb9\u7406\u989c\u8272\u5c31\u4f1a\u53d8\u574f\uff0c\u5982\u4e0b\u56fe\u5c55\u793a\u7684\u90a3\u6837\uff1a \u7eb9\u7406\u56fe\u50cf\u592a\u4eae\u4e86\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b83\u5b9e\u9645\u4e0a\u88ab\u4f3d\u739b\u6821\u6b63\u4e86\u4e24\u6b21!\u60f3\u60f3\u770b\uff0c\u5f53\u6211\u4eec\u6839\u636e\u5728\u663e\u793a\u5668\u4e0a\u770b\u5230\u7684\u521b\u5efa\u56fe\u50cf\u65f6\uff0c\u6211\u4eec\u6709\u6548\u5730\u5bf9\u56fe\u50cf\u7684\u989c\u8272\u503c\u8fdb\u884c\u4f3d\u739b\u6821\u6b63\uff0c\u4f7f\u5176\u5728\u663e\u793a\u5668\u4e0a\u770b\u8d77\u6765\u6b63\u786e\u3002\u56e0\u4e3a\u6211\u4eec\u5728\u6e32\u67d3\u5668\u4e2d\u518d\u6b21\u8fdb\u884c\u4f3d\u739b\u6821\u6b63\uff0c\u56fe\u50cf\u6700\u7ec8\u53d8\u5f97\u592a\u4eae\u4e86\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5fc5\u987b\u786e\u4fdd\u7eb9\u7406\u7f8e\u5de5\u5728\u7ebf\u6027\u7a7a\u95f4\u4e2d\u5de5\u4f5c\u3002\u7136\u800c\uff0c\u56e0\u4e3a\u5728sRGB\u7a7a\u95f4\u4e2d\u5de5\u4f5c\u66f4\u5bb9\u6613\uff0c\u800c\u4e14\u5927\u591a\u6570\u5de5\u5177\u751a\u81f3\u4e0d\u652f\u6301\u7ebf\u6027\u7eb9\u7406\uff0c\u6240\u4ee5\u8fd9\u53ef\u80fd\u4e0d\u662f\u9996\u9009\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u53e6\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\u5728\u5bf9\u5176\u989c\u8272\u503c\u8fdb\u884c\u4efb\u4f55\u8ba1\u7b97\u4e4b\u524d\u91cd\u65b0\u6821\u6b63\u6216\u5c06\u8fd9\u4e9bsRGB\u7eb9\u7406\u8f6c\u6362\u4e3a\u7ebf\u6027\u7a7a\u95f4\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u505a float gamma = 2.2; vec3 diffuseColor = pow(texture(diffuse, texCoords).rgb, vec3(gamma)); \u4e3a\u6bcf\u4e2asRGB\u7a7a\u95f4\u7684\u7eb9\u7406\u505a\u8fd9\u4ef6\u4e8b\u975e\u5e38\u70e6\u4eba\u3002\u5e78\u597d\uff0cOpenGL\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u53e6\u4e00\u4e2a\u65b9\u6848\u6765\u89e3\u51b3\u6211\u4eec\u7684\u9ebb\u70e6\uff0c\u8fd9\u5c31\u662fGL_SRGB\u548cGL_SRGB_ALPHA\u5185\u90e8\u7eb9\u7406\u683c\u5f0f\u3002 \u5982\u679c\u6211\u4eec\u5728OpenGL\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u7eb9\u7406\uff0c\u628a\u5b83\u6307\u5b9a\u4e3a\u4ee5\u4e0a\u4e24\u79cdsRGB\u7eb9\u7406\u683c\u5f0f\u5176\u4e2d\u4e4b\u4e00\uff0cOpenGL\u5c06\u81ea\u52a8\u628a\u989c\u8272\u6821\u6b63\u5230\u7ebf\u6027\u7a7a\u95f4\u4e2d\uff0c\u8fd9\u6837\u6211\u4eec\u6240\u4f7f\u7528\u7684\u6240\u6709\u989c\u8272\u503c\u90fd\u662f\u5728\u7ebf\u6027\u7a7a\u95f4\u4e2d\u7684\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u628a\u4e00\u4e2a\u7eb9\u7406\u6307\u5b9a\u4e3a\u4e00\u4e2asRGB\u7eb9\u7406\uff1a glTexImage2D(GL_TEXTURE_2D, 0, GL_SRGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, image); \u5982\u679c\u4f60\u8fd8\u6253\u7b97\u5728\u4f60\u7684\u7eb9\u7406\u4e2d\u5f15\u5165alpha\u5143\u7d20\uff0c\u4f60\u5fc5\u987b\u5c06\u7eb9\u7406\u7684\u5185\u90e8\u683c\u5f0f\u6307\u5b9a\u4e3aGL_SRGB_ALPHA\u3002 \u56e0\u4e3a\u4e0d\u662f\u6240\u6709\u7eb9\u7406\u90fd\u662f\u5728sRGB\u7a7a\u95f4\u4e2d\u7684\u6240\u4ee5\u5f53\u4f60\u628a\u7eb9\u7406\u6307\u5b9a\u4e3asRGB\u7eb9\u7406\u65f6\u8981\u683c\u5916\u5c0f\u5fc3\u3002\u6bd4\u5982diffuse\u7eb9\u7406\uff0c\u8fd9\u79cd\u4e3a\u7269\u4f53\u4e0a\u8272\u7684\u7eb9\u7406\u51e0\u4e4e\u90fd\u662f\u5728sRGB\u7a7a\u95f4\u4e2d\u7684\u3002\u800c\u4e3a\u4e86\u83b7\u53d6\u5149\u7167\u53c2\u6570\u7684\u7eb9\u7406\uff0c\u50cfspecular\u8d34\u56fe\u548c\u6cd5\u7ebf\u8d34\u56fe\u51e0\u4e4e\u90fd\u5728\u7ebf\u6027\u7a7a\u95f4\u4e2d\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u628a\u5b83\u4eec\u4e5f\u914d\u7f6e\u4e3asRGB\u7eb9\u7406\u7684\u8bdd\uff0c\u5149\u7167\u5c31\u574f\u6389\u4e86\u3002\u6307\u5b9asRGB\u7eb9\u7406\u65f6\u8981\u5f53\u5fc3\u3002 \u5c06diffuse\u7eb9\u7406\u5b9a\u4e49\u4e3asRGB\u7eb9\u7406\u4e4b\u540e\uff0c\u4f60\u5c06\u83b7\u5f97\u4f60\u6240\u671f\u671b\u7684\u89c6\u89c9\u8f93\u51fa\uff0c\u4f46\u8fd9\u6b21\u6bcf\u4e2a\u7269\u4f53\u90fd\u4f1a\u53ea\u8fdb\u884c\u4e00\u6b21gamma\u6821\u6b63\u3002","title":"sRGB\u7eb9\u7406"},{"location":"05%20Advanced%20Lighting/02%20Gamma%20Correction/#_1","text":"\u4f3d\u9a6c\u6821\u6b63\u7684\u53e6\u4e00\u4e2a\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5149\u7167\u8870\u51cf\u3002\u5728\u771f\u5b9e\u7684\u7269\u7406\u4e16\u754c\u4e2d\uff0c\u5149\u8870\u51cf\u4e0e\u5149\u6e90\u8ddd\u79bb\u7684\u5e73\u65b9\u6210\u53cd\u6bd4\u3002\u8bf4\u901a\u4fd7\u70b9\uff0c\u5149\u5f3a\u5ea6\u968f\u7740\u79bb\u5149\u6e90\u8ddd\u79bb\u7684\u5e73\u65b9\u589e\u52a0\u800c\u51cf\u5c11\uff0c\u5982\u4e0b\u56fe\u6240\u793a float attenuation = 1.0 / (distance * distance); \u7136\u800c\uff0c\u5f53\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a\u8870\u51cf\u516c\u5f0f\u7684\u65f6\u5019\uff0c\u8870\u51cf\u6548\u679c\u603b\u662f\u8fc7\u4e8e\u5f3a\u70c8\uff0c\u5149\u53ea\u80fd\u7167\u4eae\u4e00\u5c0f\u5708\uff0c\u770b\u8d77\u6765\u5e76\u4e0d\u771f\u5b9e\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6211\u4eec\u4f7f\u7528\u5728\u57fa\u672c\u5149\u7167\u6559\u7a0b\u4e2d\u6240\u8ba8\u8bba\u7684\u90a3\u79cd\u8870\u51cf\u65b9\u7a0b\uff0c\u5b83\u7ed9\u4e86\u6211\u4eec\u66f4\u5927\u7684\u63a7\u5236\u6743\uff0c\u6b64\u5916\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u53cc\u66f2\u7ebf\u51fd\u6570\uff1a float attenuation = 1.0 / distance; \u53cc\u66f2\u7ebf\u6bd4\u4f7f\u7528\u4e8c\u6b21\u51fd\u6570\u53d8\u4f53\u5728\u4e0d\u7528gamma\u6821\u6b63\u7684\u65f6\u5019\u770b\u8d77\u6765\u66f4\u771f\u5b9e\uff0c\u4e0d\u8fc7\u4f46\u6211\u4eec\u5f00\u542fgamma\u6821\u6b63\u4ee5\u540e\u7ebf\u6027\u8870\u51cf\u770b\u8d77\u6765\u592a\u5f31\u4e86\uff0c\u7b26\u5408\u7269\u7406\u7684\u4e8c\u6b21\u51fd\u6570\u7a81\u7136\u51fa\u73b0\u4e86\u66f4\u597d\u7684\u6548\u679c\u3002\u4e0b\u56fe\u663e\u793a\u4e86\u5176\u4e2d\u7684\u4e0d\u540c\uff1a \u8fd9\u79cd\u5dee\u5f02\u4ea7\u751f\u7684\u539f\u56e0\u662f\uff0c\u5149\u7684\u8870\u51cf\u65b9\u7a0b\u6539\u53d8\u4e86\u4eae\u5ea6\u503c\uff0c\u800c\u4e14\u5c4f\u5e55\u4e0a\u663e\u793a\u51fa\u6765\u7684\u4e5f\u4e0d\u662f\u7ebf\u6027\u7a7a\u95f4\uff0c\u5728\u663e\u793a\u5668\u4e0a\u6548\u679c\u6700\u597d\u7684\u8870\u51cf\u65b9\u7a0b\uff0c\u5e76\u4e0d\u662f\u7b26\u5408\u7269\u7406\u7684\u3002\u60f3\u60f3\u5e73\u65b9\u8870\u51cf\u65b9\u7a0b\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a\u65b9\u7a0b\uff0c\u800c\u4e14\u4e0d\u8fdb\u884cgamma\u6821\u6b63\uff0c\u663e\u793a\u5728\u76d1\u89c6\u5668\u4e0a\u7684\u8870\u51cf\u65b9\u7a0b\u5b9e\u9645\u4e0a\u5c06\u53d8\u6210 (1.0 / distance^2)^{2.2} \u3002\u82e5\u4e0d\u8fdb\u884cgamma\u6821\u6b63\uff0c\u5c06\u4ea7\u751f\u66f4\u5f3a\u70c8\u7684\u8870\u51cf\u3002\u8fd9\u4e5f\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u53cc\u66f2\u7ebf\u4e0d\u7528gamma\u6821\u6b63\u65f6\u770b\u8d77\u6765\u66f4\u771f\u5b9e\uff0c\u56e0\u4e3a\u5b83\u5b9e\u9645\u53d8\u6210\u4e86 (1.0 / distance)^{2.2} = 1.0 / distance^{2.2} \u3002\u8fd9\u548c\u7269\u7406\u516c\u5f0f\u662f\u5f88\u76f8\u4f3c\u7684\u3002 Important \u6211\u4eec\u5728\u57fa\u7840\u5149\u7167\u6559\u7a0b\u4e2d\u8ba8\u8bba\u7684\u66f4\u9ad8\u7ea7\u7684\u90a3\u4e2a\u8870\u51cf\u65b9\u7a0b\u5728\u6709gamma\u6821\u6b63\u7684\u573a\u666f\u4e2d\u4e5f\u4ecd\u7136\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u8ba9\u6211\u4eec\u5bf9\u8870\u51cf\u62e5\u6709\u66f4\u591a\u51c6\u786e\u7684\u63a7\u5236\u6743\uff08\u4e0d\u8fc7\uff0c\u5728\u8fdb\u884cgamma\u6821\u6b63\u7684\u573a\u666f\u4e2d\u5f53\u7136\u9700\u8981\u4e0d\u540c\u7684\u53c2\u6570\uff09\u3002 \u6211\u521b\u5efa\u7684\u8fd9\u4e2a\u7b80\u5355\u7684demo\u573a\u666f\uff0c\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u6e90\u7801\u3002\u6309\u4e0b\u7a7a\u683c\u5c31\u80fd\u5728\u6709gamma\u6821\u6b63\u548c\u65e0gamma\u6821\u6b63\u7684\u573a\u666f\u8fdb\u884c\u5207\u6362\uff0c\u4e24\u4e2a\u573a\u666f\u4f7f\u7528\u7684\u662f\u76f8\u540c\u7684\u7eb9\u7406\u548c\u8870\u51cf\u3002\u8fd9\u4e0d\u662f\u6548\u679c\u6700\u597d\u7684demo\uff0c\u4e0d\u8fc7\u5b83\u80fd\u5c55\u793a\u51fa\u5982\u4f55\u5e94\u7528\u6240\u6709\u8fd9\u4e9b\u6280\u672f\u3002 \u603b\u800c\u8a00\u4e4b\uff0cgamma\u6821\u6b63\u4f7f\u4f60\u53ef\u4ee5\u5728\u7ebf\u6027\u7a7a\u95f4\u4e2d\u8fdb\u884c\u64cd\u4f5c\u3002\u56e0\u4e3a\u7ebf\u6027\u7a7a\u95f4\u66f4\u7b26\u5408\u7269\u7406\u4e16\u754c\uff0c\u5927\u591a\u6570\u7269\u7406\u516c\u5f0f\u73b0\u5728\u90fd\u53ef\u4ee5\u83b7\u5f97\u8f83\u597d\u6548\u679c\uff0c\u6bd4\u5982\u771f\u5b9e\u7684\u5149\u7684\u8870\u51cf\u3002\u4f60\u7684\u5149\u7167\u8d8a\u771f\u5b9e\uff0c\u4f7f\u7528gamma\u6821\u6b63\u83b7\u5f97\u6f02\u4eae\u7684\u6548\u679c\u5c31\u8d8a\u5bb9\u6613\u3002\u8fd9\u4e5f\u6b63\u662f\u4e3a\u4ec0\u4e48\u5f53\u5f15\u8fdbgamma\u6821\u6b63\u65f6\uff0c\u5efa\u8bae\u53ea\u53bb\u8c03\u6574\u5149\u7167\u53c2\u6570\u7684\u539f\u56e0\u3002","title":"\u8870\u51cf"},{"location":"05%20Advanced%20Lighting/02%20Gamma%20Correction/#_2","text":"What every coder should know about gamma John Novak\u5199\u7684\u4e00\u7bc7\u5173\u4e8e\u4f3d\u9a6c\u6821\u6b63\u7684\u6df1\u5ea6\u6587\u7ae0\u3002 cambridgeincolour.com :\u66f4\u591a\u5173\u4e8egamma\u548cgamma\u6821\u6b63\u7684\u5185\u5bb9\u3002 blog.wolfire.com : \u8fd9\u662fDavid Rosen\u7684\u4e00\u7bc7\u5173\u4e8e\u4f3d\u9a6c\u6821\u6b63\u5728\u56fe\u5f62\u6e32\u67d3\u4e2d\u7684\u597d\u5904\u7684\u535a\u5ba2\u3002 renderwonk.com : \u4e00\u4e9b\u989d\u5916\u7684\u5b9e\u8df5\u4e0a\u7684\u601d\u8003\u3002","title":"\u9644\u52a0\u8d44\u6e90"},{"location":"05%20Advanced%20Lighting/04%20Normal%20Mapping/","text":"\u6cd5\u7ebf\u8d34\u56fe \u539f\u6587 Normal Mapping \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django \u6821\u5bf9 KenLee Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u6211\u4eec\u7684\u573a\u666f\u4e2d\u5df2\u7ecf\u5145\u6ee1\u4e86\u591a\u8fb9\u5f62\u7269\u4f53\uff0c\u5176\u4e2d\u6bcf\u4e2a\u90fd\u53ef\u80fd\u7531\u6210\u767e\u4e0a\u5343\u5e73\u5766\u7684\u4e09\u89d2\u5f62\u7ec4\u6210\u3002\u6211\u4eec\u4ee5\u5411\u4e09\u89d2\u5f62\u4e0a\u9644\u52a0\u7eb9\u7406\u7684\u65b9\u5f0f\u6765\u589e\u52a0\u989d\u5916\u7ec6\u8282\uff0c\u63d0\u5347\u771f\u5b9e\u611f\uff0c\u9690\u85cf\u591a\u8fb9\u5f62\u51e0\u4f55\u4f53\u662f\u7531\u65e0\u6570\u4e09\u89d2\u5f62\u7ec4\u6210\u7684\u4e8b\u5b9e\u3002\u7eb9\u7406\u786e\u6709\u52a9\u76ca\uff0c\u7136\u800c\u5f53\u4f60\u8fd1\u770b\u5b83\u4eec\u65f6\uff0c\u8fd9\u4e2a\u4e8b\u5b9e\u4fbf\u9690\u85cf\u4e0d\u4f4f\u4e86\u3002\u73b0\u5b9e\u4e2d\u7684\u7269\u4f53\u8868\u9762\u5e76\u975e\u662f\u5e73\u5766\u7684\uff0c\u800c\u662f\u8868\u73b0\u51fa\u65e0\u6570\uff08\u51f9\u51f8\u4e0d\u5e73\u7684\uff09\u7ec6\u8282\u3002 \u4f8b\u5982\uff0c\u7816\u5757\u7684\u8868\u9762\u3002\u7816\u5757\u7684\u8868\u9762\u975e\u5e38\u7c97\u7cd9\uff0c\u663e\u7136\u4e0d\u662f\u5b8c\u5168\u5e73\u5766\u7684\uff1a\u5b83\u5305\u542b\u7740\u63a5\u7f1d\u5904\u6c34\u6ce5\u51f9\u75d5\uff0c\u4ee5\u53ca\u975e\u5e38\u591a\u7684\u7ec6\u5c0f\u7684\u7a7a\u6d1e\u3002\u5982\u679c\u6211\u4eec\u5728\u4e00\u4e2a\u6709\u5149\u7684\u573a\u666f\u4e2d\u770b\u8fd9\u6837\u4e00\u4e2a\u7816\u5757\u7684\u8868\u9762\uff0c\u95ee\u9898\u5c31\u51fa\u6765\u4e86\u3002\u4e0b\u56fe\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7816\u5757\u7eb9\u7406\u5e94\u7528\u5230\u4e86\u5e73\u5766\u7684\u8868\u9762\uff0c\u5e76\u88ab\u4e00\u4e2a\u70b9\u5149\u6e90\u7167\u4eae\u3002 \u5149\u7167\u5e76\u6ca1\u6709\u5448\u73b0\u51fa\u4efb\u4f55\u88c2\u75d5\u548c\u5b54\u6d1e\uff0c\u5b8c\u5168\u5ffd\u7565\u4e86\u7816\u5757\u4e4b\u95f4\u51f9\u8fdb\u53bb\u7684\u7ebf\u6761\uff1b\u8868\u9762\u770b\u8d77\u6765\u5b8c\u5168\u5c31\u662f\u5e73\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528specular\u8d34\u56fe\u6839\u636e\u6df1\u5ea6\u6216\u5176\u4ed6\u7ec6\u8282\u963b\u6b62\u90e8\u5206\u8868\u9762\u88ab\u7167\u7684\u66f4\u4eae\uff0c\u4ee5\u6b64\u90e8\u5206\u5730\u89e3\u51b3\u95ee\u9898\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u65b9\u6848\u3002\u6211\u4eec\u9700\u8981\u7684\u662f\u67d0\u79cd\u53ef\u4ee5\u544a\u77e5\u5149\u7167\u7cfb\u7edf\u7ed9\u6240\u6709\u6709\u5173\u7269\u4f53\u8868\u9762\u7c7b\u4f3c\u6df1\u5ea6\u8fd9\u6837\u7684\u7ec6\u8282\u7684\u65b9\u5f0f\u3002 \u5982\u679c\u6211\u4eec\u4ee5\u5149\u7684\u89c6\u89d2\u6765\u770b\u8fd9\u4e2a\u95ee\u9898\uff1a\u662f\u4ec0\u4e48\u4f7f\u8868\u9762\u88ab\u89c6\u4e3a\u5b8c\u5168\u5e73\u5766\u7684\u8868\u9762\u6765\u7167\u4eae\uff1f\u7b54\u6848\u4f1a\u662f\u8868\u9762\u7684\u6cd5\u7ebf\u5411\u91cf\u3002\u4ee5\u5149\u7167\u7b97\u6cd5\u7684\u89c6\u89d2\u8003\u8651\u7684\u8bdd\uff0c\u53ea\u6709\u4e00\u4ef6\u4e8b\u51b3\u5b9a\u7269\u4f53\u7684\u5f62\u72b6\uff0c\u8fd9\u5c31\u662f\u5782\u76f4\u4e8e\u5b83\u7684\u6cd5\u7ebf\u5411\u91cf\u3002\u7816\u5757\u8868\u9762\u53ea\u6709\u4e00\u4e2a\u6cd5\u7ebf\u5411\u91cf\uff0c\u8868\u9762\u5b8c\u5168\u6839\u636e\u8fd9\u4e2a\u6cd5\u7ebf\u5411\u91cf\u88ab\u4ee5\u4e00\u81f4\u7684\u65b9\u5f0f\u7167\u4eae\u3002\u5982\u679c\u6bcf\u4e2afragment\u90fd\u662f\u7528\u81ea\u5df1\u7684\u4e0d\u540c\u7684\u6cd5\u7ebf\u4f1a\u600e\u6837\uff1f\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u8868\u9762\u7ec6\u5fae\u7684\u7ec6\u8282\u5bf9\u6cd5\u7ebf\u5411\u91cf\u8fdb\u884c\u6539\u53d8\uff1b\u8fd9\u6837\u5c31\u4f1a\u83b7\u5f97\u4e00\u79cd\u8868\u9762\u770b\u8d77\u6765\u8981\u590d\u6742\u5f97\u591a\u7684\u5e7b\u89c9\uff1a \u6bcf\u4e2afragment\u4f7f\u7528\u4e86\u81ea\u5df1\u7684\u6cd5\u7ebf\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba9\u5149\u7167\u76f8\u4fe1\u4e00\u4e2a\u8868\u9762\u7531\u5f88\u591a\u5fae\u5c0f\u7684\uff08\u5782\u76f4\u4e8e\u6cd5\u7ebf\u5411\u91cf\u7684\uff09\u5e73\u9762\u6240\u7ec4\u6210\uff0c\u7269\u4f53\u8868\u9762\u7684\u7ec6\u8282\u5c06\u4f1a\u5f97\u5230\u6781\u5927\u63d0\u5347\u3002\u8fd9\u79cd\u6bcf\u4e2afragment\u4f7f\u7528\u5404\u81ea\u7684\u6cd5\u7ebf\uff0c\u66ff\u4ee3\u4e00\u4e2a\u9762\u4e0a\u6240\u6709fragment\u4f7f\u7528\u540c\u4e00\u4e2a\u6cd5\u7ebf\u7684\u6280\u672f\u53eb\u505a\u6cd5\u7ebf\u8d34\u56fe\uff08normal mapping\uff09\u6216\u51f9\u51f8\u8d34\u56fe\uff08bump mapping\uff09\u3002\u5e94\u7528\u5230\u7816\u5899\u4e0a\uff0c\u6548\u679c\u50cf\u8fd9\u6837\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\u7ec6\u8282\u83b7\u5f97\u4e86\u6781\u5927\u63d0\u5347\uff0c\u5f00\u9500\u5374\u4e0d\u5927\u3002\u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u8981\u6539\u53d8\u6bcf\u4e2afragment\u7684\u6cd5\u7ebf\u5411\u91cf\uff0c\u5e76\u4e0d\u9700\u8981\u6539\u53d8\u6240\u6709\u5149\u7167\u516c\u5f0f\u3002\u73b0\u5728\u6211\u4eec\u662f\u4e3a\u6bcf\u4e2afragment\u4f20\u9012\u4e00\u4e2a\u6cd5\u7ebf\uff0c\u4e0d\u518d\u4f7f\u7528\u63d2\u503c\u8868\u9762\u6cd5\u7ebf\u3002\u8fd9\u6837\u5149\u7167\u4f7f\u8868\u9762\u62e5\u6709\u4e86\u81ea\u5df1\u7684\u7ec6\u8282\u3002 \u6cd5\u7ebf\u8d34\u56fe \u4e3a\u4f7f\u6cd5\u7ebf\u8d34\u56fe\u5de5\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u4e2afragment\u63d0\u4f9b\u4e00\u4e2a\u6cd5\u7ebf\u3002\u50cfdiffuse\u8d34\u56fe\u548cspecular\u8d34\u56fe\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a2D\u7eb9\u7406\u6765\u50a8\u5b58\u6cd5\u7ebf\u6570\u636e\u30022D\u7eb9\u7406\u4e0d\u4ec5\u53ef\u4ee5\u50a8\u5b58\u989c\u8272\u548c\u5149\u7167\u6570\u636e\uff0c\u8fd8\u53ef\u4ee5\u50a8\u5b58\u6cd5\u7ebf\u5411\u91cf\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u4ece2D\u7eb9\u7406\u4e2d\u91c7\u6837\u5f97\u5230\u7279\u5b9a\u7eb9\u7406\u7684\u6cd5\u7ebf\u5411\u91cf\u3002 \u7531\u4e8e\u6cd5\u7ebf\u5411\u91cf\u662f\u4e2a\u51e0\u4f55\u5de5\u5177\uff0c\u800c\u7eb9\u7406\u901a\u5e38\u53ea\u7528\u4e8e\u50a8\u5b58\u989c\u8272\u4fe1\u606f\uff0c\u7528\u7eb9\u7406\u50a8\u5b58\u6cd5\u7ebf\u5411\u91cf\u4e0d\u662f\u975e\u5e38\u76f4\u63a5\u3002\u5982\u679c\u4f60\u60f3\u4e00\u60f3\uff0c\u5c31\u4f1a\u77e5\u9053\u7eb9\u7406\u4e2d\u7684\u989c\u8272\u5411\u91cf\u7528r\u3001g\u3001b\u5143\u7d20\u4ee3\u8868\u4e00\u4e2a3D\u5411\u91cf\u3002\u7c7b\u4f3c\u7684\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u6cd5\u7ebf\u5411\u91cf\u7684x\u3001y\u3001z\u5143\u7d20\u50a8\u5b58\u5230\u7eb9\u7406\u4e2d\uff0c\u4ee3\u66ff\u989c\u8272\u7684r\u3001g\u3001b\u5143\u7d20\u3002\u6cd5\u7ebf\u5411\u91cf\u7684\u8303\u56f4\u5728-1\u52301\u4e4b\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u8981\u5c06\u5176\u6620\u5c04\u52300\u52301\u7684\u8303\u56f4\uff1a vec3 rgb_normal = normal * 0.5 + 0.5; // \u4ece [-1,1] \u8f6c\u6362\u81f3 [0,1] \u5c06\u6cd5\u7ebf\u5411\u91cf\u53d8\u6362\u4e3a\u50cf\u8fd9\u6837\u7684RGB\u989c\u8272\u5143\u7d20\uff0c\u6211\u4eec\u5c31\u80fd\u628a\u6839\u636e\u8868\u9762\u7684\u5f62\u72b6\u7684fragment\u7684\u6cd5\u7ebf\u4fdd\u5b58\u57282D\u7eb9\u7406\u4e2d\u3002\u6559\u7a0b\u5f00\u5934\u5c55\u793a\u7684\u90a3\u4e2a\u7816\u5757\u7684\u4f8b\u5b50\u7684\u6cd5\u7ebf\u8d34\u56fe\u5982\u4e0b\u6240\u793a\uff1a \u8fd9\u4f1a\u662f\u4e00\u79cd\u504f\u84dd\u8272\u8c03\u7684\u7eb9\u7406\uff08\u4f60\u5728\u7f51\u4e0a\u627e\u5230\u7684\u51e0\u4e4e\u6240\u6709\u6cd5\u7ebf\u8d34\u56fe\u90fd\u662f\u8fd9\u6837\u7684\uff09\u3002\u8fd9\u662f\u56e0\u4e3a\u6240\u6709\u6cd5\u7ebf\u7684\u6307\u5411\u90fd\u504f\u5411z\u8f74\uff080, 0, 1\uff09\u8fd9\u662f\u4e00\u79cd\u504f\u84dd\u7684\u989c\u8272\u3002\u6cd5\u7ebf\u5411\u91cf\u4ecez\u8f74\u65b9\u5411\u4e5f\u5411\u5176\u4ed6\u65b9\u5411\u8f7b\u5fae\u504f\u79fb\uff0c\u989c\u8272\u4e5f\u5c31\u53d1\u751f\u4e86\u8f7b\u5fae\u53d8\u5316\uff0c\u8fd9\u6837\u770b\u8d77\u6765\u4fbf\u6709\u4e86\u4e00\u79cd\u6df1\u5ea6\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u5728\u6bcf\u4e2a\u7816\u5757\u7684\u9876\u90e8\uff0c\u989c\u8272\u503e\u5411\u4e8e\u504f\u7eff\uff0c\u8fd9\u662f\u56e0\u4e3a\u7816\u5757\u7684\u9876\u90e8\u7684\u6cd5\u7ebf\u504f\u5411\u4e8e\u6307\u5411\u6b63y\u8f74\u65b9\u5411\uff080, 1, 0\uff09\uff0c\u8fd9\u6837\u5b83\u5c31\u662f\u7eff\u8272\u7684\u4e86\u3002 \u5728\u4e00\u4e2a\u7b80\u5355\u7684\u671d\u5411\u6b63z\u8f74\u7684\u5e73\u9762\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 \u8fd9\u4e2adiffuse\u7eb9\u7406 \u548c \u8fd9\u4e2a\u6cd5\u7ebf\u8d34\u56fe \u6765\u6e32\u67d3\u524d\u9762\u90e8\u5206\u7684\u56fe\u7247\u3002\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u4e2a\u94fe\u63a5\u91cc\u7684\u6cd5\u7ebf\u8d34\u56fe\u548c\u4e0a\u9762\u5c55\u793a\u7684\u90a3\u4e2a\u4e0d\u4e00\u6837\u3002\u539f\u56e0\u662fOpenGL\u8bfb\u53d6\u7684\u7eb9\u7406\u7684y\uff08\u6216V\uff09\u5750\u6807\u548c\u7eb9\u7406\u901a\u5e38\u88ab\u521b\u5efa\u7684\u65b9\u5f0f\u76f8\u53cd\u3002\u94fe\u63a5\u91cc\u7684\u6cd5\u7ebf\u8d34\u56fe\u7684y\uff08\u6216\u7eff\u8272\uff09\u5143\u7d20\u662f\u76f8\u53cd\u7684\uff08\u4f60\u53ef\u4ee5\u770b\u5230\u7eff\u8272\u73b0\u5728\u5728\u4e0b\u8fb9\uff09\uff1b\u5982\u679c\u4f60\u6ca1\u8003\u8651\u8fd9\u4e2a\uff0c\u5149\u7167\u5c31\u4e0d\u6b63\u786e\u4e86\uff08\u8bd1\u6ce8\uff1a\u5982\u679c\u4f60\u73b0\u5728\u4e0d\u518d\u4f7f\u7528SOIL\u4e86\uff0c\u90a3\u5c31\u4e0d\u8981\u7528\u94fe\u63a5\u91cc\u7684\u90a3\u4e2a\u6cd5\u7ebf\u8d34\u56fe\uff0c\u8fd9\u4e2a\u95ee\u9898\u662fSOIL\u8f7d\u5165\u7eb9\u7406\u4e0a\u4e0b\u98a0\u5012\u6240\u81f4\uff0c\u5b83\u4e5f\u4f1a\u628a\u6cd5\u7ebf\u5728y\u65b9\u5411\u4e0a\u98a0\u5012\uff09\u3002\u52a0\u8f7d\u7eb9\u7406\uff0c\u628a\u5b83\u4eec\u7ed1\u5b9a\u5230\u5408\u9002\u7684\u7eb9\u7406\u5355\u5143\uff0c\u7136\u540e\u4f7f\u7528\u4e0b\u9762\u7684\u6539\u53d8\u4e86\u7684\u50cf\u7d20\u7740\u8272\u5668\u6765\u6e32\u67d3\u4e00\u4e2a\u5e73\u9762\uff1a uniform sampler2D normalMap; void main() { // \u4ece\u6cd5\u7ebf\u8d34\u56fe\u8303\u56f4[0,1]\u83b7\u53d6\u6cd5\u7ebf normal = texture(normalMap, fs_in.TexCoords).rgb; // \u5c06\u6cd5\u7ebf\u5411\u91cf\u8f6c\u6362\u4e3a\u8303\u56f4[-1,1] normal = normalize(normal * 2.0 - 1.0); [...] // \u50cf\u5f80\u5e38\u90a3\u6837\u5904\u7406\u5149\u7167 } \u8fd9\u91cc\u6211\u4eec\u5c06\u88ab\u91c7\u6837\u7684\u6cd5\u7ebf\u989c\u8272\u4ece0\u52301\u91cd\u65b0\u6620\u5c04\u56de-1\u52301\uff0c\u4fbf\u80fd\u5c06RGB\u989c\u8272\u91cd\u65b0\u5904\u7406\u6210\u6cd5\u7ebf\uff0c\u7136\u540e\u4f7f\u7528\u91c7\u6837\u51fa\u7684\u6cd5\u7ebf\u5411\u91cf\u5e94\u7528\u4e8e\u5149\u7167\u7684\u8ba1\u7b97\u3002\u5728\u4f8b\u5b50\u4e2d\u6211\u4eec\u4f7f\u7528\u7684\u662fBlinn-Phong\u7740\u8272\u5668\u3002 \u901a\u8fc7\u6162\u6162\u968f\u7740\u65f6\u95f4\u6162\u6162\u79fb\u52a8\u5149\u6e90\uff0c\u4f60\u5c31\u80fd\u660e\u767d\u6cd5\u7ebf\u8d34\u56fe\u662f\u4ec0\u4e48\u610f\u601d\u4e86\u3002\u8fd0\u884c\u8fd9\u4e2a\u4f8b\u5b50\u4f60\u5c31\u80fd\u5f97\u5230\u672c\u6559\u7a0b\u5f00\u59cb\u7684\u90a3\u4e2a\u6548\u679c\uff1a \u7136\u800c\u6709\u4e2a\u95ee\u9898\u9650\u5236\u4e86\u521a\u624d\u8bb2\u7684\u90a3\u79cd\u6cd5\u7ebf\u8d34\u56fe\u7684\u4f7f\u7528\u3002\u6211\u4eec\u4f7f\u7528\u7684\u90a3\u4e2a\u6cd5\u7ebf\u8d34\u56fe\u91cc\u9762\u7684\u6240\u6709\u6cd5\u7ebf\u5411\u91cf\u90fd\u662f\u6307\u5411\u6b63z\u65b9\u5411\u7684\u3002\u4e0a\u9762\u7684\u4f8b\u5b50\u80fd\u7528\uff0c\u662f\u56e0\u4e3a\u90a3\u4e2a\u5e73\u9762\u7684\u8868\u9762\u6cd5\u7ebf\u4e5f\u662f\u6307\u5411\u6b63z\u65b9\u5411\u7684\u3002\u53ef\u662f\uff0c\u5982\u679c\u6211\u4eec\u5728\u8868\u9762\u6cd5\u7ebf\u6307\u5411\u6b63y\u65b9\u5411\u7684\u5e73\u9762\u4e0a\u4f7f\u7528\u540c\u4e00\u4e2a\u6cd5\u7ebf\u8d34\u56fe\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f \u5149\u7167\u770b\u8d77\u6765\u5b8c\u5168\u4e0d\u5bf9\uff01\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u662f\u5e73\u9762\u7684\u8868\u9762\u6cd5\u7ebf\u73b0\u5728\u6307\u5411\u4e86y\uff0c\u800c\u91c7\u6837\u5f97\u5230\u7684\u6cd5\u7ebf\u4ecd\u7136\u6307\u5411\u7684\u662fz\u3002\u7ed3\u679c\u5c31\u662f\u5149\u7167\u4ecd\u7136\u8ba4\u4e3a\u8868\u9762\u6cd5\u7ebf\u548c\u4e4b\u524d\u671d\u5411\u6b63z\u65b9\u5411\u65f6\u4e00\u6837\uff1b\u8fd9\u6837\u5149\u7167\u5c31\u4e0d\u5bf9\u4e86\u3002\u4e0b\u9762\u7684\u56fe\u7247\u5c55\u793a\u4e86\u8fd9\u4e2a\u8868\u9762\u4e0a\u91c7\u6837\u7684\u6cd5\u7ebf\u7684\u8fd1\u4f3c\u60c5\u51b5\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\u6240\u6709\u6cd5\u7ebf\u90fd\u6307\u5411z\u65b9\u5411\uff0c\u5b83\u4eec\u672c\u8be5\u671d\u7740\u8868\u9762\u6cd5\u7ebf\u6307\u5411y\u65b9\u5411\u7684\u3002\u4e00\u4e2a\u53ef\u884c\u65b9\u6848\u662f\u4e3a\u6bcf\u4e2a\u8868\u9762\u5236\u4f5c\u4e00\u4e2a\u5355\u72ec\u7684\u6cd5\u7ebf\u8d34\u56fe\u3002\u5982\u679c\u662f\u4e00\u4e2a\u7acb\u65b9\u4f53\u7684\u8bdd\u6211\u4eec\u5c31\u9700\u89816\u4e2a\u6cd5\u7ebf\u8d34\u56fe\uff0c\u4f46\u662f\u5982\u679c\u6a21\u578b\u4e0a\u6709\u65e0\u6570\u7684\u671d\u5411\u4e0d\u540c\u65b9\u5411\u7684\u8868\u9762\uff0c\u8fd9\u5c31\u4e0d\u53ef\u884c\u4e86\uff08\u8bd1\u6ce8\uff1a\u5b9e\u9645\u4e0a\u5bf9\u4e8e\u590d\u6742\u6a21\u578b\u53ef\u4ee5\u628a\u671d\u5411\u5404\u4e2a\u65b9\u5411\u7684\u6cd5\u7ebf\u50a8\u5b58\u5728\u540c\u4e00\u5f20\u8d34\u56fe\u4e0a\uff0c\u4f60\u53ef\u80fd\u770b\u5230\u8fc7\u4e0d\u53ea\u662f\u84dd\u8272\u7684\u6cd5\u7ebf\u8d34\u56fe\uff0c\u4e0d\u8fc7\u7528\u90a3\u6837\u7684\u6cd5\u7ebf\u8d34\u56fe\u6709\u4e2a\u95ee\u9898\u662f\u4f60\u5fc5\u987b\u8bb0\u4f4f\u6a21\u578b\u7684\u8d77\u59cb\u671d\u5411\uff0c\u5982\u679c\u6a21\u578b\u8fd0\u52a8\u4e86\u8fd8\u8981\u8bb0\u5f55\u6a21\u578b\u7684\u53d8\u6362\uff0c\u8fd9\u662f\u975e\u5e38\u4e0d\u65b9\u4fbf\u7684\uff1b\u6b64\u5916\u5c31\u50cf\u4f5c\u8005\u6240\u8bf4\u7684\uff0c\u5982\u679c\u628a\u4e00\u4e2adiffuse\u7eb9\u7406\u5e94\u7528\u5728\u540c\u4e00\u4e2a\u7269\u4f53\u7684\u4e0d\u540c\u8868\u9762\u4e0a\uff0c\u5c31\u50cf\u7acb\u65b9\u4f53\u90a3\u6837\u7684\uff0c\u5c31\u9700\u8981\u505a6\u4e2a\u6cd5\u7ebf\u8d34\u56fe\uff0c\u8fd9\u4e5f\u4e0d\u53ef\u53d6\uff09\u3002 \u53e6\u4e00\u4e2a\u7a0d\u5fae\u6709\u70b9\u96be\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u5728\u4e00\u4e2a\u4e0d\u540c\u7684\u5750\u6807\u7a7a\u95f4\u4e2d\u8fdb\u884c\u5149\u7167\uff0c\u8fd9\u4e2a\u5750\u6807\u7a7a\u95f4\u91cc\uff0c\u6cd5\u7ebf\u8d34\u56fe\u5411\u91cf\u603b\u662f\u6307\u5411\u8fd9\u4e2a\u5750\u6807\u7a7a\u95f4\u7684\u6b63z\u65b9\u5411\uff1b\u6240\u6709\u7684\u5149\u7167\u5411\u91cf\u90fd\u76f8\u5bf9\u4e0e\u8fd9\u4e2a\u6b63z\u65b9\u5411\u8fdb\u884c\u53d8\u6362\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u59cb\u7ec8\u4f7f\u7528\u540c\u6837\u7684\u6cd5\u7ebf\u8d34\u56fe\uff0c\u4e0d\u7ba1\u671d\u5411\u95ee\u9898\u3002\u8fd9\u4e2a\u5750\u6807\u7a7a\u95f4\u53eb\u505a\u5207\u7ebf\u7a7a\u95f4\uff08tangent space\uff09\u3002 \u5207\u7ebf\u7a7a\u95f4 \u6cd5\u7ebf\u8d34\u56fe\u4e2d\u7684\u6cd5\u7ebf\u5411\u91cf\u5b9a\u4e49\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\uff0c\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\uff0c\u6cd5\u7ebf\u6c38\u8fdc\u6307\u7740\u6b63z\u65b9\u5411\u3002\u5207\u7ebf\u7a7a\u95f4\u662f\u4f4d\u4e8e\u4e09\u89d2\u5f62\u8868\u9762\u4e4b\u4e0a\u7684\u7a7a\u95f4\uff1a\u6cd5\u7ebf\u76f8\u5bf9\u4e8e\u5355\u4e2a\u4e09\u89d2\u5f62\u7684\u5c40\u90e8\u5750\u6807\u7cfb\u3002\u5b83\u5c31\u50cf\u6cd5\u7ebf\u8d34\u56fe\u5411\u91cf\u7684\u5c40\u90e8\u7a7a\u95f4\uff1b\u5b83\u4eec\u90fd\u88ab\u5b9a\u4e49\u4e3a\u6307\u5411\u6b63z\u65b9\u5411\uff0c\u65e0\u8bba\u6700\u7ec8\u53d8\u6362\u5230\u4ec0\u4e48\u65b9\u5411\u3002\u4f7f\u7528\u4e00\u4e2a\u7279\u5b9a\u7684\u77e9\u9635\u6211\u4eec\u5c31\u80fd\u5c06\u672c\u5730/\u5207\u7ebf\u7a7a\u95f4\u4e2d\u7684\u6cd5\u7ebf\u5411\u91cf\u8f6c\u6210\u4e16\u754c\u6216\u89c6\u56fe\u7a7a\u95f4\u4e0b\uff0c\u4f7f\u5b83\u4eec\u8f6c\u5411\u5230\u6700\u7ec8\u7684\u8d34\u56fe\u8868\u9762\u7684\u65b9\u5411\u3002 \u6211\u4eec\u53ef\u4ee5\u8bf4\uff0c\u4e0a\u4e2a\u90e8\u5206\u90a3\u4e2a\u671d\u5411\u6b63y\u7684\u6cd5\u7ebf\u8d34\u56fe\u9519\u8bef\u7684\u8d34\u5230\u4e86\u8868\u9762\u4e0a\u3002\u6cd5\u7ebf\u8d34\u56fe\u88ab\u5b9a\u4e49\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\uff0c\u6240\u4ee5\u4e00\u79cd\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u5f0f\u662f\u8ba1\u7b97\u51fa\u4e00\u79cd\u77e9\u9635\uff0c\u628a\u6cd5\u7ebf\u4ece\u5207\u7ebf\u7a7a\u95f4\u53d8\u6362\u5230\u4e00\u4e2a\u4e0d\u540c\u7684\u7a7a\u95f4\uff0c\u8fd9\u6837\u5b83\u4eec\u5c31\u80fd\u548c\u8868\u9762\u6cd5\u7ebf\u65b9\u5411\u5bf9\u9f50\u4e86\uff1a\u6cd5\u7ebf\u5411\u91cf\u90fd\u4f1a\u6307\u5411\u6b63y\u65b9\u5411\u3002\u5207\u7ebf\u7a7a\u95f4\u7684\u4e00\u5927\u597d\u5904\u662f\u6211\u4eec\u53ef\u4ee5\u4e3a\u4efb\u4f55\u7c7b\u578b\u7684\u8868\u9762\u8ba1\u7b97\u51fa\u4e00\u4e2a\u8fd9\u6837\u7684\u77e9\u9635\uff0c\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u628a\u5207\u7ebf\u7a7a\u95f4\u7684z\u65b9\u5411\u548c\u8868\u9762\u7684\u6cd5\u7ebf\u65b9\u5411\u5bf9\u9f50\u3002 \u8fd9\u79cd\u77e9\u9635\u53eb\u505aTBN\u77e9\u9635\u8fd9\u4e09\u4e2a\u5b57\u6bcd\u5206\u522b\u4ee3\u8868tangent\u3001bitangent\u548cnormal\u5411\u91cf\u3002\u8fd9\u662f\u5efa\u6784\u8fd9\u4e2a\u77e9\u9635\u6240\u9700\u7684\u5411\u91cf\u3002\u8981\u5efa\u6784\u8fd9\u6837\u4e00\u4e2a\u628a\u5207\u7ebf\u7a7a\u95f4\u8f6c\u53d8\u4e3a\u4e0d\u540c\u7a7a\u95f4\u7684\u53d8\u5f02\u77e9\u9635\uff0c\u6211\u4eec\u9700\u8981\u4e09\u4e2a\u76f8\u4e92\u5782\u76f4\u7684\u5411\u91cf\uff0c\u5b83\u4eec\u6cbf\u4e00\u4e2a\u8868\u9762\u7684\u6cd5\u7ebf\u8d34\u56fe\u5bf9\u9f50\u4e8e\uff1a\u4e0a\u3001\u53f3\u3001\u524d\uff1b\u8fd9\u548c\u6211\u4eec\u5728 \u6444\u50cf\u673a\u6559\u7a0b \u4e2d\u505a\u7684\u7c7b\u4f3c\u3002 \u5df2\u77e5\u4e0a\u5411\u91cf\u662f\u8868\u9762\u7684\u6cd5\u7ebf\u5411\u91cf\u3002\u53f3\u548c\u524d\u5411\u91cf\u662f\u5207\u7ebf(Tagent)\u548c\u526f\u5207\u7ebf(Bitangent)\u5411\u91cf\u3002\u4e0b\u9762\u7684\u56fe\u7247\u5c55\u793a\u4e86\u4e00\u4e2a\u8868\u9762\u7684\u4e09\u4e2a\u5411\u91cf\uff1a \u8ba1\u7b97\u51fa\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5e76\u4e0d\u50cf\u6cd5\u7ebf\u5411\u91cf\u90a3\u4e48\u5bb9\u6613\u3002\u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230\u6cd5\u7ebf\u8d34\u56fe\u7684\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u4e0e\u7eb9\u7406\u5750\u6807\u7684\u4e24\u4e2a\u65b9\u5411\u5bf9\u9f50\u3002\u6211\u4eec\u5c31\u662f\u7528\u5230\u8fd9\u4e2a\u7279\u6027\u8ba1\u7b97\u6bcf\u4e2a\u8868\u9762\u7684\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u7684\u3002\u9700\u8981\u7528\u5230\u4e00\u4e9b\u6570\u5b66\u624d\u80fd\u5f97\u5230\u5b83\u4eec\uff1b\u8bf7\u770b\u4e0b\u56fe\uff1a \u6ce8\u610f\u4e0a\u56fe\u4e2d\u8fb9 E_2 \u4e0e\u7eb9\u7406\u5750\u6807\u7684\u5dee \\Delta U_2 \u3001 \\Delta V_2 \u6784\u6210\u4e00\u4e2a\u4e09\u89d2\u5f62\u3002 \\Delta U_2 \u4e0e\u5207\u7ebf\u5411\u91cf T \u65b9\u5411\u76f8\u540c\uff0c\u800c \\Delta V_2 \u4e0e\u526f\u5207\u7ebf\u5411\u91cf B \u65b9\u5411\u76f8\u540c\u3002\u8fd9\u4e5f\u5c31\u662f\u8bf4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u4e09\u89d2\u5f62\u7684\u8fb9 E_1 \u4e0e E_2 \u5199\u6210\u5207\u7ebf\u5411\u91cf \\T \u548c\u526f\u5207\u7ebf\u5411\u91cf B \u7684\u7ebf\u6027\u7ec4\u5408\uff1a E_1 = \\Delta U_1T + \\Delta V_1B E_2 = \\Delta U_2T + \\Delta V_2B \u6211\u4eec\u4e5f\u53ef\u4ee5\u5199\u6210\u8fd9\u6837\uff1a (E_{1x}, E_{1y}, E_{1z}) = \\Delta U_1(T_x, T_y, T_z) + \\Delta V_1(B_x, B_y, B_z) (E_{2x}, E_{2y}, E_{2z}) = \\Delta U_2(T_x, T_y, T_z) + \\Delta V_2(B_x, B_y, B_z) E \u662f\u4e24\u4e2a\u5411\u91cf\u4f4d\u7f6e\u7684\u5dee\uff0c \\Delta U \u548c \\Delta V \u662f\u7eb9\u7406\u5750\u6807\u7684\u5dee\u3002\u7136\u540e\u6211\u4eec\u5f97\u5230\u4e24\u4e2a\u672a\u77e5\u6570\uff08\u5207\u7ebf T \u548c\u526f\u5207\u7ebf B \uff09\u548c\u4e24\u4e2a\u7b49\u5f0f\u3002\u4f60\u53ef\u80fd\u60f3\u8d77\u4f60\u7684\u4ee3\u6570\u8bfe\u4e86\uff0c\u8fd9\u662f\u8ba9\u6211\u4eec\u53bb\u89e3 T \u548c B \u3002 \u4e0a\u9762\u7684\u65b9\u7a0b\u5141\u8bb8\u6211\u4eec\u628a\u5b83\u4eec\u5199\u6210\u53e6\u4e00\u79cd\u683c\u5f0f\uff1a\u77e9\u9635\u4e58\u6cd5 \\begin{bmatrix} E_{1x} & E_{1y} & E_{1z} \\\\ E_{2x} & E_{2y} & E_{2z} \\end{bmatrix} = \\begin{bmatrix} \\Delta U_1 & \\Delta V_1 \\\\ \\Delta U_2 & \\Delta V_2 \\end{bmatrix} \\begin{bmatrix} T_x & T_y & T_z \\\\ B_x & B_y & B_z \\end{bmatrix} \u5c1d\u8bd5\u4f1a\u610f\u4e00\u4e0b\u77e9\u9635\u4e58\u6cd5\uff0c\u5b83\u4eec\u786e\u5b9e\u662f\u540c\u4e00\u79cd\u7b49\u5f0f\u3002\u628a\u7b49\u5f0f\u5199\u6210\u77e9\u9635\u5f62\u5f0f\u7684\u597d\u5904\u662f\uff0c\u89e3 T \u548c B \u4f1a\u56e0\u6b64\u53d8\u5f97\u5f88\u5bb9\u6613\u3002\u4e24\u8fb9\u90fd\u4e58\u4ee5 \\Delta U \\Delta V \u7684\u9006\u77e9\u9635\u7b49\u4e8e\uff1a \\begin{bmatrix} \\Delta U_1 & \\Delta V_1 \\\\ \\Delta U_2 & \\Delta V_2 \\end{bmatrix}^{-1} \\begin{bmatrix} E_{1x} & E_{1y} & E_{1z} \\\\ E_{2x} & E_{2y} & E_{2z} \\end{bmatrix} = \\begin{bmatrix} T_x & T_y & T_z \\\\ B_x & B_y & B_z \\end{bmatrix} \u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u89e3\u51fa T \u548c B \u4e86\u3002\u8fd9\u9700\u8981\u6211\u4eec\u8ba1\u7b97\u51fadelta\u7eb9\u7406\u5750\u6807\u77e9\u9635\u7684\u9006\u77e9\u9635\u3002\u6211\u4e0d\u6253\u7b97\u8bb2\u89e3\u8ba1\u7b97\u9006\u77e9\u9635\u7684\u7ec6\u8282\uff0c\u4f46\u5927\u81f4\u662f\u628a\u5b83\u53d8\u5316\u4e3a\uff0c1\u9664\u4ee5\u77e9\u9635\u7684\u884c\u5217\u5f0f\uff0c\u518d\u4e58\u4ee5\u5b83\u7684\u4f34\u968f\u77e9\u9635(Adjugate Matrix)\u3002 \\begin{bmatrix} T_x & T_y & T_z \\\\ B_x & B_y & B_z \\end{bmatrix} = \\frac{1}{\\Delta U_1 \\Delta V_2 - \\Delta U_2 \\Delta V_1} \\begin{bmatrix} \\Delta V_2 & -\\Delta V_1 \\\\ -\\Delta U_2 & \\Delta U_1 \\end{bmatrix} \\begin{bmatrix} E_{1x} & E_{1y} & E_{1z} \\\\ E_{2x} & E_{2y} & E_{2z} \\end{bmatrix} \u6709\u4e86\u6700\u540e\u8fd9\u4e2a\u7b49\u5f0f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u516c\u5f0f\u3001\u4e09\u89d2\u5f62\u7684\u4e24\u6761\u8fb9\u4ee5\u53ca\u7eb9\u7406\u5750\u6807\u8ba1\u7b97\u51fa\u5207\u7ebf\u5411\u91cf T \u548c\u526f\u5207\u7ebf B \u3002 \u5982\u679c\u4f60\u5bf9\u8fd9\u4e9b\u6570\u5b66\u5185\u5bb9\u4e0d\u7406\u89e3\u4e5f\u4e0d\u7528\u62c5\u5fc3\u3002\u5f53\u4f60\u77e5\u9053\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e09\u89d2\u5f62\u7684\u9876\u70b9\u548c\u7eb9\u7406\u5750\u6807\uff08\u56e0\u4e3a\u7eb9\u7406\u5750\u6807\u548c\u5207\u7ebf\u5411\u91cf\u5728\u540c\u4e00\u7a7a\u95f4\u4e2d\uff09\u8ba1\u7b97\u51fa\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u4f60\u5c31\u5df2\u7ecf\u90e8\u5206\u5730\u8fbe\u5230\u76ee\u7684\u4e86\uff08\u8bd1\u6ce8\uff1a\u4e0a\u9762\u7684\u63a8\u5bfc\u5df2\u7ecf\u5f88\u6e05\u695a\u4e86\uff0c\u5982\u679c\u4f60\u4e0d\u660e\u767d\u53ef\u4ee5\u53c2\u8003\u4efb\u610f\u7ebf\u6027\u4ee3\u6570\u6559\u6750\uff0c\u5c31\u50cf\u4f5c\u8005\u6240\u8bf4\u7684\u8bb0\u4f4f\u6c42\u5f97\u5207\u7ebf\u7a7a\u95f4\u7684\u516c\u5f0f\u4e5f\u884c\uff0c\u4e0d\u8fc7\u4e0d\u7ba1\u600e\u6837\u90fd\u5f97\u7406\u89e3\u5207\u7ebf\u7a7a\u95f4\u7684\u542b\u4e49\uff09\u3002 \u624b\u5de5\u8ba1\u7b97\u5207\u7ebf\u548c\u526f\u5207\u7ebf \u8fd9\u4e2a\u6559\u7a0b\u7684demo\u573a\u666f\u4e2d\u6709\u4e00\u4e2a\u7b80\u5355\u76842D\u5e73\u9762\uff0c\u5b83\u671d\u5411\u6b63z\u65b9\u5411\u3002\u8fd9\u6b21\u6211\u4eec\u4f1a\u4f7f\u7528\u5207\u7ebf\u7a7a\u95f4\u6765\u5b9e\u73b0\u6cd5\u7ebf\u8d34\u56fe\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u5e73\u9762\u671d\u5411\u4efb\u610f\u65b9\u5411\uff0c\u6cd5\u7ebf\u8d34\u56fe\u4ecd\u7136\u80fd\u591f\u5de5\u4f5c\u3002\u4f7f\u7528\u524d\u9762\u8ba8\u8bba\u7684\u6570\u5b66\u65b9\u6cd5\uff0c\u6211\u4eec\u6765\u624b\u5de5\u8ba1\u7b97\u51fa\u8868\u9762\u7684\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5411\u91cf\u3002 \u5047\u8bbe\u5e73\u9762\u4f7f\u7528\u4e0b\u9762\u7684\u5411\u91cf\u5efa\u7acb\u8d77\u6765\uff081\u30012\u30013\u548c1\u30013\u30014\uff0c\u5b83\u4eec\u662f\u4e24\u4e2a\u4e09\u89d2\u5f62\uff09\uff1a // positions glm::vec3 pos1(-1.0, 1.0, 0.0); glm::vec3 pos2(-1.0, -1.0, 0.0); glm::vec3 pos3(1.0, -1.0, 0.0); glm::vec3 pos4(1.0, 1.0, 0.0); // texture coordinates glm::vec2 uv1(0.0, 1.0); glm::vec2 uv2(0.0, 0.0); glm::vec2 uv3(1.0, 0.0); glm::vec2 uv4(1.0, 1.0); // normal vector glm::vec3 nm(0.0, 0.0, 1.0); \u6211\u4eec\u5148\u8ba1\u7b97\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u7684\u8fb9\u548cdeltaUV\u5750\u6807\uff1a glm::vec3 edge1 = pos2 - pos1; glm::vec3 edge2 = pos3 - pos1; glm::vec2 deltaUV1 = uv2 - uv1; glm::vec2 deltaUV2 = uv3 - uv1; \u6709\u4e86\u8ba1\u7b97\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u7684\u5fc5\u5907\u6570\u636e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u5199\u51fa\u6765\u81ea\u4e8e\u524d\u9762\u90e8\u5206\u4e2d\u7684\u4e0b\u5217\u7b49\u5f0f\uff1a GLfloat f = 1.0f / (deltaUV1.x * deltaUV2.y - deltaUV2.x * deltaUV1.y); tangent1.x = f * (deltaUV2.y * edge1.x - deltaUV1.y * edge2.x); tangent1.y = f * (deltaUV2.y * edge1.y - deltaUV1.y * edge2.y); tangent1.z = f * (deltaUV2.y * edge1.z - deltaUV1.y * edge2.z); tangent1 = glm::normalize(tangent1); bitangent1.x = f * (-deltaUV2.x * edge1.x + deltaUV1.x * edge2.x); bitangent1.y = f * (-deltaUV2.x * edge1.y + deltaUV1.x * edge2.y); bitangent1.z = f * (-deltaUV2.x * edge1.z + deltaUV1.x * edge2.z); bitangent1 = glm::normalize(bitangent1); [...] // \u5bf9\u5e73\u9762\u7684\u7b2c\u4e8c\u4e2a\u4e09\u89d2\u5f62\u91c7\u7528\u7c7b\u4f3c\u6b65\u9aa4\u8ba1\u7b97\u5207\u7ebf\u548c\u526f\u5207\u7ebf \u6211\u4eec\u9884\u5148\u8ba1\u7b97\u51fa\u7b49\u5f0f\u7684\u5206\u6570\u90e8\u5206 f \uff0c\u7136\u540e\u628a\u5b83\u548c\u6bcf\u4e2a\u5411\u91cf\u7684\u5143\u7d20\u8fdb\u884c\u76f8\u5e94\u77e9\u9635\u4e58\u6cd5\u3002\u5982\u679c\u4f60\u628a\u4ee3\u7801\u548c\u6700\u7ec8\u7684\u7b49\u5f0f\u5bf9\u6bd4\u4f60\u4f1a\u53d1\u73b0\uff0c\u8fd9\u5c31\u662f\u76f4\u63a5\u5957\u7528\u3002\u6700\u540e\u6211\u4eec\u8fd8\u8981\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u6765\u786e\u4fdd\u5207\u7ebf/\u526f\u5207\u7ebf\u5411\u91cf\u6700\u540e\u662f\u5355\u4f4d\u5411\u91cf\u3002 \u56e0\u4e3a\u4e00\u4e2a\u4e09\u89d2\u5f62\u6c38\u8fdc\u662f\u5e73\u5766\u7684\u5f62\u72b6\uff0c\u6211\u4eec\u53ea\u9700\u4e3a\u6bcf\u4e2a\u4e09\u89d2\u5f62\u8ba1\u7b97\u4e00\u4e2a\u5207\u7ebf/\u526f\u5207\u7ebf\uff0c\u5b83\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u4e09\u89d2\u5f62\u4e0a\u7684\u9876\u70b9\u90fd\u662f\u4e00\u6837\u7684\u3002\u8981\u6ce8\u610f\u7684\u662f\u5927\u591a\u6570\u5b9e\u73b0\u901a\u5e38\u4e09\u89d2\u5f62\u548c\u4e09\u89d2\u5f62\u4e4b\u95f4\u90fd\u4f1a\u5171\u4eab\u9876\u70b9\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5f00\u53d1\u8005\u901a\u5e38\u5c06\u6bcf\u4e2a\u9876\u70b9\u7684\u6cd5\u7ebf\u548c\u5207\u7ebf/\u526f\u5207\u7ebf\u7b49\u9876\u70b9\u5c5e\u6027\u5e73\u5747\u5316\uff0c\u4ee5\u83b7\u5f97\u66f4\u52a0\u67d4\u548c\u7684\u6548\u679c\u3002\u6211\u4eec\u7684\u5e73\u9762\u7684\u4e09\u89d2\u5f62\u4e4b\u95f4\u5206\u4eab\u4e86\u4e00\u4e9b\u9876\u70b9\uff0c\u4f46\u662f\u56e0\u4e3a\u4e24\u4e2a\u4e09\u89d2\u5f62\u76f8\u4e92\u5e76\u884c\uff0c\u56e0\u6b64\u5e76\u4e0d\u9700\u8981\u5c06\u7ed3\u679c\u5e73\u5747\u5316\uff0c\u4f46\u65e0\u8bba\u4f55\u65f6\u53ea\u8981\u4f60\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u8bb0\u4f4f\u5b83\u5c31\u662f\u4ef6\u597d\u4e8b\u3002 \u6700\u540e\u7684\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5411\u91cf\u7684\u503c\u5e94\u8be5\u662f(1, 0, 0)\u548c(0, 1, 0)\uff0c\u5b83\u4eec\u548c\u6cd5\u7ebf(0, 0, 1)\u7ec4\u6210\u76f8\u4e92\u5782\u76f4\u7684TBN\u77e9\u9635\u3002\u5728\u5e73\u9762\u4e0a\u663e\u793a\u51fa\u6765TBN\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff1a \u6bcf\u4e2a\u9876\u70b9\u5b9a\u4e49\u4e86\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5411\u91cf\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u5b9e\u73b0\u6b63\u786e\u7684\u6cd5\u7ebf\u8d34\u56fe\u4e86\u3002 \u5207\u7ebf\u7a7a\u95f4\u6cd5\u7ebf\u8d34\u56fe \u4e3a\u8ba9\u6cd5\u7ebf\u8d34\u56fe\u5de5\u4f5c\uff0c\u6211\u4eec\u5148\u5f97\u5728\u7740\u8272\u5668\u4e2d\u521b\u5efa\u4e00\u4e2aTBN\u77e9\u9635\u3002\u6211\u4eec\u5148\u5c06\u524d\u9762\u8ba1\u7b97\u51fa\u6765\u7684\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5411\u91cf\u4f20\u7ed9\u9876\u70b9\u7740\u8272\u5668\uff0c\u4f5c\u4e3a\u5b83\u7684\u5c5e\u6027\uff1a #version 330 core layout (location = 0) in vec3 position; layout (location = 1) in vec3 normal; layout (location = 2) in vec2 texCoords; layout (location = 3) in vec3 tangent; layout (location = 4) in vec3 bitangent; \u5728\u9876\u70b9\u7740\u8272\u5668\u7684main\u51fd\u6570\u4e2d\u6211\u4eec\u521b\u5efaTBN\u77e9\u9635\uff1a void main() { [...] vec3 T = normalize(vec3(model * vec4(tangent, 0.0))); vec3 B = normalize(vec3(model * vec4(bitangent, 0.0))); vec3 N = normalize(vec3(model * vec4(normal, 0.0))); mat3 TBN = mat3(T, B, N) } \u6211\u4eec\u5148\u5c06\u6240\u6709TBN\u5411\u91cf\u53d8\u6362\u5230\u6211\u4eec\u6240\u64cd\u4f5c\u7684\u5750\u6807\u7cfb\u4e2d\uff0c\u73b0\u5728\u662f\u4e16\u754c\u7a7a\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u4e58\u4ee5model\u77e9\u9635\u3002\u7136\u540e\u6211\u4eec\u521b\u5efa\u5b9e\u9645\u7684TBN\u77e9\u9635\uff0c\u76f4\u63a5\u628a\u76f8\u5e94\u7684\u5411\u91cf\u5e94\u7528\u5230mat3\u6784\u9020\u5668\u5c31\u884c\u3002\u6ce8\u610f\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u66f4\u7cbe\u786e\u7684\u8bdd\u5c31\u4e0d\u8981\u5c06TBN\u5411\u91cf\u4e58\u4ee5model\u77e9\u9635\uff0c\u800c\u662f\u4f7f\u7528\u6cd5\u7ebf\u77e9\u9635\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u5173\u5fc3\u5411\u91cf\u7684\u65b9\u5411\uff0c\u4e0d\u5173\u5fc3\u5e73\u79fb\u548c\u7f29\u653e\u3002 Important \u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u9876\u70b9\u7740\u8272\u5668\u4e2d\u65e0\u9700\u526f\u5207\u7ebf\u3002\u6240\u6709\u7684\u8fd9\u4e09\u4e2aTBN\u5411\u91cf\u90fd\u662f\u76f8\u4e92\u5782\u76f4\u7684\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u7528T\u548cN\u5411\u91cf\u7684\u53c9\u4e58\uff0c\u81ea\u5df1\u8ba1\u7b97\u51fa\u526f\u5207\u7ebf\uff1avec3 B = cross(T, N); \u73b0\u5728\u6211\u4eec\u6709\u4e86TBN\u77e9\u9635\uff0c\u5982\u679c\u6765\u4f7f\u7528\u5b83\u5462\uff1f\u901a\u5e38\u6765\u8bf4\u6709\u4e24\u79cd\u65b9\u5f0f\u4f7f\u7528\u5b83\uff0c\u6211\u4eec\u4f1a\u628a\u8fd9\u4e24\u79cd\u65b9\u5f0f\u90fd\u8bf4\u660e\u4e00\u4e0b\uff1a \u6211\u4eec\u76f4\u63a5\u4f7f\u7528TBN\u77e9\u9635\uff0c\u8fd9\u4e2a\u77e9\u9635\u53ef\u4ee5\u628a\u5207\u7ebf\u5750\u6807\u7a7a\u95f4\u7684\u5411\u91cf\u8f6c\u6362\u5230\u4e16\u754c\u5750\u6807\u7a7a\u95f4\u3002\u56e0\u6b64\u6211\u4eec\u628a\u5b83\u4f20\u7ed9\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u628a\u901a\u8fc7\u91c7\u6837\u5f97\u5230\u7684\u6cd5\u7ebf\u5750\u6807\u5de6\u4e58\u4e0aTBN\u77e9\u9635\uff0c\u8f6c\u6362\u5230\u4e16\u754c\u5750\u6807\u7a7a\u95f4\u4e2d\uff0c\u8fd9\u6837\u6240\u6709\u6cd5\u7ebf\u548c\u5176\u4ed6\u5149\u7167\u53d8\u91cf\u5c31\u5728\u540c\u4e00\u4e2a\u5750\u6807\u7cfb\u4e2d\u4e86\u3002 \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528TBN\u77e9\u9635\u7684\u9006\u77e9\u9635\uff0c\u8fd9\u4e2a\u77e9\u9635\u53ef\u4ee5\u628a\u4e16\u754c\u5750\u6807\u7a7a\u95f4\u7684\u5411\u91cf\u8f6c\u6362\u5230\u5207\u7ebf\u5750\u6807\u7a7a\u95f4\u3002\u56e0\u6b64\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a\u77e9\u9635\u5de6\u4e58\u5176\u4ed6\u5149\u7167\u53d8\u91cf\uff0c\u628a\u4ed6\u4eec\u8f6c\u6362\u5230\u5207\u7ebf\u7a7a\u95f4\uff0c\u8fd9\u6837\u6cd5\u7ebf\u548c\u5176\u4ed6\u5149\u7167\u53d8\u91cf\u518d\u4e00\u6b21\u5728\u4e00\u4e2a\u5750\u6807\u7cfb\u4e2d\u4e86\u3002 \u6211\u4eec\u6765\u770b\u770b\u7b2c\u4e00\u79cd\u60c5\u51b5\u3002 \u6211\u4eec\u4ece\u6cd5\u7ebf\u8d34\u56fe\u91c7\u6837\u5f97\u6765\u7684\u6cd5\u7ebf\u5411\u91cf\uff0c\u662f\u5728\u5207\u7ebf\u7a7a\u95f4\u8868\u793a\u7684\uff0c\u5c3d\u7ba1\u5176\u4ed6\u5149\u7167\u5411\u91cf\u90fd\u662f\u5728\u4e16\u754c\u7a7a\u95f4\u8868\u793a\u7684\u3002\u628aTBN\u4f20\u7ed9\u50cf\u7d20\u7740\u8272\u5668\uff0c\u6211\u4eec\u5c31\u80fd\u5c06\u91c7\u6837\u5f97\u6765\u7684\u5207\u7ebf\u7a7a\u95f4\u7684\u6cd5\u7ebf\u4e58\u4ee5\u8fd9\u4e2aTBN\u77e9\u9635\uff0c\u5c06\u6cd5\u7ebf\u5411\u91cf\u53d8\u6362\u5230\u548c\u5176\u4ed6\u5149\u7167\u5411\u91cf\u4e00\u6837\u7684\u53c2\u8003\u7a7a\u95f4\u4e2d\u3002\u8fd9\u79cd\u65b9\u5f0f\u968f\u540e\u6240\u6709\u5149\u7167\u8ba1\u7b97\u90fd\u53ef\u4ee5\u7b80\u5355\u7684\u7406\u89e3\u3002 \u628aTBN\u77e9\u9635\u53d1\u7ed9\u50cf\u7d20\u7740\u8272\u5668\u5f88\u7b80\u5355\uff1a out VS_OUT { vec3 FragPos; vec2 TexCoords; mat3 TBN; } vs_out; void main() { [...] vs_out.TBN = mat3(T, B, N); } \u5728\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u6211\u4eec\u7528mat3\u4f5c\u4e3a\u8f93\u5165\u53d8\u91cf\uff1a in VS_OUT { vec3 FragPos; vec2 TexCoords; mat3 TBN; } fs_in; \u6709\u4e86TBN\u77e9\u9635\u6211\u4eec\u73b0\u5728\u5c31\u53ef\u4ee5\u66f4\u65b0\u6cd5\u7ebf\u8d34\u56fe\u4ee3\u7801\uff0c\u5f15\u5165\u5207\u7ebf\u5230\u4e16\u754c\u7a7a\u95f4\u53d8\u6362\uff1a normal = texture(normalMap, fs_in.TexCoords).rgb; normal = normalize(normal * 2.0 - 1.0); normal = normalize(fs_in.TBN * normal); \u56e0\u4e3a\u6700\u540e\u7684normal\u73b0\u5728\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\u4e86\uff0c\u5c31\u4e0d\u7528\u6539\u53d8\u5176\u4ed6\u50cf\u7d20\u7740\u8272\u5668\u7684\u4ee3\u7801\u4e86\uff0c\u56e0\u4e3a\u5149\u7167\u4ee3\u7801\u5c31\u662f\u5047\u8bbe\u6cd5\u7ebf\u5411\u91cf\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\u3002 \u6211\u4eec\u540c\u6837\u770b\u770b\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002 \u6211\u4eec\u7528TBN\u77e9\u9635\u7684\u9006\u77e9\u9635\u5c06\u6240\u6709\u76f8\u5173\u7684\u4e16\u754c\u7a7a\u95f4\u5411\u91cf\u8f6c\u53d8\u5230\u91c7\u6837\u6240\u5f97\u6cd5\u7ebf\u5411\u91cf\u7684\u7a7a\u95f4\uff1a\u5207\u7ebf\u7a7a\u95f4\u3002TBN\u7684\u5efa\u6784\u8fd8\u662f\u4e00\u6837\uff0c\u4f46\u6211\u4eec\u5728\u5c06\u5176\u53d1\u9001\u7ed9\u50cf\u7d20\u7740\u8272\u5668\u4e4b\u524d\u5148\u8981\u6c42\u9006\u77e9\u9635\uff1a vs_out.TBN = transpose(mat3(T, B, N)); \u6ce8\u610f\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528transpose\u51fd\u6570\uff0c\u800c\u4e0d\u662finverse\u51fd\u6570\u3002\u6b63\u4ea4\u77e9\u9635\uff08\u6bcf\u4e2a\u8f74\u65e2\u662f\u5355\u4f4d\u5411\u91cf\u540c\u65f6\u76f8\u4e92\u5782\u76f4\uff09\u7684\u4e00\u5927\u5c5e\u6027\u662f\u4e00\u4e2a\u6b63\u4ea4\u77e9\u9635\u7684\u7f6e\u6362\u77e9\u9635\u4e0e\u5b83\u7684\u9006\u77e9\u9635\u76f8\u7b49\u3002\u8fd9\u4e2a\u5c5e\u6027\u5f88\u91cd\u8981\u56e0\u4e3a\u9006\u77e9\u9635\u7684\u6c42\u5f97\u6bd4\u6c42\u7f6e\u6362\u5f00\u9500\u5927\uff1b\u7ed3\u679c\u5374\u662f\u4e00\u6837\u7684\u3002 \u5728\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u6211\u4eec\u4e0d\u7528\u5bf9\u6cd5\u7ebf\u5411\u91cf\u53d8\u6362\uff0c\u4f46\u6211\u4eec\u8981\u628a\u5176\u4ed6\u76f8\u5173\u5411\u91cf\u8f6c\u6362\u5230\u5207\u7ebf\u7a7a\u95f4\uff0c\u5b83\u4eec\u662flightDir\u548cviewDir\u3002\u8fd9\u6837\u6bcf\u4e2a\u5411\u91cf\u8fd8\u662f\u5728\u540c\u4e00\u4e2a\u7a7a\u95f4\uff08\u5207\u7ebf\u7a7a\u95f4\uff09\u4e2d\u4e86\u3002 void main() { vec3 normal = texture(normalMap, fs_in.TexCoords).rgb; normal = normalize(normal * 2.0 - 1.0); vec3 lightDir = fs_in.TBN * normalize(lightPos - fs_in.FragPos); vec3 viewDir = fs_in.TBN * normalize(viewPos - fs_in.FragPos); [...] } \u7b2c\u4e8c\u79cd\u65b9\u6cd5\u770b\u4f3c\u8981\u505a\u7684\u66f4\u591a\uff0c\u5b83\u8fd8\u9700\u8981\u5728\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u8fdb\u884c\u66f4\u591a\u7684\u4e58\u6cd5\u64cd\u4f5c\uff0c\u6240\u4ee5\u4e3a\u4f55\u8fd8\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u5462\uff1f \u5c06\u5411\u91cf\u4ece\u4e16\u754c\u7a7a\u95f4\u8f6c\u6362\u5230\u5207\u7ebf\u7a7a\u95f4\u6709\u4e2a\u989d\u5916\u597d\u5904\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u76f8\u5173\u5411\u91cf\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u8f6c\u6362\u5230\u5207\u7ebf\u7a7a\u95f4\uff0c\u4e0d\u7528\u5728\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u505a\u8fd9\u4ef6\u4e8b\u3002\u8fd9\u662f\u53ef\u884c\u7684\uff0c\u56e0\u4e3alightPos\u548cviewPos\u4e0d\u662f\u6bcf\u4e2afragment\u8fd0\u884c\u90fd\u8981\u6539\u53d8\uff0c\u5bf9\u4e8efs_in.FragPos\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u9876\u70b9\u7740\u8272\u5668\u8ba1\u7b97\u5b83\u7684\u5207\u7ebf\u7a7a\u95f4\u4f4d\u7f6e\u3002\u57fa\u672c\u4e0a\uff0c\u4e0d\u9700\u8981\u628a\u4efb\u4f55\u5411\u91cf\u5728\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u8fdb\u884c\u53d8\u6362\uff0c\u800c\u7b2c\u4e00\u79cd\u65b9\u6cd5\u4e2d\u5c31\u662f\u5fc5\u987b\u7684\uff0c\u56e0\u4e3a\u91c7\u6837\u51fa\u6765\u7684\u6cd5\u7ebf\u5411\u91cf\u5bf9\u4e8e\u6bcf\u4e2a\u50cf\u7d20\u7740\u8272\u5668\u90fd\u4e0d\u4e00\u6837\u3002 \u6240\u4ee5\u73b0\u5728\u4e0d\u662f\u628aTBN\u77e9\u9635\u7684\u9006\u77e9\u9635\u53d1\u9001\u7ed9\u50cf\u7d20\u7740\u8272\u5668\uff0c\u800c\u662f\u5c06\u5207\u7ebf\u7a7a\u95f4\u7684\u5149\u6e90\u4f4d\u7f6e\uff0c\u89c2\u5bdf\u4f4d\u7f6e\u4ee5\u53ca\u9876\u70b9\u4f4d\u7f6e\u53d1\u9001\u7ed9\u50cf\u7d20\u7740\u8272\u5668\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u7528\u5728\u50cf\u7d20\u7740\u8272\u5668\u91cc\u8fdb\u884c\u77e9\u9635\u4e58\u6cd5\u4e86\u3002\u8fd9\u662f\u4e00\u4e2a\u6781\u4f73\u7684\u4f18\u5316\uff0c\u56e0\u4e3a\u9876\u70b9\u7740\u8272\u5668\u901a\u5e38\u6bd4\u50cf\u7d20\u7740\u8272\u5668\u8fd0\u884c\u7684\u5c11\u3002\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u8fd9\u79cd\u65b9\u6cd5\u662f\u4e00\u79cd\u66f4\u597d\u7684\u5b9e\u73b0\u65b9\u5f0f\u7684\u539f\u56e0\u3002 out VS_OUT { vec3 FragPos; vec2 TexCoords; vec3 TangentLightPos; vec3 TangentViewPos; vec3 TangentFragPos; } vs_out; uniform vec3 lightPos; uniform vec3 viewPos; [...] void main() { [...] mat3 TBN = transpose(mat3(T, B, N)); vs_out.TangentLightPos = TBN * lightPos; vs_out.TangentViewPos = TBN * viewPos; vs_out.TangentFragPos = TBN * vec3(model * vec4(position, 0.0)); } \u5728\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u6211\u4eec\u4f7f\u7528\u8fd9\u4e9b\u65b0\u7684\u8f93\u5165\u53d8\u91cf\u6765\u8ba1\u7b97\u5207\u7ebf\u7a7a\u95f4\u7684\u5149\u7167\u3002\u56e0\u4e3a\u6cd5\u7ebf\u5411\u91cf\u5df2\u7ecf\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\u4e86\uff0c\u5149\u7167\u5c31\u6709\u610f\u4e49\u4e86\u3002 \u5c06\u6cd5\u7ebf\u8d34\u56fe\u5e94\u7528\u5230\u5207\u7ebf\u7a7a\u95f4\u4e0a\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u6df7\u5408\u6559\u7a0b\u4e00\u5f00\u59cb\u90a3\u4e2a\u4f8b\u5b50\u76f8\u4f3c\u7684\u7ed3\u679c\uff0c\u4f46\u8fd9\u6b21\u6211\u4eec\u53ef\u4ee5\u5c06\u5e73\u9762\u671d\u5411\u5404\u4e2a\u65b9\u5411\uff0c\u5149\u7167\u4e00\u76f4\u90fd\u4f1a\u662f\u6b63\u786e\u7684\uff1a glm::mat4 model; model = glm::rotate(model, (GLfloat)glfwGetTime() * -10, glm::normalize(glm::vec3(1.0, 0.0, 1.0))); glUniformMatrix4fv(modelLoc, 1, GL_FALSE, glm::value_ptr(model)); RenderQuad(); \u770b\u8d77\u6765\u662f\u6b63\u786e\u7684\u6cd5\u7ebf\u8d34\u56fe\uff1a \u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230 \u6e90\u4ee3\u7801 \u3001 \u9876\u70b9 \u548c \u50cf\u7d20 \u7740\u8272\u5668\u3002 \u590d\u6742\u7269\u4f53 \u6211\u4eec\u5df2\u7ecf\u8bf4\u660e\u4e86\u5982\u4f55\u901a\u8fc7\u624b\u5de5\u8ba1\u7b97\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5411\u91cf\uff0c\u6765\u4f7f\u7528\u5207\u7ebf\u7a7a\u95f4\u548c\u6cd5\u7ebf\u8d34\u56fe\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u8ba1\u7b97\u8fd9\u4e9b\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5411\u91cf\u5bf9\u4e8e\u4f60\u6765\u8bf4\u4e0d\u662f\u7ecf\u5e38\u80fd\u9047\u5230\u7684\u4e8b\uff1b\u5927\u591a\u6570\u65f6\u5019\uff0c\u5728\u6a21\u578b\u52a0\u8f7d\u5668\u4e2d\u5b9e\u73b0\u4e86\u4e00\u6b21\u5c31\u884c\u4e86\uff0c\u6211\u4eec\u662f\u5728\u4f7f\u7528\u4e86Assimp\u7684\u90a3\u4e2a\u52a0\u8f7d\u5668\u4e2d\u5b9e\u73b0\u7684\u3002 Assimp\u6709\u4e2a\u5f88\u6709\u7528\u7684\u914d\u7f6e\uff0c\u5728\u6211\u4eec\u52a0\u8f7d\u6a21\u578b\u7684\u65f6\u5019\u8c03\u7528aiProcess_CalcTangentSpace\u3002\u5f53aiProcess_CalcTangentSpace\u5e94\u7528\u5230Assimp\u7684ReadFile\u51fd\u6570\u65f6\uff0cAssimp\u4f1a\u4e3a\u6bcf\u4e2a\u52a0\u8f7d\u7684\u9876\u70b9\u8ba1\u7b97\u51fa\u67d4\u548c\u7684\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5411\u91cf\uff0c\u5b83\u6240\u4f7f\u7528\u7684\u65b9\u6cd5\u548c\u6211\u4eec\u672c\u6559\u7a0b\u4f7f\u7528\u7684\u7c7b\u4f3c\u3002 const aiScene* scene = importer.ReadFile( path, aiProcess_Triangulate | aiProcess_FlipUVs | aiProcess_CalcTangentSpace ); \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u7528Assimp\u83b7\u53d6\u8ba1\u7b97\u51fa\u6765\u7684\u5207\u7ebf\u7a7a\u95f4\uff1a vector.x = mesh->mTangents[i].x; vector.y = mesh->mTangents[i].y; vector.z = mesh->mTangents[i].z; vertex.Tangent = vector; \u7136\u540e\uff0c\u4f60\u8fd8\u5fc5\u987b\u66f4\u65b0\u6a21\u578b\u52a0\u8f7d\u5668\uff0c\u7528\u4ee5\u4ece\u5e26\u7eb9\u7406\u6a21\u578b\u4e2d\u52a0\u8f7d\u6cd5\u7ebf\u8d34\u56fe\u3002wavefront\u7684\u6a21\u578b\u683c\u5f0f\uff08.obj\uff09\u5bfc\u51fa\u7684\u6cd5\u7ebf\u8d34\u56fe\u6709\u70b9\u4e0d\u4e00\u6837\uff0cAssimp\u7684aiTextureType_NORMAL\u5e76\u4e0d\u4f1a\u52a0\u8f7d\u5b83\u7684\u6cd5\u7ebf\u8d34\u56fe\uff0c\u800caiTextureType_HEIGHT\u5374\u80fd\uff0c\u6240\u4ee5\u6211\u4eec\u7ecf\u5e38\u8fd9\u6837\u52a0\u8f7d\u5b83\u4eec\uff1a vector normalMaps = loadMaterialTextures(material, aiTextureType_HEIGHT, \"texture_normal\"); \u5f53\u7136\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6a21\u578b\u7684\u7c7b\u578b\u548c\u6587\u4ef6\u683c\u5f0f\u6765\u8bf4\u90fd\u662f\u4e0d\u540c\u7684\u3002\u540c\u6837\u4e86\u89e3aiProcess_CalcTangentSpace\u5e76\u4e0d\u80fd\u603b\u662f\u5f88\u597d\u7684\u5de5\u4f5c\u4e5f\u5f88\u91cd\u8981\u3002\u8ba1\u7b97\u5207\u7ebf\u662f\u9700\u8981\u6839\u636e\u7eb9\u7406\u5750\u6807\u7684\uff0c\u6709\u4e9b\u6a21\u578b\u5236\u4f5c\u8005\u4f7f\u7528\u4e00\u4e9b\u7eb9\u7406\u5c0f\u6280\u5de7\u6bd4\u5982\u955c\u50cf\u4e00\u4e2a\u6a21\u578b\u4e0a\u7684\u7eb9\u7406\u8868\u9762\u65f6\u4e5f\u955c\u50cf\u4e86\u53e6\u4e00\u534a\u7684\u7eb9\u7406\u5750\u6807\uff1b\u8fd9\u6837\u5f53\u4e0d\u8003\u8651\u8fd9\u4e2a\u955c\u50cf\u7684\u7279\u522b\u64cd\u4f5c\u7684\u65f6\u5019\uff08Assimp\u5c31\u4e0d\u8003\u8651\uff09\u7ed3\u679c\u5c31\u4e0d\u5bf9\u4e86\u3002 \u8fd0\u884c\u7a0b\u5e8f\uff0c\u7528\u65b0\u7684\u6a21\u578b\u52a0\u8f7d\u5668\uff0c\u52a0\u8f7d\u4e00\u4e2a\u6709specular\u548c\u6cd5\u7ebf\u8d34\u56fe\u7684\u6a21\u578b\uff0c\u770b\u8d77\u6765\u4f1a\u50cf\u8fd9\u6837\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\u5728\u6ca1\u6709\u592a\u591a\u70b9\u7684\u989d\u5916\u5f00\u9500\u7684\u60c5\u51b5\u4e0b\u6cd5\u7ebf\u8d34\u56fe\u96be\u4ee5\u7f6e\u4fe1\u5730\u63d0\u5347\u4e86\u7269\u4f53\u7684\u7ec6\u8282\u3002 \u4f7f\u7528\u6cd5\u7ebf\u8d34\u56fe\u4e5f\u662f\u4e00\u79cd\u63d0\u5347\u4f60\u7684\u573a\u666f\u7684\u8868\u73b0\u7684\u91cd\u8981\u65b9\u5f0f\u3002\u5728\u4f7f\u7528\u6cd5\u7ebf\u8d34\u56fe\u4e4b\u524d\u4f60\u4e0d\u5f97\u4e0d\u4f7f\u7528\u76f8\u5f53\u591a\u7684\u9876\u70b9\u624d\u80fd\u8868\u73b0\u51fa\u4e00\u4e2a\u66f4\u7cbe\u7ec6\u7684\u7f51\u683c\uff0c\u4f46\u4f7f\u7528\u4e86\u6cd5\u7ebf\u8d34\u56fe\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u66f4\u5c11\u7684\u9876\u70b9\u8868\u73b0\u51fa\u540c\u6837\u4e30\u5bcc\u7684\u7ec6\u8282\u3002\u4e0b\u56fe\u6765\u81eaPaolo Cignoni\uff0c\u56fe\u4e2d\u5bf9\u6bd4\u4e86\u4e24\u79cd\u65b9\u5f0f\uff1a \u9ad8\u7cbe\u5ea6\u7f51\u683c\u548c\u4f7f\u7528\u6cd5\u7ebf\u8d34\u56fe\u7684\u4f4e\u7cbe\u5ea6\u7f51\u683c\u51e0\u4e4e\u533a\u5206\u4e0d\u51fa\u6765\u3002\u6240\u4ee5\u6cd5\u7ebf\u8d34\u56fe\u4e0d\u4ec5\u770b\u8d77\u6765\u6f02\u4eae\uff0c\u5b83\u4e5f\u662f\u4e00\u4e2a\u5c06\u9ad8\u7cbe\u5ea6\u591a\u8fb9\u5f62\u8f6c\u6362\u4e3a\u4f4e\u7cbe\u5ea6\u591a\u8fb9\u5f62\u800c\u4e0d\u5931\u7ec6\u8282\u7684\u91cd\u8981\u5de5\u5177\u3002 \u6700\u540e\u4e00\u4ef6\u4e8b \u5173\u4e8e\u6cd5\u7ebf\u8d34\u56fe\u8fd8\u6709\u6700\u540e\u4e00\u4e2a\u6280\u5de7\u8981\u8ba8\u8bba\uff0c\u5b83\u53ef\u4ee5\u5728\u4e0d\u5fc5\u82b1\u8d39\u592a\u591a\u6027\u80fd\u5f00\u9500\u7684\u60c5\u51b5\u4e0b\u7a0d\u7a0d\u63d0\u5347\u753b\u8d28\u8868\u73b0\u3002 \u5f53\u5728\u66f4\u5927\u7684\u7f51\u683c\u4e0a\u8ba1\u7b97\u5207\u7ebf\u5411\u91cf\u7684\u65f6\u5019\uff0c\u5b83\u4eec\u5f80\u5f80\u6709\u5f88\u5927\u6570\u91cf\u7684\u5171\u4eab\u9876\u70b9\uff0c\u5f53\u6cd5\u5411\u8d34\u56fe\u5e94\u7528\u5230\u8fd9\u4e9b\u8868\u9762\u65f6\u5c06\u5207\u7ebf\u5411\u91cf\u5e73\u5747\u5316\u901a\u5e38\u80fd\u83b7\u5f97\u66f4\u597d\u66f4\u5e73\u6ed1\u7684\u7ed3\u679c\u3002\u8fd9\u6837\u505a\u6709\u4e2a\u95ee\u9898\uff0c\u5c31\u662fTBN\u5411\u91cf\u53ef\u80fd\u4f1a\u4e0d\u80fd\u4e92\u76f8\u5782\u76f4\uff0c\u8fd9\u610f\u5473\u7740TBN\u77e9\u9635\u4e0d\u518d\u662f\u6b63\u4ea4\u77e9\u9635\u4e86\u3002\u6cd5\u7ebf\u8d34\u56fe\u53ef\u80fd\u4f1a\u7a0d\u7a0d\u504f\u79fb\uff0c\u4f46\u8fd9\u4ecd\u7136\u53ef\u4ee5\u6539\u8fdb\u3002 \u4f7f\u7528\u53eb\u505a \u683c\u62c9\u59c6-\u65bd\u5bc6\u7279 \u6b63\u4ea4\u5316\u8fc7\u7a0b\uff08Gram-Schmidt process\uff09\u7684\u6570\u5b66\u6280\u5de7\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9TBN\u5411\u91cf\u8fdb\u884c\u91cd\u6b63\u4ea4\u5316\uff0c\u8fd9\u6837\u6bcf\u4e2a\u5411\u91cf\u5c31\u53c8\u4f1a\u91cd\u65b0\u5782\u76f4\u4e86\u3002\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u6211\u4eec\u8fd9\u6837\u505a\uff1a vec3 T = normalize(vec3(model * vec4(tangent, 0.0))); vec3 N = normalize(vec3(model * vec4(normal, 0.0))); // re-orthogonalize T with respect to N T = normalize(T - dot(T, N) * N); // then retrieve perpendicular vector B with the cross product of T and N vec3 B = cross(T, N); mat3 TBN = mat3(T, B, N) \u8fd9\u6837\u7a0d\u5fae\u82b1\u8d39\u4e00\u4e9b\u6027\u80fd\u5f00\u9500\u5c31\u80fd\u5bf9\u6cd5\u7ebf\u8d34\u56fe\u8fdb\u884c\u4e00\u70b9\u63d0\u5347\u3002\u770b\u770b\u6700\u540e\u7684\u90a3\u4e2a\u9644\u52a0\u8d44\u6e90\uff1a Normal Mapping Mathematics\u89c6\u9891\uff0c\u91cc\u9762\u6709\u5bf9\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u89e3\u91ca\u3002 \u9644\u52a0\u8d44\u6e90 Tutorial 26: Normal Mapping \uff1aogldev\u7684\u6cd5\u7ebf\u8d34\u56fe\u6559\u7a0b\u3002 How Normal Mapping Works \uff1aTheBennyBox\u7684\u8bb2\u8ff0\u6cd5\u7ebf\u8d34\u56fe\u5982\u4f55\u5de5\u4f5c\u7684\u89c6\u9891\u3002 Normal Mapping Mathematics \uff1aTheBennyBox\u5173\u4e8e\u6cd5\u7ebf\u8d34\u56fe\u7684\u6570\u5b66\u539f\u7406\u7684\u6559\u7a0b\u3002 Tutorial 13: Normal Mapping \uff1aopengl-tutorial.org\u63d0\u4f9b\u7684\u6cd5\u7ebf\u8d34\u56fe\u6559\u7a0b\u3002","title":"\u6cd5\u7ebf\u8d34\u56fe"},{"location":"05%20Advanced%20Lighting/04%20Normal%20Mapping/#_1","text":"\u539f\u6587 Normal Mapping \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django \u6821\u5bf9 KenLee Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u6211\u4eec\u7684\u573a\u666f\u4e2d\u5df2\u7ecf\u5145\u6ee1\u4e86\u591a\u8fb9\u5f62\u7269\u4f53\uff0c\u5176\u4e2d\u6bcf\u4e2a\u90fd\u53ef\u80fd\u7531\u6210\u767e\u4e0a\u5343\u5e73\u5766\u7684\u4e09\u89d2\u5f62\u7ec4\u6210\u3002\u6211\u4eec\u4ee5\u5411\u4e09\u89d2\u5f62\u4e0a\u9644\u52a0\u7eb9\u7406\u7684\u65b9\u5f0f\u6765\u589e\u52a0\u989d\u5916\u7ec6\u8282\uff0c\u63d0\u5347\u771f\u5b9e\u611f\uff0c\u9690\u85cf\u591a\u8fb9\u5f62\u51e0\u4f55\u4f53\u662f\u7531\u65e0\u6570\u4e09\u89d2\u5f62\u7ec4\u6210\u7684\u4e8b\u5b9e\u3002\u7eb9\u7406\u786e\u6709\u52a9\u76ca\uff0c\u7136\u800c\u5f53\u4f60\u8fd1\u770b\u5b83\u4eec\u65f6\uff0c\u8fd9\u4e2a\u4e8b\u5b9e\u4fbf\u9690\u85cf\u4e0d\u4f4f\u4e86\u3002\u73b0\u5b9e\u4e2d\u7684\u7269\u4f53\u8868\u9762\u5e76\u975e\u662f\u5e73\u5766\u7684\uff0c\u800c\u662f\u8868\u73b0\u51fa\u65e0\u6570\uff08\u51f9\u51f8\u4e0d\u5e73\u7684\uff09\u7ec6\u8282\u3002 \u4f8b\u5982\uff0c\u7816\u5757\u7684\u8868\u9762\u3002\u7816\u5757\u7684\u8868\u9762\u975e\u5e38\u7c97\u7cd9\uff0c\u663e\u7136\u4e0d\u662f\u5b8c\u5168\u5e73\u5766\u7684\uff1a\u5b83\u5305\u542b\u7740\u63a5\u7f1d\u5904\u6c34\u6ce5\u51f9\u75d5\uff0c\u4ee5\u53ca\u975e\u5e38\u591a\u7684\u7ec6\u5c0f\u7684\u7a7a\u6d1e\u3002\u5982\u679c\u6211\u4eec\u5728\u4e00\u4e2a\u6709\u5149\u7684\u573a\u666f\u4e2d\u770b\u8fd9\u6837\u4e00\u4e2a\u7816\u5757\u7684\u8868\u9762\uff0c\u95ee\u9898\u5c31\u51fa\u6765\u4e86\u3002\u4e0b\u56fe\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7816\u5757\u7eb9\u7406\u5e94\u7528\u5230\u4e86\u5e73\u5766\u7684\u8868\u9762\uff0c\u5e76\u88ab\u4e00\u4e2a\u70b9\u5149\u6e90\u7167\u4eae\u3002 \u5149\u7167\u5e76\u6ca1\u6709\u5448\u73b0\u51fa\u4efb\u4f55\u88c2\u75d5\u548c\u5b54\u6d1e\uff0c\u5b8c\u5168\u5ffd\u7565\u4e86\u7816\u5757\u4e4b\u95f4\u51f9\u8fdb\u53bb\u7684\u7ebf\u6761\uff1b\u8868\u9762\u770b\u8d77\u6765\u5b8c\u5168\u5c31\u662f\u5e73\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528specular\u8d34\u56fe\u6839\u636e\u6df1\u5ea6\u6216\u5176\u4ed6\u7ec6\u8282\u963b\u6b62\u90e8\u5206\u8868\u9762\u88ab\u7167\u7684\u66f4\u4eae\uff0c\u4ee5\u6b64\u90e8\u5206\u5730\u89e3\u51b3\u95ee\u9898\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u65b9\u6848\u3002\u6211\u4eec\u9700\u8981\u7684\u662f\u67d0\u79cd\u53ef\u4ee5\u544a\u77e5\u5149\u7167\u7cfb\u7edf\u7ed9\u6240\u6709\u6709\u5173\u7269\u4f53\u8868\u9762\u7c7b\u4f3c\u6df1\u5ea6\u8fd9\u6837\u7684\u7ec6\u8282\u7684\u65b9\u5f0f\u3002 \u5982\u679c\u6211\u4eec\u4ee5\u5149\u7684\u89c6\u89d2\u6765\u770b\u8fd9\u4e2a\u95ee\u9898\uff1a\u662f\u4ec0\u4e48\u4f7f\u8868\u9762\u88ab\u89c6\u4e3a\u5b8c\u5168\u5e73\u5766\u7684\u8868\u9762\u6765\u7167\u4eae\uff1f\u7b54\u6848\u4f1a\u662f\u8868\u9762\u7684\u6cd5\u7ebf\u5411\u91cf\u3002\u4ee5\u5149\u7167\u7b97\u6cd5\u7684\u89c6\u89d2\u8003\u8651\u7684\u8bdd\uff0c\u53ea\u6709\u4e00\u4ef6\u4e8b\u51b3\u5b9a\u7269\u4f53\u7684\u5f62\u72b6\uff0c\u8fd9\u5c31\u662f\u5782\u76f4\u4e8e\u5b83\u7684\u6cd5\u7ebf\u5411\u91cf\u3002\u7816\u5757\u8868\u9762\u53ea\u6709\u4e00\u4e2a\u6cd5\u7ebf\u5411\u91cf\uff0c\u8868\u9762\u5b8c\u5168\u6839\u636e\u8fd9\u4e2a\u6cd5\u7ebf\u5411\u91cf\u88ab\u4ee5\u4e00\u81f4\u7684\u65b9\u5f0f\u7167\u4eae\u3002\u5982\u679c\u6bcf\u4e2afragment\u90fd\u662f\u7528\u81ea\u5df1\u7684\u4e0d\u540c\u7684\u6cd5\u7ebf\u4f1a\u600e\u6837\uff1f\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u8868\u9762\u7ec6\u5fae\u7684\u7ec6\u8282\u5bf9\u6cd5\u7ebf\u5411\u91cf\u8fdb\u884c\u6539\u53d8\uff1b\u8fd9\u6837\u5c31\u4f1a\u83b7\u5f97\u4e00\u79cd\u8868\u9762\u770b\u8d77\u6765\u8981\u590d\u6742\u5f97\u591a\u7684\u5e7b\u89c9\uff1a \u6bcf\u4e2afragment\u4f7f\u7528\u4e86\u81ea\u5df1\u7684\u6cd5\u7ebf\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba9\u5149\u7167\u76f8\u4fe1\u4e00\u4e2a\u8868\u9762\u7531\u5f88\u591a\u5fae\u5c0f\u7684\uff08\u5782\u76f4\u4e8e\u6cd5\u7ebf\u5411\u91cf\u7684\uff09\u5e73\u9762\u6240\u7ec4\u6210\uff0c\u7269\u4f53\u8868\u9762\u7684\u7ec6\u8282\u5c06\u4f1a\u5f97\u5230\u6781\u5927\u63d0\u5347\u3002\u8fd9\u79cd\u6bcf\u4e2afragment\u4f7f\u7528\u5404\u81ea\u7684\u6cd5\u7ebf\uff0c\u66ff\u4ee3\u4e00\u4e2a\u9762\u4e0a\u6240\u6709fragment\u4f7f\u7528\u540c\u4e00\u4e2a\u6cd5\u7ebf\u7684\u6280\u672f\u53eb\u505a\u6cd5\u7ebf\u8d34\u56fe\uff08normal mapping\uff09\u6216\u51f9\u51f8\u8d34\u56fe\uff08bump mapping\uff09\u3002\u5e94\u7528\u5230\u7816\u5899\u4e0a\uff0c\u6548\u679c\u50cf\u8fd9\u6837\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\u7ec6\u8282\u83b7\u5f97\u4e86\u6781\u5927\u63d0\u5347\uff0c\u5f00\u9500\u5374\u4e0d\u5927\u3002\u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u8981\u6539\u53d8\u6bcf\u4e2afragment\u7684\u6cd5\u7ebf\u5411\u91cf\uff0c\u5e76\u4e0d\u9700\u8981\u6539\u53d8\u6240\u6709\u5149\u7167\u516c\u5f0f\u3002\u73b0\u5728\u6211\u4eec\u662f\u4e3a\u6bcf\u4e2afragment\u4f20\u9012\u4e00\u4e2a\u6cd5\u7ebf\uff0c\u4e0d\u518d\u4f7f\u7528\u63d2\u503c\u8868\u9762\u6cd5\u7ebf\u3002\u8fd9\u6837\u5149\u7167\u4f7f\u8868\u9762\u62e5\u6709\u4e86\u81ea\u5df1\u7684\u7ec6\u8282\u3002","title":"\u6cd5\u7ebf\u8d34\u56fe"},{"location":"05%20Advanced%20Lighting/04%20Normal%20Mapping/#_2","text":"\u4e3a\u4f7f\u6cd5\u7ebf\u8d34\u56fe\u5de5\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u4e2afragment\u63d0\u4f9b\u4e00\u4e2a\u6cd5\u7ebf\u3002\u50cfdiffuse\u8d34\u56fe\u548cspecular\u8d34\u56fe\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a2D\u7eb9\u7406\u6765\u50a8\u5b58\u6cd5\u7ebf\u6570\u636e\u30022D\u7eb9\u7406\u4e0d\u4ec5\u53ef\u4ee5\u50a8\u5b58\u989c\u8272\u548c\u5149\u7167\u6570\u636e\uff0c\u8fd8\u53ef\u4ee5\u50a8\u5b58\u6cd5\u7ebf\u5411\u91cf\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u4ece2D\u7eb9\u7406\u4e2d\u91c7\u6837\u5f97\u5230\u7279\u5b9a\u7eb9\u7406\u7684\u6cd5\u7ebf\u5411\u91cf\u3002 \u7531\u4e8e\u6cd5\u7ebf\u5411\u91cf\u662f\u4e2a\u51e0\u4f55\u5de5\u5177\uff0c\u800c\u7eb9\u7406\u901a\u5e38\u53ea\u7528\u4e8e\u50a8\u5b58\u989c\u8272\u4fe1\u606f\uff0c\u7528\u7eb9\u7406\u50a8\u5b58\u6cd5\u7ebf\u5411\u91cf\u4e0d\u662f\u975e\u5e38\u76f4\u63a5\u3002\u5982\u679c\u4f60\u60f3\u4e00\u60f3\uff0c\u5c31\u4f1a\u77e5\u9053\u7eb9\u7406\u4e2d\u7684\u989c\u8272\u5411\u91cf\u7528r\u3001g\u3001b\u5143\u7d20\u4ee3\u8868\u4e00\u4e2a3D\u5411\u91cf\u3002\u7c7b\u4f3c\u7684\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u6cd5\u7ebf\u5411\u91cf\u7684x\u3001y\u3001z\u5143\u7d20\u50a8\u5b58\u5230\u7eb9\u7406\u4e2d\uff0c\u4ee3\u66ff\u989c\u8272\u7684r\u3001g\u3001b\u5143\u7d20\u3002\u6cd5\u7ebf\u5411\u91cf\u7684\u8303\u56f4\u5728-1\u52301\u4e4b\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u8981\u5c06\u5176\u6620\u5c04\u52300\u52301\u7684\u8303\u56f4\uff1a vec3 rgb_normal = normal * 0.5 + 0.5; // \u4ece [-1,1] \u8f6c\u6362\u81f3 [0,1] \u5c06\u6cd5\u7ebf\u5411\u91cf\u53d8\u6362\u4e3a\u50cf\u8fd9\u6837\u7684RGB\u989c\u8272\u5143\u7d20\uff0c\u6211\u4eec\u5c31\u80fd\u628a\u6839\u636e\u8868\u9762\u7684\u5f62\u72b6\u7684fragment\u7684\u6cd5\u7ebf\u4fdd\u5b58\u57282D\u7eb9\u7406\u4e2d\u3002\u6559\u7a0b\u5f00\u5934\u5c55\u793a\u7684\u90a3\u4e2a\u7816\u5757\u7684\u4f8b\u5b50\u7684\u6cd5\u7ebf\u8d34\u56fe\u5982\u4e0b\u6240\u793a\uff1a \u8fd9\u4f1a\u662f\u4e00\u79cd\u504f\u84dd\u8272\u8c03\u7684\u7eb9\u7406\uff08\u4f60\u5728\u7f51\u4e0a\u627e\u5230\u7684\u51e0\u4e4e\u6240\u6709\u6cd5\u7ebf\u8d34\u56fe\u90fd\u662f\u8fd9\u6837\u7684\uff09\u3002\u8fd9\u662f\u56e0\u4e3a\u6240\u6709\u6cd5\u7ebf\u7684\u6307\u5411\u90fd\u504f\u5411z\u8f74\uff080, 0, 1\uff09\u8fd9\u662f\u4e00\u79cd\u504f\u84dd\u7684\u989c\u8272\u3002\u6cd5\u7ebf\u5411\u91cf\u4ecez\u8f74\u65b9\u5411\u4e5f\u5411\u5176\u4ed6\u65b9\u5411\u8f7b\u5fae\u504f\u79fb\uff0c\u989c\u8272\u4e5f\u5c31\u53d1\u751f\u4e86\u8f7b\u5fae\u53d8\u5316\uff0c\u8fd9\u6837\u770b\u8d77\u6765\u4fbf\u6709\u4e86\u4e00\u79cd\u6df1\u5ea6\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u5728\u6bcf\u4e2a\u7816\u5757\u7684\u9876\u90e8\uff0c\u989c\u8272\u503e\u5411\u4e8e\u504f\u7eff\uff0c\u8fd9\u662f\u56e0\u4e3a\u7816\u5757\u7684\u9876\u90e8\u7684\u6cd5\u7ebf\u504f\u5411\u4e8e\u6307\u5411\u6b63y\u8f74\u65b9\u5411\uff080, 1, 0\uff09\uff0c\u8fd9\u6837\u5b83\u5c31\u662f\u7eff\u8272\u7684\u4e86\u3002 \u5728\u4e00\u4e2a\u7b80\u5355\u7684\u671d\u5411\u6b63z\u8f74\u7684\u5e73\u9762\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 \u8fd9\u4e2adiffuse\u7eb9\u7406 \u548c \u8fd9\u4e2a\u6cd5\u7ebf\u8d34\u56fe \u6765\u6e32\u67d3\u524d\u9762\u90e8\u5206\u7684\u56fe\u7247\u3002\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u4e2a\u94fe\u63a5\u91cc\u7684\u6cd5\u7ebf\u8d34\u56fe\u548c\u4e0a\u9762\u5c55\u793a\u7684\u90a3\u4e2a\u4e0d\u4e00\u6837\u3002\u539f\u56e0\u662fOpenGL\u8bfb\u53d6\u7684\u7eb9\u7406\u7684y\uff08\u6216V\uff09\u5750\u6807\u548c\u7eb9\u7406\u901a\u5e38\u88ab\u521b\u5efa\u7684\u65b9\u5f0f\u76f8\u53cd\u3002\u94fe\u63a5\u91cc\u7684\u6cd5\u7ebf\u8d34\u56fe\u7684y\uff08\u6216\u7eff\u8272\uff09\u5143\u7d20\u662f\u76f8\u53cd\u7684\uff08\u4f60\u53ef\u4ee5\u770b\u5230\u7eff\u8272\u73b0\u5728\u5728\u4e0b\u8fb9\uff09\uff1b\u5982\u679c\u4f60\u6ca1\u8003\u8651\u8fd9\u4e2a\uff0c\u5149\u7167\u5c31\u4e0d\u6b63\u786e\u4e86\uff08\u8bd1\u6ce8\uff1a\u5982\u679c\u4f60\u73b0\u5728\u4e0d\u518d\u4f7f\u7528SOIL\u4e86\uff0c\u90a3\u5c31\u4e0d\u8981\u7528\u94fe\u63a5\u91cc\u7684\u90a3\u4e2a\u6cd5\u7ebf\u8d34\u56fe\uff0c\u8fd9\u4e2a\u95ee\u9898\u662fSOIL\u8f7d\u5165\u7eb9\u7406\u4e0a\u4e0b\u98a0\u5012\u6240\u81f4\uff0c\u5b83\u4e5f\u4f1a\u628a\u6cd5\u7ebf\u5728y\u65b9\u5411\u4e0a\u98a0\u5012\uff09\u3002\u52a0\u8f7d\u7eb9\u7406\uff0c\u628a\u5b83\u4eec\u7ed1\u5b9a\u5230\u5408\u9002\u7684\u7eb9\u7406\u5355\u5143\uff0c\u7136\u540e\u4f7f\u7528\u4e0b\u9762\u7684\u6539\u53d8\u4e86\u7684\u50cf\u7d20\u7740\u8272\u5668\u6765\u6e32\u67d3\u4e00\u4e2a\u5e73\u9762\uff1a uniform sampler2D normalMap; void main() { // \u4ece\u6cd5\u7ebf\u8d34\u56fe\u8303\u56f4[0,1]\u83b7\u53d6\u6cd5\u7ebf normal = texture(normalMap, fs_in.TexCoords).rgb; // \u5c06\u6cd5\u7ebf\u5411\u91cf\u8f6c\u6362\u4e3a\u8303\u56f4[-1,1] normal = normalize(normal * 2.0 - 1.0); [...] // \u50cf\u5f80\u5e38\u90a3\u6837\u5904\u7406\u5149\u7167 } \u8fd9\u91cc\u6211\u4eec\u5c06\u88ab\u91c7\u6837\u7684\u6cd5\u7ebf\u989c\u8272\u4ece0\u52301\u91cd\u65b0\u6620\u5c04\u56de-1\u52301\uff0c\u4fbf\u80fd\u5c06RGB\u989c\u8272\u91cd\u65b0\u5904\u7406\u6210\u6cd5\u7ebf\uff0c\u7136\u540e\u4f7f\u7528\u91c7\u6837\u51fa\u7684\u6cd5\u7ebf\u5411\u91cf\u5e94\u7528\u4e8e\u5149\u7167\u7684\u8ba1\u7b97\u3002\u5728\u4f8b\u5b50\u4e2d\u6211\u4eec\u4f7f\u7528\u7684\u662fBlinn-Phong\u7740\u8272\u5668\u3002 \u901a\u8fc7\u6162\u6162\u968f\u7740\u65f6\u95f4\u6162\u6162\u79fb\u52a8\u5149\u6e90\uff0c\u4f60\u5c31\u80fd\u660e\u767d\u6cd5\u7ebf\u8d34\u56fe\u662f\u4ec0\u4e48\u610f\u601d\u4e86\u3002\u8fd0\u884c\u8fd9\u4e2a\u4f8b\u5b50\u4f60\u5c31\u80fd\u5f97\u5230\u672c\u6559\u7a0b\u5f00\u59cb\u7684\u90a3\u4e2a\u6548\u679c\uff1a \u7136\u800c\u6709\u4e2a\u95ee\u9898\u9650\u5236\u4e86\u521a\u624d\u8bb2\u7684\u90a3\u79cd\u6cd5\u7ebf\u8d34\u56fe\u7684\u4f7f\u7528\u3002\u6211\u4eec\u4f7f\u7528\u7684\u90a3\u4e2a\u6cd5\u7ebf\u8d34\u56fe\u91cc\u9762\u7684\u6240\u6709\u6cd5\u7ebf\u5411\u91cf\u90fd\u662f\u6307\u5411\u6b63z\u65b9\u5411\u7684\u3002\u4e0a\u9762\u7684\u4f8b\u5b50\u80fd\u7528\uff0c\u662f\u56e0\u4e3a\u90a3\u4e2a\u5e73\u9762\u7684\u8868\u9762\u6cd5\u7ebf\u4e5f\u662f\u6307\u5411\u6b63z\u65b9\u5411\u7684\u3002\u53ef\u662f\uff0c\u5982\u679c\u6211\u4eec\u5728\u8868\u9762\u6cd5\u7ebf\u6307\u5411\u6b63y\u65b9\u5411\u7684\u5e73\u9762\u4e0a\u4f7f\u7528\u540c\u4e00\u4e2a\u6cd5\u7ebf\u8d34\u56fe\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f \u5149\u7167\u770b\u8d77\u6765\u5b8c\u5168\u4e0d\u5bf9\uff01\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u662f\u5e73\u9762\u7684\u8868\u9762\u6cd5\u7ebf\u73b0\u5728\u6307\u5411\u4e86y\uff0c\u800c\u91c7\u6837\u5f97\u5230\u7684\u6cd5\u7ebf\u4ecd\u7136\u6307\u5411\u7684\u662fz\u3002\u7ed3\u679c\u5c31\u662f\u5149\u7167\u4ecd\u7136\u8ba4\u4e3a\u8868\u9762\u6cd5\u7ebf\u548c\u4e4b\u524d\u671d\u5411\u6b63z\u65b9\u5411\u65f6\u4e00\u6837\uff1b\u8fd9\u6837\u5149\u7167\u5c31\u4e0d\u5bf9\u4e86\u3002\u4e0b\u9762\u7684\u56fe\u7247\u5c55\u793a\u4e86\u8fd9\u4e2a\u8868\u9762\u4e0a\u91c7\u6837\u7684\u6cd5\u7ebf\u7684\u8fd1\u4f3c\u60c5\u51b5\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\u6240\u6709\u6cd5\u7ebf\u90fd\u6307\u5411z\u65b9\u5411\uff0c\u5b83\u4eec\u672c\u8be5\u671d\u7740\u8868\u9762\u6cd5\u7ebf\u6307\u5411y\u65b9\u5411\u7684\u3002\u4e00\u4e2a\u53ef\u884c\u65b9\u6848\u662f\u4e3a\u6bcf\u4e2a\u8868\u9762\u5236\u4f5c\u4e00\u4e2a\u5355\u72ec\u7684\u6cd5\u7ebf\u8d34\u56fe\u3002\u5982\u679c\u662f\u4e00\u4e2a\u7acb\u65b9\u4f53\u7684\u8bdd\u6211\u4eec\u5c31\u9700\u89816\u4e2a\u6cd5\u7ebf\u8d34\u56fe\uff0c\u4f46\u662f\u5982\u679c\u6a21\u578b\u4e0a\u6709\u65e0\u6570\u7684\u671d\u5411\u4e0d\u540c\u65b9\u5411\u7684\u8868\u9762\uff0c\u8fd9\u5c31\u4e0d\u53ef\u884c\u4e86\uff08\u8bd1\u6ce8\uff1a\u5b9e\u9645\u4e0a\u5bf9\u4e8e\u590d\u6742\u6a21\u578b\u53ef\u4ee5\u628a\u671d\u5411\u5404\u4e2a\u65b9\u5411\u7684\u6cd5\u7ebf\u50a8\u5b58\u5728\u540c\u4e00\u5f20\u8d34\u56fe\u4e0a\uff0c\u4f60\u53ef\u80fd\u770b\u5230\u8fc7\u4e0d\u53ea\u662f\u84dd\u8272\u7684\u6cd5\u7ebf\u8d34\u56fe\uff0c\u4e0d\u8fc7\u7528\u90a3\u6837\u7684\u6cd5\u7ebf\u8d34\u56fe\u6709\u4e2a\u95ee\u9898\u662f\u4f60\u5fc5\u987b\u8bb0\u4f4f\u6a21\u578b\u7684\u8d77\u59cb\u671d\u5411\uff0c\u5982\u679c\u6a21\u578b\u8fd0\u52a8\u4e86\u8fd8\u8981\u8bb0\u5f55\u6a21\u578b\u7684\u53d8\u6362\uff0c\u8fd9\u662f\u975e\u5e38\u4e0d\u65b9\u4fbf\u7684\uff1b\u6b64\u5916\u5c31\u50cf\u4f5c\u8005\u6240\u8bf4\u7684\uff0c\u5982\u679c\u628a\u4e00\u4e2adiffuse\u7eb9\u7406\u5e94\u7528\u5728\u540c\u4e00\u4e2a\u7269\u4f53\u7684\u4e0d\u540c\u8868\u9762\u4e0a\uff0c\u5c31\u50cf\u7acb\u65b9\u4f53\u90a3\u6837\u7684\uff0c\u5c31\u9700\u8981\u505a6\u4e2a\u6cd5\u7ebf\u8d34\u56fe\uff0c\u8fd9\u4e5f\u4e0d\u53ef\u53d6\uff09\u3002 \u53e6\u4e00\u4e2a\u7a0d\u5fae\u6709\u70b9\u96be\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u5728\u4e00\u4e2a\u4e0d\u540c\u7684\u5750\u6807\u7a7a\u95f4\u4e2d\u8fdb\u884c\u5149\u7167\uff0c\u8fd9\u4e2a\u5750\u6807\u7a7a\u95f4\u91cc\uff0c\u6cd5\u7ebf\u8d34\u56fe\u5411\u91cf\u603b\u662f\u6307\u5411\u8fd9\u4e2a\u5750\u6807\u7a7a\u95f4\u7684\u6b63z\u65b9\u5411\uff1b\u6240\u6709\u7684\u5149\u7167\u5411\u91cf\u90fd\u76f8\u5bf9\u4e0e\u8fd9\u4e2a\u6b63z\u65b9\u5411\u8fdb\u884c\u53d8\u6362\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u59cb\u7ec8\u4f7f\u7528\u540c\u6837\u7684\u6cd5\u7ebf\u8d34\u56fe\uff0c\u4e0d\u7ba1\u671d\u5411\u95ee\u9898\u3002\u8fd9\u4e2a\u5750\u6807\u7a7a\u95f4\u53eb\u505a\u5207\u7ebf\u7a7a\u95f4\uff08tangent space\uff09\u3002","title":"\u6cd5\u7ebf\u8d34\u56fe"},{"location":"05%20Advanced%20Lighting/04%20Normal%20Mapping/#_3","text":"\u6cd5\u7ebf\u8d34\u56fe\u4e2d\u7684\u6cd5\u7ebf\u5411\u91cf\u5b9a\u4e49\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\uff0c\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\uff0c\u6cd5\u7ebf\u6c38\u8fdc\u6307\u7740\u6b63z\u65b9\u5411\u3002\u5207\u7ebf\u7a7a\u95f4\u662f\u4f4d\u4e8e\u4e09\u89d2\u5f62\u8868\u9762\u4e4b\u4e0a\u7684\u7a7a\u95f4\uff1a\u6cd5\u7ebf\u76f8\u5bf9\u4e8e\u5355\u4e2a\u4e09\u89d2\u5f62\u7684\u5c40\u90e8\u5750\u6807\u7cfb\u3002\u5b83\u5c31\u50cf\u6cd5\u7ebf\u8d34\u56fe\u5411\u91cf\u7684\u5c40\u90e8\u7a7a\u95f4\uff1b\u5b83\u4eec\u90fd\u88ab\u5b9a\u4e49\u4e3a\u6307\u5411\u6b63z\u65b9\u5411\uff0c\u65e0\u8bba\u6700\u7ec8\u53d8\u6362\u5230\u4ec0\u4e48\u65b9\u5411\u3002\u4f7f\u7528\u4e00\u4e2a\u7279\u5b9a\u7684\u77e9\u9635\u6211\u4eec\u5c31\u80fd\u5c06\u672c\u5730/\u5207\u7ebf\u7a7a\u95f4\u4e2d\u7684\u6cd5\u7ebf\u5411\u91cf\u8f6c\u6210\u4e16\u754c\u6216\u89c6\u56fe\u7a7a\u95f4\u4e0b\uff0c\u4f7f\u5b83\u4eec\u8f6c\u5411\u5230\u6700\u7ec8\u7684\u8d34\u56fe\u8868\u9762\u7684\u65b9\u5411\u3002 \u6211\u4eec\u53ef\u4ee5\u8bf4\uff0c\u4e0a\u4e2a\u90e8\u5206\u90a3\u4e2a\u671d\u5411\u6b63y\u7684\u6cd5\u7ebf\u8d34\u56fe\u9519\u8bef\u7684\u8d34\u5230\u4e86\u8868\u9762\u4e0a\u3002\u6cd5\u7ebf\u8d34\u56fe\u88ab\u5b9a\u4e49\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\uff0c\u6240\u4ee5\u4e00\u79cd\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u5f0f\u662f\u8ba1\u7b97\u51fa\u4e00\u79cd\u77e9\u9635\uff0c\u628a\u6cd5\u7ebf\u4ece\u5207\u7ebf\u7a7a\u95f4\u53d8\u6362\u5230\u4e00\u4e2a\u4e0d\u540c\u7684\u7a7a\u95f4\uff0c\u8fd9\u6837\u5b83\u4eec\u5c31\u80fd\u548c\u8868\u9762\u6cd5\u7ebf\u65b9\u5411\u5bf9\u9f50\u4e86\uff1a\u6cd5\u7ebf\u5411\u91cf\u90fd\u4f1a\u6307\u5411\u6b63y\u65b9\u5411\u3002\u5207\u7ebf\u7a7a\u95f4\u7684\u4e00\u5927\u597d\u5904\u662f\u6211\u4eec\u53ef\u4ee5\u4e3a\u4efb\u4f55\u7c7b\u578b\u7684\u8868\u9762\u8ba1\u7b97\u51fa\u4e00\u4e2a\u8fd9\u6837\u7684\u77e9\u9635\uff0c\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u628a\u5207\u7ebf\u7a7a\u95f4\u7684z\u65b9\u5411\u548c\u8868\u9762\u7684\u6cd5\u7ebf\u65b9\u5411\u5bf9\u9f50\u3002 \u8fd9\u79cd\u77e9\u9635\u53eb\u505aTBN\u77e9\u9635\u8fd9\u4e09\u4e2a\u5b57\u6bcd\u5206\u522b\u4ee3\u8868tangent\u3001bitangent\u548cnormal\u5411\u91cf\u3002\u8fd9\u662f\u5efa\u6784\u8fd9\u4e2a\u77e9\u9635\u6240\u9700\u7684\u5411\u91cf\u3002\u8981\u5efa\u6784\u8fd9\u6837\u4e00\u4e2a\u628a\u5207\u7ebf\u7a7a\u95f4\u8f6c\u53d8\u4e3a\u4e0d\u540c\u7a7a\u95f4\u7684\u53d8\u5f02\u77e9\u9635\uff0c\u6211\u4eec\u9700\u8981\u4e09\u4e2a\u76f8\u4e92\u5782\u76f4\u7684\u5411\u91cf\uff0c\u5b83\u4eec\u6cbf\u4e00\u4e2a\u8868\u9762\u7684\u6cd5\u7ebf\u8d34\u56fe\u5bf9\u9f50\u4e8e\uff1a\u4e0a\u3001\u53f3\u3001\u524d\uff1b\u8fd9\u548c\u6211\u4eec\u5728 \u6444\u50cf\u673a\u6559\u7a0b \u4e2d\u505a\u7684\u7c7b\u4f3c\u3002 \u5df2\u77e5\u4e0a\u5411\u91cf\u662f\u8868\u9762\u7684\u6cd5\u7ebf\u5411\u91cf\u3002\u53f3\u548c\u524d\u5411\u91cf\u662f\u5207\u7ebf(Tagent)\u548c\u526f\u5207\u7ebf(Bitangent)\u5411\u91cf\u3002\u4e0b\u9762\u7684\u56fe\u7247\u5c55\u793a\u4e86\u4e00\u4e2a\u8868\u9762\u7684\u4e09\u4e2a\u5411\u91cf\uff1a \u8ba1\u7b97\u51fa\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5e76\u4e0d\u50cf\u6cd5\u7ebf\u5411\u91cf\u90a3\u4e48\u5bb9\u6613\u3002\u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230\u6cd5\u7ebf\u8d34\u56fe\u7684\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u4e0e\u7eb9\u7406\u5750\u6807\u7684\u4e24\u4e2a\u65b9\u5411\u5bf9\u9f50\u3002\u6211\u4eec\u5c31\u662f\u7528\u5230\u8fd9\u4e2a\u7279\u6027\u8ba1\u7b97\u6bcf\u4e2a\u8868\u9762\u7684\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u7684\u3002\u9700\u8981\u7528\u5230\u4e00\u4e9b\u6570\u5b66\u624d\u80fd\u5f97\u5230\u5b83\u4eec\uff1b\u8bf7\u770b\u4e0b\u56fe\uff1a \u6ce8\u610f\u4e0a\u56fe\u4e2d\u8fb9 E_2 \u4e0e\u7eb9\u7406\u5750\u6807\u7684\u5dee \\Delta U_2 \u3001 \\Delta V_2 \u6784\u6210\u4e00\u4e2a\u4e09\u89d2\u5f62\u3002 \\Delta U_2 \u4e0e\u5207\u7ebf\u5411\u91cf T \u65b9\u5411\u76f8\u540c\uff0c\u800c \\Delta V_2 \u4e0e\u526f\u5207\u7ebf\u5411\u91cf B \u65b9\u5411\u76f8\u540c\u3002\u8fd9\u4e5f\u5c31\u662f\u8bf4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u4e09\u89d2\u5f62\u7684\u8fb9 E_1 \u4e0e E_2 \u5199\u6210\u5207\u7ebf\u5411\u91cf \\T \u548c\u526f\u5207\u7ebf\u5411\u91cf B \u7684\u7ebf\u6027\u7ec4\u5408\uff1a E_1 = \\Delta U_1T + \\Delta V_1B E_2 = \\Delta U_2T + \\Delta V_2B \u6211\u4eec\u4e5f\u53ef\u4ee5\u5199\u6210\u8fd9\u6837\uff1a (E_{1x}, E_{1y}, E_{1z}) = \\Delta U_1(T_x, T_y, T_z) + \\Delta V_1(B_x, B_y, B_z) (E_{2x}, E_{2y}, E_{2z}) = \\Delta U_2(T_x, T_y, T_z) + \\Delta V_2(B_x, B_y, B_z) E \u662f\u4e24\u4e2a\u5411\u91cf\u4f4d\u7f6e\u7684\u5dee\uff0c \\Delta U \u548c \\Delta V \u662f\u7eb9\u7406\u5750\u6807\u7684\u5dee\u3002\u7136\u540e\u6211\u4eec\u5f97\u5230\u4e24\u4e2a\u672a\u77e5\u6570\uff08\u5207\u7ebf T \u548c\u526f\u5207\u7ebf B \uff09\u548c\u4e24\u4e2a\u7b49\u5f0f\u3002\u4f60\u53ef\u80fd\u60f3\u8d77\u4f60\u7684\u4ee3\u6570\u8bfe\u4e86\uff0c\u8fd9\u662f\u8ba9\u6211\u4eec\u53bb\u89e3 T \u548c B \u3002 \u4e0a\u9762\u7684\u65b9\u7a0b\u5141\u8bb8\u6211\u4eec\u628a\u5b83\u4eec\u5199\u6210\u53e6\u4e00\u79cd\u683c\u5f0f\uff1a\u77e9\u9635\u4e58\u6cd5 \\begin{bmatrix} E_{1x} & E_{1y} & E_{1z} \\\\ E_{2x} & E_{2y} & E_{2z} \\end{bmatrix} = \\begin{bmatrix} \\Delta U_1 & \\Delta V_1 \\\\ \\Delta U_2 & \\Delta V_2 \\end{bmatrix} \\begin{bmatrix} T_x & T_y & T_z \\\\ B_x & B_y & B_z \\end{bmatrix} \u5c1d\u8bd5\u4f1a\u610f\u4e00\u4e0b\u77e9\u9635\u4e58\u6cd5\uff0c\u5b83\u4eec\u786e\u5b9e\u662f\u540c\u4e00\u79cd\u7b49\u5f0f\u3002\u628a\u7b49\u5f0f\u5199\u6210\u77e9\u9635\u5f62\u5f0f\u7684\u597d\u5904\u662f\uff0c\u89e3 T \u548c B \u4f1a\u56e0\u6b64\u53d8\u5f97\u5f88\u5bb9\u6613\u3002\u4e24\u8fb9\u90fd\u4e58\u4ee5 \\Delta U \\Delta V \u7684\u9006\u77e9\u9635\u7b49\u4e8e\uff1a \\begin{bmatrix} \\Delta U_1 & \\Delta V_1 \\\\ \\Delta U_2 & \\Delta V_2 \\end{bmatrix}^{-1} \\begin{bmatrix} E_{1x} & E_{1y} & E_{1z} \\\\ E_{2x} & E_{2y} & E_{2z} \\end{bmatrix} = \\begin{bmatrix} T_x & T_y & T_z \\\\ B_x & B_y & B_z \\end{bmatrix} \u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u89e3\u51fa T \u548c B \u4e86\u3002\u8fd9\u9700\u8981\u6211\u4eec\u8ba1\u7b97\u51fadelta\u7eb9\u7406\u5750\u6807\u77e9\u9635\u7684\u9006\u77e9\u9635\u3002\u6211\u4e0d\u6253\u7b97\u8bb2\u89e3\u8ba1\u7b97\u9006\u77e9\u9635\u7684\u7ec6\u8282\uff0c\u4f46\u5927\u81f4\u662f\u628a\u5b83\u53d8\u5316\u4e3a\uff0c1\u9664\u4ee5\u77e9\u9635\u7684\u884c\u5217\u5f0f\uff0c\u518d\u4e58\u4ee5\u5b83\u7684\u4f34\u968f\u77e9\u9635(Adjugate Matrix)\u3002 \\begin{bmatrix} T_x & T_y & T_z \\\\ B_x & B_y & B_z \\end{bmatrix} = \\frac{1}{\\Delta U_1 \\Delta V_2 - \\Delta U_2 \\Delta V_1} \\begin{bmatrix} \\Delta V_2 & -\\Delta V_1 \\\\ -\\Delta U_2 & \\Delta U_1 \\end{bmatrix} \\begin{bmatrix} E_{1x} & E_{1y} & E_{1z} \\\\ E_{2x} & E_{2y} & E_{2z} \\end{bmatrix} \u6709\u4e86\u6700\u540e\u8fd9\u4e2a\u7b49\u5f0f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u516c\u5f0f\u3001\u4e09\u89d2\u5f62\u7684\u4e24\u6761\u8fb9\u4ee5\u53ca\u7eb9\u7406\u5750\u6807\u8ba1\u7b97\u51fa\u5207\u7ebf\u5411\u91cf T \u548c\u526f\u5207\u7ebf B \u3002 \u5982\u679c\u4f60\u5bf9\u8fd9\u4e9b\u6570\u5b66\u5185\u5bb9\u4e0d\u7406\u89e3\u4e5f\u4e0d\u7528\u62c5\u5fc3\u3002\u5f53\u4f60\u77e5\u9053\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e09\u89d2\u5f62\u7684\u9876\u70b9\u548c\u7eb9\u7406\u5750\u6807\uff08\u56e0\u4e3a\u7eb9\u7406\u5750\u6807\u548c\u5207\u7ebf\u5411\u91cf\u5728\u540c\u4e00\u7a7a\u95f4\u4e2d\uff09\u8ba1\u7b97\u51fa\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u4f60\u5c31\u5df2\u7ecf\u90e8\u5206\u5730\u8fbe\u5230\u76ee\u7684\u4e86\uff08\u8bd1\u6ce8\uff1a\u4e0a\u9762\u7684\u63a8\u5bfc\u5df2\u7ecf\u5f88\u6e05\u695a\u4e86\uff0c\u5982\u679c\u4f60\u4e0d\u660e\u767d\u53ef\u4ee5\u53c2\u8003\u4efb\u610f\u7ebf\u6027\u4ee3\u6570\u6559\u6750\uff0c\u5c31\u50cf\u4f5c\u8005\u6240\u8bf4\u7684\u8bb0\u4f4f\u6c42\u5f97\u5207\u7ebf\u7a7a\u95f4\u7684\u516c\u5f0f\u4e5f\u884c\uff0c\u4e0d\u8fc7\u4e0d\u7ba1\u600e\u6837\u90fd\u5f97\u7406\u89e3\u5207\u7ebf\u7a7a\u95f4\u7684\u542b\u4e49\uff09\u3002","title":"\u5207\u7ebf\u7a7a\u95f4"},{"location":"05%20Advanced%20Lighting/04%20Normal%20Mapping/#_4","text":"\u8fd9\u4e2a\u6559\u7a0b\u7684demo\u573a\u666f\u4e2d\u6709\u4e00\u4e2a\u7b80\u5355\u76842D\u5e73\u9762\uff0c\u5b83\u671d\u5411\u6b63z\u65b9\u5411\u3002\u8fd9\u6b21\u6211\u4eec\u4f1a\u4f7f\u7528\u5207\u7ebf\u7a7a\u95f4\u6765\u5b9e\u73b0\u6cd5\u7ebf\u8d34\u56fe\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u5e73\u9762\u671d\u5411\u4efb\u610f\u65b9\u5411\uff0c\u6cd5\u7ebf\u8d34\u56fe\u4ecd\u7136\u80fd\u591f\u5de5\u4f5c\u3002\u4f7f\u7528\u524d\u9762\u8ba8\u8bba\u7684\u6570\u5b66\u65b9\u6cd5\uff0c\u6211\u4eec\u6765\u624b\u5de5\u8ba1\u7b97\u51fa\u8868\u9762\u7684\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5411\u91cf\u3002 \u5047\u8bbe\u5e73\u9762\u4f7f\u7528\u4e0b\u9762\u7684\u5411\u91cf\u5efa\u7acb\u8d77\u6765\uff081\u30012\u30013\u548c1\u30013\u30014\uff0c\u5b83\u4eec\u662f\u4e24\u4e2a\u4e09\u89d2\u5f62\uff09\uff1a // positions glm::vec3 pos1(-1.0, 1.0, 0.0); glm::vec3 pos2(-1.0, -1.0, 0.0); glm::vec3 pos3(1.0, -1.0, 0.0); glm::vec3 pos4(1.0, 1.0, 0.0); // texture coordinates glm::vec2 uv1(0.0, 1.0); glm::vec2 uv2(0.0, 0.0); glm::vec2 uv3(1.0, 0.0); glm::vec2 uv4(1.0, 1.0); // normal vector glm::vec3 nm(0.0, 0.0, 1.0); \u6211\u4eec\u5148\u8ba1\u7b97\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u7684\u8fb9\u548cdeltaUV\u5750\u6807\uff1a glm::vec3 edge1 = pos2 - pos1; glm::vec3 edge2 = pos3 - pos1; glm::vec2 deltaUV1 = uv2 - uv1; glm::vec2 deltaUV2 = uv3 - uv1; \u6709\u4e86\u8ba1\u7b97\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u7684\u5fc5\u5907\u6570\u636e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u5199\u51fa\u6765\u81ea\u4e8e\u524d\u9762\u90e8\u5206\u4e2d\u7684\u4e0b\u5217\u7b49\u5f0f\uff1a GLfloat f = 1.0f / (deltaUV1.x * deltaUV2.y - deltaUV2.x * deltaUV1.y); tangent1.x = f * (deltaUV2.y * edge1.x - deltaUV1.y * edge2.x); tangent1.y = f * (deltaUV2.y * edge1.y - deltaUV1.y * edge2.y); tangent1.z = f * (deltaUV2.y * edge1.z - deltaUV1.y * edge2.z); tangent1 = glm::normalize(tangent1); bitangent1.x = f * (-deltaUV2.x * edge1.x + deltaUV1.x * edge2.x); bitangent1.y = f * (-deltaUV2.x * edge1.y + deltaUV1.x * edge2.y); bitangent1.z = f * (-deltaUV2.x * edge1.z + deltaUV1.x * edge2.z); bitangent1 = glm::normalize(bitangent1); [...] // \u5bf9\u5e73\u9762\u7684\u7b2c\u4e8c\u4e2a\u4e09\u89d2\u5f62\u91c7\u7528\u7c7b\u4f3c\u6b65\u9aa4\u8ba1\u7b97\u5207\u7ebf\u548c\u526f\u5207\u7ebf \u6211\u4eec\u9884\u5148\u8ba1\u7b97\u51fa\u7b49\u5f0f\u7684\u5206\u6570\u90e8\u5206 f \uff0c\u7136\u540e\u628a\u5b83\u548c\u6bcf\u4e2a\u5411\u91cf\u7684\u5143\u7d20\u8fdb\u884c\u76f8\u5e94\u77e9\u9635\u4e58\u6cd5\u3002\u5982\u679c\u4f60\u628a\u4ee3\u7801\u548c\u6700\u7ec8\u7684\u7b49\u5f0f\u5bf9\u6bd4\u4f60\u4f1a\u53d1\u73b0\uff0c\u8fd9\u5c31\u662f\u76f4\u63a5\u5957\u7528\u3002\u6700\u540e\u6211\u4eec\u8fd8\u8981\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u6765\u786e\u4fdd\u5207\u7ebf/\u526f\u5207\u7ebf\u5411\u91cf\u6700\u540e\u662f\u5355\u4f4d\u5411\u91cf\u3002 \u56e0\u4e3a\u4e00\u4e2a\u4e09\u89d2\u5f62\u6c38\u8fdc\u662f\u5e73\u5766\u7684\u5f62\u72b6\uff0c\u6211\u4eec\u53ea\u9700\u4e3a\u6bcf\u4e2a\u4e09\u89d2\u5f62\u8ba1\u7b97\u4e00\u4e2a\u5207\u7ebf/\u526f\u5207\u7ebf\uff0c\u5b83\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u4e09\u89d2\u5f62\u4e0a\u7684\u9876\u70b9\u90fd\u662f\u4e00\u6837\u7684\u3002\u8981\u6ce8\u610f\u7684\u662f\u5927\u591a\u6570\u5b9e\u73b0\u901a\u5e38\u4e09\u89d2\u5f62\u548c\u4e09\u89d2\u5f62\u4e4b\u95f4\u90fd\u4f1a\u5171\u4eab\u9876\u70b9\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5f00\u53d1\u8005\u901a\u5e38\u5c06\u6bcf\u4e2a\u9876\u70b9\u7684\u6cd5\u7ebf\u548c\u5207\u7ebf/\u526f\u5207\u7ebf\u7b49\u9876\u70b9\u5c5e\u6027\u5e73\u5747\u5316\uff0c\u4ee5\u83b7\u5f97\u66f4\u52a0\u67d4\u548c\u7684\u6548\u679c\u3002\u6211\u4eec\u7684\u5e73\u9762\u7684\u4e09\u89d2\u5f62\u4e4b\u95f4\u5206\u4eab\u4e86\u4e00\u4e9b\u9876\u70b9\uff0c\u4f46\u662f\u56e0\u4e3a\u4e24\u4e2a\u4e09\u89d2\u5f62\u76f8\u4e92\u5e76\u884c\uff0c\u56e0\u6b64\u5e76\u4e0d\u9700\u8981\u5c06\u7ed3\u679c\u5e73\u5747\u5316\uff0c\u4f46\u65e0\u8bba\u4f55\u65f6\u53ea\u8981\u4f60\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u8bb0\u4f4f\u5b83\u5c31\u662f\u4ef6\u597d\u4e8b\u3002 \u6700\u540e\u7684\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5411\u91cf\u7684\u503c\u5e94\u8be5\u662f(1, 0, 0)\u548c(0, 1, 0)\uff0c\u5b83\u4eec\u548c\u6cd5\u7ebf(0, 0, 1)\u7ec4\u6210\u76f8\u4e92\u5782\u76f4\u7684TBN\u77e9\u9635\u3002\u5728\u5e73\u9762\u4e0a\u663e\u793a\u51fa\u6765TBN\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff1a \u6bcf\u4e2a\u9876\u70b9\u5b9a\u4e49\u4e86\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5411\u91cf\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u5b9e\u73b0\u6b63\u786e\u7684\u6cd5\u7ebf\u8d34\u56fe\u4e86\u3002","title":"\u624b\u5de5\u8ba1\u7b97\u5207\u7ebf\u548c\u526f\u5207\u7ebf"},{"location":"05%20Advanced%20Lighting/04%20Normal%20Mapping/#_5","text":"\u4e3a\u8ba9\u6cd5\u7ebf\u8d34\u56fe\u5de5\u4f5c\uff0c\u6211\u4eec\u5148\u5f97\u5728\u7740\u8272\u5668\u4e2d\u521b\u5efa\u4e00\u4e2aTBN\u77e9\u9635\u3002\u6211\u4eec\u5148\u5c06\u524d\u9762\u8ba1\u7b97\u51fa\u6765\u7684\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5411\u91cf\u4f20\u7ed9\u9876\u70b9\u7740\u8272\u5668\uff0c\u4f5c\u4e3a\u5b83\u7684\u5c5e\u6027\uff1a #version 330 core layout (location = 0) in vec3 position; layout (location = 1) in vec3 normal; layout (location = 2) in vec2 texCoords; layout (location = 3) in vec3 tangent; layout (location = 4) in vec3 bitangent; \u5728\u9876\u70b9\u7740\u8272\u5668\u7684main\u51fd\u6570\u4e2d\u6211\u4eec\u521b\u5efaTBN\u77e9\u9635\uff1a void main() { [...] vec3 T = normalize(vec3(model * vec4(tangent, 0.0))); vec3 B = normalize(vec3(model * vec4(bitangent, 0.0))); vec3 N = normalize(vec3(model * vec4(normal, 0.0))); mat3 TBN = mat3(T, B, N) } \u6211\u4eec\u5148\u5c06\u6240\u6709TBN\u5411\u91cf\u53d8\u6362\u5230\u6211\u4eec\u6240\u64cd\u4f5c\u7684\u5750\u6807\u7cfb\u4e2d\uff0c\u73b0\u5728\u662f\u4e16\u754c\u7a7a\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u4e58\u4ee5model\u77e9\u9635\u3002\u7136\u540e\u6211\u4eec\u521b\u5efa\u5b9e\u9645\u7684TBN\u77e9\u9635\uff0c\u76f4\u63a5\u628a\u76f8\u5e94\u7684\u5411\u91cf\u5e94\u7528\u5230mat3\u6784\u9020\u5668\u5c31\u884c\u3002\u6ce8\u610f\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u66f4\u7cbe\u786e\u7684\u8bdd\u5c31\u4e0d\u8981\u5c06TBN\u5411\u91cf\u4e58\u4ee5model\u77e9\u9635\uff0c\u800c\u662f\u4f7f\u7528\u6cd5\u7ebf\u77e9\u9635\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u5173\u5fc3\u5411\u91cf\u7684\u65b9\u5411\uff0c\u4e0d\u5173\u5fc3\u5e73\u79fb\u548c\u7f29\u653e\u3002 Important \u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u9876\u70b9\u7740\u8272\u5668\u4e2d\u65e0\u9700\u526f\u5207\u7ebf\u3002\u6240\u6709\u7684\u8fd9\u4e09\u4e2aTBN\u5411\u91cf\u90fd\u662f\u76f8\u4e92\u5782\u76f4\u7684\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u7528T\u548cN\u5411\u91cf\u7684\u53c9\u4e58\uff0c\u81ea\u5df1\u8ba1\u7b97\u51fa\u526f\u5207\u7ebf\uff1avec3 B = cross(T, N); \u73b0\u5728\u6211\u4eec\u6709\u4e86TBN\u77e9\u9635\uff0c\u5982\u679c\u6765\u4f7f\u7528\u5b83\u5462\uff1f\u901a\u5e38\u6765\u8bf4\u6709\u4e24\u79cd\u65b9\u5f0f\u4f7f\u7528\u5b83\uff0c\u6211\u4eec\u4f1a\u628a\u8fd9\u4e24\u79cd\u65b9\u5f0f\u90fd\u8bf4\u660e\u4e00\u4e0b\uff1a \u6211\u4eec\u76f4\u63a5\u4f7f\u7528TBN\u77e9\u9635\uff0c\u8fd9\u4e2a\u77e9\u9635\u53ef\u4ee5\u628a\u5207\u7ebf\u5750\u6807\u7a7a\u95f4\u7684\u5411\u91cf\u8f6c\u6362\u5230\u4e16\u754c\u5750\u6807\u7a7a\u95f4\u3002\u56e0\u6b64\u6211\u4eec\u628a\u5b83\u4f20\u7ed9\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u628a\u901a\u8fc7\u91c7\u6837\u5f97\u5230\u7684\u6cd5\u7ebf\u5750\u6807\u5de6\u4e58\u4e0aTBN\u77e9\u9635\uff0c\u8f6c\u6362\u5230\u4e16\u754c\u5750\u6807\u7a7a\u95f4\u4e2d\uff0c\u8fd9\u6837\u6240\u6709\u6cd5\u7ebf\u548c\u5176\u4ed6\u5149\u7167\u53d8\u91cf\u5c31\u5728\u540c\u4e00\u4e2a\u5750\u6807\u7cfb\u4e2d\u4e86\u3002 \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528TBN\u77e9\u9635\u7684\u9006\u77e9\u9635\uff0c\u8fd9\u4e2a\u77e9\u9635\u53ef\u4ee5\u628a\u4e16\u754c\u5750\u6807\u7a7a\u95f4\u7684\u5411\u91cf\u8f6c\u6362\u5230\u5207\u7ebf\u5750\u6807\u7a7a\u95f4\u3002\u56e0\u6b64\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a\u77e9\u9635\u5de6\u4e58\u5176\u4ed6\u5149\u7167\u53d8\u91cf\uff0c\u628a\u4ed6\u4eec\u8f6c\u6362\u5230\u5207\u7ebf\u7a7a\u95f4\uff0c\u8fd9\u6837\u6cd5\u7ebf\u548c\u5176\u4ed6\u5149\u7167\u53d8\u91cf\u518d\u4e00\u6b21\u5728\u4e00\u4e2a\u5750\u6807\u7cfb\u4e2d\u4e86\u3002 \u6211\u4eec\u6765\u770b\u770b\u7b2c\u4e00\u79cd\u60c5\u51b5\u3002 \u6211\u4eec\u4ece\u6cd5\u7ebf\u8d34\u56fe\u91c7\u6837\u5f97\u6765\u7684\u6cd5\u7ebf\u5411\u91cf\uff0c\u662f\u5728\u5207\u7ebf\u7a7a\u95f4\u8868\u793a\u7684\uff0c\u5c3d\u7ba1\u5176\u4ed6\u5149\u7167\u5411\u91cf\u90fd\u662f\u5728\u4e16\u754c\u7a7a\u95f4\u8868\u793a\u7684\u3002\u628aTBN\u4f20\u7ed9\u50cf\u7d20\u7740\u8272\u5668\uff0c\u6211\u4eec\u5c31\u80fd\u5c06\u91c7\u6837\u5f97\u6765\u7684\u5207\u7ebf\u7a7a\u95f4\u7684\u6cd5\u7ebf\u4e58\u4ee5\u8fd9\u4e2aTBN\u77e9\u9635\uff0c\u5c06\u6cd5\u7ebf\u5411\u91cf\u53d8\u6362\u5230\u548c\u5176\u4ed6\u5149\u7167\u5411\u91cf\u4e00\u6837\u7684\u53c2\u8003\u7a7a\u95f4\u4e2d\u3002\u8fd9\u79cd\u65b9\u5f0f\u968f\u540e\u6240\u6709\u5149\u7167\u8ba1\u7b97\u90fd\u53ef\u4ee5\u7b80\u5355\u7684\u7406\u89e3\u3002 \u628aTBN\u77e9\u9635\u53d1\u7ed9\u50cf\u7d20\u7740\u8272\u5668\u5f88\u7b80\u5355\uff1a out VS_OUT { vec3 FragPos; vec2 TexCoords; mat3 TBN; } vs_out; void main() { [...] vs_out.TBN = mat3(T, B, N); } \u5728\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u6211\u4eec\u7528mat3\u4f5c\u4e3a\u8f93\u5165\u53d8\u91cf\uff1a in VS_OUT { vec3 FragPos; vec2 TexCoords; mat3 TBN; } fs_in; \u6709\u4e86TBN\u77e9\u9635\u6211\u4eec\u73b0\u5728\u5c31\u53ef\u4ee5\u66f4\u65b0\u6cd5\u7ebf\u8d34\u56fe\u4ee3\u7801\uff0c\u5f15\u5165\u5207\u7ebf\u5230\u4e16\u754c\u7a7a\u95f4\u53d8\u6362\uff1a normal = texture(normalMap, fs_in.TexCoords).rgb; normal = normalize(normal * 2.0 - 1.0); normal = normalize(fs_in.TBN * normal); \u56e0\u4e3a\u6700\u540e\u7684normal\u73b0\u5728\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\u4e86\uff0c\u5c31\u4e0d\u7528\u6539\u53d8\u5176\u4ed6\u50cf\u7d20\u7740\u8272\u5668\u7684\u4ee3\u7801\u4e86\uff0c\u56e0\u4e3a\u5149\u7167\u4ee3\u7801\u5c31\u662f\u5047\u8bbe\u6cd5\u7ebf\u5411\u91cf\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\u3002 \u6211\u4eec\u540c\u6837\u770b\u770b\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002 \u6211\u4eec\u7528TBN\u77e9\u9635\u7684\u9006\u77e9\u9635\u5c06\u6240\u6709\u76f8\u5173\u7684\u4e16\u754c\u7a7a\u95f4\u5411\u91cf\u8f6c\u53d8\u5230\u91c7\u6837\u6240\u5f97\u6cd5\u7ebf\u5411\u91cf\u7684\u7a7a\u95f4\uff1a\u5207\u7ebf\u7a7a\u95f4\u3002TBN\u7684\u5efa\u6784\u8fd8\u662f\u4e00\u6837\uff0c\u4f46\u6211\u4eec\u5728\u5c06\u5176\u53d1\u9001\u7ed9\u50cf\u7d20\u7740\u8272\u5668\u4e4b\u524d\u5148\u8981\u6c42\u9006\u77e9\u9635\uff1a vs_out.TBN = transpose(mat3(T, B, N)); \u6ce8\u610f\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528transpose\u51fd\u6570\uff0c\u800c\u4e0d\u662finverse\u51fd\u6570\u3002\u6b63\u4ea4\u77e9\u9635\uff08\u6bcf\u4e2a\u8f74\u65e2\u662f\u5355\u4f4d\u5411\u91cf\u540c\u65f6\u76f8\u4e92\u5782\u76f4\uff09\u7684\u4e00\u5927\u5c5e\u6027\u662f\u4e00\u4e2a\u6b63\u4ea4\u77e9\u9635\u7684\u7f6e\u6362\u77e9\u9635\u4e0e\u5b83\u7684\u9006\u77e9\u9635\u76f8\u7b49\u3002\u8fd9\u4e2a\u5c5e\u6027\u5f88\u91cd\u8981\u56e0\u4e3a\u9006\u77e9\u9635\u7684\u6c42\u5f97\u6bd4\u6c42\u7f6e\u6362\u5f00\u9500\u5927\uff1b\u7ed3\u679c\u5374\u662f\u4e00\u6837\u7684\u3002 \u5728\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u6211\u4eec\u4e0d\u7528\u5bf9\u6cd5\u7ebf\u5411\u91cf\u53d8\u6362\uff0c\u4f46\u6211\u4eec\u8981\u628a\u5176\u4ed6\u76f8\u5173\u5411\u91cf\u8f6c\u6362\u5230\u5207\u7ebf\u7a7a\u95f4\uff0c\u5b83\u4eec\u662flightDir\u548cviewDir\u3002\u8fd9\u6837\u6bcf\u4e2a\u5411\u91cf\u8fd8\u662f\u5728\u540c\u4e00\u4e2a\u7a7a\u95f4\uff08\u5207\u7ebf\u7a7a\u95f4\uff09\u4e2d\u4e86\u3002 void main() { vec3 normal = texture(normalMap, fs_in.TexCoords).rgb; normal = normalize(normal * 2.0 - 1.0); vec3 lightDir = fs_in.TBN * normalize(lightPos - fs_in.FragPos); vec3 viewDir = fs_in.TBN * normalize(viewPos - fs_in.FragPos); [...] } \u7b2c\u4e8c\u79cd\u65b9\u6cd5\u770b\u4f3c\u8981\u505a\u7684\u66f4\u591a\uff0c\u5b83\u8fd8\u9700\u8981\u5728\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u8fdb\u884c\u66f4\u591a\u7684\u4e58\u6cd5\u64cd\u4f5c\uff0c\u6240\u4ee5\u4e3a\u4f55\u8fd8\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u5462\uff1f \u5c06\u5411\u91cf\u4ece\u4e16\u754c\u7a7a\u95f4\u8f6c\u6362\u5230\u5207\u7ebf\u7a7a\u95f4\u6709\u4e2a\u989d\u5916\u597d\u5904\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u76f8\u5173\u5411\u91cf\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u8f6c\u6362\u5230\u5207\u7ebf\u7a7a\u95f4\uff0c\u4e0d\u7528\u5728\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u505a\u8fd9\u4ef6\u4e8b\u3002\u8fd9\u662f\u53ef\u884c\u7684\uff0c\u56e0\u4e3alightPos\u548cviewPos\u4e0d\u662f\u6bcf\u4e2afragment\u8fd0\u884c\u90fd\u8981\u6539\u53d8\uff0c\u5bf9\u4e8efs_in.FragPos\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u9876\u70b9\u7740\u8272\u5668\u8ba1\u7b97\u5b83\u7684\u5207\u7ebf\u7a7a\u95f4\u4f4d\u7f6e\u3002\u57fa\u672c\u4e0a\uff0c\u4e0d\u9700\u8981\u628a\u4efb\u4f55\u5411\u91cf\u5728\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u8fdb\u884c\u53d8\u6362\uff0c\u800c\u7b2c\u4e00\u79cd\u65b9\u6cd5\u4e2d\u5c31\u662f\u5fc5\u987b\u7684\uff0c\u56e0\u4e3a\u91c7\u6837\u51fa\u6765\u7684\u6cd5\u7ebf\u5411\u91cf\u5bf9\u4e8e\u6bcf\u4e2a\u50cf\u7d20\u7740\u8272\u5668\u90fd\u4e0d\u4e00\u6837\u3002 \u6240\u4ee5\u73b0\u5728\u4e0d\u662f\u628aTBN\u77e9\u9635\u7684\u9006\u77e9\u9635\u53d1\u9001\u7ed9\u50cf\u7d20\u7740\u8272\u5668\uff0c\u800c\u662f\u5c06\u5207\u7ebf\u7a7a\u95f4\u7684\u5149\u6e90\u4f4d\u7f6e\uff0c\u89c2\u5bdf\u4f4d\u7f6e\u4ee5\u53ca\u9876\u70b9\u4f4d\u7f6e\u53d1\u9001\u7ed9\u50cf\u7d20\u7740\u8272\u5668\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u7528\u5728\u50cf\u7d20\u7740\u8272\u5668\u91cc\u8fdb\u884c\u77e9\u9635\u4e58\u6cd5\u4e86\u3002\u8fd9\u662f\u4e00\u4e2a\u6781\u4f73\u7684\u4f18\u5316\uff0c\u56e0\u4e3a\u9876\u70b9\u7740\u8272\u5668\u901a\u5e38\u6bd4\u50cf\u7d20\u7740\u8272\u5668\u8fd0\u884c\u7684\u5c11\u3002\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u8fd9\u79cd\u65b9\u6cd5\u662f\u4e00\u79cd\u66f4\u597d\u7684\u5b9e\u73b0\u65b9\u5f0f\u7684\u539f\u56e0\u3002 out VS_OUT { vec3 FragPos; vec2 TexCoords; vec3 TangentLightPos; vec3 TangentViewPos; vec3 TangentFragPos; } vs_out; uniform vec3 lightPos; uniform vec3 viewPos; [...] void main() { [...] mat3 TBN = transpose(mat3(T, B, N)); vs_out.TangentLightPos = TBN * lightPos; vs_out.TangentViewPos = TBN * viewPos; vs_out.TangentFragPos = TBN * vec3(model * vec4(position, 0.0)); } \u5728\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u6211\u4eec\u4f7f\u7528\u8fd9\u4e9b\u65b0\u7684\u8f93\u5165\u53d8\u91cf\u6765\u8ba1\u7b97\u5207\u7ebf\u7a7a\u95f4\u7684\u5149\u7167\u3002\u56e0\u4e3a\u6cd5\u7ebf\u5411\u91cf\u5df2\u7ecf\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\u4e86\uff0c\u5149\u7167\u5c31\u6709\u610f\u4e49\u4e86\u3002 \u5c06\u6cd5\u7ebf\u8d34\u56fe\u5e94\u7528\u5230\u5207\u7ebf\u7a7a\u95f4\u4e0a\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u6df7\u5408\u6559\u7a0b\u4e00\u5f00\u59cb\u90a3\u4e2a\u4f8b\u5b50\u76f8\u4f3c\u7684\u7ed3\u679c\uff0c\u4f46\u8fd9\u6b21\u6211\u4eec\u53ef\u4ee5\u5c06\u5e73\u9762\u671d\u5411\u5404\u4e2a\u65b9\u5411\uff0c\u5149\u7167\u4e00\u76f4\u90fd\u4f1a\u662f\u6b63\u786e\u7684\uff1a glm::mat4 model; model = glm::rotate(model, (GLfloat)glfwGetTime() * -10, glm::normalize(glm::vec3(1.0, 0.0, 1.0))); glUniformMatrix4fv(modelLoc, 1, GL_FALSE, glm::value_ptr(model)); RenderQuad(); \u770b\u8d77\u6765\u662f\u6b63\u786e\u7684\u6cd5\u7ebf\u8d34\u56fe\uff1a \u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230 \u6e90\u4ee3\u7801 \u3001 \u9876\u70b9 \u548c \u50cf\u7d20 \u7740\u8272\u5668\u3002","title":"\u5207\u7ebf\u7a7a\u95f4\u6cd5\u7ebf\u8d34\u56fe"},{"location":"05%20Advanced%20Lighting/04%20Normal%20Mapping/#_6","text":"\u6211\u4eec\u5df2\u7ecf\u8bf4\u660e\u4e86\u5982\u4f55\u901a\u8fc7\u624b\u5de5\u8ba1\u7b97\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5411\u91cf\uff0c\u6765\u4f7f\u7528\u5207\u7ebf\u7a7a\u95f4\u548c\u6cd5\u7ebf\u8d34\u56fe\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u8ba1\u7b97\u8fd9\u4e9b\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5411\u91cf\u5bf9\u4e8e\u4f60\u6765\u8bf4\u4e0d\u662f\u7ecf\u5e38\u80fd\u9047\u5230\u7684\u4e8b\uff1b\u5927\u591a\u6570\u65f6\u5019\uff0c\u5728\u6a21\u578b\u52a0\u8f7d\u5668\u4e2d\u5b9e\u73b0\u4e86\u4e00\u6b21\u5c31\u884c\u4e86\uff0c\u6211\u4eec\u662f\u5728\u4f7f\u7528\u4e86Assimp\u7684\u90a3\u4e2a\u52a0\u8f7d\u5668\u4e2d\u5b9e\u73b0\u7684\u3002 Assimp\u6709\u4e2a\u5f88\u6709\u7528\u7684\u914d\u7f6e\uff0c\u5728\u6211\u4eec\u52a0\u8f7d\u6a21\u578b\u7684\u65f6\u5019\u8c03\u7528aiProcess_CalcTangentSpace\u3002\u5f53aiProcess_CalcTangentSpace\u5e94\u7528\u5230Assimp\u7684ReadFile\u51fd\u6570\u65f6\uff0cAssimp\u4f1a\u4e3a\u6bcf\u4e2a\u52a0\u8f7d\u7684\u9876\u70b9\u8ba1\u7b97\u51fa\u67d4\u548c\u7684\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5411\u91cf\uff0c\u5b83\u6240\u4f7f\u7528\u7684\u65b9\u6cd5\u548c\u6211\u4eec\u672c\u6559\u7a0b\u4f7f\u7528\u7684\u7c7b\u4f3c\u3002 const aiScene* scene = importer.ReadFile( path, aiProcess_Triangulate | aiProcess_FlipUVs | aiProcess_CalcTangentSpace ); \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u7528Assimp\u83b7\u53d6\u8ba1\u7b97\u51fa\u6765\u7684\u5207\u7ebf\u7a7a\u95f4\uff1a vector.x = mesh->mTangents[i].x; vector.y = mesh->mTangents[i].y; vector.z = mesh->mTangents[i].z; vertex.Tangent = vector; \u7136\u540e\uff0c\u4f60\u8fd8\u5fc5\u987b\u66f4\u65b0\u6a21\u578b\u52a0\u8f7d\u5668\uff0c\u7528\u4ee5\u4ece\u5e26\u7eb9\u7406\u6a21\u578b\u4e2d\u52a0\u8f7d\u6cd5\u7ebf\u8d34\u56fe\u3002wavefront\u7684\u6a21\u578b\u683c\u5f0f\uff08.obj\uff09\u5bfc\u51fa\u7684\u6cd5\u7ebf\u8d34\u56fe\u6709\u70b9\u4e0d\u4e00\u6837\uff0cAssimp\u7684aiTextureType_NORMAL\u5e76\u4e0d\u4f1a\u52a0\u8f7d\u5b83\u7684\u6cd5\u7ebf\u8d34\u56fe\uff0c\u800caiTextureType_HEIGHT\u5374\u80fd\uff0c\u6240\u4ee5\u6211\u4eec\u7ecf\u5e38\u8fd9\u6837\u52a0\u8f7d\u5b83\u4eec\uff1a vector normalMaps = loadMaterialTextures(material, aiTextureType_HEIGHT, \"texture_normal\"); \u5f53\u7136\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6a21\u578b\u7684\u7c7b\u578b\u548c\u6587\u4ef6\u683c\u5f0f\u6765\u8bf4\u90fd\u662f\u4e0d\u540c\u7684\u3002\u540c\u6837\u4e86\u89e3aiProcess_CalcTangentSpace\u5e76\u4e0d\u80fd\u603b\u662f\u5f88\u597d\u7684\u5de5\u4f5c\u4e5f\u5f88\u91cd\u8981\u3002\u8ba1\u7b97\u5207\u7ebf\u662f\u9700\u8981\u6839\u636e\u7eb9\u7406\u5750\u6807\u7684\uff0c\u6709\u4e9b\u6a21\u578b\u5236\u4f5c\u8005\u4f7f\u7528\u4e00\u4e9b\u7eb9\u7406\u5c0f\u6280\u5de7\u6bd4\u5982\u955c\u50cf\u4e00\u4e2a\u6a21\u578b\u4e0a\u7684\u7eb9\u7406\u8868\u9762\u65f6\u4e5f\u955c\u50cf\u4e86\u53e6\u4e00\u534a\u7684\u7eb9\u7406\u5750\u6807\uff1b\u8fd9\u6837\u5f53\u4e0d\u8003\u8651\u8fd9\u4e2a\u955c\u50cf\u7684\u7279\u522b\u64cd\u4f5c\u7684\u65f6\u5019\uff08Assimp\u5c31\u4e0d\u8003\u8651\uff09\u7ed3\u679c\u5c31\u4e0d\u5bf9\u4e86\u3002 \u8fd0\u884c\u7a0b\u5e8f\uff0c\u7528\u65b0\u7684\u6a21\u578b\u52a0\u8f7d\u5668\uff0c\u52a0\u8f7d\u4e00\u4e2a\u6709specular\u548c\u6cd5\u7ebf\u8d34\u56fe\u7684\u6a21\u578b\uff0c\u770b\u8d77\u6765\u4f1a\u50cf\u8fd9\u6837\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\u5728\u6ca1\u6709\u592a\u591a\u70b9\u7684\u989d\u5916\u5f00\u9500\u7684\u60c5\u51b5\u4e0b\u6cd5\u7ebf\u8d34\u56fe\u96be\u4ee5\u7f6e\u4fe1\u5730\u63d0\u5347\u4e86\u7269\u4f53\u7684\u7ec6\u8282\u3002 \u4f7f\u7528\u6cd5\u7ebf\u8d34\u56fe\u4e5f\u662f\u4e00\u79cd\u63d0\u5347\u4f60\u7684\u573a\u666f\u7684\u8868\u73b0\u7684\u91cd\u8981\u65b9\u5f0f\u3002\u5728\u4f7f\u7528\u6cd5\u7ebf\u8d34\u56fe\u4e4b\u524d\u4f60\u4e0d\u5f97\u4e0d\u4f7f\u7528\u76f8\u5f53\u591a\u7684\u9876\u70b9\u624d\u80fd\u8868\u73b0\u51fa\u4e00\u4e2a\u66f4\u7cbe\u7ec6\u7684\u7f51\u683c\uff0c\u4f46\u4f7f\u7528\u4e86\u6cd5\u7ebf\u8d34\u56fe\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u66f4\u5c11\u7684\u9876\u70b9\u8868\u73b0\u51fa\u540c\u6837\u4e30\u5bcc\u7684\u7ec6\u8282\u3002\u4e0b\u56fe\u6765\u81eaPaolo Cignoni\uff0c\u56fe\u4e2d\u5bf9\u6bd4\u4e86\u4e24\u79cd\u65b9\u5f0f\uff1a \u9ad8\u7cbe\u5ea6\u7f51\u683c\u548c\u4f7f\u7528\u6cd5\u7ebf\u8d34\u56fe\u7684\u4f4e\u7cbe\u5ea6\u7f51\u683c\u51e0\u4e4e\u533a\u5206\u4e0d\u51fa\u6765\u3002\u6240\u4ee5\u6cd5\u7ebf\u8d34\u56fe\u4e0d\u4ec5\u770b\u8d77\u6765\u6f02\u4eae\uff0c\u5b83\u4e5f\u662f\u4e00\u4e2a\u5c06\u9ad8\u7cbe\u5ea6\u591a\u8fb9\u5f62\u8f6c\u6362\u4e3a\u4f4e\u7cbe\u5ea6\u591a\u8fb9\u5f62\u800c\u4e0d\u5931\u7ec6\u8282\u7684\u91cd\u8981\u5de5\u5177\u3002","title":"\u590d\u6742\u7269\u4f53"},{"location":"05%20Advanced%20Lighting/04%20Normal%20Mapping/#_7","text":"\u5173\u4e8e\u6cd5\u7ebf\u8d34\u56fe\u8fd8\u6709\u6700\u540e\u4e00\u4e2a\u6280\u5de7\u8981\u8ba8\u8bba\uff0c\u5b83\u53ef\u4ee5\u5728\u4e0d\u5fc5\u82b1\u8d39\u592a\u591a\u6027\u80fd\u5f00\u9500\u7684\u60c5\u51b5\u4e0b\u7a0d\u7a0d\u63d0\u5347\u753b\u8d28\u8868\u73b0\u3002 \u5f53\u5728\u66f4\u5927\u7684\u7f51\u683c\u4e0a\u8ba1\u7b97\u5207\u7ebf\u5411\u91cf\u7684\u65f6\u5019\uff0c\u5b83\u4eec\u5f80\u5f80\u6709\u5f88\u5927\u6570\u91cf\u7684\u5171\u4eab\u9876\u70b9\uff0c\u5f53\u6cd5\u5411\u8d34\u56fe\u5e94\u7528\u5230\u8fd9\u4e9b\u8868\u9762\u65f6\u5c06\u5207\u7ebf\u5411\u91cf\u5e73\u5747\u5316\u901a\u5e38\u80fd\u83b7\u5f97\u66f4\u597d\u66f4\u5e73\u6ed1\u7684\u7ed3\u679c\u3002\u8fd9\u6837\u505a\u6709\u4e2a\u95ee\u9898\uff0c\u5c31\u662fTBN\u5411\u91cf\u53ef\u80fd\u4f1a\u4e0d\u80fd\u4e92\u76f8\u5782\u76f4\uff0c\u8fd9\u610f\u5473\u7740TBN\u77e9\u9635\u4e0d\u518d\u662f\u6b63\u4ea4\u77e9\u9635\u4e86\u3002\u6cd5\u7ebf\u8d34\u56fe\u53ef\u80fd\u4f1a\u7a0d\u7a0d\u504f\u79fb\uff0c\u4f46\u8fd9\u4ecd\u7136\u53ef\u4ee5\u6539\u8fdb\u3002 \u4f7f\u7528\u53eb\u505a \u683c\u62c9\u59c6-\u65bd\u5bc6\u7279 \u6b63\u4ea4\u5316\u8fc7\u7a0b\uff08Gram-Schmidt process\uff09\u7684\u6570\u5b66\u6280\u5de7\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9TBN\u5411\u91cf\u8fdb\u884c\u91cd\u6b63\u4ea4\u5316\uff0c\u8fd9\u6837\u6bcf\u4e2a\u5411\u91cf\u5c31\u53c8\u4f1a\u91cd\u65b0\u5782\u76f4\u4e86\u3002\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u6211\u4eec\u8fd9\u6837\u505a\uff1a vec3 T = normalize(vec3(model * vec4(tangent, 0.0))); vec3 N = normalize(vec3(model * vec4(normal, 0.0))); // re-orthogonalize T with respect to N T = normalize(T - dot(T, N) * N); // then retrieve perpendicular vector B with the cross product of T and N vec3 B = cross(T, N); mat3 TBN = mat3(T, B, N) \u8fd9\u6837\u7a0d\u5fae\u82b1\u8d39\u4e00\u4e9b\u6027\u80fd\u5f00\u9500\u5c31\u80fd\u5bf9\u6cd5\u7ebf\u8d34\u56fe\u8fdb\u884c\u4e00\u70b9\u63d0\u5347\u3002\u770b\u770b\u6700\u540e\u7684\u90a3\u4e2a\u9644\u52a0\u8d44\u6e90\uff1a Normal Mapping Mathematics\u89c6\u9891\uff0c\u91cc\u9762\u6709\u5bf9\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u89e3\u91ca\u3002","title":"\u6700\u540e\u4e00\u4ef6\u4e8b"},{"location":"05%20Advanced%20Lighting/04%20Normal%20Mapping/#_8","text":"Tutorial 26: Normal Mapping \uff1aogldev\u7684\u6cd5\u7ebf\u8d34\u56fe\u6559\u7a0b\u3002 How Normal Mapping Works \uff1aTheBennyBox\u7684\u8bb2\u8ff0\u6cd5\u7ebf\u8d34\u56fe\u5982\u4f55\u5de5\u4f5c\u7684\u89c6\u9891\u3002 Normal Mapping Mathematics \uff1aTheBennyBox\u5173\u4e8e\u6cd5\u7ebf\u8d34\u56fe\u7684\u6570\u5b66\u539f\u7406\u7684\u6559\u7a0b\u3002 Tutorial 13: Normal Mapping \uff1aopengl-tutorial.org\u63d0\u4f9b\u7684\u6cd5\u7ebf\u8d34\u56fe\u6559\u7a0b\u3002","title":"\u9644\u52a0\u8d44\u6e90"},{"location":"05%20Advanced%20Lighting/05%20Parallax%20Mapping/","text":"\u89c6\u5dee\u8d34\u56fe \u539f\u6587 Parallax Mapping \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django \u6821\u5bf9 \u6682\u65e0 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u89c6\u5dee\u8d34\u56fe(Parallax Mapping)\u6280\u672f\u548c\u6cd5\u7ebf\u8d34\u56fe\u5dee\u4e0d\u591a\uff0c\u4f46\u5b83\u6709\u7740\u4e0d\u540c\u7684\u539f\u5219\u3002\u548c\u6cd5\u7ebf\u8d34\u56fe\u4e00\u6837\u89c6\u5dee\u8d34\u56fe\u80fd\u591f\u6781\u5927\u63d0\u5347\u8868\u9762\u7ec6\u8282\uff0c\u4f7f\u4e4b\u5177\u6709\u6df1\u5ea6\u611f\u3002\u5b83\u4e5f\u662f\u5229\u7528\u4e86\u89c6\u9519\u89c9\uff0c\u7136\u800c\u5bf9\u6df1\u5ea6\u6709\u7740\u66f4\u597d\u7684\u8868\u8fbe\uff0c\u4e0e\u6cd5\u7ebf\u8d34\u56fe\u4e00\u8d77\u7528\u80fd\u591f\u4ea7\u751f\u96be\u4ee5\u7f6e\u4fe1\u7684\u6548\u679c\u3002\u89c6\u5dee\u8d34\u56fe\u548c\u5149\u7167\u65e0\u5173\uff0c\u6211\u5728\u8fd9\u91cc\u662f\u4f5c\u4e3a\u6cd5\u7ebf\u8d34\u56fe\u7684\u6280\u672f\u5ef6\u7eed\u6765\u8ba8\u8bba\u5b83\u7684\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u5728\u5f00\u59cb\u5b66\u4e60\u89c6\u5dee\u8d34\u56fe\u4e4b\u524d\u5f3a\u70c8\u5efa\u8bae\u5148\u5bf9\u6cd5\u7ebf\u8d34\u56fe\uff0c\u7279\u522b\u662f\u5207\u7ebf\u7a7a\u95f4\u6709\u8f83\u597d\u7684\u7406\u89e3\u3002 \u89c6\u5dee\u8d34\u56fe\u5c5e\u4e8e\u4f4d\u79fb\u8d34\u56fe(Displacement Mapping)\u6280\u672f\u7684\u4e00\u79cd\uff0c\u5b83\u5bf9\u6839\u636e\u50a8\u5b58\u5728\u7eb9\u7406\u4e2d\u7684\u51e0\u4f55\u4fe1\u606f\u5bf9\u9876\u70b9\u8fdb\u884c\u4f4d\u79fb\u6216\u504f\u79fb\u3002\u4e00\u79cd\u5b9e\u73b0\u7684\u65b9\u5f0f\u662f\u6bd4\u5982\u67091000\u4e2a\u9876\u70b9\uff0c\u6839\u636e\u7eb9\u7406\u4e2d\u7684\u6570\u636e\u5bf9\u5e73\u9762\u7279\u5b9a\u533a\u57df\u7684\u9876\u70b9\u7684\u9ad8\u5ea6\u8fdb\u884c\u4f4d\u79fb\u3002\u8fd9\u6837\u7684\u6bcf\u4e2a\u7eb9\u7406\u50cf\u7d20\u5305\u542b\u4e86\u9ad8\u5ea6\u503c\u7eb9\u7406\u53eb\u505a\u9ad8\u5ea6\u8d34\u56fe\u3002\u4e00\u5f20\u7b80\u5355\u7684\u7816\u5757\u8868\u9762\u7684\u9ad8\u5ea6\u8d34\u56fe\u5982\u4e0b\u6240\u793a\uff1a \u6574\u4e2a\u5e73\u9762\u4e0a\u7684\u6bcf\u4e2a\u9876\u70b9\u90fd\u6839\u636e\u4ece\u9ad8\u5ea6\u8d34\u56fe\u91c7\u6837\u51fa\u6765\u7684\u9ad8\u5ea6\u503c\u8fdb\u884c\u4f4d\u79fb\uff0c\u6839\u636e\u6750\u8d28\u7684\u51e0\u4f55\u5c5e\u6027\u5e73\u5766\u7684\u5e73\u9762\u53d8\u6362\u6210\u51f9\u51f8\u4e0d\u5e73\u7684\u8868\u9762\u3002\u4f8b\u5982\u4e00\u4e2a\u5e73\u5766\u7684\u5e73\u9762\u5229\u7528\u4e0a\u9762\u7684\u9ad8\u5ea6\u8d34\u56fe\u8fdb\u884c\u7f6e\u6362\u80fd\u5f97\u5230\u4ee5\u4e0b\u7ed3\u679c\uff1a \u7f6e\u6362\u9876\u70b9\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u5e73\u9762\u5fc5\u987b\u7531\u5f88\u591a\u9876\u70b9\u7ec4\u6210\u624d\u80fd\u83b7\u5f97\u5177\u6709\u771f\u5b9e\u611f\u7684\u6548\u679c\uff0c\u5426\u5219\u770b\u8d77\u6765\u6548\u679c\u5e76\u4e0d\u4f1a\u5f88\u597d\u3002\u4e00\u4e2a\u5e73\u5766\u7684\u8868\u9762\u4e0a\u67091000\u4e2a\u9876\u70b9\u8ba1\u7b97\u91cf\u592a\u5927\u4e86\u3002\u6211\u4eec\u80fd\u5426\u4e0d\u7528\u8fd9\u4e48\u591a\u7684\u9876\u70b9\u5c31\u80fd\u53d6\u5f97\u76f8\u4f3c\u7684\u6548\u679c\u5462\uff1f\u4e8b\u5b9e\u4e0a\uff0c\u4e0a\u9762\u7684\u8868\u9762\u5c31\u662f\u75286\u4e2a\u9876\u70b9\u6e32\u67d3\u51fa\u6765\u7684\uff08\u4e24\u4e2a\u4e09\u89d2\u5f62\uff09\u3002\u4e0a\u9762\u7684\u90a3\u4e2a\u8868\u9762\u4f7f\u7528\u89c6\u5dee\u8d34\u56fe\u6280\u672f\u6e32\u67d3\uff0c\u4f4d\u79fb\u8d34\u56fe\u6280\u672f\u4e0d\u9700\u8981\u989d\u5916\u7684\u9876\u70b9\u6570\u636e\u6765\u8868\u8fbe\u6df1\u5ea6\uff0c\u5b83\u50cf\u6cd5\u7ebf\u8d34\u56fe\u4e00\u6837\u91c7\u7528\u4e00\u79cd\u806a\u660e\u7684\u624b\u6bb5\u6b3a\u9a97\u7528\u6237\u7684\u773c\u775b\u3002 \u89c6\u5dee\u8d34\u56fe\u80cc\u540e\u7684\u601d\u60f3\u662f\u4fee\u6539\u7eb9\u7406\u5750\u6807\u4f7f\u4e00\u4e2afragment\u7684\u8868\u9762\u770b\u8d77\u6765\u6bd4\u5b9e\u9645\u7684\u66f4\u9ad8\u6216\u8005\u66f4\u4f4e\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u6839\u636e\u89c2\u5bdf\u65b9\u5411\u548c\u9ad8\u5ea6\u8d34\u56fe\u3002\u4e3a\u4e86\u7406\u89e3\u5b83\u5982\u4f55\u5de5\u4f5c\uff0c\u770b\u770b\u4e0b\u9762\u7816\u5757\u8868\u9762\u7684\u56fe\u7247\uff1a \u8fd9\u91cc\u7c97\u7cd9\u7684\u7ea2\u7ebf\u4ee3\u8868\u9ad8\u5ea6\u8d34\u56fe\u4e2d\u7684\u6570\u503c\u7684\u7acb\u4f53\u8868\u8fbe\uff0c\u5411\u91cf \\color{orange}{\\bar{V}} \u4ee3\u8868\u89c2\u5bdf\u65b9\u5411\u3002\u5982\u679c\u5e73\u9762\u8fdb\u884c\u5b9e\u9645\u4f4d\u79fb\uff0c\u89c2\u5bdf\u8005\u4f1a\u5728\u70b9 \\color{blue}B \u770b\u5230\u8868\u9762\u3002\u7136\u800c\u6211\u4eec\u7684\u5e73\u9762\u6ca1\u6709\u5b9e\u9645\u4e0a\u8fdb\u884c\u4f4d\u79fb\uff0c\u89c2\u5bdf\u65b9\u5411\u5c06\u5728\u70b9 \\color{green}A \u4e0e\u5e73\u9762\u63a5\u89e6\u3002\u89c6\u5dee\u8d34\u56fe\u7684\u76ee\u7684\u662f\uff0c\u5728 \\color{green}A \u4f4d\u7f6e\u4e0a\u7684fragment\u4e0d\u518d\u4f7f\u7528\u70b9 \\color{green}A \u7684\u7eb9\u7406\u5750\u6807\u800c\u662f\u4f7f\u7528\u70b9 \\color{blue}B \u7684\u3002\u968f\u540e\u6211\u4eec\u7528\u70b9 \\color{blue}B \u7684\u7eb9\u7406\u5750\u6807\u91c7\u6837\uff0c\u89c2\u5bdf\u8005\u5c31\u50cf\u770b\u5230\u4e86\u70b9 \\color{blue}B \u4e00\u6837\u3002 \u8fd9\u4e2a\u6280\u5de7\u5c31\u662f\u63cf\u8ff0\u5982\u4f55\u4ece\u70b9 \\color{green}A \u5f97\u5230\u70b9 \\color{blue}B \u7684\u7eb9\u7406\u5750\u6807\u3002\u89c6\u5dee\u8d34\u56fe\u5c1d\u8bd5\u901a\u8fc7\u5bf9\u4ecefragment\u5230\u89c2\u5bdf\u8005\u7684\u65b9\u5411\u5411\u91cf \\color{orange}{\\bar{V}} \u8fdb\u884c\u7f29\u653e\u7684\u65b9\u5f0f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u7f29\u653e\u7684\u5927\u5c0f\u662f \\color{green}A \u5904fragment\u7684\u9ad8\u5ea6\u3002\u6240\u4ee5\u6211\u4eec\u5c06 \\color{orange}{\\bar{V}} \u7684\u957f\u5ea6\u7f29\u653e\u4e3a\u9ad8\u5ea6\u8d34\u56fe\u5728\u70b9 \\color{green}A \u5904 \\color{green}{H(A)} \u91c7\u6837\u5f97\u6765\u7684\u503c\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u7ecf\u7f29\u653e\u5f97\u5230\u7684\u5411\u91cf \\color{brown}{\\bar{P}} \uff1a \u6211\u4eec\u968f\u540e\u9009\u51fa \\color{brown}{\\bar{P}} \u4ee5\u53ca\u8fd9\u4e2a\u5411\u91cf\u4e0e\u5e73\u9762\u5bf9\u9f50\u7684\u5750\u6807\u4f5c\u4e3a\u7eb9\u7406\u5750\u6807\u7684\u504f\u79fb\u91cf\u3002\u8fd9\u80fd\u5de5\u4f5c\u662f\u56e0\u4e3a\u5411\u91cf \\color{brown}{\\bar{P}} \u662f\u4f7f\u7528\u4ece\u9ad8\u5ea6\u8d34\u56fe\u5f97\u5230\u7684\u9ad8\u5ea6\u503c\u8ba1\u7b97\u51fa\u6765\u7684\uff0c\u6240\u4ee5\u4e00\u4e2afragment\u7684\u9ad8\u5ea6\u8d8a\u9ad8\u4f4d\u79fb\u7684\u91cf\u8d8a\u5927\u3002 \u8fd9\u4e2a\u6280\u5de7\u5728\u5927\u591a\u6570\u65f6\u5019\u90fd\u6ca1\u95ee\u9898\uff0c\u4f46\u70b9 \\color{blue}B \u662f\u7c97\u7565\u4f30\u7b97\u5f97\u5230\u7684\u3002\u5f53\u8868\u9762\u7684\u9ad8\u5ea6\u53d8\u5316\u5f88\u5feb\u7684\u65f6\u5019\uff0c\u770b\u8d77\u6765\u5c31\u4e0d\u4f1a\u771f\u5b9e\uff0c\u56e0\u4e3a\u5411\u91cf \\color{brown}{\\bar{P}} \u6700\u7ec8\u4e0d\u4f1a\u548c \\color{blue}B \u63a5\u8fd1\uff0c\u5c31\u50cf\u4e0b\u56fe\u8fd9\u6837\uff1a \u89c6\u5dee\u8d34\u56fe\u7684\u53e6\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u5f53\u8868\u9762\u88ab\u4efb\u610f\u65cb\u8f6c\u4ee5\u540e\u5f88\u96be\u6307\u51fa\u4ece \\color{brown}{\\bar{P}} \u83b7\u53d6\u54ea\u4e00\u4e2a\u5750\u6807\u3002\u6211\u4eec\u5728\u89c6\u5dee\u8d34\u56fe\u4e2d\u4f7f\u7528\u4e86\u53e6\u4e00\u4e2a\u5750\u6807\u7a7a\u95f4\uff0c\u8fd9\u4e2a\u7a7a\u95f4 \\color{brown}{\\bar{P}} \u5411\u91cf\u7684x\u548cy\u5143\u7d20\u603b\u662f\u4e0e\u7eb9\u7406\u8868\u9762\u5bf9\u9f50\u3002\u5982\u679c\u4f60\u770b\u4e86\u6cd5\u7ebf\u8d34\u56fe\u6559\u7a0b\uff0c\u4f60\u4e5f\u8bb8\u731c\u5230\u4e86\uff0c\u6211\u4eec\u5b9e\u73b0\u5b83\u7684\u65b9\u6cd5\uff0c\u662f\u7684\uff0c\u6211\u4eec\u8fd8\u662f\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\u5b9e\u73b0\u89c6\u5dee\u8d34\u56fe\u3002 \u5c06fragment\u5230\u89c2\u5bdf\u8005\u7684\u5411\u91cf \\color{orange}{\\bar{V}} \u8f6c\u6362\u5230\u5207\u7ebf\u7a7a\u95f4\u4e2d\uff0c\u7ecf\u53d8\u6362\u7684 \\color{brown}{\\bar{P}} \u5411\u91cf\u7684x\u548cy\u5143\u7d20\u5c06\u4e8e\u8868\u9762\u7684\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5411\u91cf\u5bf9\u9f50\u3002\u7531\u4e8e\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5411\u91cf\u4e0e\u8868\u9762\u7eb9\u7406\u5750\u6807\u7684\u65b9\u5411\u76f8\u540c\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 \\color{brown}{\\bar{P}} \u7684x\u548cy\u5143\u7d20\u4f5c\u4e3a\u7eb9\u7406\u5750\u6807\u7684\u504f\u79fb\u91cf\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u8003\u8651\u8868\u9762\u7684\u65b9\u5411\u4e86\u3002 \u7406\u8bba\u90fd\u6709\u4e86\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u52a8\u624b\u5b9e\u73b0\u89c6\u5dee\u8d34\u56fe\u3002 \u89c6\u5dee\u8d34\u56fe \u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u76842D\u5e73\u9762\uff0c\u5728\u628a\u5b83\u53d1\u9001\u7ed9GPU\u4e4b\u524d\u6211\u4eec\u5148\u8ba1\u7b97\u5b83\u7684\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5411\u91cf\uff1b\u548c\u6cd5\u7ebf\u8d34\u56fe\u6559\u7a0b\u505a\u7684\u5dee\u4e0d\u591a\u3002\u6211\u4eec\u5c06\u5411\u5e73\u9762\u8d34diffuse\u7eb9\u7406\u3001\u6cd5\u7ebf\u8d34\u56fe\u4ee5\u53ca\u4e00\u4e2a\u4f4d\u79fb\u8d34\u56fe\uff0c\u4f60\u53ef\u4ee5\u70b9\u51fb\u94fe\u63a5\u4e0b\u8f7d\u3002\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6211\u4eec\u5c06\u89c6\u5dee\u8d34\u56fe\u548c\u6cd5\u7ebf\u8d34\u56fe\u8fde\u7528\u3002\u56e0\u4e3a\u89c6\u5dee\u8d34\u56fe\u751f\u6210\u8868\u9762\u4f4d\u79fb\u4e86\u7684\u5e7b\u89c9\uff0c\u5f53\u5149\u7167\u4e0d\u5339\u914d\u65f6\u8fd9\u79cd\u5e7b\u89c9\u5c31\u88ab\u7834\u574f\u4e86\u3002\u6cd5\u7ebf\u8d34\u56fe\u901a\u5e38\u6839\u636e\u9ad8\u5ea6\u8d34\u56fe\u751f\u6210\uff0c\u6cd5\u7ebf\u8d34\u56fe\u548c\u9ad8\u5ea6\u8d34\u56fe\u4e00\u8d77\u7528\u80fd\u4fdd\u8bc1\u5149\u7167\u80fd\u548c\u4f4d\u79fb\u76f8\u5339\u914d\u3002 \u4f60\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\uff0c\u4e0a\u9762\u94fe\u63a5\u4e0a\u7684\u90a3\u4e2a\u4f4d\u79fb\u8d34\u56fe\u548c\u6559\u7a0b\u4e00\u5f00\u59cb\u7684\u90a3\u4e2a\u9ad8\u5ea6\u8d34\u56fe\u76f8\u6bd4\u662f\u989c\u8272\u662f\u76f8\u53cd\u7684\u3002\u8fd9\u662f\u56e0\u4e3a\u4f7f\u7528\u53cd\u8272\u9ad8\u5ea6\u8d34\u56fe\uff08\u4e5f\u53eb\u6df1\u5ea6\u8d34\u56fe\uff09\u53bb\u6a21\u62df\u6df1\u5ea6\u6bd4\u6a21\u62df\u9ad8\u5ea6\u66f4\u5bb9\u6613\u3002\u4e0b\u56fe\u53cd\u6620\u4e86\u8fd9\u4e2a\u8f7b\u5fae\u7684\u6539\u53d8\uff1a \u6211\u4eec\u518d\u6b21\u83b7\u5f97 \\color{green}A \u548c \\color{blue}B \uff0c\u4f46\u662f\u8fd9\u6b21\u6211\u4eec\u7528\u5411\u91cf \\color{orange}{\\bar{V}} \u51cf\u53bb\u70b9 \\color{green}A \u7684\u7eb9\u7406\u5750\u6807\u5f97\u5230 \\color{brown}{\\bar{P}} \u3002\u6211\u4eec\u901a\u8fc7\u5728\u7740\u8272\u5668\u4e2d\u75281.0\u51cf\u53bb\u91c7\u6837\u5f97\u5230\u7684\u9ad8\u5ea6\u8d34\u56fe\u4e2d\u7684\u503c\u6765\u53d6\u5f97\u6df1\u5ea6\u503c\uff0c\u800c\u4e0d\u518d\u662f\u9ad8\u5ea6\u503c\uff0c\u6216\u8005\u7b80\u5355\u5730\u5728\u56fe\u7247\u7f16\u8f91\u8f6f\u4ef6\u4e2d\u628a\u8fd9\u4e2a\u7eb9\u7406\u8fdb\u884c\u53cd\u8272\u64cd\u4f5c\uff0c\u5c31\u50cf\u6211\u4eec\u5bf9\u8fde\u63a5\u4e2d\u7684\u90a3\u4e2a\u6df1\u5ea6\u8d34\u56fe\u6240\u505a\u7684\u4e00\u6837\u3002 \u4f4d\u79fb\u8d34\u56fe\u662f\u5728\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u5b9e\u73b0\u7684\uff0c\u56e0\u4e3a\u4e09\u89d2\u5f62\u8868\u9762\u7684\u6240\u6709\u4f4d\u79fb\u6548\u679c\u90fd\u4e0d\u540c\u3002\u5728\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u6211\u4eec\u5c06\u9700\u8981\u8ba1\u7b97fragment\u5230\u89c2\u5bdf\u8005\u5230\u65b9\u5411\u5411\u91cf \\color{orange}{\\bar{V}} \u6240\u4ee5\u6211\u4eec\u9700\u8981\u89c2\u5bdf\u8005\u4f4d\u7f6e\u548c\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\u7684fragment\u4f4d\u7f6e\u3002\u6cd5\u7ebf\u8d34\u56fe\u6559\u7a0b\u4e2d\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u9876\u70b9\u7740\u8272\u5668\uff0c\u5b83\u628a\u8fd9\u4e9b\u5411\u91cf\u53d1\u9001\u5230\u5207\u7ebf\u7a7a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u590d\u5236\u90a3\u4e2a\u9876\u70b9\u7740\u8272\u5668\uff1a #version 330 core layout (location = 0) in vec3 position; layout (location = 1) in vec3 normal; layout (location = 2) in vec2 texCoords; layout (location = 3) in vec3 tangent; layout (location = 4) in vec3 bitangent; out VS_OUT { vec3 FragPos; vec2 TexCoords; vec3 TangentLightPos; vec3 TangentViewPos; vec3 TangentFragPos; } vs_out; uniform mat4 projection; uniform mat4 view; uniform mat4 model; uniform vec3 lightPos; uniform vec3 viewPos; void main() { gl_Position = projection * view * model * vec4(position, 1.0f); vs_out.FragPos = vec3(model * vec4(position, 1.0)); vs_out.TexCoords = texCoords; vec3 T = normalize(mat3(model) * tangent); vec3 B = normalize(mat3(model) * bitangent); vec3 N = normalize(mat3(model) * normal); mat3 TBN = transpose(mat3(T, B, N)); vs_out.TangentLightPos = TBN * lightPos; vs_out.TangentViewPos = TBN * viewPos; vs_out.TangentFragPos = TBN * vs_out.FragPos; } \u5728\u8fd9\u91cc\u6709\u4ef6\u4e8b\u5f88\u91cd\u8981\uff0c\u6211\u4eec\u9700\u8981\u628aposition\u548c\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\u7684\u89c2\u5bdf\u8005\u7684\u4f4d\u7f6eviewPos\u53d1\u9001\u7ed9\u50cf\u7d20\u7740\u8272\u5668\u3002 \u5728\u50cf\u7d20\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u5b9e\u73b0\u89c6\u5dee\u8d34\u56fe\u7684\u903b\u8f91\u3002\u50cf\u7d20\u7740\u8272\u5668\u770b\u8d77\u6765\u4f1a\u662f\u8fd9\u6837\u7684\uff1a #version 330 core out vec4 FragColor; in VS_OUT { vec3 FragPos; vec2 TexCoords; vec3 TangentLightPos; vec3 TangentViewPos; vec3 TangentFragPos; } fs_in; uniform sampler2D diffuseMap; uniform sampler2D normalMap; uniform sampler2D depthMap; uniform float height_scale; vec2 ParallaxMapping(vec2 texCoords, vec3 viewDir); void main() { // Offset texture coordinates with Parallax Mapping vec3 viewDir = normalize(fs_in.TangentViewPos - fs_in.TangentFragPos); vec2 texCoords = ParallaxMapping(fs_in.TexCoords, viewDir); // then sample textures with new texture coords vec3 diffuse = texture(diffuseMap, texCoords); vec3 normal = texture(normalMap, texCoords); normal = normalize(normal * 2.0 - 1.0); // proceed with lighting code [...] } \u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53eb\u505aParallaxMapping\u7684\u51fd\u6570\uff0c\u5b83\u628afragment\u7684\u7eb9\u7406\u5750\u6807\u548c\u5207\u7ebf\u7a7a\u95f4\u4e2d\u7684fragment\u5230\u89c2\u5bdf\u8005\u7684\u65b9\u5411\u5411\u91cf\u4e3a\u8f93\u5165\u3002\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u7ecf\u4f4d\u79fb\u7684\u7eb9\u7406\u5750\u6807\u3002\u7136\u540e\u6211\u4eec\u4f7f\u7528\u8fd9\u4e9b\u7ecf\u4f4d\u79fb\u7684\u7eb9\u7406\u5750\u6807\u8fdb\u884cdiffuse\u548c\u6cd5\u7ebf\u8d34\u56fe\u7684\u91c7\u6837\u3002\u6700\u540efragment\u7684diffuse\u989c\u8272\u548c\u6cd5\u7ebf\u5411\u91cf\u5c31\u6b63\u786e\u7684\u5bf9\u5e94\u4e8e\u8868\u9762\u7684\u7ecf\u4f4d\u79fb\u7684\u4f4d\u7f6e\u4e0a\u4e86\u3002 \u6211\u4eec\u6765\u770b\u770bParallaxMapping\u51fd\u6570\u7684\u5185\u90e8\uff1a vec2 ParallaxMapping(vec2 texCoords, vec3 viewDir) { float height = texture(depthMap, texCoords).r; vec2 p = viewDir.xy / viewDir.z * (height * height_scale); return texCoords - p; } \u8fd9\u4e2a\u76f8\u5bf9\u7b80\u5355\u7684\u51fd\u6570\u662f\u6211\u4eec\u6240\u8ba8\u8bba\u8fc7\u7684\u5185\u5bb9\u7684\u76f4\u63a5\u8868\u8ff0\u3002\u6211\u4eec\u7528\u672c\u6765\u7684\u7eb9\u7406\u5750\u6807texCoords\u4ece\u9ad8\u5ea6\u8d34\u56fe\u4e2d\u6765\u91c7\u6837\uff0c\u5f97\u5230\u5f53\u524dfragment\u7684\u9ad8\u5ea6 \\color{green}{H(A)} \u3002\u7136\u540e\u8ba1\u7b97\u51fa \\color{brown}{\\bar{P}} \uff0cx\u548cy\u5143\u7d20\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\uff0cviewDir\u5411\u91cf\u9664\u4ee5\u5b83\u7684z\u5143\u7d20\uff0c\u7528fragment\u7684\u9ad8\u5ea6\u5bf9\u5b83\u8fdb\u884c\u7f29\u653e\u3002\u6211\u4eec\u540c\u65f6\u5f15\u5165\u989d\u4e00\u4e2aheight_scale\u7684uniform\uff0c\u6765\u8fdb\u884c\u4e00\u4e9b\u989d\u5916\u7684\u63a7\u5236\uff0c\u56e0\u4e3a\u89c6\u5dee\u6548\u679c\u5982\u679c\u6ca1\u6709\u4e00\u4e2a\u7f29\u653e\u53c2\u6570\u901a\u5e38\u4f1a\u8fc7\u4e8e\u5f3a\u70c8\u3002\u7136\u540e\u6211\u4eec\u7528 \\color{brown}{\\bar{P}} \u51cf\u53bb\u7eb9\u7406\u5750\u6807\u6765\u83b7\u5f97\u6700\u7ec8\u7684\u7ecf\u8fc7\u4f4d\u79fb\u7eb9\u7406\u5750\u6807\u3002 \u6709\u4e00\u4e2a\u5730\u65b9\u9700\u8981\u6ce8\u610f\uff0c\u5c31\u662fviewDir.xy\u9664\u4ee5viewDir.z\u90a3\u91cc\u3002\u56e0\u4e3aviewDir\u5411\u91cf\u662f\u7ecf\u8fc7\u4e86\u6807\u51c6\u5316\u7684\uff0cviewDir.z\u4f1a\u57280.0\u52301.0\u4e4b\u95f4\u7684\u67d0\u5904\u3002\u5f53viewDir\u5927\u81f4\u5e73\u884c\u4e8e\u8868\u9762\u65f6\uff0c\u5b83\u7684z\u5143\u7d20\u63a5\u8fd1\u4e8e0.0\uff0c\u9664\u6cd5\u4f1a\u8fd4\u56de\u6bd4viewDir\u5782\u76f4\u4e8e\u8868\u9762\u7684\u65f6\u5019\u66f4\u5927\u7684 \\color{brown}{\\bar{P}} \u5411\u91cf\u3002\u6240\u4ee5\uff0c\u4ece\u672c\u8d28\u4e0a\uff0c\u76f8\u6bd4\u6b63\u671d\u5411\u8868\u9762\uff0c\u5f53\u5e26\u6709\u89d2\u5ea6\u5730\u770b\u5411\u5e73\u9762\u65f6\uff0c\u6211\u4eec\u4f1a\u66f4\u5927\u7a0b\u5ea6\u5730\u7f29\u653e \\color{brown}{\\bar{P}} \u7684\u5927\u5c0f\uff0c\u4ece\u800c\u589e\u52a0\u7eb9\u7406\u5750\u6807\u7684\u504f\u79fb\uff1b\u8fd9\u6837\u505a\u5728\u89c6\u89d2\u4e0a\u4f1a\u83b7\u5f97\u66f4\u5927\u7684\u771f\u5b9e\u5ea6\u3002 \u6709\u4e9b\u4eba\u66f4\u559c\u6b22\u4e0d\u5728\u7b49\u5f0f\u4e2d\u4f7f\u7528viewDir.z\uff0c\u56e0\u4e3a\u666e\u901a\u7684\u89c6\u5dee\u8d34\u56fe\u4f1a\u5728\u89d2\u5ea6\u4e0a\u4ea7\u751f\u4e0d\u5c3d\u5982\u4eba\u610f\u7684\u7ed3\u679c\uff1b\u8fd9\u4e2a\u6280\u672f\u53eb\u505a\u6709\u504f\u79fb\u91cf\u9650\u5236\u7684\u89c6\u5dee\u8d34\u56fe\uff08Parallax Mapping with Offset Limiting\uff09\u3002\u9009\u62e9\u54ea\u4e00\u4e2a\u6280\u672f\u662f\u4e2a\u4eba\u504f\u597d\u95ee\u9898\uff0c\u4f46\u6211\u503e\u5411\u4e8e\u666e\u901a\u7684\u89c6\u5dee\u8d34\u56fe\u3002 \u6700\u540e\u7684\u7eb9\u7406\u5750\u6807\u968f\u540e\u88ab\u7528\u6765\u8fdb\u884c\u91c7\u6837\uff08diffuse\u548c\u6cd5\u7ebf\uff09\u8d34\u56fe\uff0c\u4e0b\u56fe\u6240\u5c55\u793a\u7684\u4f4d\u79fb\u6548\u679c\u4e2dheight_scale\u7b49\u4e8e0.1\uff1a \u8fd9\u91cc\u4f60\u4f1a\u770b\u5230\u53ea\u7528\u6cd5\u7ebf\u8d34\u56fe\u548c\u4e0e\u89c6\u5dee\u8d34\u56fe\u76f8\u7ed3\u5408\u7684\u6cd5\u7ebf\u8d34\u56fe\u7684\u4e0d\u540c\u4e4b\u5904\u3002\u56e0\u4e3a\u89c6\u5dee\u8d34\u56fe\u5c1d\u8bd5\u6a21\u62df\u6df1\u5ea6\uff0c\u5b83\u5b9e\u9645\u4e0a\u80fd\u591f\u6839\u636e\u4f60\u89c2\u5bdf\u5b83\u4eec\u7684\u65b9\u5411\u4f7f\u7816\u5757\u53e0\u52a0\u5230\u5176\u4ed6\u7816\u5757\u4e0a\u3002 \u5728\u89c6\u5dee\u8d34\u56fe\u7684\u90a3\u4e2a\u5e73\u9762\u91cc\u4f60\u4ecd\u7136\u80fd\u770b\u5230\u5728\u8fb9\u4e0a\u6709\u53e4\u602a\u7684\u5931\u771f\u3002\u539f\u56e0\u662f\u5728\u5e73\u9762\u7684\u8fb9\u7f18\u4e0a\uff0c\u7eb9\u7406\u5750\u6807\u8d85\u51fa\u4e860\u52301\u7684\u8303\u56f4\u8fdb\u884c\u91c7\u6837\uff0c\u6839\u636e\u7eb9\u7406\u7684\u73af\u7ed5\u65b9\u5f0f\u5bfc\u81f4\u4e86\u4e0d\u771f\u5b9e\u7684\u7ed3\u679c\u3002\u89e3\u51b3\u7684\u65b9\u6cd5\u662f\u5f53\u5b83\u8d85\u51fa\u9ed8\u8ba4\u7eb9\u7406\u5750\u6807\u8303\u56f4\u8fdb\u884c\u91c7\u6837\u7684\u65f6\u5019\u5c31\u4e22\u5f03\u8fd9\u4e2afragment\uff1a texCoords = ParallaxMapping(fs_in.TexCoords, viewDir); if(texCoords.x > 1.0 || texCoords.y > 1.0 || texCoords.x < 0.0 || texCoords.y < 0.0) discard; \u4e22\u5f03\u4e86\u8d85\u51fa\u9ed8\u8ba4\u8303\u56f4\u7684\u7eb9\u7406\u5750\u6807\u7684\u6240\u6709fragment\uff0c\u89c6\u5dee\u8d34\u56fe\u7684\u8868\u9762\u8fb9\u7f18\u7ed9\u51fa\u4e86\u6b63\u786e\u7684\u7ed3\u679c\u3002\u6ce8\u610f\uff0c\u8fd9\u4e2a\u6280\u5de7\u4e0d\u80fd\u5728\u6240\u6709\u7c7b\u578b\u7684\u8868\u9762\u4e0a\u90fd\u80fd\u5de5\u4f5c\uff0c\u4f46\u662f\u5e94\u7528\u4e8e\u5e73\u9762\u4e0a\u5b83\u8fd8\u662f\u80fd\u591f\u662f\u5e73\u9762\u770b\u8d77\u6765\u771f\u7684\u8fdb\u884c\u4f4d\u79fb\u4e86\uff1a \u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230 \u6e90\u4ee3\u7801 \uff0c\u4ee5\u53ca \u9876\u70b9 \u548c \u50cf\u7d20 \u7740\u8272\u5668\u3002 \u770b\u8d77\u6765\u4e0d\u9519\uff0c\u8fd0\u884c\u8d77\u6765\u4e5f\u5f88\u5feb\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u8981\u7ed9\u89c6\u5dee\u8d34\u56fe\u63d0\u4f9b\u4e00\u4e2a\u989d\u5916\u7684\u7eb9\u7406\u6837\u672c\u5c31\u80fd\u5de5\u4f5c\u3002\u5f53\u4ece\u4e00\u4e2a\u89d2\u5ea6\u770b\u8fc7\u53bb\u7684\u65f6\u5019\uff0c\u4f1a\u6709\u4e00\u4e9b\u95ee\u9898\u4ea7\u751f\uff08\u548c\u6cd5\u7ebf\u8d34\u56fe\u76f8\u4f3c\uff09\uff0c\u9661\u5ced\u7684\u5730\u65b9\u4f1a\u4ea7\u751f\u4e0d\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u4ece\u4e0b\u56fe\u4f60\u53ef\u4ee5\u770b\u5230\uff1a \u95ee\u9898\u7684\u539f\u56e0\u662f\u8fd9\u53ea\u662f\u4e00\u4e2a\u5927\u81f4\u8fd1\u4f3c\u7684\u89c6\u5dee\u6620\u5c04\u3002\u8fd8\u6709\u4e00\u4e9b\u6280\u5de7\u8ba9\u6211\u4eec\u5728\u9661\u5ced\u7684\u9ad8\u5ea6\u4e0a\u80fd\u591f\u83b7\u5f97\u51e0\u4e4e\u5b8c\u7f8e\u7684\u7ed3\u679c\uff0c\u5373\u4f7f\u5f53\u4ee5\u4e00\u5b9a\u89d2\u5ea6\u89c2\u770b\u7684\u65f6\u5019\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u4e0d\u518d\u4f7f\u7528\u5355\u4e00\u6837\u672c\uff0c\u53d6\u800c\u4ee3\u4e4b\u4f7f\u7528\u591a\u6837\u672c\u6765\u627e\u5230\u6700\u8fd1\u70b9 \\color{blue}B \u4f1a\u5f97\u5230\u600e\u6837\u7684\u7ed3\u679c\uff1f \u9661\u5ced\u89c6\u5dee\u6620\u5c04 \u9661\u5ced\u89c6\u5dee\u6620\u5c04(Steep Parallax Mapping)\u662f\u89c6\u5dee\u6620\u5c04\u7684\u6269\u5c55\uff0c\u539f\u5219\u662f\u4e00\u6837\u7684\uff0c\u4f46\u4e0d\u662f\u4f7f\u7528\u4e00\u4e2a\u6837\u672c\u800c\u662f\u591a\u4e2a\u6837\u672c\u6765\u786e\u5b9a\u5411\u91cf \\color{brown}{\\bar{P}} \u5230 \\color{blue}B \u3002\u5373\u4f7f\u5728\u9661\u5ced\u7684\u9ad8\u5ea6\u53d8\u5316\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u4e5f\u80fd\u5f97\u5230\u66f4\u597d\u7684\u7ed3\u679c\uff0c\u539f\u56e0\u5728\u4e8e\u8be5\u6280\u672f\u901a\u8fc7\u589e\u52a0\u91c7\u6837\u7684\u6570\u91cf\u63d0\u9ad8\u4e86\u7cbe\u786e\u6027\u3002 \u9661\u5ced\u89c6\u5dee\u6620\u5c04\u7684\u57fa\u672c\u601d\u60f3\u662f\u5c06\u603b\u6df1\u5ea6\u8303\u56f4\u5212\u5206\u4e3a\u540c\u4e00\u4e2a\u6df1\u5ea6/\u9ad8\u5ea6\u7684\u591a\u4e2a\u5c42\u3002\u4ece\u6bcf\u4e2a\u5c42\u4e2d\u6211\u4eec\u6cbf\u7740 \\color{brown}{\\bar{P}} \u65b9\u5411\u79fb\u52a8\u91c7\u6837\u7eb9\u7406\u5750\u6807\uff0c\u76f4\u5230\u6211\u4eec\u627e\u5230\u4e00\u4e2a\u91c7\u6837\u4f4e\u4e8e\u5f53\u524d\u5c42\u7684\u6df1\u5ea6\u503c\u3002\u770b\u770b\u4e0b\u9762\u7684\u56fe\u7247\uff1a \u6211\u4eec\u4ece\u4e0a\u5230\u4e0b\u904d\u5386\u6df1\u5ea6\u5c42\uff0c\u6211\u4eec\u628a\u6bcf\u4e2a\u6df1\u5ea6\u5c42\u548c\u50a8\u5b58\u5728\u6df1\u5ea6\u8d34\u56fe\u4e2d\u7684\u5b83\u7684\u6df1\u5ea6\u503c\u8fdb\u884c\u5bf9\u6bd4\u3002\u5982\u679c\u8fd9\u4e2a\u5c42\u7684\u6df1\u5ea6\u503c\u5c0f\u4e8e\u6df1\u5ea6\u8d34\u56fe\u7684\u503c\uff0c\u5c31\u610f\u5473\u7740\u8fd9\u4e00\u5c42\u7684 \\color{brown}{\\bar{P}} \u5411\u91cf\u90e8\u5206\u5728\u8868\u9762\u4e4b\u4e0b\u3002\u6211\u4eec\u7ee7\u7eed\u8fd9\u4e2a\u5904\u7406\u8fc7\u7a0b\u76f4\u5230\u6709\u4e00\u5c42\u7684\u6df1\u5ea6\u9ad8\u4e8e\u50a8\u5b58\u5728\u6df1\u5ea6\u8d34\u56fe\u4e2d\u7684\u503c\uff1a\u8fd9\u4e2a\u70b9\u5c31\u5728\uff08\u7ecf\u8fc7\u4f4d\u79fb\u7684\uff09\u8868\u9762\u4e0b\u65b9\u3002 \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7b2c\u4e8c\u5c42(D(2) = 0.73)\u7684\u6df1\u5ea6\u8d34\u56fe\u7684\u503c\u4ecd\u4f4e\u4e8e\u7b2c\u4e8c\u5c42\u7684\u6df1\u5ea6\u503c0.4\uff0c\u6240\u4ee5\u6211\u4eec\u7ee7\u7eed\u3002\u4e0b\u4e00\u6b21\u8fed\u4ee3\uff0c\u8fd9\u4e00\u5c42\u7684\u6df1\u5ea6\u503c0.6\u5927\u4e8e\u6df1\u5ea6\u8d34\u56fe\u4e2d\u91c7\u6837\u7684\u6df1\u5ea6\u503c(D(3) = 0.37)\u3002\u6211\u4eec\u4fbf\u53ef\u4ee5\u5047\u8bbe\u7b2c\u4e09\u5c42\u5411\u91cf \\color{brown}{\\bar{P}} \u662f\u53ef\u7528\u7684\u4f4d\u79fb\u51e0\u4f55\u4f4d\u7f6e\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4ece\u5411\u91cf \\color{brown}{\\bar{P_3}} \u7684\u7eb9\u7406\u5750\u6807\u504f\u79fb T_3 \u6765\u5bf9fragment\u7684\u7eb9\u7406\u5750\u6807\u8fdb\u884c\u4f4d\u79fb\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u968f\u7740\u6df1\u5ea6\u66fe\u7684\u589e\u52a0\u7cbe\u786e\u5ea6\u4e5f\u5728\u63d0\u9ad8\u3002 \u4e3a\u5b9e\u73b0\u8fd9\u4e2a\u6280\u672f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6539\u53d8ParallaxMapping\u51fd\u6570\uff0c\u56e0\u4e3a\u6240\u6709\u9700\u8981\u7684\u53d8\u91cf\u90fd\u6709\u4e86\uff1a vec2 ParallaxMapping(vec2 texCoords, vec3 viewDir) { // number of depth layers const float numLayers = 10; // calculate the size of each layer float layerDepth = 1.0 / numLayers; // depth of current layer float currentLayerDepth = 0.0; // the amount to shift the texture coordinates per layer (from vector P) vec2 P = viewDir.xy * height_scale; vec2 deltaTexCoords = P / numLayers; [...] } \u6211\u4eec\u5148\u5b9a\u4e49\u5c42\u7684\u6570\u91cf\uff0c\u8ba1\u7b97\u6bcf\u4e00\u5c42\u7684\u6df1\u5ea6\uff0c\u6700\u540e\u8ba1\u7b97\u7eb9\u7406\u5750\u6807\u504f\u79fb\uff0c\u6bcf\u4e00\u5c42\u6211\u4eec\u5fc5\u987b\u6cbf\u7740 \\color{brown}{\\bar{P}} \u7684\u65b9\u5411\u8fdb\u884c\u79fb\u52a8\u3002 \u7136\u540e\u6211\u4eec\u904d\u5386\u6240\u6709\u5c42\uff0c\u4ece\u4e0a\u5f00\u59cb\uff0c\u77e5\u9053\u627e\u5230\u5c0f\u4e8e\u8fd9\u4e00\u5c42\u7684\u6df1\u5ea6\u503c\u7684\u6df1\u5ea6\u8d34\u56fe\u503c\uff1a // get initial values vec2 currentTexCoords = texCoords; float currentDepthMapValue = texture(depthMap, currentTexCoords).r; while(currentLayerDepth < currentDepthMapValue) { // shift texture coordinates along direction of P currentTexCoords -= deltaTexCoords; // get depthmap value at current texture coordinates currentDepthMapValue = texture(depthMap, currentTexCoords).r; // get depth of next layer currentLayerDepth += layerDepth; } return currentTexCoords; \u8fd9\u91cc\u6211\u4eec\u5faa\u73af\u6bcf\u4e00\u5c42\u6df1\u5ea6\uff0c\u76f4\u5230\u6cbf\u7740 \\color{brown}{\\bar{P}} \u5411\u91cf\u627e\u5230\u7b2c\u4e00\u4e2a\u8fd4\u56de\u4f4e\u4e8e\uff08\u4f4d\u79fb\uff09\u8868\u9762\u7684\u6df1\u5ea6\u7684\u7eb9\u7406\u5750\u6807\u504f\u79fb\u91cf\u3002\u4ecefragment\u7684\u7eb9\u7406\u5750\u6807\u51cf\u53bb\u6700\u540e\u7684\u504f\u79fb\u91cf\uff0c\u6765\u5f97\u5230\u6700\u7ec8\u7684\u7ecf\u8fc7\u4f4d\u79fb\u7684\u7eb9\u7406\u5750\u6807\u5411\u91cf\uff0c\u8fd9\u6b21\u5c31\u6bd4\u4f20\u7edf\u7684\u89c6\u5dee\u6620\u5c04\u66f4\u7cbe\u786e\u4e86\u3002 \u670910\u4e2a\u6837\u672c\u7816\u5899\u4ece\u4e00\u4e2a\u89d2\u5ea6\u770b\u4e0a\u53bb\u5c31\u5df2\u7ecf\u5f88\u597d\u4e86\uff0c\u4f46\u662f\u5f53\u6709\u4e00\u4e2a\u5f3a\u524d\u9762\u5c55\u793a\u7684\u6728\u5236\u8868\u9762\u4e00\u6837\u9661\u5ced\u7684\u8868\u9762\u65f6\uff0c\u9661\u5ced\u7684\u89c6\u5dee\u6620\u5c04\u7684\u5a01\u529b\u5c31\u663e\u793a\u51fa\u6765\u4e86\uff1a \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bf9\u89c6\u5dee\u8d34\u56fe\u7684\u4e00\u4e2a\u5c5e\u6027\u7684\u5229\u7528\uff0c\u5bf9\u7b97\u6cd5\u8fdb\u884c\u4e00\u70b9\u63d0\u5347\u3002\u5f53\u5782\u76f4\u770b\u4e00\u4e2a\u8868\u9762\u7684\u65f6\u5019\u7eb9\u7406\u65f6\u4f4d\u79fb\u6bd4\u4ee5\u4e00\u5b9a\u89d2\u5ea6\u770b\u65f6\u7684\u5c0f\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u5782\u76f4\u770b\u65f6\u4f7f\u7528\u66f4\u5c11\u7684\u6837\u672c\uff0c\u4ee5\u4e00\u5b9a\u89d2\u5ea6\u770b\u65f6\u589e\u52a0\u6837\u672c\u6570\u91cf\uff1a const float minLayers = 8; const float maxLayers = 32; float numLayers = mix(maxLayers, minLayers, abs(dot(vec3(0.0, 0.0, 1.0), viewDir))); \u8fd9\u91cc\u6211\u4eec\u5f97\u5230viewDir\u548c\u6b63z\u65b9\u5411\u7684\u70b9\u4e58\uff0c\u4f7f\u7528\u5b83\u7684\u7ed3\u679c\u6839\u636e\u6211\u4eec\u770b\u5411\u8868\u9762\u7684\u89d2\u5ea6\u8c03\u6574\u6837\u672c\u6570\u91cf\uff08\u6ce8\u610f\u6b63z\u65b9\u5411\u7b49\u4e8e\u5207\u7ebf\u7a7a\u95f4\u4e2d\u7684\u8868\u9762\u7684\u6cd5\u7ebf\uff09\u3002\u5982\u679c\u6211\u4eec\u6240\u770b\u7684\u65b9\u5411\u5e73\u884c\u4e8e\u8868\u9762\uff0c\u6211\u4eec\u5c31\u662f\u752832\u5c42\u3002 \u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u6700\u65b0\u7684\u50cf\u7d20\u7740\u8272\u5668\u4ee3\u7801\u3002\u8fd9\u91cc\u4e5f\u63d0\u4f9b\u6728\u5236\u73a9\u5177\u7bb1\u7684\u8868\u9762\u8d34\u56fe\uff1adiffuse\u3001\u6cd5\u7ebf\u3001\u6df1\u5ea6\u3002 \u9661\u5ced\u89c6\u5dee\u8d34\u56fe\u540c\u6837\u6709\u81ea\u5df1\u7684\u95ee\u9898\u3002\u56e0\u4e3a\u8fd9\u4e2a\u6280\u672f\u662f\u57fa\u4e8e\u6709\u9650\u7684\u6837\u672c\u6570\u91cf\u7684\uff0c\u6211\u4eec\u4f1a\u9047\u5230\u952f\u9f7f\u6548\u679c\u4ee5\u53ca\u56fe\u5c42\u4e4b\u95f4\u6709\u660e\u663e\u7684\u65ad\u5c42\uff1a \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u6837\u672c\u7684\u65b9\u5f0f\u51cf\u5c11\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u662f\u5f88\u5feb\u5c31\u4f1a\u82b1\u8d39\u5f88\u591a\u6027\u80fd\u3002\u6709\u4e9b\u65e8\u5728\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\u7684\u65b9\u6cd5\uff1a\u4e0d\u9002\u7528\u4f4e\u4e8e\u8868\u9762\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u800c\u662f\u5728\u4e24\u4e2a\u63a5\u8fd1\u7684\u6df1\u5ea6\u5c42\u8fdb\u884c\u63d2\u503c\u627e\u51fa\u66f4\u5339\u914d \\color{blue}B \u7684\u3002 \u4e24\u79cd\u6700\u6d41\u884c\u7684\u89e3\u51b3\u65b9\u6cd5\u53eb\u505aRelief Parallax Mapping\u548cParallax Occlusion Mapping\uff0cRelief Parallax Mapping\u66f4\u7cbe\u786e\u4e00\u4e9b\uff0c\u4f46\u662f\u6bd4Parallax Occlusion Mapping\u6027\u80fd\u5f00\u9500\u66f4\u591a\u3002\u56e0\u4e3aParallax Occlusion Mapping\u7684\u6548\u679c\u548c\u524d\u8005\u5dee\u4e0d\u591a\u4f46\u662f\u6548\u7387\u66f4\u9ad8\uff0c\u56e0\u6b64\u8fd9\u79cd\u65b9\u5f0f\u66f4\u7ecf\u5e38\u4f7f\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5728\u4e0b\u9762\u8ba8\u8bba\u4e00\u4e0b\u3002 \u89c6\u5dee\u906e\u853d\u6620\u5c04 \u89c6\u5dee\u906e\u853d\u6620\u5c04(Parallax Occlusion Mapping)\u548c\u9661\u5ced\u89c6\u5dee\u6620\u5c04\u7684\u539f\u5219\u76f8\u540c\uff0c\u4f46\u4e0d\u662f\u7528\u89e6\u78b0\u7684\u7b2c\u4e00\u4e2a\u6df1\u5ea6\u5c42\u7684\u7eb9\u7406\u5750\u6807\uff0c\u800c\u662f\u5728\u89e6\u78b0\u4e4b\u524d\u548c\u4e4b\u540e\uff0c\u5728\u6df1\u5ea6\u5c42\u4e4b\u95f4\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\u3002\u6211\u4eec\u6839\u636e\u8868\u9762\u7684\u9ad8\u5ea6\u8ddd\u79bb\u5577\u4e2a\u6df1\u5ea6\u5c42\u7684\u6df1\u5ea6\u5c42\u503c\u7684\u8ddd\u79bb\u6765\u786e\u5b9a\u7ebf\u6027\u63d2\u503c\u7684\u5927\u5c0f\u3002\u770b\u770b\u4e0b\u9762\u7684\u56fe\u7247\u5c31\u80fd\u4e86\u89e3\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\u5927\u90e8\u5206\u548c\u9661\u5ced\u89c6\u5dee\u6620\u5c04\u4e00\u6837\uff0c\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u662f\u6709\u4e2a\u989d\u5916\u7684\u6b65\u9aa4\uff0c\u4e24\u4e2a\u6df1\u5ea6\u5c42\u7684\u7eb9\u7406\u5750\u6807\u56f4\u7ed5\u7740\u4ea4\u53c9\u70b9\u7684\u7ebf\u6027\u63d2\u503c\u3002\u8fd9\u4e5f\u662f\u8fd1\u4f3c\u7684\uff0c\u4f46\u662f\u6bd4\u9661\u5ced\u89c6\u5dee\u6620\u5c04\u66f4\u7cbe\u786e\u3002 \u89c6\u5dee\u906e\u853d\u6620\u5c04\u7684\u4ee3\u7801\u57fa\u4e8e\u9661\u5ced\u89c6\u5dee\u6620\u5c04\uff0c\u6240\u4ee5\u5e76\u4e0d\u96be\uff1a [...] // steep parallax mapping code here // get texture coordinates before collision (reverse operations) vec2 prevTexCoords = currentTexCoords + deltaTexCoords; // get depth after and before collision for linear interpolation float afterDepth = currentDepthMapValue - currentLayerDepth; float beforeDepth = texture(depthMap, prevTexCoords).r - currentLayerDepth + layerDepth; // interpolation of texture coordinates float weight = afterDepth / (afterDepth - beforeDepth); vec2 finalTexCoords = prevTexCoords * weight + currentTexCoords * (1.0 - weight); return finalTexCoords; \u5728\u5bf9\uff08\u4f4d\u79fb\u7684\uff09\u8868\u9762\u51e0\u4f55\u8fdb\u884c\u4ea4\u53c9\uff0c\u627e\u5230\u6df1\u5ea6\u5c42\u4e4b\u540e\uff0c\u6211\u4eec\u83b7\u53d6\u4ea4\u53c9\u524d\u7684\u7eb9\u7406\u5750\u6807\u3002\u7136\u540e\u6211\u4eec\u8ba1\u7b97\u6765\u81ea\u76f8\u5e94\u6df1\u5ea6\u5c42\u7684\u51e0\u4f55\u4e4b\u95f4\u7684\u6df1\u5ea6\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u5e76\u5728\u4e24\u4e2a\u503c\u4e4b\u95f4\u8fdb\u884c\u63d2\u503c\u3002\u7ebf\u6027\u63d2\u503c\u7684\u65b9\u5f0f\u662f\u5728\u4e24\u4e2a\u5c42\u7684\u7eb9\u7406\u5750\u6807\u4e4b\u95f4\u8fdb\u884c\u7684\u57fa\u7840\u63d2\u503c\u3002\u51fd\u6570\u6700\u540e\u8fd4\u56de\u6700\u7ec8\u7684\u7ecf\u8fc7\u63d2\u503c\u7684\u7eb9\u7406\u5750\u6807\u3002 \u89c6\u5dee\u906e\u853d\u6620\u5c04\u7684\u6548\u679c\u975e\u5e38\u597d\uff0c\u5c3d\u7ba1\u6709\u4e00\u4e9b\u53ef\u4ee5\u770b\u5230\u7684\u8f7b\u5fae\u7684\u4e0d\u771f\u5b9e\u548c\u952f\u9f7f\u7684\u95ee\u9898\uff0c\u8fd9\u4ecd\u662f\u4e00\u4e2a\u597d\u4ea4\u6613\uff0c\u56e0\u4e3a\u9664\u975e\u662f\u653e\u5f97\u975e\u5e38\u5927\u6216\u8005\u89c2\u5bdf\u89d2\u5ea6\u7279\u522b\u9661\uff0c\u5426\u5219\u4e5f\u770b\u4e0d\u5230\u3002 \u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230 \u6e90\u4ee3\u7801 \uff0c\u53ca\u5176 \u9876\u70b9 \u548c \u50cf\u7d20 \u7740\u8272\u5668\u3002 \u89c6\u5dee\u8d34\u56fe\u662f\u63d0\u5347\u573a\u666f\u7ec6\u8282\u975e\u5e38\u597d\u7684\u6280\u672f\uff0c\u4f46\u662f\u4f7f\u7528\u7684\u65f6\u5019\u8fd8\u662f\u8981\u8003\u8651\u5230\u5b83\u4f1a\u5e26\u6765\u4e00\u70b9\u4e0d\u81ea\u7136\u3002\u5927\u591a\u6570\u65f6\u5019\u89c6\u5dee\u8d34\u56fe\u7528\u5728\u5730\u9762\u548c\u5899\u58c1\u8868\u9762\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u67e5\u660e\u8868\u9762\u7684\u8f6e\u5ed3\u5e76\u4e0d\u5bb9\u6613\uff0c\u540c\u65f6\u89c2\u5bdf\u89d2\u5ea6\u5f80\u5f80\u8d8b\u5411\u4e8e\u5782\u76f4\u4e8e\u8868\u9762\u3002\u8fd9\u6837\u89c6\u5dee\u8d34\u56fe\u7684\u4e0d\u81ea\u7136\u4e5f\u5c31\u5f88\u96be\u80fd\u88ab\u6ce8\u610f\u5230\u4e86\uff0c\u5bf9\u4e8e\u63d0\u5347\u7269\u4f53\u7684\u7ec6\u8282\u53ef\u4ee5\u8d77\u5230\u96be\u4ee5\u7f6e\u4fe1\u7684\u6548\u679c\u3002 \u9644\u52a0\u8d44\u6e90 Parallax Occlusion Mapping in GLSL \uff1asunandblackcat.com\u4e0a\u7684\u89c6\u5dee\u8d34\u56fe\u6559\u7a0b\u3002 How Parallax Displacement Mapping Works \uff1aTheBennyBox\u7684\u5173\u4e8e\u89c6\u5dee\u8d34\u56fe\u539f\u7406\u7684\u89c6\u9891\u6559\u7a0b\u3002","title":"\u89c6\u5dee\u8d34\u56fe"},{"location":"05%20Advanced%20Lighting/05%20Parallax%20Mapping/#_1","text":"\u539f\u6587 Parallax Mapping \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django \u6821\u5bf9 \u6682\u65e0 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u89c6\u5dee\u8d34\u56fe(Parallax Mapping)\u6280\u672f\u548c\u6cd5\u7ebf\u8d34\u56fe\u5dee\u4e0d\u591a\uff0c\u4f46\u5b83\u6709\u7740\u4e0d\u540c\u7684\u539f\u5219\u3002\u548c\u6cd5\u7ebf\u8d34\u56fe\u4e00\u6837\u89c6\u5dee\u8d34\u56fe\u80fd\u591f\u6781\u5927\u63d0\u5347\u8868\u9762\u7ec6\u8282\uff0c\u4f7f\u4e4b\u5177\u6709\u6df1\u5ea6\u611f\u3002\u5b83\u4e5f\u662f\u5229\u7528\u4e86\u89c6\u9519\u89c9\uff0c\u7136\u800c\u5bf9\u6df1\u5ea6\u6709\u7740\u66f4\u597d\u7684\u8868\u8fbe\uff0c\u4e0e\u6cd5\u7ebf\u8d34\u56fe\u4e00\u8d77\u7528\u80fd\u591f\u4ea7\u751f\u96be\u4ee5\u7f6e\u4fe1\u7684\u6548\u679c\u3002\u89c6\u5dee\u8d34\u56fe\u548c\u5149\u7167\u65e0\u5173\uff0c\u6211\u5728\u8fd9\u91cc\u662f\u4f5c\u4e3a\u6cd5\u7ebf\u8d34\u56fe\u7684\u6280\u672f\u5ef6\u7eed\u6765\u8ba8\u8bba\u5b83\u7684\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u5728\u5f00\u59cb\u5b66\u4e60\u89c6\u5dee\u8d34\u56fe\u4e4b\u524d\u5f3a\u70c8\u5efa\u8bae\u5148\u5bf9\u6cd5\u7ebf\u8d34\u56fe\uff0c\u7279\u522b\u662f\u5207\u7ebf\u7a7a\u95f4\u6709\u8f83\u597d\u7684\u7406\u89e3\u3002 \u89c6\u5dee\u8d34\u56fe\u5c5e\u4e8e\u4f4d\u79fb\u8d34\u56fe(Displacement Mapping)\u6280\u672f\u7684\u4e00\u79cd\uff0c\u5b83\u5bf9\u6839\u636e\u50a8\u5b58\u5728\u7eb9\u7406\u4e2d\u7684\u51e0\u4f55\u4fe1\u606f\u5bf9\u9876\u70b9\u8fdb\u884c\u4f4d\u79fb\u6216\u504f\u79fb\u3002\u4e00\u79cd\u5b9e\u73b0\u7684\u65b9\u5f0f\u662f\u6bd4\u5982\u67091000\u4e2a\u9876\u70b9\uff0c\u6839\u636e\u7eb9\u7406\u4e2d\u7684\u6570\u636e\u5bf9\u5e73\u9762\u7279\u5b9a\u533a\u57df\u7684\u9876\u70b9\u7684\u9ad8\u5ea6\u8fdb\u884c\u4f4d\u79fb\u3002\u8fd9\u6837\u7684\u6bcf\u4e2a\u7eb9\u7406\u50cf\u7d20\u5305\u542b\u4e86\u9ad8\u5ea6\u503c\u7eb9\u7406\u53eb\u505a\u9ad8\u5ea6\u8d34\u56fe\u3002\u4e00\u5f20\u7b80\u5355\u7684\u7816\u5757\u8868\u9762\u7684\u9ad8\u5ea6\u8d34\u56fe\u5982\u4e0b\u6240\u793a\uff1a \u6574\u4e2a\u5e73\u9762\u4e0a\u7684\u6bcf\u4e2a\u9876\u70b9\u90fd\u6839\u636e\u4ece\u9ad8\u5ea6\u8d34\u56fe\u91c7\u6837\u51fa\u6765\u7684\u9ad8\u5ea6\u503c\u8fdb\u884c\u4f4d\u79fb\uff0c\u6839\u636e\u6750\u8d28\u7684\u51e0\u4f55\u5c5e\u6027\u5e73\u5766\u7684\u5e73\u9762\u53d8\u6362\u6210\u51f9\u51f8\u4e0d\u5e73\u7684\u8868\u9762\u3002\u4f8b\u5982\u4e00\u4e2a\u5e73\u5766\u7684\u5e73\u9762\u5229\u7528\u4e0a\u9762\u7684\u9ad8\u5ea6\u8d34\u56fe\u8fdb\u884c\u7f6e\u6362\u80fd\u5f97\u5230\u4ee5\u4e0b\u7ed3\u679c\uff1a \u7f6e\u6362\u9876\u70b9\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u5e73\u9762\u5fc5\u987b\u7531\u5f88\u591a\u9876\u70b9\u7ec4\u6210\u624d\u80fd\u83b7\u5f97\u5177\u6709\u771f\u5b9e\u611f\u7684\u6548\u679c\uff0c\u5426\u5219\u770b\u8d77\u6765\u6548\u679c\u5e76\u4e0d\u4f1a\u5f88\u597d\u3002\u4e00\u4e2a\u5e73\u5766\u7684\u8868\u9762\u4e0a\u67091000\u4e2a\u9876\u70b9\u8ba1\u7b97\u91cf\u592a\u5927\u4e86\u3002\u6211\u4eec\u80fd\u5426\u4e0d\u7528\u8fd9\u4e48\u591a\u7684\u9876\u70b9\u5c31\u80fd\u53d6\u5f97\u76f8\u4f3c\u7684\u6548\u679c\u5462\uff1f\u4e8b\u5b9e\u4e0a\uff0c\u4e0a\u9762\u7684\u8868\u9762\u5c31\u662f\u75286\u4e2a\u9876\u70b9\u6e32\u67d3\u51fa\u6765\u7684\uff08\u4e24\u4e2a\u4e09\u89d2\u5f62\uff09\u3002\u4e0a\u9762\u7684\u90a3\u4e2a\u8868\u9762\u4f7f\u7528\u89c6\u5dee\u8d34\u56fe\u6280\u672f\u6e32\u67d3\uff0c\u4f4d\u79fb\u8d34\u56fe\u6280\u672f\u4e0d\u9700\u8981\u989d\u5916\u7684\u9876\u70b9\u6570\u636e\u6765\u8868\u8fbe\u6df1\u5ea6\uff0c\u5b83\u50cf\u6cd5\u7ebf\u8d34\u56fe\u4e00\u6837\u91c7\u7528\u4e00\u79cd\u806a\u660e\u7684\u624b\u6bb5\u6b3a\u9a97\u7528\u6237\u7684\u773c\u775b\u3002 \u89c6\u5dee\u8d34\u56fe\u80cc\u540e\u7684\u601d\u60f3\u662f\u4fee\u6539\u7eb9\u7406\u5750\u6807\u4f7f\u4e00\u4e2afragment\u7684\u8868\u9762\u770b\u8d77\u6765\u6bd4\u5b9e\u9645\u7684\u66f4\u9ad8\u6216\u8005\u66f4\u4f4e\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u6839\u636e\u89c2\u5bdf\u65b9\u5411\u548c\u9ad8\u5ea6\u8d34\u56fe\u3002\u4e3a\u4e86\u7406\u89e3\u5b83\u5982\u4f55\u5de5\u4f5c\uff0c\u770b\u770b\u4e0b\u9762\u7816\u5757\u8868\u9762\u7684\u56fe\u7247\uff1a \u8fd9\u91cc\u7c97\u7cd9\u7684\u7ea2\u7ebf\u4ee3\u8868\u9ad8\u5ea6\u8d34\u56fe\u4e2d\u7684\u6570\u503c\u7684\u7acb\u4f53\u8868\u8fbe\uff0c\u5411\u91cf \\color{orange}{\\bar{V}} \u4ee3\u8868\u89c2\u5bdf\u65b9\u5411\u3002\u5982\u679c\u5e73\u9762\u8fdb\u884c\u5b9e\u9645\u4f4d\u79fb\uff0c\u89c2\u5bdf\u8005\u4f1a\u5728\u70b9 \\color{blue}B \u770b\u5230\u8868\u9762\u3002\u7136\u800c\u6211\u4eec\u7684\u5e73\u9762\u6ca1\u6709\u5b9e\u9645\u4e0a\u8fdb\u884c\u4f4d\u79fb\uff0c\u89c2\u5bdf\u65b9\u5411\u5c06\u5728\u70b9 \\color{green}A \u4e0e\u5e73\u9762\u63a5\u89e6\u3002\u89c6\u5dee\u8d34\u56fe\u7684\u76ee\u7684\u662f\uff0c\u5728 \\color{green}A \u4f4d\u7f6e\u4e0a\u7684fragment\u4e0d\u518d\u4f7f\u7528\u70b9 \\color{green}A \u7684\u7eb9\u7406\u5750\u6807\u800c\u662f\u4f7f\u7528\u70b9 \\color{blue}B \u7684\u3002\u968f\u540e\u6211\u4eec\u7528\u70b9 \\color{blue}B \u7684\u7eb9\u7406\u5750\u6807\u91c7\u6837\uff0c\u89c2\u5bdf\u8005\u5c31\u50cf\u770b\u5230\u4e86\u70b9 \\color{blue}B \u4e00\u6837\u3002 \u8fd9\u4e2a\u6280\u5de7\u5c31\u662f\u63cf\u8ff0\u5982\u4f55\u4ece\u70b9 \\color{green}A \u5f97\u5230\u70b9 \\color{blue}B \u7684\u7eb9\u7406\u5750\u6807\u3002\u89c6\u5dee\u8d34\u56fe\u5c1d\u8bd5\u901a\u8fc7\u5bf9\u4ecefragment\u5230\u89c2\u5bdf\u8005\u7684\u65b9\u5411\u5411\u91cf \\color{orange}{\\bar{V}} \u8fdb\u884c\u7f29\u653e\u7684\u65b9\u5f0f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u7f29\u653e\u7684\u5927\u5c0f\u662f \\color{green}A \u5904fragment\u7684\u9ad8\u5ea6\u3002\u6240\u4ee5\u6211\u4eec\u5c06 \\color{orange}{\\bar{V}} \u7684\u957f\u5ea6\u7f29\u653e\u4e3a\u9ad8\u5ea6\u8d34\u56fe\u5728\u70b9 \\color{green}A \u5904 \\color{green}{H(A)} \u91c7\u6837\u5f97\u6765\u7684\u503c\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u7ecf\u7f29\u653e\u5f97\u5230\u7684\u5411\u91cf \\color{brown}{\\bar{P}} \uff1a \u6211\u4eec\u968f\u540e\u9009\u51fa \\color{brown}{\\bar{P}} \u4ee5\u53ca\u8fd9\u4e2a\u5411\u91cf\u4e0e\u5e73\u9762\u5bf9\u9f50\u7684\u5750\u6807\u4f5c\u4e3a\u7eb9\u7406\u5750\u6807\u7684\u504f\u79fb\u91cf\u3002\u8fd9\u80fd\u5de5\u4f5c\u662f\u56e0\u4e3a\u5411\u91cf \\color{brown}{\\bar{P}} \u662f\u4f7f\u7528\u4ece\u9ad8\u5ea6\u8d34\u56fe\u5f97\u5230\u7684\u9ad8\u5ea6\u503c\u8ba1\u7b97\u51fa\u6765\u7684\uff0c\u6240\u4ee5\u4e00\u4e2afragment\u7684\u9ad8\u5ea6\u8d8a\u9ad8\u4f4d\u79fb\u7684\u91cf\u8d8a\u5927\u3002 \u8fd9\u4e2a\u6280\u5de7\u5728\u5927\u591a\u6570\u65f6\u5019\u90fd\u6ca1\u95ee\u9898\uff0c\u4f46\u70b9 \\color{blue}B \u662f\u7c97\u7565\u4f30\u7b97\u5f97\u5230\u7684\u3002\u5f53\u8868\u9762\u7684\u9ad8\u5ea6\u53d8\u5316\u5f88\u5feb\u7684\u65f6\u5019\uff0c\u770b\u8d77\u6765\u5c31\u4e0d\u4f1a\u771f\u5b9e\uff0c\u56e0\u4e3a\u5411\u91cf \\color{brown}{\\bar{P}} \u6700\u7ec8\u4e0d\u4f1a\u548c \\color{blue}B \u63a5\u8fd1\uff0c\u5c31\u50cf\u4e0b\u56fe\u8fd9\u6837\uff1a \u89c6\u5dee\u8d34\u56fe\u7684\u53e6\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u5f53\u8868\u9762\u88ab\u4efb\u610f\u65cb\u8f6c\u4ee5\u540e\u5f88\u96be\u6307\u51fa\u4ece \\color{brown}{\\bar{P}} \u83b7\u53d6\u54ea\u4e00\u4e2a\u5750\u6807\u3002\u6211\u4eec\u5728\u89c6\u5dee\u8d34\u56fe\u4e2d\u4f7f\u7528\u4e86\u53e6\u4e00\u4e2a\u5750\u6807\u7a7a\u95f4\uff0c\u8fd9\u4e2a\u7a7a\u95f4 \\color{brown}{\\bar{P}} \u5411\u91cf\u7684x\u548cy\u5143\u7d20\u603b\u662f\u4e0e\u7eb9\u7406\u8868\u9762\u5bf9\u9f50\u3002\u5982\u679c\u4f60\u770b\u4e86\u6cd5\u7ebf\u8d34\u56fe\u6559\u7a0b\uff0c\u4f60\u4e5f\u8bb8\u731c\u5230\u4e86\uff0c\u6211\u4eec\u5b9e\u73b0\u5b83\u7684\u65b9\u6cd5\uff0c\u662f\u7684\uff0c\u6211\u4eec\u8fd8\u662f\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\u5b9e\u73b0\u89c6\u5dee\u8d34\u56fe\u3002 \u5c06fragment\u5230\u89c2\u5bdf\u8005\u7684\u5411\u91cf \\color{orange}{\\bar{V}} \u8f6c\u6362\u5230\u5207\u7ebf\u7a7a\u95f4\u4e2d\uff0c\u7ecf\u53d8\u6362\u7684 \\color{brown}{\\bar{P}} \u5411\u91cf\u7684x\u548cy\u5143\u7d20\u5c06\u4e8e\u8868\u9762\u7684\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5411\u91cf\u5bf9\u9f50\u3002\u7531\u4e8e\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5411\u91cf\u4e0e\u8868\u9762\u7eb9\u7406\u5750\u6807\u7684\u65b9\u5411\u76f8\u540c\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 \\color{brown}{\\bar{P}} \u7684x\u548cy\u5143\u7d20\u4f5c\u4e3a\u7eb9\u7406\u5750\u6807\u7684\u504f\u79fb\u91cf\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u8003\u8651\u8868\u9762\u7684\u65b9\u5411\u4e86\u3002 \u7406\u8bba\u90fd\u6709\u4e86\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u52a8\u624b\u5b9e\u73b0\u89c6\u5dee\u8d34\u56fe\u3002","title":"\u89c6\u5dee\u8d34\u56fe"},{"location":"05%20Advanced%20Lighting/05%20Parallax%20Mapping/#_2","text":"\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u76842D\u5e73\u9762\uff0c\u5728\u628a\u5b83\u53d1\u9001\u7ed9GPU\u4e4b\u524d\u6211\u4eec\u5148\u8ba1\u7b97\u5b83\u7684\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5411\u91cf\uff1b\u548c\u6cd5\u7ebf\u8d34\u56fe\u6559\u7a0b\u505a\u7684\u5dee\u4e0d\u591a\u3002\u6211\u4eec\u5c06\u5411\u5e73\u9762\u8d34diffuse\u7eb9\u7406\u3001\u6cd5\u7ebf\u8d34\u56fe\u4ee5\u53ca\u4e00\u4e2a\u4f4d\u79fb\u8d34\u56fe\uff0c\u4f60\u53ef\u4ee5\u70b9\u51fb\u94fe\u63a5\u4e0b\u8f7d\u3002\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6211\u4eec\u5c06\u89c6\u5dee\u8d34\u56fe\u548c\u6cd5\u7ebf\u8d34\u56fe\u8fde\u7528\u3002\u56e0\u4e3a\u89c6\u5dee\u8d34\u56fe\u751f\u6210\u8868\u9762\u4f4d\u79fb\u4e86\u7684\u5e7b\u89c9\uff0c\u5f53\u5149\u7167\u4e0d\u5339\u914d\u65f6\u8fd9\u79cd\u5e7b\u89c9\u5c31\u88ab\u7834\u574f\u4e86\u3002\u6cd5\u7ebf\u8d34\u56fe\u901a\u5e38\u6839\u636e\u9ad8\u5ea6\u8d34\u56fe\u751f\u6210\uff0c\u6cd5\u7ebf\u8d34\u56fe\u548c\u9ad8\u5ea6\u8d34\u56fe\u4e00\u8d77\u7528\u80fd\u4fdd\u8bc1\u5149\u7167\u80fd\u548c\u4f4d\u79fb\u76f8\u5339\u914d\u3002 \u4f60\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\uff0c\u4e0a\u9762\u94fe\u63a5\u4e0a\u7684\u90a3\u4e2a\u4f4d\u79fb\u8d34\u56fe\u548c\u6559\u7a0b\u4e00\u5f00\u59cb\u7684\u90a3\u4e2a\u9ad8\u5ea6\u8d34\u56fe\u76f8\u6bd4\u662f\u989c\u8272\u662f\u76f8\u53cd\u7684\u3002\u8fd9\u662f\u56e0\u4e3a\u4f7f\u7528\u53cd\u8272\u9ad8\u5ea6\u8d34\u56fe\uff08\u4e5f\u53eb\u6df1\u5ea6\u8d34\u56fe\uff09\u53bb\u6a21\u62df\u6df1\u5ea6\u6bd4\u6a21\u62df\u9ad8\u5ea6\u66f4\u5bb9\u6613\u3002\u4e0b\u56fe\u53cd\u6620\u4e86\u8fd9\u4e2a\u8f7b\u5fae\u7684\u6539\u53d8\uff1a \u6211\u4eec\u518d\u6b21\u83b7\u5f97 \\color{green}A \u548c \\color{blue}B \uff0c\u4f46\u662f\u8fd9\u6b21\u6211\u4eec\u7528\u5411\u91cf \\color{orange}{\\bar{V}} \u51cf\u53bb\u70b9 \\color{green}A \u7684\u7eb9\u7406\u5750\u6807\u5f97\u5230 \\color{brown}{\\bar{P}} \u3002\u6211\u4eec\u901a\u8fc7\u5728\u7740\u8272\u5668\u4e2d\u75281.0\u51cf\u53bb\u91c7\u6837\u5f97\u5230\u7684\u9ad8\u5ea6\u8d34\u56fe\u4e2d\u7684\u503c\u6765\u53d6\u5f97\u6df1\u5ea6\u503c\uff0c\u800c\u4e0d\u518d\u662f\u9ad8\u5ea6\u503c\uff0c\u6216\u8005\u7b80\u5355\u5730\u5728\u56fe\u7247\u7f16\u8f91\u8f6f\u4ef6\u4e2d\u628a\u8fd9\u4e2a\u7eb9\u7406\u8fdb\u884c\u53cd\u8272\u64cd\u4f5c\uff0c\u5c31\u50cf\u6211\u4eec\u5bf9\u8fde\u63a5\u4e2d\u7684\u90a3\u4e2a\u6df1\u5ea6\u8d34\u56fe\u6240\u505a\u7684\u4e00\u6837\u3002 \u4f4d\u79fb\u8d34\u56fe\u662f\u5728\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u5b9e\u73b0\u7684\uff0c\u56e0\u4e3a\u4e09\u89d2\u5f62\u8868\u9762\u7684\u6240\u6709\u4f4d\u79fb\u6548\u679c\u90fd\u4e0d\u540c\u3002\u5728\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u6211\u4eec\u5c06\u9700\u8981\u8ba1\u7b97fragment\u5230\u89c2\u5bdf\u8005\u5230\u65b9\u5411\u5411\u91cf \\color{orange}{\\bar{V}} \u6240\u4ee5\u6211\u4eec\u9700\u8981\u89c2\u5bdf\u8005\u4f4d\u7f6e\u548c\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\u7684fragment\u4f4d\u7f6e\u3002\u6cd5\u7ebf\u8d34\u56fe\u6559\u7a0b\u4e2d\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u9876\u70b9\u7740\u8272\u5668\uff0c\u5b83\u628a\u8fd9\u4e9b\u5411\u91cf\u53d1\u9001\u5230\u5207\u7ebf\u7a7a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u590d\u5236\u90a3\u4e2a\u9876\u70b9\u7740\u8272\u5668\uff1a #version 330 core layout (location = 0) in vec3 position; layout (location = 1) in vec3 normal; layout (location = 2) in vec2 texCoords; layout (location = 3) in vec3 tangent; layout (location = 4) in vec3 bitangent; out VS_OUT { vec3 FragPos; vec2 TexCoords; vec3 TangentLightPos; vec3 TangentViewPos; vec3 TangentFragPos; } vs_out; uniform mat4 projection; uniform mat4 view; uniform mat4 model; uniform vec3 lightPos; uniform vec3 viewPos; void main() { gl_Position = projection * view * model * vec4(position, 1.0f); vs_out.FragPos = vec3(model * vec4(position, 1.0)); vs_out.TexCoords = texCoords; vec3 T = normalize(mat3(model) * tangent); vec3 B = normalize(mat3(model) * bitangent); vec3 N = normalize(mat3(model) * normal); mat3 TBN = transpose(mat3(T, B, N)); vs_out.TangentLightPos = TBN * lightPos; vs_out.TangentViewPos = TBN * viewPos; vs_out.TangentFragPos = TBN * vs_out.FragPos; } \u5728\u8fd9\u91cc\u6709\u4ef6\u4e8b\u5f88\u91cd\u8981\uff0c\u6211\u4eec\u9700\u8981\u628aposition\u548c\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\u7684\u89c2\u5bdf\u8005\u7684\u4f4d\u7f6eviewPos\u53d1\u9001\u7ed9\u50cf\u7d20\u7740\u8272\u5668\u3002 \u5728\u50cf\u7d20\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u5b9e\u73b0\u89c6\u5dee\u8d34\u56fe\u7684\u903b\u8f91\u3002\u50cf\u7d20\u7740\u8272\u5668\u770b\u8d77\u6765\u4f1a\u662f\u8fd9\u6837\u7684\uff1a #version 330 core out vec4 FragColor; in VS_OUT { vec3 FragPos; vec2 TexCoords; vec3 TangentLightPos; vec3 TangentViewPos; vec3 TangentFragPos; } fs_in; uniform sampler2D diffuseMap; uniform sampler2D normalMap; uniform sampler2D depthMap; uniform float height_scale; vec2 ParallaxMapping(vec2 texCoords, vec3 viewDir); void main() { // Offset texture coordinates with Parallax Mapping vec3 viewDir = normalize(fs_in.TangentViewPos - fs_in.TangentFragPos); vec2 texCoords = ParallaxMapping(fs_in.TexCoords, viewDir); // then sample textures with new texture coords vec3 diffuse = texture(diffuseMap, texCoords); vec3 normal = texture(normalMap, texCoords); normal = normalize(normal * 2.0 - 1.0); // proceed with lighting code [...] } \u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53eb\u505aParallaxMapping\u7684\u51fd\u6570\uff0c\u5b83\u628afragment\u7684\u7eb9\u7406\u5750\u6807\u548c\u5207\u7ebf\u7a7a\u95f4\u4e2d\u7684fragment\u5230\u89c2\u5bdf\u8005\u7684\u65b9\u5411\u5411\u91cf\u4e3a\u8f93\u5165\u3002\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u7ecf\u4f4d\u79fb\u7684\u7eb9\u7406\u5750\u6807\u3002\u7136\u540e\u6211\u4eec\u4f7f\u7528\u8fd9\u4e9b\u7ecf\u4f4d\u79fb\u7684\u7eb9\u7406\u5750\u6807\u8fdb\u884cdiffuse\u548c\u6cd5\u7ebf\u8d34\u56fe\u7684\u91c7\u6837\u3002\u6700\u540efragment\u7684diffuse\u989c\u8272\u548c\u6cd5\u7ebf\u5411\u91cf\u5c31\u6b63\u786e\u7684\u5bf9\u5e94\u4e8e\u8868\u9762\u7684\u7ecf\u4f4d\u79fb\u7684\u4f4d\u7f6e\u4e0a\u4e86\u3002 \u6211\u4eec\u6765\u770b\u770bParallaxMapping\u51fd\u6570\u7684\u5185\u90e8\uff1a vec2 ParallaxMapping(vec2 texCoords, vec3 viewDir) { float height = texture(depthMap, texCoords).r; vec2 p = viewDir.xy / viewDir.z * (height * height_scale); return texCoords - p; } \u8fd9\u4e2a\u76f8\u5bf9\u7b80\u5355\u7684\u51fd\u6570\u662f\u6211\u4eec\u6240\u8ba8\u8bba\u8fc7\u7684\u5185\u5bb9\u7684\u76f4\u63a5\u8868\u8ff0\u3002\u6211\u4eec\u7528\u672c\u6765\u7684\u7eb9\u7406\u5750\u6807texCoords\u4ece\u9ad8\u5ea6\u8d34\u56fe\u4e2d\u6765\u91c7\u6837\uff0c\u5f97\u5230\u5f53\u524dfragment\u7684\u9ad8\u5ea6 \\color{green}{H(A)} \u3002\u7136\u540e\u8ba1\u7b97\u51fa \\color{brown}{\\bar{P}} \uff0cx\u548cy\u5143\u7d20\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\uff0cviewDir\u5411\u91cf\u9664\u4ee5\u5b83\u7684z\u5143\u7d20\uff0c\u7528fragment\u7684\u9ad8\u5ea6\u5bf9\u5b83\u8fdb\u884c\u7f29\u653e\u3002\u6211\u4eec\u540c\u65f6\u5f15\u5165\u989d\u4e00\u4e2aheight_scale\u7684uniform\uff0c\u6765\u8fdb\u884c\u4e00\u4e9b\u989d\u5916\u7684\u63a7\u5236\uff0c\u56e0\u4e3a\u89c6\u5dee\u6548\u679c\u5982\u679c\u6ca1\u6709\u4e00\u4e2a\u7f29\u653e\u53c2\u6570\u901a\u5e38\u4f1a\u8fc7\u4e8e\u5f3a\u70c8\u3002\u7136\u540e\u6211\u4eec\u7528 \\color{brown}{\\bar{P}} \u51cf\u53bb\u7eb9\u7406\u5750\u6807\u6765\u83b7\u5f97\u6700\u7ec8\u7684\u7ecf\u8fc7\u4f4d\u79fb\u7eb9\u7406\u5750\u6807\u3002 \u6709\u4e00\u4e2a\u5730\u65b9\u9700\u8981\u6ce8\u610f\uff0c\u5c31\u662fviewDir.xy\u9664\u4ee5viewDir.z\u90a3\u91cc\u3002\u56e0\u4e3aviewDir\u5411\u91cf\u662f\u7ecf\u8fc7\u4e86\u6807\u51c6\u5316\u7684\uff0cviewDir.z\u4f1a\u57280.0\u52301.0\u4e4b\u95f4\u7684\u67d0\u5904\u3002\u5f53viewDir\u5927\u81f4\u5e73\u884c\u4e8e\u8868\u9762\u65f6\uff0c\u5b83\u7684z\u5143\u7d20\u63a5\u8fd1\u4e8e0.0\uff0c\u9664\u6cd5\u4f1a\u8fd4\u56de\u6bd4viewDir\u5782\u76f4\u4e8e\u8868\u9762\u7684\u65f6\u5019\u66f4\u5927\u7684 \\color{brown}{\\bar{P}} \u5411\u91cf\u3002\u6240\u4ee5\uff0c\u4ece\u672c\u8d28\u4e0a\uff0c\u76f8\u6bd4\u6b63\u671d\u5411\u8868\u9762\uff0c\u5f53\u5e26\u6709\u89d2\u5ea6\u5730\u770b\u5411\u5e73\u9762\u65f6\uff0c\u6211\u4eec\u4f1a\u66f4\u5927\u7a0b\u5ea6\u5730\u7f29\u653e \\color{brown}{\\bar{P}} \u7684\u5927\u5c0f\uff0c\u4ece\u800c\u589e\u52a0\u7eb9\u7406\u5750\u6807\u7684\u504f\u79fb\uff1b\u8fd9\u6837\u505a\u5728\u89c6\u89d2\u4e0a\u4f1a\u83b7\u5f97\u66f4\u5927\u7684\u771f\u5b9e\u5ea6\u3002 \u6709\u4e9b\u4eba\u66f4\u559c\u6b22\u4e0d\u5728\u7b49\u5f0f\u4e2d\u4f7f\u7528viewDir.z\uff0c\u56e0\u4e3a\u666e\u901a\u7684\u89c6\u5dee\u8d34\u56fe\u4f1a\u5728\u89d2\u5ea6\u4e0a\u4ea7\u751f\u4e0d\u5c3d\u5982\u4eba\u610f\u7684\u7ed3\u679c\uff1b\u8fd9\u4e2a\u6280\u672f\u53eb\u505a\u6709\u504f\u79fb\u91cf\u9650\u5236\u7684\u89c6\u5dee\u8d34\u56fe\uff08Parallax Mapping with Offset Limiting\uff09\u3002\u9009\u62e9\u54ea\u4e00\u4e2a\u6280\u672f\u662f\u4e2a\u4eba\u504f\u597d\u95ee\u9898\uff0c\u4f46\u6211\u503e\u5411\u4e8e\u666e\u901a\u7684\u89c6\u5dee\u8d34\u56fe\u3002 \u6700\u540e\u7684\u7eb9\u7406\u5750\u6807\u968f\u540e\u88ab\u7528\u6765\u8fdb\u884c\u91c7\u6837\uff08diffuse\u548c\u6cd5\u7ebf\uff09\u8d34\u56fe\uff0c\u4e0b\u56fe\u6240\u5c55\u793a\u7684\u4f4d\u79fb\u6548\u679c\u4e2dheight_scale\u7b49\u4e8e0.1\uff1a \u8fd9\u91cc\u4f60\u4f1a\u770b\u5230\u53ea\u7528\u6cd5\u7ebf\u8d34\u56fe\u548c\u4e0e\u89c6\u5dee\u8d34\u56fe\u76f8\u7ed3\u5408\u7684\u6cd5\u7ebf\u8d34\u56fe\u7684\u4e0d\u540c\u4e4b\u5904\u3002\u56e0\u4e3a\u89c6\u5dee\u8d34\u56fe\u5c1d\u8bd5\u6a21\u62df\u6df1\u5ea6\uff0c\u5b83\u5b9e\u9645\u4e0a\u80fd\u591f\u6839\u636e\u4f60\u89c2\u5bdf\u5b83\u4eec\u7684\u65b9\u5411\u4f7f\u7816\u5757\u53e0\u52a0\u5230\u5176\u4ed6\u7816\u5757\u4e0a\u3002 \u5728\u89c6\u5dee\u8d34\u56fe\u7684\u90a3\u4e2a\u5e73\u9762\u91cc\u4f60\u4ecd\u7136\u80fd\u770b\u5230\u5728\u8fb9\u4e0a\u6709\u53e4\u602a\u7684\u5931\u771f\u3002\u539f\u56e0\u662f\u5728\u5e73\u9762\u7684\u8fb9\u7f18\u4e0a\uff0c\u7eb9\u7406\u5750\u6807\u8d85\u51fa\u4e860\u52301\u7684\u8303\u56f4\u8fdb\u884c\u91c7\u6837\uff0c\u6839\u636e\u7eb9\u7406\u7684\u73af\u7ed5\u65b9\u5f0f\u5bfc\u81f4\u4e86\u4e0d\u771f\u5b9e\u7684\u7ed3\u679c\u3002\u89e3\u51b3\u7684\u65b9\u6cd5\u662f\u5f53\u5b83\u8d85\u51fa\u9ed8\u8ba4\u7eb9\u7406\u5750\u6807\u8303\u56f4\u8fdb\u884c\u91c7\u6837\u7684\u65f6\u5019\u5c31\u4e22\u5f03\u8fd9\u4e2afragment\uff1a texCoords = ParallaxMapping(fs_in.TexCoords, viewDir); if(texCoords.x > 1.0 || texCoords.y > 1.0 || texCoords.x < 0.0 || texCoords.y < 0.0) discard; \u4e22\u5f03\u4e86\u8d85\u51fa\u9ed8\u8ba4\u8303\u56f4\u7684\u7eb9\u7406\u5750\u6807\u7684\u6240\u6709fragment\uff0c\u89c6\u5dee\u8d34\u56fe\u7684\u8868\u9762\u8fb9\u7f18\u7ed9\u51fa\u4e86\u6b63\u786e\u7684\u7ed3\u679c\u3002\u6ce8\u610f\uff0c\u8fd9\u4e2a\u6280\u5de7\u4e0d\u80fd\u5728\u6240\u6709\u7c7b\u578b\u7684\u8868\u9762\u4e0a\u90fd\u80fd\u5de5\u4f5c\uff0c\u4f46\u662f\u5e94\u7528\u4e8e\u5e73\u9762\u4e0a\u5b83\u8fd8\u662f\u80fd\u591f\u662f\u5e73\u9762\u770b\u8d77\u6765\u771f\u7684\u8fdb\u884c\u4f4d\u79fb\u4e86\uff1a \u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230 \u6e90\u4ee3\u7801 \uff0c\u4ee5\u53ca \u9876\u70b9 \u548c \u50cf\u7d20 \u7740\u8272\u5668\u3002 \u770b\u8d77\u6765\u4e0d\u9519\uff0c\u8fd0\u884c\u8d77\u6765\u4e5f\u5f88\u5feb\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u8981\u7ed9\u89c6\u5dee\u8d34\u56fe\u63d0\u4f9b\u4e00\u4e2a\u989d\u5916\u7684\u7eb9\u7406\u6837\u672c\u5c31\u80fd\u5de5\u4f5c\u3002\u5f53\u4ece\u4e00\u4e2a\u89d2\u5ea6\u770b\u8fc7\u53bb\u7684\u65f6\u5019\uff0c\u4f1a\u6709\u4e00\u4e9b\u95ee\u9898\u4ea7\u751f\uff08\u548c\u6cd5\u7ebf\u8d34\u56fe\u76f8\u4f3c\uff09\uff0c\u9661\u5ced\u7684\u5730\u65b9\u4f1a\u4ea7\u751f\u4e0d\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u4ece\u4e0b\u56fe\u4f60\u53ef\u4ee5\u770b\u5230\uff1a \u95ee\u9898\u7684\u539f\u56e0\u662f\u8fd9\u53ea\u662f\u4e00\u4e2a\u5927\u81f4\u8fd1\u4f3c\u7684\u89c6\u5dee\u6620\u5c04\u3002\u8fd8\u6709\u4e00\u4e9b\u6280\u5de7\u8ba9\u6211\u4eec\u5728\u9661\u5ced\u7684\u9ad8\u5ea6\u4e0a\u80fd\u591f\u83b7\u5f97\u51e0\u4e4e\u5b8c\u7f8e\u7684\u7ed3\u679c\uff0c\u5373\u4f7f\u5f53\u4ee5\u4e00\u5b9a\u89d2\u5ea6\u89c2\u770b\u7684\u65f6\u5019\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u4e0d\u518d\u4f7f\u7528\u5355\u4e00\u6837\u672c\uff0c\u53d6\u800c\u4ee3\u4e4b\u4f7f\u7528\u591a\u6837\u672c\u6765\u627e\u5230\u6700\u8fd1\u70b9 \\color{blue}B \u4f1a\u5f97\u5230\u600e\u6837\u7684\u7ed3\u679c\uff1f","title":"\u89c6\u5dee\u8d34\u56fe"},{"location":"05%20Advanced%20Lighting/05%20Parallax%20Mapping/#_3","text":"\u9661\u5ced\u89c6\u5dee\u6620\u5c04(Steep Parallax Mapping)\u662f\u89c6\u5dee\u6620\u5c04\u7684\u6269\u5c55\uff0c\u539f\u5219\u662f\u4e00\u6837\u7684\uff0c\u4f46\u4e0d\u662f\u4f7f\u7528\u4e00\u4e2a\u6837\u672c\u800c\u662f\u591a\u4e2a\u6837\u672c\u6765\u786e\u5b9a\u5411\u91cf \\color{brown}{\\bar{P}} \u5230 \\color{blue}B \u3002\u5373\u4f7f\u5728\u9661\u5ced\u7684\u9ad8\u5ea6\u53d8\u5316\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u4e5f\u80fd\u5f97\u5230\u66f4\u597d\u7684\u7ed3\u679c\uff0c\u539f\u56e0\u5728\u4e8e\u8be5\u6280\u672f\u901a\u8fc7\u589e\u52a0\u91c7\u6837\u7684\u6570\u91cf\u63d0\u9ad8\u4e86\u7cbe\u786e\u6027\u3002 \u9661\u5ced\u89c6\u5dee\u6620\u5c04\u7684\u57fa\u672c\u601d\u60f3\u662f\u5c06\u603b\u6df1\u5ea6\u8303\u56f4\u5212\u5206\u4e3a\u540c\u4e00\u4e2a\u6df1\u5ea6/\u9ad8\u5ea6\u7684\u591a\u4e2a\u5c42\u3002\u4ece\u6bcf\u4e2a\u5c42\u4e2d\u6211\u4eec\u6cbf\u7740 \\color{brown}{\\bar{P}} \u65b9\u5411\u79fb\u52a8\u91c7\u6837\u7eb9\u7406\u5750\u6807\uff0c\u76f4\u5230\u6211\u4eec\u627e\u5230\u4e00\u4e2a\u91c7\u6837\u4f4e\u4e8e\u5f53\u524d\u5c42\u7684\u6df1\u5ea6\u503c\u3002\u770b\u770b\u4e0b\u9762\u7684\u56fe\u7247\uff1a \u6211\u4eec\u4ece\u4e0a\u5230\u4e0b\u904d\u5386\u6df1\u5ea6\u5c42\uff0c\u6211\u4eec\u628a\u6bcf\u4e2a\u6df1\u5ea6\u5c42\u548c\u50a8\u5b58\u5728\u6df1\u5ea6\u8d34\u56fe\u4e2d\u7684\u5b83\u7684\u6df1\u5ea6\u503c\u8fdb\u884c\u5bf9\u6bd4\u3002\u5982\u679c\u8fd9\u4e2a\u5c42\u7684\u6df1\u5ea6\u503c\u5c0f\u4e8e\u6df1\u5ea6\u8d34\u56fe\u7684\u503c\uff0c\u5c31\u610f\u5473\u7740\u8fd9\u4e00\u5c42\u7684 \\color{brown}{\\bar{P}} \u5411\u91cf\u90e8\u5206\u5728\u8868\u9762\u4e4b\u4e0b\u3002\u6211\u4eec\u7ee7\u7eed\u8fd9\u4e2a\u5904\u7406\u8fc7\u7a0b\u76f4\u5230\u6709\u4e00\u5c42\u7684\u6df1\u5ea6\u9ad8\u4e8e\u50a8\u5b58\u5728\u6df1\u5ea6\u8d34\u56fe\u4e2d\u7684\u503c\uff1a\u8fd9\u4e2a\u70b9\u5c31\u5728\uff08\u7ecf\u8fc7\u4f4d\u79fb\u7684\uff09\u8868\u9762\u4e0b\u65b9\u3002 \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7b2c\u4e8c\u5c42(D(2) = 0.73)\u7684\u6df1\u5ea6\u8d34\u56fe\u7684\u503c\u4ecd\u4f4e\u4e8e\u7b2c\u4e8c\u5c42\u7684\u6df1\u5ea6\u503c0.4\uff0c\u6240\u4ee5\u6211\u4eec\u7ee7\u7eed\u3002\u4e0b\u4e00\u6b21\u8fed\u4ee3\uff0c\u8fd9\u4e00\u5c42\u7684\u6df1\u5ea6\u503c0.6\u5927\u4e8e\u6df1\u5ea6\u8d34\u56fe\u4e2d\u91c7\u6837\u7684\u6df1\u5ea6\u503c(D(3) = 0.37)\u3002\u6211\u4eec\u4fbf\u53ef\u4ee5\u5047\u8bbe\u7b2c\u4e09\u5c42\u5411\u91cf \\color{brown}{\\bar{P}} \u662f\u53ef\u7528\u7684\u4f4d\u79fb\u51e0\u4f55\u4f4d\u7f6e\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4ece\u5411\u91cf \\color{brown}{\\bar{P_3}} \u7684\u7eb9\u7406\u5750\u6807\u504f\u79fb T_3 \u6765\u5bf9fragment\u7684\u7eb9\u7406\u5750\u6807\u8fdb\u884c\u4f4d\u79fb\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u968f\u7740\u6df1\u5ea6\u66fe\u7684\u589e\u52a0\u7cbe\u786e\u5ea6\u4e5f\u5728\u63d0\u9ad8\u3002 \u4e3a\u5b9e\u73b0\u8fd9\u4e2a\u6280\u672f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6539\u53d8ParallaxMapping\u51fd\u6570\uff0c\u56e0\u4e3a\u6240\u6709\u9700\u8981\u7684\u53d8\u91cf\u90fd\u6709\u4e86\uff1a vec2 ParallaxMapping(vec2 texCoords, vec3 viewDir) { // number of depth layers const float numLayers = 10; // calculate the size of each layer float layerDepth = 1.0 / numLayers; // depth of current layer float currentLayerDepth = 0.0; // the amount to shift the texture coordinates per layer (from vector P) vec2 P = viewDir.xy * height_scale; vec2 deltaTexCoords = P / numLayers; [...] } \u6211\u4eec\u5148\u5b9a\u4e49\u5c42\u7684\u6570\u91cf\uff0c\u8ba1\u7b97\u6bcf\u4e00\u5c42\u7684\u6df1\u5ea6\uff0c\u6700\u540e\u8ba1\u7b97\u7eb9\u7406\u5750\u6807\u504f\u79fb\uff0c\u6bcf\u4e00\u5c42\u6211\u4eec\u5fc5\u987b\u6cbf\u7740 \\color{brown}{\\bar{P}} \u7684\u65b9\u5411\u8fdb\u884c\u79fb\u52a8\u3002 \u7136\u540e\u6211\u4eec\u904d\u5386\u6240\u6709\u5c42\uff0c\u4ece\u4e0a\u5f00\u59cb\uff0c\u77e5\u9053\u627e\u5230\u5c0f\u4e8e\u8fd9\u4e00\u5c42\u7684\u6df1\u5ea6\u503c\u7684\u6df1\u5ea6\u8d34\u56fe\u503c\uff1a // get initial values vec2 currentTexCoords = texCoords; float currentDepthMapValue = texture(depthMap, currentTexCoords).r; while(currentLayerDepth < currentDepthMapValue) { // shift texture coordinates along direction of P currentTexCoords -= deltaTexCoords; // get depthmap value at current texture coordinates currentDepthMapValue = texture(depthMap, currentTexCoords).r; // get depth of next layer currentLayerDepth += layerDepth; } return currentTexCoords; \u8fd9\u91cc\u6211\u4eec\u5faa\u73af\u6bcf\u4e00\u5c42\u6df1\u5ea6\uff0c\u76f4\u5230\u6cbf\u7740 \\color{brown}{\\bar{P}} \u5411\u91cf\u627e\u5230\u7b2c\u4e00\u4e2a\u8fd4\u56de\u4f4e\u4e8e\uff08\u4f4d\u79fb\uff09\u8868\u9762\u7684\u6df1\u5ea6\u7684\u7eb9\u7406\u5750\u6807\u504f\u79fb\u91cf\u3002\u4ecefragment\u7684\u7eb9\u7406\u5750\u6807\u51cf\u53bb\u6700\u540e\u7684\u504f\u79fb\u91cf\uff0c\u6765\u5f97\u5230\u6700\u7ec8\u7684\u7ecf\u8fc7\u4f4d\u79fb\u7684\u7eb9\u7406\u5750\u6807\u5411\u91cf\uff0c\u8fd9\u6b21\u5c31\u6bd4\u4f20\u7edf\u7684\u89c6\u5dee\u6620\u5c04\u66f4\u7cbe\u786e\u4e86\u3002 \u670910\u4e2a\u6837\u672c\u7816\u5899\u4ece\u4e00\u4e2a\u89d2\u5ea6\u770b\u4e0a\u53bb\u5c31\u5df2\u7ecf\u5f88\u597d\u4e86\uff0c\u4f46\u662f\u5f53\u6709\u4e00\u4e2a\u5f3a\u524d\u9762\u5c55\u793a\u7684\u6728\u5236\u8868\u9762\u4e00\u6837\u9661\u5ced\u7684\u8868\u9762\u65f6\uff0c\u9661\u5ced\u7684\u89c6\u5dee\u6620\u5c04\u7684\u5a01\u529b\u5c31\u663e\u793a\u51fa\u6765\u4e86\uff1a \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bf9\u89c6\u5dee\u8d34\u56fe\u7684\u4e00\u4e2a\u5c5e\u6027\u7684\u5229\u7528\uff0c\u5bf9\u7b97\u6cd5\u8fdb\u884c\u4e00\u70b9\u63d0\u5347\u3002\u5f53\u5782\u76f4\u770b\u4e00\u4e2a\u8868\u9762\u7684\u65f6\u5019\u7eb9\u7406\u65f6\u4f4d\u79fb\u6bd4\u4ee5\u4e00\u5b9a\u89d2\u5ea6\u770b\u65f6\u7684\u5c0f\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u5782\u76f4\u770b\u65f6\u4f7f\u7528\u66f4\u5c11\u7684\u6837\u672c\uff0c\u4ee5\u4e00\u5b9a\u89d2\u5ea6\u770b\u65f6\u589e\u52a0\u6837\u672c\u6570\u91cf\uff1a const float minLayers = 8; const float maxLayers = 32; float numLayers = mix(maxLayers, minLayers, abs(dot(vec3(0.0, 0.0, 1.0), viewDir))); \u8fd9\u91cc\u6211\u4eec\u5f97\u5230viewDir\u548c\u6b63z\u65b9\u5411\u7684\u70b9\u4e58\uff0c\u4f7f\u7528\u5b83\u7684\u7ed3\u679c\u6839\u636e\u6211\u4eec\u770b\u5411\u8868\u9762\u7684\u89d2\u5ea6\u8c03\u6574\u6837\u672c\u6570\u91cf\uff08\u6ce8\u610f\u6b63z\u65b9\u5411\u7b49\u4e8e\u5207\u7ebf\u7a7a\u95f4\u4e2d\u7684\u8868\u9762\u7684\u6cd5\u7ebf\uff09\u3002\u5982\u679c\u6211\u4eec\u6240\u770b\u7684\u65b9\u5411\u5e73\u884c\u4e8e\u8868\u9762\uff0c\u6211\u4eec\u5c31\u662f\u752832\u5c42\u3002 \u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u6700\u65b0\u7684\u50cf\u7d20\u7740\u8272\u5668\u4ee3\u7801\u3002\u8fd9\u91cc\u4e5f\u63d0\u4f9b\u6728\u5236\u73a9\u5177\u7bb1\u7684\u8868\u9762\u8d34\u56fe\uff1adiffuse\u3001\u6cd5\u7ebf\u3001\u6df1\u5ea6\u3002 \u9661\u5ced\u89c6\u5dee\u8d34\u56fe\u540c\u6837\u6709\u81ea\u5df1\u7684\u95ee\u9898\u3002\u56e0\u4e3a\u8fd9\u4e2a\u6280\u672f\u662f\u57fa\u4e8e\u6709\u9650\u7684\u6837\u672c\u6570\u91cf\u7684\uff0c\u6211\u4eec\u4f1a\u9047\u5230\u952f\u9f7f\u6548\u679c\u4ee5\u53ca\u56fe\u5c42\u4e4b\u95f4\u6709\u660e\u663e\u7684\u65ad\u5c42\uff1a \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u6837\u672c\u7684\u65b9\u5f0f\u51cf\u5c11\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u662f\u5f88\u5feb\u5c31\u4f1a\u82b1\u8d39\u5f88\u591a\u6027\u80fd\u3002\u6709\u4e9b\u65e8\u5728\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\u7684\u65b9\u6cd5\uff1a\u4e0d\u9002\u7528\u4f4e\u4e8e\u8868\u9762\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u800c\u662f\u5728\u4e24\u4e2a\u63a5\u8fd1\u7684\u6df1\u5ea6\u5c42\u8fdb\u884c\u63d2\u503c\u627e\u51fa\u66f4\u5339\u914d \\color{blue}B \u7684\u3002 \u4e24\u79cd\u6700\u6d41\u884c\u7684\u89e3\u51b3\u65b9\u6cd5\u53eb\u505aRelief Parallax Mapping\u548cParallax Occlusion Mapping\uff0cRelief Parallax Mapping\u66f4\u7cbe\u786e\u4e00\u4e9b\uff0c\u4f46\u662f\u6bd4Parallax Occlusion Mapping\u6027\u80fd\u5f00\u9500\u66f4\u591a\u3002\u56e0\u4e3aParallax Occlusion Mapping\u7684\u6548\u679c\u548c\u524d\u8005\u5dee\u4e0d\u591a\u4f46\u662f\u6548\u7387\u66f4\u9ad8\uff0c\u56e0\u6b64\u8fd9\u79cd\u65b9\u5f0f\u66f4\u7ecf\u5e38\u4f7f\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5728\u4e0b\u9762\u8ba8\u8bba\u4e00\u4e0b\u3002","title":"\u9661\u5ced\u89c6\u5dee\u6620\u5c04"},{"location":"05%20Advanced%20Lighting/05%20Parallax%20Mapping/#_4","text":"\u89c6\u5dee\u906e\u853d\u6620\u5c04(Parallax Occlusion Mapping)\u548c\u9661\u5ced\u89c6\u5dee\u6620\u5c04\u7684\u539f\u5219\u76f8\u540c\uff0c\u4f46\u4e0d\u662f\u7528\u89e6\u78b0\u7684\u7b2c\u4e00\u4e2a\u6df1\u5ea6\u5c42\u7684\u7eb9\u7406\u5750\u6807\uff0c\u800c\u662f\u5728\u89e6\u78b0\u4e4b\u524d\u548c\u4e4b\u540e\uff0c\u5728\u6df1\u5ea6\u5c42\u4e4b\u95f4\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\u3002\u6211\u4eec\u6839\u636e\u8868\u9762\u7684\u9ad8\u5ea6\u8ddd\u79bb\u5577\u4e2a\u6df1\u5ea6\u5c42\u7684\u6df1\u5ea6\u5c42\u503c\u7684\u8ddd\u79bb\u6765\u786e\u5b9a\u7ebf\u6027\u63d2\u503c\u7684\u5927\u5c0f\u3002\u770b\u770b\u4e0b\u9762\u7684\u56fe\u7247\u5c31\u80fd\u4e86\u89e3\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\u5927\u90e8\u5206\u548c\u9661\u5ced\u89c6\u5dee\u6620\u5c04\u4e00\u6837\uff0c\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u662f\u6709\u4e2a\u989d\u5916\u7684\u6b65\u9aa4\uff0c\u4e24\u4e2a\u6df1\u5ea6\u5c42\u7684\u7eb9\u7406\u5750\u6807\u56f4\u7ed5\u7740\u4ea4\u53c9\u70b9\u7684\u7ebf\u6027\u63d2\u503c\u3002\u8fd9\u4e5f\u662f\u8fd1\u4f3c\u7684\uff0c\u4f46\u662f\u6bd4\u9661\u5ced\u89c6\u5dee\u6620\u5c04\u66f4\u7cbe\u786e\u3002 \u89c6\u5dee\u906e\u853d\u6620\u5c04\u7684\u4ee3\u7801\u57fa\u4e8e\u9661\u5ced\u89c6\u5dee\u6620\u5c04\uff0c\u6240\u4ee5\u5e76\u4e0d\u96be\uff1a [...] // steep parallax mapping code here // get texture coordinates before collision (reverse operations) vec2 prevTexCoords = currentTexCoords + deltaTexCoords; // get depth after and before collision for linear interpolation float afterDepth = currentDepthMapValue - currentLayerDepth; float beforeDepth = texture(depthMap, prevTexCoords).r - currentLayerDepth + layerDepth; // interpolation of texture coordinates float weight = afterDepth / (afterDepth - beforeDepth); vec2 finalTexCoords = prevTexCoords * weight + currentTexCoords * (1.0 - weight); return finalTexCoords; \u5728\u5bf9\uff08\u4f4d\u79fb\u7684\uff09\u8868\u9762\u51e0\u4f55\u8fdb\u884c\u4ea4\u53c9\uff0c\u627e\u5230\u6df1\u5ea6\u5c42\u4e4b\u540e\uff0c\u6211\u4eec\u83b7\u53d6\u4ea4\u53c9\u524d\u7684\u7eb9\u7406\u5750\u6807\u3002\u7136\u540e\u6211\u4eec\u8ba1\u7b97\u6765\u81ea\u76f8\u5e94\u6df1\u5ea6\u5c42\u7684\u51e0\u4f55\u4e4b\u95f4\u7684\u6df1\u5ea6\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u5e76\u5728\u4e24\u4e2a\u503c\u4e4b\u95f4\u8fdb\u884c\u63d2\u503c\u3002\u7ebf\u6027\u63d2\u503c\u7684\u65b9\u5f0f\u662f\u5728\u4e24\u4e2a\u5c42\u7684\u7eb9\u7406\u5750\u6807\u4e4b\u95f4\u8fdb\u884c\u7684\u57fa\u7840\u63d2\u503c\u3002\u51fd\u6570\u6700\u540e\u8fd4\u56de\u6700\u7ec8\u7684\u7ecf\u8fc7\u63d2\u503c\u7684\u7eb9\u7406\u5750\u6807\u3002 \u89c6\u5dee\u906e\u853d\u6620\u5c04\u7684\u6548\u679c\u975e\u5e38\u597d\uff0c\u5c3d\u7ba1\u6709\u4e00\u4e9b\u53ef\u4ee5\u770b\u5230\u7684\u8f7b\u5fae\u7684\u4e0d\u771f\u5b9e\u548c\u952f\u9f7f\u7684\u95ee\u9898\uff0c\u8fd9\u4ecd\u662f\u4e00\u4e2a\u597d\u4ea4\u6613\uff0c\u56e0\u4e3a\u9664\u975e\u662f\u653e\u5f97\u975e\u5e38\u5927\u6216\u8005\u89c2\u5bdf\u89d2\u5ea6\u7279\u522b\u9661\uff0c\u5426\u5219\u4e5f\u770b\u4e0d\u5230\u3002 \u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230 \u6e90\u4ee3\u7801 \uff0c\u53ca\u5176 \u9876\u70b9 \u548c \u50cf\u7d20 \u7740\u8272\u5668\u3002 \u89c6\u5dee\u8d34\u56fe\u662f\u63d0\u5347\u573a\u666f\u7ec6\u8282\u975e\u5e38\u597d\u7684\u6280\u672f\uff0c\u4f46\u662f\u4f7f\u7528\u7684\u65f6\u5019\u8fd8\u662f\u8981\u8003\u8651\u5230\u5b83\u4f1a\u5e26\u6765\u4e00\u70b9\u4e0d\u81ea\u7136\u3002\u5927\u591a\u6570\u65f6\u5019\u89c6\u5dee\u8d34\u56fe\u7528\u5728\u5730\u9762\u548c\u5899\u58c1\u8868\u9762\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u67e5\u660e\u8868\u9762\u7684\u8f6e\u5ed3\u5e76\u4e0d\u5bb9\u6613\uff0c\u540c\u65f6\u89c2\u5bdf\u89d2\u5ea6\u5f80\u5f80\u8d8b\u5411\u4e8e\u5782\u76f4\u4e8e\u8868\u9762\u3002\u8fd9\u6837\u89c6\u5dee\u8d34\u56fe\u7684\u4e0d\u81ea\u7136\u4e5f\u5c31\u5f88\u96be\u80fd\u88ab\u6ce8\u610f\u5230\u4e86\uff0c\u5bf9\u4e8e\u63d0\u5347\u7269\u4f53\u7684\u7ec6\u8282\u53ef\u4ee5\u8d77\u5230\u96be\u4ee5\u7f6e\u4fe1\u7684\u6548\u679c\u3002","title":"\u89c6\u5dee\u906e\u853d\u6620\u5c04"},{"location":"05%20Advanced%20Lighting/05%20Parallax%20Mapping/#_5","text":"Parallax Occlusion Mapping in GLSL \uff1asunandblackcat.com\u4e0a\u7684\u89c6\u5dee\u8d34\u56fe\u6559\u7a0b\u3002 How Parallax Displacement Mapping Works \uff1aTheBennyBox\u7684\u5173\u4e8e\u89c6\u5dee\u8d34\u56fe\u539f\u7406\u7684\u89c6\u9891\u6559\u7a0b\u3002","title":"\u9644\u52a0\u8d44\u6e90"},{"location":"05%20Advanced%20Lighting/06%20HDR/","text":"HDR \u539f\u6587 HDR \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 \u6682\u65e0 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u5f53\u5b58\u50a8\u5728\u5e27\u7f13\u51b2(Framebuffer)\u4e2d\u65f6\uff0c\u4eae\u5ea6\u548c\u989c\u8272\u7684\u503c\u662f\u9ed8\u8ba4\u88ab\u9650\u5236\u57280.0\u52301.0\u4e4b\u95f4\u7684\u3002\u8fd9\u4e2a\u770b\u8d77\u6765\u65e0\u8f9c\u7684\u8bed\u53e5\u4f7f\u6211\u4eec\u4e00\u76f4\u5c06\u4eae\u5ea6\u4e0e\u989c\u8272\u7684\u503c\u8bbe\u7f6e\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\uff0c\u5c1d\u8bd5\u7740\u4e0e\u573a\u666f\u5951\u5408\u3002\u8fd9\u6837\u662f\u80fd\u591f\u8fd0\u884c\u7684\uff0c\u4e5f\u80fd\u7ed9\u51fa\u8fd8\u4e0d\u9519\u7684\u6548\u679c\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u9047\u4e0a\u4e86\u4e00\u4e2a\u7279\u5b9a\u7684\u533a\u57df\uff0c\u5176\u4e2d\u6709\u591a\u4e2a\u4eae\u5149\u6e90\u4f7f\u8fd9\u4e9b\u6570\u503c\u603b\u548c\u8d85\u8fc7\u4e861.0\uff0c\u53c8\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f\u7b54\u6848\u662f\u8fd9\u4e9b\u7247\u6bb5\u4e2d\u8d85\u8fc71.0\u7684\u4eae\u5ea6\u6216\u8005\u989c\u8272\u503c\u4f1a\u88ab\u7ea6\u675f\u57281.0\uff0c\u4ece\u800c\u5bfc\u81f4\u573a\u666f\u6df7\u6210\u4e00\u7247\uff0c\u96be\u4ee5\u5206\u8fa8\uff1a \u8fd9\u662f\u7531\u4e8e\u5927\u91cf\u7247\u6bb5\u7684\u989c\u8272\u503c\u90fd\u975e\u5e38\u63a5\u8fd11.0\uff0c\u5728\u5f88\u5927\u4e00\u4e2a\u533a\u57df\u5185\u6bcf\u4e00\u4e2a\u4eae\u7684\u7247\u6bb5\u90fd\u6709\u76f8\u540c\u7684\u767d\u8272\u3002\u8fd9\u635f\u5931\u4e86\u5f88\u591a\u7684\u7ec6\u8282\uff0c\u4f7f\u573a\u666f\u770b\u8d77\u6765\u975e\u5e38\u5047\u3002 \u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u4e00\u4e2a\u65b9\u6848\u662f\u51cf\u5c0f\u5149\u6e90\u7684\u5f3a\u5ea6\u4ece\u800c\u4fdd\u8bc1\u573a\u666f\u5185\u6ca1\u6709\u4e00\u4e2a\u7247\u6bb5\u4eae\u4e8e1.0\u3002\u7136\u800c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u65b9\u6848\uff0c\u56e0\u4e3a\u4f60\u9700\u8981\u4f7f\u7528\u4e0d\u5207\u5b9e\u9645\u7684\u5149\u7167\u53c2\u6570\u3002\u4e00\u4e2a\u66f4\u597d\u7684\u65b9\u6848\u662f\u8ba9\u989c\u8272\u6682\u65f6\u8d85\u8fc71.0\uff0c\u7136\u540e\u5c06\u5176\u8f6c\u6362\u81f30.0\u52301.0\u7684\u533a\u95f4\u5185\uff0c\u4ece\u800c\u9632\u6b62\u635f\u5931\u7ec6\u8282\u3002 \u663e\u793a\u5668\u88ab\u9650\u5236\u4e3a\u53ea\u80fd\u663e\u793a\u503c\u4e3a0.0\u52301.0\u95f4\u7684\u989c\u8272\uff0c\u4f46\u662f\u5728\u5149\u7167\u65b9\u7a0b\u4e2d\u5374\u6ca1\u6709\u8fd9\u4e2a\u9650\u5236\u3002\u901a\u8fc7\u4f7f\u7247\u6bb5\u7684\u989c\u8272\u8d85\u8fc71.0\uff0c\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u66f4\u5927\u7684\u989c\u8272\u8303\u56f4\uff0c\u8fd9\u4e5f\u88ab\u79f0\u4f5c HDR(High Dynamic Range, \u9ad8\u52a8\u6001\u8303\u56f4) \u3002\u6709\u4e86HDR\uff0c\u4eae\u7684\u4e1c\u897f\u53ef\u4ee5\u53d8\u5f97\u975e\u5e38\u4eae\uff0c\u6697\u7684\u4e1c\u897f\u53ef\u4ee5\u53d8\u5f97\u975e\u5e38\u6697\uff0c\u800c\u4e14\u5145\u6ee1\u7ec6\u8282\u3002 HDR\u539f\u672c\u53ea\u662f\u88ab\u8fd0\u7528\u5728\u6444\u5f71\u4e0a\uff0c\u6444\u5f71\u5e08\u5bf9\u540c\u4e00\u4e2a\u573a\u666f\u91c7\u53d6\u4e0d\u540c\u66dd\u5149\u62cd\u591a\u5f20\u7167\u7247\uff0c\u6355\u6349\u5927\u8303\u56f4\u7684\u8272\u5f69\u503c\u3002\u8fd9\u4e9b\u56fe\u7247\u88ab\u5408\u6210\u4e3aHDR\u56fe\u7247\uff0c\u4ece\u800c\u7efc\u5408\u4e0d\u540c\u7684\u66dd\u5149\u7b49\u7ea7\u4f7f\u5f97\u5927\u8303\u56f4\u7684\u7ec6\u8282\u53ef\u89c1\u3002\u770b\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u5de6\u8fb9\u8fd9\u5f20\u56fe\u7247\u5728\u88ab\u5149\u7167\u4eae\u7684\u533a\u57df\u5145\u6ee1\u7ec6\u8282\uff0c\u4f46\u662f\u5728\u9ed1\u6697\u7684\u533a\u57df\u5c31\u4ec0\u4e48\u90fd\u770b\u4e0d\u89c1\u4e86\uff1b\u4f46\u662f\u53f3\u8fb9\u8fd9\u5f20\u56fe\u7684\u9ad8\u66dd\u5149\u5374\u53ef\u4ee5\u8ba9\u4e4b\u524d\u770b\u4e0d\u51fa\u6765\u7684\u9ed1\u6697\u533a\u57df\u663e\u73b0\u51fa\u6765\u3002 \u8fd9\u4e0e\u6211\u4eec\u773c\u775b\u5de5\u4f5c\u7684\u539f\u7406\u975e\u5e38\u76f8\u4f3c\uff0c\u4e5f\u662fHDR\u6e32\u67d3\u7684\u57fa\u7840\u3002\u5f53\u5149\u7ebf\u5f88\u5f31\u7684\u65f6\u5019\uff0c\u4eba\u773c\u4f1a\u81ea\u52a8\u8c03\u6574\u4ece\u800c\u4f7f\u8fc7\u6697\u548c\u8fc7\u4eae\u7684\u90e8\u5206\u53d8\u5f97\u66f4\u6e05\u6670\uff0c\u5c31\u50cf\u4eba\u773c\u6709\u4e00\u4e2a\u80fd\u81ea\u52a8\u6839\u636e\u573a\u666f\u4eae\u5ea6\u8c03\u6574\u7684\u81ea\u52a8\u66dd\u5149\u6ed1\u5757\u3002 HDR\u6e32\u67d3\u548c\u5176\u5f88\u76f8\u4f3c\uff0c\u6211\u4eec\u5141\u8bb8\u7528\u66f4\u5927\u8303\u56f4\u7684\u989c\u8272\u503c\u6e32\u67d3\u4ece\u800c\u83b7\u53d6\u5927\u8303\u56f4\u7684\u9ed1\u6697\u4e0e\u660e\u4eae\u7684\u573a\u666f\u7ec6\u8282\uff0c\u6700\u540e\u5c06\u6240\u6709HDR\u503c\u8f6c\u6362\u6210\u5728[0.0, 1.0]\u8303\u56f4\u7684LDR(Low Dynamic Range,\u4f4e\u52a8\u6001\u8303\u56f4)\u3002\u8f6c\u6362HDR\u503c\u5230LDR\u503c\u5f97\u8fc7\u7a0b\u53eb\u505a\u8272\u8c03\u6620\u5c04(Tone Mapping)\uff0c\u73b0\u5728\u73b0\u5b58\u6709\u5f88\u591a\u7684\u8272\u8c03\u6620\u5c04\u7b97\u6cd5\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u81f4\u529b\u4e8e\u5728\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u4fdd\u7559\u5c3d\u53ef\u80fd\u591a\u7684HDR\u7ec6\u8282\u3002\u8fd9\u4e9b\u8272\u8c03\u6620\u5c04\u7b97\u6cd5\u7ecf\u5e38\u4f1a\u5305\u542b\u4e00\u4e2a\u9009\u62e9\u6027\u503e\u5411\u9ed1\u6697\u6216\u8005\u660e\u4eae\u533a\u57df\u7684\u53c2\u6570\u3002 \u5728\u5b9e\u65f6\u6e32\u67d3\u4e2d\uff0cHDR\u4e0d\u4ec5\u5141\u8bb8\u6211\u4eec\u8d85\u8fc7LDR\u7684\u8303\u56f4[0.0, 1.0]\u4e0e\u4fdd\u7559\u66f4\u591a\u7684\u7ec6\u8282\uff0c\u540c\u65f6\u8fd8\u8ba9\u6211\u4eec\u80fd\u591f\u6839\u636e\u5149\u6e90\u7684 \u771f\u5b9e \u5f3a\u5ea6\u6307\u5b9a\u5b83\u7684\u5f3a\u5ea6\u3002\u6bd4\u5982\u592a\u9633\u6709\u6bd4\u95ea\u5149\u706f\u4e4b\u7c7b\u7684\u4e1c\u897f\u66f4\u9ad8\u7684\u5f3a\u5ea6\uff0c\u90a3\u4e48\u6211\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u8fd9\u6837\u5b50\u8bbe\u7f6e\u5462?(\u6bd4\u5982\u8bf4\u8bbe\u7f6e\u4e00\u4e2a10.0\u7684\u6f2b\u4eae\u5ea6) \u8fd9\u5141\u8bb8\u6211\u4eec\u7528\u66f4\u73b0\u5b9e\u7684\u5149\u7167\u53c2\u6570\u6070\u5f53\u5730\u914d\u7f6e\u4e00\u4e2a\u573a\u666f\u7684\u5149\u7167\uff0c\u800c\u8fd9\u5728LDR\u6e32\u67d3\u4e2d\u662f\u4e0d\u80fd\u5b9e\u73b0\u7684\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4f1a\u88ab\u4e0a\u9650\u7ea6\u675f\u57281.0\u3002 \u56e0\u4e3a\u663e\u793a\u5668\u53ea\u80fd\u663e\u793a\u57280.0\u52301.0\u8303\u56f4\u4e4b\u5185\u7684\u989c\u8272\uff0c\u6211\u4eec\u80af\u5b9a\u8981\u505a\u4e00\u4e9b\u8f6c\u6362\u4ece\u800c\u4f7f\u5f97\u5f53\u524d\u7684HDR\u989c\u8272\u503c\u7b26\u5408\u663e\u793a\u5668\u7684\u8303\u56f4\u3002\u7b80\u5355\u5730\u53d6\u5e73\u5747\u503c\u91cd\u65b0\u8f6c\u6362\u8fd9\u4e9b\u989c\u8272\u503c\u5e76\u4e0d\u80fd\u5f88\u597d\u7684\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u660e\u4eae\u7684\u5730\u65b9\u4f1a\u663e\u5f97\u66f4\u52a0\u663e\u8457\u3002\u6211\u4eec\u80fd\u505a\u7684\u662f\u7528\u4e00\u4e2a\u4e0d\u540c\u7684\u65b9\u7a0b\u4e0e/\u6216\u66f2\u7ebf\u6765\u8f6c\u6362\u8fd9\u4e9bHDR\u503c\u5230LDR\u503c\uff0c\u4ece\u800c\u7ed9\u6211\u4eec\u5bf9\u4e8e\u573a\u666f\u7684\u4eae\u5ea6\u5b8c\u5168\u638c\u63a7\uff0c\u8fd9\u5c31\u662f\u4e4b\u524d\u8bf4\u7684\u8272\u8c03\u53d8\u6362\uff0c\u4e5f\u662fHDR\u6e32\u67d3\u7684\u6700\u7ec8\u6b65\u9aa4\u3002 \u6d6e\u70b9\u5e27\u7f13\u51b2 \u5728\u5b9e\u73b0HDR\u6e32\u67d3\u4e4b\u524d\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u4e00\u4e9b\u9632\u6b62\u989c\u8272\u503c\u5728\u6bcf\u4e00\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u8fd0\u884c\u540e\u88ab\u9650\u5236\u7ea6\u675f\u7684\u65b9\u6cd5\u3002\u5f53\u5e27\u7f13\u51b2\u4f7f\u7528\u4e86\u4e00\u4e2a\u6807\u51c6\u5316\u7684\u5b9a\u70b9\u683c\u5f0f(\u50cf GL_RGB )\u4e3a\u5176\u989c\u8272\u7f13\u51b2\u7684\u5185\u90e8\u683c\u5f0f\uff0cOpenGL\u4f1a\u5728\u5c06\u8fd9\u4e9b\u503c\u5b58\u5165\u5e27\u7f13\u51b2\u524d\u81ea\u52a8\u5c06\u5176\u7ea6\u675f\u52300.0\u52301.0\u4e4b\u95f4\u3002\u8fd9\u4e00\u64cd\u4f5c\u5bf9\u5927\u90e8\u5206\u5e27\u7f13\u51b2\u683c\u5f0f\u90fd\u662f\u6210\u7acb\u7684\uff0c\u9664\u4e86\u4e13\u95e8\u7528\u6765\u5b58\u653e\u88ab\u62d3\u5c55\u8303\u56f4\u503c\u7684\u6d6e\u70b9\u683c\u5f0f\u3002 \u5f53\u4e00\u4e2a\u5e27\u7f13\u51b2\u7684\u989c\u8272\u7f13\u51b2\u7684\u5185\u90e8\u683c\u5f0f\u88ab\u8bbe\u5b9a\u6210\u4e86 GL_RGB16F , GL_RGBA16F , GL_RGB32F \u6216\u8005 GL_RGBA32F \u65f6\uff0c\u8fd9\u4e9b\u5e27\u7f13\u51b2\u88ab\u53eb\u505a\u6d6e\u70b9\u5e27\u7f13\u51b2(Floating Point Framebuffer)\uff0c\u6d6e\u70b9\u5e27\u7f13\u51b2\u53ef\u4ee5\u5b58\u50a8\u8d85\u8fc70.0\u52301.0\u8303\u56f4\u7684\u6d6e\u70b9\u503c\uff0c\u6240\u4ee5\u975e\u5e38\u9002\u5408HDR\u6e32\u67d3\u3002 \u60f3\u8981\u521b\u5efa\u4e00\u4e2a\u6d6e\u70b9\u5e27\u7f13\u51b2\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6539\u53d8\u989c\u8272\u7f13\u51b2\u7684\u5185\u90e8\u683c\u5f0f\u53c2\u6570\u5c31\u884c\u4e86\uff08\u6ce8\u610f GL_FLOAT \u53c2\u6570)\uff1a glBindTexture(GL_TEXTURE_2D, colorBuffer); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB16F, SCR_WIDTH, SCR_HEIGHT, 0, GL_RGB, GL_FLOAT, NULL); \u9ed8\u8ba4\u7684\u5e27\u7f13\u51b2\u9ed8\u8ba4\u4e00\u4e2a\u989c\u8272\u5206\u91cf\u53ea\u5360\u75288\u4f4d(bits)\u3002\u5f53\u4f7f\u7528\u4e00\u4e2a\u4f7f\u752832\u4f4d\u6bcf\u989c\u8272\u5206\u91cf\u7684\u6d6e\u70b9\u5e27\u7f13\u51b2\u65f6(\u4f7f\u7528 GL_RGB32F \u6216\u8005 GL_RGBA32F )\uff0c\u6211\u4eec\u9700\u8981\u56db\u500d\u7684\u5185\u5b58\u6765\u5b58\u50a8\u8fd9\u4e9b\u989c\u8272\u3002\u6240\u4ee5\u9664\u975e\u4f60\u9700\u8981\u4e00\u4e2a\u975e\u5e38\u9ad8\u7684\u7cbe\u786e\u5ea6\uff0c32\u4f4d\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f7f\u7528 GLRGB16F \u5c31\u8db3\u591f\u4e86\u3002 \u6709\u4e86\u4e00\u4e2a\u5e26\u6709\u6d6e\u70b9\u989c\u8272\u7f13\u51b2\u7684\u5e27\u7f13\u51b2\uff0c\u6211\u4eec\u53ef\u4ee5\u653e\u5fc3\u6e32\u67d3\u573a\u666f\u5230\u8fd9\u4e2a\u5e27\u7f13\u51b2\u4e2d\u3002\u5728\u8fd9\u4e2a\u6559\u7a0b\u7684\u4f8b\u5b50\u5f53\u4e2d\uff0c\u6211\u4eec\u5148\u6e32\u67d3\u4e00\u4e2a\u5149\u7167\u7684\u573a\u666f\u5230\u6d6e\u70b9\u5e27\u7f13\u51b2\u4e2d\uff0c\u4e4b\u540e\u518d\u5728\u4e00\u4e2a\u94fa\u5c4f\u56db\u8fb9\u5f62(Screen-filling Quad)\u4e0a\u5e94\u7528\u8fd9\u4e2a\u5e27\u7f13\u51b2\u7684\u989c\u8272\u7f13\u51b2\uff0c\u4ee3\u7801\u4f1a\u662f\u8fd9\u6837\u5b50\uff1a glBindFramebuffer(GL_FRAMEBUFFER, hdrFBO); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // [...] \u6e32\u67d3(\u5149\u7167\u7684)\u573a\u666f glBindFramebuffer(GL_FRAMEBUFFER, 0); // \u73b0\u5728\u4f7f\u7528\u4e00\u4e2a\u4e0d\u540c\u7684\u7740\u8272\u5668\u5c06HDR\u989c\u8272\u7f13\u51b2\u6e32\u67d3\u81f32D\u94fa\u5c4f\u56db\u8fb9\u5f62\u4e0a hdrShader.Use(); glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_2D, hdrColorBufferTexture); RenderQuad(); \u8fd9\u91cc\u573a\u666f\u7684\u989c\u8272\u503c\u5b58\u5728\u4e00\u4e2a\u53ef\u4ee5\u5305\u542b\u4efb\u610f\u989c\u8272\u503c\u7684\u6d6e\u70b9\u989c\u8272\u7f13\u51b2\u4e2d\uff0c\u503c\u53ef\u80fd\u662f\u8d85\u8fc71.0\u7684\u3002\u8fd9\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u4e2d\uff0c\u573a\u666f\u88ab\u521b\u5efa\u4e3a\u4e00\u4e2a\u88ab\u62c9\u4f38\u7684\u7acb\u65b9\u4f53\u901a\u9053\u548c\u56db\u4e2a\u70b9\u5149\u6e90\uff0c\u5176\u4e2d\u4e00\u4e2a\u975e\u5e38\u4eae\u7684\u5728\u96a7\u9053\u7684\u5c3d\u5934\uff1a std::vector<glm::vec3> lightColors; lightColors.push_back(glm::vec3(200.0f, 200.0f, 200.0f)); lightColors.push_back(glm::vec3(0.1f, 0.0f, 0.0f)); lightColors.push_back(glm::vec3(0.0f, 0.0f, 0.2f)); lightColors.push_back(glm::vec3(0.0f, 0.1f, 0.0f)); \u6e32\u67d3\u81f3\u6d6e\u70b9\u5e27\u7f13\u51b2\u548c\u6e32\u67d3\u81f3\u4e00\u4e2a\u666e\u901a\u7684\u5e27\u7f13\u51b2\u662f\u4e00\u6837\u7684\u3002\u65b0\u7684\u4e1c\u897f\u5c31\u662f\u8fd9\u4e2a\u7684 hdrShader \u7684\u7247\u6bb5\u7740\u8272\u5668\uff0c\u7528\u6765\u6e32\u67d3\u6700\u7ec8\u62e5\u6709\u6d6e\u70b9\u989c\u8272\u7f13\u51b2\u7eb9\u7406\u76842D\u56db\u8fb9\u5f62\u3002\u6211\u4eec\u6765\u5b9a\u4e49\u4e00\u4e2a\u7b80\u5355\u7684\u76f4\u901a\u7247\u6bb5\u7740\u8272\u5668(Pass-through Fragment Shader)\uff1a #version 330 core out vec4 color; in vec2 TexCoords; uniform sampler2D hdrBuffer; void main() { vec3 hdrColor = texture(hdrBuffer, TexCoords).rgb; color = vec4(hdrColor, 1.0); } \u8fd9\u91cc\u6211\u4eec\u76f4\u63a5\u91c7\u6837\u4e86\u6d6e\u70b9\u989c\u8272\u7f13\u51b2\u5e76\u5c06\u5176\u4f5c\u4e3a\u7247\u6bb5\u7740\u8272\u5668\u7684\u8f93\u51fa\u3002\u7136\u800c\uff0c\u8fd9\u4e2a2D\u56db\u8fb9\u5f62\u7684\u8f93\u51fa\u662f\u88ab\u76f4\u63a5\u6e32\u67d3\u5230\u9ed8\u8ba4\u7684\u5e27\u7f13\u51b2\u4e2d\uff0c\u5bfc\u81f4\u6240\u6709\u7247\u6bb5\u7740\u8272\u5668\u7684\u8f93\u51fa\u503c\u88ab\u7ea6\u675f\u57280.0\u52301.0\u95f4\uff0c\u5c3d\u7ba1\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e9b\u5b58\u5728\u6d6e\u70b9\u989c\u8272\u7eb9\u7406\u7684\u503c\u8d85\u8fc7\u4e861.0\u3002 \u5f88\u660e\u663e\uff0c\u5728\u96a7\u9053\u5c3d\u5934\u7684\u5f3a\u5149\u7684\u503c\u88ab\u7ea6\u675f\u57281.0\uff0c\u56e0\u4e3a\u4e00\u5927\u5757\u533a\u57df\u90fd\u662f\u767d\u8272\u7684\uff0c\u8fc7\u7a0b\u4e2d\u8d85\u8fc71.0\u7684\u5730\u65b9\u635f\u5931\u4e86\u6240\u6709\u7ec6\u8282\u3002\u56e0\u4e3a\u6211\u4eec\u76f4\u63a5\u8f6c\u6362HDR\u503c\u5230LDR\u503c\uff0c\u8fd9\u5c31\u50cf\u6211\u4eec\u6839\u672c\u5c31\u6ca1\u6709\u5e94\u7528HDR\u4e00\u6837\u3002\u4e3a\u4e86\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\u6211\u4eec\u9700\u8981\u505a\u7684\u662f\u65e0\u635f\u8f6c\u5316\u6240\u6709\u6d6e\u70b9\u989c\u8272\u503c\u56de0.0-1.0\u8303\u56f4\u4e2d\u3002\u6211\u4eec\u9700\u8981\u5e94\u7528\u5230\u8272\u8c03\u6620\u5c04\u3002 \u8272\u8c03\u6620\u5c04 \u8272\u8c03\u6620\u5c04(Tone Mapping)\u662f\u4e00\u4e2a\u635f\u5931\u5f88\u5c0f\u7684\u8f6c\u6362\u6d6e\u70b9\u989c\u8272\u503c\u81f3\u6211\u4eec\u6240\u9700\u7684LDR[0.0, 1.0]\u8303\u56f4\u5185\u7684\u8fc7\u7a0b\uff0c\u901a\u5e38\u4f1a\u4f34\u6709\u7279\u5b9a\u7684\u98ce\u683c\u7684\u8272\u5e73\u8861(Stylistic Color Balance)\u3002 \u6700\u7b80\u5355\u7684\u8272\u8c03\u6620\u5c04\u7b97\u6cd5\u662fReinhard\u8272\u8c03\u6620\u5c04\uff0c\u5b83\u6d89\u53ca\u5230\u5206\u6563\u6574\u4e2aHDR\u989c\u8272\u503c\u5230LDR\u989c\u8272\u503c\u4e0a\uff0c\u6240\u6709\u7684\u503c\u90fd\u6709\u5bf9\u5e94\u3002Reinhard\u8272\u8c03\u6620\u5c04\u7b97\u6cd5\u5e73\u5747\u5730\u5c06\u6240\u6709\u4eae\u5ea6\u503c\u5206\u6563\u5230LDR\u4e0a\u3002\u6211\u4eec\u5c06Reinhard\u8272\u8c03\u6620\u5c04\u5e94\u7528\u5230\u4e4b\u524d\u7684\u7247\u6bb5\u7740\u8272\u5668\u4e0a\uff0c\u5e76\u4e14\u4e3a\u4e86\u66f4\u597d\u7684\u6d4b\u91cf\u52a0\u4e0a\u4e00\u4e2aGamma\u6821\u6b63\u8fc7\u6ee4(\u5305\u62ecSRGB\u7eb9\u7406\u7684\u4f7f\u7528)\uff1a void main() { const float gamma = 2.2; vec3 hdrColor = texture(hdrBuffer, TexCoords).rgb; // Reinhard\u8272\u8c03\u6620\u5c04 vec3 mapped = hdrColor / (hdrColor + vec3(1.0)); // Gamma\u6821\u6b63 mapped = pow(mapped, vec3(1.0 / gamma)); color = vec4(mapped, 1.0); } \u6709\u4e86Reinhard\u8272\u8c03\u6620\u5c04\u7684\u5e94\u7528\uff0c\u6211\u4eec\u4e0d\u518d\u4f1a\u5728\u573a\u666f\u660e\u4eae\u7684\u5730\u65b9\u635f\u5931\u7ec6\u8282\u3002\u5f53\u7136\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u662f\u503e\u5411\u660e\u4eae\u7684\u533a\u57df\u7684\uff0c\u6697\u7684\u533a\u57df\u4f1a\u4e0d\u90a3\u4e48\u7cbe\u7ec6\u4e5f\u4e0d\u90a3\u4e48\u6709\u533a\u5206\u5ea6\u3002 \u73b0\u5728\u4f60\u53ef\u4ee5\u770b\u5230\u5728\u96a7\u9053\u7684\u5c3d\u5934\u6728\u5934\u7eb9\u7406\u53d8\u5f97\u53ef\u89c1\u4e86\u3002\u7528\u4e86\u8fd9\u4e2a\u975e\u5e38\u7b80\u5355\u5730\u8272\u8c03\u6620\u5c04\u7b97\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5408\u9002\u7684\u770b\u5230\u5b58\u5728\u6d6e\u70b9\u5e27\u7f13\u51b2\u4e2d\u6574\u4e2a\u8303\u56f4\u7684HDR\u503c\uff0c\u4f7f\u6211\u4eec\u80fd\u5728\u4e0d\u4e22\u5931\u7ec6\u8282\u7684\u524d\u63d0\u4e0b\uff0c\u5bf9\u573a\u666f\u5149\u7167\u6709\u7cbe\u786e\u7684\u63a7\u5236\u3002 \u53e6\u4e00\u4e2a\u6709\u8da3\u7684\u8272\u8c03\u6620\u5c04\u5e94\u7528\u662f\u66dd\u5149(Exposure)\u53c2\u6570\u7684\u4f7f\u7528\u3002\u4f60\u53ef\u80fd\u8fd8\u8bb0\u5f97\u4e4b\u524d\u6211\u4eec\u5728\u4ecb\u7ecd\u91cc\u8bb2\u5230\u7684\uff0cHDR\u56fe\u7247\u5305\u542b\u5728\u4e0d\u540c\u66dd\u5149\u7b49\u7ea7\u7684\u7ec6\u8282\u3002\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u573a\u666f\u8981\u5c55\u73b0\u65e5\u591c\u4ea4\u66ff\uff0c\u6211\u4eec\u5f53\u7136\u4f1a\u5728\u767d\u5929\u4f7f\u7528\u4f4e\u66dd\u5149\uff0c\u5728\u591c\u95f4\u4f7f\u7528\u9ad8\u66dd\u5149\uff0c\u5c31\u50cf\u4eba\u773c\u8c03\u8282\u65b9\u5f0f\u4e00\u6837\u3002\u6709\u4e86\u8fd9\u4e2a\u66dd\u5149\u53c2\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u53bb\u8bbe\u7f6e\u53ef\u4ee5\u540c\u65f6\u5728\u767d\u5929\u548c\u591c\u665a\u4e0d\u540c\u5149\u7167\u6761\u4ef6\u5de5\u4f5c\u7684\u5149\u7167\u53c2\u6570\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8c03\u6574\u66dd\u5149\u53c2\u6570\u5c31\u884c\u4e86\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u66dd\u5149\u8272\u8c03\u6620\u5c04\u7b97\u6cd5\u4f1a\u50cf\u8fd9\u6837\uff1a uniform float exposure; void main() { const float gamma = 2.2; vec3 hdrColor = texture(hdrBuffer, TexCoords).rgb; // \u66dd\u5149\u8272\u8c03\u6620\u5c04 vec3 mapped = vec3(1.0) - exp(-hdrColor * exposure); // Gamma\u6821\u6b63 mapped = pow(mapped, vec3(1.0 / gamma)); color = vec4(mapped, 1.0); } \u5728\u8fd9\u91cc\u6211\u4eec\u5c06 exposure \u5b9a\u4e49\u4e3a\u9ed8\u8ba4\u4e3a1.0\u7684 uniform \uff0c\u4ece\u800c\u5141\u8bb8\u6211\u4eec\u66f4\u52a0\u7cbe\u786e\u8bbe\u5b9a\u6211\u4eec\u662f\u8981\u6ce8\u91cd\u9ed1\u6697\u8fd8\u662f\u660e\u4eae\u7684\u533a\u57df\u7684HDR\u989c\u8272\u503c\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u9ad8\u66dd\u5149\u503c\u4f1a\u4f7f\u96a7\u9053\u7684\u9ed1\u6697\u90e8\u5206\u663e\u793a\u66f4\u591a\u7684\u7ec6\u8282\uff0c\u7136\u800c\u4f4e\u66dd\u5149\u503c\u4f1a\u663e\u8457\u51cf\u5c11\u9ed1\u6697\u533a\u57df\u7684\u7ec6\u8282\uff0c\u4f46\u5141\u8bb8\u6211\u4eec\u770b\u5230\u66f4\u591a\u660e\u4eae\u533a\u57df\u7684\u7ec6\u8282\u3002\u4e0b\u9762\u8fd9\u7ec4\u56fe\u7247\u5c55\u793a\u4e86\u5728\u4e0d\u540c\u66dd\u5149\u503c\u4e0b\u7684\u901a\u9053\uff1a \u8fd9\u4e2a\u56fe\u7247\u6e05\u6670\u5730\u5c55\u793a\u4e86HDR\u6e32\u67d3\u7684\u4f18\u70b9\u3002\u901a\u8fc7\u6539\u53d8\u66dd\u5149\u7b49\u7ea7\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u89c1\u573a\u666f\u7684\u5f88\u591a\u7ec6\u8282\uff0c\u800c\u8fd9\u4e9b\u7ec6\u8282\u53ef\u80fd\u5728LDR\u6e32\u67d3\u4e2d\u90fd\u88ab\u4e22\u5931\u4e86\u3002\u6bd4\u5982\u8bf4\u96a7\u9053\u5c3d\u5934\uff0c\u5728\u6b63\u5e38\u66dd\u5149\u4e0b\u6728\u5934\u7ed3\u6784\u9690\u7ea6\u53ef\u89c1\uff0c\u4f46\u7528\u4f4e\u66dd\u5149\u6728\u5934\u7684\u82b1\u7eb9\u5c31\u53ef\u4ee5\u6e05\u6670\u770b\u89c1\u4e86\u3002\u5bf9\u4e8e\u8fd1\u5904\u7684\u6728\u5934\u82b1\u7eb9\u6765\u8bf4\uff0c\u5728\u9ad8\u66dd\u5149\u4e0b\u4f1a\u80fd\u66f4\u597d\u7684\u770b\u89c1\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u8fd9\u4e2a\u6f14\u793a\u7684\u6e90\u7801\u548cHDR\u7684 \u9876\u70b9 \u548c \u7247\u6bb5 \u7740\u8272\u5668\u3002 HDR\u62d3\u5c55 \u5728\u8fd9\u91cc\u5c55\u793a\u7684\u4e24\u4e2a\u8272\u8c03\u6620\u5c04\u7b97\u6cd5\u4ec5\u4ec5\u662f\u5927\u91cf(\u66f4\u5148\u8fdb)\u7684\u8272\u8c03\u6620\u5c04\u7b97\u6cd5\u4e2d\u7684\u4e00\u5c0f\u90e8\u5206\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u5404\u6709\u957f\u77ed\u3002\u4e00\u4e9b\u8272\u8c03\u6620\u5c04\u7b97\u6cd5\u503e\u5411\u4e8e\u7279\u5b9a\u7684\u67d0\u79cd\u989c\u8272/\u5f3a\u5ea6\uff0c\u4e5f\u6709\u4e00\u4e9b\u7b97\u6cd5\u540c\u65f6\u663e\u793a\u4f4e\u9ad8\u66dd\u5149\u989c\u8272\u4ece\u800c\u80fd\u591f\u663e\u793a\u66f4\u52a0\u591a\u5f69\u548c\u7cbe\u7ec6\u7684\u56fe\u50cf\u3002\u4e5f\u6709\u4e00\u4e9b\u6280\u5de7\u88ab\u79f0\u4f5c\u81ea\u52a8\u66dd\u5149\u8c03\u6574(Automatic Exposure Adjustment)\u6216\u8005\u53eb\u4eba\u773c\u9002\u5e94(Eye Adaptation)\u6280\u672f\uff0c\u5b83\u80fd\u591f\u68c0\u6d4b\u524d\u4e00\u5e27\u573a\u666f\u7684\u4eae\u5ea6\u5e76\u4e14\u7f13\u6162\u8c03\u6574\u66dd\u5149\u53c2\u6570\u6a21\u4eff\u4eba\u773c\u4f7f\u5f97\u573a\u666f\u5728\u9ed1\u6697\u533a\u57df\u9010\u6e10\u53d8\u4eae\u6216\u8005\u5728\u660e\u4eae\u533a\u57df\u9010\u6e10\u53d8\u6697\u3002 HDR\u6e32\u67d3\u7684\u771f\u6b63\u4f18\u70b9\u5728\u5e9e\u5927\u548c\u590d\u6742\u7684\u573a\u666f\u4e2d\u5e94\u7528\u590d\u6742\u5149\u7167\u7b97\u6cd5\u4f1a\u88ab\u663e\u793a\u51fa\u6765\uff0c\u4f46\u662f\u51fa\u4e8e\u6559\u5b66\u76ee\u7684\u521b\u5efa\u8fd9\u6837\u590d\u6742\u7684\u6f14\u793a\u573a\u666f\u662f\u5f88\u56f0\u96be\u7684\uff0c\u8fd9\u4e2a\u6559\u7a0b\u7528\u7684\u573a\u666f\u662f\u5f88\u5c0f\u7684\uff0c\u800c\u4e14\u7f3a\u4e4f\u7ec6\u8282\u3002\u4f46\u662f\u5982\u6b64\u7b80\u5355\u7684\u6f14\u793a\u4e5f\u662f\u80fd\u591f\u663e\u793a\u51faHDR\u6e32\u67d3\u7684\u4e00\u4e9b\u4f18\u70b9\uff1a\u5728\u660e\u4eae\u548c\u9ed1\u6697\u533a\u57df\u65e0\u7ec6\u8282\u635f\u5931\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u901a\u8fc7\u8272\u8c03\u6620\u5c04\u91cd\u65b0\u83b7\u5f97\uff1b\u591a\u4e2a\u5149\u7167\u7684\u53e0\u52a0\u4e0d\u4f1a\u5bfc\u81f4\u4eae\u5ea6\u88ab\u622a\u65ad\u7684\u533a\u57df\u7684\u51fa\u73b0\uff0c\u5149\u7167\u53ef\u4ee5\u88ab\u8bbe\u5b9a\u4e3a\u5b83\u4eec\u539f\u6765\u7684\u4eae\u5ea6\u503c\u800c\u4e0d\u662f\u88abLDR\u503c\u9650\u5236\u3002\u800c\u4e14\uff0cHDR\u6e32\u67d3\u4e5f\u4f7f\u4e00\u4e9b\u6709\u8da3\u7684\u6548\u679c\u66f4\u52a0\u53ef\u884c\u548c\u771f\u5b9e; \u5176\u4e2d\u4e00\u4e2a\u6548\u679c\u53eb\u505a\u6cdb\u5149(Bloom)\uff0c\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u8282\u8ba8\u8bba\u3002 \u9644\u52a0\u8d44\u6e90 \u5982\u679c\u6cdb\u5149\u6548\u679c\u4e0d\u88ab\u5e94\u7528HDR\u6e32\u67d3\u8fd8\u6709\u597d\u5904\u5417\uff1f : \u4e00\u4e2aStackExchange\u95ee\u9898\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a\u7b54\u6848\u975e\u5e38\u8be6\u7ec6\u5730\u89e3\u91caHDR\u6e32\u67d3\u7684\u597d\u5904\u3002 \u4ec0\u4e48\u662f\u8272\u8c03\u6620\u5c04? \u5b83\u4e0eHDR\u6709\u4ec0\u4e48\u8054\u7cfb\uff1f : \u53e6\u4e00\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u7b54\u6848\uff0c\u7528\u4e86\u5927\u91cf\u56fe\u7247\u89e3\u91ca\u8272\u8c03\u6620\u5c04\u3002","title":"HDR"},{"location":"05%20Advanced%20Lighting/06%20HDR/#hdr","text":"\u539f\u6587 HDR \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 \u6682\u65e0 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u5f53\u5b58\u50a8\u5728\u5e27\u7f13\u51b2(Framebuffer)\u4e2d\u65f6\uff0c\u4eae\u5ea6\u548c\u989c\u8272\u7684\u503c\u662f\u9ed8\u8ba4\u88ab\u9650\u5236\u57280.0\u52301.0\u4e4b\u95f4\u7684\u3002\u8fd9\u4e2a\u770b\u8d77\u6765\u65e0\u8f9c\u7684\u8bed\u53e5\u4f7f\u6211\u4eec\u4e00\u76f4\u5c06\u4eae\u5ea6\u4e0e\u989c\u8272\u7684\u503c\u8bbe\u7f6e\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\uff0c\u5c1d\u8bd5\u7740\u4e0e\u573a\u666f\u5951\u5408\u3002\u8fd9\u6837\u662f\u80fd\u591f\u8fd0\u884c\u7684\uff0c\u4e5f\u80fd\u7ed9\u51fa\u8fd8\u4e0d\u9519\u7684\u6548\u679c\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u9047\u4e0a\u4e86\u4e00\u4e2a\u7279\u5b9a\u7684\u533a\u57df\uff0c\u5176\u4e2d\u6709\u591a\u4e2a\u4eae\u5149\u6e90\u4f7f\u8fd9\u4e9b\u6570\u503c\u603b\u548c\u8d85\u8fc7\u4e861.0\uff0c\u53c8\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f\u7b54\u6848\u662f\u8fd9\u4e9b\u7247\u6bb5\u4e2d\u8d85\u8fc71.0\u7684\u4eae\u5ea6\u6216\u8005\u989c\u8272\u503c\u4f1a\u88ab\u7ea6\u675f\u57281.0\uff0c\u4ece\u800c\u5bfc\u81f4\u573a\u666f\u6df7\u6210\u4e00\u7247\uff0c\u96be\u4ee5\u5206\u8fa8\uff1a \u8fd9\u662f\u7531\u4e8e\u5927\u91cf\u7247\u6bb5\u7684\u989c\u8272\u503c\u90fd\u975e\u5e38\u63a5\u8fd11.0\uff0c\u5728\u5f88\u5927\u4e00\u4e2a\u533a\u57df\u5185\u6bcf\u4e00\u4e2a\u4eae\u7684\u7247\u6bb5\u90fd\u6709\u76f8\u540c\u7684\u767d\u8272\u3002\u8fd9\u635f\u5931\u4e86\u5f88\u591a\u7684\u7ec6\u8282\uff0c\u4f7f\u573a\u666f\u770b\u8d77\u6765\u975e\u5e38\u5047\u3002 \u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u4e00\u4e2a\u65b9\u6848\u662f\u51cf\u5c0f\u5149\u6e90\u7684\u5f3a\u5ea6\u4ece\u800c\u4fdd\u8bc1\u573a\u666f\u5185\u6ca1\u6709\u4e00\u4e2a\u7247\u6bb5\u4eae\u4e8e1.0\u3002\u7136\u800c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u65b9\u6848\uff0c\u56e0\u4e3a\u4f60\u9700\u8981\u4f7f\u7528\u4e0d\u5207\u5b9e\u9645\u7684\u5149\u7167\u53c2\u6570\u3002\u4e00\u4e2a\u66f4\u597d\u7684\u65b9\u6848\u662f\u8ba9\u989c\u8272\u6682\u65f6\u8d85\u8fc71.0\uff0c\u7136\u540e\u5c06\u5176\u8f6c\u6362\u81f30.0\u52301.0\u7684\u533a\u95f4\u5185\uff0c\u4ece\u800c\u9632\u6b62\u635f\u5931\u7ec6\u8282\u3002 \u663e\u793a\u5668\u88ab\u9650\u5236\u4e3a\u53ea\u80fd\u663e\u793a\u503c\u4e3a0.0\u52301.0\u95f4\u7684\u989c\u8272\uff0c\u4f46\u662f\u5728\u5149\u7167\u65b9\u7a0b\u4e2d\u5374\u6ca1\u6709\u8fd9\u4e2a\u9650\u5236\u3002\u901a\u8fc7\u4f7f\u7247\u6bb5\u7684\u989c\u8272\u8d85\u8fc71.0\uff0c\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u66f4\u5927\u7684\u989c\u8272\u8303\u56f4\uff0c\u8fd9\u4e5f\u88ab\u79f0\u4f5c HDR(High Dynamic Range, \u9ad8\u52a8\u6001\u8303\u56f4) \u3002\u6709\u4e86HDR\uff0c\u4eae\u7684\u4e1c\u897f\u53ef\u4ee5\u53d8\u5f97\u975e\u5e38\u4eae\uff0c\u6697\u7684\u4e1c\u897f\u53ef\u4ee5\u53d8\u5f97\u975e\u5e38\u6697\uff0c\u800c\u4e14\u5145\u6ee1\u7ec6\u8282\u3002 HDR\u539f\u672c\u53ea\u662f\u88ab\u8fd0\u7528\u5728\u6444\u5f71\u4e0a\uff0c\u6444\u5f71\u5e08\u5bf9\u540c\u4e00\u4e2a\u573a\u666f\u91c7\u53d6\u4e0d\u540c\u66dd\u5149\u62cd\u591a\u5f20\u7167\u7247\uff0c\u6355\u6349\u5927\u8303\u56f4\u7684\u8272\u5f69\u503c\u3002\u8fd9\u4e9b\u56fe\u7247\u88ab\u5408\u6210\u4e3aHDR\u56fe\u7247\uff0c\u4ece\u800c\u7efc\u5408\u4e0d\u540c\u7684\u66dd\u5149\u7b49\u7ea7\u4f7f\u5f97\u5927\u8303\u56f4\u7684\u7ec6\u8282\u53ef\u89c1\u3002\u770b\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u5de6\u8fb9\u8fd9\u5f20\u56fe\u7247\u5728\u88ab\u5149\u7167\u4eae\u7684\u533a\u57df\u5145\u6ee1\u7ec6\u8282\uff0c\u4f46\u662f\u5728\u9ed1\u6697\u7684\u533a\u57df\u5c31\u4ec0\u4e48\u90fd\u770b\u4e0d\u89c1\u4e86\uff1b\u4f46\u662f\u53f3\u8fb9\u8fd9\u5f20\u56fe\u7684\u9ad8\u66dd\u5149\u5374\u53ef\u4ee5\u8ba9\u4e4b\u524d\u770b\u4e0d\u51fa\u6765\u7684\u9ed1\u6697\u533a\u57df\u663e\u73b0\u51fa\u6765\u3002 \u8fd9\u4e0e\u6211\u4eec\u773c\u775b\u5de5\u4f5c\u7684\u539f\u7406\u975e\u5e38\u76f8\u4f3c\uff0c\u4e5f\u662fHDR\u6e32\u67d3\u7684\u57fa\u7840\u3002\u5f53\u5149\u7ebf\u5f88\u5f31\u7684\u65f6\u5019\uff0c\u4eba\u773c\u4f1a\u81ea\u52a8\u8c03\u6574\u4ece\u800c\u4f7f\u8fc7\u6697\u548c\u8fc7\u4eae\u7684\u90e8\u5206\u53d8\u5f97\u66f4\u6e05\u6670\uff0c\u5c31\u50cf\u4eba\u773c\u6709\u4e00\u4e2a\u80fd\u81ea\u52a8\u6839\u636e\u573a\u666f\u4eae\u5ea6\u8c03\u6574\u7684\u81ea\u52a8\u66dd\u5149\u6ed1\u5757\u3002 HDR\u6e32\u67d3\u548c\u5176\u5f88\u76f8\u4f3c\uff0c\u6211\u4eec\u5141\u8bb8\u7528\u66f4\u5927\u8303\u56f4\u7684\u989c\u8272\u503c\u6e32\u67d3\u4ece\u800c\u83b7\u53d6\u5927\u8303\u56f4\u7684\u9ed1\u6697\u4e0e\u660e\u4eae\u7684\u573a\u666f\u7ec6\u8282\uff0c\u6700\u540e\u5c06\u6240\u6709HDR\u503c\u8f6c\u6362\u6210\u5728[0.0, 1.0]\u8303\u56f4\u7684LDR(Low Dynamic Range,\u4f4e\u52a8\u6001\u8303\u56f4)\u3002\u8f6c\u6362HDR\u503c\u5230LDR\u503c\u5f97\u8fc7\u7a0b\u53eb\u505a\u8272\u8c03\u6620\u5c04(Tone Mapping)\uff0c\u73b0\u5728\u73b0\u5b58\u6709\u5f88\u591a\u7684\u8272\u8c03\u6620\u5c04\u7b97\u6cd5\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u81f4\u529b\u4e8e\u5728\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u4fdd\u7559\u5c3d\u53ef\u80fd\u591a\u7684HDR\u7ec6\u8282\u3002\u8fd9\u4e9b\u8272\u8c03\u6620\u5c04\u7b97\u6cd5\u7ecf\u5e38\u4f1a\u5305\u542b\u4e00\u4e2a\u9009\u62e9\u6027\u503e\u5411\u9ed1\u6697\u6216\u8005\u660e\u4eae\u533a\u57df\u7684\u53c2\u6570\u3002 \u5728\u5b9e\u65f6\u6e32\u67d3\u4e2d\uff0cHDR\u4e0d\u4ec5\u5141\u8bb8\u6211\u4eec\u8d85\u8fc7LDR\u7684\u8303\u56f4[0.0, 1.0]\u4e0e\u4fdd\u7559\u66f4\u591a\u7684\u7ec6\u8282\uff0c\u540c\u65f6\u8fd8\u8ba9\u6211\u4eec\u80fd\u591f\u6839\u636e\u5149\u6e90\u7684 \u771f\u5b9e \u5f3a\u5ea6\u6307\u5b9a\u5b83\u7684\u5f3a\u5ea6\u3002\u6bd4\u5982\u592a\u9633\u6709\u6bd4\u95ea\u5149\u706f\u4e4b\u7c7b\u7684\u4e1c\u897f\u66f4\u9ad8\u7684\u5f3a\u5ea6\uff0c\u90a3\u4e48\u6211\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u8fd9\u6837\u5b50\u8bbe\u7f6e\u5462?(\u6bd4\u5982\u8bf4\u8bbe\u7f6e\u4e00\u4e2a10.0\u7684\u6f2b\u4eae\u5ea6) \u8fd9\u5141\u8bb8\u6211\u4eec\u7528\u66f4\u73b0\u5b9e\u7684\u5149\u7167\u53c2\u6570\u6070\u5f53\u5730\u914d\u7f6e\u4e00\u4e2a\u573a\u666f\u7684\u5149\u7167\uff0c\u800c\u8fd9\u5728LDR\u6e32\u67d3\u4e2d\u662f\u4e0d\u80fd\u5b9e\u73b0\u7684\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4f1a\u88ab\u4e0a\u9650\u7ea6\u675f\u57281.0\u3002 \u56e0\u4e3a\u663e\u793a\u5668\u53ea\u80fd\u663e\u793a\u57280.0\u52301.0\u8303\u56f4\u4e4b\u5185\u7684\u989c\u8272\uff0c\u6211\u4eec\u80af\u5b9a\u8981\u505a\u4e00\u4e9b\u8f6c\u6362\u4ece\u800c\u4f7f\u5f97\u5f53\u524d\u7684HDR\u989c\u8272\u503c\u7b26\u5408\u663e\u793a\u5668\u7684\u8303\u56f4\u3002\u7b80\u5355\u5730\u53d6\u5e73\u5747\u503c\u91cd\u65b0\u8f6c\u6362\u8fd9\u4e9b\u989c\u8272\u503c\u5e76\u4e0d\u80fd\u5f88\u597d\u7684\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u660e\u4eae\u7684\u5730\u65b9\u4f1a\u663e\u5f97\u66f4\u52a0\u663e\u8457\u3002\u6211\u4eec\u80fd\u505a\u7684\u662f\u7528\u4e00\u4e2a\u4e0d\u540c\u7684\u65b9\u7a0b\u4e0e/\u6216\u66f2\u7ebf\u6765\u8f6c\u6362\u8fd9\u4e9bHDR\u503c\u5230LDR\u503c\uff0c\u4ece\u800c\u7ed9\u6211\u4eec\u5bf9\u4e8e\u573a\u666f\u7684\u4eae\u5ea6\u5b8c\u5168\u638c\u63a7\uff0c\u8fd9\u5c31\u662f\u4e4b\u524d\u8bf4\u7684\u8272\u8c03\u53d8\u6362\uff0c\u4e5f\u662fHDR\u6e32\u67d3\u7684\u6700\u7ec8\u6b65\u9aa4\u3002","title":"HDR"},{"location":"05%20Advanced%20Lighting/06%20HDR/#_1","text":"\u5728\u5b9e\u73b0HDR\u6e32\u67d3\u4e4b\u524d\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u4e00\u4e9b\u9632\u6b62\u989c\u8272\u503c\u5728\u6bcf\u4e00\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u8fd0\u884c\u540e\u88ab\u9650\u5236\u7ea6\u675f\u7684\u65b9\u6cd5\u3002\u5f53\u5e27\u7f13\u51b2\u4f7f\u7528\u4e86\u4e00\u4e2a\u6807\u51c6\u5316\u7684\u5b9a\u70b9\u683c\u5f0f(\u50cf GL_RGB )\u4e3a\u5176\u989c\u8272\u7f13\u51b2\u7684\u5185\u90e8\u683c\u5f0f\uff0cOpenGL\u4f1a\u5728\u5c06\u8fd9\u4e9b\u503c\u5b58\u5165\u5e27\u7f13\u51b2\u524d\u81ea\u52a8\u5c06\u5176\u7ea6\u675f\u52300.0\u52301.0\u4e4b\u95f4\u3002\u8fd9\u4e00\u64cd\u4f5c\u5bf9\u5927\u90e8\u5206\u5e27\u7f13\u51b2\u683c\u5f0f\u90fd\u662f\u6210\u7acb\u7684\uff0c\u9664\u4e86\u4e13\u95e8\u7528\u6765\u5b58\u653e\u88ab\u62d3\u5c55\u8303\u56f4\u503c\u7684\u6d6e\u70b9\u683c\u5f0f\u3002 \u5f53\u4e00\u4e2a\u5e27\u7f13\u51b2\u7684\u989c\u8272\u7f13\u51b2\u7684\u5185\u90e8\u683c\u5f0f\u88ab\u8bbe\u5b9a\u6210\u4e86 GL_RGB16F , GL_RGBA16F , GL_RGB32F \u6216\u8005 GL_RGBA32F \u65f6\uff0c\u8fd9\u4e9b\u5e27\u7f13\u51b2\u88ab\u53eb\u505a\u6d6e\u70b9\u5e27\u7f13\u51b2(Floating Point Framebuffer)\uff0c\u6d6e\u70b9\u5e27\u7f13\u51b2\u53ef\u4ee5\u5b58\u50a8\u8d85\u8fc70.0\u52301.0\u8303\u56f4\u7684\u6d6e\u70b9\u503c\uff0c\u6240\u4ee5\u975e\u5e38\u9002\u5408HDR\u6e32\u67d3\u3002 \u60f3\u8981\u521b\u5efa\u4e00\u4e2a\u6d6e\u70b9\u5e27\u7f13\u51b2\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6539\u53d8\u989c\u8272\u7f13\u51b2\u7684\u5185\u90e8\u683c\u5f0f\u53c2\u6570\u5c31\u884c\u4e86\uff08\u6ce8\u610f GL_FLOAT \u53c2\u6570)\uff1a glBindTexture(GL_TEXTURE_2D, colorBuffer); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB16F, SCR_WIDTH, SCR_HEIGHT, 0, GL_RGB, GL_FLOAT, NULL); \u9ed8\u8ba4\u7684\u5e27\u7f13\u51b2\u9ed8\u8ba4\u4e00\u4e2a\u989c\u8272\u5206\u91cf\u53ea\u5360\u75288\u4f4d(bits)\u3002\u5f53\u4f7f\u7528\u4e00\u4e2a\u4f7f\u752832\u4f4d\u6bcf\u989c\u8272\u5206\u91cf\u7684\u6d6e\u70b9\u5e27\u7f13\u51b2\u65f6(\u4f7f\u7528 GL_RGB32F \u6216\u8005 GL_RGBA32F )\uff0c\u6211\u4eec\u9700\u8981\u56db\u500d\u7684\u5185\u5b58\u6765\u5b58\u50a8\u8fd9\u4e9b\u989c\u8272\u3002\u6240\u4ee5\u9664\u975e\u4f60\u9700\u8981\u4e00\u4e2a\u975e\u5e38\u9ad8\u7684\u7cbe\u786e\u5ea6\uff0c32\u4f4d\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f7f\u7528 GLRGB16F \u5c31\u8db3\u591f\u4e86\u3002 \u6709\u4e86\u4e00\u4e2a\u5e26\u6709\u6d6e\u70b9\u989c\u8272\u7f13\u51b2\u7684\u5e27\u7f13\u51b2\uff0c\u6211\u4eec\u53ef\u4ee5\u653e\u5fc3\u6e32\u67d3\u573a\u666f\u5230\u8fd9\u4e2a\u5e27\u7f13\u51b2\u4e2d\u3002\u5728\u8fd9\u4e2a\u6559\u7a0b\u7684\u4f8b\u5b50\u5f53\u4e2d\uff0c\u6211\u4eec\u5148\u6e32\u67d3\u4e00\u4e2a\u5149\u7167\u7684\u573a\u666f\u5230\u6d6e\u70b9\u5e27\u7f13\u51b2\u4e2d\uff0c\u4e4b\u540e\u518d\u5728\u4e00\u4e2a\u94fa\u5c4f\u56db\u8fb9\u5f62(Screen-filling Quad)\u4e0a\u5e94\u7528\u8fd9\u4e2a\u5e27\u7f13\u51b2\u7684\u989c\u8272\u7f13\u51b2\uff0c\u4ee3\u7801\u4f1a\u662f\u8fd9\u6837\u5b50\uff1a glBindFramebuffer(GL_FRAMEBUFFER, hdrFBO); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // [...] \u6e32\u67d3(\u5149\u7167\u7684)\u573a\u666f glBindFramebuffer(GL_FRAMEBUFFER, 0); // \u73b0\u5728\u4f7f\u7528\u4e00\u4e2a\u4e0d\u540c\u7684\u7740\u8272\u5668\u5c06HDR\u989c\u8272\u7f13\u51b2\u6e32\u67d3\u81f32D\u94fa\u5c4f\u56db\u8fb9\u5f62\u4e0a hdrShader.Use(); glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_2D, hdrColorBufferTexture); RenderQuad(); \u8fd9\u91cc\u573a\u666f\u7684\u989c\u8272\u503c\u5b58\u5728\u4e00\u4e2a\u53ef\u4ee5\u5305\u542b\u4efb\u610f\u989c\u8272\u503c\u7684\u6d6e\u70b9\u989c\u8272\u7f13\u51b2\u4e2d\uff0c\u503c\u53ef\u80fd\u662f\u8d85\u8fc71.0\u7684\u3002\u8fd9\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u4e2d\uff0c\u573a\u666f\u88ab\u521b\u5efa\u4e3a\u4e00\u4e2a\u88ab\u62c9\u4f38\u7684\u7acb\u65b9\u4f53\u901a\u9053\u548c\u56db\u4e2a\u70b9\u5149\u6e90\uff0c\u5176\u4e2d\u4e00\u4e2a\u975e\u5e38\u4eae\u7684\u5728\u96a7\u9053\u7684\u5c3d\u5934\uff1a std::vector<glm::vec3> lightColors; lightColors.push_back(glm::vec3(200.0f, 200.0f, 200.0f)); lightColors.push_back(glm::vec3(0.1f, 0.0f, 0.0f)); lightColors.push_back(glm::vec3(0.0f, 0.0f, 0.2f)); lightColors.push_back(glm::vec3(0.0f, 0.1f, 0.0f)); \u6e32\u67d3\u81f3\u6d6e\u70b9\u5e27\u7f13\u51b2\u548c\u6e32\u67d3\u81f3\u4e00\u4e2a\u666e\u901a\u7684\u5e27\u7f13\u51b2\u662f\u4e00\u6837\u7684\u3002\u65b0\u7684\u4e1c\u897f\u5c31\u662f\u8fd9\u4e2a\u7684 hdrShader \u7684\u7247\u6bb5\u7740\u8272\u5668\uff0c\u7528\u6765\u6e32\u67d3\u6700\u7ec8\u62e5\u6709\u6d6e\u70b9\u989c\u8272\u7f13\u51b2\u7eb9\u7406\u76842D\u56db\u8fb9\u5f62\u3002\u6211\u4eec\u6765\u5b9a\u4e49\u4e00\u4e2a\u7b80\u5355\u7684\u76f4\u901a\u7247\u6bb5\u7740\u8272\u5668(Pass-through Fragment Shader)\uff1a #version 330 core out vec4 color; in vec2 TexCoords; uniform sampler2D hdrBuffer; void main() { vec3 hdrColor = texture(hdrBuffer, TexCoords).rgb; color = vec4(hdrColor, 1.0); } \u8fd9\u91cc\u6211\u4eec\u76f4\u63a5\u91c7\u6837\u4e86\u6d6e\u70b9\u989c\u8272\u7f13\u51b2\u5e76\u5c06\u5176\u4f5c\u4e3a\u7247\u6bb5\u7740\u8272\u5668\u7684\u8f93\u51fa\u3002\u7136\u800c\uff0c\u8fd9\u4e2a2D\u56db\u8fb9\u5f62\u7684\u8f93\u51fa\u662f\u88ab\u76f4\u63a5\u6e32\u67d3\u5230\u9ed8\u8ba4\u7684\u5e27\u7f13\u51b2\u4e2d\uff0c\u5bfc\u81f4\u6240\u6709\u7247\u6bb5\u7740\u8272\u5668\u7684\u8f93\u51fa\u503c\u88ab\u7ea6\u675f\u57280.0\u52301.0\u95f4\uff0c\u5c3d\u7ba1\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e9b\u5b58\u5728\u6d6e\u70b9\u989c\u8272\u7eb9\u7406\u7684\u503c\u8d85\u8fc7\u4e861.0\u3002 \u5f88\u660e\u663e\uff0c\u5728\u96a7\u9053\u5c3d\u5934\u7684\u5f3a\u5149\u7684\u503c\u88ab\u7ea6\u675f\u57281.0\uff0c\u56e0\u4e3a\u4e00\u5927\u5757\u533a\u57df\u90fd\u662f\u767d\u8272\u7684\uff0c\u8fc7\u7a0b\u4e2d\u8d85\u8fc71.0\u7684\u5730\u65b9\u635f\u5931\u4e86\u6240\u6709\u7ec6\u8282\u3002\u56e0\u4e3a\u6211\u4eec\u76f4\u63a5\u8f6c\u6362HDR\u503c\u5230LDR\u503c\uff0c\u8fd9\u5c31\u50cf\u6211\u4eec\u6839\u672c\u5c31\u6ca1\u6709\u5e94\u7528HDR\u4e00\u6837\u3002\u4e3a\u4e86\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\u6211\u4eec\u9700\u8981\u505a\u7684\u662f\u65e0\u635f\u8f6c\u5316\u6240\u6709\u6d6e\u70b9\u989c\u8272\u503c\u56de0.0-1.0\u8303\u56f4\u4e2d\u3002\u6211\u4eec\u9700\u8981\u5e94\u7528\u5230\u8272\u8c03\u6620\u5c04\u3002","title":"\u6d6e\u70b9\u5e27\u7f13\u51b2"},{"location":"05%20Advanced%20Lighting/06%20HDR/#_2","text":"\u8272\u8c03\u6620\u5c04(Tone Mapping)\u662f\u4e00\u4e2a\u635f\u5931\u5f88\u5c0f\u7684\u8f6c\u6362\u6d6e\u70b9\u989c\u8272\u503c\u81f3\u6211\u4eec\u6240\u9700\u7684LDR[0.0, 1.0]\u8303\u56f4\u5185\u7684\u8fc7\u7a0b\uff0c\u901a\u5e38\u4f1a\u4f34\u6709\u7279\u5b9a\u7684\u98ce\u683c\u7684\u8272\u5e73\u8861(Stylistic Color Balance)\u3002 \u6700\u7b80\u5355\u7684\u8272\u8c03\u6620\u5c04\u7b97\u6cd5\u662fReinhard\u8272\u8c03\u6620\u5c04\uff0c\u5b83\u6d89\u53ca\u5230\u5206\u6563\u6574\u4e2aHDR\u989c\u8272\u503c\u5230LDR\u989c\u8272\u503c\u4e0a\uff0c\u6240\u6709\u7684\u503c\u90fd\u6709\u5bf9\u5e94\u3002Reinhard\u8272\u8c03\u6620\u5c04\u7b97\u6cd5\u5e73\u5747\u5730\u5c06\u6240\u6709\u4eae\u5ea6\u503c\u5206\u6563\u5230LDR\u4e0a\u3002\u6211\u4eec\u5c06Reinhard\u8272\u8c03\u6620\u5c04\u5e94\u7528\u5230\u4e4b\u524d\u7684\u7247\u6bb5\u7740\u8272\u5668\u4e0a\uff0c\u5e76\u4e14\u4e3a\u4e86\u66f4\u597d\u7684\u6d4b\u91cf\u52a0\u4e0a\u4e00\u4e2aGamma\u6821\u6b63\u8fc7\u6ee4(\u5305\u62ecSRGB\u7eb9\u7406\u7684\u4f7f\u7528)\uff1a void main() { const float gamma = 2.2; vec3 hdrColor = texture(hdrBuffer, TexCoords).rgb; // Reinhard\u8272\u8c03\u6620\u5c04 vec3 mapped = hdrColor / (hdrColor + vec3(1.0)); // Gamma\u6821\u6b63 mapped = pow(mapped, vec3(1.0 / gamma)); color = vec4(mapped, 1.0); } \u6709\u4e86Reinhard\u8272\u8c03\u6620\u5c04\u7684\u5e94\u7528\uff0c\u6211\u4eec\u4e0d\u518d\u4f1a\u5728\u573a\u666f\u660e\u4eae\u7684\u5730\u65b9\u635f\u5931\u7ec6\u8282\u3002\u5f53\u7136\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u662f\u503e\u5411\u660e\u4eae\u7684\u533a\u57df\u7684\uff0c\u6697\u7684\u533a\u57df\u4f1a\u4e0d\u90a3\u4e48\u7cbe\u7ec6\u4e5f\u4e0d\u90a3\u4e48\u6709\u533a\u5206\u5ea6\u3002 \u73b0\u5728\u4f60\u53ef\u4ee5\u770b\u5230\u5728\u96a7\u9053\u7684\u5c3d\u5934\u6728\u5934\u7eb9\u7406\u53d8\u5f97\u53ef\u89c1\u4e86\u3002\u7528\u4e86\u8fd9\u4e2a\u975e\u5e38\u7b80\u5355\u5730\u8272\u8c03\u6620\u5c04\u7b97\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5408\u9002\u7684\u770b\u5230\u5b58\u5728\u6d6e\u70b9\u5e27\u7f13\u51b2\u4e2d\u6574\u4e2a\u8303\u56f4\u7684HDR\u503c\uff0c\u4f7f\u6211\u4eec\u80fd\u5728\u4e0d\u4e22\u5931\u7ec6\u8282\u7684\u524d\u63d0\u4e0b\uff0c\u5bf9\u573a\u666f\u5149\u7167\u6709\u7cbe\u786e\u7684\u63a7\u5236\u3002 \u53e6\u4e00\u4e2a\u6709\u8da3\u7684\u8272\u8c03\u6620\u5c04\u5e94\u7528\u662f\u66dd\u5149(Exposure)\u53c2\u6570\u7684\u4f7f\u7528\u3002\u4f60\u53ef\u80fd\u8fd8\u8bb0\u5f97\u4e4b\u524d\u6211\u4eec\u5728\u4ecb\u7ecd\u91cc\u8bb2\u5230\u7684\uff0cHDR\u56fe\u7247\u5305\u542b\u5728\u4e0d\u540c\u66dd\u5149\u7b49\u7ea7\u7684\u7ec6\u8282\u3002\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u573a\u666f\u8981\u5c55\u73b0\u65e5\u591c\u4ea4\u66ff\uff0c\u6211\u4eec\u5f53\u7136\u4f1a\u5728\u767d\u5929\u4f7f\u7528\u4f4e\u66dd\u5149\uff0c\u5728\u591c\u95f4\u4f7f\u7528\u9ad8\u66dd\u5149\uff0c\u5c31\u50cf\u4eba\u773c\u8c03\u8282\u65b9\u5f0f\u4e00\u6837\u3002\u6709\u4e86\u8fd9\u4e2a\u66dd\u5149\u53c2\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u53bb\u8bbe\u7f6e\u53ef\u4ee5\u540c\u65f6\u5728\u767d\u5929\u548c\u591c\u665a\u4e0d\u540c\u5149\u7167\u6761\u4ef6\u5de5\u4f5c\u7684\u5149\u7167\u53c2\u6570\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8c03\u6574\u66dd\u5149\u53c2\u6570\u5c31\u884c\u4e86\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u66dd\u5149\u8272\u8c03\u6620\u5c04\u7b97\u6cd5\u4f1a\u50cf\u8fd9\u6837\uff1a uniform float exposure; void main() { const float gamma = 2.2; vec3 hdrColor = texture(hdrBuffer, TexCoords).rgb; // \u66dd\u5149\u8272\u8c03\u6620\u5c04 vec3 mapped = vec3(1.0) - exp(-hdrColor * exposure); // Gamma\u6821\u6b63 mapped = pow(mapped, vec3(1.0 / gamma)); color = vec4(mapped, 1.0); } \u5728\u8fd9\u91cc\u6211\u4eec\u5c06 exposure \u5b9a\u4e49\u4e3a\u9ed8\u8ba4\u4e3a1.0\u7684 uniform \uff0c\u4ece\u800c\u5141\u8bb8\u6211\u4eec\u66f4\u52a0\u7cbe\u786e\u8bbe\u5b9a\u6211\u4eec\u662f\u8981\u6ce8\u91cd\u9ed1\u6697\u8fd8\u662f\u660e\u4eae\u7684\u533a\u57df\u7684HDR\u989c\u8272\u503c\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u9ad8\u66dd\u5149\u503c\u4f1a\u4f7f\u96a7\u9053\u7684\u9ed1\u6697\u90e8\u5206\u663e\u793a\u66f4\u591a\u7684\u7ec6\u8282\uff0c\u7136\u800c\u4f4e\u66dd\u5149\u503c\u4f1a\u663e\u8457\u51cf\u5c11\u9ed1\u6697\u533a\u57df\u7684\u7ec6\u8282\uff0c\u4f46\u5141\u8bb8\u6211\u4eec\u770b\u5230\u66f4\u591a\u660e\u4eae\u533a\u57df\u7684\u7ec6\u8282\u3002\u4e0b\u9762\u8fd9\u7ec4\u56fe\u7247\u5c55\u793a\u4e86\u5728\u4e0d\u540c\u66dd\u5149\u503c\u4e0b\u7684\u901a\u9053\uff1a \u8fd9\u4e2a\u56fe\u7247\u6e05\u6670\u5730\u5c55\u793a\u4e86HDR\u6e32\u67d3\u7684\u4f18\u70b9\u3002\u901a\u8fc7\u6539\u53d8\u66dd\u5149\u7b49\u7ea7\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u89c1\u573a\u666f\u7684\u5f88\u591a\u7ec6\u8282\uff0c\u800c\u8fd9\u4e9b\u7ec6\u8282\u53ef\u80fd\u5728LDR\u6e32\u67d3\u4e2d\u90fd\u88ab\u4e22\u5931\u4e86\u3002\u6bd4\u5982\u8bf4\u96a7\u9053\u5c3d\u5934\uff0c\u5728\u6b63\u5e38\u66dd\u5149\u4e0b\u6728\u5934\u7ed3\u6784\u9690\u7ea6\u53ef\u89c1\uff0c\u4f46\u7528\u4f4e\u66dd\u5149\u6728\u5934\u7684\u82b1\u7eb9\u5c31\u53ef\u4ee5\u6e05\u6670\u770b\u89c1\u4e86\u3002\u5bf9\u4e8e\u8fd1\u5904\u7684\u6728\u5934\u82b1\u7eb9\u6765\u8bf4\uff0c\u5728\u9ad8\u66dd\u5149\u4e0b\u4f1a\u80fd\u66f4\u597d\u7684\u770b\u89c1\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u8fd9\u4e2a\u6f14\u793a\u7684\u6e90\u7801\u548cHDR\u7684 \u9876\u70b9 \u548c \u7247\u6bb5 \u7740\u8272\u5668\u3002","title":"\u8272\u8c03\u6620\u5c04"},{"location":"05%20Advanced%20Lighting/06%20HDR/#hdr_1","text":"\u5728\u8fd9\u91cc\u5c55\u793a\u7684\u4e24\u4e2a\u8272\u8c03\u6620\u5c04\u7b97\u6cd5\u4ec5\u4ec5\u662f\u5927\u91cf(\u66f4\u5148\u8fdb)\u7684\u8272\u8c03\u6620\u5c04\u7b97\u6cd5\u4e2d\u7684\u4e00\u5c0f\u90e8\u5206\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u5404\u6709\u957f\u77ed\u3002\u4e00\u4e9b\u8272\u8c03\u6620\u5c04\u7b97\u6cd5\u503e\u5411\u4e8e\u7279\u5b9a\u7684\u67d0\u79cd\u989c\u8272/\u5f3a\u5ea6\uff0c\u4e5f\u6709\u4e00\u4e9b\u7b97\u6cd5\u540c\u65f6\u663e\u793a\u4f4e\u9ad8\u66dd\u5149\u989c\u8272\u4ece\u800c\u80fd\u591f\u663e\u793a\u66f4\u52a0\u591a\u5f69\u548c\u7cbe\u7ec6\u7684\u56fe\u50cf\u3002\u4e5f\u6709\u4e00\u4e9b\u6280\u5de7\u88ab\u79f0\u4f5c\u81ea\u52a8\u66dd\u5149\u8c03\u6574(Automatic Exposure Adjustment)\u6216\u8005\u53eb\u4eba\u773c\u9002\u5e94(Eye Adaptation)\u6280\u672f\uff0c\u5b83\u80fd\u591f\u68c0\u6d4b\u524d\u4e00\u5e27\u573a\u666f\u7684\u4eae\u5ea6\u5e76\u4e14\u7f13\u6162\u8c03\u6574\u66dd\u5149\u53c2\u6570\u6a21\u4eff\u4eba\u773c\u4f7f\u5f97\u573a\u666f\u5728\u9ed1\u6697\u533a\u57df\u9010\u6e10\u53d8\u4eae\u6216\u8005\u5728\u660e\u4eae\u533a\u57df\u9010\u6e10\u53d8\u6697\u3002 HDR\u6e32\u67d3\u7684\u771f\u6b63\u4f18\u70b9\u5728\u5e9e\u5927\u548c\u590d\u6742\u7684\u573a\u666f\u4e2d\u5e94\u7528\u590d\u6742\u5149\u7167\u7b97\u6cd5\u4f1a\u88ab\u663e\u793a\u51fa\u6765\uff0c\u4f46\u662f\u51fa\u4e8e\u6559\u5b66\u76ee\u7684\u521b\u5efa\u8fd9\u6837\u590d\u6742\u7684\u6f14\u793a\u573a\u666f\u662f\u5f88\u56f0\u96be\u7684\uff0c\u8fd9\u4e2a\u6559\u7a0b\u7528\u7684\u573a\u666f\u662f\u5f88\u5c0f\u7684\uff0c\u800c\u4e14\u7f3a\u4e4f\u7ec6\u8282\u3002\u4f46\u662f\u5982\u6b64\u7b80\u5355\u7684\u6f14\u793a\u4e5f\u662f\u80fd\u591f\u663e\u793a\u51faHDR\u6e32\u67d3\u7684\u4e00\u4e9b\u4f18\u70b9\uff1a\u5728\u660e\u4eae\u548c\u9ed1\u6697\u533a\u57df\u65e0\u7ec6\u8282\u635f\u5931\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u901a\u8fc7\u8272\u8c03\u6620\u5c04\u91cd\u65b0\u83b7\u5f97\uff1b\u591a\u4e2a\u5149\u7167\u7684\u53e0\u52a0\u4e0d\u4f1a\u5bfc\u81f4\u4eae\u5ea6\u88ab\u622a\u65ad\u7684\u533a\u57df\u7684\u51fa\u73b0\uff0c\u5149\u7167\u53ef\u4ee5\u88ab\u8bbe\u5b9a\u4e3a\u5b83\u4eec\u539f\u6765\u7684\u4eae\u5ea6\u503c\u800c\u4e0d\u662f\u88abLDR\u503c\u9650\u5236\u3002\u800c\u4e14\uff0cHDR\u6e32\u67d3\u4e5f\u4f7f\u4e00\u4e9b\u6709\u8da3\u7684\u6548\u679c\u66f4\u52a0\u53ef\u884c\u548c\u771f\u5b9e; \u5176\u4e2d\u4e00\u4e2a\u6548\u679c\u53eb\u505a\u6cdb\u5149(Bloom)\uff0c\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u8282\u8ba8\u8bba\u3002","title":"HDR\u62d3\u5c55"},{"location":"05%20Advanced%20Lighting/06%20HDR/#_3","text":"\u5982\u679c\u6cdb\u5149\u6548\u679c\u4e0d\u88ab\u5e94\u7528HDR\u6e32\u67d3\u8fd8\u6709\u597d\u5904\u5417\uff1f : \u4e00\u4e2aStackExchange\u95ee\u9898\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a\u7b54\u6848\u975e\u5e38\u8be6\u7ec6\u5730\u89e3\u91caHDR\u6e32\u67d3\u7684\u597d\u5904\u3002 \u4ec0\u4e48\u662f\u8272\u8c03\u6620\u5c04? \u5b83\u4e0eHDR\u6709\u4ec0\u4e48\u8054\u7cfb\uff1f : \u53e6\u4e00\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u7b54\u6848\uff0c\u7528\u4e86\u5927\u91cf\u56fe\u7247\u89e3\u91ca\u8272\u8c03\u6620\u5c04\u3002","title":"\u9644\u52a0\u8d44\u6e90"},{"location":"05%20Advanced%20Lighting/07%20Bloom/","text":"\u6cdb\u5149 \u539f\u6587 Bloom \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django \u6821\u5bf9 gjy_1992, AoZhang Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u660e\u4eae\u7684\u5149\u6e90\u548c\u533a\u57df\u7ecf\u5e38\u5f88\u96be\u5411\u89c2\u5bdf\u8005\u8868\u8fbe\u51fa\u6765\uff0c\u56e0\u4e3a\u663e\u793a\u5668\u7684\u4eae\u5ea6\u8303\u56f4\u662f\u6709\u9650\u7684\u3002\u4e00\u79cd\u5728\u663e\u793a\u5668\u4e0a\u533a\u5206\u660e\u4eae\u5149\u6e90\u7684\u65b9\u5f0f\u662f\u4f7f\u5b83\u4eec\u53d1\u51fa\u5149\u8292\uff0c\u5149\u8292\u4ece\u5149\u6e90\u5411\u56db\u5468\u53d1\u6563\u3002\u8fd9\u6709\u6548\u5730\u7ed9\u89c2\u4f17\u4e00\u79cd\u8fd9\u4e9b\u5149\u6e90\u6216\u660e\u4eae\u7684\u533a\u57df\u975e\u5e38\u4eae\u7684\u9519\u89c9\u3002\uff08\u8bd1\u6ce8\uff1a\u8fd9\u4e2a\u95ee\u9898\u7684\u63d0\u51fa\u7b80\u5355\u6765\u8bf4\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u6837\u7684\u95ee\u9898\uff1a\u4f8b\u5982\u6709\u4e00\u5f20\u5728\u9633\u5149\u4e0b\u7684\u767d\u7eb8\uff0c\u767d\u7eb8\u5728\u663e\u793a\u5668\u4e0a\u663e\u793a\u51fa\u662f\u51fa\u767d\u8272\uff0c\u800c\u524d\u65b9\u7684\u592a\u9633\u4e5f\u662f\u7eaf\u767d\u8272\u7684\uff0c\u6240\u4ee5\u57fa\u672c\u4e0a\u767d\u7eb8\u548c\u592a\u9633\u5c31\u662f\u4e00\u6837\u7684\u4e86\uff0c\u7ed9\u592a\u9633\u52a0\u4e00\u4e2a\u5149\u6655\uff0c\u8fd9\u6837\u592a\u9633\u770b\u8d77\u6765\u4f3c\u4e4e\u5c31\u6bd4\u767d\u7eb8\u66f4\u4eae\u4e86\uff09 \u8fd9\u79cd\u5149\u6d41\uff0c\u6216\u53d1\u5149\u6548\u679c\uff0c\u662f\u901a\u8fc7\u4e00\u79cd\u53eb\u505a\u6cdb\u5149(Bloom)\u7684\u540e\u671f\u5904\u7406\u6548\u679c\u6765\u5b9e\u73b0\u7684\u3002\u6cdb\u5149\u4f7f\u573a\u666f\u4e2d\u6240\u6709\u660e\u4eae\u7684\u533a\u57df\u90fd\u5177\u6709\u7c7b\u4f3c\u53d1\u5149\u7684\u6548\u679c\u3002\u4e0b\u9762\u662f\u5e26\u6709\u6216\u4e0d\u5e26\u6709\u8f89\u5149\u7684\u573a\u666f\u793a\u4f8b(\u56fe\u7247\u7531Epic Games\u63d0\u4f9b)\uff1a \u6cdb\u5149\u63d0\u4f9b\u4e86\u4e00\u79cd\u9488\u5bf9\u7269\u4f53\u660e\u4eae\u5ea6\u7684\u89c6\u89c9\u6548\u679c\u3002\u5f53\u7528\u4f18\u96c5\u5fae\u5999\u7684\u65b9\u5f0f\u5b9e\u73b0\u6cdb\u5149\u6548\u679c(\u6709\u4e9b\u6e38\u620f\u5b8c\u5168\u6ca1\u80fd\u505a\u5230)\uff0c\u5c06\u4f1a\u663e\u8457\u589e\u5f3a\u60a8\u7684\u573a\u666f\u5149\u7167\u5e76\u80fd\u63d0\u4f9b\u66f4\u52a0\u6709\u5f20\u529b\u7684\u6548\u679c\u3002 \u6cdb\u5149\u548cHDR\u7ed3\u5408\u4f7f\u7528\u6548\u679c\u6700\u597d\u3002\u5f88\u591a\u4eba\u4ee5\u4e3aHDR\u548c\u6cdb\u5149\u662f\u4e00\u6837\u7684\uff0c\u8ba4\u4e3a\u4e24\u79cd\u6280\u672f\u662f\u53ef\u4ee5\u4e92\u6362\u7684\uff0c\u8fd9\u662f\u4e00\u79cd\u5e38\u89c1\u8bef\u89e3\u3002\u5b83\u4eec\u662f\u4e24\u79cd\u5b8c\u5168\u4e0d\u540c\u7684\u6280\u672f\uff0c\u7528\u4e8e\u5404\u81ea\u4e0d\u540c\u7684\u76ee\u7684\u3002\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u76848\u4f4d\u7cbe\u786e\u5ea6\u7684\u5e27\u7f13\u51b2\u6765\u5b9e\u73b0\u6cdb\u5149\u6548\u679c\uff0c\u4e5f\u53ef\u4ee5\u53ea\u4f7f\u7528HDR\u6548\u679c\u800c\u4e0d\u4f7f\u7528\u6cdb\u5149\u6548\u679c\u3002\u53ea\u4e0d\u8fc7\u5728\u6709\u4e86HDR\u4e4b\u540e\u518d\u5b9e\u73b0\u6cdb\u5149\u5c31\u66f4\u7b80\u5355\u4e86(\u6b63\u5982\u6211\u4eec\u7a0d\u540e\u4f1a\u770b\u5230\u7684)\u3002 \u4e3a\u5b9e\u73b0\u6cdb\u5149\uff0c\u6211\u4eec\u50cf\u5e73\u65f6\u90a3\u6837\u6e32\u67d3\u4e00\u4e2a\u6709\u5149\u573a\u666f\uff0c\u63d0\u53d6\u51fa\u573a\u666f\u7684HDR\u989c\u8272\u7f13\u51b2\u4ee5\u53ca\u53ea\u6709\u8fd9\u4e2a\u573a\u666f\u660e\u4eae\u533a\u57df\u53ef\u89c1\u7684\u56fe\u7247\u3002\u7136\u540e\u5bf9\u63d0\u53d6\u7684\u4eae\u5ea6\u56fe\u50cf\u8fdb\u884c\u6a21\u7cca\u5904\u7406\uff0c\u5e76\u5c06\u7ed3\u679c\u6dfb\u52a0\u5230\u539f\u59cbHDR\u573a\u666f\u56fe\u50cf\u7684\u4e0a\u9762\u3002 \u6211\u4eec\u6765\u4e00\u6b65\u4e00\u6b65\u89e3\u91ca\u8fd9\u4e2a\u5904\u7406\u8fc7\u7a0b\u3002\u6211\u4eec\u5728\u573a\u666f\u4e2d\u6e32\u67d3\u4e00\u4e2a\u5e26\u67094\u4e2a\u7acb\u65b9\u4f53\u5f62\u5f0f\u4e0d\u540c\u989c\u8272\u7684\u660e\u4eae\u7684\u5149\u6e90\u3002\u5e26\u6709\u989c\u8272\u7684\u53d1\u5149\u7acb\u65b9\u4f53\u7684\u4eae\u5ea6\u57281.5\u523015.0\u4e4b\u95f4\u3002\u5982\u679c\u6211\u4eec\u5c06\u5176\u6e32\u67d3\u81f3HDR\u989c\u8272\u7f13\u51b2\uff0c\u573a\u666f\u770b\u8d77\u6765\u4f1a\u662f\u8fd9\u6837\u7684\uff1a \u6211\u4eec\u5f97\u5230\u8fd9\u4e2aHDR\u989c\u8272\u7f13\u51b2\u7eb9\u7406\uff0c\u63d0\u53d6\u6240\u6709\u8d85\u51fa\u4e00\u5b9a\u4eae\u5ea6\u7684fragment\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u4f1a\u83b7\u5f97\u4e00\u4e2a\u53ea\u6709fragment\u8d85\u8fc7\u4e86\u4e00\u5b9a\u9608\u9650\u7684\u989c\u8272\u533a\u57df\uff1a \u6211\u4eec\u5c06\u8fd9\u4e2a\u8d85\u8fc7\u4e00\u5b9a\u4eae\u5ea6\u9608\u9650\u7684\u7eb9\u7406\u8fdb\u884c\u6a21\u7cca\u5904\u7406\u3002\u6cdb\u5149\u6548\u679c\u7684\u5f3a\u5ea6\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u7531\u6a21\u7cca\u8fc7\u6ee4\u5668\u7684\u8303\u56f4\u548c\u5f3a\u5ea6\u51b3\u5b9a\u7684\u3002 \u6700\u7ec8\u7684\u88ab\u6a21\u7cca\u5316\u7684\u7eb9\u7406\u5c31\u662f\u6211\u4eec\u7528\u6765\u83b7\u5f97\u53d1\u51fa\u5149\u6655\u6548\u679c\u7684\u4e1c\u897f\u3002\u8fd9\u4e2a\u5df2\u6a21\u7cca\u7684\u7eb9\u7406\u8981\u6dfb\u52a0\u5230\u539f\u6765\u7684HDR\u573a\u666f\u7eb9\u7406\u4e4b\u4e0a\u3002\u7531\u4e8e\u6a21\u7cca\u6ee4\u955c\u7684\u4f5c\u7528\uff0c\u660e\u4eae\u7684\u533a\u57df\u5728\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u4e0a\u90fd\u5f97\u5230\u4e86\u6269\u5c55\uff0c\u56e0\u6b64\u573a\u666f\u4e2d\u7684\u660e\u4eae\u533a\u57df\u770b\u8d77\u6765\u4f1a\u53d1\u5149\u6216\u6d41\u5149\u3002 \u6cdb\u5149\u672c\u8eab\u5e76\u4e0d\u662f\u4e2a\u590d\u6742\u7684\u6280\u672f\uff0c\u4f46\u5f88\u96be\u83b7\u5f97\u6b63\u786e\u7684\u6548\u679c\u3002\u5b83\u7684\u54c1\u8d28\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u6240\u7528\u7684\u6a21\u7cca\u8fc7\u6ee4\u5668\u7684\u8d28\u91cf\u548c\u7c7b\u578b\u3002\u7b80\u5355\u5730\u6539\u6539\u6a21\u7cca\u8fc7\u6ee4\u5668\u5c31\u4f1a\u6781\u5927\u7684\u6539\u53d8\u6cdb\u5149\u6548\u679c\u7684\u54c1\u8d28\u3002 \u4e0b\u9762\u8fd9\u51e0\u6b65\u5c31\u662f\u6cdb\u5149\u540e\u5904\u7406\u7279\u6548\u7684\u8fc7\u7a0b\uff0c\u5b83\u603b\u7ed3\u4e86\u5b9e\u73b0\u6cdb\u5149\u6240\u9700\u7684\u6b65\u9aa4\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u6839\u636e\u4e00\u5b9a\u7684\u9608\u9650\u63d0\u53d6\u6240\u6709\u660e\u4eae\u7684\u989c\u8272\u3002\u6211\u4eec\u5148\u6765\u505a\u8fd9\u4ef6\u4e8b\u3002 \u63d0\u53d6\u4eae\u8272 \u7b2c\u4e00\u6b65\u6211\u4eec\u8981\u4ece\u6e32\u67d3\u51fa\u6765\u7684\u573a\u666f\u4e2d\u63d0\u53d6\u4e24\u5f20\u56fe\u7247\u3002\u6211\u4eec\u53ef\u4ee5\u6e32\u67d3\u573a\u666f\u4e24\u6b21\uff0c\u6bcf\u6b21\u4f7f\u7528\u4e00\u4e2a\u4e0d\u540c\u7684\u7740\u8272\u5668\u6e32\u67d3\u5230\u4e0d\u540c\u7684\u5e27\u7f13\u51b2\u4e2d\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u53eb\u505aMRT\uff08Multiple Render Targets\uff0c\u591a\u6e32\u67d3\u76ee\u6807\uff09\u7684\u5c0f\u6280\u5de7\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u6307\u5b9a\u591a\u4e2a\u50cf\u7d20\u7740\u8272\u5668\u8f93\u51fa\uff1b\u6709\u4e86\u5b83\u6211\u4eec\u8fd8\u80fd\u591f\u5728\u4e00\u4e2a\u5355\u72ec\u6e32\u67d3\u5904\u7406\u4e2d\u63d0\u53d6\u5934\u4e24\u4e2a\u56fe\u7247\u3002\u5728\u50cf\u7d20\u7740\u8272\u5668\u7684\u8f93\u51fa\u524d\uff0c\u6211\u4eec\u6307\u5b9a\u4e00\u4e2a\u5e03\u5c40location\u6807\u8bc6\u7b26\uff0c\u8fd9\u6837\u6211\u4eec\u4fbf\u53ef\u63a7\u5236\u4e00\u4e2a\u50cf\u7d20\u7740\u8272\u5668\u5199\u5165\u5230\u54ea\u4e2a\u989c\u8272\u7f13\u51b2\uff1a layout (location = 0) out vec4 FragColor; layout (location = 1) out vec4 BrightColor; \u53ea\u6709\u6211\u4eec\u771f\u7684\u5177\u6709\u591a\u4e2a\u53ef\u4f9b\u5199\u5165\u7684\u7f13\u51b2\u533a\u65f6\u8fd9\u79cd\u65b9\u5f0f\u624d\u80fd\u5de5\u4f5c\u3002\u4f7f\u7528\u591a\u4e2a\u50cf\u7d20\u7740\u8272\u5668\u8f93\u51fa\u7684\u5fc5\u8981\u6761\u4ef6\u662f\uff0c\u6709\u591a\u4e2a\u989c\u8272\u7f13\u51b2\u9644\u52a0\u5230\u4e86\u5f53\u524d\u7ed1\u5b9a\u7684\u5e27\u7f13\u51b2\u5bf9\u8c61\u4e0a\u3002\u4f60\u53ef\u80fd\u4ece \u5e27\u7f13\u51b2 \u6559\u7a0b\u90a3\u91cc\u56de\u5fc6\u8d77\uff0c\u5f53\u628a\u4e00\u4e2a\u7eb9\u7406\u94fe\u63a5\u5230\u5e27\u7f13\u51b2\u7684\u989c\u8272\u7f13\u51b2\u4e0a\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u989c\u8272\u9644\u4ef6\u3002\u76f4\u5230\u73b0\u5728\uff0c\u6211\u4eec\u4e00\u76f4\u4f7f\u7528\u7740 GL_COLOR_ATTACHMENT0 \uff0c\u4f46\u901a\u8fc7\u4f7f\u7528 GL_COLOR_ATTACHMENT1 \uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u9644\u52a0\u4e86\u4e24\u4e2a\u989c\u8272\u7f13\u51b2\u7684\u5e27\u7f13\u51b2\u5bf9\u8c61\uff1a // Set up floating point framebuffer to render scene to GLuint hdrFBO; glGenFramebuffers(1, &hdrFBO); glBindFramebuffer(GL_FRAMEBUFFER, hdrFBO); GLuint colorBuffers[2]; glGenTextures(2, colorBuffers); for (GLuint i = 0; i < 2; i++) { glBindTexture(GL_TEXTURE_2D, colorBuffers[i]); glTexImage2D( GL_TEXTURE_2D, 0, GL_RGB16F, SCR_WIDTH, SCR_HEIGHT, 0, GL_RGB, GL_FLOAT, NULL ); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); // attach texture to framebuffer glFramebufferTexture2D( GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0 + i, GL_TEXTURE_2D, colorBuffers[i], 0 ); } \u6211\u4eec\u9700\u8981\u663e\u5f0f\u544a\u77e5OpenGL\u6211\u4eec\u6b63\u5728\u901a\u8fc7glDrawBuffers\u6e32\u67d3\u5230\u591a\u4e2a\u989c\u8272\u7f13\u51b2\uff0c\u5426\u5219OpenGL\u53ea\u4f1a\u6e32\u67d3\u5230\u5e27\u7f13\u51b2\u7684\u7b2c\u4e00\u4e2a\u989c\u8272\u9644\u4ef6\uff0c\u800c\u5ffd\u7565\u6240\u6709\u5176\u4ed6\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012\u591a\u4e2a\u989c\u8272\u9644\u4ef6\u7684\u679a\u4e3e\u6765\u505a\u8fd9\u4ef6\u4e8b\uff0c\u6211\u4eec\u4ee5\u4e0b\u9762\u7684\u64cd\u4f5c\u8fdb\u884c\u6e32\u67d3\uff1a GLuint attachments[2] = { GL_COLOR_ATTACHMENT0, GL_COLOR_ATTACHMENT1 }; glDrawBuffers(2, attachments); \u5f53\u6e32\u67d3\u5230\u8fd9\u4e2a\u5e27\u7f13\u51b2\u7684\u65f6\u5019\uff0c\u4e00\u4e2a\u7740\u8272\u5668\u4f7f\u7528\u4e00\u4e2a\u5e03\u5c40location\u4fee\u9970\u7b26\uff0cfragment\u5c31\u4f1a\u5199\u5165\u5bf9\u5e94\u7684\u989c\u8272\u7f13\u51b2\u3002\u8fd9\u5f88\u68d2\uff0c\u56e0\u4e3a\u8fd9\u6837\u7701\u53bb\u4e86\u6211\u4eec\u4e3a\u63d0\u53d6\u660e\u4eae\u533a\u57df\u7684\u989d\u5916\u6e32\u67d3\u6b65\u9aa4\uff0c\u56e0\u4e3a\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u76f4\u63a5\u4ece\u5c06\u88ab\u6e32\u67d3\u7684fragment\u63d0\u53d6\u51fa\u5b83\u4eec\uff1a #version 330 core layout (location = 0) out vec4 FragColor; layout (location = 1) out vec4 BrightColor; [...] void main() { [...] // first do normal lighting calculations and output results FragColor = vec4(lighting, 1.0f); // Check whether fragment output is higher than threshold, if so output as brightness color float brightness = dot(FragColor.rgb, vec3(0.2126, 0.7152, 0.0722)); if(brightness > 1.0) BrightColor = vec4(FragColor.rgb, 1.0); } \u8fd9\u91cc\u6211\u4eec\u5148\u6b63\u5e38\u8ba1\u7b97\u5149\u7167\uff0c\u5c06\u5176\u4f20\u9012\u7ed9\u7b2c\u4e00\u4e2a\u50cf\u7d20\u7740\u8272\u5668\u7684\u8f93\u51fa\u53d8\u91cf FragColor \u3002\u7136\u540e\u6211\u4eec\u4f7f\u7528\u5f53\u524d\u50a8\u5b58\u5728 FragColor \u7684\u4e1c\u897f\u6765\u51b3\u5b9a\u5b83\u7684\u4eae\u5ea6\u662f\u5426\u8d85\u8fc7\u4e86\u4e00\u5b9a\u9608\u9650\u3002\u6211\u4eec\u9996\u5148\u901a\u8fc7\u9002\u5f53\u5730\u5c06\u5176\u8f6c\u6362\u4e3a\u7070\u5ea6\u6765\u8ba1\u7b97\u7247\u6bb5\u7684\u4eae\u5ea6(\u901a\u8fc7\u53d6\u4e24\u4e2a\u5411\u91cf\u7684\u70b9\u79ef\uff0c\u6211\u4eec\u6709\u6548\u5730\u5c06\u4e24\u4e2a\u5411\u91cf\u7684\u6bcf\u4e2a\u5355\u72ec\u5206\u91cf\u76f8\u4e58\u5e76\u5c06\u7ed3\u679c\u52a0\u5728\u4e00\u8d77)\u3002\u5982\u679c\u4eae\u5ea6\u8d85\u8fc7\u67d0\u4e2a\u9608\u503c\uff0c\u6211\u4eec\u5c06\u989c\u8272\u8f93\u51fa\u5230\u7b2c\u4e8c\u4e2a\u989c\u8272\u7f13\u51b2\u533a\u3002\u6211\u4eec\u5bf9\u5149\u7acb\u65b9\u4f53\u505a\u540c\u6837\u7684\u5904\u7406\u3002 \u8fd9\u4e5f\u8bf4\u660e\u4e86\u4e3a\u4ec0\u4e48\u6cdb\u5149\u5728HDR\u57fa\u7840\u4e0a\u80fd\u591f\u5de5\u4f5c\u5f97\u7279\u522b\u597d\u3002\u56e0\u4e3aHDR\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u989c\u8272\u503c\u6307\u5b9a\u8d85\u8fc71.0\u8fd9\u4e2a\u9ed8\u8ba4\u7684\u8303\u56f4\uff0c\u6211\u4eec\u80fd\u591f\u5f97\u5230\u5bf9\u56fe\u50cf\u4e2d\u7684\u4eae\u5ea6\u66f4\u597d\u7684\u63a7\u5236\u6743\u3002\u6ca1\u6709HDR\u6211\u4eec\u5fc5\u987b\u5c06\u9608\u9650\u8bbe\u7f6e\u4e3a\u5c0f\u4e8e1.0\u7684\u6570\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4ecd\u7136\u53ef\u884c\uff0c\u4f46\u662f\u4eae\u90e8\u5f88\u5bb9\u6613\u53d8\u5f97\u5f88\u591a\uff0c\u8fd9\u5c31\u5bfc\u81f4\u5149\u6655\u6548\u679c\u8fc7\u91cd(\u6bd4\u5982\u767d\u96ea\u7684\u5149\u6655\u6548\u679c)\u3002 \u6709\u4e86\u4e24\u4e2a\u989c\u8272\u7f13\u51b2\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u6b63\u5e38\u573a\u666f\u7684\u56fe\u50cf\u548c\u4e00\u4e2a\u63d0\u53d6\u51fa\u7684\u4eae\u533a\u7684\u56fe\u50cf\u3002\u8fd9\u4e9b\u90fd\u5728\u4e00\u4e2a\u6e32\u67d3\u6b65\u9aa4\u4e2d\u5b8c\u6210\u3002 \u6709\u4e86\u4e00\u4e2a\u63d0\u53d6\u51fa\u7684\u4eae\u533a\u56fe\u50cf\uff0c\u6211\u4eec\u73b0\u5728\u9700\u8981\u5bf9\u8be5\u56fe\u50cf\u8fdb\u884c\u6a21\u7cca\u5904\u7406\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5e27\u7f13\u51b2\u7ae0\u8282\u4e2d\u540e\u5904\u7406\u90e8\u5206\u90a3\u4e2a\u7b80\u5355\u7684\u76d2\u5b50\u8fc7\u6ee4\u5668\uff0c\u4f46\u6211\u4eec\u6700\u597d\u8fd8\u662f\u4f7f\u7528\u4e00\u4e2a\u66f4\u9ad8\u7ea7(\u4e5f\u66f4\u6f02\u4eae)\u7684\u6a21\u7cca\u8fc7\u6ee4\u5668\uff1a \u9ad8\u65af\u6a21\u7cca(Gaussian blur) \u3002 \u9ad8\u65af\u6a21\u7cca \u5728\u540e\u5904\u7406\u6559\u7a0b\u90a3\u91cc\uff0c\u6211\u4eec\u91c7\u7528\u7684\u6a21\u7cca\u662f\u4e00\u4e2a\u56fe\u50cf\u4e2d\u6240\u6709\u5468\u56f4\u50cf\u7d20\u7684\u5747\u503c\uff0c\u5b83\u7684\u786e\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u6613\u5b9e\u73b0\u7684\u6a21\u7cca\uff0c\u4f46\u6548\u679c\u5e76\u4e0d\u662f\u6700\u597d\u7684\u3002\u9ad8\u65af\u6a21\u7cca\u57fa\u4e8e\u9ad8\u65af\u66f2\u7ebf\uff0c\u9ad8\u65af\u66f2\u7ebf\u901a\u5e38\u88ab\u63cf\u8ff0\u4e3a\u4e00\u4e2a\u949f\u5f62\u66f2\u7ebf\uff0c\u4e2d\u95f4\u7684\u503c\u8fbe\u5230\u6700\u5927\u5316\uff0c\u968f\u7740\u8ddd\u79bb\u7684\u589e\u52a0\uff0c\u4e24\u8fb9\u7684\u503c\u4e0d\u65ad\u51cf\u5c11\u3002\u9ad8\u65af\u66f2\u7ebf\u5728\u6570\u5b66\u4e0a\u6709\u4e0d\u540c\u7684\u5f62\u5f0f\uff0c\u4f46\u662f\u901a\u5e38\u662f\u8fd9\u6837\u7684\u5f62\u72b6\uff1a \u9ad8\u65af\u66f2\u7ebf\u5728\u5b83\u7684\u4e2d\u95f4\u5904\u7684\u9762\u79ef\u6700\u5927\uff0c\u4f7f\u7528\u5b83\u7684\u503c\u4f5c\u4e3a\u6743\u91cd\u4f7f\u5f97\u8fd1\u5904\u7684\u6837\u672c\u62e5\u6709\u6700\u5927\u7684\u4f18\u5148\u6743\u3002\u6bd4\u5982\uff0c\u5982\u679c\u6211\u4eec\u4ecefragment\u768432\u00d732\u7684\u56db\u65b9\u5f62\u533a\u57df\u91c7\u6837\uff0c\u8fd9\u4e2a\u6743\u91cd\u968f\u7740\u548cfragment\u7684\u8ddd\u79bb\u53d8\u5927\u9010\u6e10\u51cf\u5c0f\uff1b\u901a\u5e38\u8fd9\u4f1a\u5f97\u5230\u66f4\u597d\u66f4\u771f\u5b9e\u7684\u6a21\u7cca\u6548\u679c\uff0c\u8fd9\u79cd\u6a21\u7cca\u53eb\u505a\u9ad8\u65af\u6a21\u7cca\u3002 \u4e3a\u4e86\u5b9e\u73b0\u9ad8\u65af\u6a21\u7cca\u8fc7\u6ee4\u5668\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u4e8c\u7ef4\u6743\u91cd\u6b63\u65b9\u5f62\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e8c\u7ef4\u9ad8\u65af\u66f2\u7ebf\u65b9\u7a0b\u4e2d\u83b7\u5f97\u6743\u91cd\u3002\u7136\u800c\u8fd9\u4e2a\u8fc7\u7a0b\u6709\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5f88\u5feb\u4f1a\u6d88\u8017\u6781\u5927\u7684\u6027\u80fd\u3002\u4ee5\u4e00\u4e2a32\u00d732\u7684\u6a21\u7ccakernel\u4e3a\u4f8b\uff0c\u6211\u4eec\u5fc5\u987b\u5bf9\u6bcf\u4e2afragment\u4ece\u4e00\u4e2a\u7eb9\u7406\u4e2d\u91c7\u68371024\u6b21\uff01 \u5e78\u8fd0\u7684\u662f\uff0c\u9ad8\u65af\u65b9\u7a0b\u6709\u4e2a\u975e\u5e38\u5de7\u5999\u7684\u7279\u6027\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u628a\u4e8c\u7ef4\u65b9\u7a0b\u5206\u89e3\u4e3a\u4e24\u4e2a\u66f4\u5c0f\u7684\u65b9\u7a0b\uff1a\u4e00\u4e2a\u63cf\u8ff0\u6c34\u5e73\u6743\u91cd\uff0c\u53e6\u4e00\u4e2a\u63cf\u8ff0\u5782\u76f4\u6743\u91cd\u3002\u6211\u4eec\u9996\u5148\u7528\u6c34\u5e73\u6743\u91cd\u5728\u6574\u4e2a\u7eb9\u7406\u4e0a\u8fdb\u884c\u6c34\u5e73\u6a21\u7cca\uff0c\u7136\u540e\u5728\u7ecf\u6539\u53d8\u7684\u7eb9\u7406\u4e0a\u8fdb\u884c\u5782\u76f4\u6a21\u7cca\u3002\u5229\u7528\u8fd9\u4e2a\u7279\u6027\uff0c\u7ed3\u679c\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u53ef\u4ee5\u8282\u7701\u96be\u4ee5\u7f6e\u4fe1\u7684\u6027\u80fd\uff0c\u56e0\u4e3a\u6211\u4eec\u73b0\u5728\u53ea\u9700\u505a32+32\u6b21\u91c7\u6837\uff0c\u4e0d\u518d\u662f1024\u4e86\uff01\u8fd9\u53eb\u505a\u4e24\u6b65\u9ad8\u65af\u6a21\u7cca\u3002 \u8fd9\u610f\u5473\u7740\u6211\u4eec\u5982\u679c\u5bf9\u4e00\u4e2a\u56fe\u50cf\u8fdb\u884c\u6a21\u7cca\u5904\u7406\uff0c\u81f3\u5c11\u9700\u8981\u4e24\u6b65\uff0c\u6700\u597d\u4f7f\u7528\u5e27\u7f13\u51b2\u5bf9\u8c61\u505a\u8fd9\u4ef6\u4e8b\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u5c06\u5b9e\u73b0\u50cf\u4e52\u4e53\u7403\u4e00\u6837\u7684\u5e27\u7f13\u51b2\u6765\u5b9e\u73b0\u9ad8\u65af\u6a21\u7cca\u3002\u5b83\u7684\u610f\u601d\u662f\uff0c\u6709\u4e00\u5bf9\u513f\u5e27\u7f13\u51b2\uff0c\u6211\u4eec\u628a\u53e6\u4e00\u4e2a\u5e27\u7f13\u51b2\u7684\u989c\u8272\u7f13\u51b2\u653e\u8fdb\u5f53\u524d\u7684\u5e27\u7f13\u51b2\u7684\u989c\u8272\u7f13\u51b2\u4e2d\uff0c\u4f7f\u7528\u4e0d\u540c\u7684\u7740\u8272\u6548\u679c\u6e32\u67d3\u6307\u5b9a\u7684\u6b21\u6570\u3002\u57fa\u672c\u4e0a\u5c31\u662f\u4e0d\u65ad\u5730\u5207\u6362\u5e27\u7f13\u51b2\u548c\u7eb9\u7406\u53bb\u7ed8\u5236\u3002\u8fd9\u6837\u6211\u4eec\u5148\u5728\u573a\u666f\u7eb9\u7406\u7684\u7b2c\u4e00\u4e2a\u7f13\u51b2\u4e2d\u8fdb\u884c\u6a21\u7cca\uff0c\u7136\u540e\u5728\u628a\u7b2c\u4e00\u4e2a\u5e27\u7f13\u51b2\u7684\u989c\u8272\u7f13\u51b2\u653e\u8fdb\u7b2c\u4e8c\u4e2a\u5e27\u7f13\u51b2\u8fdb\u884c\u6a21\u7cca\uff0c\u63a5\u7740\uff0c\u5c06\u7b2c\u4e8c\u4e2a\u5e27\u7f13\u51b2\u7684\u989c\u8272\u7f13\u51b2\u653e\u8fdb\u7b2c\u4e00\u4e2a\uff0c\u5faa\u73af\u5f80\u590d\u3002 \u5728\u6211\u4eec\u7814\u7a76\u5e27\u7f13\u51b2\u4e4b\u524d\uff0c\u5148\u8ba8\u8bba\u9ad8\u65af\u6a21\u7cca\u7684\u50cf\u7d20\u7740\u8272\u5668\uff1a #version 330 core out vec4 FragColor; in vec2 TexCoords; uniform sampler2D image; uniform bool horizontal; uniform float weight[5] = float[] (0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216); void main() { vec2 tex_offset = 1.0 / textureSize(image, 0); // gets size of single texel vec3 result = texture(image, TexCoords).rgb * weight[0]; // current fragment's contribution if(horizontal) { for(int i = 1; i < 5; ++i) { result += texture(image, TexCoords + vec2(tex_offset.x * i, 0.0)).rgb * weight[i]; result += texture(image, TexCoords - vec2(tex_offset.x * i, 0.0)).rgb * weight[i]; } } else { for(int i = 1; i < 5; ++i) { result += texture(image, TexCoords + vec2(0.0, tex_offset.y * i)).rgb * weight[i]; result += texture(image, TexCoords - vec2(0.0, tex_offset.y * i)).rgb * weight[i]; } } FragColor = vec4(result, 1.0); } \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u6bd4\u8f83\u5c0f\u7684\u9ad8\u65af\u6743\u91cd\u505a\u4f8b\u5b50\uff0c\u6bcf\u6b21\u6211\u4eec\u7528\u5b83\u6765\u6307\u5b9a\u5f53\u524dfragment\u7684\u6c34\u5e73\u6216\u5782\u76f4\u6837\u672c\u7684\u7279\u5b9a\u6743\u91cd\u3002\u4f60\u4f1a\u53d1\u73b0\u6211\u4eec\u57fa\u672c\u4e0a\u662f\u5c06\u6a21\u7cca\u8fc7\u6ee4\u5668\u6839\u636e\u6211\u4eec\u5728uniform\u53d8\u91cfhorizontal\u8bbe\u7f6e\u7684\u503c\u5206\u5272\u4e3a\u4e00\u4e2a\u6c34\u5e73\u548c\u4e00\u4e2a\u5782\u76f4\u90e8\u5206\u3002\u901a\u8fc7\u75281.0\u9664\u4ee5\u7eb9\u7406\u7684\u5927\u5c0f\uff08\u4ecetextureSize\u5f97\u5230\u4e00\u4e2avec2\uff09\u5f97\u5230\u4e00\u4e2a\u7eb9\u7406\u50cf\u7d20\u7684\u5b9e\u9645\u5927\u5c0f\uff0c\u4ee5\u6b64\u4f5c\u4e3a\u504f\u79fb\u8ddd\u79bb\u7684\u6839\u636e\u3002 \u6211\u4eec\u4e3a\u56fe\u50cf\u7684\u6a21\u7cca\u5904\u7406\u521b\u5efa\u4e24\u4e2a\u57fa\u672c\u7684\u5e27\u7f13\u51b2\uff0c\u6bcf\u4e2a\u53ea\u6709\u4e00\u4e2a\u989c\u8272\u7f13\u51b2\u7eb9\u7406\uff1a GLuint pingpongFBO[2]; GLuint pingpongBuffer[2]; glGenFramebuffers(2, pingpongFBO); glGenTextures(2, pingpongBuffer); for (GLuint i = 0; i < 2; i++) { glBindFramebuffer(GL_FRAMEBUFFER, pingpongFBO[i]); glBindTexture(GL_TEXTURE_2D, pingpongBuffer[i]); glTexImage2D( GL_TEXTURE_2D, 0, GL_RGB16F, SCR_WIDTH, SCR_HEIGHT, 0, GL_RGB, GL_FLOAT, NULL ); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); glFramebufferTexture2D( GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, pingpongBuffer[i], 0 ); } \u5f97\u5230\u4e00\u4e2aHDR\u7eb9\u7406\u540e\uff0c\u6211\u4eec\u7528\u63d0\u53d6\u51fa\u6765\u7684\u4eae\u533a\u7eb9\u7406\u586b\u5145\u4e00\u4e2a\u5e27\u7f13\u51b2\uff0c\u7136\u540e\u5bf9\u5176\u6a21\u7cca\u5904\u740610\u6b21\uff085\u6b21\u5782\u76f45\u6b21\u6c34\u5e73\uff09\uff1a GLboolean horizontal = true, first_iteration = true; GLuint amount = 10; shaderBlur.Use(); for (GLuint i = 0; i < amount; i++) { glBindFramebuffer(GL_FRAMEBUFFER, pingpongFBO[horizontal]); glUniform1i(glGetUniformLocation(shaderBlur.Program, \"horizontal\"), horizontal); glBindTexture( GL_TEXTURE_2D, first_iteration ? colorBuffers[1] : pingpongBuffers[!horizontal] ); RenderQuad(); horizontal = !horizontal; if (first_iteration) first_iteration = false; } glBindFramebuffer(GL_FRAMEBUFFER, 0); \u6bcf\u6b21\u5faa\u73af\u6211\u4eec\u6839\u636e\u6211\u4eec\u6253\u7b97\u6e32\u67d3\u7684\u662f\u6c34\u5e73\u8fd8\u662f\u5782\u76f4\u6765\u7ed1\u5b9a\u4e24\u4e2a\u7f13\u51b2\u5176\u4e2d\u4e4b\u4e00\uff0c\u800c\u5c06\u53e6\u4e00\u4e2a\u7ed1\u5b9a\u4e3a\u7eb9\u7406\u8fdb\u884c\u6a21\u7cca\u3002\u7b2c\u4e00\u6b21\u8fed\u4ee3\uff0c\u56e0\u4e3a\u4e24\u4e2a\u989c\u8272\u7f13\u51b2\u90fd\u662f\u7a7a\u7684\u6240\u4ee5\u6211\u4eec\u968f\u610f\u7ed1\u5b9a\u4e00\u4e2a\u53bb\u8fdb\u884c\u6a21\u7cca\u5904\u7406\u3002\u91cd\u590d\u8fd9\u4e2a\u6b65\u9aa410\u6b21\uff0c\u4eae\u533a\u56fe\u50cf\u5c31\u8fdb\u884c\u4e00\u4e2a\u91cd\u590d5\u6b21\u7684\u9ad8\u65af\u6a21\u7cca\u4e86\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5bf9\u4efb\u610f\u56fe\u50cf\u8fdb\u884c\u4efb\u610f\u6b21\u6a21\u7cca\u5904\u7406\uff1b\u9ad8\u65af\u6a21\u7cca\u5faa\u73af\u6b21\u6570\u8d8a\u591a\uff0c\u6a21\u7cca\u7684\u5f3a\u5ea6\u8d8a\u5927\u3002 \u901a\u8fc7\u5bf9\u63d0\u53d6\u4eae\u533a\u7eb9\u7406\u8fdb\u884c5\u6b21\u6a21\u7cca\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u6b63\u786e\u7684\u6a21\u7cca\u7684\u573a\u666f\u4eae\u533a\u56fe\u50cf\u3002 \u6cdb\u5149\u7684\u6700\u540e\u4e00\u6b65\u662f\u628a\u6a21\u7cca\u5904\u7406\u7684\u56fe\u50cf\u548c\u573a\u666f\u539f\u6765\u7684HDR\u7eb9\u7406\u8fdb\u884c\u7ed3\u5408\u3002 \u628a\u4e24\u4e2a\u7eb9\u7406\u6df7\u5408 \u6709\u4e86\u573a\u666f\u7684HDR\u7eb9\u7406\u548c\u6a21\u7cca\u5904\u7406\u7684\u4eae\u533a\u7eb9\u7406\uff0c\u6211\u4eec\u53ea\u9700\u628a\u5b83\u4eec\u7ed3\u5408\u8d77\u6765\u5c31\u80fd\u5b9e\u73b0\u6cdb\u5149\u6216\u79f0\u5149\u6655\u6548\u679c\u4e86\u3002\u6700\u7ec8\u7684\u50cf\u7d20\u7740\u8272\u5668\uff08\u5927\u90e8\u5206\u548cHDR\u6559\u7a0b\u7528\u7684\u5dee\u4e0d\u591a\uff09\u8981\u628a\u4e24\u4e2a\u7eb9\u7406\u6df7\u5408\uff1a #version 330 core out vec4 FragColor; in vec2 TexCoords; uniform sampler2D scene; uniform sampler2D bloomBlur; uniform float exposure; void main() { const float gamma = 2.2; vec3 hdrColor = texture(scene, TexCoords).rgb; vec3 bloomColor = texture(bloomBlur, TexCoords).rgb; hdrColor += bloomColor; // additive blending // tone mapping vec3 result = vec3(1.0) - exp(-hdrColor * exposure); // also gamma correct while we're at it result = pow(result, vec3(1.0 / gamma)); FragColor = vec4(result, 1.0f); } \u8981\u6ce8\u610f\u7684\u662f\u6211\u4eec\u8981\u5728\u5e94\u7528\u8272\u8c03\u6620\u5c04\u4e4b\u524d\u6dfb\u52a0\u6cdb\u5149\u6548\u679c\u3002\u8fd9\u6837\u6dfb\u52a0\u7684\u4eae\u533a\u7684\u6cdb\u5149\uff0c\u4e5f\u4f1a\u67d4\u548c\u8f6c\u6362\u4e3aLDR\uff0c\u5149\u7167\u6548\u679c\u76f8\u5bf9\u4f1a\u66f4\u597d\u3002 \u628a\u4e24\u4e2a\u7eb9\u7406\u7ed3\u5408\u4ee5\u540e\uff0c\u573a\u666f\u4eae\u533a\u4fbf\u6709\u4e86\u5408\u9002\u7684\u5149\u6655\u7279\u6548\uff1a \u6709\u989c\u8272\u7684\u7acb\u65b9\u4f53\u770b\u8d77\u6765\u4eff\u4f5b\u66f4\u4eae\uff0c\u5b83\u5411\u5916\u53d1\u5c04\u5149\u8292\uff0c\u7684\u786e\u662f\u4e00\u4e2a\u66f4\u597d\u7684\u89c6\u89c9\u6548\u679c\u3002\u8fd9\u4e2a\u573a\u666f\u6bd4\u8f83\u7b80\u5355\uff0c\u6240\u4ee5\u6cdb\u5149\u6548\u679c\u4e0d\u7b97\u5341\u5206\u4ee4\u4eba\u77a9\u76ee\uff0c\u4f46\u5728\u66f4\u5145\u8db3\u7167\u660e\u7684\u573a\u666f\u4e2d\u5408\u7406\u914d\u7f6e\u4e4b\u540e\u6548\u679c\u4f1a\u6709\u660e\u663e\u7684\u4e0d\u540c\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u8fd9\u4e2a\u7b80\u5355\u793a\u4f8b\u7684\u6e90\u4ee3\u7801\u3002 \u8fd9\u4e2a\u6559\u7a0b\u6211\u4eec\u53ea\u662f\u7528\u4e86\u4e00\u4e2a\u76f8\u5bf9\u7b80\u5355\u7684\u9ad8\u65af\u6a21\u7cca\u8fc7\u6ee4\u5668\uff0c\u5b83\u5728\u6bcf\u4e2a\u65b9\u5411\u4e0a\u53ea\u67095\u4e2a\u6837\u672c\u3002\u901a\u8fc7\u6cbf\u7740\u66f4\u5927\u7684\u534a\u5f84\u6216\u91cd\u590d\u66f4\u591a\u6b21\u6570\u7684\u6a21\u7cca\uff0c\u8fdb\u884c\u91c7\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u63d0\u5347\u6a21\u7cca\u7684\u6548\u679c\u3002\u56e0\u4e3a\u6a21\u7cca\u7684\u8d28\u91cf\u4e0e\u6cdb\u5149\u6548\u679c\u7684\u8d28\u91cf\u6b63\u76f8\u5173\uff0c\u63d0\u5347\u6a21\u7cca\u6548\u679c\u5c31\u80fd\u591f\u63d0\u5347\u6cdb\u5149\u6548\u679c\u3002\u6709\u4e9b\u63d0\u5347\u5c06\u6a21\u7cca\u8fc7\u6ee4\u5668\u4e0e\u4e0d\u540c\u5927\u5c0f\u7684\u6a21\u7ccakernel\u6216\u91c7\u7528\u591a\u4e2a\u9ad8\u65af\u66f2\u7ebf\u6765\u9009\u62e9\u6027\u5730\u7ed3\u5408\u6743\u91cd\u7ed3\u5408\u8d77\u6765\u4f7f\u7528\u3002\u6765\u81eaKalogirou\u548cEpicGames\u7684\u9644\u52a0\u8d44\u6e90\u8ba8\u8bba\u4e86\u5982\u4f55\u901a\u8fc7\u63d0\u5347\u9ad8\u65af\u6a21\u7cca\u6765\u663e\u8457\u63d0\u5347\u6cdb\u5149\u6548\u679c\u3002 \u9644\u52a0\u8d44\u6e90 Efficient Gaussian Blur with linear sampling \uff1a\u975e\u5e38\u8be6\u7ec6\u5730\u63cf\u8ff0\u4e86\u9ad8\u65af\u6a21\u7cca\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528OpenGL\u7684\u53cc\u7ebf\u6027\u7eb9\u7406\u91c7\u6837\u63d0\u5347\u6027\u80fd\u3002 Bloom Post Process Effect \uff1a\u6765\u81eaEpic Games\u5173\u4e8e\u901a\u8fc7\u5bf9\u6743\u91cd\u7684\u591a\u4e2a\u9ad8\u65af\u66f2\u7ebf\u7ed3\u5408\u6765\u63d0\u5347\u6cdb\u5149\u6548\u679c\u7684\u6587\u7ae0\u3002 How to do good bloom for HDR rendering \uff1aKalogirou\u7684\u6587\u7ae0\u63cf\u8ff0\u4e86\u5982\u4f55\u4f7f\u7528\u66f4\u597d\u7684\u9ad8\u65af\u6a21\u7cca\u7b97\u6cd5\u6765\u63d0\u5347\u6cdb\u5149\u6548\u679c\u3002","title":"\u6cdb\u5149"},{"location":"05%20Advanced%20Lighting/07%20Bloom/#_1","text":"\u539f\u6587 Bloom \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django \u6821\u5bf9 gjy_1992, AoZhang Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u660e\u4eae\u7684\u5149\u6e90\u548c\u533a\u57df\u7ecf\u5e38\u5f88\u96be\u5411\u89c2\u5bdf\u8005\u8868\u8fbe\u51fa\u6765\uff0c\u56e0\u4e3a\u663e\u793a\u5668\u7684\u4eae\u5ea6\u8303\u56f4\u662f\u6709\u9650\u7684\u3002\u4e00\u79cd\u5728\u663e\u793a\u5668\u4e0a\u533a\u5206\u660e\u4eae\u5149\u6e90\u7684\u65b9\u5f0f\u662f\u4f7f\u5b83\u4eec\u53d1\u51fa\u5149\u8292\uff0c\u5149\u8292\u4ece\u5149\u6e90\u5411\u56db\u5468\u53d1\u6563\u3002\u8fd9\u6709\u6548\u5730\u7ed9\u89c2\u4f17\u4e00\u79cd\u8fd9\u4e9b\u5149\u6e90\u6216\u660e\u4eae\u7684\u533a\u57df\u975e\u5e38\u4eae\u7684\u9519\u89c9\u3002\uff08\u8bd1\u6ce8\uff1a\u8fd9\u4e2a\u95ee\u9898\u7684\u63d0\u51fa\u7b80\u5355\u6765\u8bf4\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u6837\u7684\u95ee\u9898\uff1a\u4f8b\u5982\u6709\u4e00\u5f20\u5728\u9633\u5149\u4e0b\u7684\u767d\u7eb8\uff0c\u767d\u7eb8\u5728\u663e\u793a\u5668\u4e0a\u663e\u793a\u51fa\u662f\u51fa\u767d\u8272\uff0c\u800c\u524d\u65b9\u7684\u592a\u9633\u4e5f\u662f\u7eaf\u767d\u8272\u7684\uff0c\u6240\u4ee5\u57fa\u672c\u4e0a\u767d\u7eb8\u548c\u592a\u9633\u5c31\u662f\u4e00\u6837\u7684\u4e86\uff0c\u7ed9\u592a\u9633\u52a0\u4e00\u4e2a\u5149\u6655\uff0c\u8fd9\u6837\u592a\u9633\u770b\u8d77\u6765\u4f3c\u4e4e\u5c31\u6bd4\u767d\u7eb8\u66f4\u4eae\u4e86\uff09 \u8fd9\u79cd\u5149\u6d41\uff0c\u6216\u53d1\u5149\u6548\u679c\uff0c\u662f\u901a\u8fc7\u4e00\u79cd\u53eb\u505a\u6cdb\u5149(Bloom)\u7684\u540e\u671f\u5904\u7406\u6548\u679c\u6765\u5b9e\u73b0\u7684\u3002\u6cdb\u5149\u4f7f\u573a\u666f\u4e2d\u6240\u6709\u660e\u4eae\u7684\u533a\u57df\u90fd\u5177\u6709\u7c7b\u4f3c\u53d1\u5149\u7684\u6548\u679c\u3002\u4e0b\u9762\u662f\u5e26\u6709\u6216\u4e0d\u5e26\u6709\u8f89\u5149\u7684\u573a\u666f\u793a\u4f8b(\u56fe\u7247\u7531Epic Games\u63d0\u4f9b)\uff1a \u6cdb\u5149\u63d0\u4f9b\u4e86\u4e00\u79cd\u9488\u5bf9\u7269\u4f53\u660e\u4eae\u5ea6\u7684\u89c6\u89c9\u6548\u679c\u3002\u5f53\u7528\u4f18\u96c5\u5fae\u5999\u7684\u65b9\u5f0f\u5b9e\u73b0\u6cdb\u5149\u6548\u679c(\u6709\u4e9b\u6e38\u620f\u5b8c\u5168\u6ca1\u80fd\u505a\u5230)\uff0c\u5c06\u4f1a\u663e\u8457\u589e\u5f3a\u60a8\u7684\u573a\u666f\u5149\u7167\u5e76\u80fd\u63d0\u4f9b\u66f4\u52a0\u6709\u5f20\u529b\u7684\u6548\u679c\u3002 \u6cdb\u5149\u548cHDR\u7ed3\u5408\u4f7f\u7528\u6548\u679c\u6700\u597d\u3002\u5f88\u591a\u4eba\u4ee5\u4e3aHDR\u548c\u6cdb\u5149\u662f\u4e00\u6837\u7684\uff0c\u8ba4\u4e3a\u4e24\u79cd\u6280\u672f\u662f\u53ef\u4ee5\u4e92\u6362\u7684\uff0c\u8fd9\u662f\u4e00\u79cd\u5e38\u89c1\u8bef\u89e3\u3002\u5b83\u4eec\u662f\u4e24\u79cd\u5b8c\u5168\u4e0d\u540c\u7684\u6280\u672f\uff0c\u7528\u4e8e\u5404\u81ea\u4e0d\u540c\u7684\u76ee\u7684\u3002\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u76848\u4f4d\u7cbe\u786e\u5ea6\u7684\u5e27\u7f13\u51b2\u6765\u5b9e\u73b0\u6cdb\u5149\u6548\u679c\uff0c\u4e5f\u53ef\u4ee5\u53ea\u4f7f\u7528HDR\u6548\u679c\u800c\u4e0d\u4f7f\u7528\u6cdb\u5149\u6548\u679c\u3002\u53ea\u4e0d\u8fc7\u5728\u6709\u4e86HDR\u4e4b\u540e\u518d\u5b9e\u73b0\u6cdb\u5149\u5c31\u66f4\u7b80\u5355\u4e86(\u6b63\u5982\u6211\u4eec\u7a0d\u540e\u4f1a\u770b\u5230\u7684)\u3002 \u4e3a\u5b9e\u73b0\u6cdb\u5149\uff0c\u6211\u4eec\u50cf\u5e73\u65f6\u90a3\u6837\u6e32\u67d3\u4e00\u4e2a\u6709\u5149\u573a\u666f\uff0c\u63d0\u53d6\u51fa\u573a\u666f\u7684HDR\u989c\u8272\u7f13\u51b2\u4ee5\u53ca\u53ea\u6709\u8fd9\u4e2a\u573a\u666f\u660e\u4eae\u533a\u57df\u53ef\u89c1\u7684\u56fe\u7247\u3002\u7136\u540e\u5bf9\u63d0\u53d6\u7684\u4eae\u5ea6\u56fe\u50cf\u8fdb\u884c\u6a21\u7cca\u5904\u7406\uff0c\u5e76\u5c06\u7ed3\u679c\u6dfb\u52a0\u5230\u539f\u59cbHDR\u573a\u666f\u56fe\u50cf\u7684\u4e0a\u9762\u3002 \u6211\u4eec\u6765\u4e00\u6b65\u4e00\u6b65\u89e3\u91ca\u8fd9\u4e2a\u5904\u7406\u8fc7\u7a0b\u3002\u6211\u4eec\u5728\u573a\u666f\u4e2d\u6e32\u67d3\u4e00\u4e2a\u5e26\u67094\u4e2a\u7acb\u65b9\u4f53\u5f62\u5f0f\u4e0d\u540c\u989c\u8272\u7684\u660e\u4eae\u7684\u5149\u6e90\u3002\u5e26\u6709\u989c\u8272\u7684\u53d1\u5149\u7acb\u65b9\u4f53\u7684\u4eae\u5ea6\u57281.5\u523015.0\u4e4b\u95f4\u3002\u5982\u679c\u6211\u4eec\u5c06\u5176\u6e32\u67d3\u81f3HDR\u989c\u8272\u7f13\u51b2\uff0c\u573a\u666f\u770b\u8d77\u6765\u4f1a\u662f\u8fd9\u6837\u7684\uff1a \u6211\u4eec\u5f97\u5230\u8fd9\u4e2aHDR\u989c\u8272\u7f13\u51b2\u7eb9\u7406\uff0c\u63d0\u53d6\u6240\u6709\u8d85\u51fa\u4e00\u5b9a\u4eae\u5ea6\u7684fragment\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u4f1a\u83b7\u5f97\u4e00\u4e2a\u53ea\u6709fragment\u8d85\u8fc7\u4e86\u4e00\u5b9a\u9608\u9650\u7684\u989c\u8272\u533a\u57df\uff1a \u6211\u4eec\u5c06\u8fd9\u4e2a\u8d85\u8fc7\u4e00\u5b9a\u4eae\u5ea6\u9608\u9650\u7684\u7eb9\u7406\u8fdb\u884c\u6a21\u7cca\u5904\u7406\u3002\u6cdb\u5149\u6548\u679c\u7684\u5f3a\u5ea6\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u7531\u6a21\u7cca\u8fc7\u6ee4\u5668\u7684\u8303\u56f4\u548c\u5f3a\u5ea6\u51b3\u5b9a\u7684\u3002 \u6700\u7ec8\u7684\u88ab\u6a21\u7cca\u5316\u7684\u7eb9\u7406\u5c31\u662f\u6211\u4eec\u7528\u6765\u83b7\u5f97\u53d1\u51fa\u5149\u6655\u6548\u679c\u7684\u4e1c\u897f\u3002\u8fd9\u4e2a\u5df2\u6a21\u7cca\u7684\u7eb9\u7406\u8981\u6dfb\u52a0\u5230\u539f\u6765\u7684HDR\u573a\u666f\u7eb9\u7406\u4e4b\u4e0a\u3002\u7531\u4e8e\u6a21\u7cca\u6ee4\u955c\u7684\u4f5c\u7528\uff0c\u660e\u4eae\u7684\u533a\u57df\u5728\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u4e0a\u90fd\u5f97\u5230\u4e86\u6269\u5c55\uff0c\u56e0\u6b64\u573a\u666f\u4e2d\u7684\u660e\u4eae\u533a\u57df\u770b\u8d77\u6765\u4f1a\u53d1\u5149\u6216\u6d41\u5149\u3002 \u6cdb\u5149\u672c\u8eab\u5e76\u4e0d\u662f\u4e2a\u590d\u6742\u7684\u6280\u672f\uff0c\u4f46\u5f88\u96be\u83b7\u5f97\u6b63\u786e\u7684\u6548\u679c\u3002\u5b83\u7684\u54c1\u8d28\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u6240\u7528\u7684\u6a21\u7cca\u8fc7\u6ee4\u5668\u7684\u8d28\u91cf\u548c\u7c7b\u578b\u3002\u7b80\u5355\u5730\u6539\u6539\u6a21\u7cca\u8fc7\u6ee4\u5668\u5c31\u4f1a\u6781\u5927\u7684\u6539\u53d8\u6cdb\u5149\u6548\u679c\u7684\u54c1\u8d28\u3002 \u4e0b\u9762\u8fd9\u51e0\u6b65\u5c31\u662f\u6cdb\u5149\u540e\u5904\u7406\u7279\u6548\u7684\u8fc7\u7a0b\uff0c\u5b83\u603b\u7ed3\u4e86\u5b9e\u73b0\u6cdb\u5149\u6240\u9700\u7684\u6b65\u9aa4\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u6839\u636e\u4e00\u5b9a\u7684\u9608\u9650\u63d0\u53d6\u6240\u6709\u660e\u4eae\u7684\u989c\u8272\u3002\u6211\u4eec\u5148\u6765\u505a\u8fd9\u4ef6\u4e8b\u3002","title":"\u6cdb\u5149"},{"location":"05%20Advanced%20Lighting/07%20Bloom/#_2","text":"\u7b2c\u4e00\u6b65\u6211\u4eec\u8981\u4ece\u6e32\u67d3\u51fa\u6765\u7684\u573a\u666f\u4e2d\u63d0\u53d6\u4e24\u5f20\u56fe\u7247\u3002\u6211\u4eec\u53ef\u4ee5\u6e32\u67d3\u573a\u666f\u4e24\u6b21\uff0c\u6bcf\u6b21\u4f7f\u7528\u4e00\u4e2a\u4e0d\u540c\u7684\u7740\u8272\u5668\u6e32\u67d3\u5230\u4e0d\u540c\u7684\u5e27\u7f13\u51b2\u4e2d\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u53eb\u505aMRT\uff08Multiple Render Targets\uff0c\u591a\u6e32\u67d3\u76ee\u6807\uff09\u7684\u5c0f\u6280\u5de7\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u6307\u5b9a\u591a\u4e2a\u50cf\u7d20\u7740\u8272\u5668\u8f93\u51fa\uff1b\u6709\u4e86\u5b83\u6211\u4eec\u8fd8\u80fd\u591f\u5728\u4e00\u4e2a\u5355\u72ec\u6e32\u67d3\u5904\u7406\u4e2d\u63d0\u53d6\u5934\u4e24\u4e2a\u56fe\u7247\u3002\u5728\u50cf\u7d20\u7740\u8272\u5668\u7684\u8f93\u51fa\u524d\uff0c\u6211\u4eec\u6307\u5b9a\u4e00\u4e2a\u5e03\u5c40location\u6807\u8bc6\u7b26\uff0c\u8fd9\u6837\u6211\u4eec\u4fbf\u53ef\u63a7\u5236\u4e00\u4e2a\u50cf\u7d20\u7740\u8272\u5668\u5199\u5165\u5230\u54ea\u4e2a\u989c\u8272\u7f13\u51b2\uff1a layout (location = 0) out vec4 FragColor; layout (location = 1) out vec4 BrightColor; \u53ea\u6709\u6211\u4eec\u771f\u7684\u5177\u6709\u591a\u4e2a\u53ef\u4f9b\u5199\u5165\u7684\u7f13\u51b2\u533a\u65f6\u8fd9\u79cd\u65b9\u5f0f\u624d\u80fd\u5de5\u4f5c\u3002\u4f7f\u7528\u591a\u4e2a\u50cf\u7d20\u7740\u8272\u5668\u8f93\u51fa\u7684\u5fc5\u8981\u6761\u4ef6\u662f\uff0c\u6709\u591a\u4e2a\u989c\u8272\u7f13\u51b2\u9644\u52a0\u5230\u4e86\u5f53\u524d\u7ed1\u5b9a\u7684\u5e27\u7f13\u51b2\u5bf9\u8c61\u4e0a\u3002\u4f60\u53ef\u80fd\u4ece \u5e27\u7f13\u51b2 \u6559\u7a0b\u90a3\u91cc\u56de\u5fc6\u8d77\uff0c\u5f53\u628a\u4e00\u4e2a\u7eb9\u7406\u94fe\u63a5\u5230\u5e27\u7f13\u51b2\u7684\u989c\u8272\u7f13\u51b2\u4e0a\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u989c\u8272\u9644\u4ef6\u3002\u76f4\u5230\u73b0\u5728\uff0c\u6211\u4eec\u4e00\u76f4\u4f7f\u7528\u7740 GL_COLOR_ATTACHMENT0 \uff0c\u4f46\u901a\u8fc7\u4f7f\u7528 GL_COLOR_ATTACHMENT1 \uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u9644\u52a0\u4e86\u4e24\u4e2a\u989c\u8272\u7f13\u51b2\u7684\u5e27\u7f13\u51b2\u5bf9\u8c61\uff1a // Set up floating point framebuffer to render scene to GLuint hdrFBO; glGenFramebuffers(1, &hdrFBO); glBindFramebuffer(GL_FRAMEBUFFER, hdrFBO); GLuint colorBuffers[2]; glGenTextures(2, colorBuffers); for (GLuint i = 0; i < 2; i++) { glBindTexture(GL_TEXTURE_2D, colorBuffers[i]); glTexImage2D( GL_TEXTURE_2D, 0, GL_RGB16F, SCR_WIDTH, SCR_HEIGHT, 0, GL_RGB, GL_FLOAT, NULL ); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); // attach texture to framebuffer glFramebufferTexture2D( GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0 + i, GL_TEXTURE_2D, colorBuffers[i], 0 ); } \u6211\u4eec\u9700\u8981\u663e\u5f0f\u544a\u77e5OpenGL\u6211\u4eec\u6b63\u5728\u901a\u8fc7glDrawBuffers\u6e32\u67d3\u5230\u591a\u4e2a\u989c\u8272\u7f13\u51b2\uff0c\u5426\u5219OpenGL\u53ea\u4f1a\u6e32\u67d3\u5230\u5e27\u7f13\u51b2\u7684\u7b2c\u4e00\u4e2a\u989c\u8272\u9644\u4ef6\uff0c\u800c\u5ffd\u7565\u6240\u6709\u5176\u4ed6\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012\u591a\u4e2a\u989c\u8272\u9644\u4ef6\u7684\u679a\u4e3e\u6765\u505a\u8fd9\u4ef6\u4e8b\uff0c\u6211\u4eec\u4ee5\u4e0b\u9762\u7684\u64cd\u4f5c\u8fdb\u884c\u6e32\u67d3\uff1a GLuint attachments[2] = { GL_COLOR_ATTACHMENT0, GL_COLOR_ATTACHMENT1 }; glDrawBuffers(2, attachments); \u5f53\u6e32\u67d3\u5230\u8fd9\u4e2a\u5e27\u7f13\u51b2\u7684\u65f6\u5019\uff0c\u4e00\u4e2a\u7740\u8272\u5668\u4f7f\u7528\u4e00\u4e2a\u5e03\u5c40location\u4fee\u9970\u7b26\uff0cfragment\u5c31\u4f1a\u5199\u5165\u5bf9\u5e94\u7684\u989c\u8272\u7f13\u51b2\u3002\u8fd9\u5f88\u68d2\uff0c\u56e0\u4e3a\u8fd9\u6837\u7701\u53bb\u4e86\u6211\u4eec\u4e3a\u63d0\u53d6\u660e\u4eae\u533a\u57df\u7684\u989d\u5916\u6e32\u67d3\u6b65\u9aa4\uff0c\u56e0\u4e3a\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u76f4\u63a5\u4ece\u5c06\u88ab\u6e32\u67d3\u7684fragment\u63d0\u53d6\u51fa\u5b83\u4eec\uff1a #version 330 core layout (location = 0) out vec4 FragColor; layout (location = 1) out vec4 BrightColor; [...] void main() { [...] // first do normal lighting calculations and output results FragColor = vec4(lighting, 1.0f); // Check whether fragment output is higher than threshold, if so output as brightness color float brightness = dot(FragColor.rgb, vec3(0.2126, 0.7152, 0.0722)); if(brightness > 1.0) BrightColor = vec4(FragColor.rgb, 1.0); } \u8fd9\u91cc\u6211\u4eec\u5148\u6b63\u5e38\u8ba1\u7b97\u5149\u7167\uff0c\u5c06\u5176\u4f20\u9012\u7ed9\u7b2c\u4e00\u4e2a\u50cf\u7d20\u7740\u8272\u5668\u7684\u8f93\u51fa\u53d8\u91cf FragColor \u3002\u7136\u540e\u6211\u4eec\u4f7f\u7528\u5f53\u524d\u50a8\u5b58\u5728 FragColor \u7684\u4e1c\u897f\u6765\u51b3\u5b9a\u5b83\u7684\u4eae\u5ea6\u662f\u5426\u8d85\u8fc7\u4e86\u4e00\u5b9a\u9608\u9650\u3002\u6211\u4eec\u9996\u5148\u901a\u8fc7\u9002\u5f53\u5730\u5c06\u5176\u8f6c\u6362\u4e3a\u7070\u5ea6\u6765\u8ba1\u7b97\u7247\u6bb5\u7684\u4eae\u5ea6(\u901a\u8fc7\u53d6\u4e24\u4e2a\u5411\u91cf\u7684\u70b9\u79ef\uff0c\u6211\u4eec\u6709\u6548\u5730\u5c06\u4e24\u4e2a\u5411\u91cf\u7684\u6bcf\u4e2a\u5355\u72ec\u5206\u91cf\u76f8\u4e58\u5e76\u5c06\u7ed3\u679c\u52a0\u5728\u4e00\u8d77)\u3002\u5982\u679c\u4eae\u5ea6\u8d85\u8fc7\u67d0\u4e2a\u9608\u503c\uff0c\u6211\u4eec\u5c06\u989c\u8272\u8f93\u51fa\u5230\u7b2c\u4e8c\u4e2a\u989c\u8272\u7f13\u51b2\u533a\u3002\u6211\u4eec\u5bf9\u5149\u7acb\u65b9\u4f53\u505a\u540c\u6837\u7684\u5904\u7406\u3002 \u8fd9\u4e5f\u8bf4\u660e\u4e86\u4e3a\u4ec0\u4e48\u6cdb\u5149\u5728HDR\u57fa\u7840\u4e0a\u80fd\u591f\u5de5\u4f5c\u5f97\u7279\u522b\u597d\u3002\u56e0\u4e3aHDR\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u989c\u8272\u503c\u6307\u5b9a\u8d85\u8fc71.0\u8fd9\u4e2a\u9ed8\u8ba4\u7684\u8303\u56f4\uff0c\u6211\u4eec\u80fd\u591f\u5f97\u5230\u5bf9\u56fe\u50cf\u4e2d\u7684\u4eae\u5ea6\u66f4\u597d\u7684\u63a7\u5236\u6743\u3002\u6ca1\u6709HDR\u6211\u4eec\u5fc5\u987b\u5c06\u9608\u9650\u8bbe\u7f6e\u4e3a\u5c0f\u4e8e1.0\u7684\u6570\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4ecd\u7136\u53ef\u884c\uff0c\u4f46\u662f\u4eae\u90e8\u5f88\u5bb9\u6613\u53d8\u5f97\u5f88\u591a\uff0c\u8fd9\u5c31\u5bfc\u81f4\u5149\u6655\u6548\u679c\u8fc7\u91cd(\u6bd4\u5982\u767d\u96ea\u7684\u5149\u6655\u6548\u679c)\u3002 \u6709\u4e86\u4e24\u4e2a\u989c\u8272\u7f13\u51b2\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u6b63\u5e38\u573a\u666f\u7684\u56fe\u50cf\u548c\u4e00\u4e2a\u63d0\u53d6\u51fa\u7684\u4eae\u533a\u7684\u56fe\u50cf\u3002\u8fd9\u4e9b\u90fd\u5728\u4e00\u4e2a\u6e32\u67d3\u6b65\u9aa4\u4e2d\u5b8c\u6210\u3002 \u6709\u4e86\u4e00\u4e2a\u63d0\u53d6\u51fa\u7684\u4eae\u533a\u56fe\u50cf\uff0c\u6211\u4eec\u73b0\u5728\u9700\u8981\u5bf9\u8be5\u56fe\u50cf\u8fdb\u884c\u6a21\u7cca\u5904\u7406\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5e27\u7f13\u51b2\u7ae0\u8282\u4e2d\u540e\u5904\u7406\u90e8\u5206\u90a3\u4e2a\u7b80\u5355\u7684\u76d2\u5b50\u8fc7\u6ee4\u5668\uff0c\u4f46\u6211\u4eec\u6700\u597d\u8fd8\u662f\u4f7f\u7528\u4e00\u4e2a\u66f4\u9ad8\u7ea7(\u4e5f\u66f4\u6f02\u4eae)\u7684\u6a21\u7cca\u8fc7\u6ee4\u5668\uff1a \u9ad8\u65af\u6a21\u7cca(Gaussian blur) \u3002","title":"\u63d0\u53d6\u4eae\u8272"},{"location":"05%20Advanced%20Lighting/07%20Bloom/#_3","text":"\u5728\u540e\u5904\u7406\u6559\u7a0b\u90a3\u91cc\uff0c\u6211\u4eec\u91c7\u7528\u7684\u6a21\u7cca\u662f\u4e00\u4e2a\u56fe\u50cf\u4e2d\u6240\u6709\u5468\u56f4\u50cf\u7d20\u7684\u5747\u503c\uff0c\u5b83\u7684\u786e\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u6613\u5b9e\u73b0\u7684\u6a21\u7cca\uff0c\u4f46\u6548\u679c\u5e76\u4e0d\u662f\u6700\u597d\u7684\u3002\u9ad8\u65af\u6a21\u7cca\u57fa\u4e8e\u9ad8\u65af\u66f2\u7ebf\uff0c\u9ad8\u65af\u66f2\u7ebf\u901a\u5e38\u88ab\u63cf\u8ff0\u4e3a\u4e00\u4e2a\u949f\u5f62\u66f2\u7ebf\uff0c\u4e2d\u95f4\u7684\u503c\u8fbe\u5230\u6700\u5927\u5316\uff0c\u968f\u7740\u8ddd\u79bb\u7684\u589e\u52a0\uff0c\u4e24\u8fb9\u7684\u503c\u4e0d\u65ad\u51cf\u5c11\u3002\u9ad8\u65af\u66f2\u7ebf\u5728\u6570\u5b66\u4e0a\u6709\u4e0d\u540c\u7684\u5f62\u5f0f\uff0c\u4f46\u662f\u901a\u5e38\u662f\u8fd9\u6837\u7684\u5f62\u72b6\uff1a \u9ad8\u65af\u66f2\u7ebf\u5728\u5b83\u7684\u4e2d\u95f4\u5904\u7684\u9762\u79ef\u6700\u5927\uff0c\u4f7f\u7528\u5b83\u7684\u503c\u4f5c\u4e3a\u6743\u91cd\u4f7f\u5f97\u8fd1\u5904\u7684\u6837\u672c\u62e5\u6709\u6700\u5927\u7684\u4f18\u5148\u6743\u3002\u6bd4\u5982\uff0c\u5982\u679c\u6211\u4eec\u4ecefragment\u768432\u00d732\u7684\u56db\u65b9\u5f62\u533a\u57df\u91c7\u6837\uff0c\u8fd9\u4e2a\u6743\u91cd\u968f\u7740\u548cfragment\u7684\u8ddd\u79bb\u53d8\u5927\u9010\u6e10\u51cf\u5c0f\uff1b\u901a\u5e38\u8fd9\u4f1a\u5f97\u5230\u66f4\u597d\u66f4\u771f\u5b9e\u7684\u6a21\u7cca\u6548\u679c\uff0c\u8fd9\u79cd\u6a21\u7cca\u53eb\u505a\u9ad8\u65af\u6a21\u7cca\u3002 \u4e3a\u4e86\u5b9e\u73b0\u9ad8\u65af\u6a21\u7cca\u8fc7\u6ee4\u5668\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u4e8c\u7ef4\u6743\u91cd\u6b63\u65b9\u5f62\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e8c\u7ef4\u9ad8\u65af\u66f2\u7ebf\u65b9\u7a0b\u4e2d\u83b7\u5f97\u6743\u91cd\u3002\u7136\u800c\u8fd9\u4e2a\u8fc7\u7a0b\u6709\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5f88\u5feb\u4f1a\u6d88\u8017\u6781\u5927\u7684\u6027\u80fd\u3002\u4ee5\u4e00\u4e2a32\u00d732\u7684\u6a21\u7ccakernel\u4e3a\u4f8b\uff0c\u6211\u4eec\u5fc5\u987b\u5bf9\u6bcf\u4e2afragment\u4ece\u4e00\u4e2a\u7eb9\u7406\u4e2d\u91c7\u68371024\u6b21\uff01 \u5e78\u8fd0\u7684\u662f\uff0c\u9ad8\u65af\u65b9\u7a0b\u6709\u4e2a\u975e\u5e38\u5de7\u5999\u7684\u7279\u6027\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u628a\u4e8c\u7ef4\u65b9\u7a0b\u5206\u89e3\u4e3a\u4e24\u4e2a\u66f4\u5c0f\u7684\u65b9\u7a0b\uff1a\u4e00\u4e2a\u63cf\u8ff0\u6c34\u5e73\u6743\u91cd\uff0c\u53e6\u4e00\u4e2a\u63cf\u8ff0\u5782\u76f4\u6743\u91cd\u3002\u6211\u4eec\u9996\u5148\u7528\u6c34\u5e73\u6743\u91cd\u5728\u6574\u4e2a\u7eb9\u7406\u4e0a\u8fdb\u884c\u6c34\u5e73\u6a21\u7cca\uff0c\u7136\u540e\u5728\u7ecf\u6539\u53d8\u7684\u7eb9\u7406\u4e0a\u8fdb\u884c\u5782\u76f4\u6a21\u7cca\u3002\u5229\u7528\u8fd9\u4e2a\u7279\u6027\uff0c\u7ed3\u679c\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u53ef\u4ee5\u8282\u7701\u96be\u4ee5\u7f6e\u4fe1\u7684\u6027\u80fd\uff0c\u56e0\u4e3a\u6211\u4eec\u73b0\u5728\u53ea\u9700\u505a32+32\u6b21\u91c7\u6837\uff0c\u4e0d\u518d\u662f1024\u4e86\uff01\u8fd9\u53eb\u505a\u4e24\u6b65\u9ad8\u65af\u6a21\u7cca\u3002 \u8fd9\u610f\u5473\u7740\u6211\u4eec\u5982\u679c\u5bf9\u4e00\u4e2a\u56fe\u50cf\u8fdb\u884c\u6a21\u7cca\u5904\u7406\uff0c\u81f3\u5c11\u9700\u8981\u4e24\u6b65\uff0c\u6700\u597d\u4f7f\u7528\u5e27\u7f13\u51b2\u5bf9\u8c61\u505a\u8fd9\u4ef6\u4e8b\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u5c06\u5b9e\u73b0\u50cf\u4e52\u4e53\u7403\u4e00\u6837\u7684\u5e27\u7f13\u51b2\u6765\u5b9e\u73b0\u9ad8\u65af\u6a21\u7cca\u3002\u5b83\u7684\u610f\u601d\u662f\uff0c\u6709\u4e00\u5bf9\u513f\u5e27\u7f13\u51b2\uff0c\u6211\u4eec\u628a\u53e6\u4e00\u4e2a\u5e27\u7f13\u51b2\u7684\u989c\u8272\u7f13\u51b2\u653e\u8fdb\u5f53\u524d\u7684\u5e27\u7f13\u51b2\u7684\u989c\u8272\u7f13\u51b2\u4e2d\uff0c\u4f7f\u7528\u4e0d\u540c\u7684\u7740\u8272\u6548\u679c\u6e32\u67d3\u6307\u5b9a\u7684\u6b21\u6570\u3002\u57fa\u672c\u4e0a\u5c31\u662f\u4e0d\u65ad\u5730\u5207\u6362\u5e27\u7f13\u51b2\u548c\u7eb9\u7406\u53bb\u7ed8\u5236\u3002\u8fd9\u6837\u6211\u4eec\u5148\u5728\u573a\u666f\u7eb9\u7406\u7684\u7b2c\u4e00\u4e2a\u7f13\u51b2\u4e2d\u8fdb\u884c\u6a21\u7cca\uff0c\u7136\u540e\u5728\u628a\u7b2c\u4e00\u4e2a\u5e27\u7f13\u51b2\u7684\u989c\u8272\u7f13\u51b2\u653e\u8fdb\u7b2c\u4e8c\u4e2a\u5e27\u7f13\u51b2\u8fdb\u884c\u6a21\u7cca\uff0c\u63a5\u7740\uff0c\u5c06\u7b2c\u4e8c\u4e2a\u5e27\u7f13\u51b2\u7684\u989c\u8272\u7f13\u51b2\u653e\u8fdb\u7b2c\u4e00\u4e2a\uff0c\u5faa\u73af\u5f80\u590d\u3002 \u5728\u6211\u4eec\u7814\u7a76\u5e27\u7f13\u51b2\u4e4b\u524d\uff0c\u5148\u8ba8\u8bba\u9ad8\u65af\u6a21\u7cca\u7684\u50cf\u7d20\u7740\u8272\u5668\uff1a #version 330 core out vec4 FragColor; in vec2 TexCoords; uniform sampler2D image; uniform bool horizontal; uniform float weight[5] = float[] (0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216); void main() { vec2 tex_offset = 1.0 / textureSize(image, 0); // gets size of single texel vec3 result = texture(image, TexCoords).rgb * weight[0]; // current fragment's contribution if(horizontal) { for(int i = 1; i < 5; ++i) { result += texture(image, TexCoords + vec2(tex_offset.x * i, 0.0)).rgb * weight[i]; result += texture(image, TexCoords - vec2(tex_offset.x * i, 0.0)).rgb * weight[i]; } } else { for(int i = 1; i < 5; ++i) { result += texture(image, TexCoords + vec2(0.0, tex_offset.y * i)).rgb * weight[i]; result += texture(image, TexCoords - vec2(0.0, tex_offset.y * i)).rgb * weight[i]; } } FragColor = vec4(result, 1.0); } \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u6bd4\u8f83\u5c0f\u7684\u9ad8\u65af\u6743\u91cd\u505a\u4f8b\u5b50\uff0c\u6bcf\u6b21\u6211\u4eec\u7528\u5b83\u6765\u6307\u5b9a\u5f53\u524dfragment\u7684\u6c34\u5e73\u6216\u5782\u76f4\u6837\u672c\u7684\u7279\u5b9a\u6743\u91cd\u3002\u4f60\u4f1a\u53d1\u73b0\u6211\u4eec\u57fa\u672c\u4e0a\u662f\u5c06\u6a21\u7cca\u8fc7\u6ee4\u5668\u6839\u636e\u6211\u4eec\u5728uniform\u53d8\u91cfhorizontal\u8bbe\u7f6e\u7684\u503c\u5206\u5272\u4e3a\u4e00\u4e2a\u6c34\u5e73\u548c\u4e00\u4e2a\u5782\u76f4\u90e8\u5206\u3002\u901a\u8fc7\u75281.0\u9664\u4ee5\u7eb9\u7406\u7684\u5927\u5c0f\uff08\u4ecetextureSize\u5f97\u5230\u4e00\u4e2avec2\uff09\u5f97\u5230\u4e00\u4e2a\u7eb9\u7406\u50cf\u7d20\u7684\u5b9e\u9645\u5927\u5c0f\uff0c\u4ee5\u6b64\u4f5c\u4e3a\u504f\u79fb\u8ddd\u79bb\u7684\u6839\u636e\u3002 \u6211\u4eec\u4e3a\u56fe\u50cf\u7684\u6a21\u7cca\u5904\u7406\u521b\u5efa\u4e24\u4e2a\u57fa\u672c\u7684\u5e27\u7f13\u51b2\uff0c\u6bcf\u4e2a\u53ea\u6709\u4e00\u4e2a\u989c\u8272\u7f13\u51b2\u7eb9\u7406\uff1a GLuint pingpongFBO[2]; GLuint pingpongBuffer[2]; glGenFramebuffers(2, pingpongFBO); glGenTextures(2, pingpongBuffer); for (GLuint i = 0; i < 2; i++) { glBindFramebuffer(GL_FRAMEBUFFER, pingpongFBO[i]); glBindTexture(GL_TEXTURE_2D, pingpongBuffer[i]); glTexImage2D( GL_TEXTURE_2D, 0, GL_RGB16F, SCR_WIDTH, SCR_HEIGHT, 0, GL_RGB, GL_FLOAT, NULL ); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); glFramebufferTexture2D( GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, pingpongBuffer[i], 0 ); } \u5f97\u5230\u4e00\u4e2aHDR\u7eb9\u7406\u540e\uff0c\u6211\u4eec\u7528\u63d0\u53d6\u51fa\u6765\u7684\u4eae\u533a\u7eb9\u7406\u586b\u5145\u4e00\u4e2a\u5e27\u7f13\u51b2\uff0c\u7136\u540e\u5bf9\u5176\u6a21\u7cca\u5904\u740610\u6b21\uff085\u6b21\u5782\u76f45\u6b21\u6c34\u5e73\uff09\uff1a GLboolean horizontal = true, first_iteration = true; GLuint amount = 10; shaderBlur.Use(); for (GLuint i = 0; i < amount; i++) { glBindFramebuffer(GL_FRAMEBUFFER, pingpongFBO[horizontal]); glUniform1i(glGetUniformLocation(shaderBlur.Program, \"horizontal\"), horizontal); glBindTexture( GL_TEXTURE_2D, first_iteration ? colorBuffers[1] : pingpongBuffers[!horizontal] ); RenderQuad(); horizontal = !horizontal; if (first_iteration) first_iteration = false; } glBindFramebuffer(GL_FRAMEBUFFER, 0); \u6bcf\u6b21\u5faa\u73af\u6211\u4eec\u6839\u636e\u6211\u4eec\u6253\u7b97\u6e32\u67d3\u7684\u662f\u6c34\u5e73\u8fd8\u662f\u5782\u76f4\u6765\u7ed1\u5b9a\u4e24\u4e2a\u7f13\u51b2\u5176\u4e2d\u4e4b\u4e00\uff0c\u800c\u5c06\u53e6\u4e00\u4e2a\u7ed1\u5b9a\u4e3a\u7eb9\u7406\u8fdb\u884c\u6a21\u7cca\u3002\u7b2c\u4e00\u6b21\u8fed\u4ee3\uff0c\u56e0\u4e3a\u4e24\u4e2a\u989c\u8272\u7f13\u51b2\u90fd\u662f\u7a7a\u7684\u6240\u4ee5\u6211\u4eec\u968f\u610f\u7ed1\u5b9a\u4e00\u4e2a\u53bb\u8fdb\u884c\u6a21\u7cca\u5904\u7406\u3002\u91cd\u590d\u8fd9\u4e2a\u6b65\u9aa410\u6b21\uff0c\u4eae\u533a\u56fe\u50cf\u5c31\u8fdb\u884c\u4e00\u4e2a\u91cd\u590d5\u6b21\u7684\u9ad8\u65af\u6a21\u7cca\u4e86\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5bf9\u4efb\u610f\u56fe\u50cf\u8fdb\u884c\u4efb\u610f\u6b21\u6a21\u7cca\u5904\u7406\uff1b\u9ad8\u65af\u6a21\u7cca\u5faa\u73af\u6b21\u6570\u8d8a\u591a\uff0c\u6a21\u7cca\u7684\u5f3a\u5ea6\u8d8a\u5927\u3002 \u901a\u8fc7\u5bf9\u63d0\u53d6\u4eae\u533a\u7eb9\u7406\u8fdb\u884c5\u6b21\u6a21\u7cca\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u6b63\u786e\u7684\u6a21\u7cca\u7684\u573a\u666f\u4eae\u533a\u56fe\u50cf\u3002 \u6cdb\u5149\u7684\u6700\u540e\u4e00\u6b65\u662f\u628a\u6a21\u7cca\u5904\u7406\u7684\u56fe\u50cf\u548c\u573a\u666f\u539f\u6765\u7684HDR\u7eb9\u7406\u8fdb\u884c\u7ed3\u5408\u3002","title":"\u9ad8\u65af\u6a21\u7cca"},{"location":"05%20Advanced%20Lighting/07%20Bloom/#_4","text":"\u6709\u4e86\u573a\u666f\u7684HDR\u7eb9\u7406\u548c\u6a21\u7cca\u5904\u7406\u7684\u4eae\u533a\u7eb9\u7406\uff0c\u6211\u4eec\u53ea\u9700\u628a\u5b83\u4eec\u7ed3\u5408\u8d77\u6765\u5c31\u80fd\u5b9e\u73b0\u6cdb\u5149\u6216\u79f0\u5149\u6655\u6548\u679c\u4e86\u3002\u6700\u7ec8\u7684\u50cf\u7d20\u7740\u8272\u5668\uff08\u5927\u90e8\u5206\u548cHDR\u6559\u7a0b\u7528\u7684\u5dee\u4e0d\u591a\uff09\u8981\u628a\u4e24\u4e2a\u7eb9\u7406\u6df7\u5408\uff1a #version 330 core out vec4 FragColor; in vec2 TexCoords; uniform sampler2D scene; uniform sampler2D bloomBlur; uniform float exposure; void main() { const float gamma = 2.2; vec3 hdrColor = texture(scene, TexCoords).rgb; vec3 bloomColor = texture(bloomBlur, TexCoords).rgb; hdrColor += bloomColor; // additive blending // tone mapping vec3 result = vec3(1.0) - exp(-hdrColor * exposure); // also gamma correct while we're at it result = pow(result, vec3(1.0 / gamma)); FragColor = vec4(result, 1.0f); } \u8981\u6ce8\u610f\u7684\u662f\u6211\u4eec\u8981\u5728\u5e94\u7528\u8272\u8c03\u6620\u5c04\u4e4b\u524d\u6dfb\u52a0\u6cdb\u5149\u6548\u679c\u3002\u8fd9\u6837\u6dfb\u52a0\u7684\u4eae\u533a\u7684\u6cdb\u5149\uff0c\u4e5f\u4f1a\u67d4\u548c\u8f6c\u6362\u4e3aLDR\uff0c\u5149\u7167\u6548\u679c\u76f8\u5bf9\u4f1a\u66f4\u597d\u3002 \u628a\u4e24\u4e2a\u7eb9\u7406\u7ed3\u5408\u4ee5\u540e\uff0c\u573a\u666f\u4eae\u533a\u4fbf\u6709\u4e86\u5408\u9002\u7684\u5149\u6655\u7279\u6548\uff1a \u6709\u989c\u8272\u7684\u7acb\u65b9\u4f53\u770b\u8d77\u6765\u4eff\u4f5b\u66f4\u4eae\uff0c\u5b83\u5411\u5916\u53d1\u5c04\u5149\u8292\uff0c\u7684\u786e\u662f\u4e00\u4e2a\u66f4\u597d\u7684\u89c6\u89c9\u6548\u679c\u3002\u8fd9\u4e2a\u573a\u666f\u6bd4\u8f83\u7b80\u5355\uff0c\u6240\u4ee5\u6cdb\u5149\u6548\u679c\u4e0d\u7b97\u5341\u5206\u4ee4\u4eba\u77a9\u76ee\uff0c\u4f46\u5728\u66f4\u5145\u8db3\u7167\u660e\u7684\u573a\u666f\u4e2d\u5408\u7406\u914d\u7f6e\u4e4b\u540e\u6548\u679c\u4f1a\u6709\u660e\u663e\u7684\u4e0d\u540c\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u8fd9\u4e2a\u7b80\u5355\u793a\u4f8b\u7684\u6e90\u4ee3\u7801\u3002 \u8fd9\u4e2a\u6559\u7a0b\u6211\u4eec\u53ea\u662f\u7528\u4e86\u4e00\u4e2a\u76f8\u5bf9\u7b80\u5355\u7684\u9ad8\u65af\u6a21\u7cca\u8fc7\u6ee4\u5668\uff0c\u5b83\u5728\u6bcf\u4e2a\u65b9\u5411\u4e0a\u53ea\u67095\u4e2a\u6837\u672c\u3002\u901a\u8fc7\u6cbf\u7740\u66f4\u5927\u7684\u534a\u5f84\u6216\u91cd\u590d\u66f4\u591a\u6b21\u6570\u7684\u6a21\u7cca\uff0c\u8fdb\u884c\u91c7\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u63d0\u5347\u6a21\u7cca\u7684\u6548\u679c\u3002\u56e0\u4e3a\u6a21\u7cca\u7684\u8d28\u91cf\u4e0e\u6cdb\u5149\u6548\u679c\u7684\u8d28\u91cf\u6b63\u76f8\u5173\uff0c\u63d0\u5347\u6a21\u7cca\u6548\u679c\u5c31\u80fd\u591f\u63d0\u5347\u6cdb\u5149\u6548\u679c\u3002\u6709\u4e9b\u63d0\u5347\u5c06\u6a21\u7cca\u8fc7\u6ee4\u5668\u4e0e\u4e0d\u540c\u5927\u5c0f\u7684\u6a21\u7ccakernel\u6216\u91c7\u7528\u591a\u4e2a\u9ad8\u65af\u66f2\u7ebf\u6765\u9009\u62e9\u6027\u5730\u7ed3\u5408\u6743\u91cd\u7ed3\u5408\u8d77\u6765\u4f7f\u7528\u3002\u6765\u81eaKalogirou\u548cEpicGames\u7684\u9644\u52a0\u8d44\u6e90\u8ba8\u8bba\u4e86\u5982\u4f55\u901a\u8fc7\u63d0\u5347\u9ad8\u65af\u6a21\u7cca\u6765\u663e\u8457\u63d0\u5347\u6cdb\u5149\u6548\u679c\u3002","title":"\u628a\u4e24\u4e2a\u7eb9\u7406\u6df7\u5408"},{"location":"05%20Advanced%20Lighting/07%20Bloom/#_5","text":"Efficient Gaussian Blur with linear sampling \uff1a\u975e\u5e38\u8be6\u7ec6\u5730\u63cf\u8ff0\u4e86\u9ad8\u65af\u6a21\u7cca\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528OpenGL\u7684\u53cc\u7ebf\u6027\u7eb9\u7406\u91c7\u6837\u63d0\u5347\u6027\u80fd\u3002 Bloom Post Process Effect \uff1a\u6765\u81eaEpic Games\u5173\u4e8e\u901a\u8fc7\u5bf9\u6743\u91cd\u7684\u591a\u4e2a\u9ad8\u65af\u66f2\u7ebf\u7ed3\u5408\u6765\u63d0\u5347\u6cdb\u5149\u6548\u679c\u7684\u6587\u7ae0\u3002 How to do good bloom for HDR rendering \uff1aKalogirou\u7684\u6587\u7ae0\u63cf\u8ff0\u4e86\u5982\u4f55\u4f7f\u7528\u66f4\u597d\u7684\u9ad8\u65af\u6a21\u7cca\u7b97\u6cd5\u6765\u63d0\u5347\u6cdb\u5149\u6548\u679c\u3002","title":"\u9644\u52a0\u8d44\u6e90"},{"location":"05%20Advanced%20Lighting/08%20Deferred%20Shading/","text":"\u5ef6\u8fdf\u7740\u8272\u6cd5 \u539f\u6587 Deferred Shading \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 KenLee Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u6211\u4eec\u73b0\u5728\u4e00\u76f4\u4f7f\u7528\u7684\u5149\u7167\u65b9\u5f0f\u53eb\u505a \u6b63\u5411\u6e32\u67d3(Forward Rendering) \u6216\u8005 \u6b63\u5411\u7740\u8272\u6cd5(Forward Shading) \uff0c\u5b83\u662f\u6211\u4eec\u6e32\u67d3\u7269\u4f53\u7684\u4e00\u79cd\u975e\u5e38\u76f4\u63a5\u7684\u65b9\u5f0f\uff0c\u5728\u573a\u666f\u4e2d\u6211\u4eec\u6839\u636e\u6240\u6709\u5149\u6e90\u7167\u4eae\u4e00\u4e2a\u7269\u4f53\uff0c\u4e4b\u540e\u518d\u6e32\u67d3\u4e0b\u4e00\u4e2a\u7269\u4f53\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u5b83\u975e\u5e38\u5bb9\u6613\u7406\u89e3\uff0c\u4e5f\u5f88\u5bb9\u6613\u5b9e\u73b0\uff0c\u4f46\u662f\u540c\u65f6\u5b83\u5bf9\u7a0b\u5e8f\u6027\u80fd\u7684\u5f71\u54cd\u4e5f\u5f88\u5927\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u9700\u8981\u6e32\u67d3\u7684\u7269\u4f53\uff0c\u7a0b\u5e8f\u90fd\u8981\u5bf9\u6bcf\u4e00\u4e2a\u5149\u6e90\u6bcf\u4e00\u4e2a\u9700\u8981\u6e32\u67d3\u7684\u7247\u6bb5\u8fdb\u884c\u8fed\u4ee3\uff0c\u8fd9\u662f \u975e\u5e38 \u591a\u7684\uff01\u56e0\u4e3a\u5927\u90e8\u5206\u7247\u6bb5\u7740\u8272\u5668\u7684\u8f93\u51fa\u90fd\u4f1a\u88ab\u4e4b\u540e\u7684\u8f93\u51fa\u8986\u76d6\uff0c\u6b63\u5411\u6e32\u67d3\u8fd8\u4f1a\u5728\u573a\u666f\u4e2d\u56e0\u4e3a\u9ad8\u6df1\u7684\u590d\u6742\u5ea6(\u591a\u4e2a\u7269\u4f53\u91cd\u5408\u5728\u4e00\u4e2a\u50cf\u7d20\u4e0a)\u6d6a\u8d39\u5927\u91cf\u7684\u7247\u6bb5\u7740\u8272\u5668\u8fd0\u884c\u65f6\u95f4\u3002 \u5ef6\u8fdf\u7740\u8272\u6cd5(Deferred Shading) \uff0c \u6216\u8005\u8bf4\u662f\u5ef6\u8fdf\u6e32\u67d3(Deferred Rendering) \uff0c\u4e3a\u4e86\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u800c\u8bde\u751f\u4e86\uff0c\u5b83\u5927\u5e45\u5ea6\u5730\u6539\u53d8\u4e86\u6211\u4eec\u6e32\u67d3\u7269\u4f53\u7684\u65b9\u5f0f\u3002\u8fd9\u7ed9\u6211\u4eec\u4f18\u5316\u62e5\u6709\u5927\u91cf\u5149\u6e90\u7684\u573a\u666f\u63d0\u4f9b\u4e86\u5f88\u591a\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u5b83\u80fd\u591f\u5728\u6e32\u67d3\u4e0a\u767e\u751a\u81f3\u4e0a\u5343\u5149\u6e90\u7684\u540c\u65f6\u8fd8\u80fd\u591f\u4fdd\u6301\u80fd\u8ba9\u4eba\u63a5\u53d7\u7684\u5e27\u7387\u3002\u4e0b\u9762\u8fd9\u5f20\u56fe\u7247\u5305\u542b\u4e86\u4e00\u51711874\u4e2a\u70b9\u5149\u6e90\uff0c\u5b83\u662f\u4f7f\u7528\u5ef6\u8fdf\u7740\u8272\u6cd5\u6765\u5b8c\u6210\u7684\uff0c\u800c\u8fd9\u5bf9\u4e8e\u6b63\u5411\u6e32\u67d3\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684(\u56fe\u7247\u6765\u6e90\uff1aHannes Nevalainen)\u3002 \u5ef6\u8fdf\u7740\u8272\u6cd5\u57fa\u4e8e\u6211\u4eec \u5ef6\u8fdf(Defer) \u6216 \u63a8\u8fdf(Postpone) \u5927\u90e8\u5206\u8ba1\u7b97\u91cf\u975e\u5e38\u5927\u7684\u6e32\u67d3(\u50cf\u662f\u5149\u7167)\u5230\u540e\u671f\u8fdb\u884c\u5904\u7406\u7684\u60f3\u6cd5\u3002\u5b83\u5305\u542b\u4e24\u4e2a\u5904\u7406\u9636\u6bb5(Pass)\uff1a\u5728\u7b2c\u4e00\u4e2a\u51e0\u4f55\u5904\u7406\u9636\u6bb5(Geometry Pass)\u4e2d\uff0c\u6211\u4eec\u5148\u6e32\u67d3\u573a\u666f\u4e00\u6b21\uff0c\u4e4b\u540e\u83b7\u53d6\u5bf9\u8c61\u7684\u5404\u79cd\u51e0\u4f55\u4fe1\u606f\uff0c\u5e76\u50a8\u5b58\u5728\u4e00\u7cfb\u5217\u53eb\u505aG\u7f13\u51b2(G-buffer)\u7684\u7eb9\u7406\u4e2d\uff1b\u60f3\u60f3\u4f4d\u7f6e\u5411\u91cf(Position Vector)\u3001\u989c\u8272\u5411\u91cf(Color Vector)\u3001\u6cd5\u5411\u91cf(Normal Vector)\u548c/\u6216\u955c\u9762\u503c(Specular Value)\u3002\u573a\u666f\u4e2d\u8fd9\u4e9b\u50a8\u5b58\u5728G\u7f13\u51b2\u4e2d\u7684\u51e0\u4f55\u4fe1\u606f\u5c06\u4f1a\u5728\u4e4b\u540e\u7528\u6765\u505a(\u66f4\u590d\u6742\u7684)\u5149\u7167\u8ba1\u7b97\u3002\u4e0b\u9762\u662f\u4e00\u5e27\u4e2dG\u7f13\u51b2\u7684\u5185\u5bb9\uff1a \u6211\u4eec\u4f1a\u5728\u7b2c\u4e8c\u4e2a\u5149\u7167\u5904\u7406\u9636\u6bb5(Lighting Pass)\u4e2d\u4f7f\u7528G\u7f13\u51b2\u5185\u7684\u7eb9\u7406\u6570\u636e\u3002\u5728\u5149\u7167\u5904\u7406\u9636\u6bb5\u4e2d\uff0c\u6211\u4eec\u6e32\u67d3\u4e00\u4e2a\u5c4f\u5e55\u5927\u5c0f\u7684\u65b9\u5f62\uff0c\u5e76\u4f7f\u7528G\u7f13\u51b2\u4e2d\u7684\u51e0\u4f55\u6570\u636e\u5bf9\u6bcf\u4e00\u4e2a\u7247\u6bb5\u8ba1\u7b97\u573a\u666f\u7684\u5149\u7167\uff1b\u5728\u6bcf\u4e2a\u50cf\u7d20\u4e2d\u6211\u4eec\u90fd\u4f1a\u5bf9G\u7f13\u51b2\u8fdb\u884c\u8fed\u4ee3\u3002\u6211\u4eec\u5bf9\u4e8e\u6e32\u67d3\u8fc7\u7a0b\u8fdb\u884c\u89e3\u8026\uff0c\u5c06\u5b83\u9ad8\u7ea7\u7684\u7247\u6bb5\u5904\u7406\u632a\u5230\u540e\u671f\u8fdb\u884c\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5c06\u6bcf\u4e2a\u5bf9\u8c61\u4ece\u9876\u70b9\u7740\u8272\u5668\u5e26\u5230\u7247\u6bb5\u7740\u8272\u5668\u3002\u5149\u7167\u8ba1\u7b97\u8fc7\u7a0b\u8fd8\u662f\u548c\u6211\u4eec\u4ee5\u524d\u4e00\u6837\uff0c\u4f46\u662f\u73b0\u5728\u6211\u4eec\u9700\u8981\u4ece\u5bf9\u5e94\u7684G\u7f13\u51b2\u800c\u4e0d\u662f\u9876\u70b9\u7740\u8272\u5668(\u548c\u4e00\u4e9buniform\u53d8\u91cf)\u90a3\u91cc\u83b7\u53d6\u8f93\u5165\u53d8\u91cf\u4e86\u3002 \u4e0b\u9762\u8fd9\u5e45\u56fe\u7247\u5f88\u597d\u5730\u5c55\u793a\u4e86\u5ef6\u8fdf\u7740\u8272\u6cd5\u7684\u6574\u4e2a\u8fc7\u7a0b\uff1a \u8fd9\u79cd\u6e32\u67d3\u65b9\u6cd5\u4e00\u4e2a\u5f88\u5927\u7684\u597d\u5904\u5c31\u662f\u80fd\u4fdd\u8bc1\u5728G\u7f13\u51b2\u4e2d\u7684\u7247\u6bb5\u548c\u5728\u5c4f\u5e55\u4e0a\u5448\u73b0\u7684\u50cf\u7d20\u6240\u5305\u542b\u7684\u7247\u6bb5\u4fe1\u606f\u662f\u4e00\u6837\u7684\uff0c\u56e0\u4e3a\u6df1\u5ea6\u6d4b\u8bd5\u5df2\u7ecf\u6700\u7ec8\u5c06\u8fd9\u91cc\u7684\u7247\u6bb5\u4fe1\u606f\u4f5c\u4e3a\u6700\u9876\u5c42\u7684\u7247\u6bb5\u3002\u8fd9\u6837\u4fdd\u8bc1\u4e86\u5bf9\u4e8e\u5728\u5149\u7167\u5904\u7406\u9636\u6bb5\u4e2d\u5904\u7406\u7684\u6bcf\u4e00\u4e2a\u50cf\u7d20\u90fd\u53ea\u5904\u7406\u4e00\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u80fd\u591f\u7701\u4e0b\u5f88\u591a\u65e0\u7528\u7684\u6e32\u67d3\u8c03\u7528\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5ef6\u8fdf\u6e32\u67d3\u8fd8\u5141\u8bb8\u6211\u4eec\u505a\u66f4\u591a\u7684\u4f18\u5316\uff0c\u4ece\u800c\u6e32\u67d3\u66f4\u591a\u7684\u5149\u6e90\u3002 \u5f53\u7136\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u5e26\u6765\u51e0\u4e2a\u7f3a\u9677\uff0c \u7531\u4e8eG\u7f13\u51b2\u8981\u6c42\u6211\u4eec\u5728\u7eb9\u7406\u989c\u8272\u7f13\u51b2\u4e2d\u5b58\u50a8\u76f8\u5bf9\u6bd4\u8f83\u5927\u7684\u573a\u666f\u6570\u636e\uff0c\u8fd9\u4f1a\u6d88\u8017\u6bd4\u8f83\u591a\u7684\u663e\u5b58\uff0c\u5c24\u5176\u662f\u7c7b\u4f3c\u4f4d\u7f6e\u5411\u91cf\u4e4b\u7c7b\u7684\u9700\u8981\u9ad8\u7cbe\u5ea6\u7684\u573a\u666f\u6570\u636e\u3002 \u53e6\u5916\u4e00\u4e2a\u7f3a\u70b9\u5c31\u662f\u4ed6\u4e0d\u652f\u6301\u6df7\u8272(\u56e0\u4e3a\u6211\u4eec\u53ea\u6709\u6700\u524d\u9762\u7684\u7247\u6bb5\u4fe1\u606f)\uff0c \u56e0\u6b64\u4e5f\u4e0d\u80fd\u4f7f\u7528MSAA\u4e86\u3002\u9488\u5bf9\u8fd9\u51e0\u4e2a\u95ee\u9898\u6211\u4eec\u53ef\u4ee5\u505a\u4e00\u4e9b\u53d8\u901a\u6765\u514b\u670d\u8fd9\u4e9b\u7f3a\u70b9\uff0c\u8fd9\u4e9b\u6211\u4eec\u7559\u4f1a\u5728\u6559\u7a0b\u7684\u6700\u540e\u8ba8\u8bba\u3002 \u5728\u51e0\u4f55\u5904\u7406\u9636\u6bb5\u4e2d\u586b\u5145G\u7f13\u51b2\u975e\u5e38\u9ad8\u6548\uff0c\u56e0\u4e3a\u6211\u4eec\u76f4\u63a5\u50a8\u5b58\u50cf\u7d20\u4f4d\u7f6e\uff0c\u989c\u8272\u6216\u8005\u662f\u6cd5\u7ebf\u7b49\u5bf9\u8c61\u4fe1\u606f\u5230\u5e27\u7f13\u51b2\u4e2d\uff0c\u800c\u8fd9\u51e0\u4e4e\u4e0d\u4f1a\u6d88\u8017\u5904\u7406\u65f6\u95f4\u3002\u5728\u6b64\u57fa\u7840\u4e0a\u4f7f\u7528\u591a\u6e32\u67d3\u76ee\u6807(Multiple Render Targets, MRT)\u6280\u672f\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u5728\u4e00\u4e2a\u6e32\u67d3\u5904\u7406\u4e4b\u5185\u5b8c\u6210\u8fd9\u6240\u6709\u7684\u5de5\u4f5c\u3002 G\u7f13\u51b2 G\u7f13\u51b2(G-buffer)\u662f\u5bf9\u6240\u6709\u7528\u6765\u50a8\u5b58\u5149\u7167\u76f8\u5173\u7684\u6570\u636e\uff0c\u5e76\u5728\u6700\u540e\u7684\u5149\u7167\u5904\u7406\u9636\u6bb5\u4e2d\u4f7f\u7528\u7684\u6240\u6709\u7eb9\u7406\u7684\u603b\u79f0\u3002\u8d81\u6b64\u673a\u4f1a\uff0c\u8ba9\u6211\u4eec\u987a\u4fbf\u590d\u4e60\u4e00\u4e0b\u5728\u6b63\u5411\u6e32\u67d3\u4e2d\u7167\u4eae\u4e00\u4e2a\u7247\u6bb5\u6240\u9700\u8981\u7684\u6240\u6709\u6570\u636e\uff1a \u4e00\u4e2a3D \u4f4d\u7f6e \u5411\u91cf\u6765\u8ba1\u7b97(\u63d2\u503c)\u7247\u6bb5\u4f4d\u7f6e\u53d8\u91cf\u4f9b lightDir \u548c viewDir \u4f7f\u7528 \u4e00\u4e2aRGB\u6f2b\u53cd\u5c04 \u989c\u8272 \u5411\u91cf\uff0c\u4e5f\u5c31\u662f\u53cd\u7167\u7387(Albedo) \u4e00\u4e2a3D \u6cd5 \u5411\u91cf\u6765\u5224\u65ad\u5e73\u9762\u7684\u659c\u7387 \u4e00\u4e2a\u955c\u9762\u5f3a\u5ea6(Specular Intensity)\u6d6e\u70b9\u503c \u6240\u6709\u5149\u6e90\u7684\u4f4d\u7f6e\u548c\u989c\u8272\u5411\u91cf \u73a9\u5bb6\u6216\u8005\u89c2\u5bdf\u8005\u7684\u4f4d\u7f6e\u5411\u91cf \u6709\u4e86\u8fd9\u4e9b(\u9010\u7247\u6bb5)\u53d8\u91cf\u7684\u5904\u7f6e\u6743\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u8ba1\u7b97\u6211\u4eec\u5f88\u719f\u6089\u7684(\u5e03\u6797-)\u98ce\u6c0f\u5149\u7167(Blinn-Phong Lighting)\u4e86\u3002\u5149\u6e90\u7684\u4f4d\u7f6e\uff0c\u989c\u8272\uff0c\u548c\u73a9\u5bb6\u7684\u89c2\u5bdf\u4f4d\u7f6e\u53ef\u4ee5\u901a\u8fc7uniform\u53d8\u91cf\u6765\u8bbe\u7f6e\uff0c\u4f46\u662f\u5176\u5b83\u53d8\u91cf\u5bf9\u4e8e\u6bcf\u4e2a\u5bf9\u8c61\u7684\u7247\u6bb5\u90fd\u662f\u4e0d\u540c\u7684\u3002\u5982\u679c\u6211\u4eec\u80fd\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4f20\u8f93\u5b8c\u5168\u76f8\u540c\u7684\u6570\u636e\u5230\u6700\u7ec8\u7684\u5ef6\u8fdf\u5149\u7167\u5904\u7406\u9636\u6bb5\u4e2d\uff0c\u6211\u4eec\u5c31\u80fd\u8ba1\u7b97\u4e0e\u4e4b\u524d\u76f8\u540c\u7684\u5149\u7167\u6548\u679c\u4e86\uff0c\u5c3d\u7ba1\u6211\u4eec\u53ea\u662f\u5728\u6e32\u67d3\u4e00\u4e2a2D\u65b9\u5f62\u7684\u7247\u6bb5\u3002 OpenGL\u5e76\u6ca1\u6709\u9650\u5236\u6211\u4eec\u80fd\u5728\u7eb9\u7406\u4e2d\u80fd\u5b58\u50a8\u7684\u4e1c\u897f\uff0c\u6240\u4ee5\u73b0\u5728\u4f60\u5e94\u8be5\u6e05\u695a\u5728\u4e00\u4e2a\u6216\u591a\u4e2a\u5c4f\u5e55\u5927\u5c0f\u7684\u7eb9\u7406\u4e2d\u50a8\u5b58\u6240\u6709\u9010\u7247\u6bb5\u6570\u636e\u5e76\u5728\u4e4b\u540e\u5149\u7167\u5904\u7406\u9636\u6bb5\u4e2d\u4f7f\u7528\u7684\u53ef\u884c\u6027\u4e86\u3002\u56e0\u4e3aG\u7f13\u51b2\u7eb9\u7406\u5c06\u4f1a\u548c\u5149\u7167\u5904\u7406\u9636\u6bb5\u4e2d\u76842D\u65b9\u5f62\u4e00\u6837\u5927\uff0c\u6211\u4eec\u4f1a\u83b7\u5f97\u548c\u6b63\u5411\u6e32\u67d3\u8bbe\u7f6e\u5b8c\u5168\u4e00\u6837\u7684\u7247\u6bb5\u6570\u636e\uff0c\u4f46\u5728\u5149\u7167\u5904\u7406\u9636\u6bb5\u8fd9\u91cc\u662f\u4e00\u5bf9\u4e00\u6620\u5c04\u3002 \u6574\u4e2a\u8fc7\u7a0b\u5728\u4f2a\u4ee3\u7801\u4e2d\u4f1a\u662f\u8fd9\u6837\u7684\uff1a while(...) // \u6e38\u620f\u5faa\u73af { // 1. \u51e0\u4f55\u5904\u7406\u9636\u6bb5\uff1a\u6e32\u67d3\u6240\u6709\u7684\u51e0\u4f55/\u989c\u8272\u6570\u636e\u5230G\u7f13\u51b2 glBindFramebuffer(GL_FRAMEBUFFER, gBuffer); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); gBufferShader.Use(); for(Object obj : Objects) { ConfigureShaderTransformsAndUniforms(); obj.Draw(); } // 2. \u5149\u7167\u5904\u7406\u9636\u6bb5\uff1a\u4f7f\u7528G\u7f13\u51b2\u8ba1\u7b97\u573a\u666f\u7684\u5149\u7167 glBindFramebuffer(GL_FRAMEBUFFER, 0); glClear(GL_COLOR_BUFFER_BIT); lightingPassShader.Use(); BindAllGBufferTextures(); SetLightingUniforms(); RenderQuad(); } \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7247\u6bb5\u6211\u4eec\u9700\u8981\u50a8\u5b58\u7684\u6570\u636e\u6709\uff1a\u4e00\u4e2a \u4f4d\u7f6e \u5411\u91cf\u3001\u4e00\u4e2a \u6cd5 \u5411\u91cf\uff0c\u4e00\u4e2a \u989c\u8272 \u5411\u91cf\uff0c\u4e00\u4e2a\u955c\u9762\u5f3a\u5ea6\u503c\u3002\u6240\u4ee5\u6211\u4eec\u5728\u51e0\u4f55\u5904\u7406\u9636\u6bb5\u4e2d\u9700\u8981\u6e32\u67d3\u573a\u666f\u4e2d\u6240\u6709\u7684\u5bf9\u8c61\u5e76\u50a8\u5b58\u8fd9\u4e9b\u6570\u636e\u5206\u91cf\u5230G\u7f13\u51b2\u4e2d\u3002\u6211\u4eec\u53ef\u4ee5\u518d\u6b21\u4f7f\u7528 \u591a\u6e32\u67d3\u76ee\u6807(Multiple Render Targets) \u6765\u5728\u4e00\u4e2a\u6e32\u67d3\u5904\u7406\u4e4b\u5185\u6e32\u67d3\u591a\u4e2a\u989c\u8272\u7f13\u51b2\uff0c\u5728\u4e4b\u524d\u7684 \u6cdb\u5149\u6559\u7a0b \u4e2d\u6211\u4eec\u4e5f\u7b80\u5355\u5730\u63d0\u53ca\u4e86\u5b83\u3002 \u5bf9\u4e8e\u51e0\u4f55\u6e32\u67d3\u5904\u7406\u9636\u6bb5\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u521d\u59cb\u5316\u4e00\u4e2a\u5e27\u7f13\u51b2\u5bf9\u8c61\uff0c\u6211\u4eec\u5f88\u76f4\u89c2\u7684\u79f0\u5b83\u4e3a gBuffer \uff0c\u5b83\u5305\u542b\u4e86\u591a\u4e2a\u989c\u8272\u7f13\u51b2\u548c\u4e00\u4e2a\u5355\u72ec\u7684\u6df1\u5ea6\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61(Depth Renderbuffer Object)\u3002\u5bf9\u4e8e\u4f4d\u7f6e\u548c\u6cd5\u5411\u91cf\u7684\u7eb9\u7406\uff0c\u6211\u4eec\u5e0c\u671b\u4f7f\u7528\u9ad8\u7cbe\u5ea6\u7684\u7eb9\u7406(\u6bcf\u5206\u91cf16\u621632\u4f4d\u7684\u6d6e\u70b9\u6570)\uff0c\u800c\u5bf9\u4e8e\u53cd\u7167\u7387\u548c\u955c\u9762\u503c\uff0c\u4f7f\u7528\u9ed8\u8ba4\u7684\u7eb9\u7406(\u6bcf\u5206\u91cf8\u4f4d\u6d6e\u70b9\u6570)\u5c31\u591f\u4e86\u3002 GLuint gBuffer; glGenFramebuffers(1, &gBuffer); glBindFramebuffer(GL_FRAMEBUFFER, gBuffer); GLuint gPosition, gNormal, gColorSpec; // - \u4f4d\u7f6e\u989c\u8272\u7f13\u51b2 glGenTextures(1, &gPosition); glBindTexture(GL_TEXTURE_2D, gPosition); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB16F, SCR_WIDTH, SCR_HEIGHT, 0, GL_RGB, GL_FLOAT, NULL); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, gPosition, 0 // - \u6cd5\u7ebf\u989c\u8272\u7f13\u51b2 glGenTextures(1, &gNormal); glBindTexture(GL_TEXTURE_2D, gNormal); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB16F, SCR_WIDTH, SCR_HEIGHT, 0, GL_RGB, GL_FLOAT, NULL); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT1, GL_TEXTURE_2D, gNormal, 0); // - \u989c\u8272 + \u955c\u9762\u989c\u8272\u7f13\u51b2 glGenTextures(1, &gAlbedoSpec); glBindTexture(GL_TEXTURE_2D, gAlbedoSpec); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, SCR_WIDTH, SCR_HEIGHT, 0, GL_RGBA, GL_FLOAT, NULL); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT2, GL_TEXTURE_2D, gAlbedoSpec, 0); // - \u544a\u8bc9OpenGL\u6211\u4eec\u5c06\u8981\u4f7f\u7528(\u5e27\u7f13\u51b2\u7684)\u54ea\u79cd\u989c\u8272\u9644\u4ef6\u6765\u8fdb\u884c\u6e32\u67d3 GLuint attachments[3] = { GL_COLOR_ATTACHMENT0, GL_COLOR_ATTACHMENT1, GL_COLOR_ATTACHMENT2 }; glDrawBuffers(3, attachments); // \u4e4b\u540e\u540c\u6837\u6dfb\u52a0\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61(Render Buffer Object)\u4e3a\u6df1\u5ea6\u7f13\u51b2(Depth Buffer)\uff0c\u5e76\u68c0\u67e5\u5b8c\u6574\u6027 [...] \u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u4e86\u591a\u6e32\u67d3\u76ee\u6807\uff0c\u6211\u4eec\u9700\u8981\u663e\u5f0f\u544a\u8bc9OpenGL\u6211\u4eec\u9700\u8981\u4f7f\u7528 glDrawBuffers \u6e32\u67d3\u7684\u662f\u548c GBuffer \u5173\u8054\u7684\u54ea\u4e2a\u989c\u8272\u7f13\u51b2\u3002\u540c\u6837\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u4f7f\u7528RGB\u7eb9\u7406\u6765\u50a8\u5b58\u4f4d\u7f6e\u548c\u6cd5\u7ebf\u7684\u6570\u636e\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5bf9\u8c61\u53ea\u6709\u4e09\u4e2a\u5206\u91cf\uff1b\u4f46\u662f\u6211\u4eec\u5c06\u989c\u8272\u548c\u955c\u9762\u5f3a\u5ea6\u6570\u636e\u5408\u5e76\u5230\u4e00\u8d77\uff0c\u5b58\u50a8\u5230\u4e00\u4e2a\u5355\u72ec\u7684RGBA\u7eb9\u7406\u91cc\u9762\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u58f0\u660e\u4e00\u4e2a\u989d\u5916\u7684\u989c\u8272\u7f13\u51b2\u7eb9\u7406\u4e86\u3002\u968f\u7740\u4f60\u7684\u5ef6\u8fdf\u6e32\u67d3\u7ba1\u7ebf\u53d8\u5f97\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u9700\u8981\u66f4\u591a\u7684\u6570\u636e\u7684\u65f6\u5019\uff0c\u4f60\u5c31\u4f1a\u5f88\u5feb\u53d1\u73b0\u65b0\u7684\u65b9\u5f0f\u6765\u7ec4\u5408\u6570\u636e\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u7eb9\u7406\u5f53\u4e2d\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u6e32\u67d3\u5b83\u4eec\u5230G\u7f13\u51b2\u4e2d\u3002\u5047\u8bbe\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6709\u6f2b\u53cd\u5c04\uff0c\u4e00\u4e2a\u6cd5\u7ebf\u548c\u4e00\u4e2a\u955c\u9762\u5f3a\u5ea6\u7eb9\u7406\uff0c\u6211\u4eec\u4f1a\u60f3\u4f7f\u7528\u4e00\u4e9b\u50cf\u4e0b\u9762\u8fd9\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u7684\u4e1c\u897f\u6765\u6e32\u67d3\u5b83\u4eec\u5230G\u7f13\u51b2\u4e2d\u53bb\u3002 #version 330 core layout (location = 0) out vec3 gPosition; layout (location = 1) out vec3 gNormal; layout (location = 2) out vec4 gAlbedoSpec; in vec2 TexCoords; in vec3 FragPos; in vec3 Normal; uniform sampler2D texture_diffuse1; uniform sampler2D texture_specular1; void main() { // \u5b58\u50a8\u7b2c\u4e00\u4e2aG\u7f13\u51b2\u7eb9\u7406\u4e2d\u7684\u7247\u6bb5\u4f4d\u7f6e\u5411\u91cf gPosition = FragPos; // \u540c\u6837\u5b58\u50a8\u5bf9\u6bcf\u4e2a\u9010\u7247\u6bb5\u6cd5\u7ebf\u5230G\u7f13\u51b2\u4e2d gNormal = normalize(Normal); // \u548c\u6f2b\u53cd\u5c04\u5bf9\u6bcf\u4e2a\u9010\u7247\u6bb5\u989c\u8272 gAlbedoSpec.rgb = texture(texture_diffuse1, TexCoords).rgb; // \u5b58\u50a8\u955c\u9762\u5f3a\u5ea6\u5230gAlbedoSpec\u7684alpha\u5206\u91cf gAlbedoSpec.a = texture(texture_specular1, TexCoords).r; } \u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86\u591a\u6e32\u67d3\u76ee\u6807\uff0c\u8fd9\u4e2a\u5e03\u5c40\u6307\u793a\u7b26(Layout Specifier)\u544a\u8bc9\u4e86OpenGL\u6211\u4eec\u9700\u8981\u6e32\u67d3\u5230\u5f53\u524d\u7684\u6d3b\u8dc3\u5e27\u7f13\u51b2\u4e2d\u7684\u54ea\u4e00\u4e2a\u989c\u8272\u7f13\u51b2\u3002\u6ce8\u610f\u6211\u4eec\u5e76\u6ca1\u6709\u50a8\u5b58\u955c\u9762\u5f3a\u5ea6\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u989c\u8272\u7f13\u51b2\u7eb9\u7406\u4e2d\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u50a8\u5b58\u5b83\u5355\u72ec\u7684\u6d6e\u70b9\u503c\u5230\u5176\u5b83\u989c\u8272\u7f13\u51b2\u7eb9\u7406\u7684alpha\u5206\u91cf\u4e2d\u3002 Attention \u8bf7\u8bb0\u4f4f\uff0c\u56e0\u4e3a\u6709\u5149\u7167\u8ba1\u7b97\uff0c\u6240\u4ee5\u4fdd\u8bc1\u6240\u6709\u53d8\u91cf\u5728\u4e00\u4e2a\u5750\u6807\u7a7a\u95f4\u5f53\u4e2d\u81f3\u5173\u91cd\u8981\u3002\u5728\u8fd9\u91cc\u6211\u4eec\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\u5b58\u50a8(\u5e76\u8ba1\u7b97)\u6240\u6709\u7684\u53d8\u91cf\u3002 \u5982\u679c\u6211\u4eec\u73b0\u5728\u60f3\u8981\u6e32\u67d3\u4e00\u5927\u5806\u7eb3\u7c73\u88c5\u6218\u58eb\u5bf9\u8c61\u5230 gBuffer \u5e27\u7f13\u51b2\u4e2d\uff0c\u5e76\u901a\u8fc7\u4e00\u4e2a\u4e00\u4e2a\u5206\u522b\u6295\u5f71\u5b83\u7684\u989c\u8272\u7f13\u51b2\u5230\u94fa\u5c4f\u56db\u8fb9\u5f62\u4e2d\u5c1d\u8bd5\u5c06\u4ed6\u4eec\u663e\u793a\u51fa\u6765\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u5411\u4e0b\u9762\u8fd9\u6837\u7684\u4e1c\u897f\uff1a \u5c1d\u8bd5\u60f3\u8c61\u4e16\u754c\u7a7a\u95f4\u4f4d\u7f6e\u548c\u6cd5\u5411\u91cf\u90fd\u662f\u6b63\u786e\u7684\u3002\u6bd4\u5982\u8bf4\uff0c\u6307\u5411\u53f3\u4fa7\u7684\u6cd5\u5411\u91cf\u5c06\u4f1a\u88ab\u66f4\u591a\u5730\u5bf9\u9f50\u5230\u7ea2\u8272\u4e0a\uff0c\u4ece\u573a\u666f\u539f\u70b9\u6307\u5411\u53f3\u4fa7\u7684\u4f4d\u7f6e\u77e2\u91cf\u4e5f\u540c\u6837\u662f\u8fd9\u6837\u3002\u4e00\u65e6\u4f60\u5bf9G\u7f13\u51b2\u4e2d\u7684\u5185\u5bb9\u6ee1\u610f\u4e86\uff0c\u6211\u4eec\u5c31\u8be5\u8fdb\u5165\u5230\u4e0b\u4e00\u6b65\uff1a\u5149\u7167\u5904\u7406\u9636\u6bb5\u4e86\u3002 \u5ef6\u8fdf\u5149\u7167\u5904\u7406\u9636\u6bb5 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u5927\u5806\u7684\u7247\u6bb5\u6570\u636e\u50a8\u5b58\u5728G\u7f13\u51b2\u4e2d\u4f9b\u6211\u4eec\u5904\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u901a\u8fc7\u4e00\u4e2a\u50cf\u7d20\u4e00\u4e2a\u50cf\u7d20\u5730\u904d\u5386\u5404\u4e2aG\u7f13\u51b2\u7eb9\u7406\uff0c\u5e76\u5c06\u50a8\u5b58\u5728\u5b83\u4eec\u91cc\u9762\u7684\u5185\u5bb9\u4f5c\u4e3a\u5149\u7167\u7b97\u6cd5\u7684\u8f93\u5165\uff0c\u6765\u5b8c\u5168\u8ba1\u7b97\u573a\u666f\u6700\u7ec8\u7684\u5149\u7167\u989c\u8272\u3002\u7531\u4e8e\u6240\u6709\u7684G\u7f13\u51b2\u7eb9\u7406\u90fd\u4ee3\u8868\u7684\u662f\u6700\u7ec8\u53d8\u6362\u7684\u7247\u6bb5\u503c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u6bcf\u4e00\u4e2a\u50cf\u7d20\u6267\u884c\u4e00\u6b21\u6602\u8d35\u7684\u5149\u7167\u8fd0\u7b97\u5c31\u884c\u4e86\u3002\u8fd9\u4f7f\u5f97\u5ef6\u8fdf\u5149\u7167\u975e\u5e38\u9ad8\u6548\uff0c\u7279\u522b\u662f\u5728\u9700\u8981\u8c03\u7528\u5927\u91cf\u91cd\u578b\u7247\u6bb5\u7740\u8272\u5668\u7684\u590d\u6742\u573a\u666f\u4e2d\u3002 \u5bf9\u4e8e\u8fd9\u4e2a\u5149\u7167\u5904\u7406\u9636\u6bb5\uff0c\u6211\u4eec\u5c06\u4f1a\u6e32\u67d3\u4e00\u4e2a2D\u5168\u5c4f\u7684\u65b9\u5f62(\u6709\u4e00\u70b9\u50cf\u540e\u671f\u5904\u7406\u6548\u679c)\u5e76\u4e14\u5728\u6bcf\u4e2a\u50cf\u7d20\u4e0a\u8fd0\u884c\u4e00\u4e2a\u6602\u8d35\u7684\u5149\u7167\u7247\u6bb5\u7740\u8272\u5668\u3002 glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); shaderLightingPass.Use(); glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_2D, gPosition); glActiveTexture(GL_TEXTURE1); glBindTexture(GL_TEXTURE_2D, gNormal); glActiveTexture(GL_TEXTURE2); glBindTexture(GL_TEXTURE_2D, gAlbedoSpec); // \u540c\u6837\u53d1\u9001\u5149\u7167\u76f8\u5173\u7684uniform SendAllLightUniformsToShader(shaderLightingPass); glUniform3fv(glGetUniformLocation(shaderLightingPass.Program, \"viewPos\"), 1, &camera.Position[0]); RenderQuad(); \u6211\u4eec\u5728\u6e32\u67d3\u4e4b\u524d\u7ed1\u5b9a\u4e86G\u7f13\u51b2\u4e2d\u6240\u6709\u76f8\u5173\u7684\u7eb9\u7406\uff0c\u5e76\u4e14\u53d1\u9001\u5149\u7167\u76f8\u5173\u7684uniform\u53d8\u91cf\u5230\u7740\u8272\u5668\u4e2d\u3002 \u5149\u7167\u5904\u7406\u9636\u6bb5\u7684\u7247\u6bb5\u7740\u8272\u5668\u548c\u6211\u4eec\u4e4b\u524d\u4e00\u76f4\u5728\u7528\u7684\u5149\u7167\u6559\u7a0b\u7740\u8272\u5668\u662f\u975e\u5e38\u76f8\u4f3c\u7684\uff0c\u9664\u4e86\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5\uff0c\u4ece\u800c\u4f7f\u6211\u4eec\u80fd\u591f\u83b7\u53d6\u5149\u7167\u7684\u8f93\u5165\u53d8\u91cf\uff0c\u5f53\u7136\u8fd9\u4e9b\u53d8\u91cf\u6211\u4eec\u4f1a\u4eceG\u7f13\u51b2\u4e2d\u76f4\u63a5\u91c7\u6837\u3002 #version 330 core out vec4 FragColor; in vec2 TexCoords; uniform sampler2D gPosition; uniform sampler2D gNormal; uniform sampler2D gAlbedoSpec; struct Light { vec3 Position; vec3 Color; }; const int NR_LIGHTS = 32; uniform Light lights[NR_LIGHTS]; uniform vec3 viewPos; void main() { // \u4eceG\u7f13\u51b2\u4e2d\u83b7\u53d6\u6570\u636e vec3 FragPos = texture(gPosition, TexCoords).rgb; vec3 Normal = texture(gNormal, TexCoords).rgb; vec3 Albedo = texture(gAlbedoSpec, TexCoords).rgb; float Specular = texture(gAlbedoSpec, TexCoords).a; // \u7136\u540e\u548c\u5f80\u5e38\u4e00\u6837\u5730\u8ba1\u7b97\u5149\u7167 vec3 lighting = Albedo * 0.1; // \u786c\u7f16\u7801\u73af\u5883\u5149\u7167\u5206\u91cf vec3 viewDir = normalize(viewPos - FragPos); for(int i = 0; i < NR_LIGHTS; ++i) { // \u6f2b\u53cd\u5c04 vec3 lightDir = normalize(lights[i].Position - FragPos); vec3 diffuse = max(dot(Normal, lightDir), 0.0) * Albedo * lights[i].Color; lighting += diffuse; } FragColor = vec4(lighting, 1.0); } \u5149\u7167\u5904\u7406\u9636\u6bb5\u7740\u8272\u5668\u63a5\u53d7\u4e09\u4e2auniform\u7eb9\u7406\uff0c\u4ee3\u8868G\u7f13\u51b2\uff0c\u5b83\u4eec\u5305\u542b\u4e86\u6211\u4eec\u5728\u51e0\u4f55\u5904\u7406\u9636\u6bb5\u50a8\u5b58\u7684\u6240\u6709\u6570\u636e\u3002\u5982\u679c\u6211\u4eec\u73b0\u5728\u518d\u4f7f\u7528\u5f53\u524d\u7247\u6bb5\u7684\u7eb9\u7406\u5750\u6807\u91c7\u6837\u8fd9\u4e9b\u6570\u636e\uff0c\u6211\u4eec\u5c06\u4f1a\u83b7\u5f97\u548c\u4e4b\u524d\u5b8c\u5168\u4e00\u6837\u7684\u7247\u6bb5\u503c\uff0c\u8fd9\u5c31\u50cf\u6211\u4eec\u5728\u76f4\u63a5\u6e32\u67d3\u51e0\u4f55\u4f53\u3002\u5728\u7247\u6bb5\u7740\u8272\u5668\u7684\u4e00\u5f00\u59cb\uff0c\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u7eb9\u7406\u67e5\u627e\u4eceG\u7f13\u51b2\u7eb9\u7406\u4e2d\u83b7\u53d6\u4e86\u5149\u7167\u76f8\u5173\u7684\u53d8\u91cf\u3002\u6ce8\u610f\u6211\u4eec\u4ece gAlbedoSpec \u7eb9\u7406\u4e2d\u540c\u65f6\u83b7\u53d6\u4e86 Albedo \u989c\u8272\u548c Spqcular \u5f3a\u5ea6\u3002 \u56e0\u4e3a\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u6709\u4e86\u5fc5\u8981\u7684\u9010\u7247\u6bb5\u53d8\u91cf(\u548c\u76f8\u5173\u7684uniform\u53d8\u91cf)\u6765\u8ba1\u7b97\u5e03\u6797-\u98ce\u6c0f\u5149\u7167(Blinn-Phong Lighting)\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5bf9\u5149\u7167\u4ee3\u7801\u505a\u4efb\u4f55\u4fee\u6539\u4e86\u3002\u6211\u4eec\u5728\u5ef6\u8fdf\u7740\u8272\u6cd5\u4e2d\u552f\u4e00\u9700\u8981\u6539\u7684\u5c31\u662f\u83b7\u53d6\u5149\u7167\u8f93\u5165\u53d8\u91cf\u7684\u65b9\u6cd5\u3002 \u8fd0\u884c\u4e00\u4e2a\u5305\u542b32\u4e2a\u5c0f\u5149\u6e90\u7684\u7b80\u5355Demo\u4f1a\u662f\u50cf\u8fd9\u6837\u5b50\u7684\uff1a \u4f60\u53ef\u4ee5\u5728\u4ee5\u4e0b\u4f4d\u7f6e\u627e\u5230Demo\u7684\u5b8c\u6574 \u6e90\u4ee3\u7801 \uff0c\u548c\u51e0\u4f55\u6e32\u67d3\u9636\u6bb5\u7684 \u9876\u70b9 \u548c \u7247\u6bb5 \u7740\u8272\u5668\uff0c\u8fd8\u6709\u5149\u7167\u6e32\u67d3\u9636\u6bb5\u7684 \u9876\u70b9 \u548c \u7247\u6bb5 \u7740\u8272\u5668\u3002 \u5ef6\u8fdf\u7740\u8272\u6cd5\u7684\u5176\u4e2d\u4e00\u4e2a\u7f3a\u70b9\u5c31\u662f\u5b83\u4e0d\u80fd\u8fdb\u884c \u6df7\u5408 (Blending)\uff0c\u56e0\u4e3aG\u7f13\u51b2\u4e2d\u6240\u6709\u7684\u6570\u636e\u90fd\u662f\u4ece\u4e00\u4e2a\u5355\u72ec\u7684\u7247\u6bb5\u4e2d\u6765\u7684\uff0c\u800c\u6df7\u5408\u9700\u8981\u5bf9\u591a\u4e2a\u7247\u6bb5\u7684\u7ec4\u5408\u8fdb\u884c\u64cd\u4f5c\u3002\u5ef6\u8fdf\u7740\u8272\u6cd5\u53e6\u5916\u4e00\u4e2a\u7f3a\u70b9\u5c31\u662f\u5b83\u8feb\u4f7f\u4f60\u5bf9\u5927\u90e8\u5206\u573a\u666f\u7684\u5149\u7167\u4f7f\u7528\u76f8\u540c\u7684\u5149\u7167\u7b97\u6cd5\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5305\u542b\u66f4\u591a\u5173\u4e8e\u6750\u8d28\u7684\u6570\u636e\u5230G\u7f13\u51b2\u4e2d\u6765\u51cf\u8f7b\u8fd9\u4e00\u7f3a\u70b9\u3002 \u4e3a\u4e86\u514b\u670d\u8fd9\u4e9b\u7f3a\u70b9(\u7279\u522b\u662f\u6df7\u5408)\uff0c\u6211\u4eec\u901a\u5e38\u5206\u5272\u6211\u4eec\u7684\u6e32\u67d3\u5668\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a\u4e00\u4e2a\u662f\u5ef6\u8fdf\u6e32\u67d3\u7684\u90e8\u5206\uff0c\u53e6\u4e00\u4e2a\u662f\u4e13\u95e8\u4e3a\u4e86\u6df7\u5408\u6216\u8005\u5176\u4ed6\u4e0d\u9002\u5408\u5ef6\u8fdf\u6e32\u67d3\u7ba1\u7ebf\u7684\u7740\u8272\u5668\u6548\u679c\u800c\u8bbe\u8ba1\u7684\u7684\u6b63\u5411\u6e32\u67d3\u7684\u90e8\u5206\u3002\u4e3a\u4e86\u5c55\u793a\u8fd9\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u6211\u4eec\u5c06\u4f1a\u4f7f\u7528\u6b63\u5411\u6e32\u67d3\u5668\u6e32\u67d3\u5149\u6e90\u4e3a\u4e00\u4e2a\u5c0f\u7acb\u65b9\u4f53\uff0c\u56e0\u4e3a\u5149\u7167\u7acb\u65b9\u4f53\u4f1a\u9700\u8981\u4e00\u4e2a\u7279\u6b8a\u7684\u7740\u8272\u5668(\u4f1a\u8f93\u51fa\u4e00\u4e2a\u5149\u7167\u989c\u8272)\u3002 \u7ed3\u5408\u5ef6\u8fdf\u6e32\u67d3\u4e0e\u6b63\u5411\u6e32\u67d3 \u73b0\u5728\u6211\u4eec\u60f3\u8981\u6e32\u67d3\u6bcf\u4e00\u4e2a\u5149\u6e90\u4e3a\u4e00\u4e2a3D\u7acb\u65b9\u4f53\uff0c\u5e76\u653e\u7f6e\u5728\u5149\u6e90\u7684\u4f4d\u7f6e\u4e0a\u968f\u7740\u5ef6\u8fdf\u6e32\u67d3\u5668\u4e00\u8d77\u53d1\u51fa\u5149\u6e90\u7684\u989c\u8272\u3002\u5f88\u660e\u663e\uff0c\u6211\u4eec\u9700\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u5728\u5ef6\u8fdf\u6e32\u67d3\u65b9\u5f62\u4e4b\u4e0a\u6b63\u5411\u6e32\u67d3\u6240\u6709\u7684\u5149\u6e90\uff0c\u5b83\u4f1a\u5728\u5ef6\u8fdf\u6e32\u67d3\u7ba1\u7ebf\u7684\u6700\u540e\u8fdb\u884c\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u50cf\u6b63\u5e38\u60c5\u51b5\u4e0b\u6e32\u67d3\u7acb\u65b9\u4f53\uff0c\u53ea\u662f\u4f1a\u5728\u6211\u4eec\u5b8c\u6210\u5ef6\u8fdf\u6e32\u67d3\u64cd\u4f5c\u4e4b\u540e\u8fdb\u884c\u3002\u4ee3\u7801\u4f1a\u50cf\u8fd9\u6837\uff1a // \u5ef6\u8fdf\u6e32\u67d3\u5149\u7167\u6e32\u67d3\u9636\u6bb5 [...] RenderQuad(); // \u73b0\u5728\u50cf\u6b63\u5e38\u60c5\u51b5\u4e00\u6837\u6b63\u5411\u6e32\u67d3\u6240\u6709\u5149\u7acb\u65b9\u4f53 shaderLightBox.Use(); glUniformMatrix4fv(locProjection, 1, GL_FALSE, glm::value_ptr(projection)); glUniformMatrix4fv(locView, 1, GL_FALSE, glm::value_ptr(view)); for (GLuint i = 0; i < lightPositions.size(); i++) { model = glm::mat4(); model = glm::translate(model, lightPositions[i]); model = glm::scale(model, glm::vec3(0.25f)); glUniformMatrix4fv(locModel, 1, GL_FALSE, glm::value_ptr(model)); glUniform3fv(locLightcolor, 1, &lightColors[i][0]); RenderCube(); } \u7136\u800c\uff0c\u8fd9\u4e9b\u6e32\u67d3\u51fa\u6765\u7684\u7acb\u65b9\u4f53\u5e76\u6ca1\u6709\u8003\u8651\u5230\u6211\u4eec\u50a8\u5b58\u7684\u5ef6\u8fdf\u6e32\u67d3\u5668\u7684\u51e0\u4f55\u6df1\u5ea6(Depth)\u4fe1\u606f\uff0c\u5e76\u4e14\u7ed3\u679c\u662f\u5b83\u88ab\u6e32\u67d3\u5728\u4e4b\u524d\u6e32\u67d3\u8fc7\u7684\u7269\u4f53\u4e4b\u4e0a\uff0c\u8fd9\u5e76\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u3002 \u6211\u4eec\u9700\u8981\u505a\u7684\u5c31\u662f\u9996\u5148\u590d\u5236\u51fa\u5728\u51e0\u4f55\u6e32\u67d3\u9636\u6bb5\u4e2d\u50a8\u5b58\u7684\u6df1\u5ea6\u4fe1\u606f\uff0c\u5e76\u8f93\u51fa\u5230\u9ed8\u8ba4\u7684\u5e27\u7f13\u51b2\u7684\u6df1\u5ea6\u7f13\u51b2\uff0c\u7136\u540e\u6211\u4eec\u624d\u6e32\u67d3\u5149\u7acb\u65b9\u4f53\u3002\u8fd9\u6837\u4e4b\u540e\u53ea\u6709\u5f53\u5b83\u5728\u4e4b\u524d\u6e32\u67d3\u8fc7\u7684\u51e0\u4f55\u4f53\u4e0a\u65b9\u7684\u65f6\u5019\uff0c\u5149\u7acb\u65b9\u4f53\u7684\u7247\u6bb5\u624d\u4f1a\u88ab\u6e32\u67d3\u51fa\u6765\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 glBlitFramebuffer \u590d\u5236\u4e00\u4e2a\u5e27\u7f13\u51b2\u7684\u5185\u5bb9\u5230\u53e6\u4e00\u4e2a\u5e27\u7f13\u51b2\u4e2d\uff0c\u8fd9\u4e2a\u51fd\u6570\u6211\u4eec\u4e5f\u5728 \u6297\u952f\u9f7f \u7684\u6559\u7a0b\u4e2d\u4f7f\u7528\u8fc7\uff0c\u7528\u6765\u8fd8\u539f\u591a\u91cd\u91c7\u6837\u7684\u5e27\u7f13\u51b2\u3002 glBlitFramebuffer \u8fd9\u4e2a\u51fd\u6570\u5141\u8bb8\u6211\u4eec\u590d\u5236\u4e00\u4e2a\u7528\u6237\u5b9a\u4e49\u7684\u5e27\u7f13\u51b2\u533a\u57df\u5230\u53e6\u4e00\u4e2a\u7528\u6237\u5b9a\u4e49\u7684\u5e27\u7f13\u51b2\u533a\u57df\u3002 \u6211\u4eec\u50a8\u5b58\u6240\u6709\u5ef6\u8fdf\u6e32\u67d3\u9636\u6bb5\u4e2d\u6240\u6709\u7269\u4f53\u7684\u6df1\u5ea6\u4fe1\u606f\u5728 gBuffer \u8fd9\u4e2aFBO\u4e2d\u3002\u5982\u679c\u6211\u4eec\u4ec5\u4ec5\u662f\u7b80\u5355\u590d\u5236\u5b83\u7684\u6df1\u5ea6\u7f13\u51b2\u5185\u5bb9\u5230\u9ed8\u8ba4\u5e27\u7f13\u51b2\u7684\u6df1\u5ea6\u7f13\u51b2\u4e2d\uff0c\u90a3\u4e48\u5149\u7acb\u65b9\u4f53\u5c31\u4f1a\u50cf\u662f\u573a\u666f\u4e2d\u6240\u6709\u7684\u51e0\u4f55\u4f53\u90fd\u662f\u6b63\u5411\u6e32\u67d3\u51fa\u6765\u7684\u4e00\u6837\u6e32\u67d3\u51fa\u6765\u3002\u5c31\u50cf\u5728\u6297\u952f\u9f7f\u6559\u7a0b\u4e2d\u4ecb\u7ecd\u7684\u90a3\u6837\uff0c\u6211\u4eec\u9700\u8981\u6307\u5b9a\u4e00\u4e2a\u5e27\u7f13\u51b2\u4e3a\u8bfb\u5e27\u7f13\u51b2(Read Framebuffer)\uff0c\u5e76\u4e14\u7c7b\u4f3c\u5730\u6307\u5b9a\u4e00\u4e2a\u5e27\u7f13\u51b2\u4e3a\u5199\u5e27\u7f13\u51b2(Write Framebuffer)\uff1a glBindFramebuffer(GL_READ_FRAMEBUFFER, gBuffer); glBindFramebuffer(GL_DRAW_FRAMEBUFFER, 0); // \u5199\u5165\u5230\u9ed8\u8ba4\u5e27\u7f13\u51b2 glBlitFramebuffer( 0, 0, SCR_WIDTH, SCR_HEIGHT, 0, 0, SCR_WIDTH, SCR_HEIGHT, GL_DEPTH_BUFFER_BIT, GL_NEAREST ); glBindFramebuffer(GL_FRAMEBUFFER, 0); // \u73b0\u5728\u50cf\u4e4b\u524d\u4e00\u6837\u6e32\u67d3\u5149\u7acb\u65b9\u4f53 [...] \u5728\u8fd9\u91cc\u6211\u4eec\u590d\u5236\u6574\u4e2a\u8bfb\u5e27\u7f13\u51b2\u7684\u6df1\u5ea6\u7f13\u51b2\u4fe1\u606f\u5230\u9ed8\u8ba4\u5e27\u7f13\u51b2\u7684\u6df1\u5ea6\u7f13\u51b2\uff0c\u5bf9\u4e8e\u989c\u8272\u7f13\u51b2\u548c\u6a21\u677f\u7f13\u51b2\u6211\u4eec\u4e5f\u53ef\u4ee5\u8fd9\u6837\u5904\u7406\u3002\u73b0\u5728\u5982\u679c\u6211\u4eec\u63a5\u4e0b\u6765\u518d\u6e32\u67d3\u5149\u7acb\u65b9\u4f53\uff0c\u573a\u666f\u91cc\u7684\u51e0\u4f55\u4f53\u5c06\u4f1a\u770b\u8d77\u6765\u5f88\u771f\u5b9e\u4e86\uff0c\u800c\u4e0d\u53ea\u662f\u7b80\u5355\u5730\u7c98\u8d34\u7acb\u65b9\u4f53\u52302D\u65b9\u5f62\u4e4b\u4e0a\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230Demo\u7684\u6e90\u4ee3\u7801\uff0c\u8fd8\u6709\u5149\u7acb\u65b9\u4f53\u7684 \u9876\u70b9 \u548c \u7247\u6bb5 \u7740\u8272\u5668\u3002 \u6709\u4e86\u8fd9\u79cd\u65b9\u6cd5\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u8f7b\u6613\u5730\u7ed3\u5408\u5ef6\u8fdf\u7740\u8272\u6cd5\u548c\u6b63\u5411\u7740\u8272\u6cd5\u4e86\u3002\u8fd9\u771f\u662f\u592a\u68d2\u4e86\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5e94\u7528\u6df7\u5408\u6216\u8005\u6e32\u67d3\u9700\u8981\u7279\u6b8a\u7740\u8272\u5668\u6548\u679c\u7684\u7269\u4f53\u4e86\uff0c\u8fd9\u5728\u5ef6\u8fdf\u6e32\u67d3\u4e2d\u662f\u4e0d\u53ef\u80fd\u505a\u5230\u7684\u3002 \u66f4\u591a\u7684\u5149\u6e90 \u5ef6\u8fdf\u6e32\u67d3\u4e00\u76f4\u88ab\u79f0\u8d5e\u7684\u539f\u56e0\u5c31\u662f\u5b83\u80fd\u591f\u6e32\u67d3\u5927\u91cf\u7684\u5149\u6e90\u800c\u4e0d\u6d88\u8017\u5927\u91cf\u7684\u6027\u80fd\u3002\u7136\u800c\uff0c\u5ef6\u8fdf\u6e32\u67d3\u5b83\u672c\u8eab\u5e76\u4e0d\u80fd\u652f\u6301\u975e\u5e38\u5927\u91cf\u7684\u5149\u6e90\uff0c\u56e0\u4e3a\u6211\u4eec\u4ecd\u7136\u5fc5\u987b\u8981\u5bf9\u573a\u666f\u4e2d\u6bcf\u4e00\u4e2a\u5149\u6e90\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u7247\u6bb5\u7684\u5149\u7167\u5206\u91cf\u3002\u771f\u6b63\u8ba9\u5927\u91cf\u5149\u6e90\u6210\u4e3a\u53ef\u80fd\u7684\u662f\u6211\u4eec\u80fd\u591f\u5bf9\u5ef6\u8fdf\u6e32\u67d3\u7ba1\u7ebf\u5f15\u7528\u7684\u4e00\u4e2a\u975e\u5e38\u68d2\u7684\u4f18\u5316\uff1a \u5149\u4f53\u79ef(Light Volumes) \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5f53\u6211\u4eec\u6e32\u67d3\u4e00\u4e2a\u590d\u6742\u5149\u7167\u573a\u666f\u4e0b\u7684\u7247\u6bb5\u7740\u8272\u5668\u65f6\uff0c\u6211\u4eec\u4f1a\u8ba1\u7b97\u573a\u666f\u4e2d \u6bcf\u4e00\u4e2a \u5149\u6e90\u7684\u8d21\u732e\uff0c\u4e0d\u7ba1\u5b83\u4eec\u79bb\u8fd9\u4e2a\u7247\u6bb5\u6709\u591a\u8fdc\u3002\u5f88\u5927\u4e00\u90e8\u5206\u7684\u5149\u6e90\u6839\u672c\u5c31\u4e0d\u4f1a\u5230\u8fbe\u8fd9\u4e2a\u7247\u6bb5\uff0c\u6240\u4ee5\u4e3a\u4ec0\u4e48\u6211\u4eec\u8fd8\u8981\u6d6a\u8d39\u8fd9\u4e48\u591a\u5149\u7167\u8fd0\u7b97\u5462\uff1f \u9690\u85cf\u5728\u5149\u4f53\u79ef\u80cc\u540e\u7684\u60f3\u6cd5\u5c31\u662f\u8ba1\u7b97\u5149\u6e90\u7684\u534a\u5f84\uff0c\u6216\u662f\u4f53\u79ef\uff0c\u4e5f\u5c31\u662f\u5149\u80fd\u591f\u5230\u8fbe\u7247\u6bb5\u7684\u8303\u56f4\u3002\u7531\u4e8e\u5927\u90e8\u5206\u5149\u6e90\u90fd\u4f7f\u7528\u4e86\u67d0\u79cd\u5f62\u5f0f\u7684\u8870\u51cf(Attenuation)\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u6765\u8ba1\u7b97\u5149\u6e90\u80fd\u591f\u5230\u8fbe\u7684\u6700\u5927\u8def\u7a0b\uff0c\u6216\u8005\u8bf4\u662f\u534a\u5f84\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u53ea\u9700\u8981\u5bf9\u90a3\u4e9b\u5728\u4e00\u4e2a\u6216\u591a\u4e2a\u5149\u4f53\u79ef\u5185\u7684\u7247\u6bb5\u8fdb\u884c\u7e41\u91cd\u7684\u5149\u7167\u8fd0\u7b97\u5c31\u884c\u4e86\u3002\u8fd9\u53ef\u4ee5\u7ed9\u6211\u4eec\u7701\u4e0b\u6765\u5f88\u53ef\u89c2\u7684\u8ba1\u7b97\u91cf\uff0c\u56e0\u4e3a\u6211\u4eec\u73b0\u5728\u53ea\u5728\u9700\u8981\u7684\u60c5\u51b5\u4e0b\u8ba1\u7b97\u5149\u7167\u3002 \u8fd9\u4e2a\u65b9\u6cd5\u7684\u96be\u70b9\u57fa\u672c\u5c31\u662f\u627e\u51fa\u4e00\u4e2a\u5149\u6e90\u5149\u4f53\u79ef\u7684\u5927\u5c0f\uff0c\u6216\u8005\u662f\u534a\u5f84\u3002 \u8ba1\u7b97\u4e00\u4e2a\u5149\u6e90\u7684\u4f53\u79ef\u6216\u534a\u5f84 \u4e3a\u4e86\u83b7\u53d6\u4e00\u4e2a\u5149\u6e90\u7684\u4f53\u79ef\u534a\u5f84\uff0c\u6211\u4eec\u9700\u8981\u89e3\u4e00\u4e2a\u5bf9\u4e8e\u4e00\u4e2a\u6211\u4eec\u8ba4\u4e3a\u662f \u9ed1\u6697(Dark) \u7684\u4eae\u5ea6(Brightness)\u7684\u8870\u51cf\u65b9\u7a0b\uff0c\u5b83\u53ef\u4ee5\u662f0.0\uff0c\u6216\u8005\u662f\u66f4\u4eae\u4e00\u70b9\u7684\u4f46\u4ecd\u88ab\u8ba4\u4e3a\u9ed1\u6697\u7684\u503c\uff0c\u50cf\u662f0.03\u3002\u4e3a\u4e86\u5c55\u793a\u6211\u4eec\u5982\u4f55\u8ba1\u7b97\u5149\u6e90\u7684\u4f53\u79ef\u534a\u5f84\uff0c\u6211\u4eec\u5c06\u4f1a\u4f7f\u7528\u4e00\u4e2a\u5728 \u6295\u5149\u7269 \u8fd9\u8282\u4e2d\u5f15\u5165\u7684\u4e00\u4e2a\u66f4\u52a0\u590d\u6742\uff0c\u4f46\u975e\u5e38\u7075\u6d3b\u7684\u8870\u51cf\u65b9\u7a0b\uff1a F_{light} = \\frac{I}{K_c + K_l * d + K_q * d^2} \u6211\u4eec\u73b0\u5728\u60f3\u8981\u5728 F_{light} \u7b49\u4e8e0\u7684\u524d\u63d0\u4e0b\u89e3\u8fd9\u4e2a\u65b9\u7a0b\uff0c\u4e5f\u5c31\u662f\u8bf4\u5149\u5728\u8be5\u8ddd\u79bb\u5b8c\u5168\u662f\u9ed1\u6697\u7684\u3002\u7136\u800c\u8fd9\u4e2a\u65b9\u7a0b\u6c38\u8fdc\u4e0d\u4f1a\u771f\u6b63\u7b49\u4e8e0.0\uff0c\u6240\u4ee5\u5b83\u6ca1\u6709\u89e3\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u4e0d\u4f1a\u6c42\u8868\u8fbe\u5f0f\u7b49\u4e8e0.0\u65f6\u5019\u7684\u89e3\uff0c\u76f8\u53cd\u6211\u4eec\u4f1a\u6c42\u5f53\u4eae\u5ea6\u503c\u9760\u8fd1\u4e8e0.0\u7684\u89e3\uff0c\u8fd9\u65f6\u5019\u5b83\u8fd8\u662f\u80fd\u88ab\u770b\u505a\u662f\u9ed1\u6697\u7684\u3002\u5728\u8fd9\u4e2a\u6559\u7a0b\u7684\u6f14\u793a\u573a\u666f\u4e2d\uff0c\u6211\u4eec\u9009\u62e9 5/256 \u4f5c\u4e3a\u4e00\u4e2a\u5408\u9002\u7684\u5149\u7167\u503c\uff1b\u9664\u4ee5256\u662f\u56e0\u4e3a\u9ed8\u8ba4\u76848-bit\u5e27\u7f13\u51b2\u53ef\u4ee5\u6bcf\u4e2a\u5206\u91cf\u663e\u793a\u8fd9\u4e48\u591a\u5f3a\u5ea6\u503c(Intensity)\u3002 Important \u6211\u4eec\u4f7f\u7528\u7684\u8870\u51cf\u65b9\u7a0b\u5728\u5b83\u7684\u53ef\u89c6\u8303\u56f4\u5185\u57fa\u672c\u90fd\u662f\u9ed1\u6697\u7684\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u60f3\u8981\u9650\u5236\u5b83\u4e3a\u4e00\u4e2a\u6bd4 5/256 \u66f4\u52a0\u9ed1\u6697\u7684\u4eae\u5ea6\uff0c\u5149\u4f53\u79ef\u5c31\u4f1a\u53d8\u5f97\u592a\u5927\u4ece\u800c\u53d8\u5f97\u4f4e\u6548\u3002\u53ea\u8981\u662f\u7528\u6237\u4e0d\u80fd\u5728\u5149\u4f53\u79ef\u8fb9\u7f18\u770b\u5230\u4e00\u4e2a\u7a81\u5140\u7684\u622a\u65ad\uff0c\u8fd9\u4e2a\u53c2\u6570\u5c31\u6ca1\u4e8b\u4e86\u3002\u5f53\u7136\u5b83\u8fd8\u662f\u4f9d\u8d56\u4e8e\u573a\u666f\u7684\u7c7b\u578b\uff0c\u4e00\u4e2a\u9ad8\u7684\u4eae\u5ea6\u9600\u503c\u4f1a\u4ea7\u751f\u66f4\u5c0f\u7684\u5149\u4f53\u79ef\uff0c\u4ece\u800c\u83b7\u5f97\u66f4\u9ad8\u7684\u6548\u7387\uff0c\u7136\u800c\u5b83\u540c\u6837\u4f1a\u4ea7\u751f\u4e00\u4e2a\u5f88\u5bb9\u6613\u53d1\u73b0\u7684\u526f\u4f5c\u7528\uff0c\u90a3\u5c31\u662f\u5149\u4f1a\u5728\u5149\u4f53\u79ef\u8fb9\u754c\u770b\u8d77\u6765\u7a81\u7136\u65ad\u6389\u3002 \u6211\u4eec\u8981\u6c42\u7684\u8870\u51cf\u65b9\u7a0b\u4f1a\u662f\u8fd9\u6837\uff1a \\frac{5}{256} = \\frac{I_{max}}{Attenuation} \u5728\u8fd9\u91cc\uff0c I_{max} \u662f\u5149\u6e90\u6700\u4eae\u7684\u989c\u8272\u5206\u91cf\u3002\u6211\u4eec\u4e4b\u6240\u4ee5\u4f7f\u7528\u5149\u6e90\u6700\u4eae\u7684\u989c\u8272\u5206\u91cf\u662f\u56e0\u4e3a\u89e3\u5149\u6e90\u6700\u4eae\u7684\u5f3a\u5ea6\u503c\u65b9\u7a0b\u6700\u597d\u5730\u53cd\u6620\u4e86\u7406\u60f3\u5149\u4f53\u79ef\u534a\u5f84\u3002 \u4ece\u8fd9\u91cc\u6211\u4eec\u7ee7\u7eed\u89e3\u65b9\u7a0b\uff1a \\frac{5}{256} * Attenuation = I_{max} 5 * Attenuation = I_{max} * 256 Attenuation = I_{max} * \\frac{256}{5} K_c + K_l * d + K_q * d^2 = I_{max} * \\frac{256}{5} K_q * d^2 + K_l * d + K_c - I_{max} * \\frac{256}{5} = 0 \u6700\u540e\u7684\u65b9\u7a0b\u5f62\u6210\u4e86 ax^2 + bx + c = 0 \u7684\u5f62\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6c42\u6839\u516c\u5f0f\u6765\u89e3\u8fd9\u4e2a\u4e8c\u6b21\u65b9\u7a0b\uff1a x = \\frac{-K_l + \\sqrt{K_l^2 - 4 * K_q * (K_c - I_{max} * \\frac{256}{5})}}{2 * K_q} \u5b83\u7ed9\u6211\u4eec\u4e86\u4e00\u4e2a\u901a\u7528\u516c\u5f0f\u4ece\u800c\u5141\u8bb8\u6211\u4eec\u8ba1\u7b97 x \u7684\u503c\uff0c\u5373\u5149\u6e90\u7684\u5149\u4f53\u79ef\u534a\u5f84\uff0c\u53ea\u8981\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5e38\u91cf\uff0c\u7ebf\u6027\u548c\u4e8c\u6b21\u9879\u53c2\u6570\uff1a GLfloat constant = 1.0; GLfloat linear = 0.7; GLfloat quadratic = 1.8; GLfloat lightMax = std::fmaxf(std::fmaxf(lightColor.r, lightColor.g), lightColor.b); GLfloat radius = (-linear + std::sqrtf(linear * linear - 4 * quadratic * (constant - (256.0 / 5.0) * lightMax))) / (2 * quadratic); \u5b83\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5927\u6982\u57281.0\u52305.0\u8303\u56f4\u5185\u7684\u534a\u5f84\u503c\uff0c\u5b83\u53d6\u51b3\u4e8e\u5149\u7684\u6700\u5927\u5f3a\u5ea6\u3002 \u5bf9\u4e8e\u573a\u666f\u4e2d\u6bcf\u4e00\u4e2a\u5149\u6e90\uff0c\u6211\u4eec\u90fd\u8ba1\u7b97\u5b83\u7684\u534a\u5f84\uff0c\u5e76\u4ec5\u5728\u7247\u6bb5\u5728\u5149\u6e90\u7684\u4f53\u79ef\u5185\u90e8\u65f6\u624d\u8ba1\u7b97\u8be5\u5149\u6e90\u7684\u5149\u7167\u3002\u4e0b\u9762\u662f\u66f4\u65b0\u8fc7\u7684\u5149\u7167\u5904\u7406\u9636\u6bb5\u7247\u6bb5\u7740\u8272\u5668\uff0c\u5b83\u8003\u8651\u5230\u4e86\u8ba1\u7b97\u51fa\u6765\u7684\u5149\u4f53\u79ef\u3002\u6ce8\u610f\u8fd9\u79cd\u65b9\u6cd5\u4ec5\u4ec5\u7528\u4f5c\u6559\u5b66\u76ee\u7684\uff0c\u5728\u5b9e\u9645\u573a\u666f\u4e2d\u662f\u4e0d\u53ef\u884c\u7684\uff0c\u6211\u4eec\u4f1a\u5728\u540e\u9762\u8ba8\u8bba\u5b83\uff1a struct Light { [...] float Radius; }; void main() { [...] for(int i = 0; i < NR_LIGHTS; ++i) { // \u8ba1\u7b97\u5149\u6e90\u548c\u8be5\u7247\u6bb5\u95f4\u8ddd\u79bb float distance = length(lights[i].Position - FragPos); if(distance < lights[i].Radius) { // \u6267\u884c\u5927\u5f00\u9500\u5149\u7167 [...] } } } \u8fd9\u6b21\u7684\u7ed3\u679c\u548c\u4e4b\u524d\u4e00\u6a21\u4e00\u6837\uff0c\u4f46\u662f\u8fd9\u6b21\u7269\u4f53\u53ea\u5bf9\u6240\u5728\u5149\u4f53\u79ef\u7684\u5149\u6e90\u8ba1\u7b97\u5149\u7167\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230Demo\u6700\u7ec8\u7684\u6e90\u7801\uff0c\u5e76\u4e14\u8fd8\u6709\u66f4\u65b0\u7684\u5149\u7167\u6e32\u67d3\u9636\u6bb5\u7684 \u7247\u6bb5\u7740\u8272\u5668 \u771f\u6b63\u4f7f\u7528\u5149\u4f53\u79ef \u4e0a\u9762\u90a3\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u5728\u5b9e\u9645\u60c5\u51b5\u4e0b\u4e0d\u80fd\u771f\u6b63\u5730\u5de5\u4f5c\uff0c\u5e76\u4e14\u5b83\u53ea\u6f14\u793a\u4e86\u6211\u4eec\u53ef\u4ee5 \u4e0d\u77e5\u600e\u6837 \u80fd\u4f7f\u7528\u5149\u4f53\u79ef\u51cf\u5c11\u5149\u7167\u8fd0\u7b97\u3002\u7136\u800c\u4e8b\u5b9e\u4e0a\uff0c\u4f60\u7684GPU\u548cGLSL\u5e76\u4e0d\u64c5\u957f\u4f18\u5316\u5faa\u73af\u548c\u5206\u652f\u3002\u8fd9\u4e00\u7f3a\u9677\u7684\u539f\u56e0\u662fGPU\u4e2d\u7740\u8272\u5668\u7684\u8fd0\u884c\u662f\u9ad8\u5ea6\u5e76\u884c\u7684\uff0c\u5927\u90e8\u5206\u7684\u67b6\u6784\u8981\u6c42\u5bf9\u4e8e\u4e00\u4e2a\u5927\u7684\u7ebf\u7a0b\u96c6\u5408\uff0cGPU\u9700\u8981\u5bf9\u5b83\u8fd0\u884c\u5b8c\u5168\u4e00\u6837\u7684\u7740\u8272\u5668\u4ee3\u7801\u4ece\u800c\u83b7\u5f97\u9ad8\u6548\u7387\u3002\u8fd9\u901a\u5e38\u610f\u5473\u7740\u4e00\u4e2a\u7740\u8272\u5668\u8fd0\u884c\u65f6\u603b\u662f\u6267\u884c\u4e00\u4e2aif\u8bed\u53e5 \u6240\u6709\u7684 \u5206\u652f\u4ece\u800c\u4fdd\u8bc1\u7740\u8272\u5668\u8fd0\u884c\u90fd\u662f\u4e00\u6837\u7684\uff0c\u8fd9\u4f7f\u5f97\u6211\u4eec\u4e4b\u524d\u7684 \u534a\u5f84\u68c0\u6d4b \u4f18\u5316\u5b8c\u5168\u53d8\u5f97\u65e0\u7528\uff0c\u6211\u4eec\u4ecd\u7136\u5728\u5bf9\u6240\u6709\u5149\u6e90\u8ba1\u7b97\u5149\u7167\uff01 \u4f7f\u7528\u5149\u4f53\u79ef\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u6e32\u67d3\u4e00\u4e2a\u5b9e\u9645\u7684\u7403\u4f53\uff0c\u5e76\u6839\u636e\u5149\u4f53\u79ef\u7684\u534a\u5f84\u7f29\u653e\u3002\u8fd9\u4e9b\u7403\u7684\u4e2d\u5fc3\u653e\u7f6e\u5728\u5149\u6e90\u7684\u4f4d\u7f6e\uff0c\u7531\u4e8e\u5b83\u662f\u6839\u636e\u5149\u4f53\u79ef\u534a\u5f84\u7f29\u653e\u7684\uff0c\u8fd9\u4e2a\u7403\u4f53\u6b63\u597d\u8986\u76d6\u4e86\u5149\u7684\u53ef\u89c6\u4f53\u79ef\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u7684\u6280\u5de7\uff1a\u6211\u4eec\u4f7f\u7528\u5927\u4f53\u76f8\u540c\u7684\u5ef6\u8fdf\u7247\u6bb5\u7740\u8272\u5668\u6765\u6e32\u67d3\u7403\u4f53\u3002\u56e0\u4e3a\u7403\u4f53\u4ea7\u751f\u4e86\u5b8c\u5168\u5339\u914d\u4e8e\u53d7\u5f71\u54cd\u50cf\u7d20\u7684\u7740\u8272\u5668\u8c03\u7528\uff0c\u6211\u4eec\u53ea\u6e32\u67d3\u4e86\u53d7\u5f71\u54cd\u7684\u50cf\u7d20\u800c\u8df3\u8fc7\u5176\u5b83\u7684\u50cf\u7d20\u3002\u4e0b\u9762\u8fd9\u5e45\u56fe\u5c55\u793a\u4e86\u8fd9\u4e00\u6280\u5de7\uff1a \u5b83\u88ab\u5e94\u7528\u5728\u573a\u666f\u4e2d\u6bcf\u4e2a\u5149\u6e90\u4e0a\uff0c\u5e76\u4e14\u6240\u5f97\u7684\u7247\u6bb5\u76f8\u52a0\u6df7\u5408\u5728\u4e00\u8d77\u3002\u8fd9\u4e2a\u7ed3\u679c\u548c\u4e4b\u524d\u573a\u666f\u662f\u4e00\u6837\u7684\uff0c\u4f46\u8fd9\u4e00\u6b21\u53ea\u6e32\u67d3\u5bf9\u4e8e\u5149\u6e90\u76f8\u5173\u7684\u7247\u6bb5\u3002\u5b83\u6709\u6548\u5730\u51cf\u5c11\u4e86\u4ece nr_objects * nr_lights \u5230 nr_objects + nr_lights \u7684\u8ba1\u7b97\u91cf\uff0c\u8fd9\u4f7f\u5f97\u591a\u5149\u6e90\u573a\u666f\u7684\u6e32\u67d3\u53d8\u5f97\u65e0\u6bd4\u9ad8\u6548\u3002\u8fd9\u6b63\u662f\u4e3a\u4ec0\u4e48\u5ef6\u8fdf\u6e32\u67d3\u975e\u5e38\u9002\u5408\u6e32\u67d3\u5f88\u5927\u6570\u91cf\u5149\u6e90\u3002 \u7136\u800c\u8fd9\u4e2a\u65b9\u6cd5\u4ecd\u7136\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u9762\u5254\u9664(Face Culling)\u9700\u8981\u88ab\u542f\u7528(\u5426\u5219\u6211\u4eec\u4f1a\u6e32\u67d3\u4e00\u4e2a\u5149\u6548\u679c\u4e24\u6b21)\uff0c\u5e76\u4e14\u5728\u5b83\u542f\u7528\u7684\u65f6\u5019\u7528\u6237\u53ef\u80fd\u8fdb\u5165\u4e00\u4e2a\u5149\u6e90\u7684\u5149\u4f53\u79ef\uff0c\u7136\u800c\u8fd9\u6837\u4e4b\u540e\u8fd9\u4e2a\u4f53\u79ef\u5c31\u4e0d\u518d\u88ab\u6e32\u67d3\u4e86(\u7531\u4e8e\u80cc\u9762\u5254\u9664)\uff0c\u8fd9\u4f1a\u4f7f\u5f97\u5149\u6e90\u7684\u5f71\u54cd\u6d88\u5931\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u6a21\u677f\u7f13\u51b2\u6280\u5de7\u6765\u89e3\u51b3\u3002 \u6e32\u67d3\u5149\u4f53\u79ef\u786e\u5b9e\u4f1a\u5e26\u6765\u6c89\u91cd\u7684\u6027\u80fd\u8d1f\u62c5\uff0c\u867d\u7136\u5b83\u901a\u5e38\u6bd4\u666e\u901a\u7684\u5ef6\u8fdf\u6e32\u67d3\u66f4\u5feb\uff0c\u8fd9\u4ecd\u7136\u4e0d\u662f\u6700\u597d\u7684\u4f18\u5316\u3002\u53e6\u5916\u4e24\u4e2a\u57fa\u4e8e\u5ef6\u8fdf\u6e32\u67d3\u7684\u66f4\u6d41\u884c(\u5e76\u4e14\u66f4\u9ad8\u6548)\u7684\u62d3\u5c55\u53eb\u505a \u5ef6\u8fdf\u5149\u7167(Deferred Lighting) \u548c \u5207\u7247\u5f0f\u5ef6\u8fdf\u7740\u8272\u6cd5(Tile-based Deferred Shading) \u3002\u8fd9\u4e9b\u65b9\u6cd5\u4f1a\u5f88\u5927\u7a0b\u5ea6\u4e0a\u63d0\u9ad8\u5927\u91cf\u5149\u6e90\u6e32\u67d3\u7684\u6548\u7387\uff0c\u5e76\u4e14\u4e5f\u80fd\u5141\u8bb8\u4e00\u4e2a\u76f8\u5bf9\u9ad8\u6548\u7684\u591a\u91cd\u91c7\u6837\u6297\u952f\u9f7f(MSAA)\u3002\u7136\u800c\u53d7\u5236\u4e8e\u8fd9\u7bc7\u6559\u7a0b\u7684\u957f\u5ea6\uff0c\u6211\u5c06\u4f1a\u5728\u4e4b\u540e\u7684\u6559\u7a0b\u4e2d\u4ecb\u7ecd\u8fd9\u4e9b\u4f18\u5316\u3002 \u5ef6\u8fdf\u6e32\u67d3 vs \u6b63\u5411\u6e32\u67d3 \u4ec5\u4ec5\u662f\u5ef6\u8fdf\u7740\u8272\u6cd5\u5b83\u672c\u8eab(\u6ca1\u6709\u5149\u4f53\u79ef)\u5df2\u7ecf\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u4f18\u5316\u4e86\uff0c\u6bcf\u4e2a\u50cf\u7d20\u4ec5\u4ec5\u8fd0\u884c\u4e00\u4e2a\u5355\u72ec\u7684\u7247\u6bb5\u7740\u8272\u5668\uff0c\u7136\u800c\u5bf9\u4e8e\u6b63\u5411\u6e32\u67d3\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u5bf9\u4e00\u4e2a\u50cf\u7d20\u8fd0\u884c\u591a\u6b21\u7247\u6bb5\u7740\u8272\u5668\u3002\u5f53\u7136\uff0c\u5ef6\u8fdf\u6e32\u67d3\u786e\u5b9e\u5e26\u6765\u4e00\u4e9b\u7f3a\u70b9\uff1a\u5927\u5185\u5b58\u5f00\u9500\uff0c\u6ca1\u6709MSAA\u548c\u6df7\u5408(\u4ecd\u9700\u8981\u6b63\u5411\u6e32\u67d3\u7684\u914d\u5408)\u3002 \u5f53\u4f60\u6709\u4e00\u4e2a\u5f88\u5c0f\u7684\u573a\u666f\u5e76\u4e14\u6ca1\u6709\u5f88\u591a\u7684\u5149\u6e90\u65f6\u5019\uff0c\u5ef6\u8fdf\u6e32\u67d3\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u66f4\u5feb\u4e00\u70b9\uff0c\u751a\u81f3\u6709\u4e9b\u65f6\u5019\u7531\u4e8e\u5f00\u9500\u8d85\u8fc7\u4e86\u5b83\u7684\u4f18\u70b9\u8fd8\u4f1a\u66f4\u6162\u3002\u7136\u800c\u5728\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u573a\u666f\u4e2d\uff0c\u5ef6\u8fdf\u6e32\u67d3\u4f1a\u5feb\u901f\u53d8\u6210\u4e00\u4e2a\u91cd\u8981\u7684\u4f18\u5316\uff0c\u7279\u522b\u662f\u6709\u4e86\u66f4\u5148\u8fdb\u7684\u4f18\u5316\u62d3\u5c55\u7684\u65f6\u5019\u3002 \u6700\u540e\u6211\u4ecd\u7136\u60f3\u6307\u51fa\uff0c\u57fa\u672c\u4e0a\u6240\u6709\u80fd\u901a\u8fc7\u6b63\u5411\u6e32\u67d3\u5b8c\u6210\u7684\u6548\u679c\u80fd\u591f\u540c\u6837\u5728\u5ef6\u8fdf\u6e32\u67d3\u573a\u666f\u4e2d\u5b9e\u73b0\uff0c\u8fd9\u901a\u5e38\u9700\u8981\u4e00\u4e9b\u5c0f\u7684\u7ffb\u8bd1\u6b65\u9aa4\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u5728\u5ef6\u8fdf\u6e32\u67d3\u5668\u4e2d\u4f7f\u7528\u6cd5\u7ebf\u8d34\u56fe(Normal Mapping)\uff0c\u6211\u4eec\u9700\u8981\u6539\u53d8\u51e0\u4f55\u6e32\u67d3\u9636\u6bb5\u7740\u8272\u5668\u6765\u8f93\u51fa\u4e00\u4e2a\u4e16\u754c\u7a7a\u95f4\u6cd5\u7ebf(World-space Normal)\uff0c\u5b83\u4ece\u6cd5\u7ebf\u8d34\u56fe\u4e2d\u63d0\u53d6\u51fa\u6765(\u4f7f\u7528\u4e00\u4e2aTBN\u77e9\u9635)\u800c\u4e0d\u662f\u8868\u9762\u6cd5\u7ebf\uff0c\u5149\u7167\u6e32\u67d3\u9636\u6bb5\u4e2d\u7684\u5149\u7167\u8fd0\u7b97\u4e00\u70b9\u90fd\u4e0d\u9700\u8981\u53d8\u3002\u5982\u679c\u4f60\u60f3\u8981\u8ba9\u89c6\u5dee\u8d34\u56fe\u5de5\u4f5c\uff0c\u9996\u5148\u4f60\u9700\u8981\u5728\u91c7\u6837\u4e00\u4e2a\u7269\u4f53\u7684\u6f2b\u53cd\u5c04\uff0c\u955c\u9762\uff0c\u548c\u6cd5\u7ebf\u7eb9\u7406\u4e4b\u524d\u9996\u5148\u7f6e\u6362\u51e0\u4f55\u6e32\u67d3\u9636\u6bb5\u4e2d\u7684\u7eb9\u7406\u5750\u6807\u3002\u4e00\u65e6\u4f60\u4e86\u89e3\u4e86\u5ef6\u8fdf\u6e32\u67d3\u80cc\u540e\u7684\u7406\u5ff5\uff0c\u53d8\u5f97\u6709\u521b\u9020\u529b\u5e76\u4e0d\u662f\u4ec0\u4e48\u96be\u4e8b\u3002 \u9644\u52a0\u8d44\u6e90 Tutorial 35: Deferred Shading - Part 1 \uff1aOGLDev\u7684\u4e00\u4e2a\u5206\u6210\u4e09\u90e8\u5206\u7684\u5ef6\u8fdf\u7740\u8272\u6cd5\u6559\u7a0b\u3002\u5728Part 2\u548c3\u4e2d\u4ecb\u7ecd\u4e86\u6e32\u67d3\u5149\u4f53\u79ef Deferred Rendering for Current and Future Rendering Pipelines \uff1aAndrew Lauritzen\u7684\u5e7b\u706f\u7247\uff0c\u8ba8\u8bba\u4e86\u9ad8\u7ea7\u5207\u7247\u5f0f\u5ef6\u8fdf\u7740\u8272\u6cd5\u548c\u5ef6\u8fdf\u5149\u7167","title":"\u5ef6\u8fdf\u7740\u8272\u6cd5"},{"location":"05%20Advanced%20Lighting/08%20Deferred%20Shading/#_1","text":"\u539f\u6587 Deferred Shading \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 KenLee Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u6211\u4eec\u73b0\u5728\u4e00\u76f4\u4f7f\u7528\u7684\u5149\u7167\u65b9\u5f0f\u53eb\u505a \u6b63\u5411\u6e32\u67d3(Forward Rendering) \u6216\u8005 \u6b63\u5411\u7740\u8272\u6cd5(Forward Shading) \uff0c\u5b83\u662f\u6211\u4eec\u6e32\u67d3\u7269\u4f53\u7684\u4e00\u79cd\u975e\u5e38\u76f4\u63a5\u7684\u65b9\u5f0f\uff0c\u5728\u573a\u666f\u4e2d\u6211\u4eec\u6839\u636e\u6240\u6709\u5149\u6e90\u7167\u4eae\u4e00\u4e2a\u7269\u4f53\uff0c\u4e4b\u540e\u518d\u6e32\u67d3\u4e0b\u4e00\u4e2a\u7269\u4f53\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u5b83\u975e\u5e38\u5bb9\u6613\u7406\u89e3\uff0c\u4e5f\u5f88\u5bb9\u6613\u5b9e\u73b0\uff0c\u4f46\u662f\u540c\u65f6\u5b83\u5bf9\u7a0b\u5e8f\u6027\u80fd\u7684\u5f71\u54cd\u4e5f\u5f88\u5927\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u9700\u8981\u6e32\u67d3\u7684\u7269\u4f53\uff0c\u7a0b\u5e8f\u90fd\u8981\u5bf9\u6bcf\u4e00\u4e2a\u5149\u6e90\u6bcf\u4e00\u4e2a\u9700\u8981\u6e32\u67d3\u7684\u7247\u6bb5\u8fdb\u884c\u8fed\u4ee3\uff0c\u8fd9\u662f \u975e\u5e38 \u591a\u7684\uff01\u56e0\u4e3a\u5927\u90e8\u5206\u7247\u6bb5\u7740\u8272\u5668\u7684\u8f93\u51fa\u90fd\u4f1a\u88ab\u4e4b\u540e\u7684\u8f93\u51fa\u8986\u76d6\uff0c\u6b63\u5411\u6e32\u67d3\u8fd8\u4f1a\u5728\u573a\u666f\u4e2d\u56e0\u4e3a\u9ad8\u6df1\u7684\u590d\u6742\u5ea6(\u591a\u4e2a\u7269\u4f53\u91cd\u5408\u5728\u4e00\u4e2a\u50cf\u7d20\u4e0a)\u6d6a\u8d39\u5927\u91cf\u7684\u7247\u6bb5\u7740\u8272\u5668\u8fd0\u884c\u65f6\u95f4\u3002 \u5ef6\u8fdf\u7740\u8272\u6cd5(Deferred Shading) \uff0c \u6216\u8005\u8bf4\u662f\u5ef6\u8fdf\u6e32\u67d3(Deferred Rendering) \uff0c\u4e3a\u4e86\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u800c\u8bde\u751f\u4e86\uff0c\u5b83\u5927\u5e45\u5ea6\u5730\u6539\u53d8\u4e86\u6211\u4eec\u6e32\u67d3\u7269\u4f53\u7684\u65b9\u5f0f\u3002\u8fd9\u7ed9\u6211\u4eec\u4f18\u5316\u62e5\u6709\u5927\u91cf\u5149\u6e90\u7684\u573a\u666f\u63d0\u4f9b\u4e86\u5f88\u591a\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u5b83\u80fd\u591f\u5728\u6e32\u67d3\u4e0a\u767e\u751a\u81f3\u4e0a\u5343\u5149\u6e90\u7684\u540c\u65f6\u8fd8\u80fd\u591f\u4fdd\u6301\u80fd\u8ba9\u4eba\u63a5\u53d7\u7684\u5e27\u7387\u3002\u4e0b\u9762\u8fd9\u5f20\u56fe\u7247\u5305\u542b\u4e86\u4e00\u51711874\u4e2a\u70b9\u5149\u6e90\uff0c\u5b83\u662f\u4f7f\u7528\u5ef6\u8fdf\u7740\u8272\u6cd5\u6765\u5b8c\u6210\u7684\uff0c\u800c\u8fd9\u5bf9\u4e8e\u6b63\u5411\u6e32\u67d3\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684(\u56fe\u7247\u6765\u6e90\uff1aHannes Nevalainen)\u3002 \u5ef6\u8fdf\u7740\u8272\u6cd5\u57fa\u4e8e\u6211\u4eec \u5ef6\u8fdf(Defer) \u6216 \u63a8\u8fdf(Postpone) \u5927\u90e8\u5206\u8ba1\u7b97\u91cf\u975e\u5e38\u5927\u7684\u6e32\u67d3(\u50cf\u662f\u5149\u7167)\u5230\u540e\u671f\u8fdb\u884c\u5904\u7406\u7684\u60f3\u6cd5\u3002\u5b83\u5305\u542b\u4e24\u4e2a\u5904\u7406\u9636\u6bb5(Pass)\uff1a\u5728\u7b2c\u4e00\u4e2a\u51e0\u4f55\u5904\u7406\u9636\u6bb5(Geometry Pass)\u4e2d\uff0c\u6211\u4eec\u5148\u6e32\u67d3\u573a\u666f\u4e00\u6b21\uff0c\u4e4b\u540e\u83b7\u53d6\u5bf9\u8c61\u7684\u5404\u79cd\u51e0\u4f55\u4fe1\u606f\uff0c\u5e76\u50a8\u5b58\u5728\u4e00\u7cfb\u5217\u53eb\u505aG\u7f13\u51b2(G-buffer)\u7684\u7eb9\u7406\u4e2d\uff1b\u60f3\u60f3\u4f4d\u7f6e\u5411\u91cf(Position Vector)\u3001\u989c\u8272\u5411\u91cf(Color Vector)\u3001\u6cd5\u5411\u91cf(Normal Vector)\u548c/\u6216\u955c\u9762\u503c(Specular Value)\u3002\u573a\u666f\u4e2d\u8fd9\u4e9b\u50a8\u5b58\u5728G\u7f13\u51b2\u4e2d\u7684\u51e0\u4f55\u4fe1\u606f\u5c06\u4f1a\u5728\u4e4b\u540e\u7528\u6765\u505a(\u66f4\u590d\u6742\u7684)\u5149\u7167\u8ba1\u7b97\u3002\u4e0b\u9762\u662f\u4e00\u5e27\u4e2dG\u7f13\u51b2\u7684\u5185\u5bb9\uff1a \u6211\u4eec\u4f1a\u5728\u7b2c\u4e8c\u4e2a\u5149\u7167\u5904\u7406\u9636\u6bb5(Lighting Pass)\u4e2d\u4f7f\u7528G\u7f13\u51b2\u5185\u7684\u7eb9\u7406\u6570\u636e\u3002\u5728\u5149\u7167\u5904\u7406\u9636\u6bb5\u4e2d\uff0c\u6211\u4eec\u6e32\u67d3\u4e00\u4e2a\u5c4f\u5e55\u5927\u5c0f\u7684\u65b9\u5f62\uff0c\u5e76\u4f7f\u7528G\u7f13\u51b2\u4e2d\u7684\u51e0\u4f55\u6570\u636e\u5bf9\u6bcf\u4e00\u4e2a\u7247\u6bb5\u8ba1\u7b97\u573a\u666f\u7684\u5149\u7167\uff1b\u5728\u6bcf\u4e2a\u50cf\u7d20\u4e2d\u6211\u4eec\u90fd\u4f1a\u5bf9G\u7f13\u51b2\u8fdb\u884c\u8fed\u4ee3\u3002\u6211\u4eec\u5bf9\u4e8e\u6e32\u67d3\u8fc7\u7a0b\u8fdb\u884c\u89e3\u8026\uff0c\u5c06\u5b83\u9ad8\u7ea7\u7684\u7247\u6bb5\u5904\u7406\u632a\u5230\u540e\u671f\u8fdb\u884c\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5c06\u6bcf\u4e2a\u5bf9\u8c61\u4ece\u9876\u70b9\u7740\u8272\u5668\u5e26\u5230\u7247\u6bb5\u7740\u8272\u5668\u3002\u5149\u7167\u8ba1\u7b97\u8fc7\u7a0b\u8fd8\u662f\u548c\u6211\u4eec\u4ee5\u524d\u4e00\u6837\uff0c\u4f46\u662f\u73b0\u5728\u6211\u4eec\u9700\u8981\u4ece\u5bf9\u5e94\u7684G\u7f13\u51b2\u800c\u4e0d\u662f\u9876\u70b9\u7740\u8272\u5668(\u548c\u4e00\u4e9buniform\u53d8\u91cf)\u90a3\u91cc\u83b7\u53d6\u8f93\u5165\u53d8\u91cf\u4e86\u3002 \u4e0b\u9762\u8fd9\u5e45\u56fe\u7247\u5f88\u597d\u5730\u5c55\u793a\u4e86\u5ef6\u8fdf\u7740\u8272\u6cd5\u7684\u6574\u4e2a\u8fc7\u7a0b\uff1a \u8fd9\u79cd\u6e32\u67d3\u65b9\u6cd5\u4e00\u4e2a\u5f88\u5927\u7684\u597d\u5904\u5c31\u662f\u80fd\u4fdd\u8bc1\u5728G\u7f13\u51b2\u4e2d\u7684\u7247\u6bb5\u548c\u5728\u5c4f\u5e55\u4e0a\u5448\u73b0\u7684\u50cf\u7d20\u6240\u5305\u542b\u7684\u7247\u6bb5\u4fe1\u606f\u662f\u4e00\u6837\u7684\uff0c\u56e0\u4e3a\u6df1\u5ea6\u6d4b\u8bd5\u5df2\u7ecf\u6700\u7ec8\u5c06\u8fd9\u91cc\u7684\u7247\u6bb5\u4fe1\u606f\u4f5c\u4e3a\u6700\u9876\u5c42\u7684\u7247\u6bb5\u3002\u8fd9\u6837\u4fdd\u8bc1\u4e86\u5bf9\u4e8e\u5728\u5149\u7167\u5904\u7406\u9636\u6bb5\u4e2d\u5904\u7406\u7684\u6bcf\u4e00\u4e2a\u50cf\u7d20\u90fd\u53ea\u5904\u7406\u4e00\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u80fd\u591f\u7701\u4e0b\u5f88\u591a\u65e0\u7528\u7684\u6e32\u67d3\u8c03\u7528\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5ef6\u8fdf\u6e32\u67d3\u8fd8\u5141\u8bb8\u6211\u4eec\u505a\u66f4\u591a\u7684\u4f18\u5316\uff0c\u4ece\u800c\u6e32\u67d3\u66f4\u591a\u7684\u5149\u6e90\u3002 \u5f53\u7136\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u5e26\u6765\u51e0\u4e2a\u7f3a\u9677\uff0c \u7531\u4e8eG\u7f13\u51b2\u8981\u6c42\u6211\u4eec\u5728\u7eb9\u7406\u989c\u8272\u7f13\u51b2\u4e2d\u5b58\u50a8\u76f8\u5bf9\u6bd4\u8f83\u5927\u7684\u573a\u666f\u6570\u636e\uff0c\u8fd9\u4f1a\u6d88\u8017\u6bd4\u8f83\u591a\u7684\u663e\u5b58\uff0c\u5c24\u5176\u662f\u7c7b\u4f3c\u4f4d\u7f6e\u5411\u91cf\u4e4b\u7c7b\u7684\u9700\u8981\u9ad8\u7cbe\u5ea6\u7684\u573a\u666f\u6570\u636e\u3002 \u53e6\u5916\u4e00\u4e2a\u7f3a\u70b9\u5c31\u662f\u4ed6\u4e0d\u652f\u6301\u6df7\u8272(\u56e0\u4e3a\u6211\u4eec\u53ea\u6709\u6700\u524d\u9762\u7684\u7247\u6bb5\u4fe1\u606f)\uff0c \u56e0\u6b64\u4e5f\u4e0d\u80fd\u4f7f\u7528MSAA\u4e86\u3002\u9488\u5bf9\u8fd9\u51e0\u4e2a\u95ee\u9898\u6211\u4eec\u53ef\u4ee5\u505a\u4e00\u4e9b\u53d8\u901a\u6765\u514b\u670d\u8fd9\u4e9b\u7f3a\u70b9\uff0c\u8fd9\u4e9b\u6211\u4eec\u7559\u4f1a\u5728\u6559\u7a0b\u7684\u6700\u540e\u8ba8\u8bba\u3002 \u5728\u51e0\u4f55\u5904\u7406\u9636\u6bb5\u4e2d\u586b\u5145G\u7f13\u51b2\u975e\u5e38\u9ad8\u6548\uff0c\u56e0\u4e3a\u6211\u4eec\u76f4\u63a5\u50a8\u5b58\u50cf\u7d20\u4f4d\u7f6e\uff0c\u989c\u8272\u6216\u8005\u662f\u6cd5\u7ebf\u7b49\u5bf9\u8c61\u4fe1\u606f\u5230\u5e27\u7f13\u51b2\u4e2d\uff0c\u800c\u8fd9\u51e0\u4e4e\u4e0d\u4f1a\u6d88\u8017\u5904\u7406\u65f6\u95f4\u3002\u5728\u6b64\u57fa\u7840\u4e0a\u4f7f\u7528\u591a\u6e32\u67d3\u76ee\u6807(Multiple Render Targets, MRT)\u6280\u672f\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u5728\u4e00\u4e2a\u6e32\u67d3\u5904\u7406\u4e4b\u5185\u5b8c\u6210\u8fd9\u6240\u6709\u7684\u5de5\u4f5c\u3002","title":"\u5ef6\u8fdf\u7740\u8272\u6cd5"},{"location":"05%20Advanced%20Lighting/08%20Deferred%20Shading/#g","text":"G\u7f13\u51b2(G-buffer)\u662f\u5bf9\u6240\u6709\u7528\u6765\u50a8\u5b58\u5149\u7167\u76f8\u5173\u7684\u6570\u636e\uff0c\u5e76\u5728\u6700\u540e\u7684\u5149\u7167\u5904\u7406\u9636\u6bb5\u4e2d\u4f7f\u7528\u7684\u6240\u6709\u7eb9\u7406\u7684\u603b\u79f0\u3002\u8d81\u6b64\u673a\u4f1a\uff0c\u8ba9\u6211\u4eec\u987a\u4fbf\u590d\u4e60\u4e00\u4e0b\u5728\u6b63\u5411\u6e32\u67d3\u4e2d\u7167\u4eae\u4e00\u4e2a\u7247\u6bb5\u6240\u9700\u8981\u7684\u6240\u6709\u6570\u636e\uff1a \u4e00\u4e2a3D \u4f4d\u7f6e \u5411\u91cf\u6765\u8ba1\u7b97(\u63d2\u503c)\u7247\u6bb5\u4f4d\u7f6e\u53d8\u91cf\u4f9b lightDir \u548c viewDir \u4f7f\u7528 \u4e00\u4e2aRGB\u6f2b\u53cd\u5c04 \u989c\u8272 \u5411\u91cf\uff0c\u4e5f\u5c31\u662f\u53cd\u7167\u7387(Albedo) \u4e00\u4e2a3D \u6cd5 \u5411\u91cf\u6765\u5224\u65ad\u5e73\u9762\u7684\u659c\u7387 \u4e00\u4e2a\u955c\u9762\u5f3a\u5ea6(Specular Intensity)\u6d6e\u70b9\u503c \u6240\u6709\u5149\u6e90\u7684\u4f4d\u7f6e\u548c\u989c\u8272\u5411\u91cf \u73a9\u5bb6\u6216\u8005\u89c2\u5bdf\u8005\u7684\u4f4d\u7f6e\u5411\u91cf \u6709\u4e86\u8fd9\u4e9b(\u9010\u7247\u6bb5)\u53d8\u91cf\u7684\u5904\u7f6e\u6743\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u8ba1\u7b97\u6211\u4eec\u5f88\u719f\u6089\u7684(\u5e03\u6797-)\u98ce\u6c0f\u5149\u7167(Blinn-Phong Lighting)\u4e86\u3002\u5149\u6e90\u7684\u4f4d\u7f6e\uff0c\u989c\u8272\uff0c\u548c\u73a9\u5bb6\u7684\u89c2\u5bdf\u4f4d\u7f6e\u53ef\u4ee5\u901a\u8fc7uniform\u53d8\u91cf\u6765\u8bbe\u7f6e\uff0c\u4f46\u662f\u5176\u5b83\u53d8\u91cf\u5bf9\u4e8e\u6bcf\u4e2a\u5bf9\u8c61\u7684\u7247\u6bb5\u90fd\u662f\u4e0d\u540c\u7684\u3002\u5982\u679c\u6211\u4eec\u80fd\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4f20\u8f93\u5b8c\u5168\u76f8\u540c\u7684\u6570\u636e\u5230\u6700\u7ec8\u7684\u5ef6\u8fdf\u5149\u7167\u5904\u7406\u9636\u6bb5\u4e2d\uff0c\u6211\u4eec\u5c31\u80fd\u8ba1\u7b97\u4e0e\u4e4b\u524d\u76f8\u540c\u7684\u5149\u7167\u6548\u679c\u4e86\uff0c\u5c3d\u7ba1\u6211\u4eec\u53ea\u662f\u5728\u6e32\u67d3\u4e00\u4e2a2D\u65b9\u5f62\u7684\u7247\u6bb5\u3002 OpenGL\u5e76\u6ca1\u6709\u9650\u5236\u6211\u4eec\u80fd\u5728\u7eb9\u7406\u4e2d\u80fd\u5b58\u50a8\u7684\u4e1c\u897f\uff0c\u6240\u4ee5\u73b0\u5728\u4f60\u5e94\u8be5\u6e05\u695a\u5728\u4e00\u4e2a\u6216\u591a\u4e2a\u5c4f\u5e55\u5927\u5c0f\u7684\u7eb9\u7406\u4e2d\u50a8\u5b58\u6240\u6709\u9010\u7247\u6bb5\u6570\u636e\u5e76\u5728\u4e4b\u540e\u5149\u7167\u5904\u7406\u9636\u6bb5\u4e2d\u4f7f\u7528\u7684\u53ef\u884c\u6027\u4e86\u3002\u56e0\u4e3aG\u7f13\u51b2\u7eb9\u7406\u5c06\u4f1a\u548c\u5149\u7167\u5904\u7406\u9636\u6bb5\u4e2d\u76842D\u65b9\u5f62\u4e00\u6837\u5927\uff0c\u6211\u4eec\u4f1a\u83b7\u5f97\u548c\u6b63\u5411\u6e32\u67d3\u8bbe\u7f6e\u5b8c\u5168\u4e00\u6837\u7684\u7247\u6bb5\u6570\u636e\uff0c\u4f46\u5728\u5149\u7167\u5904\u7406\u9636\u6bb5\u8fd9\u91cc\u662f\u4e00\u5bf9\u4e00\u6620\u5c04\u3002 \u6574\u4e2a\u8fc7\u7a0b\u5728\u4f2a\u4ee3\u7801\u4e2d\u4f1a\u662f\u8fd9\u6837\u7684\uff1a while(...) // \u6e38\u620f\u5faa\u73af { // 1. \u51e0\u4f55\u5904\u7406\u9636\u6bb5\uff1a\u6e32\u67d3\u6240\u6709\u7684\u51e0\u4f55/\u989c\u8272\u6570\u636e\u5230G\u7f13\u51b2 glBindFramebuffer(GL_FRAMEBUFFER, gBuffer); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); gBufferShader.Use(); for(Object obj : Objects) { ConfigureShaderTransformsAndUniforms(); obj.Draw(); } // 2. \u5149\u7167\u5904\u7406\u9636\u6bb5\uff1a\u4f7f\u7528G\u7f13\u51b2\u8ba1\u7b97\u573a\u666f\u7684\u5149\u7167 glBindFramebuffer(GL_FRAMEBUFFER, 0); glClear(GL_COLOR_BUFFER_BIT); lightingPassShader.Use(); BindAllGBufferTextures(); SetLightingUniforms(); RenderQuad(); } \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7247\u6bb5\u6211\u4eec\u9700\u8981\u50a8\u5b58\u7684\u6570\u636e\u6709\uff1a\u4e00\u4e2a \u4f4d\u7f6e \u5411\u91cf\u3001\u4e00\u4e2a \u6cd5 \u5411\u91cf\uff0c\u4e00\u4e2a \u989c\u8272 \u5411\u91cf\uff0c\u4e00\u4e2a\u955c\u9762\u5f3a\u5ea6\u503c\u3002\u6240\u4ee5\u6211\u4eec\u5728\u51e0\u4f55\u5904\u7406\u9636\u6bb5\u4e2d\u9700\u8981\u6e32\u67d3\u573a\u666f\u4e2d\u6240\u6709\u7684\u5bf9\u8c61\u5e76\u50a8\u5b58\u8fd9\u4e9b\u6570\u636e\u5206\u91cf\u5230G\u7f13\u51b2\u4e2d\u3002\u6211\u4eec\u53ef\u4ee5\u518d\u6b21\u4f7f\u7528 \u591a\u6e32\u67d3\u76ee\u6807(Multiple Render Targets) \u6765\u5728\u4e00\u4e2a\u6e32\u67d3\u5904\u7406\u4e4b\u5185\u6e32\u67d3\u591a\u4e2a\u989c\u8272\u7f13\u51b2\uff0c\u5728\u4e4b\u524d\u7684 \u6cdb\u5149\u6559\u7a0b \u4e2d\u6211\u4eec\u4e5f\u7b80\u5355\u5730\u63d0\u53ca\u4e86\u5b83\u3002 \u5bf9\u4e8e\u51e0\u4f55\u6e32\u67d3\u5904\u7406\u9636\u6bb5\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u521d\u59cb\u5316\u4e00\u4e2a\u5e27\u7f13\u51b2\u5bf9\u8c61\uff0c\u6211\u4eec\u5f88\u76f4\u89c2\u7684\u79f0\u5b83\u4e3a gBuffer \uff0c\u5b83\u5305\u542b\u4e86\u591a\u4e2a\u989c\u8272\u7f13\u51b2\u548c\u4e00\u4e2a\u5355\u72ec\u7684\u6df1\u5ea6\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61(Depth Renderbuffer Object)\u3002\u5bf9\u4e8e\u4f4d\u7f6e\u548c\u6cd5\u5411\u91cf\u7684\u7eb9\u7406\uff0c\u6211\u4eec\u5e0c\u671b\u4f7f\u7528\u9ad8\u7cbe\u5ea6\u7684\u7eb9\u7406(\u6bcf\u5206\u91cf16\u621632\u4f4d\u7684\u6d6e\u70b9\u6570)\uff0c\u800c\u5bf9\u4e8e\u53cd\u7167\u7387\u548c\u955c\u9762\u503c\uff0c\u4f7f\u7528\u9ed8\u8ba4\u7684\u7eb9\u7406(\u6bcf\u5206\u91cf8\u4f4d\u6d6e\u70b9\u6570)\u5c31\u591f\u4e86\u3002 GLuint gBuffer; glGenFramebuffers(1, &gBuffer); glBindFramebuffer(GL_FRAMEBUFFER, gBuffer); GLuint gPosition, gNormal, gColorSpec; // - \u4f4d\u7f6e\u989c\u8272\u7f13\u51b2 glGenTextures(1, &gPosition); glBindTexture(GL_TEXTURE_2D, gPosition); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB16F, SCR_WIDTH, SCR_HEIGHT, 0, GL_RGB, GL_FLOAT, NULL); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, gPosition, 0 // - \u6cd5\u7ebf\u989c\u8272\u7f13\u51b2 glGenTextures(1, &gNormal); glBindTexture(GL_TEXTURE_2D, gNormal); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB16F, SCR_WIDTH, SCR_HEIGHT, 0, GL_RGB, GL_FLOAT, NULL); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT1, GL_TEXTURE_2D, gNormal, 0); // - \u989c\u8272 + \u955c\u9762\u989c\u8272\u7f13\u51b2 glGenTextures(1, &gAlbedoSpec); glBindTexture(GL_TEXTURE_2D, gAlbedoSpec); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, SCR_WIDTH, SCR_HEIGHT, 0, GL_RGBA, GL_FLOAT, NULL); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT2, GL_TEXTURE_2D, gAlbedoSpec, 0); // - \u544a\u8bc9OpenGL\u6211\u4eec\u5c06\u8981\u4f7f\u7528(\u5e27\u7f13\u51b2\u7684)\u54ea\u79cd\u989c\u8272\u9644\u4ef6\u6765\u8fdb\u884c\u6e32\u67d3 GLuint attachments[3] = { GL_COLOR_ATTACHMENT0, GL_COLOR_ATTACHMENT1, GL_COLOR_ATTACHMENT2 }; glDrawBuffers(3, attachments); // \u4e4b\u540e\u540c\u6837\u6dfb\u52a0\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61(Render Buffer Object)\u4e3a\u6df1\u5ea6\u7f13\u51b2(Depth Buffer)\uff0c\u5e76\u68c0\u67e5\u5b8c\u6574\u6027 [...] \u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u4e86\u591a\u6e32\u67d3\u76ee\u6807\uff0c\u6211\u4eec\u9700\u8981\u663e\u5f0f\u544a\u8bc9OpenGL\u6211\u4eec\u9700\u8981\u4f7f\u7528 glDrawBuffers \u6e32\u67d3\u7684\u662f\u548c GBuffer \u5173\u8054\u7684\u54ea\u4e2a\u989c\u8272\u7f13\u51b2\u3002\u540c\u6837\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u4f7f\u7528RGB\u7eb9\u7406\u6765\u50a8\u5b58\u4f4d\u7f6e\u548c\u6cd5\u7ebf\u7684\u6570\u636e\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5bf9\u8c61\u53ea\u6709\u4e09\u4e2a\u5206\u91cf\uff1b\u4f46\u662f\u6211\u4eec\u5c06\u989c\u8272\u548c\u955c\u9762\u5f3a\u5ea6\u6570\u636e\u5408\u5e76\u5230\u4e00\u8d77\uff0c\u5b58\u50a8\u5230\u4e00\u4e2a\u5355\u72ec\u7684RGBA\u7eb9\u7406\u91cc\u9762\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u58f0\u660e\u4e00\u4e2a\u989d\u5916\u7684\u989c\u8272\u7f13\u51b2\u7eb9\u7406\u4e86\u3002\u968f\u7740\u4f60\u7684\u5ef6\u8fdf\u6e32\u67d3\u7ba1\u7ebf\u53d8\u5f97\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u9700\u8981\u66f4\u591a\u7684\u6570\u636e\u7684\u65f6\u5019\uff0c\u4f60\u5c31\u4f1a\u5f88\u5feb\u53d1\u73b0\u65b0\u7684\u65b9\u5f0f\u6765\u7ec4\u5408\u6570\u636e\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u7eb9\u7406\u5f53\u4e2d\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u6e32\u67d3\u5b83\u4eec\u5230G\u7f13\u51b2\u4e2d\u3002\u5047\u8bbe\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6709\u6f2b\u53cd\u5c04\uff0c\u4e00\u4e2a\u6cd5\u7ebf\u548c\u4e00\u4e2a\u955c\u9762\u5f3a\u5ea6\u7eb9\u7406\uff0c\u6211\u4eec\u4f1a\u60f3\u4f7f\u7528\u4e00\u4e9b\u50cf\u4e0b\u9762\u8fd9\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u7684\u4e1c\u897f\u6765\u6e32\u67d3\u5b83\u4eec\u5230G\u7f13\u51b2\u4e2d\u53bb\u3002 #version 330 core layout (location = 0) out vec3 gPosition; layout (location = 1) out vec3 gNormal; layout (location = 2) out vec4 gAlbedoSpec; in vec2 TexCoords; in vec3 FragPos; in vec3 Normal; uniform sampler2D texture_diffuse1; uniform sampler2D texture_specular1; void main() { // \u5b58\u50a8\u7b2c\u4e00\u4e2aG\u7f13\u51b2\u7eb9\u7406\u4e2d\u7684\u7247\u6bb5\u4f4d\u7f6e\u5411\u91cf gPosition = FragPos; // \u540c\u6837\u5b58\u50a8\u5bf9\u6bcf\u4e2a\u9010\u7247\u6bb5\u6cd5\u7ebf\u5230G\u7f13\u51b2\u4e2d gNormal = normalize(Normal); // \u548c\u6f2b\u53cd\u5c04\u5bf9\u6bcf\u4e2a\u9010\u7247\u6bb5\u989c\u8272 gAlbedoSpec.rgb = texture(texture_diffuse1, TexCoords).rgb; // \u5b58\u50a8\u955c\u9762\u5f3a\u5ea6\u5230gAlbedoSpec\u7684alpha\u5206\u91cf gAlbedoSpec.a = texture(texture_specular1, TexCoords).r; } \u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86\u591a\u6e32\u67d3\u76ee\u6807\uff0c\u8fd9\u4e2a\u5e03\u5c40\u6307\u793a\u7b26(Layout Specifier)\u544a\u8bc9\u4e86OpenGL\u6211\u4eec\u9700\u8981\u6e32\u67d3\u5230\u5f53\u524d\u7684\u6d3b\u8dc3\u5e27\u7f13\u51b2\u4e2d\u7684\u54ea\u4e00\u4e2a\u989c\u8272\u7f13\u51b2\u3002\u6ce8\u610f\u6211\u4eec\u5e76\u6ca1\u6709\u50a8\u5b58\u955c\u9762\u5f3a\u5ea6\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u989c\u8272\u7f13\u51b2\u7eb9\u7406\u4e2d\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u50a8\u5b58\u5b83\u5355\u72ec\u7684\u6d6e\u70b9\u503c\u5230\u5176\u5b83\u989c\u8272\u7f13\u51b2\u7eb9\u7406\u7684alpha\u5206\u91cf\u4e2d\u3002 Attention \u8bf7\u8bb0\u4f4f\uff0c\u56e0\u4e3a\u6709\u5149\u7167\u8ba1\u7b97\uff0c\u6240\u4ee5\u4fdd\u8bc1\u6240\u6709\u53d8\u91cf\u5728\u4e00\u4e2a\u5750\u6807\u7a7a\u95f4\u5f53\u4e2d\u81f3\u5173\u91cd\u8981\u3002\u5728\u8fd9\u91cc\u6211\u4eec\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\u5b58\u50a8(\u5e76\u8ba1\u7b97)\u6240\u6709\u7684\u53d8\u91cf\u3002 \u5982\u679c\u6211\u4eec\u73b0\u5728\u60f3\u8981\u6e32\u67d3\u4e00\u5927\u5806\u7eb3\u7c73\u88c5\u6218\u58eb\u5bf9\u8c61\u5230 gBuffer \u5e27\u7f13\u51b2\u4e2d\uff0c\u5e76\u901a\u8fc7\u4e00\u4e2a\u4e00\u4e2a\u5206\u522b\u6295\u5f71\u5b83\u7684\u989c\u8272\u7f13\u51b2\u5230\u94fa\u5c4f\u56db\u8fb9\u5f62\u4e2d\u5c1d\u8bd5\u5c06\u4ed6\u4eec\u663e\u793a\u51fa\u6765\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u5411\u4e0b\u9762\u8fd9\u6837\u7684\u4e1c\u897f\uff1a \u5c1d\u8bd5\u60f3\u8c61\u4e16\u754c\u7a7a\u95f4\u4f4d\u7f6e\u548c\u6cd5\u5411\u91cf\u90fd\u662f\u6b63\u786e\u7684\u3002\u6bd4\u5982\u8bf4\uff0c\u6307\u5411\u53f3\u4fa7\u7684\u6cd5\u5411\u91cf\u5c06\u4f1a\u88ab\u66f4\u591a\u5730\u5bf9\u9f50\u5230\u7ea2\u8272\u4e0a\uff0c\u4ece\u573a\u666f\u539f\u70b9\u6307\u5411\u53f3\u4fa7\u7684\u4f4d\u7f6e\u77e2\u91cf\u4e5f\u540c\u6837\u662f\u8fd9\u6837\u3002\u4e00\u65e6\u4f60\u5bf9G\u7f13\u51b2\u4e2d\u7684\u5185\u5bb9\u6ee1\u610f\u4e86\uff0c\u6211\u4eec\u5c31\u8be5\u8fdb\u5165\u5230\u4e0b\u4e00\u6b65\uff1a\u5149\u7167\u5904\u7406\u9636\u6bb5\u4e86\u3002","title":"G\u7f13\u51b2"},{"location":"05%20Advanced%20Lighting/08%20Deferred%20Shading/#_2","text":"\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u5927\u5806\u7684\u7247\u6bb5\u6570\u636e\u50a8\u5b58\u5728G\u7f13\u51b2\u4e2d\u4f9b\u6211\u4eec\u5904\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u901a\u8fc7\u4e00\u4e2a\u50cf\u7d20\u4e00\u4e2a\u50cf\u7d20\u5730\u904d\u5386\u5404\u4e2aG\u7f13\u51b2\u7eb9\u7406\uff0c\u5e76\u5c06\u50a8\u5b58\u5728\u5b83\u4eec\u91cc\u9762\u7684\u5185\u5bb9\u4f5c\u4e3a\u5149\u7167\u7b97\u6cd5\u7684\u8f93\u5165\uff0c\u6765\u5b8c\u5168\u8ba1\u7b97\u573a\u666f\u6700\u7ec8\u7684\u5149\u7167\u989c\u8272\u3002\u7531\u4e8e\u6240\u6709\u7684G\u7f13\u51b2\u7eb9\u7406\u90fd\u4ee3\u8868\u7684\u662f\u6700\u7ec8\u53d8\u6362\u7684\u7247\u6bb5\u503c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u6bcf\u4e00\u4e2a\u50cf\u7d20\u6267\u884c\u4e00\u6b21\u6602\u8d35\u7684\u5149\u7167\u8fd0\u7b97\u5c31\u884c\u4e86\u3002\u8fd9\u4f7f\u5f97\u5ef6\u8fdf\u5149\u7167\u975e\u5e38\u9ad8\u6548\uff0c\u7279\u522b\u662f\u5728\u9700\u8981\u8c03\u7528\u5927\u91cf\u91cd\u578b\u7247\u6bb5\u7740\u8272\u5668\u7684\u590d\u6742\u573a\u666f\u4e2d\u3002 \u5bf9\u4e8e\u8fd9\u4e2a\u5149\u7167\u5904\u7406\u9636\u6bb5\uff0c\u6211\u4eec\u5c06\u4f1a\u6e32\u67d3\u4e00\u4e2a2D\u5168\u5c4f\u7684\u65b9\u5f62(\u6709\u4e00\u70b9\u50cf\u540e\u671f\u5904\u7406\u6548\u679c)\u5e76\u4e14\u5728\u6bcf\u4e2a\u50cf\u7d20\u4e0a\u8fd0\u884c\u4e00\u4e2a\u6602\u8d35\u7684\u5149\u7167\u7247\u6bb5\u7740\u8272\u5668\u3002 glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); shaderLightingPass.Use(); glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_2D, gPosition); glActiveTexture(GL_TEXTURE1); glBindTexture(GL_TEXTURE_2D, gNormal); glActiveTexture(GL_TEXTURE2); glBindTexture(GL_TEXTURE_2D, gAlbedoSpec); // \u540c\u6837\u53d1\u9001\u5149\u7167\u76f8\u5173\u7684uniform SendAllLightUniformsToShader(shaderLightingPass); glUniform3fv(glGetUniformLocation(shaderLightingPass.Program, \"viewPos\"), 1, &camera.Position[0]); RenderQuad(); \u6211\u4eec\u5728\u6e32\u67d3\u4e4b\u524d\u7ed1\u5b9a\u4e86G\u7f13\u51b2\u4e2d\u6240\u6709\u76f8\u5173\u7684\u7eb9\u7406\uff0c\u5e76\u4e14\u53d1\u9001\u5149\u7167\u76f8\u5173\u7684uniform\u53d8\u91cf\u5230\u7740\u8272\u5668\u4e2d\u3002 \u5149\u7167\u5904\u7406\u9636\u6bb5\u7684\u7247\u6bb5\u7740\u8272\u5668\u548c\u6211\u4eec\u4e4b\u524d\u4e00\u76f4\u5728\u7528\u7684\u5149\u7167\u6559\u7a0b\u7740\u8272\u5668\u662f\u975e\u5e38\u76f8\u4f3c\u7684\uff0c\u9664\u4e86\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5\uff0c\u4ece\u800c\u4f7f\u6211\u4eec\u80fd\u591f\u83b7\u53d6\u5149\u7167\u7684\u8f93\u5165\u53d8\u91cf\uff0c\u5f53\u7136\u8fd9\u4e9b\u53d8\u91cf\u6211\u4eec\u4f1a\u4eceG\u7f13\u51b2\u4e2d\u76f4\u63a5\u91c7\u6837\u3002 #version 330 core out vec4 FragColor; in vec2 TexCoords; uniform sampler2D gPosition; uniform sampler2D gNormal; uniform sampler2D gAlbedoSpec; struct Light { vec3 Position; vec3 Color; }; const int NR_LIGHTS = 32; uniform Light lights[NR_LIGHTS]; uniform vec3 viewPos; void main() { // \u4eceG\u7f13\u51b2\u4e2d\u83b7\u53d6\u6570\u636e vec3 FragPos = texture(gPosition, TexCoords).rgb; vec3 Normal = texture(gNormal, TexCoords).rgb; vec3 Albedo = texture(gAlbedoSpec, TexCoords).rgb; float Specular = texture(gAlbedoSpec, TexCoords).a; // \u7136\u540e\u548c\u5f80\u5e38\u4e00\u6837\u5730\u8ba1\u7b97\u5149\u7167 vec3 lighting = Albedo * 0.1; // \u786c\u7f16\u7801\u73af\u5883\u5149\u7167\u5206\u91cf vec3 viewDir = normalize(viewPos - FragPos); for(int i = 0; i < NR_LIGHTS; ++i) { // \u6f2b\u53cd\u5c04 vec3 lightDir = normalize(lights[i].Position - FragPos); vec3 diffuse = max(dot(Normal, lightDir), 0.0) * Albedo * lights[i].Color; lighting += diffuse; } FragColor = vec4(lighting, 1.0); } \u5149\u7167\u5904\u7406\u9636\u6bb5\u7740\u8272\u5668\u63a5\u53d7\u4e09\u4e2auniform\u7eb9\u7406\uff0c\u4ee3\u8868G\u7f13\u51b2\uff0c\u5b83\u4eec\u5305\u542b\u4e86\u6211\u4eec\u5728\u51e0\u4f55\u5904\u7406\u9636\u6bb5\u50a8\u5b58\u7684\u6240\u6709\u6570\u636e\u3002\u5982\u679c\u6211\u4eec\u73b0\u5728\u518d\u4f7f\u7528\u5f53\u524d\u7247\u6bb5\u7684\u7eb9\u7406\u5750\u6807\u91c7\u6837\u8fd9\u4e9b\u6570\u636e\uff0c\u6211\u4eec\u5c06\u4f1a\u83b7\u5f97\u548c\u4e4b\u524d\u5b8c\u5168\u4e00\u6837\u7684\u7247\u6bb5\u503c\uff0c\u8fd9\u5c31\u50cf\u6211\u4eec\u5728\u76f4\u63a5\u6e32\u67d3\u51e0\u4f55\u4f53\u3002\u5728\u7247\u6bb5\u7740\u8272\u5668\u7684\u4e00\u5f00\u59cb\uff0c\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u7eb9\u7406\u67e5\u627e\u4eceG\u7f13\u51b2\u7eb9\u7406\u4e2d\u83b7\u53d6\u4e86\u5149\u7167\u76f8\u5173\u7684\u53d8\u91cf\u3002\u6ce8\u610f\u6211\u4eec\u4ece gAlbedoSpec \u7eb9\u7406\u4e2d\u540c\u65f6\u83b7\u53d6\u4e86 Albedo \u989c\u8272\u548c Spqcular \u5f3a\u5ea6\u3002 \u56e0\u4e3a\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u6709\u4e86\u5fc5\u8981\u7684\u9010\u7247\u6bb5\u53d8\u91cf(\u548c\u76f8\u5173\u7684uniform\u53d8\u91cf)\u6765\u8ba1\u7b97\u5e03\u6797-\u98ce\u6c0f\u5149\u7167(Blinn-Phong Lighting)\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5bf9\u5149\u7167\u4ee3\u7801\u505a\u4efb\u4f55\u4fee\u6539\u4e86\u3002\u6211\u4eec\u5728\u5ef6\u8fdf\u7740\u8272\u6cd5\u4e2d\u552f\u4e00\u9700\u8981\u6539\u7684\u5c31\u662f\u83b7\u53d6\u5149\u7167\u8f93\u5165\u53d8\u91cf\u7684\u65b9\u6cd5\u3002 \u8fd0\u884c\u4e00\u4e2a\u5305\u542b32\u4e2a\u5c0f\u5149\u6e90\u7684\u7b80\u5355Demo\u4f1a\u662f\u50cf\u8fd9\u6837\u5b50\u7684\uff1a \u4f60\u53ef\u4ee5\u5728\u4ee5\u4e0b\u4f4d\u7f6e\u627e\u5230Demo\u7684\u5b8c\u6574 \u6e90\u4ee3\u7801 \uff0c\u548c\u51e0\u4f55\u6e32\u67d3\u9636\u6bb5\u7684 \u9876\u70b9 \u548c \u7247\u6bb5 \u7740\u8272\u5668\uff0c\u8fd8\u6709\u5149\u7167\u6e32\u67d3\u9636\u6bb5\u7684 \u9876\u70b9 \u548c \u7247\u6bb5 \u7740\u8272\u5668\u3002 \u5ef6\u8fdf\u7740\u8272\u6cd5\u7684\u5176\u4e2d\u4e00\u4e2a\u7f3a\u70b9\u5c31\u662f\u5b83\u4e0d\u80fd\u8fdb\u884c \u6df7\u5408 (Blending)\uff0c\u56e0\u4e3aG\u7f13\u51b2\u4e2d\u6240\u6709\u7684\u6570\u636e\u90fd\u662f\u4ece\u4e00\u4e2a\u5355\u72ec\u7684\u7247\u6bb5\u4e2d\u6765\u7684\uff0c\u800c\u6df7\u5408\u9700\u8981\u5bf9\u591a\u4e2a\u7247\u6bb5\u7684\u7ec4\u5408\u8fdb\u884c\u64cd\u4f5c\u3002\u5ef6\u8fdf\u7740\u8272\u6cd5\u53e6\u5916\u4e00\u4e2a\u7f3a\u70b9\u5c31\u662f\u5b83\u8feb\u4f7f\u4f60\u5bf9\u5927\u90e8\u5206\u573a\u666f\u7684\u5149\u7167\u4f7f\u7528\u76f8\u540c\u7684\u5149\u7167\u7b97\u6cd5\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5305\u542b\u66f4\u591a\u5173\u4e8e\u6750\u8d28\u7684\u6570\u636e\u5230G\u7f13\u51b2\u4e2d\u6765\u51cf\u8f7b\u8fd9\u4e00\u7f3a\u70b9\u3002 \u4e3a\u4e86\u514b\u670d\u8fd9\u4e9b\u7f3a\u70b9(\u7279\u522b\u662f\u6df7\u5408)\uff0c\u6211\u4eec\u901a\u5e38\u5206\u5272\u6211\u4eec\u7684\u6e32\u67d3\u5668\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a\u4e00\u4e2a\u662f\u5ef6\u8fdf\u6e32\u67d3\u7684\u90e8\u5206\uff0c\u53e6\u4e00\u4e2a\u662f\u4e13\u95e8\u4e3a\u4e86\u6df7\u5408\u6216\u8005\u5176\u4ed6\u4e0d\u9002\u5408\u5ef6\u8fdf\u6e32\u67d3\u7ba1\u7ebf\u7684\u7740\u8272\u5668\u6548\u679c\u800c\u8bbe\u8ba1\u7684\u7684\u6b63\u5411\u6e32\u67d3\u7684\u90e8\u5206\u3002\u4e3a\u4e86\u5c55\u793a\u8fd9\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u6211\u4eec\u5c06\u4f1a\u4f7f\u7528\u6b63\u5411\u6e32\u67d3\u5668\u6e32\u67d3\u5149\u6e90\u4e3a\u4e00\u4e2a\u5c0f\u7acb\u65b9\u4f53\uff0c\u56e0\u4e3a\u5149\u7167\u7acb\u65b9\u4f53\u4f1a\u9700\u8981\u4e00\u4e2a\u7279\u6b8a\u7684\u7740\u8272\u5668(\u4f1a\u8f93\u51fa\u4e00\u4e2a\u5149\u7167\u989c\u8272)\u3002","title":"\u5ef6\u8fdf\u5149\u7167\u5904\u7406\u9636\u6bb5"},{"location":"05%20Advanced%20Lighting/08%20Deferred%20Shading/#_3","text":"\u73b0\u5728\u6211\u4eec\u60f3\u8981\u6e32\u67d3\u6bcf\u4e00\u4e2a\u5149\u6e90\u4e3a\u4e00\u4e2a3D\u7acb\u65b9\u4f53\uff0c\u5e76\u653e\u7f6e\u5728\u5149\u6e90\u7684\u4f4d\u7f6e\u4e0a\u968f\u7740\u5ef6\u8fdf\u6e32\u67d3\u5668\u4e00\u8d77\u53d1\u51fa\u5149\u6e90\u7684\u989c\u8272\u3002\u5f88\u660e\u663e\uff0c\u6211\u4eec\u9700\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u5728\u5ef6\u8fdf\u6e32\u67d3\u65b9\u5f62\u4e4b\u4e0a\u6b63\u5411\u6e32\u67d3\u6240\u6709\u7684\u5149\u6e90\uff0c\u5b83\u4f1a\u5728\u5ef6\u8fdf\u6e32\u67d3\u7ba1\u7ebf\u7684\u6700\u540e\u8fdb\u884c\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u50cf\u6b63\u5e38\u60c5\u51b5\u4e0b\u6e32\u67d3\u7acb\u65b9\u4f53\uff0c\u53ea\u662f\u4f1a\u5728\u6211\u4eec\u5b8c\u6210\u5ef6\u8fdf\u6e32\u67d3\u64cd\u4f5c\u4e4b\u540e\u8fdb\u884c\u3002\u4ee3\u7801\u4f1a\u50cf\u8fd9\u6837\uff1a // \u5ef6\u8fdf\u6e32\u67d3\u5149\u7167\u6e32\u67d3\u9636\u6bb5 [...] RenderQuad(); // \u73b0\u5728\u50cf\u6b63\u5e38\u60c5\u51b5\u4e00\u6837\u6b63\u5411\u6e32\u67d3\u6240\u6709\u5149\u7acb\u65b9\u4f53 shaderLightBox.Use(); glUniformMatrix4fv(locProjection, 1, GL_FALSE, glm::value_ptr(projection)); glUniformMatrix4fv(locView, 1, GL_FALSE, glm::value_ptr(view)); for (GLuint i = 0; i < lightPositions.size(); i++) { model = glm::mat4(); model = glm::translate(model, lightPositions[i]); model = glm::scale(model, glm::vec3(0.25f)); glUniformMatrix4fv(locModel, 1, GL_FALSE, glm::value_ptr(model)); glUniform3fv(locLightcolor, 1, &lightColors[i][0]); RenderCube(); } \u7136\u800c\uff0c\u8fd9\u4e9b\u6e32\u67d3\u51fa\u6765\u7684\u7acb\u65b9\u4f53\u5e76\u6ca1\u6709\u8003\u8651\u5230\u6211\u4eec\u50a8\u5b58\u7684\u5ef6\u8fdf\u6e32\u67d3\u5668\u7684\u51e0\u4f55\u6df1\u5ea6(Depth)\u4fe1\u606f\uff0c\u5e76\u4e14\u7ed3\u679c\u662f\u5b83\u88ab\u6e32\u67d3\u5728\u4e4b\u524d\u6e32\u67d3\u8fc7\u7684\u7269\u4f53\u4e4b\u4e0a\uff0c\u8fd9\u5e76\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u3002 \u6211\u4eec\u9700\u8981\u505a\u7684\u5c31\u662f\u9996\u5148\u590d\u5236\u51fa\u5728\u51e0\u4f55\u6e32\u67d3\u9636\u6bb5\u4e2d\u50a8\u5b58\u7684\u6df1\u5ea6\u4fe1\u606f\uff0c\u5e76\u8f93\u51fa\u5230\u9ed8\u8ba4\u7684\u5e27\u7f13\u51b2\u7684\u6df1\u5ea6\u7f13\u51b2\uff0c\u7136\u540e\u6211\u4eec\u624d\u6e32\u67d3\u5149\u7acb\u65b9\u4f53\u3002\u8fd9\u6837\u4e4b\u540e\u53ea\u6709\u5f53\u5b83\u5728\u4e4b\u524d\u6e32\u67d3\u8fc7\u7684\u51e0\u4f55\u4f53\u4e0a\u65b9\u7684\u65f6\u5019\uff0c\u5149\u7acb\u65b9\u4f53\u7684\u7247\u6bb5\u624d\u4f1a\u88ab\u6e32\u67d3\u51fa\u6765\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 glBlitFramebuffer \u590d\u5236\u4e00\u4e2a\u5e27\u7f13\u51b2\u7684\u5185\u5bb9\u5230\u53e6\u4e00\u4e2a\u5e27\u7f13\u51b2\u4e2d\uff0c\u8fd9\u4e2a\u51fd\u6570\u6211\u4eec\u4e5f\u5728 \u6297\u952f\u9f7f \u7684\u6559\u7a0b\u4e2d\u4f7f\u7528\u8fc7\uff0c\u7528\u6765\u8fd8\u539f\u591a\u91cd\u91c7\u6837\u7684\u5e27\u7f13\u51b2\u3002 glBlitFramebuffer \u8fd9\u4e2a\u51fd\u6570\u5141\u8bb8\u6211\u4eec\u590d\u5236\u4e00\u4e2a\u7528\u6237\u5b9a\u4e49\u7684\u5e27\u7f13\u51b2\u533a\u57df\u5230\u53e6\u4e00\u4e2a\u7528\u6237\u5b9a\u4e49\u7684\u5e27\u7f13\u51b2\u533a\u57df\u3002 \u6211\u4eec\u50a8\u5b58\u6240\u6709\u5ef6\u8fdf\u6e32\u67d3\u9636\u6bb5\u4e2d\u6240\u6709\u7269\u4f53\u7684\u6df1\u5ea6\u4fe1\u606f\u5728 gBuffer \u8fd9\u4e2aFBO\u4e2d\u3002\u5982\u679c\u6211\u4eec\u4ec5\u4ec5\u662f\u7b80\u5355\u590d\u5236\u5b83\u7684\u6df1\u5ea6\u7f13\u51b2\u5185\u5bb9\u5230\u9ed8\u8ba4\u5e27\u7f13\u51b2\u7684\u6df1\u5ea6\u7f13\u51b2\u4e2d\uff0c\u90a3\u4e48\u5149\u7acb\u65b9\u4f53\u5c31\u4f1a\u50cf\u662f\u573a\u666f\u4e2d\u6240\u6709\u7684\u51e0\u4f55\u4f53\u90fd\u662f\u6b63\u5411\u6e32\u67d3\u51fa\u6765\u7684\u4e00\u6837\u6e32\u67d3\u51fa\u6765\u3002\u5c31\u50cf\u5728\u6297\u952f\u9f7f\u6559\u7a0b\u4e2d\u4ecb\u7ecd\u7684\u90a3\u6837\uff0c\u6211\u4eec\u9700\u8981\u6307\u5b9a\u4e00\u4e2a\u5e27\u7f13\u51b2\u4e3a\u8bfb\u5e27\u7f13\u51b2(Read Framebuffer)\uff0c\u5e76\u4e14\u7c7b\u4f3c\u5730\u6307\u5b9a\u4e00\u4e2a\u5e27\u7f13\u51b2\u4e3a\u5199\u5e27\u7f13\u51b2(Write Framebuffer)\uff1a glBindFramebuffer(GL_READ_FRAMEBUFFER, gBuffer); glBindFramebuffer(GL_DRAW_FRAMEBUFFER, 0); // \u5199\u5165\u5230\u9ed8\u8ba4\u5e27\u7f13\u51b2 glBlitFramebuffer( 0, 0, SCR_WIDTH, SCR_HEIGHT, 0, 0, SCR_WIDTH, SCR_HEIGHT, GL_DEPTH_BUFFER_BIT, GL_NEAREST ); glBindFramebuffer(GL_FRAMEBUFFER, 0); // \u73b0\u5728\u50cf\u4e4b\u524d\u4e00\u6837\u6e32\u67d3\u5149\u7acb\u65b9\u4f53 [...] \u5728\u8fd9\u91cc\u6211\u4eec\u590d\u5236\u6574\u4e2a\u8bfb\u5e27\u7f13\u51b2\u7684\u6df1\u5ea6\u7f13\u51b2\u4fe1\u606f\u5230\u9ed8\u8ba4\u5e27\u7f13\u51b2\u7684\u6df1\u5ea6\u7f13\u51b2\uff0c\u5bf9\u4e8e\u989c\u8272\u7f13\u51b2\u548c\u6a21\u677f\u7f13\u51b2\u6211\u4eec\u4e5f\u53ef\u4ee5\u8fd9\u6837\u5904\u7406\u3002\u73b0\u5728\u5982\u679c\u6211\u4eec\u63a5\u4e0b\u6765\u518d\u6e32\u67d3\u5149\u7acb\u65b9\u4f53\uff0c\u573a\u666f\u91cc\u7684\u51e0\u4f55\u4f53\u5c06\u4f1a\u770b\u8d77\u6765\u5f88\u771f\u5b9e\u4e86\uff0c\u800c\u4e0d\u53ea\u662f\u7b80\u5355\u5730\u7c98\u8d34\u7acb\u65b9\u4f53\u52302D\u65b9\u5f62\u4e4b\u4e0a\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230Demo\u7684\u6e90\u4ee3\u7801\uff0c\u8fd8\u6709\u5149\u7acb\u65b9\u4f53\u7684 \u9876\u70b9 \u548c \u7247\u6bb5 \u7740\u8272\u5668\u3002 \u6709\u4e86\u8fd9\u79cd\u65b9\u6cd5\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u8f7b\u6613\u5730\u7ed3\u5408\u5ef6\u8fdf\u7740\u8272\u6cd5\u548c\u6b63\u5411\u7740\u8272\u6cd5\u4e86\u3002\u8fd9\u771f\u662f\u592a\u68d2\u4e86\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5e94\u7528\u6df7\u5408\u6216\u8005\u6e32\u67d3\u9700\u8981\u7279\u6b8a\u7740\u8272\u5668\u6548\u679c\u7684\u7269\u4f53\u4e86\uff0c\u8fd9\u5728\u5ef6\u8fdf\u6e32\u67d3\u4e2d\u662f\u4e0d\u53ef\u80fd\u505a\u5230\u7684\u3002","title":"\u7ed3\u5408\u5ef6\u8fdf\u6e32\u67d3\u4e0e\u6b63\u5411\u6e32\u67d3"},{"location":"05%20Advanced%20Lighting/08%20Deferred%20Shading/#_4","text":"\u5ef6\u8fdf\u6e32\u67d3\u4e00\u76f4\u88ab\u79f0\u8d5e\u7684\u539f\u56e0\u5c31\u662f\u5b83\u80fd\u591f\u6e32\u67d3\u5927\u91cf\u7684\u5149\u6e90\u800c\u4e0d\u6d88\u8017\u5927\u91cf\u7684\u6027\u80fd\u3002\u7136\u800c\uff0c\u5ef6\u8fdf\u6e32\u67d3\u5b83\u672c\u8eab\u5e76\u4e0d\u80fd\u652f\u6301\u975e\u5e38\u5927\u91cf\u7684\u5149\u6e90\uff0c\u56e0\u4e3a\u6211\u4eec\u4ecd\u7136\u5fc5\u987b\u8981\u5bf9\u573a\u666f\u4e2d\u6bcf\u4e00\u4e2a\u5149\u6e90\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u7247\u6bb5\u7684\u5149\u7167\u5206\u91cf\u3002\u771f\u6b63\u8ba9\u5927\u91cf\u5149\u6e90\u6210\u4e3a\u53ef\u80fd\u7684\u662f\u6211\u4eec\u80fd\u591f\u5bf9\u5ef6\u8fdf\u6e32\u67d3\u7ba1\u7ebf\u5f15\u7528\u7684\u4e00\u4e2a\u975e\u5e38\u68d2\u7684\u4f18\u5316\uff1a \u5149\u4f53\u79ef(Light Volumes) \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5f53\u6211\u4eec\u6e32\u67d3\u4e00\u4e2a\u590d\u6742\u5149\u7167\u573a\u666f\u4e0b\u7684\u7247\u6bb5\u7740\u8272\u5668\u65f6\uff0c\u6211\u4eec\u4f1a\u8ba1\u7b97\u573a\u666f\u4e2d \u6bcf\u4e00\u4e2a \u5149\u6e90\u7684\u8d21\u732e\uff0c\u4e0d\u7ba1\u5b83\u4eec\u79bb\u8fd9\u4e2a\u7247\u6bb5\u6709\u591a\u8fdc\u3002\u5f88\u5927\u4e00\u90e8\u5206\u7684\u5149\u6e90\u6839\u672c\u5c31\u4e0d\u4f1a\u5230\u8fbe\u8fd9\u4e2a\u7247\u6bb5\uff0c\u6240\u4ee5\u4e3a\u4ec0\u4e48\u6211\u4eec\u8fd8\u8981\u6d6a\u8d39\u8fd9\u4e48\u591a\u5149\u7167\u8fd0\u7b97\u5462\uff1f \u9690\u85cf\u5728\u5149\u4f53\u79ef\u80cc\u540e\u7684\u60f3\u6cd5\u5c31\u662f\u8ba1\u7b97\u5149\u6e90\u7684\u534a\u5f84\uff0c\u6216\u662f\u4f53\u79ef\uff0c\u4e5f\u5c31\u662f\u5149\u80fd\u591f\u5230\u8fbe\u7247\u6bb5\u7684\u8303\u56f4\u3002\u7531\u4e8e\u5927\u90e8\u5206\u5149\u6e90\u90fd\u4f7f\u7528\u4e86\u67d0\u79cd\u5f62\u5f0f\u7684\u8870\u51cf(Attenuation)\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u6765\u8ba1\u7b97\u5149\u6e90\u80fd\u591f\u5230\u8fbe\u7684\u6700\u5927\u8def\u7a0b\uff0c\u6216\u8005\u8bf4\u662f\u534a\u5f84\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u53ea\u9700\u8981\u5bf9\u90a3\u4e9b\u5728\u4e00\u4e2a\u6216\u591a\u4e2a\u5149\u4f53\u79ef\u5185\u7684\u7247\u6bb5\u8fdb\u884c\u7e41\u91cd\u7684\u5149\u7167\u8fd0\u7b97\u5c31\u884c\u4e86\u3002\u8fd9\u53ef\u4ee5\u7ed9\u6211\u4eec\u7701\u4e0b\u6765\u5f88\u53ef\u89c2\u7684\u8ba1\u7b97\u91cf\uff0c\u56e0\u4e3a\u6211\u4eec\u73b0\u5728\u53ea\u5728\u9700\u8981\u7684\u60c5\u51b5\u4e0b\u8ba1\u7b97\u5149\u7167\u3002 \u8fd9\u4e2a\u65b9\u6cd5\u7684\u96be\u70b9\u57fa\u672c\u5c31\u662f\u627e\u51fa\u4e00\u4e2a\u5149\u6e90\u5149\u4f53\u79ef\u7684\u5927\u5c0f\uff0c\u6216\u8005\u662f\u534a\u5f84\u3002","title":"\u66f4\u591a\u7684\u5149\u6e90"},{"location":"05%20Advanced%20Lighting/08%20Deferred%20Shading/#_5","text":"\u4e3a\u4e86\u83b7\u53d6\u4e00\u4e2a\u5149\u6e90\u7684\u4f53\u79ef\u534a\u5f84\uff0c\u6211\u4eec\u9700\u8981\u89e3\u4e00\u4e2a\u5bf9\u4e8e\u4e00\u4e2a\u6211\u4eec\u8ba4\u4e3a\u662f \u9ed1\u6697(Dark) \u7684\u4eae\u5ea6(Brightness)\u7684\u8870\u51cf\u65b9\u7a0b\uff0c\u5b83\u53ef\u4ee5\u662f0.0\uff0c\u6216\u8005\u662f\u66f4\u4eae\u4e00\u70b9\u7684\u4f46\u4ecd\u88ab\u8ba4\u4e3a\u9ed1\u6697\u7684\u503c\uff0c\u50cf\u662f0.03\u3002\u4e3a\u4e86\u5c55\u793a\u6211\u4eec\u5982\u4f55\u8ba1\u7b97\u5149\u6e90\u7684\u4f53\u79ef\u534a\u5f84\uff0c\u6211\u4eec\u5c06\u4f1a\u4f7f\u7528\u4e00\u4e2a\u5728 \u6295\u5149\u7269 \u8fd9\u8282\u4e2d\u5f15\u5165\u7684\u4e00\u4e2a\u66f4\u52a0\u590d\u6742\uff0c\u4f46\u975e\u5e38\u7075\u6d3b\u7684\u8870\u51cf\u65b9\u7a0b\uff1a F_{light} = \\frac{I}{K_c + K_l * d + K_q * d^2} \u6211\u4eec\u73b0\u5728\u60f3\u8981\u5728 F_{light} \u7b49\u4e8e0\u7684\u524d\u63d0\u4e0b\u89e3\u8fd9\u4e2a\u65b9\u7a0b\uff0c\u4e5f\u5c31\u662f\u8bf4\u5149\u5728\u8be5\u8ddd\u79bb\u5b8c\u5168\u662f\u9ed1\u6697\u7684\u3002\u7136\u800c\u8fd9\u4e2a\u65b9\u7a0b\u6c38\u8fdc\u4e0d\u4f1a\u771f\u6b63\u7b49\u4e8e0.0\uff0c\u6240\u4ee5\u5b83\u6ca1\u6709\u89e3\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u4e0d\u4f1a\u6c42\u8868\u8fbe\u5f0f\u7b49\u4e8e0.0\u65f6\u5019\u7684\u89e3\uff0c\u76f8\u53cd\u6211\u4eec\u4f1a\u6c42\u5f53\u4eae\u5ea6\u503c\u9760\u8fd1\u4e8e0.0\u7684\u89e3\uff0c\u8fd9\u65f6\u5019\u5b83\u8fd8\u662f\u80fd\u88ab\u770b\u505a\u662f\u9ed1\u6697\u7684\u3002\u5728\u8fd9\u4e2a\u6559\u7a0b\u7684\u6f14\u793a\u573a\u666f\u4e2d\uff0c\u6211\u4eec\u9009\u62e9 5/256 \u4f5c\u4e3a\u4e00\u4e2a\u5408\u9002\u7684\u5149\u7167\u503c\uff1b\u9664\u4ee5256\u662f\u56e0\u4e3a\u9ed8\u8ba4\u76848-bit\u5e27\u7f13\u51b2\u53ef\u4ee5\u6bcf\u4e2a\u5206\u91cf\u663e\u793a\u8fd9\u4e48\u591a\u5f3a\u5ea6\u503c(Intensity)\u3002 Important \u6211\u4eec\u4f7f\u7528\u7684\u8870\u51cf\u65b9\u7a0b\u5728\u5b83\u7684\u53ef\u89c6\u8303\u56f4\u5185\u57fa\u672c\u90fd\u662f\u9ed1\u6697\u7684\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u60f3\u8981\u9650\u5236\u5b83\u4e3a\u4e00\u4e2a\u6bd4 5/256 \u66f4\u52a0\u9ed1\u6697\u7684\u4eae\u5ea6\uff0c\u5149\u4f53\u79ef\u5c31\u4f1a\u53d8\u5f97\u592a\u5927\u4ece\u800c\u53d8\u5f97\u4f4e\u6548\u3002\u53ea\u8981\u662f\u7528\u6237\u4e0d\u80fd\u5728\u5149\u4f53\u79ef\u8fb9\u7f18\u770b\u5230\u4e00\u4e2a\u7a81\u5140\u7684\u622a\u65ad\uff0c\u8fd9\u4e2a\u53c2\u6570\u5c31\u6ca1\u4e8b\u4e86\u3002\u5f53\u7136\u5b83\u8fd8\u662f\u4f9d\u8d56\u4e8e\u573a\u666f\u7684\u7c7b\u578b\uff0c\u4e00\u4e2a\u9ad8\u7684\u4eae\u5ea6\u9600\u503c\u4f1a\u4ea7\u751f\u66f4\u5c0f\u7684\u5149\u4f53\u79ef\uff0c\u4ece\u800c\u83b7\u5f97\u66f4\u9ad8\u7684\u6548\u7387\uff0c\u7136\u800c\u5b83\u540c\u6837\u4f1a\u4ea7\u751f\u4e00\u4e2a\u5f88\u5bb9\u6613\u53d1\u73b0\u7684\u526f\u4f5c\u7528\uff0c\u90a3\u5c31\u662f\u5149\u4f1a\u5728\u5149\u4f53\u79ef\u8fb9\u754c\u770b\u8d77\u6765\u7a81\u7136\u65ad\u6389\u3002 \u6211\u4eec\u8981\u6c42\u7684\u8870\u51cf\u65b9\u7a0b\u4f1a\u662f\u8fd9\u6837\uff1a \\frac{5}{256} = \\frac{I_{max}}{Attenuation} \u5728\u8fd9\u91cc\uff0c I_{max} \u662f\u5149\u6e90\u6700\u4eae\u7684\u989c\u8272\u5206\u91cf\u3002\u6211\u4eec\u4e4b\u6240\u4ee5\u4f7f\u7528\u5149\u6e90\u6700\u4eae\u7684\u989c\u8272\u5206\u91cf\u662f\u56e0\u4e3a\u89e3\u5149\u6e90\u6700\u4eae\u7684\u5f3a\u5ea6\u503c\u65b9\u7a0b\u6700\u597d\u5730\u53cd\u6620\u4e86\u7406\u60f3\u5149\u4f53\u79ef\u534a\u5f84\u3002 \u4ece\u8fd9\u91cc\u6211\u4eec\u7ee7\u7eed\u89e3\u65b9\u7a0b\uff1a \\frac{5}{256} * Attenuation = I_{max} 5 * Attenuation = I_{max} * 256 Attenuation = I_{max} * \\frac{256}{5} K_c + K_l * d + K_q * d^2 = I_{max} * \\frac{256}{5} K_q * d^2 + K_l * d + K_c - I_{max} * \\frac{256}{5} = 0 \u6700\u540e\u7684\u65b9\u7a0b\u5f62\u6210\u4e86 ax^2 + bx + c = 0 \u7684\u5f62\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6c42\u6839\u516c\u5f0f\u6765\u89e3\u8fd9\u4e2a\u4e8c\u6b21\u65b9\u7a0b\uff1a x = \\frac{-K_l + \\sqrt{K_l^2 - 4 * K_q * (K_c - I_{max} * \\frac{256}{5})}}{2 * K_q} \u5b83\u7ed9\u6211\u4eec\u4e86\u4e00\u4e2a\u901a\u7528\u516c\u5f0f\u4ece\u800c\u5141\u8bb8\u6211\u4eec\u8ba1\u7b97 x \u7684\u503c\uff0c\u5373\u5149\u6e90\u7684\u5149\u4f53\u79ef\u534a\u5f84\uff0c\u53ea\u8981\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5e38\u91cf\uff0c\u7ebf\u6027\u548c\u4e8c\u6b21\u9879\u53c2\u6570\uff1a GLfloat constant = 1.0; GLfloat linear = 0.7; GLfloat quadratic = 1.8; GLfloat lightMax = std::fmaxf(std::fmaxf(lightColor.r, lightColor.g), lightColor.b); GLfloat radius = (-linear + std::sqrtf(linear * linear - 4 * quadratic * (constant - (256.0 / 5.0) * lightMax))) / (2 * quadratic); \u5b83\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5927\u6982\u57281.0\u52305.0\u8303\u56f4\u5185\u7684\u534a\u5f84\u503c\uff0c\u5b83\u53d6\u51b3\u4e8e\u5149\u7684\u6700\u5927\u5f3a\u5ea6\u3002 \u5bf9\u4e8e\u573a\u666f\u4e2d\u6bcf\u4e00\u4e2a\u5149\u6e90\uff0c\u6211\u4eec\u90fd\u8ba1\u7b97\u5b83\u7684\u534a\u5f84\uff0c\u5e76\u4ec5\u5728\u7247\u6bb5\u5728\u5149\u6e90\u7684\u4f53\u79ef\u5185\u90e8\u65f6\u624d\u8ba1\u7b97\u8be5\u5149\u6e90\u7684\u5149\u7167\u3002\u4e0b\u9762\u662f\u66f4\u65b0\u8fc7\u7684\u5149\u7167\u5904\u7406\u9636\u6bb5\u7247\u6bb5\u7740\u8272\u5668\uff0c\u5b83\u8003\u8651\u5230\u4e86\u8ba1\u7b97\u51fa\u6765\u7684\u5149\u4f53\u79ef\u3002\u6ce8\u610f\u8fd9\u79cd\u65b9\u6cd5\u4ec5\u4ec5\u7528\u4f5c\u6559\u5b66\u76ee\u7684\uff0c\u5728\u5b9e\u9645\u573a\u666f\u4e2d\u662f\u4e0d\u53ef\u884c\u7684\uff0c\u6211\u4eec\u4f1a\u5728\u540e\u9762\u8ba8\u8bba\u5b83\uff1a struct Light { [...] float Radius; }; void main() { [...] for(int i = 0; i < NR_LIGHTS; ++i) { // \u8ba1\u7b97\u5149\u6e90\u548c\u8be5\u7247\u6bb5\u95f4\u8ddd\u79bb float distance = length(lights[i].Position - FragPos); if(distance < lights[i].Radius) { // \u6267\u884c\u5927\u5f00\u9500\u5149\u7167 [...] } } } \u8fd9\u6b21\u7684\u7ed3\u679c\u548c\u4e4b\u524d\u4e00\u6a21\u4e00\u6837\uff0c\u4f46\u662f\u8fd9\u6b21\u7269\u4f53\u53ea\u5bf9\u6240\u5728\u5149\u4f53\u79ef\u7684\u5149\u6e90\u8ba1\u7b97\u5149\u7167\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230Demo\u6700\u7ec8\u7684\u6e90\u7801\uff0c\u5e76\u4e14\u8fd8\u6709\u66f4\u65b0\u7684\u5149\u7167\u6e32\u67d3\u9636\u6bb5\u7684 \u7247\u6bb5\u7740\u8272\u5668","title":"\u8ba1\u7b97\u4e00\u4e2a\u5149\u6e90\u7684\u4f53\u79ef\u6216\u534a\u5f84"},{"location":"05%20Advanced%20Lighting/08%20Deferred%20Shading/#_6","text":"\u4e0a\u9762\u90a3\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u5728\u5b9e\u9645\u60c5\u51b5\u4e0b\u4e0d\u80fd\u771f\u6b63\u5730\u5de5\u4f5c\uff0c\u5e76\u4e14\u5b83\u53ea\u6f14\u793a\u4e86\u6211\u4eec\u53ef\u4ee5 \u4e0d\u77e5\u600e\u6837 \u80fd\u4f7f\u7528\u5149\u4f53\u79ef\u51cf\u5c11\u5149\u7167\u8fd0\u7b97\u3002\u7136\u800c\u4e8b\u5b9e\u4e0a\uff0c\u4f60\u7684GPU\u548cGLSL\u5e76\u4e0d\u64c5\u957f\u4f18\u5316\u5faa\u73af\u548c\u5206\u652f\u3002\u8fd9\u4e00\u7f3a\u9677\u7684\u539f\u56e0\u662fGPU\u4e2d\u7740\u8272\u5668\u7684\u8fd0\u884c\u662f\u9ad8\u5ea6\u5e76\u884c\u7684\uff0c\u5927\u90e8\u5206\u7684\u67b6\u6784\u8981\u6c42\u5bf9\u4e8e\u4e00\u4e2a\u5927\u7684\u7ebf\u7a0b\u96c6\u5408\uff0cGPU\u9700\u8981\u5bf9\u5b83\u8fd0\u884c\u5b8c\u5168\u4e00\u6837\u7684\u7740\u8272\u5668\u4ee3\u7801\u4ece\u800c\u83b7\u5f97\u9ad8\u6548\u7387\u3002\u8fd9\u901a\u5e38\u610f\u5473\u7740\u4e00\u4e2a\u7740\u8272\u5668\u8fd0\u884c\u65f6\u603b\u662f\u6267\u884c\u4e00\u4e2aif\u8bed\u53e5 \u6240\u6709\u7684 \u5206\u652f\u4ece\u800c\u4fdd\u8bc1\u7740\u8272\u5668\u8fd0\u884c\u90fd\u662f\u4e00\u6837\u7684\uff0c\u8fd9\u4f7f\u5f97\u6211\u4eec\u4e4b\u524d\u7684 \u534a\u5f84\u68c0\u6d4b \u4f18\u5316\u5b8c\u5168\u53d8\u5f97\u65e0\u7528\uff0c\u6211\u4eec\u4ecd\u7136\u5728\u5bf9\u6240\u6709\u5149\u6e90\u8ba1\u7b97\u5149\u7167\uff01 \u4f7f\u7528\u5149\u4f53\u79ef\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u6e32\u67d3\u4e00\u4e2a\u5b9e\u9645\u7684\u7403\u4f53\uff0c\u5e76\u6839\u636e\u5149\u4f53\u79ef\u7684\u534a\u5f84\u7f29\u653e\u3002\u8fd9\u4e9b\u7403\u7684\u4e2d\u5fc3\u653e\u7f6e\u5728\u5149\u6e90\u7684\u4f4d\u7f6e\uff0c\u7531\u4e8e\u5b83\u662f\u6839\u636e\u5149\u4f53\u79ef\u534a\u5f84\u7f29\u653e\u7684\uff0c\u8fd9\u4e2a\u7403\u4f53\u6b63\u597d\u8986\u76d6\u4e86\u5149\u7684\u53ef\u89c6\u4f53\u79ef\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u7684\u6280\u5de7\uff1a\u6211\u4eec\u4f7f\u7528\u5927\u4f53\u76f8\u540c\u7684\u5ef6\u8fdf\u7247\u6bb5\u7740\u8272\u5668\u6765\u6e32\u67d3\u7403\u4f53\u3002\u56e0\u4e3a\u7403\u4f53\u4ea7\u751f\u4e86\u5b8c\u5168\u5339\u914d\u4e8e\u53d7\u5f71\u54cd\u50cf\u7d20\u7684\u7740\u8272\u5668\u8c03\u7528\uff0c\u6211\u4eec\u53ea\u6e32\u67d3\u4e86\u53d7\u5f71\u54cd\u7684\u50cf\u7d20\u800c\u8df3\u8fc7\u5176\u5b83\u7684\u50cf\u7d20\u3002\u4e0b\u9762\u8fd9\u5e45\u56fe\u5c55\u793a\u4e86\u8fd9\u4e00\u6280\u5de7\uff1a \u5b83\u88ab\u5e94\u7528\u5728\u573a\u666f\u4e2d\u6bcf\u4e2a\u5149\u6e90\u4e0a\uff0c\u5e76\u4e14\u6240\u5f97\u7684\u7247\u6bb5\u76f8\u52a0\u6df7\u5408\u5728\u4e00\u8d77\u3002\u8fd9\u4e2a\u7ed3\u679c\u548c\u4e4b\u524d\u573a\u666f\u662f\u4e00\u6837\u7684\uff0c\u4f46\u8fd9\u4e00\u6b21\u53ea\u6e32\u67d3\u5bf9\u4e8e\u5149\u6e90\u76f8\u5173\u7684\u7247\u6bb5\u3002\u5b83\u6709\u6548\u5730\u51cf\u5c11\u4e86\u4ece nr_objects * nr_lights \u5230 nr_objects + nr_lights \u7684\u8ba1\u7b97\u91cf\uff0c\u8fd9\u4f7f\u5f97\u591a\u5149\u6e90\u573a\u666f\u7684\u6e32\u67d3\u53d8\u5f97\u65e0\u6bd4\u9ad8\u6548\u3002\u8fd9\u6b63\u662f\u4e3a\u4ec0\u4e48\u5ef6\u8fdf\u6e32\u67d3\u975e\u5e38\u9002\u5408\u6e32\u67d3\u5f88\u5927\u6570\u91cf\u5149\u6e90\u3002 \u7136\u800c\u8fd9\u4e2a\u65b9\u6cd5\u4ecd\u7136\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u9762\u5254\u9664(Face Culling)\u9700\u8981\u88ab\u542f\u7528(\u5426\u5219\u6211\u4eec\u4f1a\u6e32\u67d3\u4e00\u4e2a\u5149\u6548\u679c\u4e24\u6b21)\uff0c\u5e76\u4e14\u5728\u5b83\u542f\u7528\u7684\u65f6\u5019\u7528\u6237\u53ef\u80fd\u8fdb\u5165\u4e00\u4e2a\u5149\u6e90\u7684\u5149\u4f53\u79ef\uff0c\u7136\u800c\u8fd9\u6837\u4e4b\u540e\u8fd9\u4e2a\u4f53\u79ef\u5c31\u4e0d\u518d\u88ab\u6e32\u67d3\u4e86(\u7531\u4e8e\u80cc\u9762\u5254\u9664)\uff0c\u8fd9\u4f1a\u4f7f\u5f97\u5149\u6e90\u7684\u5f71\u54cd\u6d88\u5931\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u6a21\u677f\u7f13\u51b2\u6280\u5de7\u6765\u89e3\u51b3\u3002 \u6e32\u67d3\u5149\u4f53\u79ef\u786e\u5b9e\u4f1a\u5e26\u6765\u6c89\u91cd\u7684\u6027\u80fd\u8d1f\u62c5\uff0c\u867d\u7136\u5b83\u901a\u5e38\u6bd4\u666e\u901a\u7684\u5ef6\u8fdf\u6e32\u67d3\u66f4\u5feb\uff0c\u8fd9\u4ecd\u7136\u4e0d\u662f\u6700\u597d\u7684\u4f18\u5316\u3002\u53e6\u5916\u4e24\u4e2a\u57fa\u4e8e\u5ef6\u8fdf\u6e32\u67d3\u7684\u66f4\u6d41\u884c(\u5e76\u4e14\u66f4\u9ad8\u6548)\u7684\u62d3\u5c55\u53eb\u505a \u5ef6\u8fdf\u5149\u7167(Deferred Lighting) \u548c \u5207\u7247\u5f0f\u5ef6\u8fdf\u7740\u8272\u6cd5(Tile-based Deferred Shading) \u3002\u8fd9\u4e9b\u65b9\u6cd5\u4f1a\u5f88\u5927\u7a0b\u5ea6\u4e0a\u63d0\u9ad8\u5927\u91cf\u5149\u6e90\u6e32\u67d3\u7684\u6548\u7387\uff0c\u5e76\u4e14\u4e5f\u80fd\u5141\u8bb8\u4e00\u4e2a\u76f8\u5bf9\u9ad8\u6548\u7684\u591a\u91cd\u91c7\u6837\u6297\u952f\u9f7f(MSAA)\u3002\u7136\u800c\u53d7\u5236\u4e8e\u8fd9\u7bc7\u6559\u7a0b\u7684\u957f\u5ea6\uff0c\u6211\u5c06\u4f1a\u5728\u4e4b\u540e\u7684\u6559\u7a0b\u4e2d\u4ecb\u7ecd\u8fd9\u4e9b\u4f18\u5316\u3002","title":"\u771f\u6b63\u4f7f\u7528\u5149\u4f53\u79ef"},{"location":"05%20Advanced%20Lighting/08%20Deferred%20Shading/#vs","text":"\u4ec5\u4ec5\u662f\u5ef6\u8fdf\u7740\u8272\u6cd5\u5b83\u672c\u8eab(\u6ca1\u6709\u5149\u4f53\u79ef)\u5df2\u7ecf\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u4f18\u5316\u4e86\uff0c\u6bcf\u4e2a\u50cf\u7d20\u4ec5\u4ec5\u8fd0\u884c\u4e00\u4e2a\u5355\u72ec\u7684\u7247\u6bb5\u7740\u8272\u5668\uff0c\u7136\u800c\u5bf9\u4e8e\u6b63\u5411\u6e32\u67d3\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u5bf9\u4e00\u4e2a\u50cf\u7d20\u8fd0\u884c\u591a\u6b21\u7247\u6bb5\u7740\u8272\u5668\u3002\u5f53\u7136\uff0c\u5ef6\u8fdf\u6e32\u67d3\u786e\u5b9e\u5e26\u6765\u4e00\u4e9b\u7f3a\u70b9\uff1a\u5927\u5185\u5b58\u5f00\u9500\uff0c\u6ca1\u6709MSAA\u548c\u6df7\u5408(\u4ecd\u9700\u8981\u6b63\u5411\u6e32\u67d3\u7684\u914d\u5408)\u3002 \u5f53\u4f60\u6709\u4e00\u4e2a\u5f88\u5c0f\u7684\u573a\u666f\u5e76\u4e14\u6ca1\u6709\u5f88\u591a\u7684\u5149\u6e90\u65f6\u5019\uff0c\u5ef6\u8fdf\u6e32\u67d3\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u66f4\u5feb\u4e00\u70b9\uff0c\u751a\u81f3\u6709\u4e9b\u65f6\u5019\u7531\u4e8e\u5f00\u9500\u8d85\u8fc7\u4e86\u5b83\u7684\u4f18\u70b9\u8fd8\u4f1a\u66f4\u6162\u3002\u7136\u800c\u5728\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u573a\u666f\u4e2d\uff0c\u5ef6\u8fdf\u6e32\u67d3\u4f1a\u5feb\u901f\u53d8\u6210\u4e00\u4e2a\u91cd\u8981\u7684\u4f18\u5316\uff0c\u7279\u522b\u662f\u6709\u4e86\u66f4\u5148\u8fdb\u7684\u4f18\u5316\u62d3\u5c55\u7684\u65f6\u5019\u3002 \u6700\u540e\u6211\u4ecd\u7136\u60f3\u6307\u51fa\uff0c\u57fa\u672c\u4e0a\u6240\u6709\u80fd\u901a\u8fc7\u6b63\u5411\u6e32\u67d3\u5b8c\u6210\u7684\u6548\u679c\u80fd\u591f\u540c\u6837\u5728\u5ef6\u8fdf\u6e32\u67d3\u573a\u666f\u4e2d\u5b9e\u73b0\uff0c\u8fd9\u901a\u5e38\u9700\u8981\u4e00\u4e9b\u5c0f\u7684\u7ffb\u8bd1\u6b65\u9aa4\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u5728\u5ef6\u8fdf\u6e32\u67d3\u5668\u4e2d\u4f7f\u7528\u6cd5\u7ebf\u8d34\u56fe(Normal Mapping)\uff0c\u6211\u4eec\u9700\u8981\u6539\u53d8\u51e0\u4f55\u6e32\u67d3\u9636\u6bb5\u7740\u8272\u5668\u6765\u8f93\u51fa\u4e00\u4e2a\u4e16\u754c\u7a7a\u95f4\u6cd5\u7ebf(World-space Normal)\uff0c\u5b83\u4ece\u6cd5\u7ebf\u8d34\u56fe\u4e2d\u63d0\u53d6\u51fa\u6765(\u4f7f\u7528\u4e00\u4e2aTBN\u77e9\u9635)\u800c\u4e0d\u662f\u8868\u9762\u6cd5\u7ebf\uff0c\u5149\u7167\u6e32\u67d3\u9636\u6bb5\u4e2d\u7684\u5149\u7167\u8fd0\u7b97\u4e00\u70b9\u90fd\u4e0d\u9700\u8981\u53d8\u3002\u5982\u679c\u4f60\u60f3\u8981\u8ba9\u89c6\u5dee\u8d34\u56fe\u5de5\u4f5c\uff0c\u9996\u5148\u4f60\u9700\u8981\u5728\u91c7\u6837\u4e00\u4e2a\u7269\u4f53\u7684\u6f2b\u53cd\u5c04\uff0c\u955c\u9762\uff0c\u548c\u6cd5\u7ebf\u7eb9\u7406\u4e4b\u524d\u9996\u5148\u7f6e\u6362\u51e0\u4f55\u6e32\u67d3\u9636\u6bb5\u4e2d\u7684\u7eb9\u7406\u5750\u6807\u3002\u4e00\u65e6\u4f60\u4e86\u89e3\u4e86\u5ef6\u8fdf\u6e32\u67d3\u80cc\u540e\u7684\u7406\u5ff5\uff0c\u53d8\u5f97\u6709\u521b\u9020\u529b\u5e76\u4e0d\u662f\u4ec0\u4e48\u96be\u4e8b\u3002","title":"\u5ef6\u8fdf\u6e32\u67d3 vs \u6b63\u5411\u6e32\u67d3"},{"location":"05%20Advanced%20Lighting/08%20Deferred%20Shading/#_7","text":"Tutorial 35: Deferred Shading - Part 1 \uff1aOGLDev\u7684\u4e00\u4e2a\u5206\u6210\u4e09\u90e8\u5206\u7684\u5ef6\u8fdf\u7740\u8272\u6cd5\u6559\u7a0b\u3002\u5728Part 2\u548c3\u4e2d\u4ecb\u7ecd\u4e86\u6e32\u67d3\u5149\u4f53\u79ef Deferred Rendering for Current and Future Rendering Pipelines \uff1aAndrew Lauritzen\u7684\u5e7b\u706f\u7247\uff0c\u8ba8\u8bba\u4e86\u9ad8\u7ea7\u5207\u7247\u5f0f\u5ef6\u8fdf\u7740\u8272\u6cd5\u548c\u5ef6\u8fdf\u5149\u7167","title":"\u9644\u52a0\u8d44\u6e90"},{"location":"05%20Advanced%20Lighting/09%20SSAO/","text":"SSAO \u539f\u6587 SSAO \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 \u672a\u6821\u5bf9 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u6211\u4eec\u5df2\u7ecf\u5728\u524d\u9762\u7684\u57fa\u7840\u6559\u7a0b\u4e2d\u7b80\u5355\u4ecb\u7ecd\u5230\u4e86\u8fd9\u90e8\u5206\u5185\u5bb9\uff1a\u73af\u5883\u5149\u7167(Ambient Lighting)\u3002\u73af\u5883\u5149\u7167\u662f\u6211\u4eec\u52a0\u5165\u573a\u666f\u603b\u4f53\u5149\u7167\u4e2d\u7684\u4e00\u4e2a\u56fa\u5b9a\u5149\u7167\u5e38\u91cf\uff0c\u5b83\u88ab\u7528\u6765\u6a21\u62df\u5149\u7684 \u6563\u5c04(Scattering) \u3002\u5728\u73b0\u5b9e\u4e2d\uff0c\u5149\u7ebf\u4f1a\u4ee5\u4efb\u610f\u65b9\u5411\u6563\u5c04\uff0c\u5b83\u7684\u5f3a\u5ea6\u662f\u4f1a\u4e00\u76f4\u6539\u53d8\u7684\uff0c\u6240\u4ee5\u95f4\u63a5\u88ab\u7167\u5230\u7684\u90a3\u90e8\u5206\u573a\u666f\u4e5f\u5e94\u8be5\u6709\u53d8\u5316\u7684\u5f3a\u5ea6\uff0c\u800c\u4e0d\u662f\u4e00\u6210\u4e0d\u53d8\u7684\u73af\u5883\u5149\u3002\u5176\u4e2d\u4e00\u79cd\u95f4\u63a5\u5149\u7167\u7684\u6a21\u62df\u53eb\u505a \u73af\u5883\u5149\u906e\u853d(Ambient Occlusion) \uff0c\u5b83\u7684\u539f\u7406\u662f\u901a\u8fc7\u5c06\u8936\u76b1\u3001\u5b54\u6d1e\u548c\u975e\u5e38\u9760\u8fd1\u7684\u5899\u9762\u53d8\u6697\u7684\u65b9\u6cd5\u8fd1\u4f3c\u6a21\u62df\u51fa\u95f4\u63a5\u5149\u7167\u3002\u8fd9\u4e9b\u533a\u57df\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u88ab\u5468\u56f4\u7684\u51e0\u4f55\u4f53\u906e\u853d\u7684\uff0c\u5149\u7ebf\u4f1a\u5f88\u96be\u6d41\u5931\uff0c\u6240\u4ee5\u8fd9\u4e9b\u5730\u65b9\u770b\u8d77\u6765\u4f1a\u66f4\u6697\u4e00\u4e9b\u3002\u7ad9\u8d77\u6765\u770b\u4e00\u770b\u4f60\u623f\u95f4\u7684\u62d0\u89d2\u6216\u8005\u662f\u8936\u76b1\uff0c\u662f\u4e0d\u662f\u8fd9\u4e9b\u5730\u65b9\u4f1a\u770b\u8d77\u6765\u6709\u4e00\u70b9\u6697\uff1f \u4e0b\u9762\u8fd9\u5e45\u56fe\u5c55\u793a\u4e86\u5728\u4f7f\u7528\u548c\u4e0d\u4f7f\u7528SSAO\u65f6\u573a\u666f\u7684\u4e0d\u540c\u3002\u7279\u522b\u6ce8\u610f\u5bf9\u6bd4\u8936\u76b1\u90e8\u5206\uff0c\u4f60\u4f1a\u53d1\u73b0(\u73af\u5883)\u5149\u88ab\u906e\u853d\u4e86\u8bb8\u591a\uff1a \u5c3d\u7ba1\u8fd9\u4e0d\u662f\u4e00\u4e2a\u975e\u5e38\u660e\u663e\u7684\u6548\u679c\uff0c\u542f\u7528SSAO\u7684\u56fe\u50cf\u786e\u5b9e\u7ed9\u6211\u4eec\u66f4\u771f\u5b9e\u7684\u611f\u89c9\uff0c\u8fd9\u4e9b\u5c0f\u7684\u906e\u853d\u7ec6\u8282\u7ed9\u6574\u4e2a\u573a\u666f\u5e26\u6765\u4e86\u66f4\u5f3a\u7684\u6df1\u5ea6\u611f\u3002 \u73af\u5883\u5149\u906e\u853d\u8fd9\u4e00\u6280\u672f\u4f1a\u5e26\u6765\u5f88\u5927\u7684\u6027\u80fd\u5f00\u9500\uff0c\u56e0\u4e3a\u5b83\u8fd8\u9700\u8981\u8003\u8651\u5468\u56f4\u7684\u51e0\u4f55\u4f53\u3002\u6211\u4eec\u53ef\u4ee5\u5bf9\u7a7a\u95f4\u4e2d\u6bcf\u4e00\u70b9\u53d1\u5c04\u5927\u91cf\u5149\u7ebf\u6765\u786e\u5b9a\u5176\u906e\u853d\u91cf\uff0c\u4f46\u662f\u8fd9\u5728\u5b9e\u65f6\u8fd0\u7b97\u4e2d\u4f1a\u5f88\u5feb\u53d8\u6210\u5927\u95ee\u9898\u3002\u57282007\u5e74\uff0cCrytek\u516c\u53f8\u53d1\u5e03\u4e86\u4e00\u6b3e\u53eb\u505a \u5c4f\u5e55\u7a7a\u95f4\u73af\u5883\u5149\u906e\u853d(Screen-Space Ambient Occlusion, SSAO) \u7684\u6280\u672f\uff0c\u5e76\u7528\u5728\u4e86\u4ed6\u4eec\u7684\u770b\u5bb6\u4f5c\u5b64\u5c9b\u5371\u673a\u4e0a\u3002\u8fd9\u4e00\u6280\u672f\u4f7f\u7528\u4e86\u5c4f\u5e55\u7a7a\u95f4\u573a\u666f\u7684\u6df1\u5ea6\u800c\u4e0d\u662f\u771f\u5b9e\u7684\u51e0\u4f55\u4f53\u6570\u636e\u6765\u786e\u5b9a\u906e\u853d\u91cf\u3002\u8fd9\u4e00\u505a\u6cd5\u76f8\u5bf9\u4e8e\u771f\u6b63\u7684\u73af\u5883\u5149\u906e\u853d\u4e0d\u4f46\u901f\u5ea6\u5feb\uff0c\u800c\u4e14\u8fd8\u80fd\u83b7\u5f97\u5f88\u597d\u7684\u6548\u679c\uff0c\u4f7f\u5f97\u5b83\u6210\u4e3a\u8fd1\u4f3c\u5b9e\u65f6\u73af\u5883\u5149\u906e\u853d\u7684\u6807\u51c6\u3002 SSAO\u80cc\u540e\u7684\u539f\u7406\u5f88\u7b80\u5355\uff1a\u5bf9\u4e8e\u94fa\u5c4f\u56db\u8fb9\u5f62(Screen-filled Quad)\u4e0a\u7684\u6bcf\u4e00\u4e2a\u7247\u6bb5\uff0c\u6211\u4eec\u90fd\u4f1a\u6839\u636e\u5468\u8fb9\u6df1\u5ea6\u503c\u8ba1\u7b97\u4e00\u4e2a \u906e\u853d\u56e0\u5b50(Occlusion Factor) \u3002\u8fd9\u4e2a\u906e\u853d\u56e0\u5b50\u4e4b\u540e\u4f1a\u88ab\u7528\u6765\u51cf\u5c11\u6216\u8005\u62b5\u6d88\u7247\u6bb5\u7684\u73af\u5883\u5149\u7167\u5206\u91cf\u3002\u906e\u853d\u56e0\u5b50\u662f\u901a\u8fc7\u91c7\u96c6\u7247\u6bb5\u5468\u56f4\u7403\u578b\u6838\u5fc3(Kernel)\u7684\u591a\u4e2a\u6df1\u5ea6\u6837\u672c\uff0c\u5e76\u548c\u5f53\u524d\u7247\u6bb5\u6df1\u5ea6\u503c\u5bf9\u6bd4\u800c\u5f97\u5230\u7684\u3002\u9ad8\u4e8e\u7247\u6bb5\u6df1\u5ea6\u503c\u6837\u672c\u7684\u4e2a\u6570\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u906e\u853d\u56e0\u5b50\u3002 \u4e0a\u56fe\u4e2d\u5728\u51e0\u4f55\u4f53\u5185\u7070\u8272\u7684\u6df1\u5ea6\u6837\u672c\u90fd\u662f\u9ad8\u4e8e\u7247\u6bb5\u6df1\u5ea6\u503c\u7684\uff0c\u4ed6\u4eec\u4f1a\u589e\u52a0\u906e\u853d\u56e0\u5b50\uff1b\u51e0\u4f55\u4f53\u5185\u6837\u672c\u4e2a\u6570\u8d8a\u591a\uff0c\u7247\u6bb5\u83b7\u5f97\u7684\u73af\u5883\u5149\u7167\u4e5f\u5c31\u8d8a\u5c11\u3002 \u5f88\u660e\u663e\uff0c\u6e32\u67d3\u6548\u679c\u7684\u8d28\u91cf\u548c\u7cbe\u5ea6\u4e0e\u6211\u4eec\u91c7\u6837\u7684\u6837\u672c\u6570\u91cf\u6709\u76f4\u63a5\u5173\u7cfb\u3002\u5982\u679c\u6837\u672c\u6570\u91cf\u592a\u4f4e\uff0c\u6e32\u67d3\u7684\u7cbe\u5ea6\u4f1a\u6025\u5267\u51cf\u5c11\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u79cd\u53eb\u505a \u6ce2\u7eb9(Banding) \u7684\u6548\u679c\uff1b\u5982\u679c\u5b83\u592a\u9ad8\u4e86\uff0c\u53cd\u800c\u4f1a\u5f71\u54cd\u6027\u80fd\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5f15\u5165\u968f\u673a\u6027\u5230\u91c7\u6837\u6838\u5fc3(Sample Kernel)\u7684\u91c7\u6837\u4e2d\u4ece\u800c\u51cf\u5c11\u6837\u672c\u7684\u6570\u76ee\u3002\u901a\u8fc7\u968f\u673a\u65cb\u8f6c\u91c7\u6837\u6838\u5fc3\uff0c\u6211\u4eec\u80fd\u5728\u6709\u9650\u6837\u672c\u6570\u91cf\u4e2d\u5f97\u5230\u9ad8\u8d28\u91cf\u7684\u7ed3\u679c\u3002\u7136\u800c\u8fd9\u4ecd\u7136\u4f1a\u6709\u4e00\u5b9a\u7684\u9ebb\u70e6\uff0c\u56e0\u4e3a\u968f\u673a\u6027\u5f15\u5165\u4e86\u4e00\u4e2a\u5f88\u660e\u663e\u7684\u566a\u58f0\u56fe\u6848\uff0c\u6211\u4eec\u5c06\u9700\u8981\u901a\u8fc7\u6a21\u7cca\u7ed3\u679c\u6765\u4fee\u590d\u8fd9\u4e00\u95ee\u9898\u3002\u4e0b\u9762\u8fd9\u5e45\u56fe\u7247( John Chapman \u7684\u4f5b\u50cf)\u5c55\u793a\u4e86\u6ce2\u7eb9\u6548\u679c\u8fd8\u6709\u968f\u673a\u6027\u9020\u6210\u7684\u6548\u679c\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u5c3d\u7ba1\u6211\u4eec\u5728\u4f4e\u6837\u672c\u6570\u7684\u60c5\u51b5\u4e0b\u5f97\u5230\u4e86\u5f88\u660e\u663e\u7684\u6ce2\u7eb9\u6548\u679c\uff0c\u5f15\u5165\u968f\u673a\u6027\u4e4b\u540e\u8fd9\u4e9b\u6ce2\u7eb9\u6548\u679c\u5c31\u5b8c\u5168\u6d88\u5931\u4e86\u3002 Crytek\u516c\u53f8\u5f00\u53d1\u7684SSAO\u6280\u672f\u4f1a\u4ea7\u751f\u4e00\u79cd\u7279\u6b8a\u7684\u89c6\u89c9\u98ce\u683c\u3002\u56e0\u4e3a\u4f7f\u7528\u7684\u91c7\u6837\u6838\u5fc3\u662f\u4e00\u4e2a\u7403\u4f53\uff0c\u5b83\u5bfc\u81f4\u5e73\u6574\u7684\u5899\u9762\u4e5f\u4f1a\u663e\u5f97\u7070\u8499\u8499\u7684\uff0c\u56e0\u4e3a\u6838\u5fc3\u4e2d\u4e00\u534a\u7684\u6837\u672c\u90fd\u4f1a\u5728\u5899\u8fd9\u4e2a\u51e0\u4f55\u4f53\u4e0a\u3002\u4e0b\u9762\u8fd9\u5e45\u56fe\u5c55\u793a\u4e86\u5b64\u5c9b\u5371\u673a\u7684SSAO\uff0c\u5b83\u6e05\u6670\u5730\u5c55\u793a\u4e86\u8fd9\u79cd\u7070\u8499\u8499\u7684\u611f\u89c9\uff1a \u7531\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6211\u4eec\u5c06\u4e0d\u4f1a\u4f7f\u7528\u7403\u4f53\u7684\u91c7\u6837\u6838\u5fc3\uff0c\u800c\u4f7f\u7528\u4e00\u4e2a\u6cbf\u7740\u8868\u9762\u6cd5\u5411\u91cf\u7684\u534a\u7403\u4f53\u91c7\u6837\u6838\u5fc3\u3002 \u901a\u8fc7\u5728 \u6cd5\u5411\u534a\u7403\u4f53(Normal-oriented Hemisphere) \u5468\u56f4\u91c7\u6837\uff0c\u6211\u4eec\u5c06\u4e0d\u4f1a\u8003\u8651\u5230\u7247\u6bb5\u5e95\u90e8\u7684\u51e0\u4f55\u4f53.\u5b83\u6d88\u9664\u4e86\u73af\u5883\u5149\u906e\u853d\u7070\u8499\u8499\u7684\u611f\u89c9\uff0c\u4ece\u800c\u4ea7\u751f\u66f4\u771f\u5b9e\u7684\u7ed3\u679c\u3002\u8fd9\u4e2aSSAO\u6559\u7a0b\u5c06\u4f1a\u57fa\u4e8e\u6cd5\u5411\u534a\u7403\u6cd5\u548cJohn Chapman\u51fa\u8272\u7684 SSAO\u6559\u7a0b \u3002 \u6837\u672c\u7f13\u51b2 SSAO\u9700\u8981\u83b7\u53d6\u51e0\u4f55\u4f53\u7684\u4fe1\u606f\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u65b9\u5f0f\u6765\u786e\u5b9a\u4e00\u4e2a\u7247\u6bb5\u7684\u906e\u853d\u56e0\u5b50\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7247\u6bb5\uff0c\u6211\u4eec\u5c06\u9700\u8981\u8fd9\u4e9b\u6570\u636e\uff1a \u9010\u7247\u6bb5 \u4f4d\u7f6e \u5411\u91cf \u9010\u7247\u6bb5\u7684 \u6cd5\u7ebf \u5411\u91cf \u9010\u7247\u6bb5\u7684 \u53cd\u5c04\u989c\u8272 \u91c7\u6837\u6838\u5fc3 \u7528\u6765\u65cb\u8f6c\u91c7\u6837\u6838\u5fc3\u7684\u968f\u673a\u65cb\u8f6c\u77e2\u91cf \u901a\u8fc7\u4f7f\u7528\u4e00\u4e2a\u9010\u7247\u6bb5\u89c2\u5bdf\u7a7a\u95f4\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e00\u4e2a\u91c7\u6837\u534a\u7403\u6838\u5fc3\u5bf9\u51c6\u7247\u6bb5\u7684\u89c2\u5bdf\u7a7a\u95f4\u8868\u9762\u6cd5\u7ebf\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6838\u5fc3\u6837\u672c\u6211\u4eec\u4f1a\u91c7\u6837\u7ebf\u6027\u6df1\u5ea6\u7eb9\u7406\u6765\u6bd4\u8f83\u7ed3\u679c\u3002\u91c7\u6837\u6838\u5fc3\u4f1a\u6839\u636e\u65cb\u8f6c\u77e2\u91cf\u7a0d\u5fae\u504f\u8f6c\u4e00\u70b9\uff1b\u6211\u4eec\u6240\u83b7\u5f97\u7684\u906e\u853d\u56e0\u5b50\u5c06\u4f1a\u4e4b\u540e\u7528\u6765\u9650\u5236\u6700\u7ec8\u7684\u73af\u5883\u5149\u7167\u5206\u91cf\u3002 \u7531\u4e8eSSAO\u662f\u4e00\u79cd\u5c4f\u5e55\u7a7a\u95f4\u6280\u5de7\uff0c\u6211\u4eec\u5bf9\u94fa\u5c4f2D\u56db\u8fb9\u5f62\u4e0a\u6bcf\u4e00\u4e2a\u7247\u6bb5\u8ba1\u7b97\u8fd9\u4e00\u6548\u679c\uff1b\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u6ca1\u6709\u573a\u666f\u4e2d\u51e0\u4f55\u4f53\u7684\u4fe1\u606f\u3002\u6211\u4eec\u80fd\u505a\u7684\u53ea\u662f\u6e32\u67d3\u51e0\u4f55\u4f53\u6570\u636e\u5230\u5c4f\u5e55\u7a7a\u95f4\u7eb9\u7406\u4e2d\uff0c\u6211\u4eec\u4e4b\u540e\u518d\u4f1a\u5c06\u6b64\u6570\u636e\u53d1\u9001\u5230SSAO\u7740\u8272\u5668\u4e2d\uff0c\u4e4b\u540e\u6211\u4eec\u5c31\u80fd\u8bbf\u95ee\u5230\u8fd9\u4e9b\u51e0\u4f55\u4f53\u6570\u636e\u4e86\u3002\u5982\u679c\u4f60\u770b\u4e86\u524d\u9762\u4e00\u7bc7\u6559\u7a0b\uff0c\u4f60\u4f1a\u53d1\u73b0\u8fd9\u548c\u5ef6\u8fdf\u6e32\u67d3\u5f88\u76f8\u4f3c\u3002\u8fd9\u4e5f\u5c31\u662f\u8bf4SSAO\u548c\u5ef6\u8fdf\u6e32\u67d3\u80fd\u5b8c\u7f8e\u5730\u517c\u5bb9\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u5b58\u4f4d\u7f6e\u548c\u6cd5\u7ebf\u5411\u91cf\u5230G\u7f13\u51b2\u4e2d\u4e86\u3002 Important \u5728\u8fd9\u4e2a\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u5728\u4e00\u4e2a\u7b80\u5316\u7248\u672c\u7684\u5ef6\u8fdf\u6e32\u67d3\u5668( \u5ef6\u8fdf\u7740\u8272\u6cd5 \u6559\u7a0b\u4e2d)\u7684\u57fa\u7840\u4e0a\u5b9e\u73b0SSAO\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u5ef6\u8fdf\u7740\u8272\u6cd5\uff0c\u8bf7\u5148\u8bfb\u5b8c\u90a3\u7bc7\u6559\u7a0b\u3002 \u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u9010\u7247\u6bb5\u4f4d\u7f6e\u548c\u6cd5\u7ebf\u6570\u636e(G\u7f13\u51b2\u4e2d)\uff0c\u6211\u4eec\u53ea\u9700\u8981\u66f4\u65b0\u4e00\u4e0b\u51e0\u4f55\u7740\u8272\u5668\uff0c\u8ba9\u5b83\u5305\u542b\u7247\u6bb5\u7684\u7ebf\u6027\u6df1\u5ea6\u5c31\u884c\u4e86\u3002\u56de\u5fc6\u6211\u4eec\u5728\u6df1\u5ea6\u6d4b\u8bd5\u90a3\u4e00\u8282\u5b66\u8fc7\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece gl_FragCoord.z \u4e2d\u63d0\u53d6\u7ebf\u6027\u6df1\u5ea6\uff1a #version 330 core layout (location = 0) out vec4 gPositionDepth; layout (location = 1) out vec3 gNormal; layout (location = 2) out vec4 gAlbedoSpec; in vec2 TexCoords; in vec3 FragPos; in vec3 Normal; const float NEAR = 0.1; // \u6295\u5f71\u77e9\u9635\u7684\u8fd1\u5e73\u9762 const float FAR = 50.0f; // \u6295\u5f71\u77e9\u9635\u7684\u8fdc\u5e73\u9762 float LinearizeDepth(float depth) { float z = depth * 2.0 - 1.0; // \u56de\u5230NDC return (2.0 * NEAR * FAR) / (FAR + NEAR - z * (FAR - NEAR)); } void main() { // \u50a8\u5b58\u7247\u6bb5\u7684\u4f4d\u7f6e\u77e2\u91cf\u5230\u7b2c\u4e00\u4e2aG\u7f13\u51b2\u7eb9\u7406 gPositionDepth.xyz = FragPos; // \u50a8\u5b58\u7ebf\u6027\u6df1\u5ea6\u5230gPositionDepth\u7684alpha\u5206\u91cf gPositionDepth.a = LinearizeDepth(gl_FragCoord.z); // \u50a8\u5b58\u6cd5\u7ebf\u4fe1\u606f\u5230G\u7f13\u51b2 gNormal = normalize(Normal); // \u548c\u6f2b\u53cd\u5c04\u989c\u8272 gAlbedoSpec.rgb = vec3(0.95); } \u63d0\u53d6\u51fa\u6765\u7684\u7ebf\u6027\u6df1\u5ea6\u662f\u5728\u89c2\u5bdf\u7a7a\u95f4\u4e2d\u7684\uff0c\u6240\u4ee5\u4e4b\u540e\u7684\u8fd0\u7b97\u4e5f\u662f\u5728\u89c2\u5bdf\u7a7a\u95f4\u4e2d\u3002\u786e\u4fddG\u7f13\u51b2\u4e2d\u7684\u4f4d\u7f6e\u548c\u6cd5\u7ebf\u90fd\u5728\u89c2\u5bdf\u7a7a\u95f4\u4e2d(\u4e58\u4e0a\u89c2\u5bdf\u77e9\u9635\u4e5f\u4e00\u6837)\u3002\u89c2\u5bdf\u7a7a\u95f4\u7ebf\u6027\u6df1\u5ea6\u503c\u4e4b\u540e\u4f1a\u88ab\u4fdd\u5b58\u5728 gPositionDepth \u989c\u8272\u7f13\u51b2\u7684alpha\u5206\u91cf\u4e2d\uff0c\u7701\u5f97\u6211\u4eec\u518d\u58f0\u660e\u4e00\u4e2a\u65b0\u7684\u989c\u8272\u7f13\u51b2\u7eb9\u7406\u3002 Important \u901a\u8fc7\u4e00\u4e9b\u5c0f\u6280\u5de7\u6765\u901a\u8fc7\u6df1\u5ea6\u503c\u91cd\u6784\u5b9e\u9645\u4f4d\u7f6e\u503c\u662f\u53ef\u80fd\u7684\uff0cMatt Pettineo\u5728\u4ed6\u7684 \u535a\u5ba2 \u91cc\u63d0\u5230\u4e86\u8fd9\u4e00\u6280\u5de7\u3002\u8fd9\u4e00\u6280\u5de7\u9700\u8981\u5728\u7740\u8272\u5668\u91cc\u8fdb\u884c\u4e00\u4e9b\u8ba1\u7b97\uff0c\u4f46\u662f\u7701\u4e86\u6211\u4eec\u5728G\u7f13\u51b2\u4e2d\u5b58\u50a8\u4f4d\u7f6e\u6570\u636e\uff0c\u4ece\u800c\u7701\u4e86\u5f88\u591a\u5185\u5b58\u3002\u4e3a\u4e86\u793a\u4f8b\u7684\u7b80\u5355\uff0c\u6211\u4eec\u5c06\u4e0d\u4f1a\u4f7f\u7528\u8fd9\u4e9b\u4f18\u5316\u6280\u5de7\uff0c\u4f60\u53ef\u4ee5\u81ea\u884c\u63a2\u7a76\u3002 gPositionDepth \u989c\u8272\u7f13\u51b2\u7eb9\u7406\u88ab\u8bbe\u7f6e\u6210\u4e86\u4e0b\u9762\u8fd9\u6837\uff1a glGenTextures(1, &gPositionDepth); glBindTexture(GL_TEXTURE_2D, gPositionDepth); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA16F, SCR_WIDTH, SCR_HEIGHT, 0, GL_RGBA, GL_FLOAT, NULL); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); \u8fd9\u7ed9\u6211\u4eec\u4e86\u4e00\u4e2a\u7ebf\u6027\u6df1\u5ea6\u7eb9\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u6765\u5bf9\u6bcf\u4e00\u4e2a\u6838\u5fc3\u6837\u672c\u83b7\u53d6\u6df1\u5ea6\u503c\u3002\u6ce8\u610f\u6211\u4eec\u628a\u7ebf\u6027\u6df1\u5ea6\u503c\u5b58\u50a8\u4e3a\u4e86\u6d6e\u70b9\u6570\u636e\uff1b\u8fd9\u6837\u4ece0.1\u523050.0\u8303\u56f4\u6df1\u5ea6\u503c\u90fd\u4e0d\u4f1a\u88ab\u9650\u5236\u5728[0.0, 1.0]\u4e4b\u95f4\u4e86\u3002\u5982\u679c\u4f60\u4e0d\u7528\u6d6e\u70b9\u503c\u5b58\u50a8\u8fd9\u4e9b\u6df1\u5ea6\u6570\u636e\uff0c\u786e\u4fdd\u4f60\u9996\u5148\u5c06\u503c\u9664\u4ee5 FAR \u6765\u6807\u51c6\u5316\u5b83\u4eec\uff0c\u518d\u5b58\u50a8\u5230 gPositionDepth \u7eb9\u7406\u4e2d\uff0c\u5e76\u5728\u4ee5\u540e\u7684\u7740\u8272\u5668\u4e2d\u7528\u76f8\u4f3c\u7684\u65b9\u6cd5\u91cd\u5efa\u5b83\u4eec\u3002\u540c\u6837\u9700\u8981\u6ce8\u610f\u7684\u662f GL_CLAMP_TO_EDGE \u7684\u7eb9\u7406\u5c01\u88c5\u65b9\u6cd5\u3002\u8fd9\u4fdd\u8bc1\u4e86\u6211\u4eec\u4e0d\u4f1a\u4e0d\u5c0f\u5fc3\u91c7\u6837\u5230\u5728\u5c4f\u5e55\u7a7a\u95f4\u4e2d\u7eb9\u7406\u9ed8\u8ba4\u5750\u6807\u533a\u57df\u4e4b\u5916\u7684\u6df1\u5ea6\u503c\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u771f\u6b63\u7684\u534a\u7403\u91c7\u6837\u6838\u5fc3\u548c\u4e00\u4e9b\u65b9\u6cd5\u6765\u968f\u673a\u65cb\u8f6c\u5b83\u3002 \u6cd5\u5411\u534a\u7403 \u6211\u4eec\u9700\u8981\u6cbf\u7740\u8868\u9762\u6cd5\u7ebf\u65b9\u5411\u751f\u6210\u5927\u91cf\u7684\u6837\u672c\u3002\u5c31\u50cf\u6211\u4eec\u5728\u8fd9\u4e2a\u6559\u7a0b\u7684\u5f00\u59cb\u4ecb\u7ecd\u7684\u90a3\u6837\uff0c\u6211\u4eec\u60f3\u8981\u751f\u6210\u5f62\u6210\u534a\u7403\u5f62\u7684\u6837\u672c\u3002\u7531\u4e8e\u5bf9\u6bcf\u4e2a\u8868\u9762\u6cd5\u7ebf\u65b9\u5411\u751f\u6210\u91c7\u6837\u6838\u5fc3\u975e\u5e38\u56f0\u96be\uff0c\u4e5f\u4e0d\u5408\u5b9e\u9645\uff0c\u6211\u4eec\u5c06\u5728 \u5207\u7ebf\u7a7a\u95f4 (Tangent Space)\u5185\u751f\u6210\u91c7\u6837\u6838\u5fc3\uff0c\u6cd5\u5411\u91cf\u5c06\u6307\u5411\u6b63z\u65b9\u5411\u3002 \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5355\u4f4d\u534a\u7403\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u62e5\u6709\u6700\u592764\u6837\u672c\u503c\u7684\u91c7\u6837\u6838\u5fc3\uff1a std::uniform_real_distribution<GLfloat> randomFloats(0.0, 1.0); // \u968f\u673a\u6d6e\u70b9\u6570\uff0c\u8303\u56f40.0 - 1.0 std::default_random_engine generator; std::vector<glm::vec3> ssaoKernel; for (GLuint i = 0; i < 64; ++i) { glm::vec3 sample( randomFloats(generator) * 2.0 - 1.0, randomFloats(generator) * 2.0 - 1.0, randomFloats(generator) ); sample = glm::normalize(sample); sample *= randomFloats(generator); GLfloat scale = GLfloat(i) / 64.0; ssaoKernel.push_back(sample); } \u6211\u4eec\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\u4ee5-1.0\u52301.0\u4e3a\u8303\u56f4\u53d8\u6362x\u548cy\u65b9\u5411\uff0c\u5e76\u4ee50.0\u548c1.0\u4e3a\u8303\u56f4\u53d8\u6362\u6837\u672c\u7684z\u65b9\u5411(\u5982\u679c\u4ee5-1.0\u52301.0\u4e3a\u8303\u56f4\uff0c\u53d6\u6837\u6838\u5fc3\u5c31\u53d8\u6210\u7403\u578b\u4e86)\u3002\u7531\u4e8e\u91c7\u6837\u6838\u5fc3\u5c06\u4f1a\u6cbf\u7740\u8868\u9762\u6cd5\u7ebf\u5bf9\u9f50\uff0c\u6240\u5f97\u7684\u6837\u672c\u77e2\u91cf\u5c06\u4f1a\u5728\u534a\u7403\u91cc\u3002 \u76ee\u524d\uff0c\u6240\u6709\u7684\u6837\u672c\u90fd\u662f\u5e73\u5747\u5206\u5e03\u5728\u91c7\u6837\u6838\u5fc3\u91cc\u7684\uff0c\u4f46\u662f\u6211\u4eec\u66f4\u613f\u610f\u5c06\u66f4\u591a\u7684\u6ce8\u610f\u653e\u5728\u9760\u8fd1\u771f\u6b63\u7247\u6bb5\u7684\u906e\u853d\u4e0a\uff0c\u4e5f\u5c31\u662f\u5c06\u6838\u5fc3\u6837\u672c\u9760\u8fd1\u539f\u70b9\u5206\u5e03\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u52a0\u901f\u63d2\u503c\u51fd\u6570\u5b9e\u73b0\u5b83\uff1a ...[\u63a5\u4e0a\u51fd\u6570] scale = lerp(0.1f, 1.0f, scale * scale); sample *= scale; ssaoKernel.push_back(sample); } lerp \u88ab\u5b9a\u4e49\u4e3a\uff1a GLfloat lerp(GLfloat a, GLfloat b, GLfloat f) { return a + f * (b - a); } \u8fd9\u5c31\u7ed9\u4e86\u6211\u4eec\u4e00\u4e2a\u5927\u90e8\u5206\u6837\u672c\u9760\u8fd1\u539f\u70b9\u7684\u6838\u5fc3\u5206\u5e03\u3002 \u6bcf\u4e2a\u6838\u5fc3\u6837\u672c\u5c06\u4f1a\u88ab\u7528\u6765\u504f\u79fb\u89c2\u5bdf\u7a7a\u95f4\u7247\u6bb5\u4f4d\u7f6e\u4ece\u800c\u91c7\u6837\u5468\u56f4\u7684\u51e0\u4f55\u4f53\u3002\u6211\u4eec\u5728\u6559\u7a0b\u5f00\u59cb\u7684\u65f6\u5019\u770b\u5230\uff0c\u5982\u679c\u6ca1\u6709\u53d8\u5316\u91c7\u6837\u6838\u5fc3\uff0c\u6211\u4eec\u5c06\u9700\u8981\u5927\u91cf\u7684\u6837\u672c\u6765\u83b7\u5f97\u771f\u5b9e\u7684\u7ed3\u679c\u3002\u901a\u8fc7\u5f15\u5165\u4e00\u4e2a\u968f\u673a\u7684\u8f6c\u52a8\u5230\u91c7\u6837\u6838\u5fc3\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5927\u7a0b\u5ea6\u4e0a\u51cf\u5c11\u8fd9\u4e00\u6570\u91cf\u3002 \u968f\u673a\u6838\u5fc3\u8f6c\u52a8 \u901a\u8fc7\u5f15\u5165\u4e00\u4e9b\u968f\u673a\u6027\u5230\u91c7\u6837\u6838\u5fc3\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u83b7\u5f97\u4e0d\u9519\u7ed3\u679c\u6240\u9700\u7684\u6837\u672c\u6570\u91cf\u3002\u6211\u4eec\u53ef\u4ee5\u5bf9\u573a\u666f\u4e2d\u6bcf\u4e00\u4e2a\u7247\u6bb5\u521b\u5efa\u4e00\u4e2a\u968f\u673a\u65cb\u8f6c\u5411\u91cf\uff0c\u4f46\u8fd9\u4f1a\u5f88\u5feb\u5c06\u5185\u5b58\u8017\u5c3d\u3002\u6240\u4ee5\uff0c\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u521b\u5efa\u4e00\u4e2a\u5c0f\u7684\u968f\u673a\u65cb\u8f6c\u5411\u91cf\u7eb9\u7406\u5e73\u94fa\u5728\u5c4f\u5e55\u4e0a\u3002 \u6211\u4eec\u521b\u5efa\u4e00\u4e2a4x4\u671d\u5411\u5207\u7ebf\u7a7a\u95f4\u5e73\u9762\u6cd5\u7ebf\u7684\u968f\u673a\u65cb\u8f6c\u5411\u91cf\u6570\u7ec4\uff1a std::vector<glm::vec3> ssaoNoise; for (GLuint i = 0; i < 16; i++) { glm::vec3 noise( randomFloats(generator) * 2.0 - 1.0, randomFloats(generator) * 2.0 - 1.0, 0.0f); ssaoNoise.push_back(noise); } \u7531\u4e8e\u91c7\u6837\u6838\u5fc3\u662f\u6cbf\u7740\u6b63z\u65b9\u5411\u5728\u5207\u7ebf\u7a7a\u95f4\u5185\u65cb\u8f6c\uff0c\u6211\u4eec\u8bbe\u5b9az\u5206\u91cf\u4e3a0.0\uff0c\u4ece\u800c\u56f4\u7ed5z\u8f74\u65cb\u8f6c\u3002 \u6211\u4eec\u63a5\u4e0b\u6765\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u968f\u673a\u65cb\u8f6c\u5411\u91cf\u76844x4\u7eb9\u7406\uff1b\u8bb0\u5f97\u8bbe\u5b9a\u5b83\u7684\u5c01\u88c5\u65b9\u6cd5\u4e3a GL_REPEAT \uff0c\u4ece\u800c\u4fdd\u8bc1\u5b83\u5408\u9002\u5730\u5e73\u94fa\u5728\u5c4f\u5e55\u4e0a\u3002 GLuint noiseTexture; glGenTextures(1, &noiseTexture); glBindTexture(GL_TEXTURE_2D, noiseTexture); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB16F, 4, 4, 0, GL_RGB, GL_FLOAT, &ssaoNoise[0]); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT); \u73b0\u5728\u6211\u4eec\u6709\u4e86\u6240\u6709\u7684\u76f8\u5173\u8f93\u5165\u6570\u636e\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u5b9e\u73b0SSAO\u3002 SSAO\u7740\u8272\u5668 SSAO\u7740\u8272\u5668\u57282D\u7684\u94fa\u5c4f\u56db\u8fb9\u5f62\u4e0a\u8fd0\u884c\uff0c\u5b83\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u751f\u6210\u7684\u7247\u6bb5\u8ba1\u7b97\u906e\u853d\u503c(\u4e3a\u4e86\u5728\u6700\u7ec8\u7684\u5149\u7167\u7740\u8272\u5668\u4e2d\u4f7f\u7528)\u3002\u7531\u4e8e\u6211\u4eec\u9700\u8981\u5b58\u50a8SSAO\u9636\u6bb5\u7684\u7ed3\u679c\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5728\u521b\u5efa\u4e00\u4e2a\u5e27\u7f13\u51b2\u5bf9\u8c61\uff1a GLuint ssaoFBO; glGenFramebuffers(1, &ssaoFBO); glBindFramebuffer(GL_FRAMEBUFFER, ssaoFBO); GLuint ssaoColorBuffer; glGenTextures(1, &ssaoColorBuffer); glBindTexture(GL_TEXTURE_2D, ssaoColorBuffer); glTexImage2D(GL_TEXTURE_2D, 0, GL_RED, SCR_WIDTH, SCR_HEIGHT, 0, GL_RGB, GL_FLOAT, NULL); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, ssaoColorBuffer, 0); \u7531\u4e8e\u73af\u5883\u906e\u853d\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u7070\u5ea6\u503c\uff0c\u6211\u4eec\u5c06\u53ea\u9700\u8981\u7eb9\u7406\u7684\u7ea2\u8272\u5206\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u989c\u8272\u7f13\u51b2\u7684\u5185\u90e8\u683c\u5f0f\u8bbe\u7f6e\u4e3a GL_RED \u3002 \u6e32\u67d3SSAO\u5b8c\u6574\u7684\u8fc7\u7a0b\u4f1a\u50cf\u8fd9\u6837\uff1a // \u51e0\u4f55\u5904\u7406\u9636\u6bb5: \u6e32\u67d3\u5230G\u7f13\u51b2\u4e2d glBindFramebuffer(GL_FRAMEBUFFER, gBuffer); [...] glBindFramebuffer(GL_FRAMEBUFFER, 0); // \u4f7f\u7528G\u7f13\u51b2\u6e32\u67d3SSAO\u7eb9\u7406 glBindFramebuffer(GL_FRAMEBUFFER, ssaoFBO); glClear(GL_COLOR_BUFFER_BIT); shaderSSAO.Use(); glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_2D, gPositionDepth); glActiveTexture(GL_TEXTURE1); glBindTexture(GL_TEXTURE_2D, gNormal); glActiveTexture(GL_TEXTURE2); glBindTexture(GL_TEXTURE_2D, noiseTexture); SendKernelSamplesToShader(); glUniformMatrix4fv(projLocation, 1, GL_FALSE, glm::value_ptr(projection)); RenderQuad(); glBindFramebuffer(GL_FRAMEBUFFER, 0); // \u5149\u7167\u5904\u7406\u9636\u6bb5: \u6e32\u67d3\u573a\u666f\u5149\u7167 glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); shaderLightingPass.Use(); [...] glActiveTexture(GL_TEXTURE3); glBindTexture(GL_TEXTURE_2D, ssaoColorBuffer); [...] RenderQuad(); shaderSSAO \u8fd9\u4e2a\u7740\u8272\u5668\u5c06\u5bf9\u5e94G\u7f13\u51b2\u7eb9\u7406(\u5305\u62ec\u7ebf\u6027\u6df1\u5ea6)\uff0c\u566a\u58f0\u7eb9\u7406\u548c\u6cd5\u5411\u534a\u7403\u6838\u5fc3\u6837\u672c\u4f5c\u4e3a\u8f93\u5165\u53c2\u6570\uff1a #version 330 core out float FragColor; in vec2 TexCoords; uniform sampler2D gPositionDepth; uniform sampler2D gNormal; uniform sampler2D texNoise; uniform vec3 samples[64]; uniform mat4 projection; // \u5c4f\u5e55\u7684\u5e73\u94fa\u566a\u58f0\u7eb9\u7406\u4f1a\u6839\u636e\u5c4f\u5e55\u5206\u8fa8\u7387\u9664\u4ee5\u566a\u58f0\u5927\u5c0f\u7684\u503c\u6765\u51b3\u5b9a const vec2 noiseScale = vec2(800.0/4.0, 600.0/4.0); // \u5c4f\u5e55 = 800x600 void main() { [...] } \u6ce8\u610f\u6211\u4eec\u8fd9\u91cc\u6709\u4e00\u4e2a noiseScale \u7684\u53d8\u91cf\u3002\u6211\u4eec\u60f3\u8981\u5c06\u566a\u58f0\u7eb9\u7406\u5e73\u94fa(Tile)\u5728\u5c4f\u5e55\u4e0a\uff0c\u4f46\u662f\u7531\u4e8e TexCoords \u7684\u53d6\u503c\u57280.0\u548c1.0\u4e4b\u95f4\uff0c texNoise \u7eb9\u7406\u5c06\u4e0d\u4f1a\u5e73\u94fa\u3002\u6240\u4ee5\u6211\u4eec\u5c06\u901a\u8fc7\u5c4f\u5e55\u5206\u8fa8\u7387\u9664\u4ee5\u566a\u58f0\u7eb9\u7406\u5927\u5c0f\u7684\u65b9\u5f0f\u8ba1\u7b97 TexCoords \u7684\u7f29\u653e\u5927\u5c0f\uff0c\u5e76\u5728\u4e4b\u540e\u63d0\u53d6\u76f8\u5173\u8f93\u5165\u5411\u91cf\u7684\u65f6\u5019\u4f7f\u7528\u3002 vec3 fragPos = texture(gPositionDepth, TexCoords).xyz; vec3 normal = texture(gNormal, TexCoords).rgb; vec3 randomVec = texture(texNoise, TexCoords * noiseScale).xyz; \u7531\u4e8e\u6211\u4eec\u5c06 texNoise \u7684\u5e73\u94fa\u53c2\u6570\u8bbe\u7f6e\u4e3a GL_REPEAT \uff0c\u968f\u673a\u7684\u503c\u5c06\u4f1a\u5728\u5168\u5c4f\u4e0d\u65ad\u91cd\u590d\u3002\u52a0\u4e0a fragPog \u548c normal \u5411\u91cf\uff0c\u6211\u4eec\u5c31\u6709\u8db3\u591f\u7684\u6570\u636e\u6765\u521b\u5efa\u4e00\u4e2aTBN\u77e9\u9635\uff0c\u5c06\u5411\u91cf\u4ece\u5207\u7ebf\u7a7a\u95f4\u53d8\u6362\u5230\u89c2\u5bdf\u7a7a\u95f4\u3002 vec3 tangent = normalize(randomVec - normal * dot(randomVec, normal)); vec3 bitangent = cross(normal, tangent); mat3 TBN = mat3(tangent, bitangent, normal); \u901a\u8fc7\u4f7f\u7528\u4e00\u4e2a\u53eb\u505aGramm-Schmidt\u5904\u7406(Gramm-Schmidt Process)\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u6b63\u4ea4\u57fa(Orthogonal Basis)\uff0c\u6bcf\u4e00\u6b21\u5b83\u90fd\u4f1a\u6839\u636e randomVec \u7684\u503c\u7a0d\u5fae\u503e\u659c\u3002\u6ce8\u610f\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a\u968f\u673a\u5411\u91cf\u6765\u6784\u9020\u5207\u7ebf\u5411\u91cf\uff0c\u6211\u4eec\u6ca1\u5fc5\u8981\u6709\u4e00\u4e2a\u6070\u597d\u6cbf\u7740\u51e0\u4f55\u4f53\u8868\u9762\u7684TBN\u77e9\u9635\uff0c\u4e5f\u5c31\u662f\u4e0d\u9700\u8981\u9010\u9876\u70b9\u5207\u7ebf(\u548c\u53cc\u5207)\u5411\u91cf\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5bf9\u6bcf\u4e2a\u6838\u5fc3\u6837\u672c\u8fdb\u884c\u8fed\u4ee3\uff0c\u5c06\u6837\u672c\u4ece\u5207\u7ebf\u7a7a\u95f4\u53d8\u6362\u5230\u89c2\u5bdf\u7a7a\u95f4\uff0c\u5c06\u5b83\u4eec\u52a0\u5230\u5f53\u524d\u50cf\u7d20\u4f4d\u7f6e\u4e0a\uff0c\u5e76\u5c06\u7247\u6bb5\u4f4d\u7f6e\u6df1\u5ea6\u4e0e\u50a8\u5b58\u5728\u539f\u59cb\u6df1\u5ea6\u7f13\u51b2\u4e2d\u7684\u6837\u672c\u6df1\u5ea6\u8fdb\u884c\u6bd4\u8f83\u3002\u6211\u4eec\u6765\u4e00\u6b65\u6b65\u8ba8\u8bba\u5b83\uff1a float occlusion = 0.0; for(int i = 0; i < kernelSize; ++i) { // \u83b7\u53d6\u6837\u672c\u4f4d\u7f6e vec3 sample = TBN * samples[i]; // \u5207\u7ebf->\u89c2\u5bdf\u7a7a\u95f4 sample = fragPos + sample * radius; [...] } \u8fd9\u91cc\u7684 kernelSize \u548c radius \u53d8\u91cf\u90fd\u53ef\u4ee5\u7528\u6765\u8c03\u6574\u6548\u679c\uff1b\u5728\u8fd9\u91cc\u6211\u4eec\u5206\u522b\u4fdd\u6301\u4ed6\u4eec\u7684\u9ed8\u8ba4\u503c\u4e3a 64 \u548c 1.0 \u3002\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u8fed\u4ee3\u6211\u4eec\u9996\u5148\u53d8\u6362\u5404\u81ea\u6837\u672c\u5230\u89c2\u5bdf\u7a7a\u95f4\u3002\u4e4b\u540e\u6211\u4eec\u4f1a\u52a0\u89c2\u5bdf\u7a7a\u95f4\u6838\u5fc3\u504f\u79fb\u6837\u672c\u5230\u89c2\u5bdf\u7a7a\u95f4\u7247\u6bb5\u4f4d\u7f6e\u4e0a\uff1b\u6700\u540e\u518d\u7528 radius \u4e58\u4e0a\u504f\u79fb\u6837\u672c\u6765\u589e\u52a0(\u6216\u51cf\u5c11)SSAO\u7684\u6709\u6548\u53d6\u6837\u534a\u5f84\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u53d8\u6362 sample \u5230\u5c4f\u5e55\u7a7a\u95f4\uff0c\u4ece\u800c\u6211\u4eec\u53ef\u4ee5\u5c31\u50cf\u6b63\u5728\u76f4\u63a5\u6e32\u67d3\u5b83\u7684\u4f4d\u7f6e\u5230\u5c4f\u5e55\u4e0a\u4e00\u6837\u53d6\u6837 sample \u7684(\u7ebf\u6027)\u6df1\u5ea6\u503c\u3002\u7531\u4e8e\u8fd9\u4e2a\u5411\u91cf\u76ee\u524d\u5728\u89c2\u5bdf\u7a7a\u95f4\uff0c\u6211\u4eec\u5c06\u9996\u5148\u4f7f\u7528 projection \u77e9\u9635uniform\u53d8\u6362\u5b83\u5230\u88c1\u526a\u7a7a\u95f4\u3002 vec4 offset = vec4(sample, 1.0); offset = projection * offset; // \u89c2\u5bdf->\u88c1\u526a\u7a7a\u95f4 offset.xyz /= offset.w; // \u900f\u89c6\u5212\u5206 offset.xyz = offset.xyz * 0.5 + 0.5; // \u53d8\u6362\u52300.0 - 1.0\u7684\u503c\u57df \u5728\u53d8\u91cf\u88ab\u53d8\u6362\u5230\u88c1\u526a\u7a7a\u95f4\u4e4b\u540e\uff0c\u6211\u4eec\u7528 xyz \u5206\u91cf\u9664\u4ee5 w \u5206\u91cf\u8fdb\u884c\u900f\u89c6\u5212\u5206\u3002\u7ed3\u679c\u6240\u5f97\u7684\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u4e4b\u540e\u53d8\u6362\u5230 [0.0, 1.0] \u8303\u56f4\u4ee5\u4fbf\u6211\u4eec\u4f7f\u7528\u5b83\u4eec\u53bb\u53d6\u6837\u6df1\u5ea6\u7eb9\u7406\uff1a float sampleDepth = -texture(gPositionDepth, offset.xy).w; \u6211\u4eec\u4f7f\u7528 offset \u5411\u91cf\u7684 x \u548c y \u5206\u91cf\u91c7\u6837\u7ebf\u6027\u6df1\u5ea6\u7eb9\u7406\u4ece\u800c\u83b7\u53d6\u6837\u672c\u4f4d\u7f6e\u4ece\u89c2\u5bdf\u8005\u89c6\u89d2\u7684\u6df1\u5ea6\u503c(\u7b2c\u4e00\u4e2a\u4e0d\u88ab\u906e\u853d\u7684\u53ef\u89c1\u7247\u6bb5)\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u68c0\u67e5\u6837\u672c\u7684\u5f53\u524d\u6df1\u5ea6\u503c\u662f\u5426\u5927\u4e8e\u5b58\u50a8\u7684\u6df1\u5ea6\u503c\uff0c\u5982\u679c\u662f\u7684\uff0c\u6dfb\u52a0\u5230\u6700\u7ec8\u7684\u8d21\u732e\u56e0\u5b50\u4e0a\u3002 occlusion += (sampleDepth >= sample.z ? 1.0 : 0.0); \u8fd9\u5e76\u6ca1\u6709\u5b8c\u5168\u7ed3\u675f\uff0c\u56e0\u4e3a\u4ecd\u7136\u8fd8\u6709\u4e00\u4e2a\u5c0f\u95ee\u9898\u9700\u8981\u8003\u8651\u3002\u5f53\u68c0\u6d4b\u4e00\u4e2a\u9760\u8fd1\u8868\u9762\u8fb9\u7f18\u7684\u7247\u6bb5\u65f6\uff0c\u5b83\u5c06\u4f1a\u8003\u8651\u6d4b\u8bd5\u8868\u9762\u4e4b\u4e0b\u7684\u8868\u9762\u7684\u6df1\u5ea6\u503c\uff1b\u8fd9\u4e9b\u503c\u5c06\u4f1a(\u4e0d\u6b63\u786e\u5730)\u5f71\u54cd\u906e\u853d\u56e0\u5b50\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5f15\u5165\u4e00\u4e2a\u8303\u56f4\u68c0\u6d4b\u4ece\u800c\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6b63\u5982\u4e0b\u56fe\u6240\u793a( John Chapman \u7684\u4f5b\u50cf)\uff1a \u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u8303\u56f4\u6d4b\u8bd5\u4ece\u800c\u4fdd\u8bc1\u6211\u4eec\u53ea\u5f53\u88ab\u6d4b\u6df1\u5ea6\u503c\u5728\u53d6\u6837\u534a\u5f84\u5185\u65f6\u5f71\u54cd\u906e\u853d\u56e0\u5b50\u3002\u5c06\u4ee3\u7801\u6700\u540e\u4e00\u884c\u6362\u6210\uff1a float rangeCheck = smoothstep(0.0, 1.0, radius / abs(fragPos.z - sampleDepth)); occlusion += (sampleDepth >= sample.z ? 1.0 : 0.0) * rangeCheck; \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e86GLSL\u7684 smoothstep \u51fd\u6570\uff0c\u5b83\u975e\u5e38\u5149\u6ed1\u5730\u5728\u7b2c\u4e00\u548c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8303\u56f4\u5185\u63d2\u503c\u4e86\u7b2c\u4e09\u4e2a\u53c2\u6570\u3002\u5982\u679c\u6df1\u5ea6\u5dee\u56e0\u6b64\u6700\u7ec8\u53d6\u503c\u5728 radius \u4e4b\u95f4\uff0c\u5b83\u4eec\u7684\u503c\u5c06\u4f1a\u5149\u6ed1\u5730\u6839\u636e\u4e0b\u9762\u8fd9\u4e2a\u66f2\u7ebf\u63d2\u503c\u57280.0\u548c1.0\u4e4b\u95f4\uff1a \u5982\u679c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u5728\u6df1\u5ea6\u503c\u5728 radius \u4e4b\u5916\u5c31\u7a81\u7136\u79fb\u9664\u906e\u853d\u8d21\u732e\u7684\u786c\u754c\u9650\u8303\u56f4\u68c0\u6d4b(Hard Cut-off Range Check)\uff0c\u6211\u4eec\u5c06\u4f1a\u5728\u8303\u56f4\u68c0\u6d4b\u5e94\u7528\u7684\u5730\u65b9\u770b\u89c1\u4e00\u4e2a\u660e\u663e\u7684(\u5f88\u96be\u770b\u7684)\u8fb9\u7f18\u3002 \u6700\u540e\u4e00\u6b65\uff0c\u6211\u4eec\u9700\u8981\u5c06\u906e\u853d\u8d21\u732e\u6839\u636e\u6838\u5fc3\u7684\u5927\u5c0f\u6807\u51c6\u5316\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002\u6ce8\u610f\u6211\u4eec\u75281.0\u51cf\u53bb\u4e86\u906e\u853d\u56e0\u5b50\uff0c\u4ee5\u4fbf\u76f4\u63a5\u4f7f\u7528\u906e\u853d\u56e0\u5b50\u53bb\u7f29\u653e\u73af\u5883\u5149\u7167\u5206\u91cf\u3002 } occlusion = 1.0 - (occlusion / kernelSize); FragColor = occlusion; \u4e0b\u9762\u8fd9\u5e45\u56fe\u5c55\u793a\u4e86\u6211\u4eec\u6700\u559c\u6b22\u7684\u7eb3\u7c73\u88c5\u6a21\u578b\u6b63\u5728\u6253\u76f9\u7684\u573a\u666f\uff0c\u73af\u5883\u906e\u853d\u7740\u8272\u5668\u4ea7\u751f\u4e86\u4ee5\u4e0b\u7684\u7eb9\u7406\uff1a \u53ef\u89c1\uff0c\u73af\u5883\u906e\u853d\u4ea7\u751f\u4e86\u975e\u5e38\u5f3a\u70c8\u7684\u6df1\u5ea6\u611f\u3002\u4ec5\u4ec5\u901a\u8fc7\u73af\u5883\u906e\u853d\u7eb9\u7406\u6211\u4eec\u5c31\u5df2\u7ecf\u80fd\u6e05\u6670\u5730\u770b\u89c1\u6a21\u578b\u4e00\u5b9a\u8eba\u5728\u5730\u677f\u4e0a\u800c\u4e0d\u662f\u6d6e\u5728\u7a7a\u4e2d\u3002 \u73b0\u5728\u7684\u6548\u679c\u4ecd\u7136\u770b\u8d77\u6765\u4e0d\u662f\u5f88\u5b8c\u7f8e\uff0c\u7531\u4e8e\u91cd\u590d\u7684\u566a\u58f0\u7eb9\u7406\u518d\u56fe\u4e2d\u6e05\u6670\u53ef\u89c1\u3002\u4e3a\u4e86\u521b\u5efa\u4e00\u4e2a\u5149\u6ed1\u7684\u73af\u5883\u906e\u853d\u7ed3\u679c\uff0c\u6211\u4eec\u9700\u8981\u6a21\u7cca\u73af\u5883\u906e\u853d\u7eb9\u7406\u3002 \u73af\u5883\u906e\u853d\u6a21\u7cca \u5728SSAO\u9636\u6bb5\u548c\u5149\u7167\u9636\u6bb5\u4e4b\u95f4\uff0c\u6211\u4eec\u60f3\u8981\u8fdb\u884c\u6a21\u7ccaSSAO\u7eb9\u7406\u7684\u5904\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u53c8\u521b\u5efa\u4e86\u4e00\u4e2a\u5e27\u7f13\u51b2\u5bf9\u8c61\u6765\u50a8\u5b58\u6a21\u7cca\u7ed3\u679c\u3002 GLuint ssaoBlurFBO, ssaoColorBufferBlur; glGenFramebuffers(1, &ssaoBlurFBO); glBindFramebuffer(GL_FRAMEBUFFER, ssaoBlurFBO); glGenTextures(1, &ssaoColorBufferBlur); glBindTexture(GL_TEXTURE_2D, ssaoColorBufferBlur); glTexImage2D(GL_TEXTURE_2D, 0, GL_RED, SCR_WIDTH, SCR_HEIGHT, 0, GL_RGB, GL_FLOAT, NULL); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, ssaoColorBufferBlur, 0); \u7531\u4e8e\u5e73\u94fa\u7684\u968f\u673a\u5411\u91cf\u7eb9\u7406\u4fdd\u6301\u4e86\u4e00\u81f4\u7684\u968f\u673a\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e00\u6027\u8d28\u6765\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u6a21\u7cca\u7740\u8272\u5668\uff1a #version 330 core in vec2 TexCoords; out float fragColor; uniform sampler2D ssaoInput; void main() { vec2 texelSize = 1.0 / vec2(textureSize(ssaoInput, 0)); float result = 0.0; for (int x = -2; x < 2; ++x) { for (int y = -2; y < 2; ++y) { vec2 offset = vec2(float(x), float(y)) * texelSize; result += texture(ssaoInput, TexCoords + offset).r; } } fragColor = result / (4.0 * 4.0); } \u8fd9\u91cc\u6211\u4eec\u904d\u5386\u4e86\u5468\u56f4\u5728-2.0\u548c2.0\u4e4b\u95f4\u7684SSAO\u7eb9\u7406\u5355\u5143(Texel)\uff0c\u91c7\u6837\u4e0e\u566a\u58f0\u7eb9\u7406\u7ef4\u5ea6\u76f8\u540c\u6570\u91cf\u7684SSAO\u7eb9\u7406\u3002\u6211\u4eec\u901a\u8fc7\u4f7f\u7528\u8fd4\u56de vec2 \u7eb9\u7406\u7ef4\u5ea6\u7684 textureSize \uff0c\u6839\u636e\u7eb9\u7406\u5355\u5143\u7684\u771f\u5b9e\u5927\u5c0f\u504f\u79fb\u4e86\u6bcf\u4e00\u4e2a\u7eb9\u7406\u5750\u6807\u3002\u6211\u4eec\u5e73\u5747\u6240\u5f97\u7684\u7ed3\u679c\uff0c\u83b7\u5f97\u4e00\u4e2a\u7b80\u5355\u4f46\u662f\u6709\u6548\u7684\u6a21\u7cca\u6548\u679c\uff1a \u8fd9\u5c31\u5b8c\u6210\u4e86\uff0c\u4e00\u4e2a\u5305\u542b\u9010\u7247\u6bb5\u73af\u5883\u906e\u853d\u6570\u636e\u7684\u7eb9\u7406\uff1b\u5728\u5149\u7167\u5904\u7406\u9636\u6bb5\u4e2d\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002 \u5e94\u7528\u73af\u5883\u906e\u853d \u5e94\u7528\u906e\u853d\u56e0\u5b50\u5230\u5149\u7167\u65b9\u7a0b\u4e2d\u6781\u5176\u7b80\u5355\uff1a\u6211\u4eec\u8981\u505a\u7684\u53ea\u662f\u5c06\u9010\u7247\u6bb5\u73af\u5883\u906e\u853d\u56e0\u5b50\u4e58\u5230\u5149\u7167\u73af\u5883\u5206\u91cf\u4e0a\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u4e0a\u4e2a\u6559\u7a0b\u4e2d\u7684Blinn-Phong\u5ef6\u8fdf\u5149\u7167\u7740\u8272\u5668\u5e76\u505a\u51fa\u4e00\u70b9\u4fee\u6539\uff0c\u6211\u4eec\u5c06\u4f1a\u5f97\u5230\u4e0b\u9762\u8fd9\u4e2a\u7247\u6bb5\u7740\u8272\u5668\uff1a #version 330 core out vec4 FragColor; in vec2 TexCoords; uniform sampler2D gPositionDepth; uniform sampler2D gNormal; uniform sampler2D gAlbedo; uniform sampler2D ssao; struct Light { vec3 Position; vec3 Color; float Linear; float Quadratic; float Radius; }; uniform Light light; void main() { // \u4eceG\u7f13\u51b2\u4e2d\u63d0\u53d6\u6570\u636e vec3 FragPos = texture(gPositionDepth, TexCoords).rgb; vec3 Normal = texture(gNormal, TexCoords).rgb; vec3 Diffuse = texture(gAlbedo, TexCoords).rgb; float AmbientOcclusion = texture(ssao, TexCoords).r; // Blinn-Phong (\u89c2\u5bdf\u7a7a\u95f4\u4e2d) vec3 ambient = vec3(0.3 * AmbientOcclusion); // \u8fd9\u91cc\u6211\u4eec\u52a0\u4e0a\u906e\u853d\u56e0\u5b50 vec3 lighting = ambient; vec3 viewDir = normalize(-FragPos); // Viewpos \u4e3a (0.0.0)\uff0c\u5728\u89c2\u5bdf\u7a7a\u95f4\u4e2d // \u6f2b\u53cd\u5c04 vec3 lightDir = normalize(light.Position - FragPos); vec3 diffuse = max(dot(Normal, lightDir), 0.0) * Diffuse * light.Color; // \u955c\u9762 vec3 halfwayDir = normalize(lightDir + viewDir); float spec = pow(max(dot(Normal, halfwayDir), 0.0), 8.0); vec3 specular = light.Color * spec; // \u8870\u51cf float dist = length(light.Position - FragPos); float attenuation = 1.0 / (1.0 + light.Linear * dist + light.Quadratic * dist * dist); diffuse *= attenuation; specular *= attenuation; lighting += diffuse + specular; FragColor = vec4(lighting, 1.0); } (\u9664\u4e86\u5c06\u5176\u6539\u5230\u89c2\u5bdf\u7a7a\u95f4)\u5bf9\u6bd4\u4e8e\u4e4b\u524d\u7684\u5149\u7167\u5b9e\u73b0\uff0c\u552f\u4e00\u7684\u771f\u6b63\u6539\u52a8\u5c31\u662f\u573a\u666f\u73af\u5883\u5206\u91cf\u4e0e AmbientOcclusion \u503c\u7684\u4e58\u6cd5\u3002\u901a\u8fc7\u5728\u573a\u666f\u4e2d\u52a0\u5165\u4e00\u4e2a\u6de1\u84dd\u8272\u7684\u70b9\u5149\u6e90\uff0c\u6211\u4eec\u5c06\u4f1a\u5f97\u5230\u4e0b\u9762\u8fd9\u4e2a\u7ed3\u679c\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5b8c\u6574\u7684\u6e90\u4ee3\u7801\uff0c\u548c\u4ee5\u4e0b\u7740\u8272\u5668\uff1a \u51e0\u4f55\uff1a \u9876\u70b9 \uff0c \u7247\u6bb5 SSAO\uff1a \u9876\u70b9 \uff0c \u7247\u6bb5 \u6a21\u7cca\uff1a \u9876\u70b9 \uff0c \u7247\u6bb5 \u5149\u7167\uff1a \u9876\u70b9 \uff0c \u7247\u6bb5 \u5c4f\u5e55\u7a7a\u95f4\u73af\u5883\u906e\u853d\u662f\u4e00\u4e2a\u53ef\u9ad8\u5ea6\u81ea\u5b9a\u4e49\u7684\u6548\u679c\uff0c\u5b83\u7684\u6548\u679c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4f9d\u8d56\u4e8e\u6211\u4eec\u6839\u636e\u573a\u666f\u7c7b\u578b\u8c03\u6574\u5b83\u7684\u53c2\u6570\u3002\u5bf9\u6240\u6709\u7c7b\u578b\u7684\u573a\u666f\u5e76\u4e0d\u5b58\u5728\u4ec0\u4e48\u5b8c\u7f8e\u7684\u53c2\u6570\u7ec4\u5408\u65b9\u5f0f\u3002\u4e00\u4e9b\u573a\u666f\u53ea\u5728\u5c0f\u534a\u5f84\u60c5\u51b5\u4e0b\u5de5\u4f5c\uff0c\u53c8\u6709\u4e9b\u573a\u666f\u4f1a\u9700\u8981\u66f4\u5927\u7684\u534a\u5f84\u548c\u66f4\u5927\u7684\u6837\u672c\u6570\u91cf\u624d\u80fd\u770b\u8d77\u6765\u66f4\u771f\u5b9e\u3002\u5f53\u524d\u8fd9\u4e2a\u6f14\u793a\u7528\u4e8664\u4e2a\u6837\u672c\uff0c\u5c5e\u4e8e\u6bd4\u8f83\u591a\u7684\u4e86\uff0c\u4f60\u53ef\u4ee5\u8c03\u8c03\u66f4\u5c0f\u7684\u6838\u5fc3\u5927\u5c0f\u4ece\u800c\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\u3002 \u4e00\u4e9b\u4f60\u53ef\u4ee5\u8c03\u6574(\u6bd4\u5982\u8bf4\u901a\u8fc7uniform)\u7684\u53c2\u6570\uff1a\u6838\u5fc3\u5927\u5c0f\uff0c\u534a\u5f84\u548c/\u6216\u566a\u58f0\u6838\u5fc3\u7684\u5927\u5c0f\u3002\u4f60\u4e5f\u53ef\u4ee5\u63d0\u5347\u6700\u7ec8\u7684\u906e\u853d\u503c\u5230\u4e00\u4e2a\u7528\u6237\u5b9a\u4e49\u7684\u5e42\u4ece\u800c\u589e\u52a0\u5b83\u7684\u5f3a\u5ea6\uff1a occlusion = 1.0 - (occlusion / kernelSize); FragColor = pow(occlusion, power); \u591a\u8bd5\u8bd5\u4e0d\u540c\u7684\u573a\u666f\u548c\u4e0d\u540c\u7684\u53c2\u6570\uff0c\u6765\u6b23\u8d4fSSAO\u7684\u53ef\u5b9a\u5236\u6027\u3002 \u5c3d\u7ba1SSAO\u662f\u4e00\u4e2a\u5f88\u5fae\u5c0f\u7684\u6548\u679c\uff0c\u53ef\u80fd\u751a\u81f3\u4e0d\u662f\u5f88\u5bb9\u6613\u6ce8\u610f\u5230\uff0c\u5b83\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u589e\u52a0\u4e86\u5408\u9002\u5149\u7167\u573a\u666f\u7684\u771f\u5b9e\u6027\uff0c\u5b83\u4e5f\u7edd\u5bf9\u662f\u4e00\u4e2a\u5728\u4f60\u5de5\u5177\u7bb1\u4e2d\u5fc5\u5907\u7684\u6280\u672f\u3002 \u9644\u52a0\u8d44\u6e90 SSAO\u6559\u7a0b \uff1aJohn Chapman\u4f18\u79c0\u7684SSAO\u6559\u7a0b\uff1b\u672c\u6559\u7a0b\u5f88\u5927\u4e00\u90e8\u5206\u4ee3\u7801\u548c\u6280\u5de7\u90fd\u662f\u57fa\u4e8e\u4ed6\u7684\u6587\u7ae0 \u4e86\u89e3\u4f60\u7684SSAO\u6548\u679c \uff1a\u5173\u4e8e\u63d0\u9ad8SSAO\u7279\u5b9a\u6548\u679c\u7684\u4e00\u7bc7\u5f88\u68d2\u7684\u6587\u7ae0 \u6df1\u5ea6\u503c\u91cd\u6784SSAO \uff1aOGLDev\u7684\u4e00\u7bc7\u5728SSAO\u4e4b\u4e0a\u7684\u62d3\u5c55\u6559\u7a0b\uff0c\u5b83\u8ba8\u8bba\u4e86\u901a\u8fc7\u4ec5\u4ec5\u6df1\u5ea6\u503c\u91cd\u6784\u4f4d\u7f6e\u77e2\u91cf\uff0c\u8282\u7701\u4e86\u5b58\u50a8\u5f00\u9500\u5de8\u5927\u7684\u4f4d\u7f6e\u77e2\u91cf\u5230G\u7f13\u51b2\u7684\u8fc7\u7a0b","title":"SSAO"},{"location":"05%20Advanced%20Lighting/09%20SSAO/#ssao","text":"\u539f\u6587 SSAO \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 \u672a\u6821\u5bf9 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u6211\u4eec\u5df2\u7ecf\u5728\u524d\u9762\u7684\u57fa\u7840\u6559\u7a0b\u4e2d\u7b80\u5355\u4ecb\u7ecd\u5230\u4e86\u8fd9\u90e8\u5206\u5185\u5bb9\uff1a\u73af\u5883\u5149\u7167(Ambient Lighting)\u3002\u73af\u5883\u5149\u7167\u662f\u6211\u4eec\u52a0\u5165\u573a\u666f\u603b\u4f53\u5149\u7167\u4e2d\u7684\u4e00\u4e2a\u56fa\u5b9a\u5149\u7167\u5e38\u91cf\uff0c\u5b83\u88ab\u7528\u6765\u6a21\u62df\u5149\u7684 \u6563\u5c04(Scattering) \u3002\u5728\u73b0\u5b9e\u4e2d\uff0c\u5149\u7ebf\u4f1a\u4ee5\u4efb\u610f\u65b9\u5411\u6563\u5c04\uff0c\u5b83\u7684\u5f3a\u5ea6\u662f\u4f1a\u4e00\u76f4\u6539\u53d8\u7684\uff0c\u6240\u4ee5\u95f4\u63a5\u88ab\u7167\u5230\u7684\u90a3\u90e8\u5206\u573a\u666f\u4e5f\u5e94\u8be5\u6709\u53d8\u5316\u7684\u5f3a\u5ea6\uff0c\u800c\u4e0d\u662f\u4e00\u6210\u4e0d\u53d8\u7684\u73af\u5883\u5149\u3002\u5176\u4e2d\u4e00\u79cd\u95f4\u63a5\u5149\u7167\u7684\u6a21\u62df\u53eb\u505a \u73af\u5883\u5149\u906e\u853d(Ambient Occlusion) \uff0c\u5b83\u7684\u539f\u7406\u662f\u901a\u8fc7\u5c06\u8936\u76b1\u3001\u5b54\u6d1e\u548c\u975e\u5e38\u9760\u8fd1\u7684\u5899\u9762\u53d8\u6697\u7684\u65b9\u6cd5\u8fd1\u4f3c\u6a21\u62df\u51fa\u95f4\u63a5\u5149\u7167\u3002\u8fd9\u4e9b\u533a\u57df\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u88ab\u5468\u56f4\u7684\u51e0\u4f55\u4f53\u906e\u853d\u7684\uff0c\u5149\u7ebf\u4f1a\u5f88\u96be\u6d41\u5931\uff0c\u6240\u4ee5\u8fd9\u4e9b\u5730\u65b9\u770b\u8d77\u6765\u4f1a\u66f4\u6697\u4e00\u4e9b\u3002\u7ad9\u8d77\u6765\u770b\u4e00\u770b\u4f60\u623f\u95f4\u7684\u62d0\u89d2\u6216\u8005\u662f\u8936\u76b1\uff0c\u662f\u4e0d\u662f\u8fd9\u4e9b\u5730\u65b9\u4f1a\u770b\u8d77\u6765\u6709\u4e00\u70b9\u6697\uff1f \u4e0b\u9762\u8fd9\u5e45\u56fe\u5c55\u793a\u4e86\u5728\u4f7f\u7528\u548c\u4e0d\u4f7f\u7528SSAO\u65f6\u573a\u666f\u7684\u4e0d\u540c\u3002\u7279\u522b\u6ce8\u610f\u5bf9\u6bd4\u8936\u76b1\u90e8\u5206\uff0c\u4f60\u4f1a\u53d1\u73b0(\u73af\u5883)\u5149\u88ab\u906e\u853d\u4e86\u8bb8\u591a\uff1a \u5c3d\u7ba1\u8fd9\u4e0d\u662f\u4e00\u4e2a\u975e\u5e38\u660e\u663e\u7684\u6548\u679c\uff0c\u542f\u7528SSAO\u7684\u56fe\u50cf\u786e\u5b9e\u7ed9\u6211\u4eec\u66f4\u771f\u5b9e\u7684\u611f\u89c9\uff0c\u8fd9\u4e9b\u5c0f\u7684\u906e\u853d\u7ec6\u8282\u7ed9\u6574\u4e2a\u573a\u666f\u5e26\u6765\u4e86\u66f4\u5f3a\u7684\u6df1\u5ea6\u611f\u3002 \u73af\u5883\u5149\u906e\u853d\u8fd9\u4e00\u6280\u672f\u4f1a\u5e26\u6765\u5f88\u5927\u7684\u6027\u80fd\u5f00\u9500\uff0c\u56e0\u4e3a\u5b83\u8fd8\u9700\u8981\u8003\u8651\u5468\u56f4\u7684\u51e0\u4f55\u4f53\u3002\u6211\u4eec\u53ef\u4ee5\u5bf9\u7a7a\u95f4\u4e2d\u6bcf\u4e00\u70b9\u53d1\u5c04\u5927\u91cf\u5149\u7ebf\u6765\u786e\u5b9a\u5176\u906e\u853d\u91cf\uff0c\u4f46\u662f\u8fd9\u5728\u5b9e\u65f6\u8fd0\u7b97\u4e2d\u4f1a\u5f88\u5feb\u53d8\u6210\u5927\u95ee\u9898\u3002\u57282007\u5e74\uff0cCrytek\u516c\u53f8\u53d1\u5e03\u4e86\u4e00\u6b3e\u53eb\u505a \u5c4f\u5e55\u7a7a\u95f4\u73af\u5883\u5149\u906e\u853d(Screen-Space Ambient Occlusion, SSAO) \u7684\u6280\u672f\uff0c\u5e76\u7528\u5728\u4e86\u4ed6\u4eec\u7684\u770b\u5bb6\u4f5c\u5b64\u5c9b\u5371\u673a\u4e0a\u3002\u8fd9\u4e00\u6280\u672f\u4f7f\u7528\u4e86\u5c4f\u5e55\u7a7a\u95f4\u573a\u666f\u7684\u6df1\u5ea6\u800c\u4e0d\u662f\u771f\u5b9e\u7684\u51e0\u4f55\u4f53\u6570\u636e\u6765\u786e\u5b9a\u906e\u853d\u91cf\u3002\u8fd9\u4e00\u505a\u6cd5\u76f8\u5bf9\u4e8e\u771f\u6b63\u7684\u73af\u5883\u5149\u906e\u853d\u4e0d\u4f46\u901f\u5ea6\u5feb\uff0c\u800c\u4e14\u8fd8\u80fd\u83b7\u5f97\u5f88\u597d\u7684\u6548\u679c\uff0c\u4f7f\u5f97\u5b83\u6210\u4e3a\u8fd1\u4f3c\u5b9e\u65f6\u73af\u5883\u5149\u906e\u853d\u7684\u6807\u51c6\u3002 SSAO\u80cc\u540e\u7684\u539f\u7406\u5f88\u7b80\u5355\uff1a\u5bf9\u4e8e\u94fa\u5c4f\u56db\u8fb9\u5f62(Screen-filled Quad)\u4e0a\u7684\u6bcf\u4e00\u4e2a\u7247\u6bb5\uff0c\u6211\u4eec\u90fd\u4f1a\u6839\u636e\u5468\u8fb9\u6df1\u5ea6\u503c\u8ba1\u7b97\u4e00\u4e2a \u906e\u853d\u56e0\u5b50(Occlusion Factor) \u3002\u8fd9\u4e2a\u906e\u853d\u56e0\u5b50\u4e4b\u540e\u4f1a\u88ab\u7528\u6765\u51cf\u5c11\u6216\u8005\u62b5\u6d88\u7247\u6bb5\u7684\u73af\u5883\u5149\u7167\u5206\u91cf\u3002\u906e\u853d\u56e0\u5b50\u662f\u901a\u8fc7\u91c7\u96c6\u7247\u6bb5\u5468\u56f4\u7403\u578b\u6838\u5fc3(Kernel)\u7684\u591a\u4e2a\u6df1\u5ea6\u6837\u672c\uff0c\u5e76\u548c\u5f53\u524d\u7247\u6bb5\u6df1\u5ea6\u503c\u5bf9\u6bd4\u800c\u5f97\u5230\u7684\u3002\u9ad8\u4e8e\u7247\u6bb5\u6df1\u5ea6\u503c\u6837\u672c\u7684\u4e2a\u6570\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u906e\u853d\u56e0\u5b50\u3002 \u4e0a\u56fe\u4e2d\u5728\u51e0\u4f55\u4f53\u5185\u7070\u8272\u7684\u6df1\u5ea6\u6837\u672c\u90fd\u662f\u9ad8\u4e8e\u7247\u6bb5\u6df1\u5ea6\u503c\u7684\uff0c\u4ed6\u4eec\u4f1a\u589e\u52a0\u906e\u853d\u56e0\u5b50\uff1b\u51e0\u4f55\u4f53\u5185\u6837\u672c\u4e2a\u6570\u8d8a\u591a\uff0c\u7247\u6bb5\u83b7\u5f97\u7684\u73af\u5883\u5149\u7167\u4e5f\u5c31\u8d8a\u5c11\u3002 \u5f88\u660e\u663e\uff0c\u6e32\u67d3\u6548\u679c\u7684\u8d28\u91cf\u548c\u7cbe\u5ea6\u4e0e\u6211\u4eec\u91c7\u6837\u7684\u6837\u672c\u6570\u91cf\u6709\u76f4\u63a5\u5173\u7cfb\u3002\u5982\u679c\u6837\u672c\u6570\u91cf\u592a\u4f4e\uff0c\u6e32\u67d3\u7684\u7cbe\u5ea6\u4f1a\u6025\u5267\u51cf\u5c11\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u79cd\u53eb\u505a \u6ce2\u7eb9(Banding) \u7684\u6548\u679c\uff1b\u5982\u679c\u5b83\u592a\u9ad8\u4e86\uff0c\u53cd\u800c\u4f1a\u5f71\u54cd\u6027\u80fd\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5f15\u5165\u968f\u673a\u6027\u5230\u91c7\u6837\u6838\u5fc3(Sample Kernel)\u7684\u91c7\u6837\u4e2d\u4ece\u800c\u51cf\u5c11\u6837\u672c\u7684\u6570\u76ee\u3002\u901a\u8fc7\u968f\u673a\u65cb\u8f6c\u91c7\u6837\u6838\u5fc3\uff0c\u6211\u4eec\u80fd\u5728\u6709\u9650\u6837\u672c\u6570\u91cf\u4e2d\u5f97\u5230\u9ad8\u8d28\u91cf\u7684\u7ed3\u679c\u3002\u7136\u800c\u8fd9\u4ecd\u7136\u4f1a\u6709\u4e00\u5b9a\u7684\u9ebb\u70e6\uff0c\u56e0\u4e3a\u968f\u673a\u6027\u5f15\u5165\u4e86\u4e00\u4e2a\u5f88\u660e\u663e\u7684\u566a\u58f0\u56fe\u6848\uff0c\u6211\u4eec\u5c06\u9700\u8981\u901a\u8fc7\u6a21\u7cca\u7ed3\u679c\u6765\u4fee\u590d\u8fd9\u4e00\u95ee\u9898\u3002\u4e0b\u9762\u8fd9\u5e45\u56fe\u7247( John Chapman \u7684\u4f5b\u50cf)\u5c55\u793a\u4e86\u6ce2\u7eb9\u6548\u679c\u8fd8\u6709\u968f\u673a\u6027\u9020\u6210\u7684\u6548\u679c\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u5c3d\u7ba1\u6211\u4eec\u5728\u4f4e\u6837\u672c\u6570\u7684\u60c5\u51b5\u4e0b\u5f97\u5230\u4e86\u5f88\u660e\u663e\u7684\u6ce2\u7eb9\u6548\u679c\uff0c\u5f15\u5165\u968f\u673a\u6027\u4e4b\u540e\u8fd9\u4e9b\u6ce2\u7eb9\u6548\u679c\u5c31\u5b8c\u5168\u6d88\u5931\u4e86\u3002 Crytek\u516c\u53f8\u5f00\u53d1\u7684SSAO\u6280\u672f\u4f1a\u4ea7\u751f\u4e00\u79cd\u7279\u6b8a\u7684\u89c6\u89c9\u98ce\u683c\u3002\u56e0\u4e3a\u4f7f\u7528\u7684\u91c7\u6837\u6838\u5fc3\u662f\u4e00\u4e2a\u7403\u4f53\uff0c\u5b83\u5bfc\u81f4\u5e73\u6574\u7684\u5899\u9762\u4e5f\u4f1a\u663e\u5f97\u7070\u8499\u8499\u7684\uff0c\u56e0\u4e3a\u6838\u5fc3\u4e2d\u4e00\u534a\u7684\u6837\u672c\u90fd\u4f1a\u5728\u5899\u8fd9\u4e2a\u51e0\u4f55\u4f53\u4e0a\u3002\u4e0b\u9762\u8fd9\u5e45\u56fe\u5c55\u793a\u4e86\u5b64\u5c9b\u5371\u673a\u7684SSAO\uff0c\u5b83\u6e05\u6670\u5730\u5c55\u793a\u4e86\u8fd9\u79cd\u7070\u8499\u8499\u7684\u611f\u89c9\uff1a \u7531\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6211\u4eec\u5c06\u4e0d\u4f1a\u4f7f\u7528\u7403\u4f53\u7684\u91c7\u6837\u6838\u5fc3\uff0c\u800c\u4f7f\u7528\u4e00\u4e2a\u6cbf\u7740\u8868\u9762\u6cd5\u5411\u91cf\u7684\u534a\u7403\u4f53\u91c7\u6837\u6838\u5fc3\u3002 \u901a\u8fc7\u5728 \u6cd5\u5411\u534a\u7403\u4f53(Normal-oriented Hemisphere) \u5468\u56f4\u91c7\u6837\uff0c\u6211\u4eec\u5c06\u4e0d\u4f1a\u8003\u8651\u5230\u7247\u6bb5\u5e95\u90e8\u7684\u51e0\u4f55\u4f53.\u5b83\u6d88\u9664\u4e86\u73af\u5883\u5149\u906e\u853d\u7070\u8499\u8499\u7684\u611f\u89c9\uff0c\u4ece\u800c\u4ea7\u751f\u66f4\u771f\u5b9e\u7684\u7ed3\u679c\u3002\u8fd9\u4e2aSSAO\u6559\u7a0b\u5c06\u4f1a\u57fa\u4e8e\u6cd5\u5411\u534a\u7403\u6cd5\u548cJohn Chapman\u51fa\u8272\u7684 SSAO\u6559\u7a0b \u3002","title":"SSAO"},{"location":"05%20Advanced%20Lighting/09%20SSAO/#_1","text":"SSAO\u9700\u8981\u83b7\u53d6\u51e0\u4f55\u4f53\u7684\u4fe1\u606f\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u65b9\u5f0f\u6765\u786e\u5b9a\u4e00\u4e2a\u7247\u6bb5\u7684\u906e\u853d\u56e0\u5b50\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7247\u6bb5\uff0c\u6211\u4eec\u5c06\u9700\u8981\u8fd9\u4e9b\u6570\u636e\uff1a \u9010\u7247\u6bb5 \u4f4d\u7f6e \u5411\u91cf \u9010\u7247\u6bb5\u7684 \u6cd5\u7ebf \u5411\u91cf \u9010\u7247\u6bb5\u7684 \u53cd\u5c04\u989c\u8272 \u91c7\u6837\u6838\u5fc3 \u7528\u6765\u65cb\u8f6c\u91c7\u6837\u6838\u5fc3\u7684\u968f\u673a\u65cb\u8f6c\u77e2\u91cf \u901a\u8fc7\u4f7f\u7528\u4e00\u4e2a\u9010\u7247\u6bb5\u89c2\u5bdf\u7a7a\u95f4\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e00\u4e2a\u91c7\u6837\u534a\u7403\u6838\u5fc3\u5bf9\u51c6\u7247\u6bb5\u7684\u89c2\u5bdf\u7a7a\u95f4\u8868\u9762\u6cd5\u7ebf\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6838\u5fc3\u6837\u672c\u6211\u4eec\u4f1a\u91c7\u6837\u7ebf\u6027\u6df1\u5ea6\u7eb9\u7406\u6765\u6bd4\u8f83\u7ed3\u679c\u3002\u91c7\u6837\u6838\u5fc3\u4f1a\u6839\u636e\u65cb\u8f6c\u77e2\u91cf\u7a0d\u5fae\u504f\u8f6c\u4e00\u70b9\uff1b\u6211\u4eec\u6240\u83b7\u5f97\u7684\u906e\u853d\u56e0\u5b50\u5c06\u4f1a\u4e4b\u540e\u7528\u6765\u9650\u5236\u6700\u7ec8\u7684\u73af\u5883\u5149\u7167\u5206\u91cf\u3002 \u7531\u4e8eSSAO\u662f\u4e00\u79cd\u5c4f\u5e55\u7a7a\u95f4\u6280\u5de7\uff0c\u6211\u4eec\u5bf9\u94fa\u5c4f2D\u56db\u8fb9\u5f62\u4e0a\u6bcf\u4e00\u4e2a\u7247\u6bb5\u8ba1\u7b97\u8fd9\u4e00\u6548\u679c\uff1b\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u6ca1\u6709\u573a\u666f\u4e2d\u51e0\u4f55\u4f53\u7684\u4fe1\u606f\u3002\u6211\u4eec\u80fd\u505a\u7684\u53ea\u662f\u6e32\u67d3\u51e0\u4f55\u4f53\u6570\u636e\u5230\u5c4f\u5e55\u7a7a\u95f4\u7eb9\u7406\u4e2d\uff0c\u6211\u4eec\u4e4b\u540e\u518d\u4f1a\u5c06\u6b64\u6570\u636e\u53d1\u9001\u5230SSAO\u7740\u8272\u5668\u4e2d\uff0c\u4e4b\u540e\u6211\u4eec\u5c31\u80fd\u8bbf\u95ee\u5230\u8fd9\u4e9b\u51e0\u4f55\u4f53\u6570\u636e\u4e86\u3002\u5982\u679c\u4f60\u770b\u4e86\u524d\u9762\u4e00\u7bc7\u6559\u7a0b\uff0c\u4f60\u4f1a\u53d1\u73b0\u8fd9\u548c\u5ef6\u8fdf\u6e32\u67d3\u5f88\u76f8\u4f3c\u3002\u8fd9\u4e5f\u5c31\u662f\u8bf4SSAO\u548c\u5ef6\u8fdf\u6e32\u67d3\u80fd\u5b8c\u7f8e\u5730\u517c\u5bb9\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u5b58\u4f4d\u7f6e\u548c\u6cd5\u7ebf\u5411\u91cf\u5230G\u7f13\u51b2\u4e2d\u4e86\u3002 Important \u5728\u8fd9\u4e2a\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u5728\u4e00\u4e2a\u7b80\u5316\u7248\u672c\u7684\u5ef6\u8fdf\u6e32\u67d3\u5668( \u5ef6\u8fdf\u7740\u8272\u6cd5 \u6559\u7a0b\u4e2d)\u7684\u57fa\u7840\u4e0a\u5b9e\u73b0SSAO\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u5ef6\u8fdf\u7740\u8272\u6cd5\uff0c\u8bf7\u5148\u8bfb\u5b8c\u90a3\u7bc7\u6559\u7a0b\u3002 \u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u9010\u7247\u6bb5\u4f4d\u7f6e\u548c\u6cd5\u7ebf\u6570\u636e(G\u7f13\u51b2\u4e2d)\uff0c\u6211\u4eec\u53ea\u9700\u8981\u66f4\u65b0\u4e00\u4e0b\u51e0\u4f55\u7740\u8272\u5668\uff0c\u8ba9\u5b83\u5305\u542b\u7247\u6bb5\u7684\u7ebf\u6027\u6df1\u5ea6\u5c31\u884c\u4e86\u3002\u56de\u5fc6\u6211\u4eec\u5728\u6df1\u5ea6\u6d4b\u8bd5\u90a3\u4e00\u8282\u5b66\u8fc7\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece gl_FragCoord.z \u4e2d\u63d0\u53d6\u7ebf\u6027\u6df1\u5ea6\uff1a #version 330 core layout (location = 0) out vec4 gPositionDepth; layout (location = 1) out vec3 gNormal; layout (location = 2) out vec4 gAlbedoSpec; in vec2 TexCoords; in vec3 FragPos; in vec3 Normal; const float NEAR = 0.1; // \u6295\u5f71\u77e9\u9635\u7684\u8fd1\u5e73\u9762 const float FAR = 50.0f; // \u6295\u5f71\u77e9\u9635\u7684\u8fdc\u5e73\u9762 float LinearizeDepth(float depth) { float z = depth * 2.0 - 1.0; // \u56de\u5230NDC return (2.0 * NEAR * FAR) / (FAR + NEAR - z * (FAR - NEAR)); } void main() { // \u50a8\u5b58\u7247\u6bb5\u7684\u4f4d\u7f6e\u77e2\u91cf\u5230\u7b2c\u4e00\u4e2aG\u7f13\u51b2\u7eb9\u7406 gPositionDepth.xyz = FragPos; // \u50a8\u5b58\u7ebf\u6027\u6df1\u5ea6\u5230gPositionDepth\u7684alpha\u5206\u91cf gPositionDepth.a = LinearizeDepth(gl_FragCoord.z); // \u50a8\u5b58\u6cd5\u7ebf\u4fe1\u606f\u5230G\u7f13\u51b2 gNormal = normalize(Normal); // \u548c\u6f2b\u53cd\u5c04\u989c\u8272 gAlbedoSpec.rgb = vec3(0.95); } \u63d0\u53d6\u51fa\u6765\u7684\u7ebf\u6027\u6df1\u5ea6\u662f\u5728\u89c2\u5bdf\u7a7a\u95f4\u4e2d\u7684\uff0c\u6240\u4ee5\u4e4b\u540e\u7684\u8fd0\u7b97\u4e5f\u662f\u5728\u89c2\u5bdf\u7a7a\u95f4\u4e2d\u3002\u786e\u4fddG\u7f13\u51b2\u4e2d\u7684\u4f4d\u7f6e\u548c\u6cd5\u7ebf\u90fd\u5728\u89c2\u5bdf\u7a7a\u95f4\u4e2d(\u4e58\u4e0a\u89c2\u5bdf\u77e9\u9635\u4e5f\u4e00\u6837)\u3002\u89c2\u5bdf\u7a7a\u95f4\u7ebf\u6027\u6df1\u5ea6\u503c\u4e4b\u540e\u4f1a\u88ab\u4fdd\u5b58\u5728 gPositionDepth \u989c\u8272\u7f13\u51b2\u7684alpha\u5206\u91cf\u4e2d\uff0c\u7701\u5f97\u6211\u4eec\u518d\u58f0\u660e\u4e00\u4e2a\u65b0\u7684\u989c\u8272\u7f13\u51b2\u7eb9\u7406\u3002 Important \u901a\u8fc7\u4e00\u4e9b\u5c0f\u6280\u5de7\u6765\u901a\u8fc7\u6df1\u5ea6\u503c\u91cd\u6784\u5b9e\u9645\u4f4d\u7f6e\u503c\u662f\u53ef\u80fd\u7684\uff0cMatt Pettineo\u5728\u4ed6\u7684 \u535a\u5ba2 \u91cc\u63d0\u5230\u4e86\u8fd9\u4e00\u6280\u5de7\u3002\u8fd9\u4e00\u6280\u5de7\u9700\u8981\u5728\u7740\u8272\u5668\u91cc\u8fdb\u884c\u4e00\u4e9b\u8ba1\u7b97\uff0c\u4f46\u662f\u7701\u4e86\u6211\u4eec\u5728G\u7f13\u51b2\u4e2d\u5b58\u50a8\u4f4d\u7f6e\u6570\u636e\uff0c\u4ece\u800c\u7701\u4e86\u5f88\u591a\u5185\u5b58\u3002\u4e3a\u4e86\u793a\u4f8b\u7684\u7b80\u5355\uff0c\u6211\u4eec\u5c06\u4e0d\u4f1a\u4f7f\u7528\u8fd9\u4e9b\u4f18\u5316\u6280\u5de7\uff0c\u4f60\u53ef\u4ee5\u81ea\u884c\u63a2\u7a76\u3002 gPositionDepth \u989c\u8272\u7f13\u51b2\u7eb9\u7406\u88ab\u8bbe\u7f6e\u6210\u4e86\u4e0b\u9762\u8fd9\u6837\uff1a glGenTextures(1, &gPositionDepth); glBindTexture(GL_TEXTURE_2D, gPositionDepth); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA16F, SCR_WIDTH, SCR_HEIGHT, 0, GL_RGBA, GL_FLOAT, NULL); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); \u8fd9\u7ed9\u6211\u4eec\u4e86\u4e00\u4e2a\u7ebf\u6027\u6df1\u5ea6\u7eb9\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u6765\u5bf9\u6bcf\u4e00\u4e2a\u6838\u5fc3\u6837\u672c\u83b7\u53d6\u6df1\u5ea6\u503c\u3002\u6ce8\u610f\u6211\u4eec\u628a\u7ebf\u6027\u6df1\u5ea6\u503c\u5b58\u50a8\u4e3a\u4e86\u6d6e\u70b9\u6570\u636e\uff1b\u8fd9\u6837\u4ece0.1\u523050.0\u8303\u56f4\u6df1\u5ea6\u503c\u90fd\u4e0d\u4f1a\u88ab\u9650\u5236\u5728[0.0, 1.0]\u4e4b\u95f4\u4e86\u3002\u5982\u679c\u4f60\u4e0d\u7528\u6d6e\u70b9\u503c\u5b58\u50a8\u8fd9\u4e9b\u6df1\u5ea6\u6570\u636e\uff0c\u786e\u4fdd\u4f60\u9996\u5148\u5c06\u503c\u9664\u4ee5 FAR \u6765\u6807\u51c6\u5316\u5b83\u4eec\uff0c\u518d\u5b58\u50a8\u5230 gPositionDepth \u7eb9\u7406\u4e2d\uff0c\u5e76\u5728\u4ee5\u540e\u7684\u7740\u8272\u5668\u4e2d\u7528\u76f8\u4f3c\u7684\u65b9\u6cd5\u91cd\u5efa\u5b83\u4eec\u3002\u540c\u6837\u9700\u8981\u6ce8\u610f\u7684\u662f GL_CLAMP_TO_EDGE \u7684\u7eb9\u7406\u5c01\u88c5\u65b9\u6cd5\u3002\u8fd9\u4fdd\u8bc1\u4e86\u6211\u4eec\u4e0d\u4f1a\u4e0d\u5c0f\u5fc3\u91c7\u6837\u5230\u5728\u5c4f\u5e55\u7a7a\u95f4\u4e2d\u7eb9\u7406\u9ed8\u8ba4\u5750\u6807\u533a\u57df\u4e4b\u5916\u7684\u6df1\u5ea6\u503c\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u771f\u6b63\u7684\u534a\u7403\u91c7\u6837\u6838\u5fc3\u548c\u4e00\u4e9b\u65b9\u6cd5\u6765\u968f\u673a\u65cb\u8f6c\u5b83\u3002","title":"\u6837\u672c\u7f13\u51b2"},{"location":"05%20Advanced%20Lighting/09%20SSAO/#_2","text":"\u6211\u4eec\u9700\u8981\u6cbf\u7740\u8868\u9762\u6cd5\u7ebf\u65b9\u5411\u751f\u6210\u5927\u91cf\u7684\u6837\u672c\u3002\u5c31\u50cf\u6211\u4eec\u5728\u8fd9\u4e2a\u6559\u7a0b\u7684\u5f00\u59cb\u4ecb\u7ecd\u7684\u90a3\u6837\uff0c\u6211\u4eec\u60f3\u8981\u751f\u6210\u5f62\u6210\u534a\u7403\u5f62\u7684\u6837\u672c\u3002\u7531\u4e8e\u5bf9\u6bcf\u4e2a\u8868\u9762\u6cd5\u7ebf\u65b9\u5411\u751f\u6210\u91c7\u6837\u6838\u5fc3\u975e\u5e38\u56f0\u96be\uff0c\u4e5f\u4e0d\u5408\u5b9e\u9645\uff0c\u6211\u4eec\u5c06\u5728 \u5207\u7ebf\u7a7a\u95f4 (Tangent Space)\u5185\u751f\u6210\u91c7\u6837\u6838\u5fc3\uff0c\u6cd5\u5411\u91cf\u5c06\u6307\u5411\u6b63z\u65b9\u5411\u3002 \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5355\u4f4d\u534a\u7403\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u62e5\u6709\u6700\u592764\u6837\u672c\u503c\u7684\u91c7\u6837\u6838\u5fc3\uff1a std::uniform_real_distribution<GLfloat> randomFloats(0.0, 1.0); // \u968f\u673a\u6d6e\u70b9\u6570\uff0c\u8303\u56f40.0 - 1.0 std::default_random_engine generator; std::vector<glm::vec3> ssaoKernel; for (GLuint i = 0; i < 64; ++i) { glm::vec3 sample( randomFloats(generator) * 2.0 - 1.0, randomFloats(generator) * 2.0 - 1.0, randomFloats(generator) ); sample = glm::normalize(sample); sample *= randomFloats(generator); GLfloat scale = GLfloat(i) / 64.0; ssaoKernel.push_back(sample); } \u6211\u4eec\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\u4ee5-1.0\u52301.0\u4e3a\u8303\u56f4\u53d8\u6362x\u548cy\u65b9\u5411\uff0c\u5e76\u4ee50.0\u548c1.0\u4e3a\u8303\u56f4\u53d8\u6362\u6837\u672c\u7684z\u65b9\u5411(\u5982\u679c\u4ee5-1.0\u52301.0\u4e3a\u8303\u56f4\uff0c\u53d6\u6837\u6838\u5fc3\u5c31\u53d8\u6210\u7403\u578b\u4e86)\u3002\u7531\u4e8e\u91c7\u6837\u6838\u5fc3\u5c06\u4f1a\u6cbf\u7740\u8868\u9762\u6cd5\u7ebf\u5bf9\u9f50\uff0c\u6240\u5f97\u7684\u6837\u672c\u77e2\u91cf\u5c06\u4f1a\u5728\u534a\u7403\u91cc\u3002 \u76ee\u524d\uff0c\u6240\u6709\u7684\u6837\u672c\u90fd\u662f\u5e73\u5747\u5206\u5e03\u5728\u91c7\u6837\u6838\u5fc3\u91cc\u7684\uff0c\u4f46\u662f\u6211\u4eec\u66f4\u613f\u610f\u5c06\u66f4\u591a\u7684\u6ce8\u610f\u653e\u5728\u9760\u8fd1\u771f\u6b63\u7247\u6bb5\u7684\u906e\u853d\u4e0a\uff0c\u4e5f\u5c31\u662f\u5c06\u6838\u5fc3\u6837\u672c\u9760\u8fd1\u539f\u70b9\u5206\u5e03\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u52a0\u901f\u63d2\u503c\u51fd\u6570\u5b9e\u73b0\u5b83\uff1a ...[\u63a5\u4e0a\u51fd\u6570] scale = lerp(0.1f, 1.0f, scale * scale); sample *= scale; ssaoKernel.push_back(sample); } lerp \u88ab\u5b9a\u4e49\u4e3a\uff1a GLfloat lerp(GLfloat a, GLfloat b, GLfloat f) { return a + f * (b - a); } \u8fd9\u5c31\u7ed9\u4e86\u6211\u4eec\u4e00\u4e2a\u5927\u90e8\u5206\u6837\u672c\u9760\u8fd1\u539f\u70b9\u7684\u6838\u5fc3\u5206\u5e03\u3002 \u6bcf\u4e2a\u6838\u5fc3\u6837\u672c\u5c06\u4f1a\u88ab\u7528\u6765\u504f\u79fb\u89c2\u5bdf\u7a7a\u95f4\u7247\u6bb5\u4f4d\u7f6e\u4ece\u800c\u91c7\u6837\u5468\u56f4\u7684\u51e0\u4f55\u4f53\u3002\u6211\u4eec\u5728\u6559\u7a0b\u5f00\u59cb\u7684\u65f6\u5019\u770b\u5230\uff0c\u5982\u679c\u6ca1\u6709\u53d8\u5316\u91c7\u6837\u6838\u5fc3\uff0c\u6211\u4eec\u5c06\u9700\u8981\u5927\u91cf\u7684\u6837\u672c\u6765\u83b7\u5f97\u771f\u5b9e\u7684\u7ed3\u679c\u3002\u901a\u8fc7\u5f15\u5165\u4e00\u4e2a\u968f\u673a\u7684\u8f6c\u52a8\u5230\u91c7\u6837\u6838\u5fc3\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5927\u7a0b\u5ea6\u4e0a\u51cf\u5c11\u8fd9\u4e00\u6570\u91cf\u3002","title":"\u6cd5\u5411\u534a\u7403"},{"location":"05%20Advanced%20Lighting/09%20SSAO/#_3","text":"\u901a\u8fc7\u5f15\u5165\u4e00\u4e9b\u968f\u673a\u6027\u5230\u91c7\u6837\u6838\u5fc3\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u83b7\u5f97\u4e0d\u9519\u7ed3\u679c\u6240\u9700\u7684\u6837\u672c\u6570\u91cf\u3002\u6211\u4eec\u53ef\u4ee5\u5bf9\u573a\u666f\u4e2d\u6bcf\u4e00\u4e2a\u7247\u6bb5\u521b\u5efa\u4e00\u4e2a\u968f\u673a\u65cb\u8f6c\u5411\u91cf\uff0c\u4f46\u8fd9\u4f1a\u5f88\u5feb\u5c06\u5185\u5b58\u8017\u5c3d\u3002\u6240\u4ee5\uff0c\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u521b\u5efa\u4e00\u4e2a\u5c0f\u7684\u968f\u673a\u65cb\u8f6c\u5411\u91cf\u7eb9\u7406\u5e73\u94fa\u5728\u5c4f\u5e55\u4e0a\u3002 \u6211\u4eec\u521b\u5efa\u4e00\u4e2a4x4\u671d\u5411\u5207\u7ebf\u7a7a\u95f4\u5e73\u9762\u6cd5\u7ebf\u7684\u968f\u673a\u65cb\u8f6c\u5411\u91cf\u6570\u7ec4\uff1a std::vector<glm::vec3> ssaoNoise; for (GLuint i = 0; i < 16; i++) { glm::vec3 noise( randomFloats(generator) * 2.0 - 1.0, randomFloats(generator) * 2.0 - 1.0, 0.0f); ssaoNoise.push_back(noise); } \u7531\u4e8e\u91c7\u6837\u6838\u5fc3\u662f\u6cbf\u7740\u6b63z\u65b9\u5411\u5728\u5207\u7ebf\u7a7a\u95f4\u5185\u65cb\u8f6c\uff0c\u6211\u4eec\u8bbe\u5b9az\u5206\u91cf\u4e3a0.0\uff0c\u4ece\u800c\u56f4\u7ed5z\u8f74\u65cb\u8f6c\u3002 \u6211\u4eec\u63a5\u4e0b\u6765\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u968f\u673a\u65cb\u8f6c\u5411\u91cf\u76844x4\u7eb9\u7406\uff1b\u8bb0\u5f97\u8bbe\u5b9a\u5b83\u7684\u5c01\u88c5\u65b9\u6cd5\u4e3a GL_REPEAT \uff0c\u4ece\u800c\u4fdd\u8bc1\u5b83\u5408\u9002\u5730\u5e73\u94fa\u5728\u5c4f\u5e55\u4e0a\u3002 GLuint noiseTexture; glGenTextures(1, &noiseTexture); glBindTexture(GL_TEXTURE_2D, noiseTexture); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB16F, 4, 4, 0, GL_RGB, GL_FLOAT, &ssaoNoise[0]); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT); \u73b0\u5728\u6211\u4eec\u6709\u4e86\u6240\u6709\u7684\u76f8\u5173\u8f93\u5165\u6570\u636e\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u5b9e\u73b0SSAO\u3002","title":"\u968f\u673a\u6838\u5fc3\u8f6c\u52a8"},{"location":"05%20Advanced%20Lighting/09%20SSAO/#ssao_1","text":"SSAO\u7740\u8272\u5668\u57282D\u7684\u94fa\u5c4f\u56db\u8fb9\u5f62\u4e0a\u8fd0\u884c\uff0c\u5b83\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u751f\u6210\u7684\u7247\u6bb5\u8ba1\u7b97\u906e\u853d\u503c(\u4e3a\u4e86\u5728\u6700\u7ec8\u7684\u5149\u7167\u7740\u8272\u5668\u4e2d\u4f7f\u7528)\u3002\u7531\u4e8e\u6211\u4eec\u9700\u8981\u5b58\u50a8SSAO\u9636\u6bb5\u7684\u7ed3\u679c\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5728\u521b\u5efa\u4e00\u4e2a\u5e27\u7f13\u51b2\u5bf9\u8c61\uff1a GLuint ssaoFBO; glGenFramebuffers(1, &ssaoFBO); glBindFramebuffer(GL_FRAMEBUFFER, ssaoFBO); GLuint ssaoColorBuffer; glGenTextures(1, &ssaoColorBuffer); glBindTexture(GL_TEXTURE_2D, ssaoColorBuffer); glTexImage2D(GL_TEXTURE_2D, 0, GL_RED, SCR_WIDTH, SCR_HEIGHT, 0, GL_RGB, GL_FLOAT, NULL); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, ssaoColorBuffer, 0); \u7531\u4e8e\u73af\u5883\u906e\u853d\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u7070\u5ea6\u503c\uff0c\u6211\u4eec\u5c06\u53ea\u9700\u8981\u7eb9\u7406\u7684\u7ea2\u8272\u5206\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u989c\u8272\u7f13\u51b2\u7684\u5185\u90e8\u683c\u5f0f\u8bbe\u7f6e\u4e3a GL_RED \u3002 \u6e32\u67d3SSAO\u5b8c\u6574\u7684\u8fc7\u7a0b\u4f1a\u50cf\u8fd9\u6837\uff1a // \u51e0\u4f55\u5904\u7406\u9636\u6bb5: \u6e32\u67d3\u5230G\u7f13\u51b2\u4e2d glBindFramebuffer(GL_FRAMEBUFFER, gBuffer); [...] glBindFramebuffer(GL_FRAMEBUFFER, 0); // \u4f7f\u7528G\u7f13\u51b2\u6e32\u67d3SSAO\u7eb9\u7406 glBindFramebuffer(GL_FRAMEBUFFER, ssaoFBO); glClear(GL_COLOR_BUFFER_BIT); shaderSSAO.Use(); glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_2D, gPositionDepth); glActiveTexture(GL_TEXTURE1); glBindTexture(GL_TEXTURE_2D, gNormal); glActiveTexture(GL_TEXTURE2); glBindTexture(GL_TEXTURE_2D, noiseTexture); SendKernelSamplesToShader(); glUniformMatrix4fv(projLocation, 1, GL_FALSE, glm::value_ptr(projection)); RenderQuad(); glBindFramebuffer(GL_FRAMEBUFFER, 0); // \u5149\u7167\u5904\u7406\u9636\u6bb5: \u6e32\u67d3\u573a\u666f\u5149\u7167 glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); shaderLightingPass.Use(); [...] glActiveTexture(GL_TEXTURE3); glBindTexture(GL_TEXTURE_2D, ssaoColorBuffer); [...] RenderQuad(); shaderSSAO \u8fd9\u4e2a\u7740\u8272\u5668\u5c06\u5bf9\u5e94G\u7f13\u51b2\u7eb9\u7406(\u5305\u62ec\u7ebf\u6027\u6df1\u5ea6)\uff0c\u566a\u58f0\u7eb9\u7406\u548c\u6cd5\u5411\u534a\u7403\u6838\u5fc3\u6837\u672c\u4f5c\u4e3a\u8f93\u5165\u53c2\u6570\uff1a #version 330 core out float FragColor; in vec2 TexCoords; uniform sampler2D gPositionDepth; uniform sampler2D gNormal; uniform sampler2D texNoise; uniform vec3 samples[64]; uniform mat4 projection; // \u5c4f\u5e55\u7684\u5e73\u94fa\u566a\u58f0\u7eb9\u7406\u4f1a\u6839\u636e\u5c4f\u5e55\u5206\u8fa8\u7387\u9664\u4ee5\u566a\u58f0\u5927\u5c0f\u7684\u503c\u6765\u51b3\u5b9a const vec2 noiseScale = vec2(800.0/4.0, 600.0/4.0); // \u5c4f\u5e55 = 800x600 void main() { [...] } \u6ce8\u610f\u6211\u4eec\u8fd9\u91cc\u6709\u4e00\u4e2a noiseScale \u7684\u53d8\u91cf\u3002\u6211\u4eec\u60f3\u8981\u5c06\u566a\u58f0\u7eb9\u7406\u5e73\u94fa(Tile)\u5728\u5c4f\u5e55\u4e0a\uff0c\u4f46\u662f\u7531\u4e8e TexCoords \u7684\u53d6\u503c\u57280.0\u548c1.0\u4e4b\u95f4\uff0c texNoise \u7eb9\u7406\u5c06\u4e0d\u4f1a\u5e73\u94fa\u3002\u6240\u4ee5\u6211\u4eec\u5c06\u901a\u8fc7\u5c4f\u5e55\u5206\u8fa8\u7387\u9664\u4ee5\u566a\u58f0\u7eb9\u7406\u5927\u5c0f\u7684\u65b9\u5f0f\u8ba1\u7b97 TexCoords \u7684\u7f29\u653e\u5927\u5c0f\uff0c\u5e76\u5728\u4e4b\u540e\u63d0\u53d6\u76f8\u5173\u8f93\u5165\u5411\u91cf\u7684\u65f6\u5019\u4f7f\u7528\u3002 vec3 fragPos = texture(gPositionDepth, TexCoords).xyz; vec3 normal = texture(gNormal, TexCoords).rgb; vec3 randomVec = texture(texNoise, TexCoords * noiseScale).xyz; \u7531\u4e8e\u6211\u4eec\u5c06 texNoise \u7684\u5e73\u94fa\u53c2\u6570\u8bbe\u7f6e\u4e3a GL_REPEAT \uff0c\u968f\u673a\u7684\u503c\u5c06\u4f1a\u5728\u5168\u5c4f\u4e0d\u65ad\u91cd\u590d\u3002\u52a0\u4e0a fragPog \u548c normal \u5411\u91cf\uff0c\u6211\u4eec\u5c31\u6709\u8db3\u591f\u7684\u6570\u636e\u6765\u521b\u5efa\u4e00\u4e2aTBN\u77e9\u9635\uff0c\u5c06\u5411\u91cf\u4ece\u5207\u7ebf\u7a7a\u95f4\u53d8\u6362\u5230\u89c2\u5bdf\u7a7a\u95f4\u3002 vec3 tangent = normalize(randomVec - normal * dot(randomVec, normal)); vec3 bitangent = cross(normal, tangent); mat3 TBN = mat3(tangent, bitangent, normal); \u901a\u8fc7\u4f7f\u7528\u4e00\u4e2a\u53eb\u505aGramm-Schmidt\u5904\u7406(Gramm-Schmidt Process)\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u6b63\u4ea4\u57fa(Orthogonal Basis)\uff0c\u6bcf\u4e00\u6b21\u5b83\u90fd\u4f1a\u6839\u636e randomVec \u7684\u503c\u7a0d\u5fae\u503e\u659c\u3002\u6ce8\u610f\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a\u968f\u673a\u5411\u91cf\u6765\u6784\u9020\u5207\u7ebf\u5411\u91cf\uff0c\u6211\u4eec\u6ca1\u5fc5\u8981\u6709\u4e00\u4e2a\u6070\u597d\u6cbf\u7740\u51e0\u4f55\u4f53\u8868\u9762\u7684TBN\u77e9\u9635\uff0c\u4e5f\u5c31\u662f\u4e0d\u9700\u8981\u9010\u9876\u70b9\u5207\u7ebf(\u548c\u53cc\u5207)\u5411\u91cf\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5bf9\u6bcf\u4e2a\u6838\u5fc3\u6837\u672c\u8fdb\u884c\u8fed\u4ee3\uff0c\u5c06\u6837\u672c\u4ece\u5207\u7ebf\u7a7a\u95f4\u53d8\u6362\u5230\u89c2\u5bdf\u7a7a\u95f4\uff0c\u5c06\u5b83\u4eec\u52a0\u5230\u5f53\u524d\u50cf\u7d20\u4f4d\u7f6e\u4e0a\uff0c\u5e76\u5c06\u7247\u6bb5\u4f4d\u7f6e\u6df1\u5ea6\u4e0e\u50a8\u5b58\u5728\u539f\u59cb\u6df1\u5ea6\u7f13\u51b2\u4e2d\u7684\u6837\u672c\u6df1\u5ea6\u8fdb\u884c\u6bd4\u8f83\u3002\u6211\u4eec\u6765\u4e00\u6b65\u6b65\u8ba8\u8bba\u5b83\uff1a float occlusion = 0.0; for(int i = 0; i < kernelSize; ++i) { // \u83b7\u53d6\u6837\u672c\u4f4d\u7f6e vec3 sample = TBN * samples[i]; // \u5207\u7ebf->\u89c2\u5bdf\u7a7a\u95f4 sample = fragPos + sample * radius; [...] } \u8fd9\u91cc\u7684 kernelSize \u548c radius \u53d8\u91cf\u90fd\u53ef\u4ee5\u7528\u6765\u8c03\u6574\u6548\u679c\uff1b\u5728\u8fd9\u91cc\u6211\u4eec\u5206\u522b\u4fdd\u6301\u4ed6\u4eec\u7684\u9ed8\u8ba4\u503c\u4e3a 64 \u548c 1.0 \u3002\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u8fed\u4ee3\u6211\u4eec\u9996\u5148\u53d8\u6362\u5404\u81ea\u6837\u672c\u5230\u89c2\u5bdf\u7a7a\u95f4\u3002\u4e4b\u540e\u6211\u4eec\u4f1a\u52a0\u89c2\u5bdf\u7a7a\u95f4\u6838\u5fc3\u504f\u79fb\u6837\u672c\u5230\u89c2\u5bdf\u7a7a\u95f4\u7247\u6bb5\u4f4d\u7f6e\u4e0a\uff1b\u6700\u540e\u518d\u7528 radius \u4e58\u4e0a\u504f\u79fb\u6837\u672c\u6765\u589e\u52a0(\u6216\u51cf\u5c11)SSAO\u7684\u6709\u6548\u53d6\u6837\u534a\u5f84\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u53d8\u6362 sample \u5230\u5c4f\u5e55\u7a7a\u95f4\uff0c\u4ece\u800c\u6211\u4eec\u53ef\u4ee5\u5c31\u50cf\u6b63\u5728\u76f4\u63a5\u6e32\u67d3\u5b83\u7684\u4f4d\u7f6e\u5230\u5c4f\u5e55\u4e0a\u4e00\u6837\u53d6\u6837 sample \u7684(\u7ebf\u6027)\u6df1\u5ea6\u503c\u3002\u7531\u4e8e\u8fd9\u4e2a\u5411\u91cf\u76ee\u524d\u5728\u89c2\u5bdf\u7a7a\u95f4\uff0c\u6211\u4eec\u5c06\u9996\u5148\u4f7f\u7528 projection \u77e9\u9635uniform\u53d8\u6362\u5b83\u5230\u88c1\u526a\u7a7a\u95f4\u3002 vec4 offset = vec4(sample, 1.0); offset = projection * offset; // \u89c2\u5bdf->\u88c1\u526a\u7a7a\u95f4 offset.xyz /= offset.w; // \u900f\u89c6\u5212\u5206 offset.xyz = offset.xyz * 0.5 + 0.5; // \u53d8\u6362\u52300.0 - 1.0\u7684\u503c\u57df \u5728\u53d8\u91cf\u88ab\u53d8\u6362\u5230\u88c1\u526a\u7a7a\u95f4\u4e4b\u540e\uff0c\u6211\u4eec\u7528 xyz \u5206\u91cf\u9664\u4ee5 w \u5206\u91cf\u8fdb\u884c\u900f\u89c6\u5212\u5206\u3002\u7ed3\u679c\u6240\u5f97\u7684\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u4e4b\u540e\u53d8\u6362\u5230 [0.0, 1.0] \u8303\u56f4\u4ee5\u4fbf\u6211\u4eec\u4f7f\u7528\u5b83\u4eec\u53bb\u53d6\u6837\u6df1\u5ea6\u7eb9\u7406\uff1a float sampleDepth = -texture(gPositionDepth, offset.xy).w; \u6211\u4eec\u4f7f\u7528 offset \u5411\u91cf\u7684 x \u548c y \u5206\u91cf\u91c7\u6837\u7ebf\u6027\u6df1\u5ea6\u7eb9\u7406\u4ece\u800c\u83b7\u53d6\u6837\u672c\u4f4d\u7f6e\u4ece\u89c2\u5bdf\u8005\u89c6\u89d2\u7684\u6df1\u5ea6\u503c(\u7b2c\u4e00\u4e2a\u4e0d\u88ab\u906e\u853d\u7684\u53ef\u89c1\u7247\u6bb5)\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u68c0\u67e5\u6837\u672c\u7684\u5f53\u524d\u6df1\u5ea6\u503c\u662f\u5426\u5927\u4e8e\u5b58\u50a8\u7684\u6df1\u5ea6\u503c\uff0c\u5982\u679c\u662f\u7684\uff0c\u6dfb\u52a0\u5230\u6700\u7ec8\u7684\u8d21\u732e\u56e0\u5b50\u4e0a\u3002 occlusion += (sampleDepth >= sample.z ? 1.0 : 0.0); \u8fd9\u5e76\u6ca1\u6709\u5b8c\u5168\u7ed3\u675f\uff0c\u56e0\u4e3a\u4ecd\u7136\u8fd8\u6709\u4e00\u4e2a\u5c0f\u95ee\u9898\u9700\u8981\u8003\u8651\u3002\u5f53\u68c0\u6d4b\u4e00\u4e2a\u9760\u8fd1\u8868\u9762\u8fb9\u7f18\u7684\u7247\u6bb5\u65f6\uff0c\u5b83\u5c06\u4f1a\u8003\u8651\u6d4b\u8bd5\u8868\u9762\u4e4b\u4e0b\u7684\u8868\u9762\u7684\u6df1\u5ea6\u503c\uff1b\u8fd9\u4e9b\u503c\u5c06\u4f1a(\u4e0d\u6b63\u786e\u5730)\u5f71\u54cd\u906e\u853d\u56e0\u5b50\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5f15\u5165\u4e00\u4e2a\u8303\u56f4\u68c0\u6d4b\u4ece\u800c\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6b63\u5982\u4e0b\u56fe\u6240\u793a( John Chapman \u7684\u4f5b\u50cf)\uff1a \u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u8303\u56f4\u6d4b\u8bd5\u4ece\u800c\u4fdd\u8bc1\u6211\u4eec\u53ea\u5f53\u88ab\u6d4b\u6df1\u5ea6\u503c\u5728\u53d6\u6837\u534a\u5f84\u5185\u65f6\u5f71\u54cd\u906e\u853d\u56e0\u5b50\u3002\u5c06\u4ee3\u7801\u6700\u540e\u4e00\u884c\u6362\u6210\uff1a float rangeCheck = smoothstep(0.0, 1.0, radius / abs(fragPos.z - sampleDepth)); occlusion += (sampleDepth >= sample.z ? 1.0 : 0.0) * rangeCheck; \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e86GLSL\u7684 smoothstep \u51fd\u6570\uff0c\u5b83\u975e\u5e38\u5149\u6ed1\u5730\u5728\u7b2c\u4e00\u548c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8303\u56f4\u5185\u63d2\u503c\u4e86\u7b2c\u4e09\u4e2a\u53c2\u6570\u3002\u5982\u679c\u6df1\u5ea6\u5dee\u56e0\u6b64\u6700\u7ec8\u53d6\u503c\u5728 radius \u4e4b\u95f4\uff0c\u5b83\u4eec\u7684\u503c\u5c06\u4f1a\u5149\u6ed1\u5730\u6839\u636e\u4e0b\u9762\u8fd9\u4e2a\u66f2\u7ebf\u63d2\u503c\u57280.0\u548c1.0\u4e4b\u95f4\uff1a \u5982\u679c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u5728\u6df1\u5ea6\u503c\u5728 radius \u4e4b\u5916\u5c31\u7a81\u7136\u79fb\u9664\u906e\u853d\u8d21\u732e\u7684\u786c\u754c\u9650\u8303\u56f4\u68c0\u6d4b(Hard Cut-off Range Check)\uff0c\u6211\u4eec\u5c06\u4f1a\u5728\u8303\u56f4\u68c0\u6d4b\u5e94\u7528\u7684\u5730\u65b9\u770b\u89c1\u4e00\u4e2a\u660e\u663e\u7684(\u5f88\u96be\u770b\u7684)\u8fb9\u7f18\u3002 \u6700\u540e\u4e00\u6b65\uff0c\u6211\u4eec\u9700\u8981\u5c06\u906e\u853d\u8d21\u732e\u6839\u636e\u6838\u5fc3\u7684\u5927\u5c0f\u6807\u51c6\u5316\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002\u6ce8\u610f\u6211\u4eec\u75281.0\u51cf\u53bb\u4e86\u906e\u853d\u56e0\u5b50\uff0c\u4ee5\u4fbf\u76f4\u63a5\u4f7f\u7528\u906e\u853d\u56e0\u5b50\u53bb\u7f29\u653e\u73af\u5883\u5149\u7167\u5206\u91cf\u3002 } occlusion = 1.0 - (occlusion / kernelSize); FragColor = occlusion; \u4e0b\u9762\u8fd9\u5e45\u56fe\u5c55\u793a\u4e86\u6211\u4eec\u6700\u559c\u6b22\u7684\u7eb3\u7c73\u88c5\u6a21\u578b\u6b63\u5728\u6253\u76f9\u7684\u573a\u666f\uff0c\u73af\u5883\u906e\u853d\u7740\u8272\u5668\u4ea7\u751f\u4e86\u4ee5\u4e0b\u7684\u7eb9\u7406\uff1a \u53ef\u89c1\uff0c\u73af\u5883\u906e\u853d\u4ea7\u751f\u4e86\u975e\u5e38\u5f3a\u70c8\u7684\u6df1\u5ea6\u611f\u3002\u4ec5\u4ec5\u901a\u8fc7\u73af\u5883\u906e\u853d\u7eb9\u7406\u6211\u4eec\u5c31\u5df2\u7ecf\u80fd\u6e05\u6670\u5730\u770b\u89c1\u6a21\u578b\u4e00\u5b9a\u8eba\u5728\u5730\u677f\u4e0a\u800c\u4e0d\u662f\u6d6e\u5728\u7a7a\u4e2d\u3002 \u73b0\u5728\u7684\u6548\u679c\u4ecd\u7136\u770b\u8d77\u6765\u4e0d\u662f\u5f88\u5b8c\u7f8e\uff0c\u7531\u4e8e\u91cd\u590d\u7684\u566a\u58f0\u7eb9\u7406\u518d\u56fe\u4e2d\u6e05\u6670\u53ef\u89c1\u3002\u4e3a\u4e86\u521b\u5efa\u4e00\u4e2a\u5149\u6ed1\u7684\u73af\u5883\u906e\u853d\u7ed3\u679c\uff0c\u6211\u4eec\u9700\u8981\u6a21\u7cca\u73af\u5883\u906e\u853d\u7eb9\u7406\u3002","title":"SSAO\u7740\u8272\u5668"},{"location":"05%20Advanced%20Lighting/09%20SSAO/#_4","text":"\u5728SSAO\u9636\u6bb5\u548c\u5149\u7167\u9636\u6bb5\u4e4b\u95f4\uff0c\u6211\u4eec\u60f3\u8981\u8fdb\u884c\u6a21\u7ccaSSAO\u7eb9\u7406\u7684\u5904\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u53c8\u521b\u5efa\u4e86\u4e00\u4e2a\u5e27\u7f13\u51b2\u5bf9\u8c61\u6765\u50a8\u5b58\u6a21\u7cca\u7ed3\u679c\u3002 GLuint ssaoBlurFBO, ssaoColorBufferBlur; glGenFramebuffers(1, &ssaoBlurFBO); glBindFramebuffer(GL_FRAMEBUFFER, ssaoBlurFBO); glGenTextures(1, &ssaoColorBufferBlur); glBindTexture(GL_TEXTURE_2D, ssaoColorBufferBlur); glTexImage2D(GL_TEXTURE_2D, 0, GL_RED, SCR_WIDTH, SCR_HEIGHT, 0, GL_RGB, GL_FLOAT, NULL); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, ssaoColorBufferBlur, 0); \u7531\u4e8e\u5e73\u94fa\u7684\u968f\u673a\u5411\u91cf\u7eb9\u7406\u4fdd\u6301\u4e86\u4e00\u81f4\u7684\u968f\u673a\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e00\u6027\u8d28\u6765\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u6a21\u7cca\u7740\u8272\u5668\uff1a #version 330 core in vec2 TexCoords; out float fragColor; uniform sampler2D ssaoInput; void main() { vec2 texelSize = 1.0 / vec2(textureSize(ssaoInput, 0)); float result = 0.0; for (int x = -2; x < 2; ++x) { for (int y = -2; y < 2; ++y) { vec2 offset = vec2(float(x), float(y)) * texelSize; result += texture(ssaoInput, TexCoords + offset).r; } } fragColor = result / (4.0 * 4.0); } \u8fd9\u91cc\u6211\u4eec\u904d\u5386\u4e86\u5468\u56f4\u5728-2.0\u548c2.0\u4e4b\u95f4\u7684SSAO\u7eb9\u7406\u5355\u5143(Texel)\uff0c\u91c7\u6837\u4e0e\u566a\u58f0\u7eb9\u7406\u7ef4\u5ea6\u76f8\u540c\u6570\u91cf\u7684SSAO\u7eb9\u7406\u3002\u6211\u4eec\u901a\u8fc7\u4f7f\u7528\u8fd4\u56de vec2 \u7eb9\u7406\u7ef4\u5ea6\u7684 textureSize \uff0c\u6839\u636e\u7eb9\u7406\u5355\u5143\u7684\u771f\u5b9e\u5927\u5c0f\u504f\u79fb\u4e86\u6bcf\u4e00\u4e2a\u7eb9\u7406\u5750\u6807\u3002\u6211\u4eec\u5e73\u5747\u6240\u5f97\u7684\u7ed3\u679c\uff0c\u83b7\u5f97\u4e00\u4e2a\u7b80\u5355\u4f46\u662f\u6709\u6548\u7684\u6a21\u7cca\u6548\u679c\uff1a \u8fd9\u5c31\u5b8c\u6210\u4e86\uff0c\u4e00\u4e2a\u5305\u542b\u9010\u7247\u6bb5\u73af\u5883\u906e\u853d\u6570\u636e\u7684\u7eb9\u7406\uff1b\u5728\u5149\u7167\u5904\u7406\u9636\u6bb5\u4e2d\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002","title":"\u73af\u5883\u906e\u853d\u6a21\u7cca"},{"location":"05%20Advanced%20Lighting/09%20SSAO/#_5","text":"\u5e94\u7528\u906e\u853d\u56e0\u5b50\u5230\u5149\u7167\u65b9\u7a0b\u4e2d\u6781\u5176\u7b80\u5355\uff1a\u6211\u4eec\u8981\u505a\u7684\u53ea\u662f\u5c06\u9010\u7247\u6bb5\u73af\u5883\u906e\u853d\u56e0\u5b50\u4e58\u5230\u5149\u7167\u73af\u5883\u5206\u91cf\u4e0a\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u4e0a\u4e2a\u6559\u7a0b\u4e2d\u7684Blinn-Phong\u5ef6\u8fdf\u5149\u7167\u7740\u8272\u5668\u5e76\u505a\u51fa\u4e00\u70b9\u4fee\u6539\uff0c\u6211\u4eec\u5c06\u4f1a\u5f97\u5230\u4e0b\u9762\u8fd9\u4e2a\u7247\u6bb5\u7740\u8272\u5668\uff1a #version 330 core out vec4 FragColor; in vec2 TexCoords; uniform sampler2D gPositionDepth; uniform sampler2D gNormal; uniform sampler2D gAlbedo; uniform sampler2D ssao; struct Light { vec3 Position; vec3 Color; float Linear; float Quadratic; float Radius; }; uniform Light light; void main() { // \u4eceG\u7f13\u51b2\u4e2d\u63d0\u53d6\u6570\u636e vec3 FragPos = texture(gPositionDepth, TexCoords).rgb; vec3 Normal = texture(gNormal, TexCoords).rgb; vec3 Diffuse = texture(gAlbedo, TexCoords).rgb; float AmbientOcclusion = texture(ssao, TexCoords).r; // Blinn-Phong (\u89c2\u5bdf\u7a7a\u95f4\u4e2d) vec3 ambient = vec3(0.3 * AmbientOcclusion); // \u8fd9\u91cc\u6211\u4eec\u52a0\u4e0a\u906e\u853d\u56e0\u5b50 vec3 lighting = ambient; vec3 viewDir = normalize(-FragPos); // Viewpos \u4e3a (0.0.0)\uff0c\u5728\u89c2\u5bdf\u7a7a\u95f4\u4e2d // \u6f2b\u53cd\u5c04 vec3 lightDir = normalize(light.Position - FragPos); vec3 diffuse = max(dot(Normal, lightDir), 0.0) * Diffuse * light.Color; // \u955c\u9762 vec3 halfwayDir = normalize(lightDir + viewDir); float spec = pow(max(dot(Normal, halfwayDir), 0.0), 8.0); vec3 specular = light.Color * spec; // \u8870\u51cf float dist = length(light.Position - FragPos); float attenuation = 1.0 / (1.0 + light.Linear * dist + light.Quadratic * dist * dist); diffuse *= attenuation; specular *= attenuation; lighting += diffuse + specular; FragColor = vec4(lighting, 1.0); } (\u9664\u4e86\u5c06\u5176\u6539\u5230\u89c2\u5bdf\u7a7a\u95f4)\u5bf9\u6bd4\u4e8e\u4e4b\u524d\u7684\u5149\u7167\u5b9e\u73b0\uff0c\u552f\u4e00\u7684\u771f\u6b63\u6539\u52a8\u5c31\u662f\u573a\u666f\u73af\u5883\u5206\u91cf\u4e0e AmbientOcclusion \u503c\u7684\u4e58\u6cd5\u3002\u901a\u8fc7\u5728\u573a\u666f\u4e2d\u52a0\u5165\u4e00\u4e2a\u6de1\u84dd\u8272\u7684\u70b9\u5149\u6e90\uff0c\u6211\u4eec\u5c06\u4f1a\u5f97\u5230\u4e0b\u9762\u8fd9\u4e2a\u7ed3\u679c\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5b8c\u6574\u7684\u6e90\u4ee3\u7801\uff0c\u548c\u4ee5\u4e0b\u7740\u8272\u5668\uff1a \u51e0\u4f55\uff1a \u9876\u70b9 \uff0c \u7247\u6bb5 SSAO\uff1a \u9876\u70b9 \uff0c \u7247\u6bb5 \u6a21\u7cca\uff1a \u9876\u70b9 \uff0c \u7247\u6bb5 \u5149\u7167\uff1a \u9876\u70b9 \uff0c \u7247\u6bb5 \u5c4f\u5e55\u7a7a\u95f4\u73af\u5883\u906e\u853d\u662f\u4e00\u4e2a\u53ef\u9ad8\u5ea6\u81ea\u5b9a\u4e49\u7684\u6548\u679c\uff0c\u5b83\u7684\u6548\u679c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4f9d\u8d56\u4e8e\u6211\u4eec\u6839\u636e\u573a\u666f\u7c7b\u578b\u8c03\u6574\u5b83\u7684\u53c2\u6570\u3002\u5bf9\u6240\u6709\u7c7b\u578b\u7684\u573a\u666f\u5e76\u4e0d\u5b58\u5728\u4ec0\u4e48\u5b8c\u7f8e\u7684\u53c2\u6570\u7ec4\u5408\u65b9\u5f0f\u3002\u4e00\u4e9b\u573a\u666f\u53ea\u5728\u5c0f\u534a\u5f84\u60c5\u51b5\u4e0b\u5de5\u4f5c\uff0c\u53c8\u6709\u4e9b\u573a\u666f\u4f1a\u9700\u8981\u66f4\u5927\u7684\u534a\u5f84\u548c\u66f4\u5927\u7684\u6837\u672c\u6570\u91cf\u624d\u80fd\u770b\u8d77\u6765\u66f4\u771f\u5b9e\u3002\u5f53\u524d\u8fd9\u4e2a\u6f14\u793a\u7528\u4e8664\u4e2a\u6837\u672c\uff0c\u5c5e\u4e8e\u6bd4\u8f83\u591a\u7684\u4e86\uff0c\u4f60\u53ef\u4ee5\u8c03\u8c03\u66f4\u5c0f\u7684\u6838\u5fc3\u5927\u5c0f\u4ece\u800c\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\u3002 \u4e00\u4e9b\u4f60\u53ef\u4ee5\u8c03\u6574(\u6bd4\u5982\u8bf4\u901a\u8fc7uniform)\u7684\u53c2\u6570\uff1a\u6838\u5fc3\u5927\u5c0f\uff0c\u534a\u5f84\u548c/\u6216\u566a\u58f0\u6838\u5fc3\u7684\u5927\u5c0f\u3002\u4f60\u4e5f\u53ef\u4ee5\u63d0\u5347\u6700\u7ec8\u7684\u906e\u853d\u503c\u5230\u4e00\u4e2a\u7528\u6237\u5b9a\u4e49\u7684\u5e42\u4ece\u800c\u589e\u52a0\u5b83\u7684\u5f3a\u5ea6\uff1a occlusion = 1.0 - (occlusion / kernelSize); FragColor = pow(occlusion, power); \u591a\u8bd5\u8bd5\u4e0d\u540c\u7684\u573a\u666f\u548c\u4e0d\u540c\u7684\u53c2\u6570\uff0c\u6765\u6b23\u8d4fSSAO\u7684\u53ef\u5b9a\u5236\u6027\u3002 \u5c3d\u7ba1SSAO\u662f\u4e00\u4e2a\u5f88\u5fae\u5c0f\u7684\u6548\u679c\uff0c\u53ef\u80fd\u751a\u81f3\u4e0d\u662f\u5f88\u5bb9\u6613\u6ce8\u610f\u5230\uff0c\u5b83\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u589e\u52a0\u4e86\u5408\u9002\u5149\u7167\u573a\u666f\u7684\u771f\u5b9e\u6027\uff0c\u5b83\u4e5f\u7edd\u5bf9\u662f\u4e00\u4e2a\u5728\u4f60\u5de5\u5177\u7bb1\u4e2d\u5fc5\u5907\u7684\u6280\u672f\u3002","title":"\u5e94\u7528\u73af\u5883\u906e\u853d"},{"location":"05%20Advanced%20Lighting/09%20SSAO/#_6","text":"SSAO\u6559\u7a0b \uff1aJohn Chapman\u4f18\u79c0\u7684SSAO\u6559\u7a0b\uff1b\u672c\u6559\u7a0b\u5f88\u5927\u4e00\u90e8\u5206\u4ee3\u7801\u548c\u6280\u5de7\u90fd\u662f\u57fa\u4e8e\u4ed6\u7684\u6587\u7ae0 \u4e86\u89e3\u4f60\u7684SSAO\u6548\u679c \uff1a\u5173\u4e8e\u63d0\u9ad8SSAO\u7279\u5b9a\u6548\u679c\u7684\u4e00\u7bc7\u5f88\u68d2\u7684\u6587\u7ae0 \u6df1\u5ea6\u503c\u91cd\u6784SSAO \uff1aOGLDev\u7684\u4e00\u7bc7\u5728SSAO\u4e4b\u4e0a\u7684\u62d3\u5c55\u6559\u7a0b\uff0c\u5b83\u8ba8\u8bba\u4e86\u901a\u8fc7\u4ec5\u4ec5\u6df1\u5ea6\u503c\u91cd\u6784\u4f4d\u7f6e\u77e2\u91cf\uff0c\u8282\u7701\u4e86\u5b58\u50a8\u5f00\u9500\u5de8\u5927\u7684\u4f4d\u7f6e\u77e2\u91cf\u5230G\u7f13\u51b2\u7684\u8fc7\u7a0b","title":"\u9644\u52a0\u8d44\u6e90"},{"location":"05%20Advanced%20Lighting/03%20Shadows/01%20Shadow%20Mapping/","text":"\u9634\u5f71\u6620\u5c04 \u539f\u6587 Shadow Mapping \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django \u6821\u5bf9 gjy_1992 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u9634\u5f71\u662f\u5149\u7ebf\u88ab\u963b\u6321\u7684\u7ed3\u679c\uff1b\u5f53\u4e00\u4e2a\u5149\u6e90\u7684\u5149\u7ebf\u7531\u4e8e\u5176\u4ed6\u7269\u4f53\u7684\u963b\u6321\u4e0d\u80fd\u591f\u8fbe\u5230\u4e00\u4e2a\u7269\u4f53\u7684\u8868\u9762\u7684\u65f6\u5019\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7269\u4f53\u5c31\u5728\u9634\u5f71\u4e2d\u4e86\u3002\u9634\u5f71\u80fd\u591f\u4f7f\u573a\u666f\u770b\u8d77\u6765\u771f\u5b9e\u5f97\u591a\uff0c\u5e76\u4e14\u53ef\u4ee5\u8ba9\u89c2\u5bdf\u8005\u83b7\u5f97\u7269\u4f53\u4e4b\u95f4\u7684\u7a7a\u95f4\u4f4d\u7f6e\u5173\u7cfb\u3002\u573a\u666f\u548c\u7269\u4f53\u7684\u6df1\u5ea6\u611f\u56e0\u6b64\u80fd\u591f\u5f97\u5230\u6781\u5927\u63d0\u5347\uff0c\u4e0b\u56fe\u5c55\u793a\u4e86\u6709\u9634\u5f71\u548c\u6ca1\u6709\u9634\u5f71\u7684\u60c5\u51b5\u4e0b\u7684\u4e0d\u540c\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6709\u9634\u5f71\u7684\u65f6\u5019\u4f60\u80fd\u66f4\u5bb9\u6613\u5730\u533a\u5206\u51fa\u7269\u4f53\u4e4b\u95f4\u7684\u4f4d\u7f6e\u5173\u7cfb\uff0c\u4f8b\u5982\uff0c\u5f53\u4f7f\u7528\u9634\u5f71\u7684\u65f6\u5019\u6d6e\u5728\u5730\u677f\u4e0a\u7684\u7acb\u65b9\u4f53\u7684\u4e8b\u5b9e\u66f4\u52a0\u6e05\u6670\u3002 \u9634\u5f71\u8fd8\u662f\u6bd4\u8f83\u4e0d\u597d\u5b9e\u73b0\u7684\uff0c\u56e0\u4e3a\u5f53\u524d\u5b9e\u65f6\u6e32\u67d3\u9886\u57df\u8fd8\u6ca1\u627e\u5230\u4e00\u79cd\u5b8c\u7f8e\u7684\u9634\u5f71\u7b97\u6cd5\u3002\u76ee\u524d\u6709\u51e0\u79cd\u8fd1\u4f3c\u9634\u5f71\u6280\u672f\uff0c\u4f46\u5b83\u4eec\u90fd\u6709\u81ea\u5df1\u7684\u5f31\u70b9\u548c\u4e0d\u8db3\uff0c\u8fd9\u70b9\u6211\u4eec\u5fc5\u987b\u8981\u8003\u8651\u5230\u3002 \u89c6\u9891\u6e38\u620f\u4e2d\u8f83\u591a\u4f7f\u7528\u7684\u4e00\u79cd\u6280\u672f\u662f\u9634\u5f71\u8d34\u56fe\uff08shadow mapping\uff09\uff0c\u6548\u679c\u4e0d\u9519\uff0c\u800c\u4e14\u76f8\u5bf9\u5bb9\u6613\u5b9e\u73b0\u3002\u9634\u5f71\u8d34\u56fe\u5e76\u4e0d\u96be\u4ee5\u7406\u89e3\uff0c\u6027\u80fd\u4e5f\u4e0d\u4f1a\u592a\u4f4e\uff0c\u800c\u4e14\u975e\u5e38\u5bb9\u6613\u6269\u5c55\u6210\u66f4\u9ad8\u7ea7\u7684\u7b97\u6cd5\uff08\u6bd4\u5982 Omnidirectional Shadow Maps \u548c Cascaded Shadow Maps \uff09\u3002 \u9634\u5f71\u6620\u5c04 \u9634\u5f71\u6620\u5c04(Shadow Mapping)\u80cc\u540e\u7684\u601d\u8def\u975e\u5e38\u7b80\u5355\uff1a\u6211\u4eec\u4ee5\u5149\u7684\u4f4d\u7f6e\u4e3a\u89c6\u89d2\u8fdb\u884c\u6e32\u67d3\uff0c\u6211\u4eec\u80fd\u770b\u5230\u7684\u4e1c\u897f\u90fd\u5c06\u88ab\u70b9\u4eae\uff0c\u770b\u4e0d\u89c1\u7684\u4e00\u5b9a\u662f\u5728\u9634\u5f71\u4e4b\u4e2d\u4e86\u3002\u5047\u8bbe\u6709\u4e00\u4e2a\u5730\u677f\uff0c\u5728\u5149\u6e90\u548c\u5b83\u4e4b\u95f4\u6709\u4e00\u4e2a\u5927\u76d2\u5b50\u3002\u7531\u4e8e\u5149\u6e90\u5904\u5411\u5149\u7ebf\u65b9\u5411\u770b\u53bb\uff0c\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u76d2\u5b50\uff0c\u4f46\u770b\u4e0d\u5230\u5730\u677f\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u90e8\u5206\u5c31\u5e94\u8be5\u5728\u9634\u5f71\u4e2d\u4e86\u3002 \u8fd9\u91cc\u7684\u6240\u6709\u84dd\u7ebf\u4ee3\u8868\u5149\u6e90\u53ef\u4ee5\u770b\u5230\u7684fragment\u3002\u9ed1\u7ebf\u4ee3\u8868\u88ab\u906e\u6321\u7684fragment\uff1a\u5b83\u4eec\u5e94\u8be5\u6e32\u67d3\u4e3a\u5e26\u9634\u5f71\u7684\u3002\u5982\u679c\u6211\u4eec\u7ed8\u5236\u4e00\u6761\u4ece\u5149\u6e90\u51fa\u53d1\uff0c\u5230\u8fbe\u6700\u53f3\u8fb9\u76d2\u5b50\u4e0a\u7684\u4e00\u4e2a\u7247\u6bb5\u4e0a\u7684\u7ebf\u6bb5\u6216\u5c04\u7ebf\uff0c\u90a3\u4e48\u5c04\u7ebf\u5c06\u5148\u51fb\u4e2d\u60ac\u6d6e\u7684\u76d2\u5b50\uff0c\u968f\u540e\u624d\u4f1a\u5230\u8fbe\u6700\u53f3\u4fa7\u7684\u76d2\u5b50\u3002\u7ed3\u679c\u5c31\u662f\u60ac\u6d6e\u7684\u76d2\u5b50\u88ab\u7167\u4eae\uff0c\u800c\u6700\u53f3\u4fa7\u7684\u76d2\u5b50\u5c06\u5904\u4e8e\u9634\u5f71\u4e4b\u4e2d\u3002 \u6211\u4eec\u5e0c\u671b\u5f97\u5230\u5c04\u7ebf\u7b2c\u4e00\u6b21\u51fb\u4e2d\u7684\u90a3\u4e2a\u7269\u4f53\uff0c\u7136\u540e\u7528\u8fd9\u4e2a\u6700\u8fd1\u70b9\u548c\u5c04\u7ebf\u4e0a\u5176\u4ed6\u70b9\u8fdb\u884c\u5bf9\u6bd4\u3002\u7136\u540e\u6211\u4eec\u5c06\u6d4b\u8bd5\u4e00\u4e0b\u770b\u770b\u5c04\u7ebf\u4e0a\u7684\u5176\u4ed6\u70b9\u662f\u5426\u6bd4\u6700\u8fd1\u70b9\u66f4\u8fdc\uff0c\u5982\u679c\u662f\u7684\u8bdd\uff0c\u8fd9\u4e2a\u70b9\u5c31\u5728\u9634\u5f71\u4e2d\u3002\u5bf9\u4ece\u5149\u6e90\u53d1\u51fa\u7684\u5c04\u7ebf\u4e0a\u7684\u6210\u5343\u4e0a\u4e07\u4e2a\u70b9\u8fdb\u884c\u904d\u5386\u662f\u4e2a\u6781\u7aef\u6d88\u8017\u6027\u80fd\u7684\u4e3e\u63aa\uff0c\u5b9e\u65f6\u6e32\u67d3\u4e0a\u57fa\u672c\u4e0d\u53ef\u53d6\u3002\u6211\u4eec\u53ef\u4ee5\u91c7\u53d6\u76f8\u4f3c\u4e3e\u63aa\uff0c\u4e0d\u7528\u6295\u5c04\u51fa\u5149\u7684\u5c04\u7ebf\u3002\u6211\u4eec\u6240\u4f7f\u7528\u7684\u662f\u975e\u5e38\u719f\u6089\u7684\u4e1c\u897f\uff1a\u6df1\u5ea6\u7f13\u51b2\u3002 \u4f60\u53ef\u80fd\u8bb0\u5f97\u5728 \u6df1\u5ea6\u6d4b\u8bd5 \u6559\u7a0b\u4e2d\uff0c\u5728\u6df1\u5ea6\u7f13\u51b2\u91cc\u7684\u4e00\u4e2a\u503c\u662f\u6444\u50cf\u673a\u89c6\u89d2\u4e0b\uff0c\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u7247\u6bb5\u7684\u4e00\u4e2a0\u52301\u4e4b\u95f4\u7684\u6df1\u5ea6\u503c\u3002\u5982\u679c\u6211\u4eec\u4ece\u5149\u6e90\u7684\u900f\u89c6\u56fe\u6765\u6e32\u67d3\u573a\u666f\uff0c\u5e76\u628a\u6df1\u5ea6\u503c\u7684\u7ed3\u679c\u50a8\u5b58\u5230\u7eb9\u7406\u4e2d\u4f1a\u600e\u6837\uff1f\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u5c31\u80fd\u5bf9\u5149\u6e90\u7684\u900f\u89c6\u56fe\u6240\u89c1\u7684\u6700\u8fd1\u7684\u6df1\u5ea6\u503c\u8fdb\u884c\u91c7\u6837\u3002\u6700\u7ec8\uff0c\u6df1\u5ea6\u503c\u5c31\u4f1a\u663e\u793a\u4ece\u5149\u6e90\u7684\u900f\u89c6\u56fe\u4e0b\u89c1\u5230\u7684\u7b2c\u4e00\u4e2a\u7247\u6bb5\u4e86\u3002\u6211\u4eec\u7ba1\u50a8\u5b58\u5728\u7eb9\u7406\u4e2d\u7684\u6240\u6709\u8fd9\u4e9b\u6df1\u5ea6\u503c\uff0c\u53eb\u505a\u6df1\u5ea6\u8d34\u56fe\uff08depth map\uff09\u6216\u9634\u5f71\u8d34\u56fe\u3002 \u5de6\u4fa7\u7684\u56fe\u7247\u5c55\u793a\u4e86\u4e00\u4e2a\u5b9a\u5411\u5149\u6e90\uff08\u6240\u6709\u5149\u7ebf\u90fd\u662f\u5e73\u884c\u7684\uff09\u5728\u7acb\u65b9\u4f53\u4e0b\u7684\u8868\u9762\u6295\u5c04\u7684\u9634\u5f71\u3002\u901a\u8fc7\u50a8\u5b58\u5230\u6df1\u5ea6\u8d34\u56fe\u4e2d\u7684\u6df1\u5ea6\u503c\uff0c\u6211\u4eec\u5c31\u80fd\u627e\u5230\u6700\u8fd1\u70b9\uff0c\u7528\u4ee5\u51b3\u5b9a\u7247\u6bb5\u662f\u5426\u5728\u9634\u5f71\u4e2d\u3002\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u6765\u81ea\u5149\u6e90\u7684\u89c6\u56fe\u548c\u6295\u5f71\u77e9\u9635\u6765\u6e32\u67d3\u573a\u666f\u5c31\u80fd\u521b\u5efa\u4e00\u4e2a\u6df1\u5ea6\u8d34\u56fe\u3002\u8fd9\u4e2a\u6295\u5f71\u548c\u89c6\u56fe\u77e9\u9635\u7ed3\u5408\u5728\u4e00\u8d77\u6210\u4e3a\u4e00\u4e2a T \u53d8\u6362\uff0c\u5b83\u53ef\u4ee5\u5c06\u4efb\u4f55\u4e09\u7ef4\u4f4d\u7f6e\u8f6c\u53d8\u5230\u5149\u6e90\u7684\u53ef\u89c1\u5750\u6807\u7a7a\u95f4\u3002 Important \u5b9a\u5411\u5149\u5e76\u6ca1\u6709\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u5b83\u88ab\u89c4\u5b9a\u4e3a\u65e0\u7a77\u8fdc\u3002\u7136\u800c\uff0c\u4e3a\u4e86\u5b9e\u73b0\u9634\u5f71\u8d34\u56fe\uff0c\u6211\u4eec\u5f97\u4ece\u4e00\u4e2a\u5149\u7684\u900f\u89c6\u56fe\u6e32\u67d3\u573a\u666f\uff0c\u8fd9\u6837\u5c31\u5f97\u5728\u5149\u7684\u65b9\u5411\u7684\u67d0\u4e00\u70b9\u4e0a\u6e32\u67d3\u573a\u666f\u3002 \u5728\u53f3\u8fb9\u7684\u56fe\u4e2d\u6211\u4eec\u663e\u793a\u51fa\u540c\u6837\u7684\u5e73\u884c\u5149\u548c\u89c2\u5bdf\u8005\u3002\u6211\u4eec\u6e32\u67d3\u4e00\u4e2a\u70b9 \\bar{\\color{red}{P}} \u5904\u7684\u7247\u6bb5\uff0c\u9700\u8981\u51b3\u5b9a\u5b83\u662f\u5426\u5728\u9634\u5f71\u4e2d\u3002\u6211\u4eec\u5148\u5f97\u4f7f\u7528 T \u628a \\bar{\\color{red}{P}} \u53d8\u6362\u5230\u5149\u6e90\u7684\u5750\u6807\u7a7a\u95f4\u91cc\u3002\u65e2\u7136\u70b9 \\bar{\\color{red}{P}} \u662f\u4ece\u5149\u7684\u900f\u89c6\u56fe\u4e2d\u770b\u5230\u7684\uff0c\u5b83\u7684z\u5750\u6807\u5c31\u5bf9\u5e94\u4e8e\u5b83\u7684\u6df1\u5ea6\uff0c\u4f8b\u5b50\u4e2d\u8fd9\u4e2a\u503c\u662f0.9\u3002\u4f7f\u7528\u70b9 \\bar{\\color{red}{P}} \u5728\u5149\u6e90\u7684\u5750\u6807\u7a7a\u95f4\u7684\u5750\u6807\uff0c\u6211\u4eec\u53ef\u4ee5\u7d22\u5f15\u6df1\u5ea6\u8d34\u56fe\uff0c\u6765\u83b7\u5f97\u4ece\u5149\u7684\u89c6\u89d2\u4e2d\u6700\u8fd1\u7684\u53ef\u89c1\u6df1\u5ea6\uff0c\u7ed3\u679c\u662f\u70b9 \\bar{\\color{green}{C}} \uff0c\u6700\u8fd1\u7684\u6df1\u5ea6\u662f0.4\u3002\u56e0\u4e3a\u7d22\u5f15\u6df1\u5ea6\u8d34\u56fe\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u5c0f\u4e8e\u70b9 \\bar{\\color{red}{P}} \u7684\u6df1\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u65ad\u5b9a \\bar{\\color{red}{P}} \u88ab\u6321\u4f4f\u4e86\uff0c\u5b83\u5728\u9634\u5f71\u4e2d\u4e86\u3002 \u9634\u5f71\u6620\u5c04\u7531\u4e24\u4e2a\u6b65\u9aa4\u7ec4\u6210\uff1a\u9996\u5148\uff0c\u6211\u4eec\u6e32\u67d3\u6df1\u5ea6\u8d34\u56fe\uff0c\u7136\u540e\u6211\u4eec\u50cf\u5f80\u5e38\u4e00\u6837\u6e32\u67d3\u573a\u666f\uff0c\u4f7f\u7528\u751f\u6210\u7684\u6df1\u5ea6\u8d34\u56fe\u6765\u8ba1\u7b97\u7247\u6bb5\u662f\u5426\u5728\u9634\u5f71\u4e4b\u4e2d\u3002\u542c\u8d77\u6765\u6709\u70b9\u590d\u6742\uff0c\u4f46\u968f\u7740\u6211\u4eec\u4e00\u6b65\u4e00\u6b65\u5730\u8bb2\u89e3\u8fd9\u4e2a\u6280\u672f\uff0c\u5c31\u80fd\u7406\u89e3\u4e86\u3002 \u6df1\u5ea6\u8d34\u56fe \u7b2c\u4e00\u6b65\u6211\u4eec\u9700\u8981\u751f\u6210\u4e00\u5f20\u6df1\u5ea6\u8d34\u56fe(Depth Map)\u3002\u6df1\u5ea6\u8d34\u56fe\u662f\u4ece\u5149\u7684\u900f\u89c6\u56fe\u91cc\u6e32\u67d3\u7684\u6df1\u5ea6\u7eb9\u7406\uff0c\u7528\u5b83\u8ba1\u7b97\u9634\u5f71\u3002\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5c06\u573a\u666f\u7684\u6e32\u67d3\u7ed3\u679c\u50a8\u5b58\u5230\u4e00\u4e2a\u7eb9\u7406\u4e2d\uff0c\u6211\u4eec\u5c06\u518d\u6b21\u9700\u8981\u5e27\u7f13\u51b2\u3002 \u9996\u5148\uff0c\u6211\u4eec\u8981\u4e3a\u6e32\u67d3\u7684\u6df1\u5ea6\u8d34\u56fe\u521b\u5efa\u4e00\u4e2a\u5e27\u7f13\u51b2\u5bf9\u8c61\uff1a GLuint depthMapFBO; glGenFramebuffers(1, &depthMapFBO); \u7136\u540e\uff0c\u521b\u5efa\u4e00\u4e2a2D\u7eb9\u7406\uff0c\u63d0\u4f9b\u7ed9\u5e27\u7f13\u51b2\u7684\u6df1\u5ea6\u7f13\u51b2\u4f7f\u7528\uff1a const GLuint SHADOW_WIDTH = 1024, SHADOW_HEIGHT = 1024; GLuint depthMap; glGenTextures(1, &depthMap); glBindTexture(GL_TEXTURE_2D, depthMap); glTexImage2D(GL_TEXTURE_2D, 0, GL_DEPTH_COMPONENT, SHADOW_WIDTH, SHADOW_HEIGHT, 0, GL_DEPTH_COMPONENT, GL_FLOAT, NULL); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT); \u751f\u6210\u6df1\u5ea6\u8d34\u56fe\u4e0d\u592a\u590d\u6742\u3002\u56e0\u4e3a\u6211\u4eec\u53ea\u5173\u5fc3\u6df1\u5ea6\u503c\uff0c\u6211\u4eec\u8981\u628a\u7eb9\u7406\u683c\u5f0f\u6307\u5b9a\u4e3aGL_DEPTH_COMPONENT\u3002\u6211\u4eec\u8fd8\u8981\u628a\u7eb9\u7406\u7684\u9ad8\u5bbd\u8bbe\u7f6e\u4e3a1024\uff1a\u8fd9\u662f\u6df1\u5ea6\u8d34\u56fe\u7684\u5206\u8fa8\u7387\u3002 \u628a\u6211\u4eec\u628a\u751f\u6210\u7684\u6df1\u5ea6\u7eb9\u7406\u4f5c\u4e3a\u5e27\u7f13\u51b2\u7684\u6df1\u5ea6\u7f13\u51b2\uff1a glBindFramebuffer(GL_FRAMEBUFFER, depthMapFBO); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, GL_TEXTURE_2D, depthMap, 0); glDrawBuffer(GL_NONE); glReadBuffer(GL_NONE); glBindFramebuffer(GL_FRAMEBUFFER, 0); \u6211\u4eec\u9700\u8981\u7684\u53ea\u662f\u5728\u4ece\u5149\u7684\u900f\u89c6\u56fe\u4e0b\u6e32\u67d3\u573a\u666f\u7684\u65f6\u5019\u6df1\u5ea6\u4fe1\u606f\uff0c\u6240\u4ee5\u989c\u8272\u7f13\u51b2\u6ca1\u6709\u7528\u3002\u7136\u800c\uff0c\u4e0d\u5305\u542b\u989c\u8272\u7f13\u51b2\u7684\u5e27\u7f13\u51b2\u5bf9\u8c61\u662f\u4e0d\u5b8c\u6574\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u663e\u5f0f\u544a\u8bc9OpenGL\u6211\u4eec\u4e0d\u9002\u7528\u4efb\u4f55\u989c\u8272\u6570\u636e\u8fdb\u884c\u6e32\u67d3\u3002\u6211\u4eec\u901a\u8fc7\u5c06\u8c03\u7528glDrawBuffer\u548cglReadBuffer\u628a\u8bfb\u548c\u7ed8\u5236\u7f13\u51b2\u8bbe\u7f6e\u4e3aGL_NONE\u6765\u505a\u8fd9\u4ef6\u4e8b\u3002 \u5408\u7406\u914d\u7f6e\u5c06\u6df1\u5ea6\u503c\u6e32\u67d3\u5230\u7eb9\u7406\u7684\u5e27\u7f13\u51b2\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u7b2c\u4e00\u6b65\u4e86\uff1a\u751f\u6210\u6df1\u5ea6\u8d34\u56fe\u3002\u4e24\u4e2a\u6b65\u9aa4\u7684\u5b8c\u6574\u7684\u6e32\u67d3\u9636\u6bb5\uff0c\u770b\u8d77\u6765\u6709\u70b9\u50cf\u8fd9\u6837\uff1a // 1. \u9996\u9009\u6e32\u67d3\u6df1\u5ea6\u8d34\u56fe glViewport(0, 0, SHADOW_WIDTH, SHADOW_HEIGHT); glBindFramebuffer(GL_FRAMEBUFFER, depthMapFBO); glClear(GL_DEPTH_BUFFER_BIT); ConfigureShaderAndMatrices(); RenderScene(); glBindFramebuffer(GL_FRAMEBUFFER, 0); // 2. \u50cf\u5f80\u5e38\u4e00\u6837\u6e32\u67d3\u573a\u666f\uff0c\u4f46\u8fd9\u6b21\u4f7f\u7528\u6df1\u5ea6\u8d34\u56fe glViewport(0, 0, SCR_WIDTH, SCR_HEIGHT); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); ConfigureShaderAndMatrices(); glBindTexture(GL_TEXTURE_2D, depthMap); RenderScene(); \u8fd9\u6bb5\u4ee3\u7801\u9690\u53bb\u4e86\u4e00\u4e9b\u7ec6\u8282\uff0c\u4f46\u5b83\u8868\u8fbe\u4e86\u9634\u5f71\u6620\u5c04\u7684\u57fa\u672c\u601d\u8def\u3002\u8fd9\u91cc\u4e00\u5b9a\u8981\u8bb0\u5f97\u8c03\u7528glViewport\u3002\u56e0\u4e3a\u9634\u5f71\u8d34\u56fe\u7ecf\u5e38\u548c\u6211\u4eec\u539f\u6765\u6e32\u67d3\u7684\u573a\u666f\uff08\u901a\u5e38\u662f\u7a97\u53e3\u5206\u8fa8\u7387\uff09\u6709\u7740\u4e0d\u540c\u7684\u5206\u8fa8\u7387\uff0c\u6211\u4eec\u9700\u8981\u6539\u53d8\u89c6\u53e3\uff08viewport\uff09\u7684\u53c2\u6570\u4ee5\u9002\u5e94\u9634\u5f71\u8d34\u56fe\u7684\u5c3a\u5bf8\u3002\u5982\u679c\u6211\u4eec\u5fd8\u4e86\u66f4\u65b0\u89c6\u53e3\u53c2\u6570\uff0c\u6700\u540e\u7684\u6df1\u5ea6\u8d34\u56fe\u8981\u4e48\u592a\u5c0f\u8981\u4e48\u5c31\u4e0d\u5b8c\u6574\u3002 \u5149\u6e90\u7a7a\u95f4\u7684\u53d8\u6362 \u524d\u9762\u90a3\u6bb5\u4ee3\u7801\u4e2d\u4e00\u4e2a\u4e0d\u6e05\u695a\u7684\u51fd\u6570\u662f ConfigureShaderAndMatrices \u3002\u5b83\u662f\u7528\u6765\u5728\u7b2c\u4e8c\u4e2a\u6b65\u9aa4\u786e\u4fdd\u4e3a\u6bcf\u4e2a\u7269\u4f53\u8bbe\u7f6e\u4e86\u5408\u9002\u7684\u6295\u5f71\u548c\u89c6\u56fe\u77e9\u9635\uff0c\u4ee5\u53ca\u76f8\u5173\u7684\u6a21\u578b\u77e9\u9635\u3002\u7136\u800c\uff0c\u7b2c\u4e00\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u4ece\u5149\u7684\u4f4d\u7f6e\u7684\u89c6\u91ce\u4e0b\u4f7f\u7528\u4e86\u4e0d\u540c\u7684\u6295\u5f71\u548c\u89c6\u56fe\u77e9\u9635\u6765\u6e32\u67d3\u7684\u573a\u666f\u3002 \u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u7684\u662f\u4e00\u4e2a\u6240\u6709\u5149\u7ebf\u90fd\u5e73\u884c\u7684\u5b9a\u5411\u5149\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6211\u4eec\u5c06\u4e3a\u5149\u6e90\u4f7f\u7528\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\uff0c\u900f\u89c6\u56fe\u5c06\u6ca1\u6709\u4efb\u4f55\u53d8\u5f62\uff1a GLfloat near_plane = 1.0f, far_plane = 7.5f; glm::mat4 lightProjection = glm::ortho(-10.0f, 10.0f, -10.0f, 10.0f, near_plane, far_plane); \u8fd9\u91cc\u6709\u4e2a\u672c\u8282\u6559\u7a0b\u7684demo\u573a\u666f\u4e2d\u4f7f\u7528\u7684\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u7684\u4f8b\u5b50\u3002\u56e0\u4e3a\u6295\u5f71\u77e9\u9635\u95f4\u63a5\u51b3\u5b9a\u53ef\u89c6\u533a\u57df\u7684\u8303\u56f4\uff0c\u4ee5\u53ca\u54ea\u4e9b\u4e1c\u897f\u4e0d\u4f1a\u88ab\u88c1\u5207\uff0c\u4f60\u9700\u8981\u4fdd\u8bc1\u6295\u5f71\u89c6\u9525\uff08frustum\uff09\u7684\u5927\u5c0f\uff0c\u4ee5\u5305\u542b\u6253\u7b97\u5728\u6df1\u5ea6\u8d34\u56fe\u4e2d\u5305\u542b\u7684\u7269\u4f53\u3002\u5f53\u7269\u4f53\u548c\u7247\u6bb5\u4e0d\u5728\u6df1\u5ea6\u8d34\u56fe\u4e2d\u65f6\uff0c\u5b83\u4eec\u5c31\u4e0d\u4f1a\u4ea7\u751f\u9634\u5f71\u3002 \u4e3a\u4e86\u521b\u5efa\u4e00\u4e2a\u89c6\u56fe\u77e9\u9635\u6765\u53d8\u6362\u6bcf\u4e2a\u7269\u4f53\uff0c\u628a\u5b83\u4eec\u53d8\u6362\u5230\u4ece\u5149\u6e90\u89c6\u89d2\u53ef\u89c1\u7684\u7a7a\u95f4\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528glm::lookAt\u51fd\u6570\uff1b\u8fd9\u6b21\u4ece\u5149\u6e90\u7684\u4f4d\u7f6e\u770b\u5411\u573a\u666f\u4e2d\u592e\u3002 glm::mat4 lightView = glm::lookAt(glm::vec3(-2.0f, 4.0f, -1.0f), glm::vec3(0.0f, 0.0f, 0.0f), glm::vec3(0.0f, 1.0f, 0.0f)); \u4e8c\u8005\u76f8\u7ed3\u5408\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5149\u7a7a\u95f4\u7684\u53d8\u6362\u77e9\u9635\uff0c\u5b83\u5c06\u6bcf\u4e2a\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u53d8\u6362\u5230\u5149\u6e90\u5904\u6240\u89c1\u5230\u7684\u90a3\u4e2a\u7a7a\u95f4\uff1b\u8fd9\u6b63\u662f\u6211\u4eec\u6e32\u67d3\u6df1\u5ea6\u8d34\u56fe\u6240\u9700\u8981\u7684\u3002 glm::mat4 lightSpaceMatrix = lightProjection * lightView; \u8fd9\u4e2alightSpaceMatrix\u6b63\u662f\u524d\u9762\u6211\u4eec\u79f0\u4e3a T \u7684\u90a3\u4e2a\u53d8\u6362\u77e9\u9635\u3002\u6709\u4e86lightSpaceMatrix\u53ea\u8981\u7ed9shader\u63d0\u4f9b\u5149\u7a7a\u95f4\u7684\u6295\u5f71\u548c\u89c6\u56fe\u77e9\u9635\uff0c\u6211\u4eec\u5c31\u80fd\u50cf\u5f80\u5e38\u90a3\u6837\u6e32\u67d3\u573a\u666f\u4e86\u3002\u7136\u800c\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u6df1\u5ea6\u503c\uff0c\u5e76\u975e\u6240\u6709\u7247\u6bb5\u8ba1\u7b97\u90fd\u5728\u6211\u4eec\u7684\u7740\u8272\u5668\u4e2d\u8fdb\u884c\u3002\u4e3a\u4e86\u63d0\u5347\u6027\u80fd\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u4e0e\u4e4b\u4e0d\u540c\u4f46\u66f4\u4e3a\u7b80\u5355\u7684\u7740\u8272\u5668\u6765\u6e32\u67d3\u51fa\u6df1\u5ea6\u8d34\u56fe\u3002 \u6e32\u67d3\u81f3\u6df1\u5ea6\u8d34\u56fe \u5f53\u6211\u4eec\u4ee5\u5149\u7684\u900f\u89c6\u56fe\u8fdb\u884c\u573a\u666f\u6e32\u67d3\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u7528\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684\u7740\u8272\u5668\uff0c\u8fd9\u4e2a\u7740\u8272\u5668\u9664\u4e86\u628a\u9876\u70b9\u53d8\u6362\u5230\u5149\u7a7a\u95f4\u4ee5\u5916\uff0c\u4e0d\u4f1a\u505a\u5f97\u66f4\u591a\u4e86\u3002\u8fd9\u4e2a\u7b80\u5355\u7684\u7740\u8272\u5668\u53eb\u505a simpleDepthShader \uff0c\u5c31\u662f\u4f7f\u7528\u4e0b\u9762\u7684\u8fd9\u4e2a\u7740\u8272\u5668\uff1a #version 330 core layout (location = 0) in vec3 position; uniform mat4 lightSpaceMatrix; uniform mat4 model; void main() { gl_Position = lightSpaceMatrix * model * vec4(position, 1.0f); } \u8fd9\u4e2a\u9876\u70b9\u7740\u8272\u5668\u5c06\u4e00\u4e2a\u5355\u72ec\u6a21\u578b\u7684\u4e00\u4e2a\u9876\u70b9\uff0c\u4f7f\u7528lightSpaceMatrix\u53d8\u6362\u5230\u5149\u7a7a\u95f4\u4e2d\u3002 \u7531\u4e8e\u6211\u4eec\u6ca1\u6709\u989c\u8272\u7f13\u51b2\uff0c\u6700\u540e\u7684\u7247\u6bb5\u4e0d\u9700\u8981\u4efb\u4f55\u5904\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528\u4e00\u4e2a\u7a7a\u7247\u6bb5\u7740\u8272\u5668\uff1a #version 330 core void main() { // gl_FragDepth = gl_FragCoord.z; } \u8fd9\u4e2a\u7a7a\u7247\u6bb5\u7740\u8272\u5668\u4ec0\u4e48\u4e5f\u4e0d\u5e72\uff0c\u8fd0\u884c\u5b8c\u540e\uff0c\u6df1\u5ea6\u7f13\u51b2\u4f1a\u88ab\u66f4\u65b0\u3002\u6211\u4eec\u53ef\u4ee5\u53d6\u6d88\u90a3\u884c\u7684\u6ce8\u91ca\uff0c\u6765\u663e\u5f0f\u8bbe\u7f6e\u6df1\u5ea6\uff0c\u4f46\u662f\u8fd9\u4e2a\uff08\u6307\u6ce8\u91ca\u6389\u90a3\u884c\u4e4b\u540e\uff09\u662f\u66f4\u6709\u6548\u7387\u7684\uff0c\u56e0\u4e3a\u5e95\u5c42\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u9ed8\u8ba4\u53bb\u8bbe\u7f6e\u6df1\u5ea6\u7f13\u51b2\u3002 \u6e32\u67d3\u6df1\u5ea6\u7f13\u51b2\u73b0\u5728\u6210\u4e86\uff1a simpleDepthShader.Use(); glUniformMatrix4fv(lightSpaceMatrixLocation, 1, GL_FALSE, glm::value_ptr(lightSpaceMatrix)); glViewport(0, 0, SHADOW_WIDTH, SHADOW_HEIGHT); glBindFramebuffer(GL_FRAMEBUFFER, depthMapFBO); glClear(GL_DEPTH_BUFFER_BIT); RenderScene(simpleDepthShader); glBindFramebuffer(GL_FRAMEBUFFER, 0); \u8fd9\u91cc\u7684RenderScene\u51fd\u6570\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\uff08shader program\uff09\uff0c\u5b83\u8c03\u7528\u6240\u6709\u76f8\u5173\u7684\u7ed8\u5236\u51fd\u6570\uff0c\u5e76\u5728\u9700\u8981\u7684\u5730\u65b9\u8bbe\u7f6e\u76f8\u5e94\u7684\u6a21\u578b\u77e9\u9635\u3002 \u6700\u540e\uff0c\u5728\u5149\u7684\u900f\u89c6\u56fe\u89c6\u89d2\u4e0b\uff0c\u5f88\u5b8c\u7f8e\u5730\u7528\u6bcf\u4e2a\u53ef\u89c1\u7247\u6bb5\u7684\u6700\u8fd1\u6df1\u5ea6\u586b\u5145\u4e86\u6df1\u5ea6\u7f13\u51b2\u3002\u901a\u8fc7\u5c06\u8fd9\u4e2a\u7eb9\u7406\u6295\u5c04\u5230\u4e00\u4e2a2D\u56db\u8fb9\u5f62\u4e0a\uff08\u548c\u6211\u4eec\u5728\u5e27\u7f13\u51b2\u4e00\u8282\u505a\u7684\u540e\u5904\u7406\u8fc7\u7a0b\u7c7b\u4f3c\uff09\uff0c\u5c31\u80fd\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u51fa\u6765\uff0c\u6211\u4eec\u4f1a\u83b7\u5f97\u8fd9\u6837\u7684\u4e1c\u897f\uff1a \u5c06\u6df1\u5ea6\u8d34\u56fe\u6e32\u67d3\u5230\u56db\u8fb9\u5f62\u4e0a\u7684\u7247\u6bb5\u7740\u8272\u5668\uff1a #version 330 core out vec4 color; in vec2 TexCoords; uniform sampler2D depthMap; void main() { float depthValue = texture(depthMap, TexCoords).r; color = vec4(vec3(depthValue), 1.0); } \u8981\u6ce8\u610f\u7684\u662f\u5f53\u7528\u900f\u89c6\u6295\u5f71\u77e9\u9635\u53d6\u4ee3\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u6765\u663e\u793a\u6df1\u5ea6\u65f6\uff0c\u6709\u4e00\u4e9b\u8f7b\u5fae\u7684\u6539\u52a8\uff0c\u56e0\u4e3a\u4f7f\u7528\u900f\u89c6\u6295\u5f71\u65f6\uff0c\u6df1\u5ea6\u662f\u975e\u7ebf\u6027\u7684\u3002\u672c\u8282\u6559\u7a0b\u7684\u6700\u540e\uff0c\u6211\u4eec\u4f1a\u8ba8\u8bba\u8fd9\u4e9b\u4e0d\u540c\u4e4b\u5904\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u83b7\u5f97\u628a\u573a\u666f\u6e32\u67d3\u6210\u6df1\u5ea6\u8d34\u56fe\u7684\u6e90\u7801\u3002 \u6e32\u67d3\u9634\u5f71 \u6b63\u786e\u5730\u751f\u6210\u6df1\u5ea6\u8d34\u56fe\u4ee5\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u751f\u6210\u9634\u5f71\u4e86\u3002\u8fd9\u6bb5\u4ee3\u7801\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u6267\u884c\uff0c\u7528\u6765\u68c0\u9a8c\u4e00\u4e2a\u7247\u6bb5\u662f\u5426\u5728\u9634\u5f71\u4e4b\u4e2d\uff0c\u4e0d\u8fc7\u6211\u4eec\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u8fdb\u884c\u5149\u7a7a\u95f4\u7684\u53d8\u6362\uff1a #version 330 core layout (location = 0) in vec3 position; layout (location = 1) in vec3 normal; layout (location = 2) in vec2 texCoords; out vec2 TexCoords; out VS_OUT { vec3 FragPos; vec3 Normal; vec2 TexCoords; vec4 FragPosLightSpace; } vs_out; uniform mat4 projection; uniform mat4 view; uniform mat4 model; uniform mat4 lightSpaceMatrix; void main() { gl_Position = projection * view * model * vec4(position, 1.0f); vs_out.FragPos = vec3(model * vec4(position, 1.0)); vs_out.Normal = transpose(inverse(mat3(model))) * normal; vs_out.TexCoords = texCoords; vs_out.FragPosLightSpace = lightSpaceMatrix * vec4(vs_out.FragPos, 1.0); } \u8fd9\u513f\u7684\u65b0\u7684\u5730\u65b9\u662fFragPosLightSpace\u8fd9\u4e2a\u8f93\u51fa\u5411\u91cf\u3002\u6211\u4eec\u7528\u540c\u4e00\u4e2alightSpaceMatrix\uff0c\u628a\u4e16\u754c\u7a7a\u95f4\u9876\u70b9\u4f4d\u7f6e\u8f6c\u6362\u4e3a\u5149\u7a7a\u95f4\u3002\u9876\u70b9\u7740\u8272\u5668\u4f20\u9012\u4e00\u4e2a\u666e\u901a\u7684\u7ecf\u53d8\u6362\u7684\u4e16\u754c\u7a7a\u95f4\u9876\u70b9\u4f4d\u7f6evs_out.FragPos\u548c\u4e00\u4e2a\u5149\u7a7a\u95f4\u7684vs_out.FragPosLightSpace\u7ed9\u7247\u6bb5\u7740\u8272\u5668\u3002 \u7247\u6bb5\u7740\u8272\u5668\u4f7f\u7528Blinn-Phong\u5149\u7167\u6a21\u578b\u6e32\u67d3\u573a\u666f\u3002\u6211\u4eec\u63a5\u7740\u8ba1\u7b97\u51fa\u4e00\u4e2ashadow\u503c\uff0c\u5f53fragment\u5728\u9634\u5f71\u4e2d\u65f6\u662f1.0\uff0c\u5728\u9634\u5f71\u5916\u662f0.0\u3002\u7136\u540e\uff0cdiffuse\u548cspecular\u989c\u8272\u4f1a\u4e58\u4ee5\u8fd9\u4e2a\u9634\u5f71\u5143\u7d20\u3002\u7531\u4e8e\u9634\u5f71\u4e0d\u4f1a\u662f\u5168\u9ed1\u7684\uff08\u7531\u4e8e\u6563\u5c04\uff09\uff0c\u6211\u4eec\u628aambient\u5206\u91cf\u4ece\u4e58\u6cd5\u4e2d\u5254\u9664\u3002 #version 330 core out vec4 FragColor; in VS_OUT { vec3 FragPos; vec3 Normal; vec2 TexCoords; vec4 FragPosLightSpace; } fs_in; uniform sampler2D diffuseTexture; uniform sampler2D shadowMap; uniform vec3 lightPos; uniform vec3 viewPos; float ShadowCalculation(vec4 fragPosLightSpace) { [...] } void main() { vec3 color = texture(diffuseTexture, fs_in.TexCoords).rgb; vec3 normal = normalize(fs_in.Normal); vec3 lightColor = vec3(1.0); // Ambient vec3 ambient = 0.15 * color; // Diffuse vec3 lightDir = normalize(lightPos - fs_in.FragPos); float diff = max(dot(lightDir, normal), 0.0); vec3 diffuse = diff * lightColor; // Specular vec3 viewDir = normalize(viewPos - fs_in.FragPos); vec3 reflectDir = reflect(-lightDir, normal); float spec = 0.0; vec3 halfwayDir = normalize(lightDir + viewDir); spec = pow(max(dot(normal, halfwayDir), 0.0), 64.0); vec3 specular = spec * lightColor; // \u8ba1\u7b97\u9634\u5f71 float shadow = ShadowCalculation(fs_in.FragPosLightSpace); vec3 lighting = (ambient + (1.0 - shadow) * (diffuse + specular)) * color; FragColor = vec4(lighting, 1.0f); } \u7247\u6bb5\u7740\u8272\u5668\u5927\u90e8\u5206\u662f\u4ece\u9ad8\u7ea7\u5149\u7167\u6559\u7a0b\u4e2d\u590d\u5236\u8fc7\u6765\uff0c\u53ea\u4e0d\u8fc7\u52a0\u4e0a\u4e86\u4e2a\u9634\u5f71\u8ba1\u7b97\u3002\u6211\u4eec\u58f0\u660e\u4e00\u4e2ashadowCalculation\u51fd\u6570\uff0c\u7528\u5b83\u8ba1\u7b97\u9634\u5f71\u3002\u7247\u6bb5\u7740\u8272\u5668\u7684\u6700\u540e\uff0c\u6211\u4eec\u6211\u4eec\u628adiffuse\u548cspecular\u4e58\u4ee5(1-\u9634\u5f71\u5143\u7d20)\uff0c\u8fd9\u8868\u793a\u8fd9\u4e2a\u7247\u6bb5\u6709\u591a\u5927\u6210\u5206\u4e0d\u5728\u9634\u5f71\u4e2d\u3002\u8fd9\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u8fd8\u9700\u8981\u4e24\u4e2a\u989d\u5916\u8f93\u5165\uff0c\u4e00\u4e2a\u662f\u5149\u7a7a\u95f4\u7684\u7247\u6bb5\u4f4d\u7f6e\u548c\u7b2c\u4e00\u4e2a\u6e32\u67d3\u9636\u6bb5\u5f97\u5230\u7684\u6df1\u5ea6\u8d34\u56fe\u3002 \u9996\u5148\u8981\u68c0\u67e5\u4e00\u4e2a\u7247\u6bb5\u662f\u5426\u5728\u9634\u5f71\u4e2d\uff0c\u628a\u5149\u7a7a\u95f4\u7247\u6bb5\u4f4d\u7f6e\u8f6c\u6362\u4e3a\u88c1\u5207\u7a7a\u95f4\u7684\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u3002\u5f53\u6211\u4eec\u5728\u9876\u70b9\u7740\u8272\u5668\u8f93\u51fa\u4e00\u4e2a\u88c1\u5207\u7a7a\u95f4\u9876\u70b9\u4f4d\u7f6e\u5230gl_Position\u65f6\uff0cOpenGL\u81ea\u52a8\u8fdb\u884c\u4e00\u4e2a\u900f\u89c6\u9664\u6cd5\uff0c\u5c06\u88c1\u5207\u7a7a\u95f4\u5750\u6807\u7684\u8303\u56f4-w\u5230w\u8f6c\u4e3a-1\u52301\uff0c\u8fd9\u8981\u5c06x\u3001y\u3001z\u5143\u7d20\u9664\u4ee5\u5411\u91cf\u7684w\u5143\u7d20\u6765\u5b9e\u73b0\u3002\u7531\u4e8e\u88c1\u5207\u7a7a\u95f4\u7684FragPosLightSpace\u5e76\u4e0d\u4f1a\u901a\u8fc7gl_Position\u4f20\u5230\u7247\u6bb5\u7740\u8272\u5668\u91cc\uff0c\u6211\u4eec\u5fc5\u987b\u81ea\u5df1\u505a\u900f\u89c6\u9664\u6cd5\uff1a float ShadowCalculation(vec4 fragPosLightSpace) { // \u6267\u884c\u900f\u89c6\u9664\u6cd5 vec3 projCoords = fragPosLightSpace.xyz / fragPosLightSpace.w; [...] } \u8fd4\u56de\u4e86\u7247\u6bb5\u5728\u5149\u7a7a\u95f4\u7684-1\u52301\u7684\u8303\u56f4\u3002 Important \u5f53\u4f7f\u7528\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\uff0c\u9876\u70b9w\u5143\u7d20\u4ecd\u4fdd\u6301\u4e0d\u53d8\uff0c\u6240\u4ee5\u8fd9\u4e00\u6b65\u5b9e\u9645\u4e0a\u6beb\u65e0\u610f\u4e49\u3002\u53ef\u662f\uff0c\u5f53\u4f7f\u7528\u900f\u89c6\u6295\u5f71\u7684\u65f6\u5019\u5c31\u662f\u5fc5\u987b\u7684\u4e86\uff0c\u6240\u4ee5\u4e3a\u4e86\u4fdd\u8bc1\u5728\u4e24\u79cd\u6295\u5f71\u77e9\u9635\u4e0b\u90fd\u6709\u6548\u5c31\u5f97\u7559\u7740\u8fd9\u884c\u3002 \u56e0\u4e3a\u6765\u81ea\u6df1\u5ea6\u8d34\u56fe\u7684\u6df1\u5ea6\u57280\u52301\u7684\u8303\u56f4\uff0c\u6211\u4eec\u4e5f\u6253\u7b97\u4f7f\u7528projCoords\u4ece\u6df1\u5ea6\u8d34\u56fe\u4e2d\u53bb\u91c7\u6837\uff0c\u6240\u4ee5\u6211\u4eec\u5c06NDC\u5750\u6807\u53d8\u6362\u4e3a0\u52301\u7684\u8303\u56f4\u3002 \uff08\u8bd1\u8005\u6ce8\uff1a\u8fd9\u91cc\u7684\u610f\u601d\u662f\uff0c\u4e0a\u9762\u7684projCoords\u7684xyz\u5206\u91cf\u90fd\u662f[-1,1]\uff08\u4e0b\u9762\u4f1a\u6307\u51fa\u8fd9\u5bf9\u4e8e\u8fdc\u5e73\u9762\u4e4b\u7c7b\u7684\u70b9\u624d\u6210\u7acb\uff09\uff0c\u800c\u4e3a\u4e86\u548c\u6df1\u5ea6\u8d34\u56fe\u7684\u6df1\u5ea6\u76f8\u6bd4\u8f83\uff0cz\u5206\u91cf\u9700\u8981\u53d8\u6362\u5230[0,1]\uff1b\u4e3a\u4e86\u4f5c\u4e3a\u4ece\u6df1\u5ea6\u8d34\u56fe\u4e2d\u91c7\u6837\u7684\u5750\u6807\uff0cxy\u5206\u91cf\u4e5f\u9700\u8981\u53d8\u6362\u5230[0,1]\u3002\u6240\u4ee5\u6574\u4e2aprojCoords\u5411\u91cf\u90fd\u9700\u8981\u53d8\u6362\u5230[0,1]\u8303\u56f4\u3002\uff09 projCoords = projCoords * 0.5 + 0.5; \u6709\u4e86\u8fd9\u4e9b\u6295\u5f71\u5750\u6807\uff0c\u6211\u4eec\u5c31\u80fd\u4ece\u6df1\u5ea6\u8d34\u56fe\u4e2d\u91c7\u6837\u5f97\u52300\u52301\u7684\u7ed3\u679c\uff0c\u4ece\u7b2c\u4e00\u4e2a\u6e32\u67d3\u9636\u6bb5\u7684projCoords\u5750\u6807\u76f4\u63a5\u5bf9\u5e94\u4e8e\u53d8\u6362\u8fc7\u7684NDC\u5750\u6807\u3002\u6211\u4eec\u5c06\u5f97\u5230\u5149\u7684\u4f4d\u7f6e\u89c6\u91ce\u4e0b\u6700\u8fd1\u7684\u6df1\u5ea6\uff1a float closestDepth = texture(shadowMap, projCoords.xy).r; \u4e3a\u4e86\u5f97\u5230\u7247\u6bb5\u7684\u5f53\u524d\u6df1\u5ea6\uff0c\u6211\u4eec\u7b80\u5355\u83b7\u53d6\u6295\u5f71\u5411\u91cf\u7684z\u5750\u6807\uff0c\u5b83\u7b49\u4e8e\u6765\u81ea\u5149\u7684\u900f\u89c6\u89c6\u89d2\u7684\u7247\u6bb5\u7684\u6df1\u5ea6\u3002 float currentDepth = projCoords.z; \u5b9e\u9645\u7684\u5bf9\u6bd4\u5c31\u662f\u7b80\u5355\u68c0\u67e5currentDepth\u662f\u5426\u9ad8\u4e8eclosetDepth\uff0c\u5982\u679c\u662f\uff0c\u90a3\u4e48\u7247\u6bb5\u5c31\u5728\u9634\u5f71\u4e2d\u3002 float shadow = currentDepth > closestDepth ? 1.0 : 0.0; \u5b8c\u6574\u7684shadowCalculation\u51fd\u6570\u662f\u8fd9\u6837\u7684\uff1a float ShadowCalculation(vec4 fragPosLightSpace) { // \u6267\u884c\u900f\u89c6\u9664\u6cd5 vec3 projCoords = fragPosLightSpace.xyz / fragPosLightSpace.w; // \u53d8\u6362\u5230[0,1]\u7684\u8303\u56f4 projCoords = projCoords * 0.5 + 0.5; // \u53d6\u5f97\u6700\u8fd1\u70b9\u7684\u6df1\u5ea6(\u4f7f\u7528[0,1]\u8303\u56f4\u4e0b\u7684fragPosLight\u5f53\u5750\u6807) float closestDepth = texture(shadowMap, projCoords.xy).r; // \u53d6\u5f97\u5f53\u524d\u7247\u6bb5\u5728\u5149\u6e90\u89c6\u89d2\u4e0b\u7684\u6df1\u5ea6 float currentDepth = projCoords.z; // \u68c0\u67e5\u5f53\u524d\u7247\u6bb5\u662f\u5426\u5728\u9634\u5f71\u4e2d float shadow = currentDepth > closestDepth ? 1.0 : 0.0; return shadow; } \u6fc0\u6d3b\u8fd9\u4e2a\u7740\u8272\u5668\uff0c\u7ed1\u5b9a\u5408\u9002\u7684\u7eb9\u7406\uff0c\u6fc0\u6d3b\u7b2c\u4e8c\u4e2a\u6e32\u67d3\u9636\u6bb5\u9ed8\u8ba4\u7684\u6295\u5f71\u4ee5\u53ca\u89c6\u56fe\u77e9\u9635\uff0c\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5982\u679c\u4f60\u505a\u5bf9\u4e86\uff0c\u4f60\u4f1a\u770b\u5230\u5730\u677f\u548c\u4e0a\u6709\u7acb\u65b9\u4f53\u7684\u9634\u5f71\u3002\u4f60\u53ef\u4ee5\u4ece\u8fd9\u91cc\u627e\u5230demo\u7a0b\u5e8f\u7684 \u6e90\u7801 \u3002 \u6539\u8fdb\u9634\u5f71\u8d34\u56fe \u6211\u4eec\u8bd5\u56fe\u8ba9\u9634\u5f71\u6620\u5c04\u5de5\u4f5c\uff0c\u4f46\u662f\u4f60\u4e5f\u770b\u5230\u4e86\uff0c\u9634\u5f71\u6620\u5c04\u8fd8\u662f\u6709\u70b9\u4e0d\u771f\u5b9e\uff0c\u6211\u4eec\u4fee\u590d\u5b83\u624d\u80fd\u83b7\u5f97\u66f4\u597d\u7684\u6548\u679c\uff0c\u8fd9\u662f\u4e0b\u9762\u7684\u90e8\u5206\u6240\u5173\u6ce8\u7684\u7126\u70b9\u3002 \u9634\u5f71\u5931\u771f \u524d\u9762\u7684\u56fe\u7247\u4e2d\u660e\u663e\u6709\u4e0d\u5bf9\u7684\u5730\u65b9\u3002\u653e\u5927\u770b\u4f1a\u53d1\u73b0\u660e\u663e\u7684\u7ebf\u6761\u6837\u5f0f\uff1a \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5730\u677f\u56db\u8fb9\u5f62\u6e32\u67d3\u51fa\u5f88\u5927\u4e00\u5757\u4ea4\u66ff\u9ed1\u7ebf\u3002\u8fd9\u79cd\u9634\u5f71\u8d34\u56fe\u7684\u4e0d\u771f\u5b9e\u611f\u53eb\u505a \u9634\u5f71\u5931\u771f(Shadow Acne) \uff0c\u4e0b\u56fe\u89e3\u91ca\u4e86\u6210\u56e0\uff1a \u56e0\u4e3a\u9634\u5f71\u8d34\u56fe\u53d7\u9650\u4e8e\u5206\u8fa8\u7387\uff0c\u5728\u8ddd\u79bb\u5149\u6e90\u6bd4\u8f83\u8fdc\u7684\u60c5\u51b5\u4e0b\uff0c\u591a\u4e2a\u7247\u6bb5\u53ef\u80fd\u4ece\u6df1\u5ea6\u8d34\u56fe\u7684\u540c\u4e00\u4e2a\u503c\u4e2d\u53bb\u91c7\u6837\u3002\u56fe\u7247\u6bcf\u4e2a\u659c\u5761\u4ee3\u8868\u6df1\u5ea6\u8d34\u56fe\u4e00\u4e2a\u5355\u72ec\u7684\u7eb9\u7406\u50cf\u7d20\u3002\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u591a\u4e2a\u7247\u6bb5\u4ece\u540c\u4e00\u4e2a\u6df1\u5ea6\u503c\u8fdb\u884c\u91c7\u6837\u3002 \u867d\u7136\u5f88\u591a\u65f6\u5019\u6ca1\u95ee\u9898\uff0c\u4f46\u662f\u5f53\u5149\u6e90\u4ee5\u4e00\u4e2a\u89d2\u5ea6\u671d\u5411\u8868\u9762\u7684\u65f6\u5019\u5c31\u4f1a\u51fa\u95ee\u9898\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6df1\u5ea6\u8d34\u56fe\u4e5f\u662f\u4ece\u4e00\u4e2a\u89d2\u5ea6\u4e0b\u8fdb\u884c\u6e32\u67d3\u7684\u3002\u591a\u4e2a\u7247\u6bb5\u5c31\u4f1a\u4ece\u540c\u4e00\u4e2a\u659c\u5761\u7684\u6df1\u5ea6\u7eb9\u7406\u50cf\u7d20\u4e2d\u91c7\u6837\uff0c\u6709\u4e9b\u5728\u5730\u677f\u4e0a\u9762\uff0c\u6709\u4e9b\u5728\u5730\u677f\u4e0b\u9762\uff1b\u8fd9\u6837\u6211\u4eec\u6240\u5f97\u5230\u7684\u9634\u5f71\u5c31\u6709\u4e86\u5dee\u5f02\u3002\u56e0\u4e3a\u8fd9\u4e2a\uff0c\u6709\u4e9b\u7247\u6bb5\u88ab\u8ba4\u4e3a\u662f\u5728\u9634\u5f71\u4e4b\u4e2d\uff0c\u6709\u4e9b\u4e0d\u5728\uff0c\u7531\u6b64\u4ea7\u751f\u4e86\u56fe\u7247\u4e2d\u7684\u6761\u7eb9\u6837\u5f0f\u3002 \u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u53eb\u505a \u9634\u5f71\u504f\u79fb \uff08shadow bias\uff09\u7684\u6280\u5de7\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u7b80\u5355\u7684\u5bf9\u8868\u9762\u7684\u6df1\u5ea6\uff08\u6216\u6df1\u5ea6\u8d34\u56fe\uff09\u5e94\u7528\u4e00\u4e2a\u504f\u79fb\u91cf\uff0c\u8fd9\u6837\u7247\u6bb5\u5c31\u4e0d\u4f1a\u88ab\u9519\u8bef\u5730\u8ba4\u4e3a\u5728\u8868\u9762\u4e4b\u4e0b\u4e86\u3002 \u4f7f\u7528\u4e86\u504f\u79fb\u91cf\u540e\uff0c\u6240\u6709\u91c7\u6837\u70b9\u90fd\u83b7\u5f97\u4e86\u6bd4\u8868\u9762\u6df1\u5ea6\u66f4\u5c0f\u7684\u6df1\u5ea6\u503c\uff0c\u8fd9\u6837\u6574\u4e2a\u8868\u9762\u5c31\u6b63\u786e\u5730\u88ab\u7167\u4eae\uff0c\u6ca1\u6709\u4efb\u4f55\u9634\u5f71\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0\u8fd9\u4e2a\u504f\u79fb\uff1a float bias = 0.005; float shadow = currentDepth - bias > closestDepth ? 1.0 : 0.0; \u4e00\u4e2a0.005\u7684\u504f\u79fb\u5c31\u80fd\u5e2e\u5230\u5f88\u5927\u7684\u5fd9\uff0c\u4f46\u662f\u6709\u4e9b\u8868\u9762\u5761\u5ea6\u5f88\u5927\uff0c\u4ecd\u7136\u4f1a\u4ea7\u751f\u9634\u5f71\u5931\u771f\u3002\u6709\u4e00\u4e2a\u66f4\u52a0\u53ef\u9760\u7684\u529e\u6cd5\u80fd\u591f\u6839\u636e\u8868\u9762\u671d\u5411\u5149\u7ebf\u7684\u89d2\u5ea6\u66f4\u6539\u504f\u79fb\u91cf\uff1a\u4f7f\u7528\u70b9\u4e58\uff1a float bias = max(0.05 * (1.0 - dot(normal, lightDir)), 0.005); \u8fd9\u91cc\u6211\u4eec\u6709\u4e00\u4e2a\u504f\u79fb\u91cf\u7684\u6700\u5927\u503c0.05\uff0c\u548c\u4e00\u4e2a\u6700\u5c0f\u503c0.005\uff0c\u5b83\u4eec\u662f\u57fa\u4e8e\u8868\u9762\u6cd5\u7ebf\u548c\u5149\u7167\u65b9\u5411\u7684\u3002\u8fd9\u6837\u50cf\u5730\u677f\u8fd9\u6837\u7684\u8868\u9762\u51e0\u4e4e\u4e0e\u5149\u6e90\u5782\u76f4\uff0c\u5f97\u5230\u7684\u504f\u79fb\u5c31\u5f88\u5c0f\uff0c\u800c\u6bd4\u5982\u7acb\u65b9\u4f53\u7684\u4fa7\u9762\u8fd9\u79cd\u8868\u9762\u5f97\u5230\u7684\u504f\u79fb\u5c31\u66f4\u5927\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u540c\u4e00\u4e2a\u573a\u666f\uff0c\u4f46\u4f7f\u7528\u4e86\u9634\u5f71\u504f\u79fb\uff0c\u6548\u679c\u7684\u786e\u66f4\u597d\uff1a \u9009\u7528\u6b63\u786e\u7684\u504f\u79fb\u6570\u503c\uff0c\u5728\u4e0d\u540c\u7684\u573a\u666f\u4e2d\u9700\u8981\u4e00\u4e9b\u50cf\u8fd9\u6837\u7684\u8f7b\u5fae\u8c03\u6821\uff0c\u4f46\u5927\u591a\u60c5\u51b5\u4e0b\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u589e\u52a0\u504f\u79fb\u91cf\u76f4\u5230\u6240\u6709\u5931\u771f\u90fd\u88ab\u79fb\u9664\u7684\u95ee\u9898\u3002 \u60ac\u6d6e \u4f7f\u7528\u9634\u5f71\u504f\u79fb\u7684\u4e00\u4e2a\u7f3a\u70b9\u662f\u4f60\u5bf9\u7269\u4f53\u7684\u5b9e\u9645\u6df1\u5ea6\u5e94\u7528\u4e86\u5e73\u79fb\u3002\u504f\u79fb\u6709\u53ef\u80fd\u8db3\u591f\u5927\uff0c\u4ee5\u81f3\u4e8e\u53ef\u4ee5\u770b\u51fa\u9634\u5f71\u76f8\u5bf9\u5b9e\u9645\u7269\u4f53\u4f4d\u7f6e\u7684\u504f\u79fb\uff0c\u4f60\u53ef\u4ee5\u4ece\u4e0b\u56fe\u770b\u5230\u8fd9\u4e2a\u73b0\u8c61\uff08\u8fd9\u662f\u4e00\u4e2a\u5938\u5f20\u7684\u504f\u79fb\u503c\uff09\uff1a \u8fd9\u4e2a\u9634\u5f71\u5931\u771f\u53eb\u505a\u60ac\u6d6e(Peter Panning)\uff0c\u56e0\u4e3a\u7269\u4f53\u770b\u8d77\u6765\u8f7b\u8f7b\u60ac\u6d6e\u5728\u8868\u9762\u4e4b\u4e0a\uff08\u8bd1\u6ce8Peter Pan\u5c31\u662f\u7ae5\u8bdd\u5f7c\u5f97\u6f58\uff0c\u800cpanning\u6709\u5e73\u79fb\u3001\u60ac\u6d6e\u4e4b\u610f\uff0c\u800c\u4e14\u5f7c\u5f97\u6f58\u662f\u4e2a\u4f1a\u98de\u7684\u7537\u5b69\u2026\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u53eb\u6280\u5de7\u89e3\u51b3\u5927\u90e8\u5206\u7684Peter panning\u95ee\u9898\uff1a\u5f53\u6e32\u67d3\u6df1\u5ea6\u8d34\u56fe\u65f6\u5019\u4f7f\u7528\u6b63\u9762\u5254\u9664\uff08front face culling\uff09\u4f60\u4e5f\u8bb8\u8bb0\u5f97\u5728\u9762\u5254\u9664\u6559\u7a0b\u4e2dOpenGL\u9ed8\u8ba4\u662f\u80cc\u9762\u5254\u9664\u3002\u6211\u4eec\u8981\u544a\u8bc9OpenGL\u6211\u4eec\u8981\u5254\u9664\u6b63\u9762\u3002 \u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u8981\u6df1\u5ea6\u8d34\u56fe\u7684\u6df1\u5ea6\u503c\uff0c\u5bf9\u4e8e\u5b9e\u4f53\u7269\u4f53\u65e0\u8bba\u6211\u4eec\u7528\u5b83\u4eec\u7684\u6b63\u9762\u8fd8\u662f\u80cc\u9762\u90fd\u6ca1\u95ee\u9898\u3002\u4f7f\u7528\u80cc\u9762\u6df1\u5ea6\u4e0d\u4f1a\u6709\u9519\u8bef\uff0c\u56e0\u4e3a\u9634\u5f71\u5728\u7269\u4f53\u5185\u90e8\u6709\u9519\u8bef\u6211\u4eec\u4e5f\u770b\u4e0d\u89c1\u3002 \u4e3a\u4e86\u4fee\u590dpeter\u6e38\u79fb\uff0c\u6211\u4eec\u8981\u8fdb\u884c\u6b63\u9762\u5254\u9664\uff0c\u5148\u5fc5\u987b\u5f00\u542fGL_CULL_FACE\uff1a glCullFace(GL_FRONT); RenderSceneToDepthMap(); glCullFace(GL_BACK); // \u4e0d\u8981\u5fd8\u8bb0\u8bbe\u56de\u539f\u5148\u7684culling face \u8fd9\u5341\u5206\u6709\u6548\u5730\u89e3\u51b3\u4e86peter panning\u7684\u95ee\u9898\uff0c\u4f46\u53ea\u5bf9\u5185\u90e8\u4e0d\u4f1a\u5bf9\u5916\u5f00\u53e3\u7684\u5b9e\u4f53\u7269\u4f53\u6709\u6548\u3002\u6211\u4eec\u7684\u573a\u666f\u4e2d\uff0c\u5728\u7acb\u65b9\u4f53\u4e0a\u5de5\u4f5c\u7684\u5f88\u597d\uff0c\u4f46\u5728\u5730\u677f\u4e0a\u65e0\u6548\uff0c\u56e0\u4e3a\u6b63\u9762\u5254\u9664\u5b8c\u5168\u79fb\u9664\u4e86\u5730\u677f\u3002\u5730\u9762\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5e73\u9762\uff0c\u4e0d\u4f1a\u88ab\u5b8c\u5168\u5254\u9664\u3002\u5982\u679c\u6709\u4eba\u6253\u7b97\u4f7f\u7528\u8fd9\u4e2a\u6280\u5de7\u89e3\u51b3peter panning\u5fc5\u987b\u8003\u8651\u5230\u53ea\u6709\u5254\u9664\u7269\u4f53\u7684\u6b63\u9762\u624d\u6709\u610f\u4e49\u3002 \u53e6\u4e00\u4e2a\u8981\u8003\u8651\u5230\u7684\u5730\u65b9\u662f\u63a5\u8fd1\u9634\u5f71\u7684\u7269\u4f53\u4ecd\u7136\u4f1a\u51fa\u73b0\u4e0d\u6b63\u786e\u7684\u6548\u679c\u3002\u5fc5\u987b\u8003\u8651\u5230\u4f55\u65f6\u4f7f\u7528\u6b63\u9762\u5254\u9664\u5bf9\u7269\u4f53\u624d\u6709\u610f\u4e49\u3002\u4e0d\u8fc7\u4f7f\u7528\u666e\u901a\u7684\u504f\u79fb\u503c\u901a\u5e38\u5c31\u80fd\u907f\u514dpeter panning\u3002 \u91c7\u6837\u8fc7\u591a \u65e0\u8bba\u4f60\u559c\u4e0d\u559c\u6b22\u8fd8\u6709\u4e00\u4e2a\u89c6\u89c9\u5dee\u5f02\uff0c\u5c31\u662f\u5149\u7684\u89c6\u9525\u4e0d\u53ef\u89c1\u7684\u533a\u57df\u4e00\u5f8b\u88ab\u8ba4\u4e3a\u662f\u5904\u4e8e\u9634\u5f71\u4e2d\uff0c\u4e0d\u7ba1\u5b83\u771f\u7684\u5904\u4e8e\u9634\u5f71\u4e4b\u4e2d\u3002\u51fa\u73b0\u8fd9\u4e2a\u72b6\u51b5\u662f\u56e0\u4e3a\u8d85\u51fa\u5149\u7684\u89c6\u9525\u7684\u6295\u5f71\u5750\u6807\u6bd41.0\u5927\uff0c\u8fd9\u6837\u91c7\u6837\u7684\u6df1\u5ea6\u7eb9\u7406\u5c31\u4f1a\u8d85\u51fa\u4ed6\u9ed8\u8ba4\u76840\u52301\u7684\u8303\u56f4\u3002\u6839\u636e\u7eb9\u7406\u73af\u7ed5\u65b9\u5f0f\uff0c\u6211\u4eec\u5c06\u4f1a\u5f97\u5230\u4e0d\u6b63\u786e\u7684\u6df1\u5ea6\u7ed3\u679c\uff0c\u5b83\u4e0d\u662f\u57fa\u4e8e\u771f\u5b9e\u7684\u6765\u81ea\u5149\u6e90\u7684\u6df1\u5ea6\u503c\u3002 \u4f60\u53ef\u4ee5\u5728\u56fe\u4e2d\u770b\u5230\uff0c\u5149\u7167\u6709\u4e00\u4e2a\u533a\u57df\uff0c\u8d85\u51fa\u8be5\u533a\u57df\u5c31\u6210\u4e3a\u4e86\u9634\u5f71\uff1b\u8fd9\u4e2a\u533a\u57df\u5b9e\u9645\u4e0a\u4ee3\u8868\u7740\u6df1\u5ea6\u8d34\u56fe\u7684\u5927\u5c0f\uff0c\u8fd9\u4e2a\u8d34\u56fe\u6295\u5f71\u5230\u4e86\u5730\u677f\u4e0a\u3002\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u7684\u539f\u56e0\u662f\u6211\u4eec\u4e4b\u524d\u5c06\u6df1\u5ea6\u8d34\u56fe\u7684\u73af\u7ed5\u65b9\u5f0f\u8bbe\u7f6e\u6210\u4e86GL_REPEAT\u3002 \u6211\u4eec\u5b81\u53ef\u8ba9\u6240\u6709\u8d85\u51fa\u6df1\u5ea6\u8d34\u56fe\u7684\u5750\u6807\u7684\u6df1\u5ea6\u8303\u56f4\u662f1.0\uff0c\u8fd9\u6837\u8d85\u51fa\u7684\u5750\u6807\u5c06\u6c38\u8fdc\u4e0d\u5728\u9634\u5f71\u4e4b\u4e2d\u3002\u6211\u4eec\u53ef\u4ee5\u50a8\u5b58\u4e00\u4e2a\u8fb9\u6846\u989c\u8272\uff0c\u7136\u540e\u628a\u6df1\u5ea6\u8d34\u56fe\u7684\u7eb9\u7406\u73af\u7ed5\u9009\u9879\u8bbe\u7f6e\u4e3aGL_CLAMP_TO_BORDER\uff1a glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_BORDER); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_BORDER); GLfloat borderColor[] = { 1.0, 1.0, 1.0, 1.0 }; glTexParameterfv(GL_TEXTURE_2D, GL_TEXTURE_BORDER_COLOR, borderColor); \u73b0\u5728\u5982\u679c\u6211\u4eec\u91c7\u6837\u6df1\u5ea6\u8d34\u56fe0\u52301\u5750\u6807\u8303\u56f4\u4ee5\u5916\u7684\u533a\u57df\uff0c\u7eb9\u7406\u51fd\u6570\u603b\u4f1a\u8fd4\u56de\u4e00\u4e2a1.0\u7684\u6df1\u5ea6\u503c\uff0c\u9634\u5f71\u503c\u4e3a0.0\u3002\u7ed3\u679c\u770b\u8d77\u6765\u4f1a\u66f4\u771f\u5b9e\uff1a \u4ecd\u6709\u4e00\u90e8\u5206\u662f\u9ed1\u6697\u533a\u57df\u3002\u90a3\u91cc\u7684\u5750\u6807\u8d85\u51fa\u4e86\u5149\u7684\u6b63\u4ea4\u89c6\u9525\u7684\u8fdc\u5e73\u9762\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u7247\u9ed1\u8272\u533a\u57df\u603b\u662f\u51fa\u73b0\u5728\u5149\u6e90\u89c6\u9525\u7684\u6781\u8fdc\u5904\u3002 \u5f53\u4e00\u4e2a\u70b9\u6bd4\u5149\u7684\u8fdc\u5e73\u9762\u8fd8\u8981\u8fdc\u65f6\uff0c\u5b83\u7684\u6295\u5f71\u5750\u6807\u7684z\u5750\u6807\u5927\u4e8e1.0\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cGL_CLAMP_TO_BORDER\u73af\u7ed5\u65b9\u5f0f\u4e0d\u8d77\u4f5c\u7528\uff0c\u56e0\u4e3a\u6211\u4eec\u628a\u5750\u6807\u7684z\u5143\u7d20\u548c\u6df1\u5ea6\u8d34\u56fe\u7684\u503c\u8fdb\u884c\u4e86\u5bf9\u6bd4\uff1b\u5b83\u603b\u662f\u4e3a\u5927\u4e8e1.0\u7684z\u8fd4\u56detrue\u3002 \u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e5f\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u6295\u5f71\u5411\u91cf\u7684z\u5750\u6807\u5927\u4e8e1.0\uff0c\u6211\u4eec\u5c31\u628ashadow\u7684\u503c\u5f3a\u5236\u8bbe\u4e3a0.0\uff1a float ShadowCalculation(vec4 fragPosLightSpace) { [...] if(projCoords.z > 1.0) shadow = 0.0; return shadow; } \u68c0\u67e5\u8fdc\u5e73\u9762\uff0c\u5e76\u5c06\u6df1\u5ea6\u8d34\u56fe\u9650\u5236\u4e3a\u4e00\u4e2a\u624b\u5de5\u6307\u5b9a\u7684\u8fb9\u754c\u989c\u8272\uff0c\u5c31\u80fd\u89e3\u51b3\u6df1\u5ea6\u8d34\u56fe\u91c7\u6837\u8d85\u51fa\u7684\u95ee\u9898\uff0c\u6211\u4eec\u6700\u7ec8\u4f1a\u5f97\u5230\u4e0b\u9762\u6211\u4eec\u6240\u8ffd\u6c42\u7684\u6548\u679c\uff1a \u8fd9\u4e9b\u7ed3\u679c\u610f\u5473\u7740\uff0c\u53ea\u6709\u5728\u6df1\u5ea6\u8d34\u56fe\u8303\u56f4\u4ee5\u5185\u7684\u88ab\u6295\u5f71\u7684fragment\u5750\u6807\u624d\u6709\u9634\u5f71\uff0c\u6240\u4ee5\u4efb\u4f55\u8d85\u51fa\u8303\u56f4\u7684\u90fd\u5c06\u4f1a\u6ca1\u6709\u9634\u5f71\u3002\u7531\u4e8e\u5728\u6e38\u620f\u4e2d\u901a\u5e38\u8fd9\u53ea\u53d1\u751f\u5728\u8fdc\u5904\uff0c\u5c31\u4f1a\u6bd4\u6211\u4eec\u4e4b\u524d\u7684\u90a3\u4e2a\u660e\u663e\u7684\u9ed1\u8272\u533a\u57df\u6548\u679c\u66f4\u771f\u5b9e\u3002 PCF \u9634\u5f71\u73b0\u5728\u5df2\u7ecf\u9644\u7740\u5230\u573a\u666f\u4e2d\u4e86\uff0c\u4e0d\u8fc7\u8fd9\u4ecd\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\u5982\u679c\u4f60\u653e\u5927\u770b\u9634\u5f71\uff0c\u9634\u5f71\u6620\u5c04\u5bf9\u5206\u8fa8\u7387\u7684\u4f9d\u8d56\u5f88\u5feb\u53d8\u5f97\u5f88\u660e\u663e\u3002 \u56e0\u4e3a\u6df1\u5ea6\u8d34\u56fe\u6709\u4e00\u4e2a\u56fa\u5b9a\u7684\u5206\u8fa8\u7387\uff0c\u591a\u4e2a\u7247\u6bb5\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u7eb9\u7406\u50cf\u7d20\u3002\u7ed3\u679c\u5c31\u662f\u591a\u4e2a\u7247\u6bb5\u4f1a\u4ece\u6df1\u5ea6\u8d34\u56fe\u7684\u540c\u4e00\u4e2a\u6df1\u5ea6\u503c\u8fdb\u884c\u91c7\u6837\uff0c\u8fd9\u51e0\u4e2a\u7247\u6bb5\u4fbf\u5f97\u5230\u7684\u662f\u540c\u4e00\u4e2a\u9634\u5f71\uff0c\u8fd9\u5c31\u4f1a\u4ea7\u751f\u952f\u9f7f\u8fb9\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u6df1\u5ea6\u8d34\u56fe\u7684\u5206\u8fa8\u7387\u7684\u65b9\u5f0f\u6765\u964d\u4f4e\u952f\u9f7f\u5757\uff0c\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u5c3d\u53ef\u80fd\u7684\u8ba9\u5149\u7684\u89c6\u9525\u63a5\u8fd1\u573a\u666f\u3002 \u53e6\u4e00\u4e2a\uff08\u5e76\u4e0d\u5b8c\u6574\u7684\uff09\u89e3\u51b3\u65b9\u6848\u53eb\u505aPCF\uff08percentage-closer filtering\uff09\uff0c\u8fd9\u662f\u4e00\u79cd\u591a\u4e2a\u4e0d\u540c\u8fc7\u6ee4\u65b9\u5f0f\u7684\u7ec4\u5408\uff0c\u5b83\u4ea7\u751f\u67d4\u548c\u9634\u5f71\uff0c\u4f7f\u5b83\u4eec\u51fa\u73b0\u66f4\u5c11\u7684\u952f\u9f7f\u5757\u548c\u786c\u8fb9\u3002\u6838\u5fc3\u601d\u60f3\u662f\u4ece\u6df1\u5ea6\u8d34\u56fe\u4e2d\u591a\u6b21\u91c7\u6837\uff0c\u6bcf\u4e00\u6b21\u91c7\u6837\u7684\u7eb9\u7406\u5750\u6807\u90fd\u7a0d\u6709\u4e0d\u540c\u3002\u6bcf\u4e2a\u72ec\u7acb\u7684\u6837\u672c\u53ef\u80fd\u5728\u4e5f\u53ef\u80fd\u4e0d\u518d\u9634\u5f71\u4e2d\u3002\u6240\u6709\u7684\u6b21\u751f\u7ed3\u679c\u63a5\u7740\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u8fdb\u884c\u5e73\u5747\u5316\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u67d4\u548c\u9634\u5f71\u3002 \u4e00\u4e2a\u7b80\u5355\u7684PCF\u7684\u5b9e\u73b0\u662f\u7b80\u5355\u7684\u4ece\u7eb9\u7406\u50cf\u7d20\u56db\u5468\u5bf9\u6df1\u5ea6\u8d34\u56fe\u91c7\u6837\uff0c\u7136\u540e\u628a\u7ed3\u679c\u5e73\u5747\u8d77\u6765\uff1a float shadow = 0.0; vec2 texelSize = 1.0 / textureSize(shadowMap, 0); for(int x = -1; x <= 1; ++x) { for(int y = -1; y <= 1; ++y) { float pcfDepth = texture(shadowMap, projCoords.xy + vec2(x, y) * texelSize).r; shadow += currentDepth - bias > pcfDepth ? 1.0 : 0.0; } } shadow /= 9.0; \u8fd9\u4e2atextureSize\u8fd4\u56de\u4e00\u4e2a\u7ed9\u5b9a\u91c7\u6837\u5668\u7eb9\u7406\u76840\u7ea7mipmap\u7684vec2\u7c7b\u578b\u7684\u5bbd\u548c\u9ad8\u3002\u75281\u9664\u4ee5\u5b83\u8fd4\u56de\u4e00\u4e2a\u5355\u72ec\u7eb9\u7406\u50cf\u7d20\u7684\u5927\u5c0f\uff0c\u6211\u4eec\u7528\u4ee5\u5bf9\u7eb9\u7406\u5750\u6807\u8fdb\u884c\u504f\u79fb\uff0c\u786e\u4fdd\u6bcf\u4e2a\u65b0\u6837\u672c\uff0c\u6765\u81ea\u4e0d\u540c\u7684\u6df1\u5ea6\u503c\u3002\u8fd9\u91cc\u6211\u4eec\u91c7\u6837\u5f97\u52309\u4e2a\u503c\uff0c\u5b83\u4eec\u5728\u6295\u5f71\u5750\u6807\u7684x\u548cy\u503c\u7684\u5468\u56f4\uff0c\u4e3a\u9634\u5f71\u963b\u6321\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5e76\u6700\u7ec8\u901a\u8fc7\u6837\u672c\u7684\u603b\u6570\u76ee\u5c06\u7ed3\u679c\u5e73\u5747\u5316\u3002 \u4f7f\u7528\u66f4\u591a\u7684\u6837\u672c\uff0c\u66f4\u6539texelSize\u53d8\u91cf\uff0c\u4f60\u5c31\u53ef\u4ee5\u589e\u52a0\u9634\u5f71\u7684\u67d4\u548c\u7a0b\u5ea6\u3002\u4e0b\u9762\u4f60\u53ef\u4ee5\u770b\u5230\u5e94\u7528\u4e86PCF\u7684\u9634\u5f71\uff1a \u4ece\u7a0d\u5fae\u8fdc\u4e00\u70b9\u7684\u8ddd\u79bb\u770b\u53bb\uff0c\u9634\u5f71\u6548\u679c\u597d\u591a\u4e86\uff0c\u4e5f\u4e0d\u90a3\u4e48\u751f\u786c\u4e86\u3002\u5982\u679c\u4f60\u653e\u5927\uff0c\u4ecd\u4f1a\u770b\u5230\u9634\u5f71\u8d34\u56fe\u5206\u8fa8\u7387\u7684\u4e0d\u771f\u5b9e\u611f\uff0c\u4f46\u901a\u5e38\u5bf9\u4e8e\u5927\u591a\u6570\u5e94\u7528\u6765\u8bf4\u6548\u679c\u5df2\u7ecf\u5f88\u597d\u4e86\u3002 \u4f60\u53ef\u4ee5\u4ece \u8fd9\u91cc \u627e\u5230\u8fd9\u4e2a\u4f8b\u5b50\u7684\u5168\u90e8\u6e90\u7801\u548c\u7b2c\u4e8c\u4e2a\u9636\u6bb5\u7684 \u9876\u70b9 \u548c \u7247\u6bb5 \u7740\u8272\u5668\u3002 \u5b9e\u9645\u4e0aPCF\u8fd8\u6709\u66f4\u591a\u7684\u5185\u5bb9\uff0c\u4ee5\u53ca\u5f88\u591a\u6280\u672f\u8981\u70b9\u9700\u8981\u8003\u8651\u4ee5\u63d0\u5347\u67d4\u548c\u9634\u5f71\u7684\u6548\u679c\uff0c\u4f46\u5904\u4e8e\u672c\u7ae0\u5185\u5bb9\u957f\u5ea6\u8003\u8651\uff0c\u6211\u4eec\u5c06\u7559\u5728\u4ee5\u540e\u8ba8\u8bba\u3002 \u6b63\u4ea4 vs \u6295\u5f71 \u5728\u6e32\u67d3\u6df1\u5ea6\u8d34\u56fe\u7684\u65f6\u5019\uff0c\u6b63\u4ea4(Orthographic)\u548c\u6295\u5f71(Projection)\u77e9\u9635\u4e4b\u95f4\u6709\u6240\u4e0d\u540c\u3002\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u5e76\u4e0d\u4f1a\u5c06\u573a\u666f\u7528\u900f\u89c6\u56fe\u8fdb\u884c\u53d8\u5f62\uff0c\u6240\u6709\u89c6\u7ebf/\u5149\u7ebf\u90fd\u662f\u5e73\u884c\u7684\uff0c\u8fd9\u4f7f\u5b83\u5bf9\u4e8e\u5b9a\u5411\u5149\u6765\u8bf4\u662f\u4e2a\u5f88\u597d\u7684\u6295\u5f71\u77e9\u9635\u3002\u7136\u800c\u900f\u89c6\u6295\u5f71\u77e9\u9635\uff0c\u4f1a\u5c06\u6240\u6709\u9876\u70b9\u6839\u636e\u900f\u89c6\u5173\u7cfb\u8fdb\u884c\u53d8\u5f62\uff0c\u7ed3\u679c\u56e0\u6b64\u800c\u4e0d\u540c\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u4e24\u79cd\u6295\u5f71\u65b9\u5f0f\u6240\u4ea7\u751f\u7684\u4e0d\u540c\u9634\u5f71\u533a\u57df\uff1a \u900f\u89c6\u6295\u5f71\u5bf9\u4e8e\u5149\u6e90\u6765\u8bf4\u66f4\u5408\u7406\uff0c\u4e0d\u50cf\u5b9a\u5411\u5149\uff0c\u5b83\u662f\u6709\u81ea\u5df1\u7684\u4f4d\u7f6e\u7684\u3002\u900f\u89c6\u6295\u5f71\u56e0\u6b64\u66f4\u7ecf\u5e38\u7528\u5728\u70b9\u5149\u6e90\u548c\u805a\u5149\u706f\u4e0a\uff0c\u800c\u6b63\u4ea4\u6295\u5f71\u7ecf\u5e38\u7528\u5728\u5b9a\u5411\u5149\u4e0a\u3002 \u53e6\u4e00\u4e2a\u7ec6\u5fae\u5dee\u522b\u662f\uff0c\u900f\u89c6\u6295\u5f71\u77e9\u9635\uff0c\u5c06\u6df1\u5ea6\u7f13\u51b2\u89c6\u89c9\u5316\u7ecf\u5e38\u4f1a\u5f97\u5230\u4e00\u4e2a\u51e0\u4e4e\u5168\u767d\u7684\u7ed3\u679c\u3002\u53d1\u751f\u8fd9\u4e2a\u662f\u56e0\u4e3a\u900f\u89c6\u6295\u5f71\u4e0b\uff0c\u6df1\u5ea6\u53d8\u6210\u4e86\u975e\u7ebf\u6027\u7684\u6df1\u5ea6\u503c\uff0c\u5b83\u7684\u5927\u591a\u6570\u53ef\u8fa8\u8303\u56f4\u90fd\u4f4d\u4e8e\u8fd1\u5e73\u9762\u9644\u8fd1\u3002\u4e3a\u4e86\u53ef\u4ee5\u50cf\u4f7f\u7528\u6b63\u4ea4\u6295\u5f71\u4e00\u6837\u5408\u9002\u5730\u89c2\u5bdf\u6df1\u5ea6\u503c\uff0c\u4f60\u5fc5\u987b\u5148\u5c06\u975e\u7ebf\u6027\u6df1\u5ea6\u503c\u8f6c\u53d8\u4e3a\u7ebf\u6027\u7684\uff0c\u5982\u6211\u4eec\u5728\u6df1\u5ea6\u6d4b\u8bd5\u6559\u7a0b\u4e2d\u5df2\u7ecf\u8ba8\u8bba\u8fc7\u7684\u90a3\u6837\u3002 #version 330 core out vec4 color; in vec2 TexCoords; uniform sampler2D depthMap; uniform float near_plane; uniform float far_plane; float LinearizeDepth(float depth) { float z = depth * 2.0 - 1.0; // Back to NDC return (2.0 * near_plane * far_plane) / (far_plane + near_plane - z * (far_plane - near_plane)); } void main() { float depthValue = texture(depthMap, TexCoords).r; color = vec4(vec3(LinearizeDepth(depthValue) / far_plane), 1.0); // perspective // color = vec4(vec3(depthValue), 1.0); // orthographic } \u8fd9\u4e2a\u6df1\u5ea6\u503c\u4e0e\u6211\u4eec\u89c1\u5230\u7684\u7528\u6b63\u4ea4\u6295\u5f71\u7684\u5f88\u76f8\u4f3c\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e2a\u53ea\u9002\u7528\u4e8e\u8c03\u8bd5\uff1b\u6b63\u4ea4\u6216\u6295\u5f71\u77e9\u9635\u7684\u6df1\u5ea6\u68c0\u67e5\u4ecd\u7136\u4fdd\u6301\u539f\u6837\uff0c\u56e0\u4e3a\u76f8\u5173\u7684\u6df1\u5ea6\u5e76\u6ca1\u6709\u6539\u53d8\u3002 \u9644\u52a0\u8d44\u6e90 Tutorial 16 : Shadow mapping \uff1a\u63d0\u4f9b\u7684\u7c7b\u4f3c\u7684\u9634\u5f71\u6620\u5c04\u6559\u7a0b\uff0c\u91cc\u9762\u6709\u4e00\u4e9b\u989d\u5916\u7684\u89e3\u91ca\u3002 Shadow Mapping \u2013 Part 1\uff1aogldev \uff1a\u63d0\u4f9b\u7684\u53e6\u4e00\u4e2a\u9634\u5f71\u6620\u5c04\u6559\u7a0b\u3002 How Shadow Mapping Works \uff1a\u7684\u4e00\u4e2a\u7b2c\u4e09\u65b9YouTube\u89c6\u9891\u6559\u7a0b\uff0c\u91cc\u9762\u89e3\u91ca\u4e86\u9634\u5f71\u6620\u5c04\u53ca\u5176\u5b9e\u73b0\u3002 Common Techniques to Improve Shadow Depth Maps \uff1a\u5fae\u8f6f\u7684\u4e00\u7bc7\u597d\u6587\u7ae0\uff0c\u5176\u4e2d\u7406\u51fa\u4e86\u5f88\u591a\u63d0\u5347\u9634\u5f71\u8d34\u56fe\u8d28\u91cf\u7684\u6280\u672f\u3002","title":"\u9634\u5f71\u6620\u5c04"},{"location":"05%20Advanced%20Lighting/03%20Shadows/01%20Shadow%20Mapping/#_1","text":"\u539f\u6587 Shadow Mapping \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django \u6821\u5bf9 gjy_1992 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u9634\u5f71\u662f\u5149\u7ebf\u88ab\u963b\u6321\u7684\u7ed3\u679c\uff1b\u5f53\u4e00\u4e2a\u5149\u6e90\u7684\u5149\u7ebf\u7531\u4e8e\u5176\u4ed6\u7269\u4f53\u7684\u963b\u6321\u4e0d\u80fd\u591f\u8fbe\u5230\u4e00\u4e2a\u7269\u4f53\u7684\u8868\u9762\u7684\u65f6\u5019\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7269\u4f53\u5c31\u5728\u9634\u5f71\u4e2d\u4e86\u3002\u9634\u5f71\u80fd\u591f\u4f7f\u573a\u666f\u770b\u8d77\u6765\u771f\u5b9e\u5f97\u591a\uff0c\u5e76\u4e14\u53ef\u4ee5\u8ba9\u89c2\u5bdf\u8005\u83b7\u5f97\u7269\u4f53\u4e4b\u95f4\u7684\u7a7a\u95f4\u4f4d\u7f6e\u5173\u7cfb\u3002\u573a\u666f\u548c\u7269\u4f53\u7684\u6df1\u5ea6\u611f\u56e0\u6b64\u80fd\u591f\u5f97\u5230\u6781\u5927\u63d0\u5347\uff0c\u4e0b\u56fe\u5c55\u793a\u4e86\u6709\u9634\u5f71\u548c\u6ca1\u6709\u9634\u5f71\u7684\u60c5\u51b5\u4e0b\u7684\u4e0d\u540c\uff1a \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6709\u9634\u5f71\u7684\u65f6\u5019\u4f60\u80fd\u66f4\u5bb9\u6613\u5730\u533a\u5206\u51fa\u7269\u4f53\u4e4b\u95f4\u7684\u4f4d\u7f6e\u5173\u7cfb\uff0c\u4f8b\u5982\uff0c\u5f53\u4f7f\u7528\u9634\u5f71\u7684\u65f6\u5019\u6d6e\u5728\u5730\u677f\u4e0a\u7684\u7acb\u65b9\u4f53\u7684\u4e8b\u5b9e\u66f4\u52a0\u6e05\u6670\u3002 \u9634\u5f71\u8fd8\u662f\u6bd4\u8f83\u4e0d\u597d\u5b9e\u73b0\u7684\uff0c\u56e0\u4e3a\u5f53\u524d\u5b9e\u65f6\u6e32\u67d3\u9886\u57df\u8fd8\u6ca1\u627e\u5230\u4e00\u79cd\u5b8c\u7f8e\u7684\u9634\u5f71\u7b97\u6cd5\u3002\u76ee\u524d\u6709\u51e0\u79cd\u8fd1\u4f3c\u9634\u5f71\u6280\u672f\uff0c\u4f46\u5b83\u4eec\u90fd\u6709\u81ea\u5df1\u7684\u5f31\u70b9\u548c\u4e0d\u8db3\uff0c\u8fd9\u70b9\u6211\u4eec\u5fc5\u987b\u8981\u8003\u8651\u5230\u3002 \u89c6\u9891\u6e38\u620f\u4e2d\u8f83\u591a\u4f7f\u7528\u7684\u4e00\u79cd\u6280\u672f\u662f\u9634\u5f71\u8d34\u56fe\uff08shadow mapping\uff09\uff0c\u6548\u679c\u4e0d\u9519\uff0c\u800c\u4e14\u76f8\u5bf9\u5bb9\u6613\u5b9e\u73b0\u3002\u9634\u5f71\u8d34\u56fe\u5e76\u4e0d\u96be\u4ee5\u7406\u89e3\uff0c\u6027\u80fd\u4e5f\u4e0d\u4f1a\u592a\u4f4e\uff0c\u800c\u4e14\u975e\u5e38\u5bb9\u6613\u6269\u5c55\u6210\u66f4\u9ad8\u7ea7\u7684\u7b97\u6cd5\uff08\u6bd4\u5982 Omnidirectional Shadow Maps \u548c Cascaded Shadow Maps \uff09\u3002","title":"\u9634\u5f71\u6620\u5c04"},{"location":"05%20Advanced%20Lighting/03%20Shadows/01%20Shadow%20Mapping/#_2","text":"\u9634\u5f71\u6620\u5c04(Shadow Mapping)\u80cc\u540e\u7684\u601d\u8def\u975e\u5e38\u7b80\u5355\uff1a\u6211\u4eec\u4ee5\u5149\u7684\u4f4d\u7f6e\u4e3a\u89c6\u89d2\u8fdb\u884c\u6e32\u67d3\uff0c\u6211\u4eec\u80fd\u770b\u5230\u7684\u4e1c\u897f\u90fd\u5c06\u88ab\u70b9\u4eae\uff0c\u770b\u4e0d\u89c1\u7684\u4e00\u5b9a\u662f\u5728\u9634\u5f71\u4e4b\u4e2d\u4e86\u3002\u5047\u8bbe\u6709\u4e00\u4e2a\u5730\u677f\uff0c\u5728\u5149\u6e90\u548c\u5b83\u4e4b\u95f4\u6709\u4e00\u4e2a\u5927\u76d2\u5b50\u3002\u7531\u4e8e\u5149\u6e90\u5904\u5411\u5149\u7ebf\u65b9\u5411\u770b\u53bb\uff0c\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u76d2\u5b50\uff0c\u4f46\u770b\u4e0d\u5230\u5730\u677f\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u90e8\u5206\u5c31\u5e94\u8be5\u5728\u9634\u5f71\u4e2d\u4e86\u3002 \u8fd9\u91cc\u7684\u6240\u6709\u84dd\u7ebf\u4ee3\u8868\u5149\u6e90\u53ef\u4ee5\u770b\u5230\u7684fragment\u3002\u9ed1\u7ebf\u4ee3\u8868\u88ab\u906e\u6321\u7684fragment\uff1a\u5b83\u4eec\u5e94\u8be5\u6e32\u67d3\u4e3a\u5e26\u9634\u5f71\u7684\u3002\u5982\u679c\u6211\u4eec\u7ed8\u5236\u4e00\u6761\u4ece\u5149\u6e90\u51fa\u53d1\uff0c\u5230\u8fbe\u6700\u53f3\u8fb9\u76d2\u5b50\u4e0a\u7684\u4e00\u4e2a\u7247\u6bb5\u4e0a\u7684\u7ebf\u6bb5\u6216\u5c04\u7ebf\uff0c\u90a3\u4e48\u5c04\u7ebf\u5c06\u5148\u51fb\u4e2d\u60ac\u6d6e\u7684\u76d2\u5b50\uff0c\u968f\u540e\u624d\u4f1a\u5230\u8fbe\u6700\u53f3\u4fa7\u7684\u76d2\u5b50\u3002\u7ed3\u679c\u5c31\u662f\u60ac\u6d6e\u7684\u76d2\u5b50\u88ab\u7167\u4eae\uff0c\u800c\u6700\u53f3\u4fa7\u7684\u76d2\u5b50\u5c06\u5904\u4e8e\u9634\u5f71\u4e4b\u4e2d\u3002 \u6211\u4eec\u5e0c\u671b\u5f97\u5230\u5c04\u7ebf\u7b2c\u4e00\u6b21\u51fb\u4e2d\u7684\u90a3\u4e2a\u7269\u4f53\uff0c\u7136\u540e\u7528\u8fd9\u4e2a\u6700\u8fd1\u70b9\u548c\u5c04\u7ebf\u4e0a\u5176\u4ed6\u70b9\u8fdb\u884c\u5bf9\u6bd4\u3002\u7136\u540e\u6211\u4eec\u5c06\u6d4b\u8bd5\u4e00\u4e0b\u770b\u770b\u5c04\u7ebf\u4e0a\u7684\u5176\u4ed6\u70b9\u662f\u5426\u6bd4\u6700\u8fd1\u70b9\u66f4\u8fdc\uff0c\u5982\u679c\u662f\u7684\u8bdd\uff0c\u8fd9\u4e2a\u70b9\u5c31\u5728\u9634\u5f71\u4e2d\u3002\u5bf9\u4ece\u5149\u6e90\u53d1\u51fa\u7684\u5c04\u7ebf\u4e0a\u7684\u6210\u5343\u4e0a\u4e07\u4e2a\u70b9\u8fdb\u884c\u904d\u5386\u662f\u4e2a\u6781\u7aef\u6d88\u8017\u6027\u80fd\u7684\u4e3e\u63aa\uff0c\u5b9e\u65f6\u6e32\u67d3\u4e0a\u57fa\u672c\u4e0d\u53ef\u53d6\u3002\u6211\u4eec\u53ef\u4ee5\u91c7\u53d6\u76f8\u4f3c\u4e3e\u63aa\uff0c\u4e0d\u7528\u6295\u5c04\u51fa\u5149\u7684\u5c04\u7ebf\u3002\u6211\u4eec\u6240\u4f7f\u7528\u7684\u662f\u975e\u5e38\u719f\u6089\u7684\u4e1c\u897f\uff1a\u6df1\u5ea6\u7f13\u51b2\u3002 \u4f60\u53ef\u80fd\u8bb0\u5f97\u5728 \u6df1\u5ea6\u6d4b\u8bd5 \u6559\u7a0b\u4e2d\uff0c\u5728\u6df1\u5ea6\u7f13\u51b2\u91cc\u7684\u4e00\u4e2a\u503c\u662f\u6444\u50cf\u673a\u89c6\u89d2\u4e0b\uff0c\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u7247\u6bb5\u7684\u4e00\u4e2a0\u52301\u4e4b\u95f4\u7684\u6df1\u5ea6\u503c\u3002\u5982\u679c\u6211\u4eec\u4ece\u5149\u6e90\u7684\u900f\u89c6\u56fe\u6765\u6e32\u67d3\u573a\u666f\uff0c\u5e76\u628a\u6df1\u5ea6\u503c\u7684\u7ed3\u679c\u50a8\u5b58\u5230\u7eb9\u7406\u4e2d\u4f1a\u600e\u6837\uff1f\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u5c31\u80fd\u5bf9\u5149\u6e90\u7684\u900f\u89c6\u56fe\u6240\u89c1\u7684\u6700\u8fd1\u7684\u6df1\u5ea6\u503c\u8fdb\u884c\u91c7\u6837\u3002\u6700\u7ec8\uff0c\u6df1\u5ea6\u503c\u5c31\u4f1a\u663e\u793a\u4ece\u5149\u6e90\u7684\u900f\u89c6\u56fe\u4e0b\u89c1\u5230\u7684\u7b2c\u4e00\u4e2a\u7247\u6bb5\u4e86\u3002\u6211\u4eec\u7ba1\u50a8\u5b58\u5728\u7eb9\u7406\u4e2d\u7684\u6240\u6709\u8fd9\u4e9b\u6df1\u5ea6\u503c\uff0c\u53eb\u505a\u6df1\u5ea6\u8d34\u56fe\uff08depth map\uff09\u6216\u9634\u5f71\u8d34\u56fe\u3002 \u5de6\u4fa7\u7684\u56fe\u7247\u5c55\u793a\u4e86\u4e00\u4e2a\u5b9a\u5411\u5149\u6e90\uff08\u6240\u6709\u5149\u7ebf\u90fd\u662f\u5e73\u884c\u7684\uff09\u5728\u7acb\u65b9\u4f53\u4e0b\u7684\u8868\u9762\u6295\u5c04\u7684\u9634\u5f71\u3002\u901a\u8fc7\u50a8\u5b58\u5230\u6df1\u5ea6\u8d34\u56fe\u4e2d\u7684\u6df1\u5ea6\u503c\uff0c\u6211\u4eec\u5c31\u80fd\u627e\u5230\u6700\u8fd1\u70b9\uff0c\u7528\u4ee5\u51b3\u5b9a\u7247\u6bb5\u662f\u5426\u5728\u9634\u5f71\u4e2d\u3002\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u6765\u81ea\u5149\u6e90\u7684\u89c6\u56fe\u548c\u6295\u5f71\u77e9\u9635\u6765\u6e32\u67d3\u573a\u666f\u5c31\u80fd\u521b\u5efa\u4e00\u4e2a\u6df1\u5ea6\u8d34\u56fe\u3002\u8fd9\u4e2a\u6295\u5f71\u548c\u89c6\u56fe\u77e9\u9635\u7ed3\u5408\u5728\u4e00\u8d77\u6210\u4e3a\u4e00\u4e2a T \u53d8\u6362\uff0c\u5b83\u53ef\u4ee5\u5c06\u4efb\u4f55\u4e09\u7ef4\u4f4d\u7f6e\u8f6c\u53d8\u5230\u5149\u6e90\u7684\u53ef\u89c1\u5750\u6807\u7a7a\u95f4\u3002 Important \u5b9a\u5411\u5149\u5e76\u6ca1\u6709\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u5b83\u88ab\u89c4\u5b9a\u4e3a\u65e0\u7a77\u8fdc\u3002\u7136\u800c\uff0c\u4e3a\u4e86\u5b9e\u73b0\u9634\u5f71\u8d34\u56fe\uff0c\u6211\u4eec\u5f97\u4ece\u4e00\u4e2a\u5149\u7684\u900f\u89c6\u56fe\u6e32\u67d3\u573a\u666f\uff0c\u8fd9\u6837\u5c31\u5f97\u5728\u5149\u7684\u65b9\u5411\u7684\u67d0\u4e00\u70b9\u4e0a\u6e32\u67d3\u573a\u666f\u3002 \u5728\u53f3\u8fb9\u7684\u56fe\u4e2d\u6211\u4eec\u663e\u793a\u51fa\u540c\u6837\u7684\u5e73\u884c\u5149\u548c\u89c2\u5bdf\u8005\u3002\u6211\u4eec\u6e32\u67d3\u4e00\u4e2a\u70b9 \\bar{\\color{red}{P}} \u5904\u7684\u7247\u6bb5\uff0c\u9700\u8981\u51b3\u5b9a\u5b83\u662f\u5426\u5728\u9634\u5f71\u4e2d\u3002\u6211\u4eec\u5148\u5f97\u4f7f\u7528 T \u628a \\bar{\\color{red}{P}} \u53d8\u6362\u5230\u5149\u6e90\u7684\u5750\u6807\u7a7a\u95f4\u91cc\u3002\u65e2\u7136\u70b9 \\bar{\\color{red}{P}} \u662f\u4ece\u5149\u7684\u900f\u89c6\u56fe\u4e2d\u770b\u5230\u7684\uff0c\u5b83\u7684z\u5750\u6807\u5c31\u5bf9\u5e94\u4e8e\u5b83\u7684\u6df1\u5ea6\uff0c\u4f8b\u5b50\u4e2d\u8fd9\u4e2a\u503c\u662f0.9\u3002\u4f7f\u7528\u70b9 \\bar{\\color{red}{P}} \u5728\u5149\u6e90\u7684\u5750\u6807\u7a7a\u95f4\u7684\u5750\u6807\uff0c\u6211\u4eec\u53ef\u4ee5\u7d22\u5f15\u6df1\u5ea6\u8d34\u56fe\uff0c\u6765\u83b7\u5f97\u4ece\u5149\u7684\u89c6\u89d2\u4e2d\u6700\u8fd1\u7684\u53ef\u89c1\u6df1\u5ea6\uff0c\u7ed3\u679c\u662f\u70b9 \\bar{\\color{green}{C}} \uff0c\u6700\u8fd1\u7684\u6df1\u5ea6\u662f0.4\u3002\u56e0\u4e3a\u7d22\u5f15\u6df1\u5ea6\u8d34\u56fe\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u5c0f\u4e8e\u70b9 \\bar{\\color{red}{P}} \u7684\u6df1\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u65ad\u5b9a \\bar{\\color{red}{P}} \u88ab\u6321\u4f4f\u4e86\uff0c\u5b83\u5728\u9634\u5f71\u4e2d\u4e86\u3002 \u9634\u5f71\u6620\u5c04\u7531\u4e24\u4e2a\u6b65\u9aa4\u7ec4\u6210\uff1a\u9996\u5148\uff0c\u6211\u4eec\u6e32\u67d3\u6df1\u5ea6\u8d34\u56fe\uff0c\u7136\u540e\u6211\u4eec\u50cf\u5f80\u5e38\u4e00\u6837\u6e32\u67d3\u573a\u666f\uff0c\u4f7f\u7528\u751f\u6210\u7684\u6df1\u5ea6\u8d34\u56fe\u6765\u8ba1\u7b97\u7247\u6bb5\u662f\u5426\u5728\u9634\u5f71\u4e4b\u4e2d\u3002\u542c\u8d77\u6765\u6709\u70b9\u590d\u6742\uff0c\u4f46\u968f\u7740\u6211\u4eec\u4e00\u6b65\u4e00\u6b65\u5730\u8bb2\u89e3\u8fd9\u4e2a\u6280\u672f\uff0c\u5c31\u80fd\u7406\u89e3\u4e86\u3002","title":"\u9634\u5f71\u6620\u5c04"},{"location":"05%20Advanced%20Lighting/03%20Shadows/01%20Shadow%20Mapping/#_3","text":"\u7b2c\u4e00\u6b65\u6211\u4eec\u9700\u8981\u751f\u6210\u4e00\u5f20\u6df1\u5ea6\u8d34\u56fe(Depth Map)\u3002\u6df1\u5ea6\u8d34\u56fe\u662f\u4ece\u5149\u7684\u900f\u89c6\u56fe\u91cc\u6e32\u67d3\u7684\u6df1\u5ea6\u7eb9\u7406\uff0c\u7528\u5b83\u8ba1\u7b97\u9634\u5f71\u3002\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5c06\u573a\u666f\u7684\u6e32\u67d3\u7ed3\u679c\u50a8\u5b58\u5230\u4e00\u4e2a\u7eb9\u7406\u4e2d\uff0c\u6211\u4eec\u5c06\u518d\u6b21\u9700\u8981\u5e27\u7f13\u51b2\u3002 \u9996\u5148\uff0c\u6211\u4eec\u8981\u4e3a\u6e32\u67d3\u7684\u6df1\u5ea6\u8d34\u56fe\u521b\u5efa\u4e00\u4e2a\u5e27\u7f13\u51b2\u5bf9\u8c61\uff1a GLuint depthMapFBO; glGenFramebuffers(1, &depthMapFBO); \u7136\u540e\uff0c\u521b\u5efa\u4e00\u4e2a2D\u7eb9\u7406\uff0c\u63d0\u4f9b\u7ed9\u5e27\u7f13\u51b2\u7684\u6df1\u5ea6\u7f13\u51b2\u4f7f\u7528\uff1a const GLuint SHADOW_WIDTH = 1024, SHADOW_HEIGHT = 1024; GLuint depthMap; glGenTextures(1, &depthMap); glBindTexture(GL_TEXTURE_2D, depthMap); glTexImage2D(GL_TEXTURE_2D, 0, GL_DEPTH_COMPONENT, SHADOW_WIDTH, SHADOW_HEIGHT, 0, GL_DEPTH_COMPONENT, GL_FLOAT, NULL); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT); \u751f\u6210\u6df1\u5ea6\u8d34\u56fe\u4e0d\u592a\u590d\u6742\u3002\u56e0\u4e3a\u6211\u4eec\u53ea\u5173\u5fc3\u6df1\u5ea6\u503c\uff0c\u6211\u4eec\u8981\u628a\u7eb9\u7406\u683c\u5f0f\u6307\u5b9a\u4e3aGL_DEPTH_COMPONENT\u3002\u6211\u4eec\u8fd8\u8981\u628a\u7eb9\u7406\u7684\u9ad8\u5bbd\u8bbe\u7f6e\u4e3a1024\uff1a\u8fd9\u662f\u6df1\u5ea6\u8d34\u56fe\u7684\u5206\u8fa8\u7387\u3002 \u628a\u6211\u4eec\u628a\u751f\u6210\u7684\u6df1\u5ea6\u7eb9\u7406\u4f5c\u4e3a\u5e27\u7f13\u51b2\u7684\u6df1\u5ea6\u7f13\u51b2\uff1a glBindFramebuffer(GL_FRAMEBUFFER, depthMapFBO); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, GL_TEXTURE_2D, depthMap, 0); glDrawBuffer(GL_NONE); glReadBuffer(GL_NONE); glBindFramebuffer(GL_FRAMEBUFFER, 0); \u6211\u4eec\u9700\u8981\u7684\u53ea\u662f\u5728\u4ece\u5149\u7684\u900f\u89c6\u56fe\u4e0b\u6e32\u67d3\u573a\u666f\u7684\u65f6\u5019\u6df1\u5ea6\u4fe1\u606f\uff0c\u6240\u4ee5\u989c\u8272\u7f13\u51b2\u6ca1\u6709\u7528\u3002\u7136\u800c\uff0c\u4e0d\u5305\u542b\u989c\u8272\u7f13\u51b2\u7684\u5e27\u7f13\u51b2\u5bf9\u8c61\u662f\u4e0d\u5b8c\u6574\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u663e\u5f0f\u544a\u8bc9OpenGL\u6211\u4eec\u4e0d\u9002\u7528\u4efb\u4f55\u989c\u8272\u6570\u636e\u8fdb\u884c\u6e32\u67d3\u3002\u6211\u4eec\u901a\u8fc7\u5c06\u8c03\u7528glDrawBuffer\u548cglReadBuffer\u628a\u8bfb\u548c\u7ed8\u5236\u7f13\u51b2\u8bbe\u7f6e\u4e3aGL_NONE\u6765\u505a\u8fd9\u4ef6\u4e8b\u3002 \u5408\u7406\u914d\u7f6e\u5c06\u6df1\u5ea6\u503c\u6e32\u67d3\u5230\u7eb9\u7406\u7684\u5e27\u7f13\u51b2\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u7b2c\u4e00\u6b65\u4e86\uff1a\u751f\u6210\u6df1\u5ea6\u8d34\u56fe\u3002\u4e24\u4e2a\u6b65\u9aa4\u7684\u5b8c\u6574\u7684\u6e32\u67d3\u9636\u6bb5\uff0c\u770b\u8d77\u6765\u6709\u70b9\u50cf\u8fd9\u6837\uff1a // 1. \u9996\u9009\u6e32\u67d3\u6df1\u5ea6\u8d34\u56fe glViewport(0, 0, SHADOW_WIDTH, SHADOW_HEIGHT); glBindFramebuffer(GL_FRAMEBUFFER, depthMapFBO); glClear(GL_DEPTH_BUFFER_BIT); ConfigureShaderAndMatrices(); RenderScene(); glBindFramebuffer(GL_FRAMEBUFFER, 0); // 2. \u50cf\u5f80\u5e38\u4e00\u6837\u6e32\u67d3\u573a\u666f\uff0c\u4f46\u8fd9\u6b21\u4f7f\u7528\u6df1\u5ea6\u8d34\u56fe glViewport(0, 0, SCR_WIDTH, SCR_HEIGHT); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); ConfigureShaderAndMatrices(); glBindTexture(GL_TEXTURE_2D, depthMap); RenderScene(); \u8fd9\u6bb5\u4ee3\u7801\u9690\u53bb\u4e86\u4e00\u4e9b\u7ec6\u8282\uff0c\u4f46\u5b83\u8868\u8fbe\u4e86\u9634\u5f71\u6620\u5c04\u7684\u57fa\u672c\u601d\u8def\u3002\u8fd9\u91cc\u4e00\u5b9a\u8981\u8bb0\u5f97\u8c03\u7528glViewport\u3002\u56e0\u4e3a\u9634\u5f71\u8d34\u56fe\u7ecf\u5e38\u548c\u6211\u4eec\u539f\u6765\u6e32\u67d3\u7684\u573a\u666f\uff08\u901a\u5e38\u662f\u7a97\u53e3\u5206\u8fa8\u7387\uff09\u6709\u7740\u4e0d\u540c\u7684\u5206\u8fa8\u7387\uff0c\u6211\u4eec\u9700\u8981\u6539\u53d8\u89c6\u53e3\uff08viewport\uff09\u7684\u53c2\u6570\u4ee5\u9002\u5e94\u9634\u5f71\u8d34\u56fe\u7684\u5c3a\u5bf8\u3002\u5982\u679c\u6211\u4eec\u5fd8\u4e86\u66f4\u65b0\u89c6\u53e3\u53c2\u6570\uff0c\u6700\u540e\u7684\u6df1\u5ea6\u8d34\u56fe\u8981\u4e48\u592a\u5c0f\u8981\u4e48\u5c31\u4e0d\u5b8c\u6574\u3002","title":"\u6df1\u5ea6\u8d34\u56fe"},{"location":"05%20Advanced%20Lighting/03%20Shadows/01%20Shadow%20Mapping/#_4","text":"\u524d\u9762\u90a3\u6bb5\u4ee3\u7801\u4e2d\u4e00\u4e2a\u4e0d\u6e05\u695a\u7684\u51fd\u6570\u662f ConfigureShaderAndMatrices \u3002\u5b83\u662f\u7528\u6765\u5728\u7b2c\u4e8c\u4e2a\u6b65\u9aa4\u786e\u4fdd\u4e3a\u6bcf\u4e2a\u7269\u4f53\u8bbe\u7f6e\u4e86\u5408\u9002\u7684\u6295\u5f71\u548c\u89c6\u56fe\u77e9\u9635\uff0c\u4ee5\u53ca\u76f8\u5173\u7684\u6a21\u578b\u77e9\u9635\u3002\u7136\u800c\uff0c\u7b2c\u4e00\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u4ece\u5149\u7684\u4f4d\u7f6e\u7684\u89c6\u91ce\u4e0b\u4f7f\u7528\u4e86\u4e0d\u540c\u7684\u6295\u5f71\u548c\u89c6\u56fe\u77e9\u9635\u6765\u6e32\u67d3\u7684\u573a\u666f\u3002 \u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u7684\u662f\u4e00\u4e2a\u6240\u6709\u5149\u7ebf\u90fd\u5e73\u884c\u7684\u5b9a\u5411\u5149\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6211\u4eec\u5c06\u4e3a\u5149\u6e90\u4f7f\u7528\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\uff0c\u900f\u89c6\u56fe\u5c06\u6ca1\u6709\u4efb\u4f55\u53d8\u5f62\uff1a GLfloat near_plane = 1.0f, far_plane = 7.5f; glm::mat4 lightProjection = glm::ortho(-10.0f, 10.0f, -10.0f, 10.0f, near_plane, far_plane); \u8fd9\u91cc\u6709\u4e2a\u672c\u8282\u6559\u7a0b\u7684demo\u573a\u666f\u4e2d\u4f7f\u7528\u7684\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u7684\u4f8b\u5b50\u3002\u56e0\u4e3a\u6295\u5f71\u77e9\u9635\u95f4\u63a5\u51b3\u5b9a\u53ef\u89c6\u533a\u57df\u7684\u8303\u56f4\uff0c\u4ee5\u53ca\u54ea\u4e9b\u4e1c\u897f\u4e0d\u4f1a\u88ab\u88c1\u5207\uff0c\u4f60\u9700\u8981\u4fdd\u8bc1\u6295\u5f71\u89c6\u9525\uff08frustum\uff09\u7684\u5927\u5c0f\uff0c\u4ee5\u5305\u542b\u6253\u7b97\u5728\u6df1\u5ea6\u8d34\u56fe\u4e2d\u5305\u542b\u7684\u7269\u4f53\u3002\u5f53\u7269\u4f53\u548c\u7247\u6bb5\u4e0d\u5728\u6df1\u5ea6\u8d34\u56fe\u4e2d\u65f6\uff0c\u5b83\u4eec\u5c31\u4e0d\u4f1a\u4ea7\u751f\u9634\u5f71\u3002 \u4e3a\u4e86\u521b\u5efa\u4e00\u4e2a\u89c6\u56fe\u77e9\u9635\u6765\u53d8\u6362\u6bcf\u4e2a\u7269\u4f53\uff0c\u628a\u5b83\u4eec\u53d8\u6362\u5230\u4ece\u5149\u6e90\u89c6\u89d2\u53ef\u89c1\u7684\u7a7a\u95f4\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528glm::lookAt\u51fd\u6570\uff1b\u8fd9\u6b21\u4ece\u5149\u6e90\u7684\u4f4d\u7f6e\u770b\u5411\u573a\u666f\u4e2d\u592e\u3002 glm::mat4 lightView = glm::lookAt(glm::vec3(-2.0f, 4.0f, -1.0f), glm::vec3(0.0f, 0.0f, 0.0f), glm::vec3(0.0f, 1.0f, 0.0f)); \u4e8c\u8005\u76f8\u7ed3\u5408\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5149\u7a7a\u95f4\u7684\u53d8\u6362\u77e9\u9635\uff0c\u5b83\u5c06\u6bcf\u4e2a\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u53d8\u6362\u5230\u5149\u6e90\u5904\u6240\u89c1\u5230\u7684\u90a3\u4e2a\u7a7a\u95f4\uff1b\u8fd9\u6b63\u662f\u6211\u4eec\u6e32\u67d3\u6df1\u5ea6\u8d34\u56fe\u6240\u9700\u8981\u7684\u3002 glm::mat4 lightSpaceMatrix = lightProjection * lightView; \u8fd9\u4e2alightSpaceMatrix\u6b63\u662f\u524d\u9762\u6211\u4eec\u79f0\u4e3a T \u7684\u90a3\u4e2a\u53d8\u6362\u77e9\u9635\u3002\u6709\u4e86lightSpaceMatrix\u53ea\u8981\u7ed9shader\u63d0\u4f9b\u5149\u7a7a\u95f4\u7684\u6295\u5f71\u548c\u89c6\u56fe\u77e9\u9635\uff0c\u6211\u4eec\u5c31\u80fd\u50cf\u5f80\u5e38\u90a3\u6837\u6e32\u67d3\u573a\u666f\u4e86\u3002\u7136\u800c\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u6df1\u5ea6\u503c\uff0c\u5e76\u975e\u6240\u6709\u7247\u6bb5\u8ba1\u7b97\u90fd\u5728\u6211\u4eec\u7684\u7740\u8272\u5668\u4e2d\u8fdb\u884c\u3002\u4e3a\u4e86\u63d0\u5347\u6027\u80fd\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u4e0e\u4e4b\u4e0d\u540c\u4f46\u66f4\u4e3a\u7b80\u5355\u7684\u7740\u8272\u5668\u6765\u6e32\u67d3\u51fa\u6df1\u5ea6\u8d34\u56fe\u3002","title":"\u5149\u6e90\u7a7a\u95f4\u7684\u53d8\u6362"},{"location":"05%20Advanced%20Lighting/03%20Shadows/01%20Shadow%20Mapping/#_5","text":"\u5f53\u6211\u4eec\u4ee5\u5149\u7684\u900f\u89c6\u56fe\u8fdb\u884c\u573a\u666f\u6e32\u67d3\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u7528\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684\u7740\u8272\u5668\uff0c\u8fd9\u4e2a\u7740\u8272\u5668\u9664\u4e86\u628a\u9876\u70b9\u53d8\u6362\u5230\u5149\u7a7a\u95f4\u4ee5\u5916\uff0c\u4e0d\u4f1a\u505a\u5f97\u66f4\u591a\u4e86\u3002\u8fd9\u4e2a\u7b80\u5355\u7684\u7740\u8272\u5668\u53eb\u505a simpleDepthShader \uff0c\u5c31\u662f\u4f7f\u7528\u4e0b\u9762\u7684\u8fd9\u4e2a\u7740\u8272\u5668\uff1a #version 330 core layout (location = 0) in vec3 position; uniform mat4 lightSpaceMatrix; uniform mat4 model; void main() { gl_Position = lightSpaceMatrix * model * vec4(position, 1.0f); } \u8fd9\u4e2a\u9876\u70b9\u7740\u8272\u5668\u5c06\u4e00\u4e2a\u5355\u72ec\u6a21\u578b\u7684\u4e00\u4e2a\u9876\u70b9\uff0c\u4f7f\u7528lightSpaceMatrix\u53d8\u6362\u5230\u5149\u7a7a\u95f4\u4e2d\u3002 \u7531\u4e8e\u6211\u4eec\u6ca1\u6709\u989c\u8272\u7f13\u51b2\uff0c\u6700\u540e\u7684\u7247\u6bb5\u4e0d\u9700\u8981\u4efb\u4f55\u5904\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528\u4e00\u4e2a\u7a7a\u7247\u6bb5\u7740\u8272\u5668\uff1a #version 330 core void main() { // gl_FragDepth = gl_FragCoord.z; } \u8fd9\u4e2a\u7a7a\u7247\u6bb5\u7740\u8272\u5668\u4ec0\u4e48\u4e5f\u4e0d\u5e72\uff0c\u8fd0\u884c\u5b8c\u540e\uff0c\u6df1\u5ea6\u7f13\u51b2\u4f1a\u88ab\u66f4\u65b0\u3002\u6211\u4eec\u53ef\u4ee5\u53d6\u6d88\u90a3\u884c\u7684\u6ce8\u91ca\uff0c\u6765\u663e\u5f0f\u8bbe\u7f6e\u6df1\u5ea6\uff0c\u4f46\u662f\u8fd9\u4e2a\uff08\u6307\u6ce8\u91ca\u6389\u90a3\u884c\u4e4b\u540e\uff09\u662f\u66f4\u6709\u6548\u7387\u7684\uff0c\u56e0\u4e3a\u5e95\u5c42\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u9ed8\u8ba4\u53bb\u8bbe\u7f6e\u6df1\u5ea6\u7f13\u51b2\u3002 \u6e32\u67d3\u6df1\u5ea6\u7f13\u51b2\u73b0\u5728\u6210\u4e86\uff1a simpleDepthShader.Use(); glUniformMatrix4fv(lightSpaceMatrixLocation, 1, GL_FALSE, glm::value_ptr(lightSpaceMatrix)); glViewport(0, 0, SHADOW_WIDTH, SHADOW_HEIGHT); glBindFramebuffer(GL_FRAMEBUFFER, depthMapFBO); glClear(GL_DEPTH_BUFFER_BIT); RenderScene(simpleDepthShader); glBindFramebuffer(GL_FRAMEBUFFER, 0); \u8fd9\u91cc\u7684RenderScene\u51fd\u6570\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\uff08shader program\uff09\uff0c\u5b83\u8c03\u7528\u6240\u6709\u76f8\u5173\u7684\u7ed8\u5236\u51fd\u6570\uff0c\u5e76\u5728\u9700\u8981\u7684\u5730\u65b9\u8bbe\u7f6e\u76f8\u5e94\u7684\u6a21\u578b\u77e9\u9635\u3002 \u6700\u540e\uff0c\u5728\u5149\u7684\u900f\u89c6\u56fe\u89c6\u89d2\u4e0b\uff0c\u5f88\u5b8c\u7f8e\u5730\u7528\u6bcf\u4e2a\u53ef\u89c1\u7247\u6bb5\u7684\u6700\u8fd1\u6df1\u5ea6\u586b\u5145\u4e86\u6df1\u5ea6\u7f13\u51b2\u3002\u901a\u8fc7\u5c06\u8fd9\u4e2a\u7eb9\u7406\u6295\u5c04\u5230\u4e00\u4e2a2D\u56db\u8fb9\u5f62\u4e0a\uff08\u548c\u6211\u4eec\u5728\u5e27\u7f13\u51b2\u4e00\u8282\u505a\u7684\u540e\u5904\u7406\u8fc7\u7a0b\u7c7b\u4f3c\uff09\uff0c\u5c31\u80fd\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u51fa\u6765\uff0c\u6211\u4eec\u4f1a\u83b7\u5f97\u8fd9\u6837\u7684\u4e1c\u897f\uff1a \u5c06\u6df1\u5ea6\u8d34\u56fe\u6e32\u67d3\u5230\u56db\u8fb9\u5f62\u4e0a\u7684\u7247\u6bb5\u7740\u8272\u5668\uff1a #version 330 core out vec4 color; in vec2 TexCoords; uniform sampler2D depthMap; void main() { float depthValue = texture(depthMap, TexCoords).r; color = vec4(vec3(depthValue), 1.0); } \u8981\u6ce8\u610f\u7684\u662f\u5f53\u7528\u900f\u89c6\u6295\u5f71\u77e9\u9635\u53d6\u4ee3\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u6765\u663e\u793a\u6df1\u5ea6\u65f6\uff0c\u6709\u4e00\u4e9b\u8f7b\u5fae\u7684\u6539\u52a8\uff0c\u56e0\u4e3a\u4f7f\u7528\u900f\u89c6\u6295\u5f71\u65f6\uff0c\u6df1\u5ea6\u662f\u975e\u7ebf\u6027\u7684\u3002\u672c\u8282\u6559\u7a0b\u7684\u6700\u540e\uff0c\u6211\u4eec\u4f1a\u8ba8\u8bba\u8fd9\u4e9b\u4e0d\u540c\u4e4b\u5904\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u83b7\u5f97\u628a\u573a\u666f\u6e32\u67d3\u6210\u6df1\u5ea6\u8d34\u56fe\u7684\u6e90\u7801\u3002","title":"\u6e32\u67d3\u81f3\u6df1\u5ea6\u8d34\u56fe"},{"location":"05%20Advanced%20Lighting/03%20Shadows/01%20Shadow%20Mapping/#_6","text":"\u6b63\u786e\u5730\u751f\u6210\u6df1\u5ea6\u8d34\u56fe\u4ee5\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u751f\u6210\u9634\u5f71\u4e86\u3002\u8fd9\u6bb5\u4ee3\u7801\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u6267\u884c\uff0c\u7528\u6765\u68c0\u9a8c\u4e00\u4e2a\u7247\u6bb5\u662f\u5426\u5728\u9634\u5f71\u4e4b\u4e2d\uff0c\u4e0d\u8fc7\u6211\u4eec\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u8fdb\u884c\u5149\u7a7a\u95f4\u7684\u53d8\u6362\uff1a #version 330 core layout (location = 0) in vec3 position; layout (location = 1) in vec3 normal; layout (location = 2) in vec2 texCoords; out vec2 TexCoords; out VS_OUT { vec3 FragPos; vec3 Normal; vec2 TexCoords; vec4 FragPosLightSpace; } vs_out; uniform mat4 projection; uniform mat4 view; uniform mat4 model; uniform mat4 lightSpaceMatrix; void main() { gl_Position = projection * view * model * vec4(position, 1.0f); vs_out.FragPos = vec3(model * vec4(position, 1.0)); vs_out.Normal = transpose(inverse(mat3(model))) * normal; vs_out.TexCoords = texCoords; vs_out.FragPosLightSpace = lightSpaceMatrix * vec4(vs_out.FragPos, 1.0); } \u8fd9\u513f\u7684\u65b0\u7684\u5730\u65b9\u662fFragPosLightSpace\u8fd9\u4e2a\u8f93\u51fa\u5411\u91cf\u3002\u6211\u4eec\u7528\u540c\u4e00\u4e2alightSpaceMatrix\uff0c\u628a\u4e16\u754c\u7a7a\u95f4\u9876\u70b9\u4f4d\u7f6e\u8f6c\u6362\u4e3a\u5149\u7a7a\u95f4\u3002\u9876\u70b9\u7740\u8272\u5668\u4f20\u9012\u4e00\u4e2a\u666e\u901a\u7684\u7ecf\u53d8\u6362\u7684\u4e16\u754c\u7a7a\u95f4\u9876\u70b9\u4f4d\u7f6evs_out.FragPos\u548c\u4e00\u4e2a\u5149\u7a7a\u95f4\u7684vs_out.FragPosLightSpace\u7ed9\u7247\u6bb5\u7740\u8272\u5668\u3002 \u7247\u6bb5\u7740\u8272\u5668\u4f7f\u7528Blinn-Phong\u5149\u7167\u6a21\u578b\u6e32\u67d3\u573a\u666f\u3002\u6211\u4eec\u63a5\u7740\u8ba1\u7b97\u51fa\u4e00\u4e2ashadow\u503c\uff0c\u5f53fragment\u5728\u9634\u5f71\u4e2d\u65f6\u662f1.0\uff0c\u5728\u9634\u5f71\u5916\u662f0.0\u3002\u7136\u540e\uff0cdiffuse\u548cspecular\u989c\u8272\u4f1a\u4e58\u4ee5\u8fd9\u4e2a\u9634\u5f71\u5143\u7d20\u3002\u7531\u4e8e\u9634\u5f71\u4e0d\u4f1a\u662f\u5168\u9ed1\u7684\uff08\u7531\u4e8e\u6563\u5c04\uff09\uff0c\u6211\u4eec\u628aambient\u5206\u91cf\u4ece\u4e58\u6cd5\u4e2d\u5254\u9664\u3002 #version 330 core out vec4 FragColor; in VS_OUT { vec3 FragPos; vec3 Normal; vec2 TexCoords; vec4 FragPosLightSpace; } fs_in; uniform sampler2D diffuseTexture; uniform sampler2D shadowMap; uniform vec3 lightPos; uniform vec3 viewPos; float ShadowCalculation(vec4 fragPosLightSpace) { [...] } void main() { vec3 color = texture(diffuseTexture, fs_in.TexCoords).rgb; vec3 normal = normalize(fs_in.Normal); vec3 lightColor = vec3(1.0); // Ambient vec3 ambient = 0.15 * color; // Diffuse vec3 lightDir = normalize(lightPos - fs_in.FragPos); float diff = max(dot(lightDir, normal), 0.0); vec3 diffuse = diff * lightColor; // Specular vec3 viewDir = normalize(viewPos - fs_in.FragPos); vec3 reflectDir = reflect(-lightDir, normal); float spec = 0.0; vec3 halfwayDir = normalize(lightDir + viewDir); spec = pow(max(dot(normal, halfwayDir), 0.0), 64.0); vec3 specular = spec * lightColor; // \u8ba1\u7b97\u9634\u5f71 float shadow = ShadowCalculation(fs_in.FragPosLightSpace); vec3 lighting = (ambient + (1.0 - shadow) * (diffuse + specular)) * color; FragColor = vec4(lighting, 1.0f); } \u7247\u6bb5\u7740\u8272\u5668\u5927\u90e8\u5206\u662f\u4ece\u9ad8\u7ea7\u5149\u7167\u6559\u7a0b\u4e2d\u590d\u5236\u8fc7\u6765\uff0c\u53ea\u4e0d\u8fc7\u52a0\u4e0a\u4e86\u4e2a\u9634\u5f71\u8ba1\u7b97\u3002\u6211\u4eec\u58f0\u660e\u4e00\u4e2ashadowCalculation\u51fd\u6570\uff0c\u7528\u5b83\u8ba1\u7b97\u9634\u5f71\u3002\u7247\u6bb5\u7740\u8272\u5668\u7684\u6700\u540e\uff0c\u6211\u4eec\u6211\u4eec\u628adiffuse\u548cspecular\u4e58\u4ee5(1-\u9634\u5f71\u5143\u7d20)\uff0c\u8fd9\u8868\u793a\u8fd9\u4e2a\u7247\u6bb5\u6709\u591a\u5927\u6210\u5206\u4e0d\u5728\u9634\u5f71\u4e2d\u3002\u8fd9\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u8fd8\u9700\u8981\u4e24\u4e2a\u989d\u5916\u8f93\u5165\uff0c\u4e00\u4e2a\u662f\u5149\u7a7a\u95f4\u7684\u7247\u6bb5\u4f4d\u7f6e\u548c\u7b2c\u4e00\u4e2a\u6e32\u67d3\u9636\u6bb5\u5f97\u5230\u7684\u6df1\u5ea6\u8d34\u56fe\u3002 \u9996\u5148\u8981\u68c0\u67e5\u4e00\u4e2a\u7247\u6bb5\u662f\u5426\u5728\u9634\u5f71\u4e2d\uff0c\u628a\u5149\u7a7a\u95f4\u7247\u6bb5\u4f4d\u7f6e\u8f6c\u6362\u4e3a\u88c1\u5207\u7a7a\u95f4\u7684\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u3002\u5f53\u6211\u4eec\u5728\u9876\u70b9\u7740\u8272\u5668\u8f93\u51fa\u4e00\u4e2a\u88c1\u5207\u7a7a\u95f4\u9876\u70b9\u4f4d\u7f6e\u5230gl_Position\u65f6\uff0cOpenGL\u81ea\u52a8\u8fdb\u884c\u4e00\u4e2a\u900f\u89c6\u9664\u6cd5\uff0c\u5c06\u88c1\u5207\u7a7a\u95f4\u5750\u6807\u7684\u8303\u56f4-w\u5230w\u8f6c\u4e3a-1\u52301\uff0c\u8fd9\u8981\u5c06x\u3001y\u3001z\u5143\u7d20\u9664\u4ee5\u5411\u91cf\u7684w\u5143\u7d20\u6765\u5b9e\u73b0\u3002\u7531\u4e8e\u88c1\u5207\u7a7a\u95f4\u7684FragPosLightSpace\u5e76\u4e0d\u4f1a\u901a\u8fc7gl_Position\u4f20\u5230\u7247\u6bb5\u7740\u8272\u5668\u91cc\uff0c\u6211\u4eec\u5fc5\u987b\u81ea\u5df1\u505a\u900f\u89c6\u9664\u6cd5\uff1a float ShadowCalculation(vec4 fragPosLightSpace) { // \u6267\u884c\u900f\u89c6\u9664\u6cd5 vec3 projCoords = fragPosLightSpace.xyz / fragPosLightSpace.w; [...] } \u8fd4\u56de\u4e86\u7247\u6bb5\u5728\u5149\u7a7a\u95f4\u7684-1\u52301\u7684\u8303\u56f4\u3002 Important \u5f53\u4f7f\u7528\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\uff0c\u9876\u70b9w\u5143\u7d20\u4ecd\u4fdd\u6301\u4e0d\u53d8\uff0c\u6240\u4ee5\u8fd9\u4e00\u6b65\u5b9e\u9645\u4e0a\u6beb\u65e0\u610f\u4e49\u3002\u53ef\u662f\uff0c\u5f53\u4f7f\u7528\u900f\u89c6\u6295\u5f71\u7684\u65f6\u5019\u5c31\u662f\u5fc5\u987b\u7684\u4e86\uff0c\u6240\u4ee5\u4e3a\u4e86\u4fdd\u8bc1\u5728\u4e24\u79cd\u6295\u5f71\u77e9\u9635\u4e0b\u90fd\u6709\u6548\u5c31\u5f97\u7559\u7740\u8fd9\u884c\u3002 \u56e0\u4e3a\u6765\u81ea\u6df1\u5ea6\u8d34\u56fe\u7684\u6df1\u5ea6\u57280\u52301\u7684\u8303\u56f4\uff0c\u6211\u4eec\u4e5f\u6253\u7b97\u4f7f\u7528projCoords\u4ece\u6df1\u5ea6\u8d34\u56fe\u4e2d\u53bb\u91c7\u6837\uff0c\u6240\u4ee5\u6211\u4eec\u5c06NDC\u5750\u6807\u53d8\u6362\u4e3a0\u52301\u7684\u8303\u56f4\u3002 \uff08\u8bd1\u8005\u6ce8\uff1a\u8fd9\u91cc\u7684\u610f\u601d\u662f\uff0c\u4e0a\u9762\u7684projCoords\u7684xyz\u5206\u91cf\u90fd\u662f[-1,1]\uff08\u4e0b\u9762\u4f1a\u6307\u51fa\u8fd9\u5bf9\u4e8e\u8fdc\u5e73\u9762\u4e4b\u7c7b\u7684\u70b9\u624d\u6210\u7acb\uff09\uff0c\u800c\u4e3a\u4e86\u548c\u6df1\u5ea6\u8d34\u56fe\u7684\u6df1\u5ea6\u76f8\u6bd4\u8f83\uff0cz\u5206\u91cf\u9700\u8981\u53d8\u6362\u5230[0,1]\uff1b\u4e3a\u4e86\u4f5c\u4e3a\u4ece\u6df1\u5ea6\u8d34\u56fe\u4e2d\u91c7\u6837\u7684\u5750\u6807\uff0cxy\u5206\u91cf\u4e5f\u9700\u8981\u53d8\u6362\u5230[0,1]\u3002\u6240\u4ee5\u6574\u4e2aprojCoords\u5411\u91cf\u90fd\u9700\u8981\u53d8\u6362\u5230[0,1]\u8303\u56f4\u3002\uff09 projCoords = projCoords * 0.5 + 0.5; \u6709\u4e86\u8fd9\u4e9b\u6295\u5f71\u5750\u6807\uff0c\u6211\u4eec\u5c31\u80fd\u4ece\u6df1\u5ea6\u8d34\u56fe\u4e2d\u91c7\u6837\u5f97\u52300\u52301\u7684\u7ed3\u679c\uff0c\u4ece\u7b2c\u4e00\u4e2a\u6e32\u67d3\u9636\u6bb5\u7684projCoords\u5750\u6807\u76f4\u63a5\u5bf9\u5e94\u4e8e\u53d8\u6362\u8fc7\u7684NDC\u5750\u6807\u3002\u6211\u4eec\u5c06\u5f97\u5230\u5149\u7684\u4f4d\u7f6e\u89c6\u91ce\u4e0b\u6700\u8fd1\u7684\u6df1\u5ea6\uff1a float closestDepth = texture(shadowMap, projCoords.xy).r; \u4e3a\u4e86\u5f97\u5230\u7247\u6bb5\u7684\u5f53\u524d\u6df1\u5ea6\uff0c\u6211\u4eec\u7b80\u5355\u83b7\u53d6\u6295\u5f71\u5411\u91cf\u7684z\u5750\u6807\uff0c\u5b83\u7b49\u4e8e\u6765\u81ea\u5149\u7684\u900f\u89c6\u89c6\u89d2\u7684\u7247\u6bb5\u7684\u6df1\u5ea6\u3002 float currentDepth = projCoords.z; \u5b9e\u9645\u7684\u5bf9\u6bd4\u5c31\u662f\u7b80\u5355\u68c0\u67e5currentDepth\u662f\u5426\u9ad8\u4e8eclosetDepth\uff0c\u5982\u679c\u662f\uff0c\u90a3\u4e48\u7247\u6bb5\u5c31\u5728\u9634\u5f71\u4e2d\u3002 float shadow = currentDepth > closestDepth ? 1.0 : 0.0; \u5b8c\u6574\u7684shadowCalculation\u51fd\u6570\u662f\u8fd9\u6837\u7684\uff1a float ShadowCalculation(vec4 fragPosLightSpace) { // \u6267\u884c\u900f\u89c6\u9664\u6cd5 vec3 projCoords = fragPosLightSpace.xyz / fragPosLightSpace.w; // \u53d8\u6362\u5230[0,1]\u7684\u8303\u56f4 projCoords = projCoords * 0.5 + 0.5; // \u53d6\u5f97\u6700\u8fd1\u70b9\u7684\u6df1\u5ea6(\u4f7f\u7528[0,1]\u8303\u56f4\u4e0b\u7684fragPosLight\u5f53\u5750\u6807) float closestDepth = texture(shadowMap, projCoords.xy).r; // \u53d6\u5f97\u5f53\u524d\u7247\u6bb5\u5728\u5149\u6e90\u89c6\u89d2\u4e0b\u7684\u6df1\u5ea6 float currentDepth = projCoords.z; // \u68c0\u67e5\u5f53\u524d\u7247\u6bb5\u662f\u5426\u5728\u9634\u5f71\u4e2d float shadow = currentDepth > closestDepth ? 1.0 : 0.0; return shadow; } \u6fc0\u6d3b\u8fd9\u4e2a\u7740\u8272\u5668\uff0c\u7ed1\u5b9a\u5408\u9002\u7684\u7eb9\u7406\uff0c\u6fc0\u6d3b\u7b2c\u4e8c\u4e2a\u6e32\u67d3\u9636\u6bb5\u9ed8\u8ba4\u7684\u6295\u5f71\u4ee5\u53ca\u89c6\u56fe\u77e9\u9635\uff0c\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5982\u679c\u4f60\u505a\u5bf9\u4e86\uff0c\u4f60\u4f1a\u770b\u5230\u5730\u677f\u548c\u4e0a\u6709\u7acb\u65b9\u4f53\u7684\u9634\u5f71\u3002\u4f60\u53ef\u4ee5\u4ece\u8fd9\u91cc\u627e\u5230demo\u7a0b\u5e8f\u7684 \u6e90\u7801 \u3002","title":"\u6e32\u67d3\u9634\u5f71"},{"location":"05%20Advanced%20Lighting/03%20Shadows/01%20Shadow%20Mapping/#_7","text":"\u6211\u4eec\u8bd5\u56fe\u8ba9\u9634\u5f71\u6620\u5c04\u5de5\u4f5c\uff0c\u4f46\u662f\u4f60\u4e5f\u770b\u5230\u4e86\uff0c\u9634\u5f71\u6620\u5c04\u8fd8\u662f\u6709\u70b9\u4e0d\u771f\u5b9e\uff0c\u6211\u4eec\u4fee\u590d\u5b83\u624d\u80fd\u83b7\u5f97\u66f4\u597d\u7684\u6548\u679c\uff0c\u8fd9\u662f\u4e0b\u9762\u7684\u90e8\u5206\u6240\u5173\u6ce8\u7684\u7126\u70b9\u3002","title":"\u6539\u8fdb\u9634\u5f71\u8d34\u56fe"},{"location":"05%20Advanced%20Lighting/03%20Shadows/01%20Shadow%20Mapping/#_8","text":"\u524d\u9762\u7684\u56fe\u7247\u4e2d\u660e\u663e\u6709\u4e0d\u5bf9\u7684\u5730\u65b9\u3002\u653e\u5927\u770b\u4f1a\u53d1\u73b0\u660e\u663e\u7684\u7ebf\u6761\u6837\u5f0f\uff1a \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5730\u677f\u56db\u8fb9\u5f62\u6e32\u67d3\u51fa\u5f88\u5927\u4e00\u5757\u4ea4\u66ff\u9ed1\u7ebf\u3002\u8fd9\u79cd\u9634\u5f71\u8d34\u56fe\u7684\u4e0d\u771f\u5b9e\u611f\u53eb\u505a \u9634\u5f71\u5931\u771f(Shadow Acne) \uff0c\u4e0b\u56fe\u89e3\u91ca\u4e86\u6210\u56e0\uff1a \u56e0\u4e3a\u9634\u5f71\u8d34\u56fe\u53d7\u9650\u4e8e\u5206\u8fa8\u7387\uff0c\u5728\u8ddd\u79bb\u5149\u6e90\u6bd4\u8f83\u8fdc\u7684\u60c5\u51b5\u4e0b\uff0c\u591a\u4e2a\u7247\u6bb5\u53ef\u80fd\u4ece\u6df1\u5ea6\u8d34\u56fe\u7684\u540c\u4e00\u4e2a\u503c\u4e2d\u53bb\u91c7\u6837\u3002\u56fe\u7247\u6bcf\u4e2a\u659c\u5761\u4ee3\u8868\u6df1\u5ea6\u8d34\u56fe\u4e00\u4e2a\u5355\u72ec\u7684\u7eb9\u7406\u50cf\u7d20\u3002\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u591a\u4e2a\u7247\u6bb5\u4ece\u540c\u4e00\u4e2a\u6df1\u5ea6\u503c\u8fdb\u884c\u91c7\u6837\u3002 \u867d\u7136\u5f88\u591a\u65f6\u5019\u6ca1\u95ee\u9898\uff0c\u4f46\u662f\u5f53\u5149\u6e90\u4ee5\u4e00\u4e2a\u89d2\u5ea6\u671d\u5411\u8868\u9762\u7684\u65f6\u5019\u5c31\u4f1a\u51fa\u95ee\u9898\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6df1\u5ea6\u8d34\u56fe\u4e5f\u662f\u4ece\u4e00\u4e2a\u89d2\u5ea6\u4e0b\u8fdb\u884c\u6e32\u67d3\u7684\u3002\u591a\u4e2a\u7247\u6bb5\u5c31\u4f1a\u4ece\u540c\u4e00\u4e2a\u659c\u5761\u7684\u6df1\u5ea6\u7eb9\u7406\u50cf\u7d20\u4e2d\u91c7\u6837\uff0c\u6709\u4e9b\u5728\u5730\u677f\u4e0a\u9762\uff0c\u6709\u4e9b\u5728\u5730\u677f\u4e0b\u9762\uff1b\u8fd9\u6837\u6211\u4eec\u6240\u5f97\u5230\u7684\u9634\u5f71\u5c31\u6709\u4e86\u5dee\u5f02\u3002\u56e0\u4e3a\u8fd9\u4e2a\uff0c\u6709\u4e9b\u7247\u6bb5\u88ab\u8ba4\u4e3a\u662f\u5728\u9634\u5f71\u4e4b\u4e2d\uff0c\u6709\u4e9b\u4e0d\u5728\uff0c\u7531\u6b64\u4ea7\u751f\u4e86\u56fe\u7247\u4e2d\u7684\u6761\u7eb9\u6837\u5f0f\u3002 \u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u53eb\u505a \u9634\u5f71\u504f\u79fb \uff08shadow bias\uff09\u7684\u6280\u5de7\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u7b80\u5355\u7684\u5bf9\u8868\u9762\u7684\u6df1\u5ea6\uff08\u6216\u6df1\u5ea6\u8d34\u56fe\uff09\u5e94\u7528\u4e00\u4e2a\u504f\u79fb\u91cf\uff0c\u8fd9\u6837\u7247\u6bb5\u5c31\u4e0d\u4f1a\u88ab\u9519\u8bef\u5730\u8ba4\u4e3a\u5728\u8868\u9762\u4e4b\u4e0b\u4e86\u3002 \u4f7f\u7528\u4e86\u504f\u79fb\u91cf\u540e\uff0c\u6240\u6709\u91c7\u6837\u70b9\u90fd\u83b7\u5f97\u4e86\u6bd4\u8868\u9762\u6df1\u5ea6\u66f4\u5c0f\u7684\u6df1\u5ea6\u503c\uff0c\u8fd9\u6837\u6574\u4e2a\u8868\u9762\u5c31\u6b63\u786e\u5730\u88ab\u7167\u4eae\uff0c\u6ca1\u6709\u4efb\u4f55\u9634\u5f71\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0\u8fd9\u4e2a\u504f\u79fb\uff1a float bias = 0.005; float shadow = currentDepth - bias > closestDepth ? 1.0 : 0.0; \u4e00\u4e2a0.005\u7684\u504f\u79fb\u5c31\u80fd\u5e2e\u5230\u5f88\u5927\u7684\u5fd9\uff0c\u4f46\u662f\u6709\u4e9b\u8868\u9762\u5761\u5ea6\u5f88\u5927\uff0c\u4ecd\u7136\u4f1a\u4ea7\u751f\u9634\u5f71\u5931\u771f\u3002\u6709\u4e00\u4e2a\u66f4\u52a0\u53ef\u9760\u7684\u529e\u6cd5\u80fd\u591f\u6839\u636e\u8868\u9762\u671d\u5411\u5149\u7ebf\u7684\u89d2\u5ea6\u66f4\u6539\u504f\u79fb\u91cf\uff1a\u4f7f\u7528\u70b9\u4e58\uff1a float bias = max(0.05 * (1.0 - dot(normal, lightDir)), 0.005); \u8fd9\u91cc\u6211\u4eec\u6709\u4e00\u4e2a\u504f\u79fb\u91cf\u7684\u6700\u5927\u503c0.05\uff0c\u548c\u4e00\u4e2a\u6700\u5c0f\u503c0.005\uff0c\u5b83\u4eec\u662f\u57fa\u4e8e\u8868\u9762\u6cd5\u7ebf\u548c\u5149\u7167\u65b9\u5411\u7684\u3002\u8fd9\u6837\u50cf\u5730\u677f\u8fd9\u6837\u7684\u8868\u9762\u51e0\u4e4e\u4e0e\u5149\u6e90\u5782\u76f4\uff0c\u5f97\u5230\u7684\u504f\u79fb\u5c31\u5f88\u5c0f\uff0c\u800c\u6bd4\u5982\u7acb\u65b9\u4f53\u7684\u4fa7\u9762\u8fd9\u79cd\u8868\u9762\u5f97\u5230\u7684\u504f\u79fb\u5c31\u66f4\u5927\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u540c\u4e00\u4e2a\u573a\u666f\uff0c\u4f46\u4f7f\u7528\u4e86\u9634\u5f71\u504f\u79fb\uff0c\u6548\u679c\u7684\u786e\u66f4\u597d\uff1a \u9009\u7528\u6b63\u786e\u7684\u504f\u79fb\u6570\u503c\uff0c\u5728\u4e0d\u540c\u7684\u573a\u666f\u4e2d\u9700\u8981\u4e00\u4e9b\u50cf\u8fd9\u6837\u7684\u8f7b\u5fae\u8c03\u6821\uff0c\u4f46\u5927\u591a\u60c5\u51b5\u4e0b\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u589e\u52a0\u504f\u79fb\u91cf\u76f4\u5230\u6240\u6709\u5931\u771f\u90fd\u88ab\u79fb\u9664\u7684\u95ee\u9898\u3002","title":"\u9634\u5f71\u5931\u771f"},{"location":"05%20Advanced%20Lighting/03%20Shadows/01%20Shadow%20Mapping/#_9","text":"\u4f7f\u7528\u9634\u5f71\u504f\u79fb\u7684\u4e00\u4e2a\u7f3a\u70b9\u662f\u4f60\u5bf9\u7269\u4f53\u7684\u5b9e\u9645\u6df1\u5ea6\u5e94\u7528\u4e86\u5e73\u79fb\u3002\u504f\u79fb\u6709\u53ef\u80fd\u8db3\u591f\u5927\uff0c\u4ee5\u81f3\u4e8e\u53ef\u4ee5\u770b\u51fa\u9634\u5f71\u76f8\u5bf9\u5b9e\u9645\u7269\u4f53\u4f4d\u7f6e\u7684\u504f\u79fb\uff0c\u4f60\u53ef\u4ee5\u4ece\u4e0b\u56fe\u770b\u5230\u8fd9\u4e2a\u73b0\u8c61\uff08\u8fd9\u662f\u4e00\u4e2a\u5938\u5f20\u7684\u504f\u79fb\u503c\uff09\uff1a \u8fd9\u4e2a\u9634\u5f71\u5931\u771f\u53eb\u505a\u60ac\u6d6e(Peter Panning)\uff0c\u56e0\u4e3a\u7269\u4f53\u770b\u8d77\u6765\u8f7b\u8f7b\u60ac\u6d6e\u5728\u8868\u9762\u4e4b\u4e0a\uff08\u8bd1\u6ce8Peter Pan\u5c31\u662f\u7ae5\u8bdd\u5f7c\u5f97\u6f58\uff0c\u800cpanning\u6709\u5e73\u79fb\u3001\u60ac\u6d6e\u4e4b\u610f\uff0c\u800c\u4e14\u5f7c\u5f97\u6f58\u662f\u4e2a\u4f1a\u98de\u7684\u7537\u5b69\u2026\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u53eb\u6280\u5de7\u89e3\u51b3\u5927\u90e8\u5206\u7684Peter panning\u95ee\u9898\uff1a\u5f53\u6e32\u67d3\u6df1\u5ea6\u8d34\u56fe\u65f6\u5019\u4f7f\u7528\u6b63\u9762\u5254\u9664\uff08front face culling\uff09\u4f60\u4e5f\u8bb8\u8bb0\u5f97\u5728\u9762\u5254\u9664\u6559\u7a0b\u4e2dOpenGL\u9ed8\u8ba4\u662f\u80cc\u9762\u5254\u9664\u3002\u6211\u4eec\u8981\u544a\u8bc9OpenGL\u6211\u4eec\u8981\u5254\u9664\u6b63\u9762\u3002 \u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u8981\u6df1\u5ea6\u8d34\u56fe\u7684\u6df1\u5ea6\u503c\uff0c\u5bf9\u4e8e\u5b9e\u4f53\u7269\u4f53\u65e0\u8bba\u6211\u4eec\u7528\u5b83\u4eec\u7684\u6b63\u9762\u8fd8\u662f\u80cc\u9762\u90fd\u6ca1\u95ee\u9898\u3002\u4f7f\u7528\u80cc\u9762\u6df1\u5ea6\u4e0d\u4f1a\u6709\u9519\u8bef\uff0c\u56e0\u4e3a\u9634\u5f71\u5728\u7269\u4f53\u5185\u90e8\u6709\u9519\u8bef\u6211\u4eec\u4e5f\u770b\u4e0d\u89c1\u3002 \u4e3a\u4e86\u4fee\u590dpeter\u6e38\u79fb\uff0c\u6211\u4eec\u8981\u8fdb\u884c\u6b63\u9762\u5254\u9664\uff0c\u5148\u5fc5\u987b\u5f00\u542fGL_CULL_FACE\uff1a glCullFace(GL_FRONT); RenderSceneToDepthMap(); glCullFace(GL_BACK); // \u4e0d\u8981\u5fd8\u8bb0\u8bbe\u56de\u539f\u5148\u7684culling face \u8fd9\u5341\u5206\u6709\u6548\u5730\u89e3\u51b3\u4e86peter panning\u7684\u95ee\u9898\uff0c\u4f46\u53ea\u5bf9\u5185\u90e8\u4e0d\u4f1a\u5bf9\u5916\u5f00\u53e3\u7684\u5b9e\u4f53\u7269\u4f53\u6709\u6548\u3002\u6211\u4eec\u7684\u573a\u666f\u4e2d\uff0c\u5728\u7acb\u65b9\u4f53\u4e0a\u5de5\u4f5c\u7684\u5f88\u597d\uff0c\u4f46\u5728\u5730\u677f\u4e0a\u65e0\u6548\uff0c\u56e0\u4e3a\u6b63\u9762\u5254\u9664\u5b8c\u5168\u79fb\u9664\u4e86\u5730\u677f\u3002\u5730\u9762\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5e73\u9762\uff0c\u4e0d\u4f1a\u88ab\u5b8c\u5168\u5254\u9664\u3002\u5982\u679c\u6709\u4eba\u6253\u7b97\u4f7f\u7528\u8fd9\u4e2a\u6280\u5de7\u89e3\u51b3peter panning\u5fc5\u987b\u8003\u8651\u5230\u53ea\u6709\u5254\u9664\u7269\u4f53\u7684\u6b63\u9762\u624d\u6709\u610f\u4e49\u3002 \u53e6\u4e00\u4e2a\u8981\u8003\u8651\u5230\u7684\u5730\u65b9\u662f\u63a5\u8fd1\u9634\u5f71\u7684\u7269\u4f53\u4ecd\u7136\u4f1a\u51fa\u73b0\u4e0d\u6b63\u786e\u7684\u6548\u679c\u3002\u5fc5\u987b\u8003\u8651\u5230\u4f55\u65f6\u4f7f\u7528\u6b63\u9762\u5254\u9664\u5bf9\u7269\u4f53\u624d\u6709\u610f\u4e49\u3002\u4e0d\u8fc7\u4f7f\u7528\u666e\u901a\u7684\u504f\u79fb\u503c\u901a\u5e38\u5c31\u80fd\u907f\u514dpeter panning\u3002","title":"\u60ac\u6d6e"},{"location":"05%20Advanced%20Lighting/03%20Shadows/01%20Shadow%20Mapping/#_10","text":"\u65e0\u8bba\u4f60\u559c\u4e0d\u559c\u6b22\u8fd8\u6709\u4e00\u4e2a\u89c6\u89c9\u5dee\u5f02\uff0c\u5c31\u662f\u5149\u7684\u89c6\u9525\u4e0d\u53ef\u89c1\u7684\u533a\u57df\u4e00\u5f8b\u88ab\u8ba4\u4e3a\u662f\u5904\u4e8e\u9634\u5f71\u4e2d\uff0c\u4e0d\u7ba1\u5b83\u771f\u7684\u5904\u4e8e\u9634\u5f71\u4e4b\u4e2d\u3002\u51fa\u73b0\u8fd9\u4e2a\u72b6\u51b5\u662f\u56e0\u4e3a\u8d85\u51fa\u5149\u7684\u89c6\u9525\u7684\u6295\u5f71\u5750\u6807\u6bd41.0\u5927\uff0c\u8fd9\u6837\u91c7\u6837\u7684\u6df1\u5ea6\u7eb9\u7406\u5c31\u4f1a\u8d85\u51fa\u4ed6\u9ed8\u8ba4\u76840\u52301\u7684\u8303\u56f4\u3002\u6839\u636e\u7eb9\u7406\u73af\u7ed5\u65b9\u5f0f\uff0c\u6211\u4eec\u5c06\u4f1a\u5f97\u5230\u4e0d\u6b63\u786e\u7684\u6df1\u5ea6\u7ed3\u679c\uff0c\u5b83\u4e0d\u662f\u57fa\u4e8e\u771f\u5b9e\u7684\u6765\u81ea\u5149\u6e90\u7684\u6df1\u5ea6\u503c\u3002 \u4f60\u53ef\u4ee5\u5728\u56fe\u4e2d\u770b\u5230\uff0c\u5149\u7167\u6709\u4e00\u4e2a\u533a\u57df\uff0c\u8d85\u51fa\u8be5\u533a\u57df\u5c31\u6210\u4e3a\u4e86\u9634\u5f71\uff1b\u8fd9\u4e2a\u533a\u57df\u5b9e\u9645\u4e0a\u4ee3\u8868\u7740\u6df1\u5ea6\u8d34\u56fe\u7684\u5927\u5c0f\uff0c\u8fd9\u4e2a\u8d34\u56fe\u6295\u5f71\u5230\u4e86\u5730\u677f\u4e0a\u3002\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u7684\u539f\u56e0\u662f\u6211\u4eec\u4e4b\u524d\u5c06\u6df1\u5ea6\u8d34\u56fe\u7684\u73af\u7ed5\u65b9\u5f0f\u8bbe\u7f6e\u6210\u4e86GL_REPEAT\u3002 \u6211\u4eec\u5b81\u53ef\u8ba9\u6240\u6709\u8d85\u51fa\u6df1\u5ea6\u8d34\u56fe\u7684\u5750\u6807\u7684\u6df1\u5ea6\u8303\u56f4\u662f1.0\uff0c\u8fd9\u6837\u8d85\u51fa\u7684\u5750\u6807\u5c06\u6c38\u8fdc\u4e0d\u5728\u9634\u5f71\u4e4b\u4e2d\u3002\u6211\u4eec\u53ef\u4ee5\u50a8\u5b58\u4e00\u4e2a\u8fb9\u6846\u989c\u8272\uff0c\u7136\u540e\u628a\u6df1\u5ea6\u8d34\u56fe\u7684\u7eb9\u7406\u73af\u7ed5\u9009\u9879\u8bbe\u7f6e\u4e3aGL_CLAMP_TO_BORDER\uff1a glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_BORDER); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_BORDER); GLfloat borderColor[] = { 1.0, 1.0, 1.0, 1.0 }; glTexParameterfv(GL_TEXTURE_2D, GL_TEXTURE_BORDER_COLOR, borderColor); \u73b0\u5728\u5982\u679c\u6211\u4eec\u91c7\u6837\u6df1\u5ea6\u8d34\u56fe0\u52301\u5750\u6807\u8303\u56f4\u4ee5\u5916\u7684\u533a\u57df\uff0c\u7eb9\u7406\u51fd\u6570\u603b\u4f1a\u8fd4\u56de\u4e00\u4e2a1.0\u7684\u6df1\u5ea6\u503c\uff0c\u9634\u5f71\u503c\u4e3a0.0\u3002\u7ed3\u679c\u770b\u8d77\u6765\u4f1a\u66f4\u771f\u5b9e\uff1a \u4ecd\u6709\u4e00\u90e8\u5206\u662f\u9ed1\u6697\u533a\u57df\u3002\u90a3\u91cc\u7684\u5750\u6807\u8d85\u51fa\u4e86\u5149\u7684\u6b63\u4ea4\u89c6\u9525\u7684\u8fdc\u5e73\u9762\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u7247\u9ed1\u8272\u533a\u57df\u603b\u662f\u51fa\u73b0\u5728\u5149\u6e90\u89c6\u9525\u7684\u6781\u8fdc\u5904\u3002 \u5f53\u4e00\u4e2a\u70b9\u6bd4\u5149\u7684\u8fdc\u5e73\u9762\u8fd8\u8981\u8fdc\u65f6\uff0c\u5b83\u7684\u6295\u5f71\u5750\u6807\u7684z\u5750\u6807\u5927\u4e8e1.0\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cGL_CLAMP_TO_BORDER\u73af\u7ed5\u65b9\u5f0f\u4e0d\u8d77\u4f5c\u7528\uff0c\u56e0\u4e3a\u6211\u4eec\u628a\u5750\u6807\u7684z\u5143\u7d20\u548c\u6df1\u5ea6\u8d34\u56fe\u7684\u503c\u8fdb\u884c\u4e86\u5bf9\u6bd4\uff1b\u5b83\u603b\u662f\u4e3a\u5927\u4e8e1.0\u7684z\u8fd4\u56detrue\u3002 \u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e5f\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u6295\u5f71\u5411\u91cf\u7684z\u5750\u6807\u5927\u4e8e1.0\uff0c\u6211\u4eec\u5c31\u628ashadow\u7684\u503c\u5f3a\u5236\u8bbe\u4e3a0.0\uff1a float ShadowCalculation(vec4 fragPosLightSpace) { [...] if(projCoords.z > 1.0) shadow = 0.0; return shadow; } \u68c0\u67e5\u8fdc\u5e73\u9762\uff0c\u5e76\u5c06\u6df1\u5ea6\u8d34\u56fe\u9650\u5236\u4e3a\u4e00\u4e2a\u624b\u5de5\u6307\u5b9a\u7684\u8fb9\u754c\u989c\u8272\uff0c\u5c31\u80fd\u89e3\u51b3\u6df1\u5ea6\u8d34\u56fe\u91c7\u6837\u8d85\u51fa\u7684\u95ee\u9898\uff0c\u6211\u4eec\u6700\u7ec8\u4f1a\u5f97\u5230\u4e0b\u9762\u6211\u4eec\u6240\u8ffd\u6c42\u7684\u6548\u679c\uff1a \u8fd9\u4e9b\u7ed3\u679c\u610f\u5473\u7740\uff0c\u53ea\u6709\u5728\u6df1\u5ea6\u8d34\u56fe\u8303\u56f4\u4ee5\u5185\u7684\u88ab\u6295\u5f71\u7684fragment\u5750\u6807\u624d\u6709\u9634\u5f71\uff0c\u6240\u4ee5\u4efb\u4f55\u8d85\u51fa\u8303\u56f4\u7684\u90fd\u5c06\u4f1a\u6ca1\u6709\u9634\u5f71\u3002\u7531\u4e8e\u5728\u6e38\u620f\u4e2d\u901a\u5e38\u8fd9\u53ea\u53d1\u751f\u5728\u8fdc\u5904\uff0c\u5c31\u4f1a\u6bd4\u6211\u4eec\u4e4b\u524d\u7684\u90a3\u4e2a\u660e\u663e\u7684\u9ed1\u8272\u533a\u57df\u6548\u679c\u66f4\u771f\u5b9e\u3002","title":"\u91c7\u6837\u8fc7\u591a"},{"location":"05%20Advanced%20Lighting/03%20Shadows/01%20Shadow%20Mapping/#pcf","text":"\u9634\u5f71\u73b0\u5728\u5df2\u7ecf\u9644\u7740\u5230\u573a\u666f\u4e2d\u4e86\uff0c\u4e0d\u8fc7\u8fd9\u4ecd\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\u5982\u679c\u4f60\u653e\u5927\u770b\u9634\u5f71\uff0c\u9634\u5f71\u6620\u5c04\u5bf9\u5206\u8fa8\u7387\u7684\u4f9d\u8d56\u5f88\u5feb\u53d8\u5f97\u5f88\u660e\u663e\u3002 \u56e0\u4e3a\u6df1\u5ea6\u8d34\u56fe\u6709\u4e00\u4e2a\u56fa\u5b9a\u7684\u5206\u8fa8\u7387\uff0c\u591a\u4e2a\u7247\u6bb5\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u7eb9\u7406\u50cf\u7d20\u3002\u7ed3\u679c\u5c31\u662f\u591a\u4e2a\u7247\u6bb5\u4f1a\u4ece\u6df1\u5ea6\u8d34\u56fe\u7684\u540c\u4e00\u4e2a\u6df1\u5ea6\u503c\u8fdb\u884c\u91c7\u6837\uff0c\u8fd9\u51e0\u4e2a\u7247\u6bb5\u4fbf\u5f97\u5230\u7684\u662f\u540c\u4e00\u4e2a\u9634\u5f71\uff0c\u8fd9\u5c31\u4f1a\u4ea7\u751f\u952f\u9f7f\u8fb9\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u6df1\u5ea6\u8d34\u56fe\u7684\u5206\u8fa8\u7387\u7684\u65b9\u5f0f\u6765\u964d\u4f4e\u952f\u9f7f\u5757\uff0c\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u5c3d\u53ef\u80fd\u7684\u8ba9\u5149\u7684\u89c6\u9525\u63a5\u8fd1\u573a\u666f\u3002 \u53e6\u4e00\u4e2a\uff08\u5e76\u4e0d\u5b8c\u6574\u7684\uff09\u89e3\u51b3\u65b9\u6848\u53eb\u505aPCF\uff08percentage-closer filtering\uff09\uff0c\u8fd9\u662f\u4e00\u79cd\u591a\u4e2a\u4e0d\u540c\u8fc7\u6ee4\u65b9\u5f0f\u7684\u7ec4\u5408\uff0c\u5b83\u4ea7\u751f\u67d4\u548c\u9634\u5f71\uff0c\u4f7f\u5b83\u4eec\u51fa\u73b0\u66f4\u5c11\u7684\u952f\u9f7f\u5757\u548c\u786c\u8fb9\u3002\u6838\u5fc3\u601d\u60f3\u662f\u4ece\u6df1\u5ea6\u8d34\u56fe\u4e2d\u591a\u6b21\u91c7\u6837\uff0c\u6bcf\u4e00\u6b21\u91c7\u6837\u7684\u7eb9\u7406\u5750\u6807\u90fd\u7a0d\u6709\u4e0d\u540c\u3002\u6bcf\u4e2a\u72ec\u7acb\u7684\u6837\u672c\u53ef\u80fd\u5728\u4e5f\u53ef\u80fd\u4e0d\u518d\u9634\u5f71\u4e2d\u3002\u6240\u6709\u7684\u6b21\u751f\u7ed3\u679c\u63a5\u7740\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u8fdb\u884c\u5e73\u5747\u5316\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u67d4\u548c\u9634\u5f71\u3002 \u4e00\u4e2a\u7b80\u5355\u7684PCF\u7684\u5b9e\u73b0\u662f\u7b80\u5355\u7684\u4ece\u7eb9\u7406\u50cf\u7d20\u56db\u5468\u5bf9\u6df1\u5ea6\u8d34\u56fe\u91c7\u6837\uff0c\u7136\u540e\u628a\u7ed3\u679c\u5e73\u5747\u8d77\u6765\uff1a float shadow = 0.0; vec2 texelSize = 1.0 / textureSize(shadowMap, 0); for(int x = -1; x <= 1; ++x) { for(int y = -1; y <= 1; ++y) { float pcfDepth = texture(shadowMap, projCoords.xy + vec2(x, y) * texelSize).r; shadow += currentDepth - bias > pcfDepth ? 1.0 : 0.0; } } shadow /= 9.0; \u8fd9\u4e2atextureSize\u8fd4\u56de\u4e00\u4e2a\u7ed9\u5b9a\u91c7\u6837\u5668\u7eb9\u7406\u76840\u7ea7mipmap\u7684vec2\u7c7b\u578b\u7684\u5bbd\u548c\u9ad8\u3002\u75281\u9664\u4ee5\u5b83\u8fd4\u56de\u4e00\u4e2a\u5355\u72ec\u7eb9\u7406\u50cf\u7d20\u7684\u5927\u5c0f\uff0c\u6211\u4eec\u7528\u4ee5\u5bf9\u7eb9\u7406\u5750\u6807\u8fdb\u884c\u504f\u79fb\uff0c\u786e\u4fdd\u6bcf\u4e2a\u65b0\u6837\u672c\uff0c\u6765\u81ea\u4e0d\u540c\u7684\u6df1\u5ea6\u503c\u3002\u8fd9\u91cc\u6211\u4eec\u91c7\u6837\u5f97\u52309\u4e2a\u503c\uff0c\u5b83\u4eec\u5728\u6295\u5f71\u5750\u6807\u7684x\u548cy\u503c\u7684\u5468\u56f4\uff0c\u4e3a\u9634\u5f71\u963b\u6321\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5e76\u6700\u7ec8\u901a\u8fc7\u6837\u672c\u7684\u603b\u6570\u76ee\u5c06\u7ed3\u679c\u5e73\u5747\u5316\u3002 \u4f7f\u7528\u66f4\u591a\u7684\u6837\u672c\uff0c\u66f4\u6539texelSize\u53d8\u91cf\uff0c\u4f60\u5c31\u53ef\u4ee5\u589e\u52a0\u9634\u5f71\u7684\u67d4\u548c\u7a0b\u5ea6\u3002\u4e0b\u9762\u4f60\u53ef\u4ee5\u770b\u5230\u5e94\u7528\u4e86PCF\u7684\u9634\u5f71\uff1a \u4ece\u7a0d\u5fae\u8fdc\u4e00\u70b9\u7684\u8ddd\u79bb\u770b\u53bb\uff0c\u9634\u5f71\u6548\u679c\u597d\u591a\u4e86\uff0c\u4e5f\u4e0d\u90a3\u4e48\u751f\u786c\u4e86\u3002\u5982\u679c\u4f60\u653e\u5927\uff0c\u4ecd\u4f1a\u770b\u5230\u9634\u5f71\u8d34\u56fe\u5206\u8fa8\u7387\u7684\u4e0d\u771f\u5b9e\u611f\uff0c\u4f46\u901a\u5e38\u5bf9\u4e8e\u5927\u591a\u6570\u5e94\u7528\u6765\u8bf4\u6548\u679c\u5df2\u7ecf\u5f88\u597d\u4e86\u3002 \u4f60\u53ef\u4ee5\u4ece \u8fd9\u91cc \u627e\u5230\u8fd9\u4e2a\u4f8b\u5b50\u7684\u5168\u90e8\u6e90\u7801\u548c\u7b2c\u4e8c\u4e2a\u9636\u6bb5\u7684 \u9876\u70b9 \u548c \u7247\u6bb5 \u7740\u8272\u5668\u3002 \u5b9e\u9645\u4e0aPCF\u8fd8\u6709\u66f4\u591a\u7684\u5185\u5bb9\uff0c\u4ee5\u53ca\u5f88\u591a\u6280\u672f\u8981\u70b9\u9700\u8981\u8003\u8651\u4ee5\u63d0\u5347\u67d4\u548c\u9634\u5f71\u7684\u6548\u679c\uff0c\u4f46\u5904\u4e8e\u672c\u7ae0\u5185\u5bb9\u957f\u5ea6\u8003\u8651\uff0c\u6211\u4eec\u5c06\u7559\u5728\u4ee5\u540e\u8ba8\u8bba\u3002","title":"PCF"},{"location":"05%20Advanced%20Lighting/03%20Shadows/01%20Shadow%20Mapping/#vs","text":"\u5728\u6e32\u67d3\u6df1\u5ea6\u8d34\u56fe\u7684\u65f6\u5019\uff0c\u6b63\u4ea4(Orthographic)\u548c\u6295\u5f71(Projection)\u77e9\u9635\u4e4b\u95f4\u6709\u6240\u4e0d\u540c\u3002\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u5e76\u4e0d\u4f1a\u5c06\u573a\u666f\u7528\u900f\u89c6\u56fe\u8fdb\u884c\u53d8\u5f62\uff0c\u6240\u6709\u89c6\u7ebf/\u5149\u7ebf\u90fd\u662f\u5e73\u884c\u7684\uff0c\u8fd9\u4f7f\u5b83\u5bf9\u4e8e\u5b9a\u5411\u5149\u6765\u8bf4\u662f\u4e2a\u5f88\u597d\u7684\u6295\u5f71\u77e9\u9635\u3002\u7136\u800c\u900f\u89c6\u6295\u5f71\u77e9\u9635\uff0c\u4f1a\u5c06\u6240\u6709\u9876\u70b9\u6839\u636e\u900f\u89c6\u5173\u7cfb\u8fdb\u884c\u53d8\u5f62\uff0c\u7ed3\u679c\u56e0\u6b64\u800c\u4e0d\u540c\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u4e24\u79cd\u6295\u5f71\u65b9\u5f0f\u6240\u4ea7\u751f\u7684\u4e0d\u540c\u9634\u5f71\u533a\u57df\uff1a \u900f\u89c6\u6295\u5f71\u5bf9\u4e8e\u5149\u6e90\u6765\u8bf4\u66f4\u5408\u7406\uff0c\u4e0d\u50cf\u5b9a\u5411\u5149\uff0c\u5b83\u662f\u6709\u81ea\u5df1\u7684\u4f4d\u7f6e\u7684\u3002\u900f\u89c6\u6295\u5f71\u56e0\u6b64\u66f4\u7ecf\u5e38\u7528\u5728\u70b9\u5149\u6e90\u548c\u805a\u5149\u706f\u4e0a\uff0c\u800c\u6b63\u4ea4\u6295\u5f71\u7ecf\u5e38\u7528\u5728\u5b9a\u5411\u5149\u4e0a\u3002 \u53e6\u4e00\u4e2a\u7ec6\u5fae\u5dee\u522b\u662f\uff0c\u900f\u89c6\u6295\u5f71\u77e9\u9635\uff0c\u5c06\u6df1\u5ea6\u7f13\u51b2\u89c6\u89c9\u5316\u7ecf\u5e38\u4f1a\u5f97\u5230\u4e00\u4e2a\u51e0\u4e4e\u5168\u767d\u7684\u7ed3\u679c\u3002\u53d1\u751f\u8fd9\u4e2a\u662f\u56e0\u4e3a\u900f\u89c6\u6295\u5f71\u4e0b\uff0c\u6df1\u5ea6\u53d8\u6210\u4e86\u975e\u7ebf\u6027\u7684\u6df1\u5ea6\u503c\uff0c\u5b83\u7684\u5927\u591a\u6570\u53ef\u8fa8\u8303\u56f4\u90fd\u4f4d\u4e8e\u8fd1\u5e73\u9762\u9644\u8fd1\u3002\u4e3a\u4e86\u53ef\u4ee5\u50cf\u4f7f\u7528\u6b63\u4ea4\u6295\u5f71\u4e00\u6837\u5408\u9002\u5730\u89c2\u5bdf\u6df1\u5ea6\u503c\uff0c\u4f60\u5fc5\u987b\u5148\u5c06\u975e\u7ebf\u6027\u6df1\u5ea6\u503c\u8f6c\u53d8\u4e3a\u7ebf\u6027\u7684\uff0c\u5982\u6211\u4eec\u5728\u6df1\u5ea6\u6d4b\u8bd5\u6559\u7a0b\u4e2d\u5df2\u7ecf\u8ba8\u8bba\u8fc7\u7684\u90a3\u6837\u3002 #version 330 core out vec4 color; in vec2 TexCoords; uniform sampler2D depthMap; uniform float near_plane; uniform float far_plane; float LinearizeDepth(float depth) { float z = depth * 2.0 - 1.0; // Back to NDC return (2.0 * near_plane * far_plane) / (far_plane + near_plane - z * (far_plane - near_plane)); } void main() { float depthValue = texture(depthMap, TexCoords).r; color = vec4(vec3(LinearizeDepth(depthValue) / far_plane), 1.0); // perspective // color = vec4(vec3(depthValue), 1.0); // orthographic } \u8fd9\u4e2a\u6df1\u5ea6\u503c\u4e0e\u6211\u4eec\u89c1\u5230\u7684\u7528\u6b63\u4ea4\u6295\u5f71\u7684\u5f88\u76f8\u4f3c\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e2a\u53ea\u9002\u7528\u4e8e\u8c03\u8bd5\uff1b\u6b63\u4ea4\u6216\u6295\u5f71\u77e9\u9635\u7684\u6df1\u5ea6\u68c0\u67e5\u4ecd\u7136\u4fdd\u6301\u539f\u6837\uff0c\u56e0\u4e3a\u76f8\u5173\u7684\u6df1\u5ea6\u5e76\u6ca1\u6709\u6539\u53d8\u3002","title":"\u6b63\u4ea4 vs \u6295\u5f71"},{"location":"05%20Advanced%20Lighting/03%20Shadows/01%20Shadow%20Mapping/#_11","text":"Tutorial 16 : Shadow mapping \uff1a\u63d0\u4f9b\u7684\u7c7b\u4f3c\u7684\u9634\u5f71\u6620\u5c04\u6559\u7a0b\uff0c\u91cc\u9762\u6709\u4e00\u4e9b\u989d\u5916\u7684\u89e3\u91ca\u3002 Shadow Mapping \u2013 Part 1\uff1aogldev \uff1a\u63d0\u4f9b\u7684\u53e6\u4e00\u4e2a\u9634\u5f71\u6620\u5c04\u6559\u7a0b\u3002 How Shadow Mapping Works \uff1a\u7684\u4e00\u4e2a\u7b2c\u4e09\u65b9YouTube\u89c6\u9891\u6559\u7a0b\uff0c\u91cc\u9762\u89e3\u91ca\u4e86\u9634\u5f71\u6620\u5c04\u53ca\u5176\u5b9e\u73b0\u3002 Common Techniques to Improve Shadow Depth Maps \uff1a\u5fae\u8f6f\u7684\u4e00\u7bc7\u597d\u6587\u7ae0\uff0c\u5176\u4e2d\u7406\u51fa\u4e86\u5f88\u591a\u63d0\u5347\u9634\u5f71\u8d34\u56fe\u8d28\u91cf\u7684\u6280\u672f\u3002","title":"\u9644\u52a0\u8d44\u6e90"},{"location":"05%20Advanced%20Lighting/03%20Shadows/02%20Point%20Shadows/","text":"\u70b9\u5149\u6e90\u9634\u5f71 \u539f\u6587 Point Shadows \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django \u6821\u5bf9 \u6682\u65e0 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u4e0a\u4e2a\u6559\u7a0b\u6211\u4eec\u5b66\u5230\u4e86\u5982\u4f55\u4f7f\u7528\u9634\u5f71\u6620\u5c04\u6280\u672f\u521b\u5efa\u52a8\u6001\u9634\u5f71\u3002\u6548\u679c\u4e0d\u9519\uff0c\u4f46\u5b83\u53ea\u9002\u5408\u5b9a\u5411\u5149\uff0c\u56e0\u4e3a\u9634\u5f71\u53ea\u662f\u5728\u5355\u4e00\u5b9a\u5411\u5149\u6e90\u4e0b\u751f\u6210\u7684\u3002\u6240\u4ee5\u5b83\u4e5f\u53eb\u5b9a\u5411\u9634\u5f71\u6620\u5c04\uff0c\u6df1\u5ea6\uff08\u9634\u5f71\uff09\u8d34\u56fe\u751f\u6210\u81ea\u5b9a\u5411\u5149\u7684\u89c6\u89d2\u3002 Important \u672c\u8282\u6211\u4eec\u7684\u7126\u70b9\u662f\u5728\u5404\u79cd\u65b9\u5411\u751f\u6210\u52a8\u6001\u9634\u5f71\u3002\u8fd9\u4e2a\u6280\u672f\u53ef\u4ee5\u9002\u7528\u4e8e\u70b9\u5149\u6e90\uff0c\u751f\u6210\u6240\u6709\u65b9\u5411\u4e0a\u7684\u9634\u5f71\u3002 \u8fd9\u4e2a\u6280\u672f\u53eb\u505a\u70b9\u5149\u9634\u5f71\uff0c\u8fc7\u53bb\u7684\u540d\u5b57\u662f\u4e07\u5411\u9634\u5f71\u8d34\u56fe\uff08omnidirectional shadow maps\uff09\u6280\u672f\u3002 \u672c\u8282\u4ee3\u7801\u57fa\u4e8e\u524d\u9762\u7684\u9634\u5f71\u6620\u5c04\u6559\u7a0b\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u5bf9\u4f20\u7edf\u9634\u5f71\u6620\u5c04\u4e0d\u719f\u6089\uff0c\u8fd8\u662f\u5efa\u8bae\u5148\u8bfb\u4e00\u8bfb\u9634\u5f71\u6620\u5c04\u6559\u7a0b\u3002 \u7b97\u6cd5\u548c\u5b9a\u5411\u9634\u5f71\u6620\u5c04\u5dee\u4e0d\u591a\uff1a\u6211\u4eec\u4ece\u5149\u7684\u900f\u89c6\u56fe\u751f\u6210\u4e00\u4e2a\u6df1\u5ea6\u8d34\u56fe\uff0c\u57fa\u4e8e\u5f53\u524dfragment\u4f4d\u7f6e\u6765\u5bf9\u6df1\u5ea6\u8d34\u56fe\u91c7\u6837\uff0c\u7136\u540e\u7528\u50a8\u5b58\u7684\u6df1\u5ea6\u503c\u548c\u6bcf\u4e2afragment\u8fdb\u884c\u5bf9\u6bd4\uff0c\u770b\u770b\u5b83\u662f\u5426\u5728\u9634\u5f71\u4e2d\u3002\u5b9a\u5411\u9634\u5f71\u6620\u5c04\u548c\u4e07\u5411\u9634\u5f71\u6620\u5c04\u7684\u4e3b\u8981\u4e0d\u540c\u5728\u4e8e\u6df1\u5ea6\u8d34\u56fe\u7684\u4f7f\u7528\u4e0a\u3002 \u5bf9\u4e8e\u6df1\u5ea6\u8d34\u56fe\uff0c\u6211\u4eec\u9700\u8981\u4ece\u4e00\u4e2a\u70b9\u5149\u6e90\u7684\u6240\u6709\u6e32\u67d3\u573a\u666f\uff0c\u666e\u901a2D\u6df1\u5ea6\u8d34\u56fe\u4e0d\u80fd\u5de5\u4f5c\uff1b\u5982\u679c\u6211\u4eec\u4f7f\u7528\u7acb\u65b9\u4f53\u8d34\u56fe\u4f1a\u600e\u6837\uff1f\u56e0\u4e3a\u7acb\u65b9\u4f53\u8d34\u56fe\u53ef\u4ee5\u50a8\u5b586\u4e2a\u9762\u7684\u73af\u5883\u6570\u636e\uff0c\u5b83\u53ef\u4ee5\u5c06\u6574\u4e2a\u573a\u666f\u6e32\u67d3\u5230\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6bcf\u4e2a\u9762\u4e0a\uff0c\u628a\u5b83\u4eec\u5f53\u4f5c\u70b9\u5149\u6e90\u56db\u5468\u7684\u6df1\u5ea6\u503c\u6765\u91c7\u6837\u3002 \u751f\u6210\u540e\u7684\u6df1\u5ea6\u7acb\u65b9\u4f53\u8d34\u56fe\u88ab\u4f20\u9012\u5230\u5149\u7167\u50cf\u7d20\u7740\u8272\u5668\uff0c\u5b83\u4f1a\u7528\u4e00\u4e2a\u65b9\u5411\u5411\u91cf\u6765\u91c7\u6837\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u4ece\u800c\u5f97\u5230\u5f53\u524d\u7684fragment\u7684\u6df1\u5ea6\uff08\u4ece\u5149\u7684\u900f\u89c6\u56fe\uff09\u3002\u5927\u90e8\u5206\u590d\u6742\u7684\u4e8b\u60c5\u5df2\u7ecf\u5728\u9634\u5f71\u6620\u5c04\u6559\u7a0b\u4e2d\u8ba8\u8bba\u8fc7\u4e86\u3002\u7b97\u6cd5\u53ea\u662f\u5728\u6df1\u5ea6\u7acb\u65b9\u4f53\u8d34\u56fe\u751f\u6210\u4e0a\u7a0d\u5fae\u590d\u6742\u4e00\u70b9\u3002 \u751f\u6210\u6df1\u5ea6\u7acb\u65b9\u4f53\u8d34\u56fe \u4e3a\u521b\u5efa\u4e00\u4e2a\u5149\u5468\u56f4\u7684\u6df1\u5ea6\u503c\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u6211\u4eec\u5fc5\u987b\u6e32\u67d3\u573a\u666f6\u6b21\uff1a\u6bcf\u6b21\u4e00\u4e2a\u9762\u3002\u663e\u7136\u6e32\u67d3\u573a\u666f6\u6b21\u9700\u89816\u4e2a\u4e0d\u540c\u7684\u89c6\u56fe\u77e9\u9635\uff0c\u6bcf\u6b21\u628a\u4e00\u4e2a\u4e0d\u540c\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u9762\u9644\u52a0\u5230\u5e27\u7f13\u51b2\u5bf9\u8c61\u4e0a\u3002\u8fd9\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a for(int i = 0; i < 6; i++) { GLuint face = GL_TEXTURE_CUBE_MAP_POSITIVE_X + i; glFramebufferTexture2D(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, face, depthCubemap, 0); BindViewMatrix(lightViewMatrices[i]); RenderScene(); } \u8fd9\u4f1a\u5f88\u8017\u8d39\u6027\u80fd\u56e0\u4e3a\u4e00\u4e2a\u6df1\u5ea6\u8d34\u56fe\u4e0b\u9700\u8981\u8fdb\u884c\u5f88\u591a\u6e32\u67d3\u8c03\u7528\u3002\u8fd9\u4e2a\u6559\u7a0b\u4e2d\u6211\u4eec\u5c06\u8f6c\u800c\u4f7f\u7528\u53e6\u5916\u7684\u4e00\u4e2a\u5c0f\u6280\u5de7\u6765\u505a\u8fd9\u4ef6\u4e8b\uff0c\u51e0\u4f55\u7740\u8272\u5668\u5141\u8bb8\u6211\u4eec\u4f7f\u7528\u4e00\u6b21\u6e32\u67d3\u8fc7\u7a0b\u6765\u5efa\u7acb\u6df1\u5ea6\u7acb\u65b9\u4f53\u8d34\u56fe\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7acb\u65b9\u4f53\u8d34\u56fe\uff1a GLuint depthCubemap; glGenTextures(1, &depthCubemap); \u7136\u540e\u751f\u6210\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6bcf\u4e2a\u9762\uff0c\u5c06\u5b83\u4eec\u4f5c\u4e3a2D\u6df1\u5ea6\u503c\u7eb9\u7406\u56fe\u50cf\uff1a const GLuint SHADOW_WIDTH = 1024, SHADOW_HEIGHT = 1024; glBindTexture(GL_TEXTURE_CUBE_MAP, depthCubemap); for (GLuint i = 0; i < 6; ++i) glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, GL_DEPTH_COMPONENT, SHADOW_WIDTH, SHADOW_HEIGHT, 0, GL_DEPTH_COMPONENT, GL_FLOAT, NULL); \u4e0d\u8981\u5fd8\u8bb0\u8bbe\u7f6e\u5408\u9002\u7684\u7eb9\u7406\u53c2\u6570\uff1a glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MAG_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_R, GL_CLAMP_TO_EDGE); \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u628a\u7acb\u65b9\u4f53\u8d34\u56fe\u7eb9\u7406\u7684\u4e00\u4e2a\u9762\u9644\u52a0\u5230\u5e27\u7f13\u51b2\u5bf9\u8c61\u4e0a\uff0c\u6e32\u67d3\u573a\u666f6\u6b21\uff0c\u6bcf\u6b21\u5c06\u5e27\u7f13\u51b2\u7684\u6df1\u5ea6\u7f13\u51b2\u76ee\u6807\u6539\u6210\u4e0d\u540c\u7acb\u65b9\u4f53\u8d34\u56fe\u9762\u3002\u7531\u4e8e\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u51e0\u4f55\u7740\u8272\u5668\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u628a\u6240\u6709\u9762\u5728\u4e00\u4e2a\u8fc7\u7a0b\u6e32\u67d3\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528glFramebufferTexture\u76f4\u63a5\u628a\u7acb\u65b9\u4f53\u8d34\u56fe\u9644\u52a0\u6210\u5e27\u7f13\u51b2\u7684\u6df1\u5ea6\u9644\u4ef6\uff1a glBindFramebuffer(GL_FRAMEBUFFER, depthMapFBO); glFramebufferTexture(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, depthCubemap, 0); glDrawBuffer(GL_NONE); glReadBuffer(GL_NONE); glBindFramebuffer(GL_FRAMEBUFFER, 0); \u8fd8\u8981\u8bb0\u5f97\u8c03\u7528glDrawBuffer\u548cglReadBuffer\uff1a\u5f53\u751f\u6210\u4e00\u4e2a\u6df1\u5ea6\u7acb\u65b9\u4f53\u8d34\u56fe\u65f6\u6211\u4eec\u53ea\u5173\u5fc3\u6df1\u5ea6\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u663e\u5f0f\u544a\u8bc9OpenGL\u8fd9\u4e2a\u5e27\u7f13\u51b2\u5bf9\u8c61\u4e0d\u4f1a\u6e32\u67d3\u5230\u4e00\u4e2a\u989c\u8272\u7f13\u51b2\u91cc\u3002 \u4e07\u5411\u9634\u5f71\u8d34\u56fe\u6709\u4e24\u4e2a\u6e32\u67d3\u9636\u6bb5\uff1a\u9996\u5148\u6211\u4eec\u751f\u6210\u6df1\u5ea6\u8d34\u56fe\uff0c\u7136\u540e\u6211\u4eec\u6b63\u5e38\u4f7f\u7528\u6df1\u5ea6\u8d34\u56fe\u6e32\u67d3\uff0c\u5728\u573a\u666f\u4e2d\u521b\u5efa\u9634\u5f71\u3002\u5e27\u7f13\u51b2\u5bf9\u8c61\u548c\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u5904\u7406\u770b\u8d77\u662f\u8fd9\u6837\u7684\uff1a // 1. first render to depth cubemap glViewport(0, 0, SHADOW_WIDTH, SHADOW_HEIGHT); glBindFramebuffer(GL_FRAMEBUFFER, depthMapFBO); glClear(GL_DEPTH_BUFFER_BIT); ConfigureShaderAndMatrices(); RenderScene(); glBindFramebuffer(GL_FRAMEBUFFER, 0); // 2. then render scene as normal with shadow mapping (using depth cubemap) glViewport(0, 0, SCR_WIDTH, SCR_HEIGHT); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); ConfigureShaderAndMatrices(); glBindTexture(GL_TEXTURE_CUBE_MAP, depthCubemap); RenderScene(); \u8fd9\u4e2a\u8fc7\u7a0b\u548c\u9ed8\u8ba4\u7684\u9634\u5f71\u6620\u5c04\u4e00\u6837\uff0c\u5c3d\u7ba1\u8fd9\u6b21\u6211\u4eec\u6e32\u67d3\u548c\u4f7f\u7528\u7684\u662f\u4e00\u4e2a\u7acb\u65b9\u4f53\u8d34\u56fe\u6df1\u5ea6\u7eb9\u7406\uff0c\u800c\u4e0d\u662f2D\u6df1\u5ea6\u7eb9\u7406\u3002\u5728\u6211\u4eec\u5b9e\u9645\u5f00\u59cb\u4ece\u5149\u7684\u89c6\u89d2\u7684\u6240\u6709\u65b9\u5411\u6e32\u67d3\u573a\u666f\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u5f97\u8ba1\u7b97\u51fa\u5408\u9002\u7684\u53d8\u6362\u77e9\u9635\u3002 \u5149\u7a7a\u95f4\u7684\u53d8\u6362 \u8bbe\u7f6e\u4e86\u5e27\u7f13\u51b2\u548c\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u65b9\u6cd5\u6765\u8bb2\u573a\u666f\u7684\u6240\u6709\u51e0\u4f55\u4f53\u53d8\u6362\u52306\u4e2a\u5149\u7684\u65b9\u5411\u4e2d\u76f8\u5e94\u7684\u5149\u7a7a\u95f4\u3002\u4e0e\u9634\u5f71\u6620\u5c04\u6559\u7a0b\u7c7b\u4f3c\uff0c\u6211\u4eec\u5c06\u9700\u8981\u4e00\u4e2a\u5149\u7a7a\u95f4\u7684\u53d8\u6362\u77e9\u9635T\uff0c\u4f46\u662f\u8fd9\u6b21\u662f\u6bcf\u4e2a\u9762\u90fd\u6709\u4e00\u4e2a\u3002 \u6bcf\u4e2a\u5149\u7a7a\u95f4\u7684\u53d8\u6362\u77e9\u9635\u5305\u542b\u4e86\u6295\u5f71\u548c\u89c6\u56fe\u77e9\u9635\u3002\u5bf9\u4e8e\u6295\u5f71\u77e9\u9635\u6765\u8bf4\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u900f\u89c6\u6295\u5f71\u77e9\u9635\uff1b\u5149\u6e90\u4ee3\u8868\u4e00\u4e2a\u7a7a\u95f4\u4e2d\u7684\u70b9\uff0c\u6240\u4ee5\u900f\u89c6\u6295\u5f71\u77e9\u9635\u66f4\u6709\u610f\u4e49\u3002\u6bcf\u4e2a\u5149\u7a7a\u95f4\u53d8\u6362\u77e9\u9635\u4f7f\u7528\u540c\u6837\u7684\u6295\u5f71\u77e9\u9635\uff1a GLfloat aspect = (GLfloat)SHADOW_WIDTH/(GLfloat)SHADOW_HEIGHT; GLfloat near = 1.0f; GLfloat far = 25.0f; glm::mat4 shadowProj = glm::perspective(glm::radians(90.0f), aspect, near, far); \u975e\u5e38\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0c\u8fd9\u91ccglm::perspective\u7684\u89c6\u91ce\u53c2\u6570\uff0c\u8bbe\u7f6e\u4e3a90\u5ea6\u300290\u5ea6\u6211\u4eec\u624d\u80fd\u4fdd\u8bc1\u89c6\u91ce\u8db3\u591f\u5927\u5230\u53ef\u4ee5\u5408\u9002\u5730\u586b\u6ee1\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u4e00\u4e2a\u9762\uff0c\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6240\u6709\u9762\u90fd\u80fd\u4e0e\u5176\u4ed6\u9762\u5728\u8fb9\u7f18\u5bf9\u9f50\u3002 \u56e0\u4e3a\u6295\u5f71\u77e9\u9635\u5728\u6bcf\u4e2a\u65b9\u5411\u4e0a\u5e76\u4e0d\u4f1a\u6539\u53d8\uff0c\u6211\u4eec\u53ef\u4ee5\u57286\u4e2a\u53d8\u6362\u77e9\u9635\u4e2d\u91cd\u590d\u4f7f\u7528\u3002\u6211\u4eec\u8981\u4e3a\u6bcf\u4e2a\u65b9\u5411\u63d0\u4f9b\u4e00\u4e2a\u4e0d\u540c\u7684\u89c6\u56fe\u77e9\u9635\u3002\u7528glm::lookAt\u521b\u5efa6\u4e2a\u89c2\u5bdf\u65b9\u5411\uff0c\u6bcf\u4e2a\u90fd\u6309\u987a\u5e8f\u6ce8\u89c6\u7740\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u7684\u4e00\u4e2a\u65b9\u5411\uff1a\u53f3\u3001\u5de6\u3001\u4e0a\u3001\u4e0b\u3001\u8fd1\u3001\u8fdc\uff1a std::vector<glm::mat4> shadowTransforms; shadowTransforms.push_back(shadowProj * glm::lookAt(lightPos, lightPos + glm::vec3(1.0,0.0,0.0), glm::vec3(0.0,-1.0,0.0))); shadowTransforms.push_back(shadowProj * glm::lookAt(lightPos, lightPos + glm::vec3(-1.0,0.0,0.0), glm::vec3(0.0,-1.0,0.0))); shadowTransforms.push_back(shadowProj * glm::lookAt(lightPos, lightPos + glm::vec3(0.0,1.0,0.0), glm::vec3(0.0,0.0,1.0))); shadowTransforms.push_back(shadowProj * glm::lookAt(lightPos, lightPos + glm::vec3(0.0,-1.0,0.0), glm::vec3(0.0,0.0,-1.0))); shadowTransforms.push_back(shadowProj * glm::lookAt(lightPos, lightPos + glm::vec3(0.0,0.0,1.0), glm::vec3(0.0,-1.0,0.0))); shadowTransforms.push_back(shadowProj * glm::lookAt(lightPos, lightPos + glm::vec3(0.0,0.0,-1.0), glm::vec3(0.0,-1.0,0.0))); \u8fd9\u91cc\u6211\u4eec\u521b\u5efa\u4e866\u4e2a\u89c6\u56fe\u77e9\u9635\uff0c\u628a\u5b83\u4eec\u4e58\u4ee5\u6295\u5f71\u77e9\u9635\uff0c\u6765\u5f97\u52306\u4e2a\u4e0d\u540c\u7684\u5149\u7a7a\u95f4\u53d8\u6362\u77e9\u9635\u3002glm::lookAt\u7684target\u53c2\u6570\u662f\u5b83\u6ce8\u89c6\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u9762\u7684\u4e00\u4e2a\u65b9\u5411\u3002 \u8fd9\u4e9b\u53d8\u6362\u77e9\u9635\u53d1\u9001\u5230\u7740\u8272\u5668\u6e32\u67d3\u5230\u7acb\u65b9\u4f53\u8d34\u56fe\u91cc\u3002 \u6df1\u5ea6\u7740\u8272\u5668 \u4e3a\u4e86\u628a\u503c\u6e32\u67d3\u5230\u6df1\u5ea6\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u6211\u4eec\u5c06\u9700\u89813\u4e2a\u7740\u8272\u5668\uff1a\u9876\u70b9\u548c\u50cf\u7d20\u7740\u8272\u5668\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5b83\u4eec\u4e4b\u95f4\u7684\u51e0\u4f55\u7740\u8272\u5668\u3002 \u51e0\u4f55\u7740\u8272\u5668\u662f\u8d1f\u8d23\u5c06\u6240\u6709\u4e16\u754c\u7a7a\u95f4\u7684\u9876\u70b9\u53d8\u6362\u52306\u4e2a\u4e0d\u540c\u7684\u5149\u7a7a\u95f4\u7684\u7740\u8272\u5668\u3002\u56e0\u6b64\u9876\u70b9\u7740\u8272\u5668\u7b80\u5355\u5730\u5c06\u9876\u70b9\u53d8\u6362\u5230\u4e16\u754c\u7a7a\u95f4\uff0c\u7136\u540e\u76f4\u63a5\u53d1\u9001\u5230\u51e0\u4f55\u7740\u8272\u5668\uff1a #version 330 core layout (location = 0) in vec3 position; uniform mat4 model; void main() { gl_Position = model * vec4(position, 1.0); } \u7d27\u63a5\u7740\u51e0\u4f55\u7740\u8272\u5668\u4ee53\u4e2a\u4e09\u89d2\u5f62\u7684\u9876\u70b9\u4f5c\u4e3a\u8f93\u5165\uff0c\u5b83\u8fd8\u6709\u4e00\u4e2a\u5149\u7a7a\u95f4\u53d8\u6362\u77e9\u9635\u7684uniform\u6570\u7ec4\u3002\u51e0\u4f55\u7740\u8272\u5668\u63a5\u4e0b\u6765\u4f1a\u8d1f\u8d23\u5c06\u9876\u70b9\u53d8\u6362\u5230\u5149\u7a7a\u95f4\uff1b\u8fd9\u91cc\u5b83\u5f00\u59cb\u53d8\u5f97\u6709\u8da3\u4e86\u3002 \u51e0\u4f55\u7740\u8272\u5668\u6709\u4e00\u4e2a\u5185\u5efa\u53d8\u91cf\u53eb\u505agl_Layer\uff0c\u5b83\u6307\u5b9a\u53d1\u6563\u51fa\u57fa\u672c\u56fe\u5f62\u9001\u5230\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u54ea\u4e2a\u9762\u3002\u5f53\u4e0d\u7ba1\u5b83\u65f6\uff0c\u51e0\u4f55\u7740\u8272\u5668\u5c31\u4f1a\u50cf\u5f80\u5e38\u4e00\u6837\u628a\u5b83\u7684\u57fa\u672c\u56fe\u5f62\u53d1\u9001\u5230\u8f93\u9001\u7ba1\u9053\u7684\u4e0b\u4e00\u9636\u6bb5\uff0c\u4f46\u5f53\u6211\u4eec\u66f4\u65b0\u8fd9\u4e2a\u53d8\u91cf\u5c31\u80fd\u63a7\u5236\u6bcf\u4e2a\u57fa\u672c\u56fe\u5f62\u5c06\u6e32\u67d3\u5230\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u54ea\u4e00\u4e2a\u9762\u3002\u5f53\u7136\u8fd9\u53ea\u6709\u5f53\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u9644\u52a0\u5230\u6fc0\u6d3b\u7684\u5e27\u7f13\u51b2\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u7eb9\u7406\u624d\u6709\u6548\uff1a #version 330 core layout (triangles) in; layout (triangle_strip, max_vertices=18) out; uniform mat4 shadowMatrices[6]; out vec4 FragPos; // FragPos from GS (output per emitvertex) void main() { for(int face = 0; face < 6; ++face) { gl_Layer = face; // built-in variable that specifies to which face we render. for(int i = 0; i < 3; ++i) // for each triangle's vertices { FragPos = gl_in[i].gl_Position; gl_Position = shadowMatrices[face] * FragPos; EmitVertex(); } EndPrimitive(); } } \u51e0\u4f55\u7740\u8272\u5668\u76f8\u5bf9\u7b80\u5355\u3002\u6211\u4eec\u8f93\u5165\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u8f93\u51fa\u603b\u51716\u4e2a\u4e09\u89d2\u5f62\uff086*3\u9876\u70b9\uff0c\u6240\u4ee5\u603b\u517118\u4e2a\u9876\u70b9\uff09\u3002\u5728main\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u904d\u5386\u7acb\u65b9\u4f53\u8d34\u56fe\u76846\u4e2a\u9762\uff0c\u6211\u4eec\u6bcf\u4e2a\u9762\u6307\u5b9a\u4e3a\u4e00\u4e2a\u8f93\u51fa\u9762\uff0c\u628a\u8fd9\u4e2a\u9762\u7684interger\uff08\u6574\u6570\uff09\u5b58\u5230gl_Layer\u3002\u7136\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u628a\u9762\u7684\u5149\u7a7a\u95f4\u53d8\u6362\u77e9\u9635\u4e58\u4ee5FragPos\uff0c\u5c06\u6bcf\u4e2a\u4e16\u754c\u7a7a\u95f4\u9876\u70b9\u53d8\u6362\u5230\u76f8\u5173\u7684\u5149\u7a7a\u95f4\uff0c\u751f\u6210\u6bcf\u4e2a\u4e09\u89d2\u5f62\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u8fd8\u8981\u5c06\u6700\u540e\u7684FragPos\u53d8\u91cf\u53d1\u9001\u7ed9\u50cf\u7d20\u7740\u8272\u5668\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u4e00\u4e2a\u6df1\u5ea6\u503c\u3002 \u4e0a\u4e2a\u6559\u7a0b\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f\u4e00\u4e2a\u7a7a\u7684\u50cf\u7d20\u7740\u8272\u5668\uff0c\u8ba9OpenGL\u914d\u7f6e\u6df1\u5ea6\u8d34\u56fe\u7684\u6df1\u5ea6\u503c\u3002\u8fd9\u6b21\u6211\u4eec\u5c06\u8ba1\u7b97\u81ea\u5df1\u7684\u6df1\u5ea6\uff0c\u8fd9\u4e2a\u6df1\u5ea6\u5c31\u662f\u6bcf\u4e2afragment\u4f4d\u7f6e\u548c\u5149\u6e90\u4f4d\u7f6e\u4e4b\u95f4\u7684\u7ebf\u6027\u8ddd\u79bb\u3002\u8ba1\u7b97\u81ea\u5df1\u7684\u6df1\u5ea6\u503c\u4f7f\u5f97\u4e4b\u540e\u7684\u9634\u5f71\u8ba1\u7b97\u66f4\u52a0\u76f4\u89c2\u3002 #version 330 core in vec4 FragPos; uniform vec3 lightPos; uniform float far_plane; void main() { // get distance between fragment and light source float lightDistance = length(FragPos.xyz - lightPos); // map to [0;1] range by dividing by far_plane lightDistance = lightDistance / far_plane; // write this as modified depth gl_FragDepth = lightDistance; } \u50cf\u7d20\u7740\u8272\u5668\u5c06\u6765\u81ea\u51e0\u4f55\u7740\u8272\u5668\u7684FragPos\u3001\u5149\u7684\u4f4d\u7f6e\u5411\u91cf\u548c\u89c6\u9525\u7684\u8fdc\u5e73\u9762\u503c\u4f5c\u4e3a\u8f93\u5165\u3002\u8fd9\u91cc\u6211\u4eec\u628afragment\u548c\u5149\u6e90\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u6620\u5c04\u52300\u52301\u7684\u8303\u56f4\uff0c\u628a\u5b83\u5199\u5165\u4e3afragment\u7684\u6df1\u5ea6\u503c\u3002 \u4f7f\u7528\u8fd9\u4e9b\u7740\u8272\u5668\u6e32\u67d3\u573a\u666f\uff0c\u7acb\u65b9\u4f53\u8d34\u56fe\u9644\u52a0\u7684\u5e27\u7f13\u51b2\u5bf9\u8c61\u6fc0\u6d3b\u4ee5\u540e\uff0c\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u5b8c\u5168\u586b\u5145\u7684\u6df1\u5ea6\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u4ee5\u4fbf\u4e8e\u8fdb\u884c\u7b2c\u4e8c\u9636\u6bb5\u7684\u9634\u5f71\u8ba1\u7b97\u3002 \u4e07\u5411\u9634\u5f71\u8d34\u56fe \u6240\u6709\u4e8b\u60c5\u90fd\u505a\u597d\u4e86\uff0c\u662f\u65f6\u5019\u6765\u6e32\u67d3\u4e07\u5411\u9634\u5f71(Omnidirectional Shadow)\u4e86\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u548c\u5b9a\u5411\u9634\u5f71\u6620\u5c04\u6559\u7a0b\u76f8\u4f3c\uff0c\u5c3d\u7ba1\u8fd9\u6b21\u6211\u4eec\u7ed1\u5b9a\u7684\u6df1\u5ea6\u8d34\u56fe\u662f\u4e00\u4e2a\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u800c\u4e0d\u662f2D\u7eb9\u7406\uff0c\u5e76\u4e14\u5c06\u5149\u7684\u6295\u5f71\u7684\u8fdc\u5e73\u9762\u53d1\u9001\u7ed9\u4e86\u7740\u8272\u5668\u3002 glViewport(0, 0, SCR_WIDTH, SCR_HEIGHT); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); shader.Use(); // ... send uniforms to shader (including light's far_plane value) glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_CUBE_MAP, depthCubemap); // ... bind other textures RenderScene(); \u8fd9\u91cc\u7684renderScene\u51fd\u6570\u5728\u4e00\u4e2a\u5927\u7acb\u65b9\u4f53\u623f\u95f4\u4e2d\u6e32\u67d3\u4e00\u4e9b\u7acb\u65b9\u4f53\uff0c\u5b83\u4eec\u6563\u843d\u5728\u5927\u7acb\u65b9\u4f53\u5404\u5904\uff0c\u5149\u6e90\u5728\u573a\u666f\u4e2d\u592e\u3002 \u9876\u70b9\u7740\u8272\u5668\u548c\u50cf\u7d20\u7740\u8272\u5668\u548c\u539f\u6765\u7684\u9634\u5f71\u6620\u5c04\u7740\u8272\u5668\u5927\u90e8\u5206\u90fd\u4e00\u6837\uff1a\u4e0d\u540c\u4e4b\u5904\u662f\u5728\u5149\u7a7a\u95f4\u4e2d\u50cf\u7d20\u7740\u8272\u5668\u4e0d\u518d\u9700\u8981\u4e00\u4e2afragment\u4f4d\u7f6e\uff0c\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u65b9\u5411\u5411\u91cf\u91c7\u6837\u6df1\u5ea6\u503c\u3002 \u56e0\u4e3a\u8fd9\u4e2a\u9876\u70b9\u7740\u8272\u5668\u4e0d\u518d\u9700\u8981\u5c06\u4ed6\u7684\u4f4d\u7f6e\u5411\u91cf\u53d8\u6362\u5230\u5149\u7a7a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u53bb\u6389FragPosLightSpace\u53d8\u91cf\uff1a #version 330 core layout (location = 0) in vec3 position; layout (location = 1) in vec3 normal; layout (location = 2) in vec2 texCoords; out vec2 TexCoords; out VS_OUT { vec3 FragPos; vec3 Normal; vec2 TexCoords; } vs_out; uniform mat4 projection; uniform mat4 view; uniform mat4 model; void main() { gl_Position = projection * view * model * vec4(position, 1.0f); vs_out.FragPos = vec3(model * vec4(position, 1.0)); vs_out.Normal = transpose(inverse(mat3(model))) * normal; vs_out.TexCoords = texCoords; } \u7247\u6bb5\u7740\u8272\u5668\u7684Blinn-Phong\u5149\u7167\u4ee3\u7801\u548c\u6211\u4eec\u4e4b\u524d\u9634\u5f71\u76f8\u4e58\u7684\u7ed3\u5c3e\u90e8\u5206\u4e00\u6837\uff1a #version 330 core out vec4 FragColor; in VS_OUT { vec3 FragPos; vec3 Normal; vec2 TexCoords; } fs_in; uniform sampler2D diffuseTexture; uniform samplerCube depthMap; uniform vec3 lightPos; uniform vec3 viewPos; uniform float far_plane; float ShadowCalculation(vec3 fragPos) { [...] } void main() { vec3 color = texture(diffuseTexture, fs_in.TexCoords).rgb; vec3 normal = normalize(fs_in.Normal); vec3 lightColor = vec3(0.3); // Ambient vec3 ambient = 0.3 * color; // Diffuse vec3 lightDir = normalize(lightPos - fs_in.FragPos); float diff = max(dot(lightDir, normal), 0.0); vec3 diffuse = diff * lightColor; // Specular vec3 viewDir = normalize(viewPos - fs_in.FragPos); vec3 reflectDir = reflect(-lightDir, normal); float spec = 0.0; vec3 halfwayDir = normalize(lightDir + viewDir); spec = pow(max(dot(normal, halfwayDir), 0.0), 64.0); vec3 specular = spec * lightColor; // Calculate shadow float shadow = ShadowCalculation(fs_in.FragPos); vec3 lighting = (ambient + (1.0 - shadow) * (diffuse + specular)) * color; FragColor = vec4(lighting, 1.0f); } \u6709\u4e00\u4e9b\u7ec6\u5fae\u7684\u4e0d\u540c\uff1a\u5149\u7167\u4ee3\u7801\u4e00\u6837\uff0c\u4f46\u6211\u4eec\u73b0\u5728\u6709\u4e86\u4e00\u4e2auniform\u53d8\u91cfsamplerCube\uff0cshadowCalculation\u51fd\u6570\u7528fragment\u7684\u4f4d\u7f6e\u4f5c\u4e3a\u5b83\u7684\u53c2\u6570\uff0c\u53d6\u4ee3\u4e86\u5149\u7a7a\u95f4\u7684fragment\u4f4d\u7f6e\u3002\u6211\u4eec\u73b0\u5728\u8fd8\u8981\u5f15\u5165\u5149\u7684\u89c6\u9525\u7684\u8fdc\u5e73\u9762\u503c\uff0c\u540e\u9762\u6211\u4eec\u4f1a\u9700\u8981\u5b83\u3002\u50cf\u7d20\u7740\u8272\u5668\u7684\u6700\u540e\uff0c\u6211\u4eec\u8ba1\u7b97\u51fa\u9634\u5f71\u5143\u7d20\uff0c\u5f53fragment\u5728\u9634\u5f71\u4e2d\u65f6\u5b83\u662f1.0\uff0c\u4e0d\u5728\u9634\u5f71\u4e2d\u65f6\u662f0.0\u3002\u6211\u4eec\u4f7f\u7528\u8ba1\u7b97\u51fa\u6765\u7684\u9634\u5f71\u5143\u7d20\u53bb\u5f71\u54cd\u5149\u7167\u7684diffuse\u548cspecular\u5143\u7d20\u3002 \u5728ShadowCalculation\u51fd\u6570\u4e2d\u6709\u5f88\u591a\u4e0d\u540c\u4e4b\u5904\uff0c\u73b0\u5728\u662f\u4ece\u7acb\u65b9\u4f53\u8d34\u56fe\u4e2d\u8fdb\u884c\u91c7\u6837\uff0c\u4e0d\u518d\u4f7f\u75282D\u7eb9\u7406\u4e86\u3002\u6211\u4eec\u6765\u4e00\u6b65\u4e00\u6b65\u7684\u8ba8\u8bba\u4e00\u4e0b\u7684\u5b83\u7684\u5185\u5bb9\u3002 \u6211\u4eec\u9700\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u83b7\u53d6\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6df1\u5ea6\u3002\u4f60\u53ef\u80fd\u5df2\u7ecf\u4ece\u6559\u7a0b\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u90e8\u5206\u60f3\u5230\uff0c\u6211\u4eec\u5df2\u7ecf\u5c06\u6df1\u5ea6\u50a8\u5b58\u4e3afragment\u548c\u5149\u4f4d\u7f6e\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e86\uff1b\u6211\u4eec\u8fd9\u91cc\u91c7\u7528\u76f8\u4f3c\u7684\u5904\u7406\u65b9\u5f0f\uff1a float ShadowCalculation(vec3 fragPos) { vec3 fragToLight = fragPos - lightPos; float closestDepth = texture(depthMap, fragToLight).r; } \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5f97\u5230\u4e86fragment\u7684\u4f4d\u7f6e\u4e0e\u5149\u7684\u4f4d\u7f6e\u4e4b\u95f4\u7684\u5dee\u5411\u91cf\uff0c\u4f7f\u7528\u8fd9\u4e2a\u5411\u91cf\u4f5c\u4e3a\u4e00\u4e2a\u65b9\u5411\u5411\u91cf\u53bb\u5bf9\u7acb\u65b9\u4f53\u8d34\u56fe\u8fdb\u884c\u91c7\u6837\u3002\u65b9\u5411\u5411\u91cf\u4e0d\u9700\u8981\u662f\u5355\u4f4d\u5411\u91cf\uff0c\u6240\u4ee5\u65e0\u9700\u5bf9\u5b83\u8fdb\u884c\u6807\u51c6\u5316\u3002\u6700\u540e\u7684closestDepth\u662f\u5149\u6e90\u548c\u5b83\u6700\u63a5\u8fd1\u7684\u53ef\u89c1fragment\u4e4b\u95f4\u7684\u6807\u51c6\u5316\u7684\u6df1\u5ea6\u503c\u3002 closestDepth\u503c\u73b0\u5728\u57280\u52301\u7684\u8303\u56f4\u5185\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u5c06\u5176\u8f6c\u6362\u56de0\u5230far_plane\u7684\u8303\u56f4\uff0c\u8fd9\u9700\u8981\u628a\u4ed6\u4e58\u4ee5far_plane\uff1a closestDepth *= far_plane; \u4e0b\u4e00\u6b65\u6211\u4eec\u83b7\u53d6\u5f53\u524dfragment\u548c\u5149\u6e90\u4e4b\u95f4\u7684\u6df1\u5ea6\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u4f7f\u7528fragToLight\u7684\u957f\u5ea6\u6765\u83b7\u53d6\u5b83\uff0c\u8fd9\u53d6\u51b3\u4e8e\u6211\u4eec\u5982\u4f55\u8ba1\u7b97\u7acb\u65b9\u4f53\u8d34\u56fe\u4e2d\u7684\u6df1\u5ea6\u503c\uff1a float currentDepth = length(fragToLight); \u8fd4\u56de\u7684\u662f\u548cclosestDepth\u8303\u56f4\u76f8\u540c\u7684\u6df1\u5ea6\u503c\u3002 \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5c06\u4e24\u4e2a\u6df1\u5ea6\u503c\u5bf9\u6bd4\u4e00\u4e0b\uff0c\u770b\u770b\u54ea\u4e00\u4e2a\u66f4\u63a5\u8fd1\uff0c\u4ee5\u6b64\u51b3\u5b9a\u5f53\u524d\u7684fragment\u662f\u5426\u5728\u9634\u5f71\u5f53\u4e2d\u3002\u6211\u4eec\u8fd8\u8981\u5305\u542b\u4e00\u4e2a\u9634\u5f71\u504f\u79fb\uff0c\u6240\u4ee5\u624d\u80fd\u907f\u514d\u9634\u5f71\u5931\u771f\uff0c\u8fd9\u5728\u524d\u9762\u6559\u7a0b\u4e2d\u5df2\u7ecf\u8ba8\u8bba\u8fc7\u4e86\u3002 float bias = 0.05; float shadow = currentDepth - bias > closestDepth ? 1.0 : 0.0; \u5b8c\u6574\u7684ShadowCalculation\u73b0\u5728\u53d8\u6210\u4e86\u8fd9\u6837\uff1a float ShadowCalculation(vec3 fragPos) { // Get vector between fragment position and light position vec3 fragToLight = fragPos - lightPos; // Use the light to fragment vector to sample from the depth map float closestDepth = texture(depthMap, fragToLight).r; // It is currently in linear range between [0,1]. Re-transform back to original value closestDepth *= far_plane; // Now get current linear depth as the length between the fragment and light position float currentDepth = length(fragToLight); // Now test for shadows float bias = 0.05; float shadow = currentDepth - bias > closestDepth ? 1.0 : 0.0; return shadow; } \u6709\u4e86\u8fd9\u4e9b\u7740\u8272\u5668\uff0c\u6211\u4eec\u5df2\u7ecf\u80fd\u5f97\u5230\u975e\u5e38\u597d\u7684\u9634\u5f71\u6548\u679c\u4e86\uff0c\u8fd9\u6b21\u4ece\u4e00\u4e2a\u70b9\u5149\u6e90\u6240\u6709\u5468\u56f4\u65b9\u5411\u4e0a\u90fd\u6709\u9634\u5f71\u3002\u6709\u4e00\u4e2a\u4f4d\u4e8e\u573a\u666f\u4e2d\u5fc3\u7684\u70b9\u5149\u6e90\uff0c\u770b\u8d77\u6765\u4f1a\u50cf\u8fd9\u6837\uff1a \u4f60\u53ef\u4ee5\u4ece\u8fd9\u91cc\u627e\u5230\u8fd9\u4e2a demo\u7684\u6e90\u7801 \u3001 \u9876\u70b9 \u548c \u7247\u6bb5 \u7740\u8272\u5668\u3002 \u663e\u793a\u7acb\u65b9\u4f53\u8d34\u56fe\u6df1\u5ea6\u7f13\u51b2 \u5982\u679c\u4f60\u60f3\u6211\u4e00\u6837\u7b2c\u4e00\u6b21\u5e76\u6ca1\u6709\u505a\u5bf9\uff0c\u90a3\u4e48\u5c31\u8981\u8fdb\u884c\u8c03\u8bd5\u6392\u9519\uff0c\u5c06\u6df1\u5ea6\u8d34\u56fe\u663e\u793a\u51fa\u6765\u4ee5\u68c0\u67e5\u5176\u662f\u5426\u6b63\u786e\u3002\u56e0\u4e3a\u6211\u4eec\u4e0d\u518d\u75282D\u6df1\u5ea6\u8d34\u56fe\u7eb9\u7406\uff0c\u6df1\u5ea6\u8d34\u56fe\u7684\u663e\u793a\u4e0d\u4f1a\u90a3\u4e48\u663e\u800c\u6613\u89c1\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u628a\u6df1\u5ea6\u7f13\u51b2\u663e\u793a\u51fa\u6765\u7684\u6280\u5de7\u662f\uff0c\u5728ShadowCalculation\u51fd\u6570\u4e2d\u8ba1\u7b97\u6807\u51c6\u5316\u7684closestDepth\u53d8\u91cf\uff0c\u628a\u53d8\u91cf\u663e\u793a\u4e3a\uff1a FragColor = vec4(vec3(closestDepth / far_plane), 1.0); \u7ed3\u679c\u662f\u4e00\u4e2a\u7070\u5ea6\u573a\u666f\uff0c\u6bcf\u4e2a\u989c\u8272\u4ee3\u8868\u7740\u573a\u666f\u7684\u7ebf\u6027\u6df1\u5ea6\u503c\uff1a \u4f60\u53ef\u80fd\u4e5f\u6ce8\u610f\u5230\u4e86\u5e26\u9634\u5f71\u90e8\u5206\u5728\u5899\u5916\u3002\u5982\u679c\u770b\u8d77\u6765\u548c\u8fd9\u4e2a\u5dee\u4e0d\u591a\uff0c\u4f60\u5c31\u77e5\u9053\u6df1\u5ea6\u7acb\u65b9\u4f53\u8d34\u56fe\u751f\u6210\u7684\u6ca1\u9519\u3002\u5426\u5219\u4f60\u53ef\u80fd\u505a\u9519\u4e86\u4ec0\u4e48\uff0c\u4e5f\u8bb8\u662fclosestDepth\u4ecd\u7136\u8fd8\u57280\u5230far_plane\u7684\u8303\u56f4\u3002 PCF \u7531\u4e8e\u4e07\u5411\u9634\u5f71\u8d34\u56fe\u57fa\u4e8e\u4f20\u7edf\u9634\u5f71\u6620\u5c04\u7684\u539f\u5219\uff0c\u5b83\u4fbf\u4e5f\u7ee7\u627f\u4e86\u7531\u89e3\u6790\u5ea6\u4ea7\u751f\u7684\u975e\u771f\u5b9e\u611f\u3002\u5982\u679c\u4f60\u653e\u5927\u5c31\u4f1a\u770b\u5230\u952f\u9f7f\u8fb9\u4e86\u3002PCF\u6216\u79f0Percentage-closer filtering\u5141\u8bb8\u6211\u4eec\u901a\u8fc7\u5bf9fragment\u4f4d\u7f6e\u5468\u56f4\u8fc7\u6ee4\u591a\u4e2a\u6837\u672c\uff0c\u5e76\u5bf9\u7ed3\u679c\u5e73\u5747\u5316\u3002 \u5982\u679c\u6211\u4eec\u7528\u548c\u524d\u9762\u6559\u7a0b\u540c\u6837\u7684\u90a3\u4e2a\u7b80\u5355\u7684PCF\u8fc7\u6ee4\u5668\uff0c\u5e76\u52a0\u5165\u7b2c\u4e09\u4e2a\u7ef4\u5ea6\uff0c\u5c31\u662f\u8fd9\u6837\u7684\uff1a float shadow = 0.0; float bias = 0.05; float samples = 4.0; float offset = 0.1; for(float x = -offset; x < offset; x += offset / (samples * 0.5)) { for(float y = -offset; y < offset; y += offset / (samples * 0.5)) { for(float z = -offset; z < offset; z += offset / (samples * 0.5)) { float closestDepth = texture(depthMap, fragToLight + vec3(x, y, z)).r; closestDepth *= far_plane; // Undo mapping [0;1] if(currentDepth - bias > closestDepth) shadow += 1.0; } } } shadow /= (samples * samples * samples); \u8fd9\u6bb5\u4ee3\u7801\u548c\u6211\u4eec\u4f20\u7edf\u7684\u9634\u5f71\u6620\u5c04\u6ca1\u6709\u591a\u5c11\u4e0d\u540c\u3002\u8fd9\u91cc\u6211\u4eec\u6839\u636e\u6837\u672c\u7684\u6570\u91cf\u52a8\u6001\u8ba1\u7b97\u4e86\u7eb9\u7406\u504f\u79fb\u91cf\uff0c\u6211\u4eec\u5728\u4e09\u4e2a\u8f74\u5411\u91c7\u6837\u4e09\u6b21\uff0c\u6700\u540e\u5bf9\u5b50\u6837\u672c\u8fdb\u884c\u5e73\u5747\u5316\u3002 \u73b0\u5728\u9634\u5f71\u770b\u8d77\u6765\u66f4\u52a0\u67d4\u548c\u5e73\u6ed1\u4e86\uff0c\u7531\u6b64\u5f97\u5230\u66f4\u52a0\u771f\u5b9e\u7684\u6548\u679c\uff1a \u7136\u800c\uff0csamples\u8bbe\u7f6e\u4e3a4.0\uff0c\u6bcf\u4e2afragment\u6211\u4eec\u4f1a\u5f97\u5230\u603b\u517164\u4e2a\u6837\u672c\uff0c\u8fd9\u592a\u591a\u4e86\uff01 \u5927\u591a\u6570\u8fd9\u4e9b\u91c7\u6837\u90fd\u662f\u591a\u4f59\u7684\uff0c\u4e0e\u5176\u5728\u539f\u59cb\u65b9\u5411\u5411\u91cf\u9644\u8fd1\u5904\u91c7\u6837\uff0c\u4e0d\u5982\u5728\u91c7\u6837\u65b9\u5411\u5411\u91cf\u7684\u5782\u76f4\u65b9\u5411\u8fdb\u884c\u91c7\u6837\u66f4\u6709\u610f\u4e49\u3002\u53ef\u662f\uff0c\u6ca1\u6709\uff08\u7b80\u5355\u7684\uff09\u65b9\u5f0f\u80fd\u591f\u6307\u51fa\u54ea\u4e00\u4e2a\u5b50\u65b9\u5411\u662f\u591a\u4f59\u7684\uff0c\u8fd9\u5c31\u96be\u4e86\u3002\u6709\u4e2a\u6280\u5de7\u53ef\u4ee5\u4f7f\u7528\uff0c\u7528\u4e00\u4e2a\u504f\u79fb\u91cf\u65b9\u5411\u6570\u7ec4\uff0c\u5b83\u4eec\u5dee\u4e0d\u591a\u90fd\u662f\u5206\u5f00\u7684\uff0c\u6bcf\u4e00\u4e2a\u6307\u5411\u5b8c\u5168\u4e0d\u540c\u7684\u65b9\u5411\uff0c\u5254\u9664\u5f7c\u6b64\u63a5\u8fd1\u7684\u90a3\u4e9b\u5b50\u65b9\u5411\u3002\u4e0b\u9762\u5c31\u662f\u4e00\u4e2a\u6709\u774020\u4e2a\u504f\u79fb\u65b9\u5411\u7684\u6570\u7ec4\uff1a vec3 sampleOffsetDirections[20] = vec3[] ( vec3( 1, 1, 1), vec3( 1, -1, 1), vec3(-1, -1, 1), vec3(-1, 1, 1), vec3( 1, 1, -1), vec3( 1, -1, -1), vec3(-1, -1, -1), vec3(-1, 1, -1), vec3( 1, 1, 0), vec3( 1, -1, 0), vec3(-1, -1, 0), vec3(-1, 1, 0), vec3( 1, 0, 1), vec3(-1, 0, 1), vec3( 1, 0, -1), vec3(-1, 0, -1), vec3( 0, 1, 1), vec3( 0, -1, 1), vec3( 0, -1, -1), vec3( 0, 1, -1) ); \u7136\u540e\u6211\u4eec\u628aPCF\u7b97\u6cd5\u4e0e\u4ecesampleOffsetDirections\u5f97\u5230\u7684\u6837\u672c\u6570\u91cf\u8fdb\u884c\u9002\u914d\uff0c\u4f7f\u7528\u5b83\u4eec\u4ece\u7acb\u65b9\u4f53\u8d34\u56fe\u91cc\u91c7\u6837\u3002\u8fd9\u4e48\u505a\u7684\u597d\u5904\u662f\u4e0e\u4e4b\u524d\u7684PCF\u7b97\u6cd5\u76f8\u6bd4\uff0c\u6211\u4eec\u9700\u8981\u7684\u6837\u672c\u6570\u91cf\u53d8\u5c11\u4e86\u3002 float shadow = 0.0; float bias = 0.15; int samples = 20; float viewDistance = length(viewPos - fragPos); float diskRadius = 0.05; for(int i = 0; i < samples; ++i) { float closestDepth = texture(depthMap, fragToLight + sampleOffsetDirections[i] * diskRadius).r; closestDepth *= far_plane; // Undo mapping [0;1] if(currentDepth - bias > closestDepth) shadow += 1.0; } shadow /= float(samples); \u8fd9\u91cc\u6211\u4eec\u628a\u4e00\u4e2a\u504f\u79fb\u91cf\u6dfb\u52a0\u5230\u6307\u5b9a\u7684diskRadius\u4e2d\uff0c\u5b83\u5728fragToLight\u65b9\u5411\u5411\u91cf\u5468\u56f4\u4ece\u7acb\u65b9\u4f53\u8d34\u56fe\u91cc\u91c7\u6837\u3002 \u53e6\u4e00\u4e2a\u5728\u8fd9\u91cc\u53ef\u4ee5\u5e94\u7528\u7684\u6709\u610f\u601d\u7684\u6280\u5de7\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u57fa\u4e8e\u89c2\u5bdf\u8005\u91cc\u4e00\u4e2afragment\u7684\u8ddd\u79bb\u6765\u6539\u53d8diskRadius\uff1b\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u6839\u636e\u89c2\u5bdf\u8005\u7684\u8ddd\u79bb\u6765\u589e\u52a0\u504f\u79fb\u534a\u5f84\u4e86\uff0c\u5f53\u8ddd\u79bb\u66f4\u8fdc\u7684\u65f6\u5019\u9634\u5f71\u66f4\u67d4\u548c\uff0c\u66f4\u8fd1\u4e86\u5c31\u66f4\u9510\u5229\u3002 float diskRadius = (1.0 + (viewDistance / far_plane)) / 25.0; PCF\u7b97\u6cd5\u7684\u7ed3\u679c\u5982\u679c\u6ca1\u6709\u53d8\u5f97\u66f4\u597d\uff0c\u4e5f\u662f\u975e\u5e38\u4e0d\u9519\u7684\uff0c\u8fd9\u662f\u67d4\u548c\u7684\u9634\u5f71\u6548\u679c\uff1a \u5f53\u7136\u4e86\uff0c\u6211\u4eec\u6dfb\u52a0\u5230\u6bcf\u4e2a\u6837\u672c\u7684bias\uff08\u504f\u79fb\uff09\u9ad8\u5ea6\u4f9d\u8d56\u4e8e\u4e0a\u4e0b\u6587\uff0c\u603b\u662f\u8981\u6839\u636e\u573a\u666f\u8fdb\u884c\u5fae\u8c03\u7684\u3002\u8bd5\u8bd5\u8fd9\u4e9b\u503c\uff0c\u770b\u770b\u600e\u6837\u5f71\u54cd\u4e86\u573a\u666f\u3002 \u8fd9\u91cc\u662f\u6700\u7ec8\u7248\u672c\u7684\u9876\u70b9\u548c\u50cf\u7d20\u7740\u8272\u5668\u3002 \u6211\u8fd8\u8981\u63d0\u9192\u4e00\u4e0b\u4f7f\u7528\u51e0\u4f55\u7740\u8272\u5668\u6765\u751f\u6210\u6df1\u5ea6\u8d34\u56fe\u4e0d\u4f1a\u4e00\u5b9a\u6bd4\u6bcf\u4e2a\u9762\u6e32\u67d3\u573a\u666f6\u6b21\u66f4\u5feb\u3002\u4f7f\u7528\u51e0\u4f55\u7740\u8272\u5668\u6709\u5b83\u81ea\u5df1\u7684\u6027\u80fd\u5c40\u9650\uff0c\u5728\u7b2c\u4e00\u4e2a\u9636\u6bb5\u4f7f\u7528\u5b83\u53ef\u80fd\u83b7\u5f97\u66f4\u597d\u7684\u6027\u80fd\u8868\u73b0\u3002\u8fd9\u53d6\u51b3\u4e8e\u73af\u5883\u7684\u7c7b\u578b\uff0c\u4ee5\u53ca\u7279\u5b9a\u7684\u663e\u5361\u9a71\u52a8\u7b49\u7b49\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u5f88\u5173\u5fc3\u6027\u80fd\uff0c\u5c31\u8981\u786e\u4fdd\u5bf9\u4e24\u79cd\u65b9\u6cd5\u6709\u5927\u81f4\u4e86\u89e3\uff0c\u7136\u540e\u9009\u62e9\u5bf9\u4f60\u573a\u666f\u6765\u8bf4\u66f4\u9ad8\u6548\u7684\u90a3\u4e2a\u3002\u6211\u4e2a\u4eba\u8fd8\u662f\u559c\u6b22\u4f7f\u7528\u51e0\u4f55\u7740\u8272\u5668\u6765\u8fdb\u884c\u9634\u5f71\u6620\u5c04\uff0c\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f7f\u7528\u8d77\u6765\u66f4\u7b80\u5355\u3002 \u9644\u52a0\u8d44\u6e90 Shadow Mapping for point light sources in OpenGL \uff1asunandblackcat\u7684\u4e07\u5411\u9634\u5f71\u6620\u5c04\u6559\u7a0b\u3002 Multipass Shadow Mapping With Point Lights \uff1aogldev\u7684\u4e07\u5411\u9634\u5f71\u6620\u5c04\u6559\u7a0b\u3002 Omni-directional Shadows \uff1aPeter Houska\u7684\u5173\u4e8e\u4e07\u5411\u9634\u5f71\u6620\u5c04\u7684\u4e00\u7ec4\u5f88\u597d\u7684ppt\u3002","title":"\u70b9\u9634\u5f71"},{"location":"05%20Advanced%20Lighting/03%20Shadows/02%20Point%20Shadows/#_1","text":"\u539f\u6587 Point Shadows \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Django \u6821\u5bf9 \u6682\u65e0 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u4e0a\u4e2a\u6559\u7a0b\u6211\u4eec\u5b66\u5230\u4e86\u5982\u4f55\u4f7f\u7528\u9634\u5f71\u6620\u5c04\u6280\u672f\u521b\u5efa\u52a8\u6001\u9634\u5f71\u3002\u6548\u679c\u4e0d\u9519\uff0c\u4f46\u5b83\u53ea\u9002\u5408\u5b9a\u5411\u5149\uff0c\u56e0\u4e3a\u9634\u5f71\u53ea\u662f\u5728\u5355\u4e00\u5b9a\u5411\u5149\u6e90\u4e0b\u751f\u6210\u7684\u3002\u6240\u4ee5\u5b83\u4e5f\u53eb\u5b9a\u5411\u9634\u5f71\u6620\u5c04\uff0c\u6df1\u5ea6\uff08\u9634\u5f71\uff09\u8d34\u56fe\u751f\u6210\u81ea\u5b9a\u5411\u5149\u7684\u89c6\u89d2\u3002 Important \u672c\u8282\u6211\u4eec\u7684\u7126\u70b9\u662f\u5728\u5404\u79cd\u65b9\u5411\u751f\u6210\u52a8\u6001\u9634\u5f71\u3002\u8fd9\u4e2a\u6280\u672f\u53ef\u4ee5\u9002\u7528\u4e8e\u70b9\u5149\u6e90\uff0c\u751f\u6210\u6240\u6709\u65b9\u5411\u4e0a\u7684\u9634\u5f71\u3002 \u8fd9\u4e2a\u6280\u672f\u53eb\u505a\u70b9\u5149\u9634\u5f71\uff0c\u8fc7\u53bb\u7684\u540d\u5b57\u662f\u4e07\u5411\u9634\u5f71\u8d34\u56fe\uff08omnidirectional shadow maps\uff09\u6280\u672f\u3002 \u672c\u8282\u4ee3\u7801\u57fa\u4e8e\u524d\u9762\u7684\u9634\u5f71\u6620\u5c04\u6559\u7a0b\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u5bf9\u4f20\u7edf\u9634\u5f71\u6620\u5c04\u4e0d\u719f\u6089\uff0c\u8fd8\u662f\u5efa\u8bae\u5148\u8bfb\u4e00\u8bfb\u9634\u5f71\u6620\u5c04\u6559\u7a0b\u3002 \u7b97\u6cd5\u548c\u5b9a\u5411\u9634\u5f71\u6620\u5c04\u5dee\u4e0d\u591a\uff1a\u6211\u4eec\u4ece\u5149\u7684\u900f\u89c6\u56fe\u751f\u6210\u4e00\u4e2a\u6df1\u5ea6\u8d34\u56fe\uff0c\u57fa\u4e8e\u5f53\u524dfragment\u4f4d\u7f6e\u6765\u5bf9\u6df1\u5ea6\u8d34\u56fe\u91c7\u6837\uff0c\u7136\u540e\u7528\u50a8\u5b58\u7684\u6df1\u5ea6\u503c\u548c\u6bcf\u4e2afragment\u8fdb\u884c\u5bf9\u6bd4\uff0c\u770b\u770b\u5b83\u662f\u5426\u5728\u9634\u5f71\u4e2d\u3002\u5b9a\u5411\u9634\u5f71\u6620\u5c04\u548c\u4e07\u5411\u9634\u5f71\u6620\u5c04\u7684\u4e3b\u8981\u4e0d\u540c\u5728\u4e8e\u6df1\u5ea6\u8d34\u56fe\u7684\u4f7f\u7528\u4e0a\u3002 \u5bf9\u4e8e\u6df1\u5ea6\u8d34\u56fe\uff0c\u6211\u4eec\u9700\u8981\u4ece\u4e00\u4e2a\u70b9\u5149\u6e90\u7684\u6240\u6709\u6e32\u67d3\u573a\u666f\uff0c\u666e\u901a2D\u6df1\u5ea6\u8d34\u56fe\u4e0d\u80fd\u5de5\u4f5c\uff1b\u5982\u679c\u6211\u4eec\u4f7f\u7528\u7acb\u65b9\u4f53\u8d34\u56fe\u4f1a\u600e\u6837\uff1f\u56e0\u4e3a\u7acb\u65b9\u4f53\u8d34\u56fe\u53ef\u4ee5\u50a8\u5b586\u4e2a\u9762\u7684\u73af\u5883\u6570\u636e\uff0c\u5b83\u53ef\u4ee5\u5c06\u6574\u4e2a\u573a\u666f\u6e32\u67d3\u5230\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6bcf\u4e2a\u9762\u4e0a\uff0c\u628a\u5b83\u4eec\u5f53\u4f5c\u70b9\u5149\u6e90\u56db\u5468\u7684\u6df1\u5ea6\u503c\u6765\u91c7\u6837\u3002 \u751f\u6210\u540e\u7684\u6df1\u5ea6\u7acb\u65b9\u4f53\u8d34\u56fe\u88ab\u4f20\u9012\u5230\u5149\u7167\u50cf\u7d20\u7740\u8272\u5668\uff0c\u5b83\u4f1a\u7528\u4e00\u4e2a\u65b9\u5411\u5411\u91cf\u6765\u91c7\u6837\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u4ece\u800c\u5f97\u5230\u5f53\u524d\u7684fragment\u7684\u6df1\u5ea6\uff08\u4ece\u5149\u7684\u900f\u89c6\u56fe\uff09\u3002\u5927\u90e8\u5206\u590d\u6742\u7684\u4e8b\u60c5\u5df2\u7ecf\u5728\u9634\u5f71\u6620\u5c04\u6559\u7a0b\u4e2d\u8ba8\u8bba\u8fc7\u4e86\u3002\u7b97\u6cd5\u53ea\u662f\u5728\u6df1\u5ea6\u7acb\u65b9\u4f53\u8d34\u56fe\u751f\u6210\u4e0a\u7a0d\u5fae\u590d\u6742\u4e00\u70b9\u3002","title":"\u70b9\u5149\u6e90\u9634\u5f71"},{"location":"05%20Advanced%20Lighting/03%20Shadows/02%20Point%20Shadows/#_2","text":"\u4e3a\u521b\u5efa\u4e00\u4e2a\u5149\u5468\u56f4\u7684\u6df1\u5ea6\u503c\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u6211\u4eec\u5fc5\u987b\u6e32\u67d3\u573a\u666f6\u6b21\uff1a\u6bcf\u6b21\u4e00\u4e2a\u9762\u3002\u663e\u7136\u6e32\u67d3\u573a\u666f6\u6b21\u9700\u89816\u4e2a\u4e0d\u540c\u7684\u89c6\u56fe\u77e9\u9635\uff0c\u6bcf\u6b21\u628a\u4e00\u4e2a\u4e0d\u540c\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u9762\u9644\u52a0\u5230\u5e27\u7f13\u51b2\u5bf9\u8c61\u4e0a\u3002\u8fd9\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a for(int i = 0; i < 6; i++) { GLuint face = GL_TEXTURE_CUBE_MAP_POSITIVE_X + i; glFramebufferTexture2D(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, face, depthCubemap, 0); BindViewMatrix(lightViewMatrices[i]); RenderScene(); } \u8fd9\u4f1a\u5f88\u8017\u8d39\u6027\u80fd\u56e0\u4e3a\u4e00\u4e2a\u6df1\u5ea6\u8d34\u56fe\u4e0b\u9700\u8981\u8fdb\u884c\u5f88\u591a\u6e32\u67d3\u8c03\u7528\u3002\u8fd9\u4e2a\u6559\u7a0b\u4e2d\u6211\u4eec\u5c06\u8f6c\u800c\u4f7f\u7528\u53e6\u5916\u7684\u4e00\u4e2a\u5c0f\u6280\u5de7\u6765\u505a\u8fd9\u4ef6\u4e8b\uff0c\u51e0\u4f55\u7740\u8272\u5668\u5141\u8bb8\u6211\u4eec\u4f7f\u7528\u4e00\u6b21\u6e32\u67d3\u8fc7\u7a0b\u6765\u5efa\u7acb\u6df1\u5ea6\u7acb\u65b9\u4f53\u8d34\u56fe\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7acb\u65b9\u4f53\u8d34\u56fe\uff1a GLuint depthCubemap; glGenTextures(1, &depthCubemap); \u7136\u540e\u751f\u6210\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6bcf\u4e2a\u9762\uff0c\u5c06\u5b83\u4eec\u4f5c\u4e3a2D\u6df1\u5ea6\u503c\u7eb9\u7406\u56fe\u50cf\uff1a const GLuint SHADOW_WIDTH = 1024, SHADOW_HEIGHT = 1024; glBindTexture(GL_TEXTURE_CUBE_MAP, depthCubemap); for (GLuint i = 0; i < 6; ++i) glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, GL_DEPTH_COMPONENT, SHADOW_WIDTH, SHADOW_HEIGHT, 0, GL_DEPTH_COMPONENT, GL_FLOAT, NULL); \u4e0d\u8981\u5fd8\u8bb0\u8bbe\u7f6e\u5408\u9002\u7684\u7eb9\u7406\u53c2\u6570\uff1a glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MAG_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_R, GL_CLAMP_TO_EDGE); \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u628a\u7acb\u65b9\u4f53\u8d34\u56fe\u7eb9\u7406\u7684\u4e00\u4e2a\u9762\u9644\u52a0\u5230\u5e27\u7f13\u51b2\u5bf9\u8c61\u4e0a\uff0c\u6e32\u67d3\u573a\u666f6\u6b21\uff0c\u6bcf\u6b21\u5c06\u5e27\u7f13\u51b2\u7684\u6df1\u5ea6\u7f13\u51b2\u76ee\u6807\u6539\u6210\u4e0d\u540c\u7acb\u65b9\u4f53\u8d34\u56fe\u9762\u3002\u7531\u4e8e\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u51e0\u4f55\u7740\u8272\u5668\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u628a\u6240\u6709\u9762\u5728\u4e00\u4e2a\u8fc7\u7a0b\u6e32\u67d3\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528glFramebufferTexture\u76f4\u63a5\u628a\u7acb\u65b9\u4f53\u8d34\u56fe\u9644\u52a0\u6210\u5e27\u7f13\u51b2\u7684\u6df1\u5ea6\u9644\u4ef6\uff1a glBindFramebuffer(GL_FRAMEBUFFER, depthMapFBO); glFramebufferTexture(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, depthCubemap, 0); glDrawBuffer(GL_NONE); glReadBuffer(GL_NONE); glBindFramebuffer(GL_FRAMEBUFFER, 0); \u8fd8\u8981\u8bb0\u5f97\u8c03\u7528glDrawBuffer\u548cglReadBuffer\uff1a\u5f53\u751f\u6210\u4e00\u4e2a\u6df1\u5ea6\u7acb\u65b9\u4f53\u8d34\u56fe\u65f6\u6211\u4eec\u53ea\u5173\u5fc3\u6df1\u5ea6\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u663e\u5f0f\u544a\u8bc9OpenGL\u8fd9\u4e2a\u5e27\u7f13\u51b2\u5bf9\u8c61\u4e0d\u4f1a\u6e32\u67d3\u5230\u4e00\u4e2a\u989c\u8272\u7f13\u51b2\u91cc\u3002 \u4e07\u5411\u9634\u5f71\u8d34\u56fe\u6709\u4e24\u4e2a\u6e32\u67d3\u9636\u6bb5\uff1a\u9996\u5148\u6211\u4eec\u751f\u6210\u6df1\u5ea6\u8d34\u56fe\uff0c\u7136\u540e\u6211\u4eec\u6b63\u5e38\u4f7f\u7528\u6df1\u5ea6\u8d34\u56fe\u6e32\u67d3\uff0c\u5728\u573a\u666f\u4e2d\u521b\u5efa\u9634\u5f71\u3002\u5e27\u7f13\u51b2\u5bf9\u8c61\u548c\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u5904\u7406\u770b\u8d77\u662f\u8fd9\u6837\u7684\uff1a // 1. first render to depth cubemap glViewport(0, 0, SHADOW_WIDTH, SHADOW_HEIGHT); glBindFramebuffer(GL_FRAMEBUFFER, depthMapFBO); glClear(GL_DEPTH_BUFFER_BIT); ConfigureShaderAndMatrices(); RenderScene(); glBindFramebuffer(GL_FRAMEBUFFER, 0); // 2. then render scene as normal with shadow mapping (using depth cubemap) glViewport(0, 0, SCR_WIDTH, SCR_HEIGHT); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); ConfigureShaderAndMatrices(); glBindTexture(GL_TEXTURE_CUBE_MAP, depthCubemap); RenderScene(); \u8fd9\u4e2a\u8fc7\u7a0b\u548c\u9ed8\u8ba4\u7684\u9634\u5f71\u6620\u5c04\u4e00\u6837\uff0c\u5c3d\u7ba1\u8fd9\u6b21\u6211\u4eec\u6e32\u67d3\u548c\u4f7f\u7528\u7684\u662f\u4e00\u4e2a\u7acb\u65b9\u4f53\u8d34\u56fe\u6df1\u5ea6\u7eb9\u7406\uff0c\u800c\u4e0d\u662f2D\u6df1\u5ea6\u7eb9\u7406\u3002\u5728\u6211\u4eec\u5b9e\u9645\u5f00\u59cb\u4ece\u5149\u7684\u89c6\u89d2\u7684\u6240\u6709\u65b9\u5411\u6e32\u67d3\u573a\u666f\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u5f97\u8ba1\u7b97\u51fa\u5408\u9002\u7684\u53d8\u6362\u77e9\u9635\u3002","title":"\u751f\u6210\u6df1\u5ea6\u7acb\u65b9\u4f53\u8d34\u56fe"},{"location":"05%20Advanced%20Lighting/03%20Shadows/02%20Point%20Shadows/#_3","text":"\u8bbe\u7f6e\u4e86\u5e27\u7f13\u51b2\u548c\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u65b9\u6cd5\u6765\u8bb2\u573a\u666f\u7684\u6240\u6709\u51e0\u4f55\u4f53\u53d8\u6362\u52306\u4e2a\u5149\u7684\u65b9\u5411\u4e2d\u76f8\u5e94\u7684\u5149\u7a7a\u95f4\u3002\u4e0e\u9634\u5f71\u6620\u5c04\u6559\u7a0b\u7c7b\u4f3c\uff0c\u6211\u4eec\u5c06\u9700\u8981\u4e00\u4e2a\u5149\u7a7a\u95f4\u7684\u53d8\u6362\u77e9\u9635T\uff0c\u4f46\u662f\u8fd9\u6b21\u662f\u6bcf\u4e2a\u9762\u90fd\u6709\u4e00\u4e2a\u3002 \u6bcf\u4e2a\u5149\u7a7a\u95f4\u7684\u53d8\u6362\u77e9\u9635\u5305\u542b\u4e86\u6295\u5f71\u548c\u89c6\u56fe\u77e9\u9635\u3002\u5bf9\u4e8e\u6295\u5f71\u77e9\u9635\u6765\u8bf4\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u900f\u89c6\u6295\u5f71\u77e9\u9635\uff1b\u5149\u6e90\u4ee3\u8868\u4e00\u4e2a\u7a7a\u95f4\u4e2d\u7684\u70b9\uff0c\u6240\u4ee5\u900f\u89c6\u6295\u5f71\u77e9\u9635\u66f4\u6709\u610f\u4e49\u3002\u6bcf\u4e2a\u5149\u7a7a\u95f4\u53d8\u6362\u77e9\u9635\u4f7f\u7528\u540c\u6837\u7684\u6295\u5f71\u77e9\u9635\uff1a GLfloat aspect = (GLfloat)SHADOW_WIDTH/(GLfloat)SHADOW_HEIGHT; GLfloat near = 1.0f; GLfloat far = 25.0f; glm::mat4 shadowProj = glm::perspective(glm::radians(90.0f), aspect, near, far); \u975e\u5e38\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0c\u8fd9\u91ccglm::perspective\u7684\u89c6\u91ce\u53c2\u6570\uff0c\u8bbe\u7f6e\u4e3a90\u5ea6\u300290\u5ea6\u6211\u4eec\u624d\u80fd\u4fdd\u8bc1\u89c6\u91ce\u8db3\u591f\u5927\u5230\u53ef\u4ee5\u5408\u9002\u5730\u586b\u6ee1\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u4e00\u4e2a\u9762\uff0c\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6240\u6709\u9762\u90fd\u80fd\u4e0e\u5176\u4ed6\u9762\u5728\u8fb9\u7f18\u5bf9\u9f50\u3002 \u56e0\u4e3a\u6295\u5f71\u77e9\u9635\u5728\u6bcf\u4e2a\u65b9\u5411\u4e0a\u5e76\u4e0d\u4f1a\u6539\u53d8\uff0c\u6211\u4eec\u53ef\u4ee5\u57286\u4e2a\u53d8\u6362\u77e9\u9635\u4e2d\u91cd\u590d\u4f7f\u7528\u3002\u6211\u4eec\u8981\u4e3a\u6bcf\u4e2a\u65b9\u5411\u63d0\u4f9b\u4e00\u4e2a\u4e0d\u540c\u7684\u89c6\u56fe\u77e9\u9635\u3002\u7528glm::lookAt\u521b\u5efa6\u4e2a\u89c2\u5bdf\u65b9\u5411\uff0c\u6bcf\u4e2a\u90fd\u6309\u987a\u5e8f\u6ce8\u89c6\u7740\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u7684\u4e00\u4e2a\u65b9\u5411\uff1a\u53f3\u3001\u5de6\u3001\u4e0a\u3001\u4e0b\u3001\u8fd1\u3001\u8fdc\uff1a std::vector<glm::mat4> shadowTransforms; shadowTransforms.push_back(shadowProj * glm::lookAt(lightPos, lightPos + glm::vec3(1.0,0.0,0.0), glm::vec3(0.0,-1.0,0.0))); shadowTransforms.push_back(shadowProj * glm::lookAt(lightPos, lightPos + glm::vec3(-1.0,0.0,0.0), glm::vec3(0.0,-1.0,0.0))); shadowTransforms.push_back(shadowProj * glm::lookAt(lightPos, lightPos + glm::vec3(0.0,1.0,0.0), glm::vec3(0.0,0.0,1.0))); shadowTransforms.push_back(shadowProj * glm::lookAt(lightPos, lightPos + glm::vec3(0.0,-1.0,0.0), glm::vec3(0.0,0.0,-1.0))); shadowTransforms.push_back(shadowProj * glm::lookAt(lightPos, lightPos + glm::vec3(0.0,0.0,1.0), glm::vec3(0.0,-1.0,0.0))); shadowTransforms.push_back(shadowProj * glm::lookAt(lightPos, lightPos + glm::vec3(0.0,0.0,-1.0), glm::vec3(0.0,-1.0,0.0))); \u8fd9\u91cc\u6211\u4eec\u521b\u5efa\u4e866\u4e2a\u89c6\u56fe\u77e9\u9635\uff0c\u628a\u5b83\u4eec\u4e58\u4ee5\u6295\u5f71\u77e9\u9635\uff0c\u6765\u5f97\u52306\u4e2a\u4e0d\u540c\u7684\u5149\u7a7a\u95f4\u53d8\u6362\u77e9\u9635\u3002glm::lookAt\u7684target\u53c2\u6570\u662f\u5b83\u6ce8\u89c6\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u9762\u7684\u4e00\u4e2a\u65b9\u5411\u3002 \u8fd9\u4e9b\u53d8\u6362\u77e9\u9635\u53d1\u9001\u5230\u7740\u8272\u5668\u6e32\u67d3\u5230\u7acb\u65b9\u4f53\u8d34\u56fe\u91cc\u3002","title":"\u5149\u7a7a\u95f4\u7684\u53d8\u6362"},{"location":"05%20Advanced%20Lighting/03%20Shadows/02%20Point%20Shadows/#_4","text":"\u4e3a\u4e86\u628a\u503c\u6e32\u67d3\u5230\u6df1\u5ea6\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u6211\u4eec\u5c06\u9700\u89813\u4e2a\u7740\u8272\u5668\uff1a\u9876\u70b9\u548c\u50cf\u7d20\u7740\u8272\u5668\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5b83\u4eec\u4e4b\u95f4\u7684\u51e0\u4f55\u7740\u8272\u5668\u3002 \u51e0\u4f55\u7740\u8272\u5668\u662f\u8d1f\u8d23\u5c06\u6240\u6709\u4e16\u754c\u7a7a\u95f4\u7684\u9876\u70b9\u53d8\u6362\u52306\u4e2a\u4e0d\u540c\u7684\u5149\u7a7a\u95f4\u7684\u7740\u8272\u5668\u3002\u56e0\u6b64\u9876\u70b9\u7740\u8272\u5668\u7b80\u5355\u5730\u5c06\u9876\u70b9\u53d8\u6362\u5230\u4e16\u754c\u7a7a\u95f4\uff0c\u7136\u540e\u76f4\u63a5\u53d1\u9001\u5230\u51e0\u4f55\u7740\u8272\u5668\uff1a #version 330 core layout (location = 0) in vec3 position; uniform mat4 model; void main() { gl_Position = model * vec4(position, 1.0); } \u7d27\u63a5\u7740\u51e0\u4f55\u7740\u8272\u5668\u4ee53\u4e2a\u4e09\u89d2\u5f62\u7684\u9876\u70b9\u4f5c\u4e3a\u8f93\u5165\uff0c\u5b83\u8fd8\u6709\u4e00\u4e2a\u5149\u7a7a\u95f4\u53d8\u6362\u77e9\u9635\u7684uniform\u6570\u7ec4\u3002\u51e0\u4f55\u7740\u8272\u5668\u63a5\u4e0b\u6765\u4f1a\u8d1f\u8d23\u5c06\u9876\u70b9\u53d8\u6362\u5230\u5149\u7a7a\u95f4\uff1b\u8fd9\u91cc\u5b83\u5f00\u59cb\u53d8\u5f97\u6709\u8da3\u4e86\u3002 \u51e0\u4f55\u7740\u8272\u5668\u6709\u4e00\u4e2a\u5185\u5efa\u53d8\u91cf\u53eb\u505agl_Layer\uff0c\u5b83\u6307\u5b9a\u53d1\u6563\u51fa\u57fa\u672c\u56fe\u5f62\u9001\u5230\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u54ea\u4e2a\u9762\u3002\u5f53\u4e0d\u7ba1\u5b83\u65f6\uff0c\u51e0\u4f55\u7740\u8272\u5668\u5c31\u4f1a\u50cf\u5f80\u5e38\u4e00\u6837\u628a\u5b83\u7684\u57fa\u672c\u56fe\u5f62\u53d1\u9001\u5230\u8f93\u9001\u7ba1\u9053\u7684\u4e0b\u4e00\u9636\u6bb5\uff0c\u4f46\u5f53\u6211\u4eec\u66f4\u65b0\u8fd9\u4e2a\u53d8\u91cf\u5c31\u80fd\u63a7\u5236\u6bcf\u4e2a\u57fa\u672c\u56fe\u5f62\u5c06\u6e32\u67d3\u5230\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u54ea\u4e00\u4e2a\u9762\u3002\u5f53\u7136\u8fd9\u53ea\u6709\u5f53\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u9644\u52a0\u5230\u6fc0\u6d3b\u7684\u5e27\u7f13\u51b2\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u7eb9\u7406\u624d\u6709\u6548\uff1a #version 330 core layout (triangles) in; layout (triangle_strip, max_vertices=18) out; uniform mat4 shadowMatrices[6]; out vec4 FragPos; // FragPos from GS (output per emitvertex) void main() { for(int face = 0; face < 6; ++face) { gl_Layer = face; // built-in variable that specifies to which face we render. for(int i = 0; i < 3; ++i) // for each triangle's vertices { FragPos = gl_in[i].gl_Position; gl_Position = shadowMatrices[face] * FragPos; EmitVertex(); } EndPrimitive(); } } \u51e0\u4f55\u7740\u8272\u5668\u76f8\u5bf9\u7b80\u5355\u3002\u6211\u4eec\u8f93\u5165\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u8f93\u51fa\u603b\u51716\u4e2a\u4e09\u89d2\u5f62\uff086*3\u9876\u70b9\uff0c\u6240\u4ee5\u603b\u517118\u4e2a\u9876\u70b9\uff09\u3002\u5728main\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u904d\u5386\u7acb\u65b9\u4f53\u8d34\u56fe\u76846\u4e2a\u9762\uff0c\u6211\u4eec\u6bcf\u4e2a\u9762\u6307\u5b9a\u4e3a\u4e00\u4e2a\u8f93\u51fa\u9762\uff0c\u628a\u8fd9\u4e2a\u9762\u7684interger\uff08\u6574\u6570\uff09\u5b58\u5230gl_Layer\u3002\u7136\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u628a\u9762\u7684\u5149\u7a7a\u95f4\u53d8\u6362\u77e9\u9635\u4e58\u4ee5FragPos\uff0c\u5c06\u6bcf\u4e2a\u4e16\u754c\u7a7a\u95f4\u9876\u70b9\u53d8\u6362\u5230\u76f8\u5173\u7684\u5149\u7a7a\u95f4\uff0c\u751f\u6210\u6bcf\u4e2a\u4e09\u89d2\u5f62\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u8fd8\u8981\u5c06\u6700\u540e\u7684FragPos\u53d8\u91cf\u53d1\u9001\u7ed9\u50cf\u7d20\u7740\u8272\u5668\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u4e00\u4e2a\u6df1\u5ea6\u503c\u3002 \u4e0a\u4e2a\u6559\u7a0b\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f\u4e00\u4e2a\u7a7a\u7684\u50cf\u7d20\u7740\u8272\u5668\uff0c\u8ba9OpenGL\u914d\u7f6e\u6df1\u5ea6\u8d34\u56fe\u7684\u6df1\u5ea6\u503c\u3002\u8fd9\u6b21\u6211\u4eec\u5c06\u8ba1\u7b97\u81ea\u5df1\u7684\u6df1\u5ea6\uff0c\u8fd9\u4e2a\u6df1\u5ea6\u5c31\u662f\u6bcf\u4e2afragment\u4f4d\u7f6e\u548c\u5149\u6e90\u4f4d\u7f6e\u4e4b\u95f4\u7684\u7ebf\u6027\u8ddd\u79bb\u3002\u8ba1\u7b97\u81ea\u5df1\u7684\u6df1\u5ea6\u503c\u4f7f\u5f97\u4e4b\u540e\u7684\u9634\u5f71\u8ba1\u7b97\u66f4\u52a0\u76f4\u89c2\u3002 #version 330 core in vec4 FragPos; uniform vec3 lightPos; uniform float far_plane; void main() { // get distance between fragment and light source float lightDistance = length(FragPos.xyz - lightPos); // map to [0;1] range by dividing by far_plane lightDistance = lightDistance / far_plane; // write this as modified depth gl_FragDepth = lightDistance; } \u50cf\u7d20\u7740\u8272\u5668\u5c06\u6765\u81ea\u51e0\u4f55\u7740\u8272\u5668\u7684FragPos\u3001\u5149\u7684\u4f4d\u7f6e\u5411\u91cf\u548c\u89c6\u9525\u7684\u8fdc\u5e73\u9762\u503c\u4f5c\u4e3a\u8f93\u5165\u3002\u8fd9\u91cc\u6211\u4eec\u628afragment\u548c\u5149\u6e90\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u6620\u5c04\u52300\u52301\u7684\u8303\u56f4\uff0c\u628a\u5b83\u5199\u5165\u4e3afragment\u7684\u6df1\u5ea6\u503c\u3002 \u4f7f\u7528\u8fd9\u4e9b\u7740\u8272\u5668\u6e32\u67d3\u573a\u666f\uff0c\u7acb\u65b9\u4f53\u8d34\u56fe\u9644\u52a0\u7684\u5e27\u7f13\u51b2\u5bf9\u8c61\u6fc0\u6d3b\u4ee5\u540e\uff0c\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u5b8c\u5168\u586b\u5145\u7684\u6df1\u5ea6\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u4ee5\u4fbf\u4e8e\u8fdb\u884c\u7b2c\u4e8c\u9636\u6bb5\u7684\u9634\u5f71\u8ba1\u7b97\u3002","title":"\u6df1\u5ea6\u7740\u8272\u5668"},{"location":"05%20Advanced%20Lighting/03%20Shadows/02%20Point%20Shadows/#_5","text":"\u6240\u6709\u4e8b\u60c5\u90fd\u505a\u597d\u4e86\uff0c\u662f\u65f6\u5019\u6765\u6e32\u67d3\u4e07\u5411\u9634\u5f71(Omnidirectional Shadow)\u4e86\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u548c\u5b9a\u5411\u9634\u5f71\u6620\u5c04\u6559\u7a0b\u76f8\u4f3c\uff0c\u5c3d\u7ba1\u8fd9\u6b21\u6211\u4eec\u7ed1\u5b9a\u7684\u6df1\u5ea6\u8d34\u56fe\u662f\u4e00\u4e2a\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u800c\u4e0d\u662f2D\u7eb9\u7406\uff0c\u5e76\u4e14\u5c06\u5149\u7684\u6295\u5f71\u7684\u8fdc\u5e73\u9762\u53d1\u9001\u7ed9\u4e86\u7740\u8272\u5668\u3002 glViewport(0, 0, SCR_WIDTH, SCR_HEIGHT); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); shader.Use(); // ... send uniforms to shader (including light's far_plane value) glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_CUBE_MAP, depthCubemap); // ... bind other textures RenderScene(); \u8fd9\u91cc\u7684renderScene\u51fd\u6570\u5728\u4e00\u4e2a\u5927\u7acb\u65b9\u4f53\u623f\u95f4\u4e2d\u6e32\u67d3\u4e00\u4e9b\u7acb\u65b9\u4f53\uff0c\u5b83\u4eec\u6563\u843d\u5728\u5927\u7acb\u65b9\u4f53\u5404\u5904\uff0c\u5149\u6e90\u5728\u573a\u666f\u4e2d\u592e\u3002 \u9876\u70b9\u7740\u8272\u5668\u548c\u50cf\u7d20\u7740\u8272\u5668\u548c\u539f\u6765\u7684\u9634\u5f71\u6620\u5c04\u7740\u8272\u5668\u5927\u90e8\u5206\u90fd\u4e00\u6837\uff1a\u4e0d\u540c\u4e4b\u5904\u662f\u5728\u5149\u7a7a\u95f4\u4e2d\u50cf\u7d20\u7740\u8272\u5668\u4e0d\u518d\u9700\u8981\u4e00\u4e2afragment\u4f4d\u7f6e\uff0c\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u65b9\u5411\u5411\u91cf\u91c7\u6837\u6df1\u5ea6\u503c\u3002 \u56e0\u4e3a\u8fd9\u4e2a\u9876\u70b9\u7740\u8272\u5668\u4e0d\u518d\u9700\u8981\u5c06\u4ed6\u7684\u4f4d\u7f6e\u5411\u91cf\u53d8\u6362\u5230\u5149\u7a7a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u53bb\u6389FragPosLightSpace\u53d8\u91cf\uff1a #version 330 core layout (location = 0) in vec3 position; layout (location = 1) in vec3 normal; layout (location = 2) in vec2 texCoords; out vec2 TexCoords; out VS_OUT { vec3 FragPos; vec3 Normal; vec2 TexCoords; } vs_out; uniform mat4 projection; uniform mat4 view; uniform mat4 model; void main() { gl_Position = projection * view * model * vec4(position, 1.0f); vs_out.FragPos = vec3(model * vec4(position, 1.0)); vs_out.Normal = transpose(inverse(mat3(model))) * normal; vs_out.TexCoords = texCoords; } \u7247\u6bb5\u7740\u8272\u5668\u7684Blinn-Phong\u5149\u7167\u4ee3\u7801\u548c\u6211\u4eec\u4e4b\u524d\u9634\u5f71\u76f8\u4e58\u7684\u7ed3\u5c3e\u90e8\u5206\u4e00\u6837\uff1a #version 330 core out vec4 FragColor; in VS_OUT { vec3 FragPos; vec3 Normal; vec2 TexCoords; } fs_in; uniform sampler2D diffuseTexture; uniform samplerCube depthMap; uniform vec3 lightPos; uniform vec3 viewPos; uniform float far_plane; float ShadowCalculation(vec3 fragPos) { [...] } void main() { vec3 color = texture(diffuseTexture, fs_in.TexCoords).rgb; vec3 normal = normalize(fs_in.Normal); vec3 lightColor = vec3(0.3); // Ambient vec3 ambient = 0.3 * color; // Diffuse vec3 lightDir = normalize(lightPos - fs_in.FragPos); float diff = max(dot(lightDir, normal), 0.0); vec3 diffuse = diff * lightColor; // Specular vec3 viewDir = normalize(viewPos - fs_in.FragPos); vec3 reflectDir = reflect(-lightDir, normal); float spec = 0.0; vec3 halfwayDir = normalize(lightDir + viewDir); spec = pow(max(dot(normal, halfwayDir), 0.0), 64.0); vec3 specular = spec * lightColor; // Calculate shadow float shadow = ShadowCalculation(fs_in.FragPos); vec3 lighting = (ambient + (1.0 - shadow) * (diffuse + specular)) * color; FragColor = vec4(lighting, 1.0f); } \u6709\u4e00\u4e9b\u7ec6\u5fae\u7684\u4e0d\u540c\uff1a\u5149\u7167\u4ee3\u7801\u4e00\u6837\uff0c\u4f46\u6211\u4eec\u73b0\u5728\u6709\u4e86\u4e00\u4e2auniform\u53d8\u91cfsamplerCube\uff0cshadowCalculation\u51fd\u6570\u7528fragment\u7684\u4f4d\u7f6e\u4f5c\u4e3a\u5b83\u7684\u53c2\u6570\uff0c\u53d6\u4ee3\u4e86\u5149\u7a7a\u95f4\u7684fragment\u4f4d\u7f6e\u3002\u6211\u4eec\u73b0\u5728\u8fd8\u8981\u5f15\u5165\u5149\u7684\u89c6\u9525\u7684\u8fdc\u5e73\u9762\u503c\uff0c\u540e\u9762\u6211\u4eec\u4f1a\u9700\u8981\u5b83\u3002\u50cf\u7d20\u7740\u8272\u5668\u7684\u6700\u540e\uff0c\u6211\u4eec\u8ba1\u7b97\u51fa\u9634\u5f71\u5143\u7d20\uff0c\u5f53fragment\u5728\u9634\u5f71\u4e2d\u65f6\u5b83\u662f1.0\uff0c\u4e0d\u5728\u9634\u5f71\u4e2d\u65f6\u662f0.0\u3002\u6211\u4eec\u4f7f\u7528\u8ba1\u7b97\u51fa\u6765\u7684\u9634\u5f71\u5143\u7d20\u53bb\u5f71\u54cd\u5149\u7167\u7684diffuse\u548cspecular\u5143\u7d20\u3002 \u5728ShadowCalculation\u51fd\u6570\u4e2d\u6709\u5f88\u591a\u4e0d\u540c\u4e4b\u5904\uff0c\u73b0\u5728\u662f\u4ece\u7acb\u65b9\u4f53\u8d34\u56fe\u4e2d\u8fdb\u884c\u91c7\u6837\uff0c\u4e0d\u518d\u4f7f\u75282D\u7eb9\u7406\u4e86\u3002\u6211\u4eec\u6765\u4e00\u6b65\u4e00\u6b65\u7684\u8ba8\u8bba\u4e00\u4e0b\u7684\u5b83\u7684\u5185\u5bb9\u3002 \u6211\u4eec\u9700\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u83b7\u53d6\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6df1\u5ea6\u3002\u4f60\u53ef\u80fd\u5df2\u7ecf\u4ece\u6559\u7a0b\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u90e8\u5206\u60f3\u5230\uff0c\u6211\u4eec\u5df2\u7ecf\u5c06\u6df1\u5ea6\u50a8\u5b58\u4e3afragment\u548c\u5149\u4f4d\u7f6e\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e86\uff1b\u6211\u4eec\u8fd9\u91cc\u91c7\u7528\u76f8\u4f3c\u7684\u5904\u7406\u65b9\u5f0f\uff1a float ShadowCalculation(vec3 fragPos) { vec3 fragToLight = fragPos - lightPos; float closestDepth = texture(depthMap, fragToLight).r; } \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5f97\u5230\u4e86fragment\u7684\u4f4d\u7f6e\u4e0e\u5149\u7684\u4f4d\u7f6e\u4e4b\u95f4\u7684\u5dee\u5411\u91cf\uff0c\u4f7f\u7528\u8fd9\u4e2a\u5411\u91cf\u4f5c\u4e3a\u4e00\u4e2a\u65b9\u5411\u5411\u91cf\u53bb\u5bf9\u7acb\u65b9\u4f53\u8d34\u56fe\u8fdb\u884c\u91c7\u6837\u3002\u65b9\u5411\u5411\u91cf\u4e0d\u9700\u8981\u662f\u5355\u4f4d\u5411\u91cf\uff0c\u6240\u4ee5\u65e0\u9700\u5bf9\u5b83\u8fdb\u884c\u6807\u51c6\u5316\u3002\u6700\u540e\u7684closestDepth\u662f\u5149\u6e90\u548c\u5b83\u6700\u63a5\u8fd1\u7684\u53ef\u89c1fragment\u4e4b\u95f4\u7684\u6807\u51c6\u5316\u7684\u6df1\u5ea6\u503c\u3002 closestDepth\u503c\u73b0\u5728\u57280\u52301\u7684\u8303\u56f4\u5185\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u5c06\u5176\u8f6c\u6362\u56de0\u5230far_plane\u7684\u8303\u56f4\uff0c\u8fd9\u9700\u8981\u628a\u4ed6\u4e58\u4ee5far_plane\uff1a closestDepth *= far_plane; \u4e0b\u4e00\u6b65\u6211\u4eec\u83b7\u53d6\u5f53\u524dfragment\u548c\u5149\u6e90\u4e4b\u95f4\u7684\u6df1\u5ea6\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u4f7f\u7528fragToLight\u7684\u957f\u5ea6\u6765\u83b7\u53d6\u5b83\uff0c\u8fd9\u53d6\u51b3\u4e8e\u6211\u4eec\u5982\u4f55\u8ba1\u7b97\u7acb\u65b9\u4f53\u8d34\u56fe\u4e2d\u7684\u6df1\u5ea6\u503c\uff1a float currentDepth = length(fragToLight); \u8fd4\u56de\u7684\u662f\u548cclosestDepth\u8303\u56f4\u76f8\u540c\u7684\u6df1\u5ea6\u503c\u3002 \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5c06\u4e24\u4e2a\u6df1\u5ea6\u503c\u5bf9\u6bd4\u4e00\u4e0b\uff0c\u770b\u770b\u54ea\u4e00\u4e2a\u66f4\u63a5\u8fd1\uff0c\u4ee5\u6b64\u51b3\u5b9a\u5f53\u524d\u7684fragment\u662f\u5426\u5728\u9634\u5f71\u5f53\u4e2d\u3002\u6211\u4eec\u8fd8\u8981\u5305\u542b\u4e00\u4e2a\u9634\u5f71\u504f\u79fb\uff0c\u6240\u4ee5\u624d\u80fd\u907f\u514d\u9634\u5f71\u5931\u771f\uff0c\u8fd9\u5728\u524d\u9762\u6559\u7a0b\u4e2d\u5df2\u7ecf\u8ba8\u8bba\u8fc7\u4e86\u3002 float bias = 0.05; float shadow = currentDepth - bias > closestDepth ? 1.0 : 0.0; \u5b8c\u6574\u7684ShadowCalculation\u73b0\u5728\u53d8\u6210\u4e86\u8fd9\u6837\uff1a float ShadowCalculation(vec3 fragPos) { // Get vector between fragment position and light position vec3 fragToLight = fragPos - lightPos; // Use the light to fragment vector to sample from the depth map float closestDepth = texture(depthMap, fragToLight).r; // It is currently in linear range between [0,1]. Re-transform back to original value closestDepth *= far_plane; // Now get current linear depth as the length between the fragment and light position float currentDepth = length(fragToLight); // Now test for shadows float bias = 0.05; float shadow = currentDepth - bias > closestDepth ? 1.0 : 0.0; return shadow; } \u6709\u4e86\u8fd9\u4e9b\u7740\u8272\u5668\uff0c\u6211\u4eec\u5df2\u7ecf\u80fd\u5f97\u5230\u975e\u5e38\u597d\u7684\u9634\u5f71\u6548\u679c\u4e86\uff0c\u8fd9\u6b21\u4ece\u4e00\u4e2a\u70b9\u5149\u6e90\u6240\u6709\u5468\u56f4\u65b9\u5411\u4e0a\u90fd\u6709\u9634\u5f71\u3002\u6709\u4e00\u4e2a\u4f4d\u4e8e\u573a\u666f\u4e2d\u5fc3\u7684\u70b9\u5149\u6e90\uff0c\u770b\u8d77\u6765\u4f1a\u50cf\u8fd9\u6837\uff1a \u4f60\u53ef\u4ee5\u4ece\u8fd9\u91cc\u627e\u5230\u8fd9\u4e2a demo\u7684\u6e90\u7801 \u3001 \u9876\u70b9 \u548c \u7247\u6bb5 \u7740\u8272\u5668\u3002","title":"\u4e07\u5411\u9634\u5f71\u8d34\u56fe"},{"location":"05%20Advanced%20Lighting/03%20Shadows/02%20Point%20Shadows/#_6","text":"\u5982\u679c\u4f60\u60f3\u6211\u4e00\u6837\u7b2c\u4e00\u6b21\u5e76\u6ca1\u6709\u505a\u5bf9\uff0c\u90a3\u4e48\u5c31\u8981\u8fdb\u884c\u8c03\u8bd5\u6392\u9519\uff0c\u5c06\u6df1\u5ea6\u8d34\u56fe\u663e\u793a\u51fa\u6765\u4ee5\u68c0\u67e5\u5176\u662f\u5426\u6b63\u786e\u3002\u56e0\u4e3a\u6211\u4eec\u4e0d\u518d\u75282D\u6df1\u5ea6\u8d34\u56fe\u7eb9\u7406\uff0c\u6df1\u5ea6\u8d34\u56fe\u7684\u663e\u793a\u4e0d\u4f1a\u90a3\u4e48\u663e\u800c\u6613\u89c1\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u628a\u6df1\u5ea6\u7f13\u51b2\u663e\u793a\u51fa\u6765\u7684\u6280\u5de7\u662f\uff0c\u5728ShadowCalculation\u51fd\u6570\u4e2d\u8ba1\u7b97\u6807\u51c6\u5316\u7684closestDepth\u53d8\u91cf\uff0c\u628a\u53d8\u91cf\u663e\u793a\u4e3a\uff1a FragColor = vec4(vec3(closestDepth / far_plane), 1.0); \u7ed3\u679c\u662f\u4e00\u4e2a\u7070\u5ea6\u573a\u666f\uff0c\u6bcf\u4e2a\u989c\u8272\u4ee3\u8868\u7740\u573a\u666f\u7684\u7ebf\u6027\u6df1\u5ea6\u503c\uff1a \u4f60\u53ef\u80fd\u4e5f\u6ce8\u610f\u5230\u4e86\u5e26\u9634\u5f71\u90e8\u5206\u5728\u5899\u5916\u3002\u5982\u679c\u770b\u8d77\u6765\u548c\u8fd9\u4e2a\u5dee\u4e0d\u591a\uff0c\u4f60\u5c31\u77e5\u9053\u6df1\u5ea6\u7acb\u65b9\u4f53\u8d34\u56fe\u751f\u6210\u7684\u6ca1\u9519\u3002\u5426\u5219\u4f60\u53ef\u80fd\u505a\u9519\u4e86\u4ec0\u4e48\uff0c\u4e5f\u8bb8\u662fclosestDepth\u4ecd\u7136\u8fd8\u57280\u5230far_plane\u7684\u8303\u56f4\u3002","title":"\u663e\u793a\u7acb\u65b9\u4f53\u8d34\u56fe\u6df1\u5ea6\u7f13\u51b2"},{"location":"05%20Advanced%20Lighting/03%20Shadows/02%20Point%20Shadows/#pcf","text":"\u7531\u4e8e\u4e07\u5411\u9634\u5f71\u8d34\u56fe\u57fa\u4e8e\u4f20\u7edf\u9634\u5f71\u6620\u5c04\u7684\u539f\u5219\uff0c\u5b83\u4fbf\u4e5f\u7ee7\u627f\u4e86\u7531\u89e3\u6790\u5ea6\u4ea7\u751f\u7684\u975e\u771f\u5b9e\u611f\u3002\u5982\u679c\u4f60\u653e\u5927\u5c31\u4f1a\u770b\u5230\u952f\u9f7f\u8fb9\u4e86\u3002PCF\u6216\u79f0Percentage-closer filtering\u5141\u8bb8\u6211\u4eec\u901a\u8fc7\u5bf9fragment\u4f4d\u7f6e\u5468\u56f4\u8fc7\u6ee4\u591a\u4e2a\u6837\u672c\uff0c\u5e76\u5bf9\u7ed3\u679c\u5e73\u5747\u5316\u3002 \u5982\u679c\u6211\u4eec\u7528\u548c\u524d\u9762\u6559\u7a0b\u540c\u6837\u7684\u90a3\u4e2a\u7b80\u5355\u7684PCF\u8fc7\u6ee4\u5668\uff0c\u5e76\u52a0\u5165\u7b2c\u4e09\u4e2a\u7ef4\u5ea6\uff0c\u5c31\u662f\u8fd9\u6837\u7684\uff1a float shadow = 0.0; float bias = 0.05; float samples = 4.0; float offset = 0.1; for(float x = -offset; x < offset; x += offset / (samples * 0.5)) { for(float y = -offset; y < offset; y += offset / (samples * 0.5)) { for(float z = -offset; z < offset; z += offset / (samples * 0.5)) { float closestDepth = texture(depthMap, fragToLight + vec3(x, y, z)).r; closestDepth *= far_plane; // Undo mapping [0;1] if(currentDepth - bias > closestDepth) shadow += 1.0; } } } shadow /= (samples * samples * samples); \u8fd9\u6bb5\u4ee3\u7801\u548c\u6211\u4eec\u4f20\u7edf\u7684\u9634\u5f71\u6620\u5c04\u6ca1\u6709\u591a\u5c11\u4e0d\u540c\u3002\u8fd9\u91cc\u6211\u4eec\u6839\u636e\u6837\u672c\u7684\u6570\u91cf\u52a8\u6001\u8ba1\u7b97\u4e86\u7eb9\u7406\u504f\u79fb\u91cf\uff0c\u6211\u4eec\u5728\u4e09\u4e2a\u8f74\u5411\u91c7\u6837\u4e09\u6b21\uff0c\u6700\u540e\u5bf9\u5b50\u6837\u672c\u8fdb\u884c\u5e73\u5747\u5316\u3002 \u73b0\u5728\u9634\u5f71\u770b\u8d77\u6765\u66f4\u52a0\u67d4\u548c\u5e73\u6ed1\u4e86\uff0c\u7531\u6b64\u5f97\u5230\u66f4\u52a0\u771f\u5b9e\u7684\u6548\u679c\uff1a \u7136\u800c\uff0csamples\u8bbe\u7f6e\u4e3a4.0\uff0c\u6bcf\u4e2afragment\u6211\u4eec\u4f1a\u5f97\u5230\u603b\u517164\u4e2a\u6837\u672c\uff0c\u8fd9\u592a\u591a\u4e86\uff01 \u5927\u591a\u6570\u8fd9\u4e9b\u91c7\u6837\u90fd\u662f\u591a\u4f59\u7684\uff0c\u4e0e\u5176\u5728\u539f\u59cb\u65b9\u5411\u5411\u91cf\u9644\u8fd1\u5904\u91c7\u6837\uff0c\u4e0d\u5982\u5728\u91c7\u6837\u65b9\u5411\u5411\u91cf\u7684\u5782\u76f4\u65b9\u5411\u8fdb\u884c\u91c7\u6837\u66f4\u6709\u610f\u4e49\u3002\u53ef\u662f\uff0c\u6ca1\u6709\uff08\u7b80\u5355\u7684\uff09\u65b9\u5f0f\u80fd\u591f\u6307\u51fa\u54ea\u4e00\u4e2a\u5b50\u65b9\u5411\u662f\u591a\u4f59\u7684\uff0c\u8fd9\u5c31\u96be\u4e86\u3002\u6709\u4e2a\u6280\u5de7\u53ef\u4ee5\u4f7f\u7528\uff0c\u7528\u4e00\u4e2a\u504f\u79fb\u91cf\u65b9\u5411\u6570\u7ec4\uff0c\u5b83\u4eec\u5dee\u4e0d\u591a\u90fd\u662f\u5206\u5f00\u7684\uff0c\u6bcf\u4e00\u4e2a\u6307\u5411\u5b8c\u5168\u4e0d\u540c\u7684\u65b9\u5411\uff0c\u5254\u9664\u5f7c\u6b64\u63a5\u8fd1\u7684\u90a3\u4e9b\u5b50\u65b9\u5411\u3002\u4e0b\u9762\u5c31\u662f\u4e00\u4e2a\u6709\u774020\u4e2a\u504f\u79fb\u65b9\u5411\u7684\u6570\u7ec4\uff1a vec3 sampleOffsetDirections[20] = vec3[] ( vec3( 1, 1, 1), vec3( 1, -1, 1), vec3(-1, -1, 1), vec3(-1, 1, 1), vec3( 1, 1, -1), vec3( 1, -1, -1), vec3(-1, -1, -1), vec3(-1, 1, -1), vec3( 1, 1, 0), vec3( 1, -1, 0), vec3(-1, -1, 0), vec3(-1, 1, 0), vec3( 1, 0, 1), vec3(-1, 0, 1), vec3( 1, 0, -1), vec3(-1, 0, -1), vec3( 0, 1, 1), vec3( 0, -1, 1), vec3( 0, -1, -1), vec3( 0, 1, -1) ); \u7136\u540e\u6211\u4eec\u628aPCF\u7b97\u6cd5\u4e0e\u4ecesampleOffsetDirections\u5f97\u5230\u7684\u6837\u672c\u6570\u91cf\u8fdb\u884c\u9002\u914d\uff0c\u4f7f\u7528\u5b83\u4eec\u4ece\u7acb\u65b9\u4f53\u8d34\u56fe\u91cc\u91c7\u6837\u3002\u8fd9\u4e48\u505a\u7684\u597d\u5904\u662f\u4e0e\u4e4b\u524d\u7684PCF\u7b97\u6cd5\u76f8\u6bd4\uff0c\u6211\u4eec\u9700\u8981\u7684\u6837\u672c\u6570\u91cf\u53d8\u5c11\u4e86\u3002 float shadow = 0.0; float bias = 0.15; int samples = 20; float viewDistance = length(viewPos - fragPos); float diskRadius = 0.05; for(int i = 0; i < samples; ++i) { float closestDepth = texture(depthMap, fragToLight + sampleOffsetDirections[i] * diskRadius).r; closestDepth *= far_plane; // Undo mapping [0;1] if(currentDepth - bias > closestDepth) shadow += 1.0; } shadow /= float(samples); \u8fd9\u91cc\u6211\u4eec\u628a\u4e00\u4e2a\u504f\u79fb\u91cf\u6dfb\u52a0\u5230\u6307\u5b9a\u7684diskRadius\u4e2d\uff0c\u5b83\u5728fragToLight\u65b9\u5411\u5411\u91cf\u5468\u56f4\u4ece\u7acb\u65b9\u4f53\u8d34\u56fe\u91cc\u91c7\u6837\u3002 \u53e6\u4e00\u4e2a\u5728\u8fd9\u91cc\u53ef\u4ee5\u5e94\u7528\u7684\u6709\u610f\u601d\u7684\u6280\u5de7\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u57fa\u4e8e\u89c2\u5bdf\u8005\u91cc\u4e00\u4e2afragment\u7684\u8ddd\u79bb\u6765\u6539\u53d8diskRadius\uff1b\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u6839\u636e\u89c2\u5bdf\u8005\u7684\u8ddd\u79bb\u6765\u589e\u52a0\u504f\u79fb\u534a\u5f84\u4e86\uff0c\u5f53\u8ddd\u79bb\u66f4\u8fdc\u7684\u65f6\u5019\u9634\u5f71\u66f4\u67d4\u548c\uff0c\u66f4\u8fd1\u4e86\u5c31\u66f4\u9510\u5229\u3002 float diskRadius = (1.0 + (viewDistance / far_plane)) / 25.0; PCF\u7b97\u6cd5\u7684\u7ed3\u679c\u5982\u679c\u6ca1\u6709\u53d8\u5f97\u66f4\u597d\uff0c\u4e5f\u662f\u975e\u5e38\u4e0d\u9519\u7684\uff0c\u8fd9\u662f\u67d4\u548c\u7684\u9634\u5f71\u6548\u679c\uff1a \u5f53\u7136\u4e86\uff0c\u6211\u4eec\u6dfb\u52a0\u5230\u6bcf\u4e2a\u6837\u672c\u7684bias\uff08\u504f\u79fb\uff09\u9ad8\u5ea6\u4f9d\u8d56\u4e8e\u4e0a\u4e0b\u6587\uff0c\u603b\u662f\u8981\u6839\u636e\u573a\u666f\u8fdb\u884c\u5fae\u8c03\u7684\u3002\u8bd5\u8bd5\u8fd9\u4e9b\u503c\uff0c\u770b\u770b\u600e\u6837\u5f71\u54cd\u4e86\u573a\u666f\u3002 \u8fd9\u91cc\u662f\u6700\u7ec8\u7248\u672c\u7684\u9876\u70b9\u548c\u50cf\u7d20\u7740\u8272\u5668\u3002 \u6211\u8fd8\u8981\u63d0\u9192\u4e00\u4e0b\u4f7f\u7528\u51e0\u4f55\u7740\u8272\u5668\u6765\u751f\u6210\u6df1\u5ea6\u8d34\u56fe\u4e0d\u4f1a\u4e00\u5b9a\u6bd4\u6bcf\u4e2a\u9762\u6e32\u67d3\u573a\u666f6\u6b21\u66f4\u5feb\u3002\u4f7f\u7528\u51e0\u4f55\u7740\u8272\u5668\u6709\u5b83\u81ea\u5df1\u7684\u6027\u80fd\u5c40\u9650\uff0c\u5728\u7b2c\u4e00\u4e2a\u9636\u6bb5\u4f7f\u7528\u5b83\u53ef\u80fd\u83b7\u5f97\u66f4\u597d\u7684\u6027\u80fd\u8868\u73b0\u3002\u8fd9\u53d6\u51b3\u4e8e\u73af\u5883\u7684\u7c7b\u578b\uff0c\u4ee5\u53ca\u7279\u5b9a\u7684\u663e\u5361\u9a71\u52a8\u7b49\u7b49\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u5f88\u5173\u5fc3\u6027\u80fd\uff0c\u5c31\u8981\u786e\u4fdd\u5bf9\u4e24\u79cd\u65b9\u6cd5\u6709\u5927\u81f4\u4e86\u89e3\uff0c\u7136\u540e\u9009\u62e9\u5bf9\u4f60\u573a\u666f\u6765\u8bf4\u66f4\u9ad8\u6548\u7684\u90a3\u4e2a\u3002\u6211\u4e2a\u4eba\u8fd8\u662f\u559c\u6b22\u4f7f\u7528\u51e0\u4f55\u7740\u8272\u5668\u6765\u8fdb\u884c\u9634\u5f71\u6620\u5c04\uff0c\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f7f\u7528\u8d77\u6765\u66f4\u7b80\u5355\u3002","title":"PCF"},{"location":"05%20Advanced%20Lighting/03%20Shadows/02%20Point%20Shadows/#_7","text":"Shadow Mapping for point light sources in OpenGL \uff1asunandblackcat\u7684\u4e07\u5411\u9634\u5f71\u6620\u5c04\u6559\u7a0b\u3002 Multipass Shadow Mapping With Point Lights \uff1aogldev\u7684\u4e07\u5411\u9634\u5f71\u6620\u5c04\u6559\u7a0b\u3002 Omni-directional Shadows \uff1aPeter Houska\u7684\u5173\u4e8e\u4e07\u5411\u9634\u5f71\u6620\u5c04\u7684\u4e00\u7ec4\u5f88\u597d\u7684ppt\u3002","title":"\u9644\u52a0\u8d44\u6e90"},{"location":"05%20Advanced%20Lighting/03%20Shadows/03%20CSM/","text":"CSM \u672a\u5b8c\u6210 \u8fd9\u7bc7\u6559\u7a0b\u6682\u65f6\u8fd8\u6ca1\u6709\u5b8c\u6210\uff0c\u60a8\u53ef\u4ee5\u7ecf\u5e38\u6765\u5237\u65b0\u770b\u770b\u662f\u5426\u6709\u66f4\u65b0\u7684\u8fdb\u5c55\u3002","title":"CSM"},{"location":"05%20Advanced%20Lighting/03%20Shadows/03%20CSM/#csm","text":"\u672a\u5b8c\u6210 \u8fd9\u7bc7\u6559\u7a0b\u6682\u65f6\u8fd8\u6ca1\u6709\u5b8c\u6210\uff0c\u60a8\u53ef\u4ee5\u7ecf\u5e38\u6765\u5237\u65b0\u770b\u770b\u662f\u5426\u6709\u66f4\u65b0\u7684\u8fdb\u5c55\u3002","title":"CSM"},{"location":"06%20In%20Practice/01%20Debugging/","text":"\u8c03\u8bd5 \u539f\u6587 Debugging \u4f5c\u8005 JoeydeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 AoZhang \u56fe\u5f62\u7f16\u7a0b\u53ef\u4ee5\u5e26\u6765\u5f88\u591a\u7684\u4e50\u8da3\uff0c\u7136\u800c\u5982\u679c\u4ec0\u4e48\u4e1c\u897f\u6e32\u67d3\u9519\u8bef\uff0c\u6216\u8005\u751a\u81f3\u6839\u672c\u5c31\u6ca1\u6709\u6e32\u67d3\uff0c\u5b83\u540c\u6837\u53ef\u4ee5\u7ed9\u4f60\u5e26\u6765\u5927\u91cf\u7684\u6cae\u4e27\u611f\uff01\u7531\u4e8e\u6211\u4eec\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u4e0e\u50cf\u7d20\u6253\u4ea4\u9053\uff0c\u5f53\u51fa\u73b0\u9519\u8bef\u7684\u65f6\u5019\u5bfb\u627e\u9519\u8bef\u7684\u6e90\u5934\u53ef\u80fd\u4f1a\u975e\u5e38\u56f0\u96be\u3002\u8c03\u8bd5(Debug)\u8fd9\u6837\u7684 \u89c6\u89c9 \u9519\u8bef\u4e0e\u5f80\u5e38\u719f\u6089\u7684CPU\u8c03\u8bd5\u4e0d\u540c\u3002\u6211\u4eec\u6ca1\u6709\u4e00\u4e2a\u53ef\u4ee5\u7528\u6765\u8f93\u51fa\u6587\u672c\u7684\u63a7\u5236\u53f0\uff0c\u5728GLSL\u4ee3\u7801\u4e2d\u4e5f\u4e0d\u80fd\u8bbe\u7f6e\u65ad\u70b9\uff0c\u66f4\u6ca1\u6709\u65b9\u6cd5\u65b9\u4fbf\u5730\u68c0\u6d4bGPU\u7684\u8fd0\u884c\u72b6\u6001\u3002 \u5728\u8fd9\u7bc7\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u6765\u89c1\u8bc6\u51e0\u4e2a\u8c03\u8bd5OpenGL\u7a0b\u5e8f\u7684\u6280\u5de7\u3002OpenGL\u4e2d\u7684\u8c03\u8bd5\u5e76\u4e0d\u662f\u5f88\u96be\uff0c\u638c\u63e1\u4f4f\u8fd9\u4e9b\u6280\u5de7\u5bf9\u4e4b\u540e\u7684\u5b66\u4e60\u4f1a\u6709\u975e\u5e38\u5927\u7684\u5e2e\u52a9\u3002 glGetError() \u5f53\u4f60\u4e0d\u6b63\u786e\u4f7f\u7528OpenGL\u7684\u65f6\u5019\uff08\u6bd4\u5982\u8bf4\u5728\u7ed1\u5b9a\u4e4b\u524d\u914d\u7f6e\u4e00\u4e2a\u7f13\u51b2\uff09\uff0c\u5b83\u4f1a\u68c0\u6d4b\u5230\uff0c\u5e76\u5728\u5e55\u540e\u751f\u6210\u4e00\u4e2a\u6216\u591a\u4e2a\u7528\u6237\u9519\u8bef\u6807\u8bb0\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u53eb\u505a glGetError \u7684\u51fd\u6570\u67e5\u8be2\u8fd9\u4e9b\u9519\u8bef\u6807\u8bb0\uff0c\u4ed6\u4f1a\u68c0\u6d4b\u9519\u8bef\u6807\u8bb0\u96c6\uff0c\u5e76\u4e14\u5728OpenGL\u786e\u5b9e\u51fa\u9519\u7684\u65f6\u5019\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u503c\u3002 GLenum glGetError(); \u5f53 glGetError \u88ab\u8c03\u7528\u65f6\uff0c\u5b83\u8981\u4e48\u4f1a\u8fd4\u56de\u9519\u8bef\u6807\u8bb0\u4e4b\u4e00\uff0c\u8981\u4e48\u8fd4\u56de\u65e0\u9519\u8bef\u3002 glGetError \u4f1a\u8fd4\u56de\u7684\u9519\u8bef\u503c\u5982\u4e0b\uff1a \u6807\u8bb0 \u4ee3\u7801 \u63cf\u8ff0 GL_NO_ERROR 0 \u81ea\u4e0a\u6b21\u8c03\u7528 glGetError \u4ee5\u6765\u6ca1\u6709\u9519\u8bef GL_INVALID_ENUM 1280 \u679a\u4e3e\u53c2\u6570\u4e0d\u5408\u6cd5 GL_INVALID_VALUE 1281 \u503c\u53c2\u6570\u4e0d\u5408\u6cd5 GL_INVALID_OPERATION 1282 \u4e00\u4e2a\u6307\u4ee4\u7684\u72b6\u6001\u5bf9\u6307\u4ee4\u7684\u53c2\u6570\u4e0d\u5408\u6cd5 GL_STACK_OVERFLOW 1283 \u538b\u6808\u64cd\u4f5c\u9020\u6210\u6808\u4e0a\u6ea2(Overflow) GL_STACK_UNDERFLOW 1284 \u5f39\u6808\u64cd\u4f5c\u65f6\u6808\u5728\u6700\u4f4e\u70b9\uff08\u8bd1\u6ce8\uff1a\u5373\u6808\u4e0b\u6ea2(Underflow)\uff09 GL_OUT_OF_MEMORY 1285 \u5185\u5b58\u8c03\u7528\u64cd\u4f5c\u65e0\u6cd5\u8c03\u7528\uff08\u8db3\u591f\u7684\uff09\u5185\u5b58 GL_INVALID_FRAMEBUFFER_OPERATION 1286 \u8bfb\u53d6\u6216\u5199\u5165\u4e00\u4e2a\u4e0d\u5b8c\u6574\u7684\u5e27\u7f13\u51b2 \u5728OpenGL\u7684\u51fd\u6570\u6587\u6863\u4e2d\u4f60\u53ef\u4ee5\u627e\u5230\u51fd\u6570\u5728\u9519\u8bef\u65f6\u751f\u6210\u7684\u9519\u8bef\u4ee3\u7801\u3002\u6bd4\u5982\u8bf4\uff0c\u5982\u679c\u4f60\u770b\u4e00\u4e0b glBindTexture \u51fd\u6570\u7684\u6587\u6863\uff0c\u5728 Errors \u90e8\u5206\u4e2d\u4f60\u53ef\u4ee5\u770b\u5230\u5b83\u53ef\u80fd\u751f\u6210\u7684\u6240\u6709\u7528\u6237\u9519\u8bef\u4ee3\u7801\u3002 \u5f53\u4e00\u4e2a\u9519\u8bef\u6807\u8bb0\u88ab\u8fd4\u56de\u7684\u65f6\u5019\uff0c\u5c06\u4e0d\u4f1a\u62a5\u544a\u5176\u5b83\u7684\u9519\u8bef\u6807\u8bb0\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5f53 glGetError \u88ab\u8c03\u7528\u7684\u65f6\u5019\uff0c\u5b83\u4f1a\u6e05\u9664\u6240\u6709\u7684\u9519\u8bef\u6807\u8bb0\uff08\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e0a\u53ea\u4f1a\u6e05\u9664\u4e00\u4e2a\uff0c\u89c1\u4e0b\u9762\u7684\u6ce8\u91ca\uff09\u3002\u8fd9\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u4f60\u5728\u6bcf\u4e00\u5e27\u4e4b\u540e\u8c03\u7528 glGetError \u4e00\u6b21\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\uff0c\u4f46\u4f60\u4e0d\u80fd\u786e\u5b9a\u8fd9\u5c31\u662f\u552f\u4e00\u7684\u9519\u8bef\uff0c\u5e76\u4e14\u9519\u8bef\u7684\u6765\u6e90\u53ef\u80fd\u5728\u8fd9\u4e00\u5e27\u7684\u4efb\u610f\u5730\u65b9\u3002 Important \u6ce8\u610f\u5f53OpenGL\u662f\u5206\u5e03\u5f0f(Distributely)\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u5982\u5728X11\u7cfb\u7edf\u4e0a\uff0c\u5176\u5b83\u7684\u7528\u6237\u9519\u8bef\u4ee3\u7801\u4ecd\u7136\u53ef\u4ee5\u88ab\u751f\u6210\uff0c\u53ea\u8981\u5b83\u4eec\u6709\u7740\u4e0d\u540c\u7684\u9519\u8bef\u4ee3\u7801\u3002\u8c03\u7528 glGetError \u53ea\u4f1a\u91cd\u7f6e\u4e00\u4e2a\u9519\u8bef\u4ee3\u7801\u6807\u8bb0\uff0c\u800c\u4e0d\u662f\u6240\u6709\u3002\u7531\u4e8e\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u5efa\u8bae\u5728\u4e00\u4e2a\u5faa\u73af\u4e2d\u8c03\u7528 glGetError \u3002 glBindTexture(GL_TEXTURE_2D, tex); std::cout << glGetError() << std::endl; // \u8fd4\u56de 0 (\u65e0\u9519\u8bef) glTexImage2D(GL_TEXTURE_3D, 0, GL_RGB, 512, 512, 0, GL_RGB, GL_UNSIGNED_BYTE, data); std::cout << glGetError() << std::endl; // \u8fd4\u56de 1280 (\u975e\u6cd5\u679a\u4e3e) glGenTextures(-5, textures); std::cout << glGetError() << std::endl; // \u8fd4\u56de 1281 (\u975e\u6cd5\u503c) std::cout << glGetError() << std::endl; // \u8fd4\u56de 0 (\u65e0\u9519\u8bef) glGetError \u975e\u5e38\u68d2\u7684\u4e00\u70b9\u5c31\u662f\u5b83\u80fd\u591f\u975e\u5e38\u7b80\u5355\u5730\u5b9a\u4f4d\u9519\u8bef\u53ef\u80fd\u7684\u6765\u6e90\uff0c\u5e76\u4e14\u9a8c\u8bc1OpenGL\u4f7f\u7528\u7684\u6b63\u786e\u6027\u3002\u6bd4\u5982\u8bf4\u4f60\u83b7\u5f97\u4e86\u4e00\u4e2a\u9ed1\u5c4f\u7684\u7ed3\u679c\u4f46\u662f\u4e0d\u77e5\u9053\u4ec0\u4e48\u9020\u6210\u4e86\u5b83\uff1a\u662f\u4e0d\u662f\u5e27\u7f13\u51b2\u8bbe\u7f6e\u9519\u8bef\uff1f\u662f\u4e0d\u662f\u6211\u5fd8\u8bb0\u7ed1\u5b9a\u7eb9\u7406\u4e86\uff1f\u901a\u8fc7\u5728\u6574\u4e2a\u4ee3\u7801\u5e93\u4e2d\u8c03\u7528 glGetError \uff0c\u60a8\u53ef\u4ee5\u5feb\u901f\u6355\u83b7OpenGL\u9519\u8bef\u5f00\u59cb\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u5730\u65b9\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b glGetError \u53ea\u4f1a\u6253\u5370\u9519\u8bef\u6570\u5b57\uff0c\u5982\u679c\u4f60\u4e0d\u53bb\u8bb0\u5fc6\u7684\u8bdd\u4f1a\u975e\u5e38\u96be\u4ee5\u7406\u89e3\u3002\u901a\u5e38\u6211\u4eec\u4f1a\u5199\u4e00\u4e2a\u52a9\u624b\u51fd\u6570\u6765\u7b80\u4fbf\u5730\u6253\u5370\u51fa\u9519\u8bef\u5b57\u7b26\u4e32\u4ee5\u53ca\u9519\u8bef\u68c0\u6d4b\u51fd\u6570\u8c03\u7528\u7684\u4f4d\u7f6e\u3002 GLenum glCheckError_(const char *file, int line) { GLenum errorCode; while ((errorCode = glGetError()) != GL_NO_ERROR) { std::string error; switch (errorCode) { case GL_INVALID_ENUM: error = \"INVALID_ENUM\"; break; case GL_INVALID_VALUE: error = \"INVALID_VALUE\"; break; case GL_INVALID_OPERATION: error = \"INVALID_OPERATION\"; break; case GL_STACK_OVERFLOW: error = \"STACK_OVERFLOW\"; break; case GL_STACK_UNDERFLOW: error = \"STACK_UNDERFLOW\"; break; case GL_OUT_OF_MEMORY: error = \"OUT_OF_MEMORY\"; break; case GL_INVALID_FRAMEBUFFER_OPERATION: error = \"INVALID_FRAMEBUFFER_OPERATION\"; break; } std::cout << error << \" | \" << file << \" (\" << line << \")\" << std::endl; } return errorCode; } #define glCheckError() glCheckError_(__FILE__, __LINE__) \u9632\u6b62\u4f60\u4e0d\u77e5\u9053 __FILE__ \u548c __LINE__ \u8fd9\u4e24\u4e2a\u9884\u5904\u7406\u6307\u4ee4(Preprocessor Directive)\u662f\u4ec0\u4e48\uff0c\u5b83\u4eec\u4f1a\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u88ab\u66ff\u6362\u6210\u7f16\u8bd1\u65f6\u5bf9\u5e94\u7684\u6587\u4ef6\u4e0e\u884c\u53f7\u3002\u5982\u679c\u6211\u4eec\u575a\u6301\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u5927\u91cf glGetError \u7684\u8c03\u7528\uff0c\u8fd9\u5c31\u4f1a\u8ba9\u6211\u4eec\u66f4\u52a0\u51c6\u786e\u5730\u77e5\u9053\u54ea\u4e2a glGetError \u8c03\u7528\u8fd4\u56de\u4e86\u9519\u8bef\uff08\u8bd1\u6ce8\uff1a\u8bb0\u5f97 glGetError \u663e\u793a\u7684\u9519\u8bef\u4f1a\u53d1\u751f\u5728\u8be5\u6b21\u8c03\u7528\u4e0e\u4e0a\u6b21\u8c03\u7528\u4e4b\u95f4\uff0c\u5982\u679c\u95f4\u9694\u592a\u5927\u7684\u8bdd\u9700\u8981\u68c0\u67e5\u7684\u5730\u65b9\u5c31\u592a\u591a\u4e86\uff09\u3002 glBindBuffer(GL_VERTEX_ARRAY, vbo); glCheckError(); \u8fd9\u4f1a\u7ed9\u6211\u4eec\u4ee5\u4e0b\u7684\u8f93\u51fa\uff1a glGetError \u5e76\u4e0d\u80fd\u5e2e\u52a9\u4f60\u5f88\u591a\uff0c\u56e0\u4e3a\u5b83\u8fd4\u56de\u7684\u4fe1\u606f\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u4e0d\u53ef\u5426\u8ba4\u5b83\u7ecf\u5e38\u80fd\u5e2e\u52a9\u4f60\u68c0\u67e5\u7b14\u8bef\u6216\u8005\u5feb\u901f\u5b9a\u4f4d\u9519\u8bef\u6765\u6e90\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u4f46\u6709\u6548\u7684\u5de5\u5177\u3002 \u8c03\u8bd5\u8f93\u51fa \u867d\u7136\u6ca1\u6709 glGetError \u666e\u904d\uff0c\u4f46\u4e00\u4e2a\u53eb\u505a \u8c03\u8bd5\u8f93\u51fa (Debug Output)\u7684OpenGL\u62d3\u5c55\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u5de5\u5177\uff0c\u5b83\u57284.3\u7248\u672c\u4e4b\u540e\u53d8\u4e3a\u4e86\u6838\u5fc3OpenGL\u7684\u4e00\u90e8\u5206\u3002\u901a\u8fc7\u4f7f\u7528\u8c03\u8bd5\u8f93\u51fa\u62d3\u5c55\uff0cOpenGL\u81ea\u8eab\u4f1a\u76f4\u63a5\u53d1\u9001\u4e00\u4e2a\u6bd4\u8d77 glGetError \u66f4\u4e3a\u5b8c\u5584\u7684\u9519\u8bef\u6216\u8b66\u544a\u4fe1\u606f\u7ed9\u7528\u6237\u3002\u5b83\u4e0d\u4ec5\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u4e5f\u80fd\u591f\u5e2e\u52a9\u4f60\u4f7f\u7528\u8c03\u8bd5\u5668(Debugger)\u6355\u6349\u9519\u8bef\u6e90\u5934\u3002 Important \u8c03\u8bd5\u8f93\u51fa\u81ea4.3\u7248\u672c\u53d8\u4e3a\u6838\u5fc3OpenGL\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u4e5f\u5c31\u662f\u8bf4\u4f60\u53ef\u4ee5\u5728\u4efb\u610f\u8fd0\u884cOpenGL 4.3\u53ca\u4ee5\u4e0a\u7248\u672c\u7684\u673a\u5668\u4e2d\u627e\u5230\u8fd9\u4e00\u529f\u80fd\u3002\u5982\u679cOpenGL\u4f4e\u4e8e\u8fd9\u4e00\u7248\u672c\uff0c\u4f60\u53ef\u4ee5\u53ef\u4ee5\u67e5\u8be2 ARB_debug_output \u6216\u8005 AMD_debug_output \u62d3\u5c55\u6765\u83b7\u53d6\u5b83\u7684\u529f\u80fd\u3002\u6ce8\u610fOS X\u597d\u50cf\u4e0d\u652f\u6301\u8c03\u8bd5\u8f93\u51fa\u529f\u80fd\uff08\u4ece\u7f51\u4e0a\u770b\u5230\u7684\uff0c\u6211\u6682\u65f6\u8fd8\u6ca1\u6709\u6d4b\u8bd5\u3002\u5982\u679c\u6211\u9519\u4e86\u8bf7\u544a\u8bc9\u6211\u4e00\u4e0b\uff09 \u8981\u60f3\u5f00\u59cb\u4f7f\u7528\u8c03\u8bd5\u8f93\u51fa\uff0c\u6211\u4eec\u5148\u8981\u5728\u521d\u59cb\u5316\u8fdb\u7a0b\u4e2d\u4eceOpenGL\u8bf7\u6c42\u4e00\u4e2a\u8c03\u8bd5\u8f93\u51fa\u4e0a\u4e0b\u6587\u3002\u8fd9\u4e2a\u8fdb\u7a0b\u6839\u636e\u4f60\u7684\u7a97\u53e3\u7cfb\u7edf\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u8fd9\u91cc\u6211\u4eec\u53ea\u4f1a\u8ba8\u8bba\u5728GLFW\u4e2d\u914d\u7f6e\uff0c\u4f46\u4f60\u53ef\u4ee5\u5728\u6559\u7a0b\u6700\u540e\u7684\u9644\u52a0\u8d44\u6e90\u5904\u627e\u5230\u5176\u5b83\u7cfb\u7edf\u7684\u76f8\u5173\u8d44\u6599\u3002 GLFW\u4e2d\u7684\u8c03\u8bd5\u8f93\u51fa \u5728GLFW\u4e2d\u8bf7\u6c42\u4e00\u4e2a\u8c03\u8bd5\u8f93\u51fa\u975e\u5e38\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4f20\u9012\u4e00\u4e2a\u63d0\u9192\u5230GLFW\u4e2d\uff0c\u544a\u8bc9\u5b83\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u8c03\u8bd5\u8f93\u51fa\u4e0a\u4e0b\u6587\u5373\u53ef\u3002\u6211\u4eec\u9700\u8981\u5728\u8c03\u7528 glfwCreateWindow \u4e4b\u524d\u5b8c\u6210\u8fd9\u4e00\u8bf7\u6c42\u3002 glfwWindowHint(GLFW_OPENGL_DEBUG_CONTEXT, true); \u4e00\u65e6GLFW\u521d\u59cb\u5316\u5b8c\u6210\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u7684OpenGL \u7248\u672c\u4e3a4.3\u6216\u4ee5\u4e0a\u7684\u8bdd\u6211\u4eec\u5c31\u6709\u4e00\u4e2a\u8c03\u8bd5\u4e0a\u4e0b\u6587\u4e86\uff0c\u5982\u679c\u4e0d\u662f\u7684\u8bdd\u5219\u7948\u7977\u7cfb\u7edf\u4ecd\u7136\u80fd\u591f\u8bf7\u6c42\u4e00\u4e2a\u8c03\u8bd5\u4e0a\u4e0b\u6587\u5427\u3002\u5982\u679c\u8fd8\u662f\u4e0d\u884c\u7684\u8bdd\u6211\u4eec\u5fc5\u987b\u4f7f\u7528\u5b83\u7684OpenGL\u62d3\u5c55\u6765\u8bf7\u6c42\u8c03\u8bd5\u8f93\u51fa\u3002 Important \u5728\u8c03\u8bd5\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528OpenGL\u4f1a\u660e\u663e\u66f4\u7f13\u6162\u4e00\u70b9\uff0c\u6240\u4ee5\u5f53\u4f60\u5728\u4f18\u5316\u6216\u8005\u53d1\u5e03\u7a0b\u5e8f\u4e4b\u524d\u8bf7\u5c06\u8fd9\u4e00GLFW\u8c03\u8bd5\u8bf7\u6c42\u7ed9\u6ce8\u91ca\u6389\u3002 \u8981\u68c0\u67e5\u6211\u4eec\u662f\u5426\u6210\u529f\u5730\u521d\u59cb\u5316\u4e86\u8c03\u8bd5\u4e0a\u4e0b\u6587\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9OpenGL\u8fdb\u884c\u67e5\u8be2\uff1a GLint flags; glGetIntegerv(GL_CONTEXT_FLAGS, &flags); if (flags & GL_CONTEXT_FLAG_DEBUG_BIT) { // \u521d\u59cb\u5316\u8c03\u8bd5\u8f93\u51fa } \u8c03\u8bd5\u8f93\u51fa\u5de5\u4f5c\u7684\u65b9\u5f0f\u662f\u8fd9\u6837\u7684\uff0c\u6211\u4eec\u9996\u5148\u5c06\u4e00\u4e2a\u9519\u8bef\u8bb0\u5f55\u51fd\u6570\u7684\u56de\u8c03\uff08\u7c7b\u4f3c\u4e8eGLFW\u8f93\u5165\u7684\u56de\u8c03\uff09\u4f20\u9012\u7ed9OpenGL\uff0c\u5728\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\u4e2d\u6211\u4eec\u53ef\u4ee5\u81ea\u7531\u5730\u5904\u7406OpenGL\u9519\u8bef\u6570\u636e\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u5c06\u8f93\u51fa\u4e00\u4e9b\u6709\u7528\u7684\u9519\u8bef\u6570\u636e\u5230\u63a7\u5236\u53f0\u4e2d\u3002\u4e0b\u9762\u662f\u8fd9\u4e2a\u5c31\u662fOpenGL\u5bf9\u8c03\u8bd5\u8f93\u51fa\u6240\u671f\u5f85\u7684\u56de\u8c03\u51fd\u6570\u7684\u539f\u578b\uff1a void APIENTRY glDebugOutput(GLenum source, GLenum type, unsigned int id, GLenum severity, GLsizei length, const char *message, const void *userParam); \u6709\u4e86\u8fd9\u4e00\u5927\u5806\u7684\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u9519\u8bef\u6253\u5370\u5de5\u5177\uff1a void APIENTRY glDebugOutput(GLenum source, GLenum type, unsigned int id, GLenum severity, GLsizei length, const char *message, void *userParam) { // \u5ffd\u7565\u4e00\u4e9b\u4e0d\u91cd\u8981\u7684\u9519\u8bef/\u8b66\u544a\u4ee3\u7801 if(id == 131169 || id == 131185 || id == 131218 || id == 131204) return; std::cout << \"---------------\" << std::endl; std::cout << \"Debug message (\" << id << \"): \" << message << std::endl; switch (source) { case GL_DEBUG_SOURCE_API: std::cout << \"Source: API\"; break; case GL_DEBUG_SOURCE_WINDOW_SYSTEM: std::cout << \"Source: Window System\"; break; case GL_DEBUG_SOURCE_SHADER_COMPILER: std::cout << \"Source: Shader Compiler\"; break; case GL_DEBUG_SOURCE_THIRD_PARTY: std::cout << \"Source: Third Party\"; break; case GL_DEBUG_SOURCE_APPLICATION: std::cout << \"Source: Application\"; break; case GL_DEBUG_SOURCE_OTHER: std::cout << \"Source: Other\"; break; } std::cout << std::endl; switch (type) { case GL_DEBUG_TYPE_ERROR: std::cout << \"Type: Error\"; break; case GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR: std::cout << \"Type: Deprecated Behaviour\"; break; case GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR: std::cout << \"Type: Undefined Behaviour\"; break; case GL_DEBUG_TYPE_PORTABILITY: std::cout << \"Type: Portability\"; break; case GL_DEBUG_TYPE_PERFORMANCE: std::cout << \"Type: Performance\"; break; case GL_DEBUG_TYPE_MARKER: std::cout << \"Type: Marker\"; break; case GL_DEBUG_TYPE_PUSH_GROUP: std::cout << \"Type: Push Group\"; break; case GL_DEBUG_TYPE_POP_GROUP: std::cout << \"Type: Pop Group\"; break; case GL_DEBUG_TYPE_OTHER: std::cout << \"Type: Other\"; break; } std::cout << std::endl; switch (severity) { case GL_DEBUG_SEVERITY_HIGH: std::cout << \"Severity: high\"; break; case GL_DEBUG_SEVERITY_MEDIUM: std::cout << \"Severity: medium\"; break; case GL_DEBUG_SEVERITY_LOW: std::cout << \"Severity: low\"; break; case GL_DEBUG_SEVERITY_NOTIFICATION: std::cout << \"Severity: notification\"; break; } std::cout << std::endl; std::cout << std::endl; } \u5f53\u8c03\u8bd5\u8f93\u51fa\u68c0\u6d4b\u5230\u4e86\u4e00\u4e2aOpenGL\u9519\u8bef\uff0c\u5b83\u4f1a\u8c03\u7528\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u6211\u4eec\u5c06\u53ef\u4ee5\u6253\u5370\u51fa\u975e\u5e38\u591a\u7684OpenGL\u9519\u8bef\u4fe1\u606f\u3002\u6ce8\u610f\u6211\u4eec\u5ffd\u7565\u6389\u4e86\u4e00\u4e9b\u9519\u8bef\u4ee3\u7801\uff0c\u8fd9\u4e9b\u9519\u8bef\u4ee3\u7801\u4e00\u822c\u4e0d\u80fd\u7ed9\u6211\u4eec\u4efb\u4f55\u6709\u7528\u7684\u4fe1\u606f\uff08\u6bd4\u5982NVidia\u9a71\u52a8\u4e2d\u7684 131185 \u4ec5\u544a\u8bc9\u6211\u4eec\u7f13\u51b2\u6210\u529f\u521b\u5efa\u4e86\uff09\u3002 \u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u56de\u8c03\u51fd\u6570\uff0c\u90a3\u4e48\u662f\u65f6\u5019\u521d\u59cb\u5316\u8c03\u8bd5\u8f93\u51fa\u4e86\uff1a if (flags & GL_CONTEXT_FLAG_DEBUG_BIT) { glEnable(GL_DEBUG_OUTPUT); glEnable(GL_DEBUG_OUTPUT_SYNCHRONOUS); glDebugMessageCallback(glDebugOutput, nullptr); glDebugMessageControl(GL_DONT_CARE, GL_DONT_CARE, GL_DONT_CARE, 0, nullptr, GL_TRUE); } \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u544a\u8bc9OpenGL\u542f\u7528\u8c03\u8bd5\u8f93\u51fa\uff0c\u8c03\u7528 glEnable(GL_DEBUG_SYNCRHONOUS) \u544a\u8bc9OpenGL\u5728\u53d1\u751f\u9519\u8bef\u65f6\u76f4\u63a5\u8c03\u7528\u56de\u8c03\u51fd\u6570\u3002 \u8fc7\u6ee4\u8c03\u8bd5\u8f93\u51fa \u6709\u4e86 glDebugMessageControl \uff0c\u4f60\u53ef\u4ee5\u6f5c\u5728\u5730\u8fc7\u6ee4\u51fa\u4f60\u9700\u8981\u7684\u9519\u8bef\u7c7b\u578b\u3002\u5728\u8fd9\u91cc\u6211\u4eec\u4e0d\u6253\u7b97\u8fc7\u6ee4\u4efb\u4f55\u6765\u6e90\uff0c\u7c7b\u578b\u6216\u8005\u4e25\u91cd\u7b49\u7ea7\u3002\u5982\u679c\u6211\u4eec\u4ec5\u5e0c\u671b\u663e\u793aOpenGL API\u7684\u9ad8\u4e25\u91cd\u7b49\u7ea7\u9519\u8bef\u6d88\u606f\uff0c\u4f60\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u4ee5\u4e0b\u8fd9\u6837\uff1a glDebugMessageControl(GL_DEBUG_SOURCE_API, GL_DEBUG_TYPE_ERROR, GL_DEBUG_SEVERITY_HIGH, 0, nullptr, GL_TRUE); \u6709\u4e86\u6211\u4eec\u7684\u914d\u7f6e\uff0c\u5982\u679c\u4f60\u7684\u4e0a\u4e0b\u6587\u652f\u6301\u8c03\u8bd5\u8f93\u51fa\u7684\u8bdd\uff0c\u6bcf\u4e2a\u4e0d\u6b63\u786e\u7684OpenGL\u6307\u4ee4\u90fd\u4f1a\u6253\u5370\u51fa\u4e00\u5927\u5806\u7684\u6709\u7528\u6570\u636e\u3002 \u56de\u6eaf\u8c03\u8bd5\u9519\u8bef\u6e90 \u4f7f\u7528\u8c03\u8bd5\u8f93\u51fa\u53e6\u4e00\u4e2a\u5f88\u68d2\u7684\u6280\u5de7\u5c31\u662f\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u627e\u51fa\u9519\u8bef\u53d1\u751f\u7684\u51c6\u786e\u884c\u53f7\u6216\u8005\u8c03\u7528\u3002\u901a\u8fc7\u5728 DebugOutput \u4e2d\u7279\u5b9a\u7684\u9519\u8bef\u7c7b\u578b\u4e0a\uff08\u6216\u8005\u5728\u51fd\u6570\u7684\u9876\u90e8\uff0c\u5982\u679c\u4f60\u4e0d\u5173\u5fc3\u7c7b\u578b\u7684\u8bdd\uff09\u8bbe\u7f6e\u4e00\u4e2a\u65ad\u70b9\uff0c\u8c03\u8bd5\u5668\u5c06\u4f1a\u6355\u6349\u5230\u629b\u51fa\u7684\u9519\u8bef\uff0c\u4f60\u53ef\u4ee5\u5f80\u4e0a\u67e5\u627e\u8c03\u7528\u6808\u76f4\u5230\u627e\u5230\u6d88\u606f\u53d1\u51fa\u7684\u6e90\u5934\u3002 \u8fd9\u9700\u8981\u4e00\u4e9b\u624b\u52a8\u64cd\u4f5c\uff0c\u4f46\u5982\u679c\u4f60\u5927\u81f4\u77e5\u9053\u4f60\u5728\u5bfb\u627e\u4ec0\u4e48\uff0c\u8fd9\u4f1a\u975e\u5e38\u6709\u7528\uff0c\u80fd\u591f\u5e2e\u52a9\u4f60\u5feb\u901f\u5b9a\u4f4d\u9519\u8bef\u3002 \u81ea\u5b9a\u4e49\u9519\u8bef\u8f93\u51fa \u9664\u4e86\u4ec5\u4ec5\u662f\u9605\u8bfb\u4fe1\u606f\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 glDebugMessageInsert \u5c06\u4fe1\u606f\u63a8\u9001\u5230\u8c03\u8bd5\u8f93\u51fa\u7cfb\u7edf\uff1a glDebugMessageInsert(GL_DEBUG_SOURCE_APPLICATION, GL_DEBUG_TYPE_ERROR, 0, GL_DEBUG_SEVERITY_MEDIUM, -1, \"error message here\"); \u5982\u679c\u4f60\u6b63\u5728\u5229\u7528\u5176\u5b83\u4f7f\u7528\u8c03\u8bd5\u8f93\u51fa\u4e0a\u4e0b\u6587\u7684\u7a0b\u5e8f\u6216OpenGL\u4ee3\u7801\u8fdb\u884c\u5f00\u53d1\uff0c\u8fd9\u4f1a\u975e\u5e38\u6709\u7528\u3002\u5176\u5b83\u7684\u5f00\u53d1\u8005\u80fd\u5feb\u901f\u4e86\u89e3\u4f60\u81ea\u5b9a\u4e49OpenGL\u4ee3\u7801\u4e2d\u4efb\u4f55 \u62a5\u544a\u51fa\u6765\u7684 Bug\u3002 \u603b\u800c\u8a00\u4e4b\uff0c\u8c03\u8bd5\u8f93\u51fa\uff08\u5982\u679c\u4f60\u80fd\u4f7f\u7528\u5b83\uff09\u5bf9\u4e0e\u5feb\u901f\u6355\u6349\u9519\u8bef\u662f\u975e\u5e38\u6709\u7528\u7684\uff0c\u5b8c\u5168\u503c\u5f97\u4f60\u82b1\u4e00\u70b9\u65f6\u95f4\u6765\u914d\u7f6e\uff0c\u5b83\u80fd\u591f\u7701\u4e0b\u4f60\u975e\u5e38\u591a\u7684\u5f00\u53d1\u65f6\u95f4\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u6e90\u7801\uff0c\u91cc\u9762 glGetError \u548c\u8c03\u8bd5\u8f93\u51fa\u4e0a\u4e0b\u6587\u90fd\u6709\u914d\u7f6e\uff1b\u770b\u770b\u4f60\u662f\u5426\u80fd\u591f\u4fee\u590d\u6240\u6709\u7684\u9519\u8bef\u3002 \u8c03\u8bd5\u7740\u8272\u5668\u8f93\u51fa \u5bf9\u4e8eGLSL\u6765\u8bf4\uff0c\u6211\u4eec\u4e0d\u80fd\u8bbf\u95ee\u50cf\u662f glGetError \u8fd9\u6837\u7684\u51fd\u6570\uff0c\u4e5f\u4e0d\u80fd\u901a\u8fc7\u6b65\u8fdb\u7684\u65b9\u5f0f\u8fd0\u884c\u7740\u8272\u5668\u4ee3\u7801\u3002\u5982\u679c\u4f60\u5f97\u5230\u4e00\u4e2a\u9ed1\u5c4f\u6216\u8005\u5b8c\u5168\u9519\u8bef\u7684\u89c6\u89c9\u6548\u679c\uff0c\u901a\u5e38\u60f3\u8981\u77e5\u9053\u7740\u8272\u5668\u4ee3\u7801\u662f\u5426\u6709\u8bef\u4f1a\u975e\u5e38\u56f0\u96be\u3002\u662f\u7684\uff0c\u6211\u4eec\u662f\u6709\u7f16\u8bd1\u9519\u8bef\u62a5\u544a\u6765\u62a5\u544a\u8bed\u6cd5\u9519\u8bef\uff0c\u4f46\u662f\u6355\u6349\u8bed\u4e49\u9519\u8bef\u53c8\u662f\u4e00\u5927\u96be\u9898\u3002 \u4e00\u4e2a\u7ecf\u5e38\u4f7f\u7528\u7684\u6280\u5de7\u5c31\u662f\u5c06\u7740\u8272\u5668\u7a0b\u5e8f\u4e2d\u6240\u6709\u76f8\u5173\u7684\u53d8\u91cf\u76f4\u63a5\u53d1\u9001\u5230\u7247\u6bb5\u7740\u8272\u5668\u7684\u8f93\u51fa\u901a\u9053\uff0c\u4ee5\u8bc4\u4f30\u5b83\u4eec\u3002\u901a\u8fc7\u76f4\u63a5\u8f93\u51fa\u7740\u8272\u5668\u53d8\u91cf\u5230\u8f93\u51fa\u989c\u8272\u901a\u9053\uff0c\u6211\u4eec\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u89c2\u5bdf\u89c6\u89c9\u7ed3\u679c\u6765\u83b7\u53d6\u6709\u7528\u7684\u4fe1\u606f\u3002\u6bd4\u5982\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u68c0\u67e5\u4e00\u4e2a\u6a21\u578b\u7684\u6cd5\u5411\u91cf\u662f\u5426\u6b63\u786e\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u4eec\uff08\u53ef\u4ee5\u662f\u53d8\u6362\u8fc7\u7684\u4e5f\u53ef\u4ee5\u662f\u6ca1\u6709\u53d8\u6362\u8fc7\u7684\uff09\u4ece\u9876\u70b9\u7740\u8272\u5668\u4f20\u9012\u5230\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u6211\u4eec\u4f1a\u7528\u4ee5\u4e0b\u8fd9\u79cd\u65b9\u5f0f\u8f93\u51fa\u6cd5\u5411\u91cf\uff1a #version 330 core out vec4 FragColor; in vec3 Normal; [...] void main() { [...] FragColor.rgb = Normal; FragColor.a = 1.0f; } \u901a\u8fc7\u8f93\u51fa\u4e00\u4e2a\uff08\u975e\u989c\u8272\uff09\u53d8\u91cf\u5230\u8fd9\u6837\u5b50\u7684\u8f93\u51fa\u989c\u8272\u901a\u9053\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u5ba1\u67e5\u53d8\u91cf\u662f\u5426\u663e\u793a\u7740\u6b63\u786e\u7684\u503c\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5982\u679c\u6700\u540e\u7684\u89c6\u89c9\u6548\u679c\u5b8c\u5168\u662f\u9ed1\u8272\u7684\uff0c\u5219\u5f88\u6e05\u695a\u8868\u660e\u6cd5\u5411\u91cf\u6ca1\u6709\u6b63\u786e\u5730\u4f20\u9012\u81f3\u7740\u8272\u5668\u4e2d\u3002\u5f53\u5b83\u4eec\u90fd\u663e\u793a\u51fa\u6765\u7684\u65f6\u5019\uff0c\u68c0\u67e5\u5b83\u4eec\uff08\u5927\u6982\uff09\u6b63\u786e\u4e0e\u5426\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u7b80\u5355\u3002 \u4ece\u89c6\u89c9\u6548\u679c\u6765\u770b\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u89c1\u4e16\u754c\u7a7a\u95f4\u7684\u6cd5\u5411\u91cf\u5e94\u8be5\u662f\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u80cc\u5305\u6a21\u578b\u7684\u53f3\u4fa7\u5927\u90e8\u5206\u90fd\u662f\u7ea2\u8272\u7684\uff08\u8fd9\u8868\u660e\u6cd5\u7ebf\u5927\u6982\uff08\u6b63\u786e\u5730\uff09\u6307\u5411\u6b63x\u8f74\uff09\uff0c\u540c\u6837\u7684\uff0c\u80cc\u5305\u7684\u524d\u65b9\u5927\u90e8\u5206\u90fd\u4e3a\u84dd\u8272\uff0c\u5373\u6b63z\u8f74\u65b9\u5411\u3002 \u8fd9\u4e00\u65b9\u6cd5\u53ef\u4ee5\u5f88\u5bb9\u6613\u62d3\u5c55\u5230\u4f60\u60f3\u8981\u6d4b\u8bd5\u7684\u4efb\u4f55\u53d8\u91cf\u3002\u4e00\u65e6\u4f60\u5361\u4f4f\u4e86\u6216\u8005\u6000\u7591\u4f60\u7684\u7740\u8272\u5668\u6709\u95ee\u9898\uff0c\u5c1d\u8bd5\u663e\u793a\u591a\u4e2a\u53d8\u91cf\u548c/\u6216\u4e2d\u95f4\u7ed3\u679c\uff0c\u770b\u770b\u54ea\u90e8\u5206\u7b97\u6cd5\u4ec0\u4e48\u7684\u6ca1\u52a0\u4e0a\u6216\u8005\u6709\u9519\u8bef\u3002 OpenGL GLSL\u53c2\u8003\u7f16\u8bd1\u5668 \u6bcf\u4e00\u4e2a\u9a71\u52a8\u90fd\u6709\u5b83\u81ea\u5df1\u7684\u602a\u7656\u3002\u6bd4\u5982\u8bf4NVIDIA\u9a71\u52a8\u4f1a\u66f4\u5bbd\u5bb9\u4e00\u70b9\uff0c\u901a\u5e38\u4f1a\u5ffd\u7565\u4e00\u4e9b\u9650\u5236\u6216\u8005\u89c4\u8303\uff0c\u800cATI/AMD\u9a71\u52a8\u5219\u901a\u5e38\u4f1a\u4e25\u683c\u6267\u884cOpenGL\u89c4\u8303\uff08\u5728\u6211\u770b\u6765\u4f1a\u66f4\u597d\u4e00\u70b9\uff09\u3002\u95ee\u9898\u662f\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u7684\u7740\u8272\u5668\u5230\u53e6\u4e00\u53f0\u673a\u5668\u4e0a\u53ef\u80fd\u5c31\u7531\u4e8e\u9a71\u52a8\u5dee\u5f02\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\u4e86\u3002 \u901a\u8fc7\u591a\u5e74\u7684\u7ecf\u9a8c\u4f60\u4f1a\u6700\u7ec8\u80fd\u591f\u77e5\u9053\u4e0d\u540cGPU\u4f9b\u5e94\u5546\u4e4b\u95f4\u7684\u7ec6\u5fae\u5dee\u522b\uff0c\u4f46\u5982\u679c\u4f60\u60f3\u8981\u4fdd\u8bc1\u4f60\u7684\u7740\u8272\u5668\u4ee3\u7801\u5728\u6240\u6709\u7684\u673a\u5668\u4e0a\u90fd\u80fd\u8fd0\u884c\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u5bf9\u7740\u5b98\u65b9\u7684\u6807\u51c6\u4f7f\u7528OpenGL\u7684GLSL \u53c2\u8003\u7f16\u8bd1\u5668 \uff08Reference Compiler\uff09\u6765\u68c0\u67e5\u3002\u4f60\u53ef\u4ee5\u4ece \u8fd9\u91cc \u4e0b\u8f7d\u6240\u8c13\u7684 GLSL\u8bed\u8a00\u6821\u9a8c\u5668 (GLSL Lang Validator)\u7684\u53ef\u6267\u884c\u7248\u672c\uff0c\u6216\u8005\u4ece \u8fd9\u91cc \u627e\u5230\u5b8c\u6574\u7684\u6e90\u7801\u3002 \u6709\u4e86\u8fd9\u4e2aGLSL\u8bed\u8a00\u6821\u9a8c\u5668\uff0c\u4f60\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u68c0\u67e5\u4f60\u7684\u7740\u8272\u5668\u4ee3\u7801\uff0c\u53ea\u9700\u8981\u628a\u7740\u8272\u5668\u6587\u4ef6\u4f5c\u4e3a\u7a0b\u5e8f\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5373\u53ef\u3002\u6ce8\u610fGLSL\u8bed\u8a00\u6821\u9a8c\u5668\u662f\u901a\u8fc7\u4e0b\u5217\u56fa\u5b9a\u7684\u540e\u7f00\u540d\u6765\u51b3\u5b9a\u7740\u8272\u5668\u7684\u7c7b\u578b\u7684\uff1a .vert \uff1a\u9876\u70b9\u7740\u8272\u5668(Vertex Shader) .frag \uff1a\u7247\u6bb5\u7740\u8272\u5668(Fragment Shader) .geom \uff1a\u51e0\u4f55\u7740\u8272\u5668(Geometry Shader) .tesc \uff1a\u7ec6\u5206\u63a7\u5236\u7740\u8272\u5668(Tessellation Control Shader) .tese \uff1a\u7ec6\u5206\u8ba1\u7b97\u7740\u8272\u5668(Tessellation Evaluation Shader) .comp \uff1a\u8ba1\u7b97\u7740\u8272\u5668(Compute Shader) \u8fd0\u884cGLSL\u53c2\u8003\u7f16\u8bd1\u5668\u975e\u5e38\u7b80\u5355\uff1a glsllangvalidator shaderFile.vert \u6ce8\u610f\u5982\u679c\u6ca1\u6709\u68c0\u6d4b\u5230\u9519\u8bef\u7684\u8bdd\u5219\u6ca1\u6709\u8f93\u51fa\u3002\u5bf9\u4e00\u4e2a\u4e0d\u6b63\u786e\u7684\u9876\u70b9\u7740\u8272\u5668\u4f7f\u7528GLSL\u53c2\u8003\u7f16\u8bd1\u5668\u8fdb\u884c\u6d4b\u8bd5\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u7ed3\u679c\uff1a \u5b83\u4e0d\u4f1a\u663e\u793aAMD\uff0cNVidia\uff0c\u4ee5\u53caIntel\u7684GLSL\u7f16\u8bd1\u5668\u4e4b\u95f4\u7684\u7ec6\u5fae\u5dee\u522b\uff0c\u4e5f\u4e0d\u80fd\u4fdd\u8bc1\u4f60\u7684\u7740\u8272\u5668\u5b8c\u5168\u6ca1\u6709Bug\uff0c\u4f46\u5b83\u81f3\u5c11\u80fd\u591f\u5e2e\u4f60\u5bf9\u7740\u76f4\u63a5\u7684GLSL\u89c4\u8303\u8fdb\u884c\u68c0\u67e5\u3002 \u5e27\u7f13\u51b2\u8f93\u51fa \u4f60\u7684\u8c03\u8bd5\u5de5\u5177\u7bb1\u4e2d\u53e6\u5916\u4e00\u4e2a\u6280\u5de7\u5c31\u662f\u5728OpenGL\u7a0b\u5e8f\u4e2d\u4e00\u5757\u7279\u5b9a\u533a\u57df\u663e\u793a\u5e27\u7f13\u51b2\u7684\u5185\u5bb9\u3002\u4f60\u53ef\u80fd\u4f1a\u6bd4\u8f83\u9891\u7e41\u5730\u4f7f\u7528 \u5e27\u7f13\u51b2 \uff0c\u4f46\u7531\u4e8e\u5e27\u7f13\u51b2\u7684\u64cd\u4f5c\u901a\u5e38\u5728\u540e\u53f0\u8fdb\u884c\uff0c\u6709\u65f6\u5019\u60f3\u8981\u77e5\u9053\u51fa\u4ec0\u4e48\u95ee\u9898\u4f1a\u975e\u5e38\u56f0\u96be\u3002\u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\u663e\u793a\u5e27\u7f13\u51b2\u7684\u5185\u5bb9\u662f\u4e00\u4e2a\u5f88\u6709\u7528\u7684\u6280\u5de7\uff0c\u5e2e\u52a9\u4f60\u5feb\u901f\u68c0\u67e5\u9519\u8bef\u3002 Important \u6ce8\u610f\uff0c\u8fd9\u91cc\u8ba8\u8bba\u7684\u5e27\u7f13\u51b2\u663e\u793a\u5185\u5bb9\uff08\u9644\u4ef6\uff09\u4ec5\u80fd\u5728\u7eb9\u7406\u9644\u4ef6\u4e0a\u4f7f\u7528\uff0c\u800c\u4e0d\u80fd\u5e94\u7528\u4e8e\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u3002 \u901a\u8fc7\u4f7f\u7528\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u663e\u793a\u7eb9\u7406\u7684\u7740\u8272\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u4e00\u4e2a\u52a9\u624b\u51fd\u6570\u5feb\u901f\u5728\u5c4f\u5e55\u53f3\u4e0a\u89d2\u663e\u793a\u4efb\u4f55\u7eb9\u7406\u3002 // \u9876\u70b9\u7740\u8272\u5668 #version 330 core layout (location = 0) in vec2 position; layout (location = 1) in vec2 texCoords; out vec2 TexCoords; void main() { gl_Position = vec4(position, 0.0f, 1.0f); TexCoords = texCoords; } // \u7247\u6bb5\u7740\u8272\u5668 #version 330 core out vec4 FragColor; in vec2 TexCoords; uniform sampler2D fboAttachment; void main() { FragColor = texture(fboAttachment, TexCoords); } void DisplayFramebufferTexture(GLuint textureID) { if(!notInitialized) { // \u5728\u5c4f\u5e55\u53f3\u4e0a\u89d2\uff0c\u4f7f\u7528NDC\u9876\u70b9\u5750\u6807\u521d\u59cb\u5316\u7740\u8272\u5668\u548cVAO [...] } glActiveTexture(GL_TEXTURE0); glUseProgram(shaderDisplayFBOOutput); glBindTexture(GL_TEXTURE_2D, textureID); glBindVertexArray(vaoDebugTexturedRect); glDrawArrays(GL_TRIANGLES, 0, 6); glBindVertexArray(0); glUseProgram(0); } int main() { [...] while (!glfwWindowShouldClose(window)) { [...] DisplayFramebufferTexture(fboAttachment0); glfwSwapBuffers(window); } } \u8fd9\u5c06\u5728\u5c4f\u5e55\u53f3\u4e0a\u89d2\u7ed9\u4f60\u4e00\u4e2a\u5c0f\u7a97\u53e3\uff0c\u7528\u6765\u8c03\u8bd5\u5e27\u7f13\u51b2\u7684\u8f93\u51fa\u3002\u6bd4\u5982\u4f60\u60f3\u8981\u68c0\u67e5\u5ef6\u8fdf\u6e32\u67d3\u5668\u7684\u51e0\u4f55\u6e32\u67d3\u9636\u6bb5\u4e2d\u7684\u6cd5\u5411\u91cf\u662f\u5426\u6b63\u786e\uff0c\u4f7f\u7528\u8fd9\u4e2a\u4f1a\u975e\u5e38\u65b9\u4fbf\uff1a \u4f60\u5f53\u7136\u53ef\u4ee5\u62d3\u5c55\u8fd9\u4e2a\u51fd\u6570\u4ee5\u652f\u6301\u6e32\u67d3\u66f4\u591a\u7684\u7eb9\u7406\u3002\u8fd9\u4e2a\u65b9\u6cd5\u80fd\u591f\u975e\u5e38\u5feb\u901f\u5730\u8ba9\u4f60\u5bf9\u5e27\u7f13\u51b2\u5185\u5bb9\u6709\u7740\u6301\u7eed\u7684\u53cd\u9988\u3002 \u5916\u90e8\u8c03\u8bd5\u8f6f\u4ef6 \u5f53\u4e0a\u9762\u6240\u6709\u4ecb\u7ecd\u5230\u7684\u6280\u5de7\u90fd\u4e0d\u80fd\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4ecd\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u7b2c\u4e09\u65b9\u7684\u5de5\u5177\u6765\u5e2e\u52a9\u6211\u4eec\u8c03\u8bd5\u3002\u7b2c\u4e09\u65b9\u5e94\u7528\u901a\u5e38\u5c06\u5b83\u4eec\u81ea\u5df1\u6ce8\u5165\u5230OpenGL\u9a71\u52a8\u4e2d\uff0c\u5e76\u4e14\u80fd\u591f\u62e6\u622a\u5404\u79cdOpenGL\u8c03\u7528\uff0c\u7ed9\u4f60\u5927\u91cf\u6709\u7528\u7684\u6570\u636e\u3002\u8fd9\u4e9b\u5de5\u5177\u53ef\u4ee5\u5728\u5f88\u591a\u65b9\u9762\u5e2e\u52a9\u5230\u4f60\uff1a\u5bf9OpenGL\u51fd\u6570\u4f7f\u7528\u8fdb\u884c\u6027\u80fd\u6d4b\u8bd5\uff0c\u5bfb\u627e\u74f6\u9888\uff0c\u68c0\u67e5\u7f13\u51b2\u5185\u5b58\uff0c\u663e\u793a\u7eb9\u7406\u548c\u5e27\u7f13\u51b2\u9644\u4ef6\u3002\u5982\u679c\u4f60\u6b63\u5728\u5199\uff08\u5927\u89c4\u6a21\uff09\u4ea7\u54c1\u4ee3\u7801\uff0c\u8fd9\u7c7b\u7684\u5de5\u5177\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u662f\u975e\u5e38\u6709\u7528\u7684\u3002 \u6211\u5728\u4e0b\u9762\u5217\u51fa\u4e86\u4e00\u4e9b\u6d41\u884c\u7684\u8c03\u8bd5\u5de5\u5177\uff0c\u9009\u51e0\u4e2a\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u770b\u770b\u54ea\u4e2a\u6700\u9002\u5408\u4f60\u3002 RenderDoc RenderDoc\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\uff08\u5b8c\u5168 \u5f00\u6e90 \u7684\uff09\u72ec\u7acb\u8c03\u8bd5\u5de5\u5177\u3002\u4f60\u53ea\u9700\u8981\u8bbe\u7f6e\u6355\u6349\u7684\u7a0b\u5e8f\u4ee5\u53ca\u5de5\u4f5c\u76ee\u5f55\u5c31\u884c\u4e86\u3002\u4f60\u7684\u7a0b\u5e8f\u4f1a\u6b63\u5e38\u8fd0\u884c\uff0c\u5f53\u4f60\u60f3\u8981\u68c0\u67e5\u4e00\u4e2a\u7279\u5b9a\u7684\u5e27\u7684\u65f6\u5019\uff0c\u4f60\u53ea\u9700\u8981\u8ba9RenderDoc\u5728\u7a0b\u5e8f\u5f53\u524d\u72b6\u6001\u4e0b\u6355\u6349\u4e00\u4e2a\u6216\u591a\u4e2a\u5e27\u5373\u53ef\u3002\u5728\u6355\u6349\u7684\u5e27\u5f53\u4e2d\uff0c\u4f60\u53ef\u4ee5\u89c2\u5bdf\u7ba1\u7ebf\u72b6\u6001\uff0c\u6240\u6709OpenGL\u6307\u4ee4\uff0c\u7f13\u51b2\u50a8\u5b58\uff0c\u4ee5\u53ca\u4f7f\u7528\u7684\u7eb9\u7406\u3002 CodeXL CodeXL \u662f\u7531AMD\u5f00\u53d1\u7684\u4e00\u6b3eGPU\u8c03\u8bd5\u5de5\u5177\uff0c\u5b83\u6709\u72ec\u7acb\u7248\u672c\u4e5f\u6709Visual Studio\u63d2\u4ef6\u7248\u672c\u3002CodeXL\u53ef\u4ee5\u7ed9\u4f60\u975e\u5e38\u591a\u7684\u4fe1\u606f\uff0c\u5bf9\u4e8e\u56fe\u5f62\u7a0b\u5e8f\u7684\u6027\u80fd\u6d4b\u8bd5\u4e5f\u975e\u5e38\u6709\u7528\u3002CodeXL\u5728NVidia\u4e0eIntel\u7684\u663e\u5361\u4e0a\u4e5f\u80fd\u8fd0\u884c\uff0c\u4e0d\u8fc7\u4f1a\u4e0d\u652f\u6301OpenCL\u8c03\u8bd5\u3002 \u6211\u6ca1\u6709\u592a\u591a\u7684CodeXL\u4f7f\u7528\u7ecf\u9a8c\uff0c\u6211\u4e2a\u4eba\u89c9\u5f97RenderDoc\u4f1a\u66f4\u5bb9\u6613\u4f7f\u7528\u4e00\u70b9\uff0c\u4f46\u6211\u4ecd\u628a\u5b83\u5217\u5728\u8fd9\u91cc\uff0c\u56e0\u4e3a\u5b83\u4ecd\u662f\u4e00\u4e2a\u975e\u5e38\u53ef\u9760\u7684\u5de5\u5177\uff0c\u5e76\u4e14\u4e3b\u8981\u662f\u7531\u6700\u5927\u7684GPU\u5236\u9020\u5546\u4e4b\u4e00\u5f00\u53d1\u7684\u3002 NVIDIA Nsight NVIDIA\u6d41\u884c\u7684 Nsight GPU\u8c03\u8bd5\u5de5\u5177\u5e76\u4e0d\u662f\u4e00\u4e2a\u72ec\u7acb\u7a0b\u5e8f\uff0c\u800c\u662f\u4e00\u4e2aVisual Studio IDE\u6216\u8005Eclipse IDE\u7684\u63d2\u4ef6 (NVIDIA\u73b0\u5728\u4e5f\u63d0\u4f9b \u72ec\u7acb\u7248\u672c \u4e86)\u3002Nsight\u63d2\u4ef6\u5bf9\u56fe\u5f62\u5f00\u53d1\u8005\u6765\u8bf4\u975e\u5e38\u5bb9\u6613\u4f7f\u7528\uff0c\u56e0\u4e3a\u5b83\u7ed9\u51fa\u4e86GPU\u7528\u91cf\uff0c\u9010\u5e27GPU\u72b6\u6001\u5927\u91cf\u8fd0\u884c\u65f6\u7684\u7edf\u8ba1\u6570\u636e\u3002 \u5f53\u4f60\u5728Visual Studio\uff08\u6216Eclipse\uff09\u4f7f\u7528Nsight\u7684\u8c03\u8bd5\u6216\u8005\u6027\u80fd\u6d4b\u8bd5\u6307\u4ee4\u542f\u52a8\u7a0b\u5e8f\u7684\u65f6\u5019\uff0cNsight\u5c06\u4f1a\u5728\u7a0b\u5e8f\u81ea\u8eab\u4e2d\u8fd0\u884c\u3002Nsight\u975e\u5e38\u68d2\u7684\u4e00\u70b9\u5c31\u662f\u5b83\u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\u6e32\u67d3\u4e86\u4e00\u5957GUI\u7cfb\u7edf\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u83b7\u53d6\u4f60\u7a0b\u5e8f\u5404\u79cd\u5404\u6837\u6709\u7528\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u662f\u8fd0\u884c\u65f6\u4e5f\u53ef\u4ee5\u662f\u9010\u5e27\u5206\u6790\u3002 Nsight\u662f\u4e00\u6b3e\u975e\u5e38\u6709\u7528\u7684\u5de5\u5177\uff0c\u5728\u6211\u770b\u6765\u6bd4\u4e0a\u8ff0\u5176\u5b83\u5de5\u5177\u90fd\u6709\u66f4\u597d\u7684\u8868\u73b0\uff0c\u4f46\u5b83\u4ecd\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7f3a\u70b9\uff0c\u5b83\u53ea\u80fd\u5728NVIDIA\u7684\u663e\u5361\u4e0a\u5de5\u4f5c\u3002\u5982\u679c\u4f60\u6b63\u5728\u4f7f\u7528\u4e00\u6b3eNVIDIA\u7684\u663e\u5361\uff08\u5e76\u4e14\u4f7f\u7528Visual Studio\uff09\uff0cNsight\u662f\u975e\u5e38\u503c\u5f97\u4e00\u8bd5\u7684\u3002 \u6211\u77e5\u9053\u6211\u53ef\u80fd\u9057\u6f0f\u4e86\u4e00\u4e9b\u5176\u5b83\u7684\u8c03\u8bd5\u5de5\u5177\uff08\u6bd4\u5982\u6211\u8fd8\u80fd\u60f3\u5230\u6709Valve\u7684 VOGL \u548c APItrace \uff09\uff0c\u4f46\u6211\u89c9\u5f97\u8fd9\u4e2a\u5217\u8868\u5df2\u7ecf\u7ed9\u4f60\u8db3\u591f\u591a\u7684\u5de5\u5177\u6765\u5b9e\u9a8c\u4e86\u3002 \u9644\u52a0\u8d44\u6e90 \u4e3a\u4ec0\u4e48\u4f60\u7684\u4ee3\u7801\u4f1a\u4ea7\u751f\u4e00\u4e2a\u9ed1\u8272\u7a97\u53e3 \uff1aReto Koradi\u5217\u4e3e\u4e86\u4f60\u7684\u5c4f\u5e55\u6ca1\u6709\u4ea7\u751f\u4efb\u4f55\u8f93\u51fa\u7684\u53ef\u80fd\u539f\u56e0\u3002 \u8c03\u8bd5\u8f93\u51fa \uff1aVallentin Source\u5199\u7684\u4e00\u4efd\u975e\u5e38\u8be6\u7ec6\u7684\u8c03\u8bd5\u8f93\u51fa\u6559\u7a0b\uff0c\u91cc\u9762\u6709\u5728\u591a\u4e2a\u7a97\u53e3\u7cfb\u7edf\u4e2d\u914d\u7f6e\u8c03\u8bd5\u4e0a\u4e0b\u6587\u7684\u8be6\u7ec6\u4fe1\u606f\u3002","title":"\u8c03\u8bd5"},{"location":"06%20In%20Practice/01%20Debugging/#_1","text":"\u539f\u6587 Debugging \u4f5c\u8005 JoeydeVries \u7ffb\u8bd1 Krasjet \u6821\u5bf9 AoZhang \u56fe\u5f62\u7f16\u7a0b\u53ef\u4ee5\u5e26\u6765\u5f88\u591a\u7684\u4e50\u8da3\uff0c\u7136\u800c\u5982\u679c\u4ec0\u4e48\u4e1c\u897f\u6e32\u67d3\u9519\u8bef\uff0c\u6216\u8005\u751a\u81f3\u6839\u672c\u5c31\u6ca1\u6709\u6e32\u67d3\uff0c\u5b83\u540c\u6837\u53ef\u4ee5\u7ed9\u4f60\u5e26\u6765\u5927\u91cf\u7684\u6cae\u4e27\u611f\uff01\u7531\u4e8e\u6211\u4eec\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u4e0e\u50cf\u7d20\u6253\u4ea4\u9053\uff0c\u5f53\u51fa\u73b0\u9519\u8bef\u7684\u65f6\u5019\u5bfb\u627e\u9519\u8bef\u7684\u6e90\u5934\u53ef\u80fd\u4f1a\u975e\u5e38\u56f0\u96be\u3002\u8c03\u8bd5(Debug)\u8fd9\u6837\u7684 \u89c6\u89c9 \u9519\u8bef\u4e0e\u5f80\u5e38\u719f\u6089\u7684CPU\u8c03\u8bd5\u4e0d\u540c\u3002\u6211\u4eec\u6ca1\u6709\u4e00\u4e2a\u53ef\u4ee5\u7528\u6765\u8f93\u51fa\u6587\u672c\u7684\u63a7\u5236\u53f0\uff0c\u5728GLSL\u4ee3\u7801\u4e2d\u4e5f\u4e0d\u80fd\u8bbe\u7f6e\u65ad\u70b9\uff0c\u66f4\u6ca1\u6709\u65b9\u6cd5\u65b9\u4fbf\u5730\u68c0\u6d4bGPU\u7684\u8fd0\u884c\u72b6\u6001\u3002 \u5728\u8fd9\u7bc7\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u6765\u89c1\u8bc6\u51e0\u4e2a\u8c03\u8bd5OpenGL\u7a0b\u5e8f\u7684\u6280\u5de7\u3002OpenGL\u4e2d\u7684\u8c03\u8bd5\u5e76\u4e0d\u662f\u5f88\u96be\uff0c\u638c\u63e1\u4f4f\u8fd9\u4e9b\u6280\u5de7\u5bf9\u4e4b\u540e\u7684\u5b66\u4e60\u4f1a\u6709\u975e\u5e38\u5927\u7684\u5e2e\u52a9\u3002","title":"\u8c03\u8bd5"},{"location":"06%20In%20Practice/01%20Debugging/#glgeterror","text":"\u5f53\u4f60\u4e0d\u6b63\u786e\u4f7f\u7528OpenGL\u7684\u65f6\u5019\uff08\u6bd4\u5982\u8bf4\u5728\u7ed1\u5b9a\u4e4b\u524d\u914d\u7f6e\u4e00\u4e2a\u7f13\u51b2\uff09\uff0c\u5b83\u4f1a\u68c0\u6d4b\u5230\uff0c\u5e76\u5728\u5e55\u540e\u751f\u6210\u4e00\u4e2a\u6216\u591a\u4e2a\u7528\u6237\u9519\u8bef\u6807\u8bb0\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u53eb\u505a glGetError \u7684\u51fd\u6570\u67e5\u8be2\u8fd9\u4e9b\u9519\u8bef\u6807\u8bb0\uff0c\u4ed6\u4f1a\u68c0\u6d4b\u9519\u8bef\u6807\u8bb0\u96c6\uff0c\u5e76\u4e14\u5728OpenGL\u786e\u5b9e\u51fa\u9519\u7684\u65f6\u5019\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u503c\u3002 GLenum glGetError(); \u5f53 glGetError \u88ab\u8c03\u7528\u65f6\uff0c\u5b83\u8981\u4e48\u4f1a\u8fd4\u56de\u9519\u8bef\u6807\u8bb0\u4e4b\u4e00\uff0c\u8981\u4e48\u8fd4\u56de\u65e0\u9519\u8bef\u3002 glGetError \u4f1a\u8fd4\u56de\u7684\u9519\u8bef\u503c\u5982\u4e0b\uff1a \u6807\u8bb0 \u4ee3\u7801 \u63cf\u8ff0 GL_NO_ERROR 0 \u81ea\u4e0a\u6b21\u8c03\u7528 glGetError \u4ee5\u6765\u6ca1\u6709\u9519\u8bef GL_INVALID_ENUM 1280 \u679a\u4e3e\u53c2\u6570\u4e0d\u5408\u6cd5 GL_INVALID_VALUE 1281 \u503c\u53c2\u6570\u4e0d\u5408\u6cd5 GL_INVALID_OPERATION 1282 \u4e00\u4e2a\u6307\u4ee4\u7684\u72b6\u6001\u5bf9\u6307\u4ee4\u7684\u53c2\u6570\u4e0d\u5408\u6cd5 GL_STACK_OVERFLOW 1283 \u538b\u6808\u64cd\u4f5c\u9020\u6210\u6808\u4e0a\u6ea2(Overflow) GL_STACK_UNDERFLOW 1284 \u5f39\u6808\u64cd\u4f5c\u65f6\u6808\u5728\u6700\u4f4e\u70b9\uff08\u8bd1\u6ce8\uff1a\u5373\u6808\u4e0b\u6ea2(Underflow)\uff09 GL_OUT_OF_MEMORY 1285 \u5185\u5b58\u8c03\u7528\u64cd\u4f5c\u65e0\u6cd5\u8c03\u7528\uff08\u8db3\u591f\u7684\uff09\u5185\u5b58 GL_INVALID_FRAMEBUFFER_OPERATION 1286 \u8bfb\u53d6\u6216\u5199\u5165\u4e00\u4e2a\u4e0d\u5b8c\u6574\u7684\u5e27\u7f13\u51b2 \u5728OpenGL\u7684\u51fd\u6570\u6587\u6863\u4e2d\u4f60\u53ef\u4ee5\u627e\u5230\u51fd\u6570\u5728\u9519\u8bef\u65f6\u751f\u6210\u7684\u9519\u8bef\u4ee3\u7801\u3002\u6bd4\u5982\u8bf4\uff0c\u5982\u679c\u4f60\u770b\u4e00\u4e0b glBindTexture \u51fd\u6570\u7684\u6587\u6863\uff0c\u5728 Errors \u90e8\u5206\u4e2d\u4f60\u53ef\u4ee5\u770b\u5230\u5b83\u53ef\u80fd\u751f\u6210\u7684\u6240\u6709\u7528\u6237\u9519\u8bef\u4ee3\u7801\u3002 \u5f53\u4e00\u4e2a\u9519\u8bef\u6807\u8bb0\u88ab\u8fd4\u56de\u7684\u65f6\u5019\uff0c\u5c06\u4e0d\u4f1a\u62a5\u544a\u5176\u5b83\u7684\u9519\u8bef\u6807\u8bb0\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5f53 glGetError \u88ab\u8c03\u7528\u7684\u65f6\u5019\uff0c\u5b83\u4f1a\u6e05\u9664\u6240\u6709\u7684\u9519\u8bef\u6807\u8bb0\uff08\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e0a\u53ea\u4f1a\u6e05\u9664\u4e00\u4e2a\uff0c\u89c1\u4e0b\u9762\u7684\u6ce8\u91ca\uff09\u3002\u8fd9\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u4f60\u5728\u6bcf\u4e00\u5e27\u4e4b\u540e\u8c03\u7528 glGetError \u4e00\u6b21\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\uff0c\u4f46\u4f60\u4e0d\u80fd\u786e\u5b9a\u8fd9\u5c31\u662f\u552f\u4e00\u7684\u9519\u8bef\uff0c\u5e76\u4e14\u9519\u8bef\u7684\u6765\u6e90\u53ef\u80fd\u5728\u8fd9\u4e00\u5e27\u7684\u4efb\u610f\u5730\u65b9\u3002 Important \u6ce8\u610f\u5f53OpenGL\u662f\u5206\u5e03\u5f0f(Distributely)\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u5982\u5728X11\u7cfb\u7edf\u4e0a\uff0c\u5176\u5b83\u7684\u7528\u6237\u9519\u8bef\u4ee3\u7801\u4ecd\u7136\u53ef\u4ee5\u88ab\u751f\u6210\uff0c\u53ea\u8981\u5b83\u4eec\u6709\u7740\u4e0d\u540c\u7684\u9519\u8bef\u4ee3\u7801\u3002\u8c03\u7528 glGetError \u53ea\u4f1a\u91cd\u7f6e\u4e00\u4e2a\u9519\u8bef\u4ee3\u7801\u6807\u8bb0\uff0c\u800c\u4e0d\u662f\u6240\u6709\u3002\u7531\u4e8e\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u5efa\u8bae\u5728\u4e00\u4e2a\u5faa\u73af\u4e2d\u8c03\u7528 glGetError \u3002 glBindTexture(GL_TEXTURE_2D, tex); std::cout << glGetError() << std::endl; // \u8fd4\u56de 0 (\u65e0\u9519\u8bef) glTexImage2D(GL_TEXTURE_3D, 0, GL_RGB, 512, 512, 0, GL_RGB, GL_UNSIGNED_BYTE, data); std::cout << glGetError() << std::endl; // \u8fd4\u56de 1280 (\u975e\u6cd5\u679a\u4e3e) glGenTextures(-5, textures); std::cout << glGetError() << std::endl; // \u8fd4\u56de 1281 (\u975e\u6cd5\u503c) std::cout << glGetError() << std::endl; // \u8fd4\u56de 0 (\u65e0\u9519\u8bef) glGetError \u975e\u5e38\u68d2\u7684\u4e00\u70b9\u5c31\u662f\u5b83\u80fd\u591f\u975e\u5e38\u7b80\u5355\u5730\u5b9a\u4f4d\u9519\u8bef\u53ef\u80fd\u7684\u6765\u6e90\uff0c\u5e76\u4e14\u9a8c\u8bc1OpenGL\u4f7f\u7528\u7684\u6b63\u786e\u6027\u3002\u6bd4\u5982\u8bf4\u4f60\u83b7\u5f97\u4e86\u4e00\u4e2a\u9ed1\u5c4f\u7684\u7ed3\u679c\u4f46\u662f\u4e0d\u77e5\u9053\u4ec0\u4e48\u9020\u6210\u4e86\u5b83\uff1a\u662f\u4e0d\u662f\u5e27\u7f13\u51b2\u8bbe\u7f6e\u9519\u8bef\uff1f\u662f\u4e0d\u662f\u6211\u5fd8\u8bb0\u7ed1\u5b9a\u7eb9\u7406\u4e86\uff1f\u901a\u8fc7\u5728\u6574\u4e2a\u4ee3\u7801\u5e93\u4e2d\u8c03\u7528 glGetError \uff0c\u60a8\u53ef\u4ee5\u5feb\u901f\u6355\u83b7OpenGL\u9519\u8bef\u5f00\u59cb\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u5730\u65b9\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b glGetError \u53ea\u4f1a\u6253\u5370\u9519\u8bef\u6570\u5b57\uff0c\u5982\u679c\u4f60\u4e0d\u53bb\u8bb0\u5fc6\u7684\u8bdd\u4f1a\u975e\u5e38\u96be\u4ee5\u7406\u89e3\u3002\u901a\u5e38\u6211\u4eec\u4f1a\u5199\u4e00\u4e2a\u52a9\u624b\u51fd\u6570\u6765\u7b80\u4fbf\u5730\u6253\u5370\u51fa\u9519\u8bef\u5b57\u7b26\u4e32\u4ee5\u53ca\u9519\u8bef\u68c0\u6d4b\u51fd\u6570\u8c03\u7528\u7684\u4f4d\u7f6e\u3002 GLenum glCheckError_(const char *file, int line) { GLenum errorCode; while ((errorCode = glGetError()) != GL_NO_ERROR) { std::string error; switch (errorCode) { case GL_INVALID_ENUM: error = \"INVALID_ENUM\"; break; case GL_INVALID_VALUE: error = \"INVALID_VALUE\"; break; case GL_INVALID_OPERATION: error = \"INVALID_OPERATION\"; break; case GL_STACK_OVERFLOW: error = \"STACK_OVERFLOW\"; break; case GL_STACK_UNDERFLOW: error = \"STACK_UNDERFLOW\"; break; case GL_OUT_OF_MEMORY: error = \"OUT_OF_MEMORY\"; break; case GL_INVALID_FRAMEBUFFER_OPERATION: error = \"INVALID_FRAMEBUFFER_OPERATION\"; break; } std::cout << error << \" | \" << file << \" (\" << line << \")\" << std::endl; } return errorCode; } #define glCheckError() glCheckError_(__FILE__, __LINE__) \u9632\u6b62\u4f60\u4e0d\u77e5\u9053 __FILE__ \u548c __LINE__ \u8fd9\u4e24\u4e2a\u9884\u5904\u7406\u6307\u4ee4(Preprocessor Directive)\u662f\u4ec0\u4e48\uff0c\u5b83\u4eec\u4f1a\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u88ab\u66ff\u6362\u6210\u7f16\u8bd1\u65f6\u5bf9\u5e94\u7684\u6587\u4ef6\u4e0e\u884c\u53f7\u3002\u5982\u679c\u6211\u4eec\u575a\u6301\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u5927\u91cf glGetError \u7684\u8c03\u7528\uff0c\u8fd9\u5c31\u4f1a\u8ba9\u6211\u4eec\u66f4\u52a0\u51c6\u786e\u5730\u77e5\u9053\u54ea\u4e2a glGetError \u8c03\u7528\u8fd4\u56de\u4e86\u9519\u8bef\uff08\u8bd1\u6ce8\uff1a\u8bb0\u5f97 glGetError \u663e\u793a\u7684\u9519\u8bef\u4f1a\u53d1\u751f\u5728\u8be5\u6b21\u8c03\u7528\u4e0e\u4e0a\u6b21\u8c03\u7528\u4e4b\u95f4\uff0c\u5982\u679c\u95f4\u9694\u592a\u5927\u7684\u8bdd\u9700\u8981\u68c0\u67e5\u7684\u5730\u65b9\u5c31\u592a\u591a\u4e86\uff09\u3002 glBindBuffer(GL_VERTEX_ARRAY, vbo); glCheckError(); \u8fd9\u4f1a\u7ed9\u6211\u4eec\u4ee5\u4e0b\u7684\u8f93\u51fa\uff1a glGetError \u5e76\u4e0d\u80fd\u5e2e\u52a9\u4f60\u5f88\u591a\uff0c\u56e0\u4e3a\u5b83\u8fd4\u56de\u7684\u4fe1\u606f\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u4e0d\u53ef\u5426\u8ba4\u5b83\u7ecf\u5e38\u80fd\u5e2e\u52a9\u4f60\u68c0\u67e5\u7b14\u8bef\u6216\u8005\u5feb\u901f\u5b9a\u4f4d\u9519\u8bef\u6765\u6e90\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u4f46\u6709\u6548\u7684\u5de5\u5177\u3002","title":"glGetError()"},{"location":"06%20In%20Practice/01%20Debugging/#_2","text":"\u867d\u7136\u6ca1\u6709 glGetError \u666e\u904d\uff0c\u4f46\u4e00\u4e2a\u53eb\u505a \u8c03\u8bd5\u8f93\u51fa (Debug Output)\u7684OpenGL\u62d3\u5c55\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u5de5\u5177\uff0c\u5b83\u57284.3\u7248\u672c\u4e4b\u540e\u53d8\u4e3a\u4e86\u6838\u5fc3OpenGL\u7684\u4e00\u90e8\u5206\u3002\u901a\u8fc7\u4f7f\u7528\u8c03\u8bd5\u8f93\u51fa\u62d3\u5c55\uff0cOpenGL\u81ea\u8eab\u4f1a\u76f4\u63a5\u53d1\u9001\u4e00\u4e2a\u6bd4\u8d77 glGetError \u66f4\u4e3a\u5b8c\u5584\u7684\u9519\u8bef\u6216\u8b66\u544a\u4fe1\u606f\u7ed9\u7528\u6237\u3002\u5b83\u4e0d\u4ec5\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u4e5f\u80fd\u591f\u5e2e\u52a9\u4f60\u4f7f\u7528\u8c03\u8bd5\u5668(Debugger)\u6355\u6349\u9519\u8bef\u6e90\u5934\u3002 Important \u8c03\u8bd5\u8f93\u51fa\u81ea4.3\u7248\u672c\u53d8\u4e3a\u6838\u5fc3OpenGL\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u4e5f\u5c31\u662f\u8bf4\u4f60\u53ef\u4ee5\u5728\u4efb\u610f\u8fd0\u884cOpenGL 4.3\u53ca\u4ee5\u4e0a\u7248\u672c\u7684\u673a\u5668\u4e2d\u627e\u5230\u8fd9\u4e00\u529f\u80fd\u3002\u5982\u679cOpenGL\u4f4e\u4e8e\u8fd9\u4e00\u7248\u672c\uff0c\u4f60\u53ef\u4ee5\u53ef\u4ee5\u67e5\u8be2 ARB_debug_output \u6216\u8005 AMD_debug_output \u62d3\u5c55\u6765\u83b7\u53d6\u5b83\u7684\u529f\u80fd\u3002\u6ce8\u610fOS X\u597d\u50cf\u4e0d\u652f\u6301\u8c03\u8bd5\u8f93\u51fa\u529f\u80fd\uff08\u4ece\u7f51\u4e0a\u770b\u5230\u7684\uff0c\u6211\u6682\u65f6\u8fd8\u6ca1\u6709\u6d4b\u8bd5\u3002\u5982\u679c\u6211\u9519\u4e86\u8bf7\u544a\u8bc9\u6211\u4e00\u4e0b\uff09 \u8981\u60f3\u5f00\u59cb\u4f7f\u7528\u8c03\u8bd5\u8f93\u51fa\uff0c\u6211\u4eec\u5148\u8981\u5728\u521d\u59cb\u5316\u8fdb\u7a0b\u4e2d\u4eceOpenGL\u8bf7\u6c42\u4e00\u4e2a\u8c03\u8bd5\u8f93\u51fa\u4e0a\u4e0b\u6587\u3002\u8fd9\u4e2a\u8fdb\u7a0b\u6839\u636e\u4f60\u7684\u7a97\u53e3\u7cfb\u7edf\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u8fd9\u91cc\u6211\u4eec\u53ea\u4f1a\u8ba8\u8bba\u5728GLFW\u4e2d\u914d\u7f6e\uff0c\u4f46\u4f60\u53ef\u4ee5\u5728\u6559\u7a0b\u6700\u540e\u7684\u9644\u52a0\u8d44\u6e90\u5904\u627e\u5230\u5176\u5b83\u7cfb\u7edf\u7684\u76f8\u5173\u8d44\u6599\u3002","title":"\u8c03\u8bd5\u8f93\u51fa"},{"location":"06%20In%20Practice/01%20Debugging/#glfw","text":"\u5728GLFW\u4e2d\u8bf7\u6c42\u4e00\u4e2a\u8c03\u8bd5\u8f93\u51fa\u975e\u5e38\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4f20\u9012\u4e00\u4e2a\u63d0\u9192\u5230GLFW\u4e2d\uff0c\u544a\u8bc9\u5b83\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u8c03\u8bd5\u8f93\u51fa\u4e0a\u4e0b\u6587\u5373\u53ef\u3002\u6211\u4eec\u9700\u8981\u5728\u8c03\u7528 glfwCreateWindow \u4e4b\u524d\u5b8c\u6210\u8fd9\u4e00\u8bf7\u6c42\u3002 glfwWindowHint(GLFW_OPENGL_DEBUG_CONTEXT, true); \u4e00\u65e6GLFW\u521d\u59cb\u5316\u5b8c\u6210\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u7684OpenGL \u7248\u672c\u4e3a4.3\u6216\u4ee5\u4e0a\u7684\u8bdd\u6211\u4eec\u5c31\u6709\u4e00\u4e2a\u8c03\u8bd5\u4e0a\u4e0b\u6587\u4e86\uff0c\u5982\u679c\u4e0d\u662f\u7684\u8bdd\u5219\u7948\u7977\u7cfb\u7edf\u4ecd\u7136\u80fd\u591f\u8bf7\u6c42\u4e00\u4e2a\u8c03\u8bd5\u4e0a\u4e0b\u6587\u5427\u3002\u5982\u679c\u8fd8\u662f\u4e0d\u884c\u7684\u8bdd\u6211\u4eec\u5fc5\u987b\u4f7f\u7528\u5b83\u7684OpenGL\u62d3\u5c55\u6765\u8bf7\u6c42\u8c03\u8bd5\u8f93\u51fa\u3002 Important \u5728\u8c03\u8bd5\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528OpenGL\u4f1a\u660e\u663e\u66f4\u7f13\u6162\u4e00\u70b9\uff0c\u6240\u4ee5\u5f53\u4f60\u5728\u4f18\u5316\u6216\u8005\u53d1\u5e03\u7a0b\u5e8f\u4e4b\u524d\u8bf7\u5c06\u8fd9\u4e00GLFW\u8c03\u8bd5\u8bf7\u6c42\u7ed9\u6ce8\u91ca\u6389\u3002 \u8981\u68c0\u67e5\u6211\u4eec\u662f\u5426\u6210\u529f\u5730\u521d\u59cb\u5316\u4e86\u8c03\u8bd5\u4e0a\u4e0b\u6587\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9OpenGL\u8fdb\u884c\u67e5\u8be2\uff1a GLint flags; glGetIntegerv(GL_CONTEXT_FLAGS, &flags); if (flags & GL_CONTEXT_FLAG_DEBUG_BIT) { // \u521d\u59cb\u5316\u8c03\u8bd5\u8f93\u51fa } \u8c03\u8bd5\u8f93\u51fa\u5de5\u4f5c\u7684\u65b9\u5f0f\u662f\u8fd9\u6837\u7684\uff0c\u6211\u4eec\u9996\u5148\u5c06\u4e00\u4e2a\u9519\u8bef\u8bb0\u5f55\u51fd\u6570\u7684\u56de\u8c03\uff08\u7c7b\u4f3c\u4e8eGLFW\u8f93\u5165\u7684\u56de\u8c03\uff09\u4f20\u9012\u7ed9OpenGL\uff0c\u5728\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\u4e2d\u6211\u4eec\u53ef\u4ee5\u81ea\u7531\u5730\u5904\u7406OpenGL\u9519\u8bef\u6570\u636e\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u5c06\u8f93\u51fa\u4e00\u4e9b\u6709\u7528\u7684\u9519\u8bef\u6570\u636e\u5230\u63a7\u5236\u53f0\u4e2d\u3002\u4e0b\u9762\u662f\u8fd9\u4e2a\u5c31\u662fOpenGL\u5bf9\u8c03\u8bd5\u8f93\u51fa\u6240\u671f\u5f85\u7684\u56de\u8c03\u51fd\u6570\u7684\u539f\u578b\uff1a void APIENTRY glDebugOutput(GLenum source, GLenum type, unsigned int id, GLenum severity, GLsizei length, const char *message, const void *userParam); \u6709\u4e86\u8fd9\u4e00\u5927\u5806\u7684\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u9519\u8bef\u6253\u5370\u5de5\u5177\uff1a void APIENTRY glDebugOutput(GLenum source, GLenum type, unsigned int id, GLenum severity, GLsizei length, const char *message, void *userParam) { // \u5ffd\u7565\u4e00\u4e9b\u4e0d\u91cd\u8981\u7684\u9519\u8bef/\u8b66\u544a\u4ee3\u7801 if(id == 131169 || id == 131185 || id == 131218 || id == 131204) return; std::cout << \"---------------\" << std::endl; std::cout << \"Debug message (\" << id << \"): \" << message << std::endl; switch (source) { case GL_DEBUG_SOURCE_API: std::cout << \"Source: API\"; break; case GL_DEBUG_SOURCE_WINDOW_SYSTEM: std::cout << \"Source: Window System\"; break; case GL_DEBUG_SOURCE_SHADER_COMPILER: std::cout << \"Source: Shader Compiler\"; break; case GL_DEBUG_SOURCE_THIRD_PARTY: std::cout << \"Source: Third Party\"; break; case GL_DEBUG_SOURCE_APPLICATION: std::cout << \"Source: Application\"; break; case GL_DEBUG_SOURCE_OTHER: std::cout << \"Source: Other\"; break; } std::cout << std::endl; switch (type) { case GL_DEBUG_TYPE_ERROR: std::cout << \"Type: Error\"; break; case GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR: std::cout << \"Type: Deprecated Behaviour\"; break; case GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR: std::cout << \"Type: Undefined Behaviour\"; break; case GL_DEBUG_TYPE_PORTABILITY: std::cout << \"Type: Portability\"; break; case GL_DEBUG_TYPE_PERFORMANCE: std::cout << \"Type: Performance\"; break; case GL_DEBUG_TYPE_MARKER: std::cout << \"Type: Marker\"; break; case GL_DEBUG_TYPE_PUSH_GROUP: std::cout << \"Type: Push Group\"; break; case GL_DEBUG_TYPE_POP_GROUP: std::cout << \"Type: Pop Group\"; break; case GL_DEBUG_TYPE_OTHER: std::cout << \"Type: Other\"; break; } std::cout << std::endl; switch (severity) { case GL_DEBUG_SEVERITY_HIGH: std::cout << \"Severity: high\"; break; case GL_DEBUG_SEVERITY_MEDIUM: std::cout << \"Severity: medium\"; break; case GL_DEBUG_SEVERITY_LOW: std::cout << \"Severity: low\"; break; case GL_DEBUG_SEVERITY_NOTIFICATION: std::cout << \"Severity: notification\"; break; } std::cout << std::endl; std::cout << std::endl; } \u5f53\u8c03\u8bd5\u8f93\u51fa\u68c0\u6d4b\u5230\u4e86\u4e00\u4e2aOpenGL\u9519\u8bef\uff0c\u5b83\u4f1a\u8c03\u7528\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u6211\u4eec\u5c06\u53ef\u4ee5\u6253\u5370\u51fa\u975e\u5e38\u591a\u7684OpenGL\u9519\u8bef\u4fe1\u606f\u3002\u6ce8\u610f\u6211\u4eec\u5ffd\u7565\u6389\u4e86\u4e00\u4e9b\u9519\u8bef\u4ee3\u7801\uff0c\u8fd9\u4e9b\u9519\u8bef\u4ee3\u7801\u4e00\u822c\u4e0d\u80fd\u7ed9\u6211\u4eec\u4efb\u4f55\u6709\u7528\u7684\u4fe1\u606f\uff08\u6bd4\u5982NVidia\u9a71\u52a8\u4e2d\u7684 131185 \u4ec5\u544a\u8bc9\u6211\u4eec\u7f13\u51b2\u6210\u529f\u521b\u5efa\u4e86\uff09\u3002 \u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u56de\u8c03\u51fd\u6570\uff0c\u90a3\u4e48\u662f\u65f6\u5019\u521d\u59cb\u5316\u8c03\u8bd5\u8f93\u51fa\u4e86\uff1a if (flags & GL_CONTEXT_FLAG_DEBUG_BIT) { glEnable(GL_DEBUG_OUTPUT); glEnable(GL_DEBUG_OUTPUT_SYNCHRONOUS); glDebugMessageCallback(glDebugOutput, nullptr); glDebugMessageControl(GL_DONT_CARE, GL_DONT_CARE, GL_DONT_CARE, 0, nullptr, GL_TRUE); } \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u544a\u8bc9OpenGL\u542f\u7528\u8c03\u8bd5\u8f93\u51fa\uff0c\u8c03\u7528 glEnable(GL_DEBUG_SYNCRHONOUS) \u544a\u8bc9OpenGL\u5728\u53d1\u751f\u9519\u8bef\u65f6\u76f4\u63a5\u8c03\u7528\u56de\u8c03\u51fd\u6570\u3002","title":"GLFW\u4e2d\u7684\u8c03\u8bd5\u8f93\u51fa"},{"location":"06%20In%20Practice/01%20Debugging/#_3","text":"\u6709\u4e86 glDebugMessageControl \uff0c\u4f60\u53ef\u4ee5\u6f5c\u5728\u5730\u8fc7\u6ee4\u51fa\u4f60\u9700\u8981\u7684\u9519\u8bef\u7c7b\u578b\u3002\u5728\u8fd9\u91cc\u6211\u4eec\u4e0d\u6253\u7b97\u8fc7\u6ee4\u4efb\u4f55\u6765\u6e90\uff0c\u7c7b\u578b\u6216\u8005\u4e25\u91cd\u7b49\u7ea7\u3002\u5982\u679c\u6211\u4eec\u4ec5\u5e0c\u671b\u663e\u793aOpenGL API\u7684\u9ad8\u4e25\u91cd\u7b49\u7ea7\u9519\u8bef\u6d88\u606f\uff0c\u4f60\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u4ee5\u4e0b\u8fd9\u6837\uff1a glDebugMessageControl(GL_DEBUG_SOURCE_API, GL_DEBUG_TYPE_ERROR, GL_DEBUG_SEVERITY_HIGH, 0, nullptr, GL_TRUE); \u6709\u4e86\u6211\u4eec\u7684\u914d\u7f6e\uff0c\u5982\u679c\u4f60\u7684\u4e0a\u4e0b\u6587\u652f\u6301\u8c03\u8bd5\u8f93\u51fa\u7684\u8bdd\uff0c\u6bcf\u4e2a\u4e0d\u6b63\u786e\u7684OpenGL\u6307\u4ee4\u90fd\u4f1a\u6253\u5370\u51fa\u4e00\u5927\u5806\u7684\u6709\u7528\u6570\u636e\u3002","title":"\u8fc7\u6ee4\u8c03\u8bd5\u8f93\u51fa"},{"location":"06%20In%20Practice/01%20Debugging/#_4","text":"\u4f7f\u7528\u8c03\u8bd5\u8f93\u51fa\u53e6\u4e00\u4e2a\u5f88\u68d2\u7684\u6280\u5de7\u5c31\u662f\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u627e\u51fa\u9519\u8bef\u53d1\u751f\u7684\u51c6\u786e\u884c\u53f7\u6216\u8005\u8c03\u7528\u3002\u901a\u8fc7\u5728 DebugOutput \u4e2d\u7279\u5b9a\u7684\u9519\u8bef\u7c7b\u578b\u4e0a\uff08\u6216\u8005\u5728\u51fd\u6570\u7684\u9876\u90e8\uff0c\u5982\u679c\u4f60\u4e0d\u5173\u5fc3\u7c7b\u578b\u7684\u8bdd\uff09\u8bbe\u7f6e\u4e00\u4e2a\u65ad\u70b9\uff0c\u8c03\u8bd5\u5668\u5c06\u4f1a\u6355\u6349\u5230\u629b\u51fa\u7684\u9519\u8bef\uff0c\u4f60\u53ef\u4ee5\u5f80\u4e0a\u67e5\u627e\u8c03\u7528\u6808\u76f4\u5230\u627e\u5230\u6d88\u606f\u53d1\u51fa\u7684\u6e90\u5934\u3002 \u8fd9\u9700\u8981\u4e00\u4e9b\u624b\u52a8\u64cd\u4f5c\uff0c\u4f46\u5982\u679c\u4f60\u5927\u81f4\u77e5\u9053\u4f60\u5728\u5bfb\u627e\u4ec0\u4e48\uff0c\u8fd9\u4f1a\u975e\u5e38\u6709\u7528\uff0c\u80fd\u591f\u5e2e\u52a9\u4f60\u5feb\u901f\u5b9a\u4f4d\u9519\u8bef\u3002","title":"\u56de\u6eaf\u8c03\u8bd5\u9519\u8bef\u6e90"},{"location":"06%20In%20Practice/01%20Debugging/#_5","text":"\u9664\u4e86\u4ec5\u4ec5\u662f\u9605\u8bfb\u4fe1\u606f\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 glDebugMessageInsert \u5c06\u4fe1\u606f\u63a8\u9001\u5230\u8c03\u8bd5\u8f93\u51fa\u7cfb\u7edf\uff1a glDebugMessageInsert(GL_DEBUG_SOURCE_APPLICATION, GL_DEBUG_TYPE_ERROR, 0, GL_DEBUG_SEVERITY_MEDIUM, -1, \"error message here\"); \u5982\u679c\u4f60\u6b63\u5728\u5229\u7528\u5176\u5b83\u4f7f\u7528\u8c03\u8bd5\u8f93\u51fa\u4e0a\u4e0b\u6587\u7684\u7a0b\u5e8f\u6216OpenGL\u4ee3\u7801\u8fdb\u884c\u5f00\u53d1\uff0c\u8fd9\u4f1a\u975e\u5e38\u6709\u7528\u3002\u5176\u5b83\u7684\u5f00\u53d1\u8005\u80fd\u5feb\u901f\u4e86\u89e3\u4f60\u81ea\u5b9a\u4e49OpenGL\u4ee3\u7801\u4e2d\u4efb\u4f55 \u62a5\u544a\u51fa\u6765\u7684 Bug\u3002 \u603b\u800c\u8a00\u4e4b\uff0c\u8c03\u8bd5\u8f93\u51fa\uff08\u5982\u679c\u4f60\u80fd\u4f7f\u7528\u5b83\uff09\u5bf9\u4e0e\u5feb\u901f\u6355\u6349\u9519\u8bef\u662f\u975e\u5e38\u6709\u7528\u7684\uff0c\u5b8c\u5168\u503c\u5f97\u4f60\u82b1\u4e00\u70b9\u65f6\u95f4\u6765\u914d\u7f6e\uff0c\u5b83\u80fd\u591f\u7701\u4e0b\u4f60\u975e\u5e38\u591a\u7684\u5f00\u53d1\u65f6\u95f4\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u6e90\u7801\uff0c\u91cc\u9762 glGetError \u548c\u8c03\u8bd5\u8f93\u51fa\u4e0a\u4e0b\u6587\u90fd\u6709\u914d\u7f6e\uff1b\u770b\u770b\u4f60\u662f\u5426\u80fd\u591f\u4fee\u590d\u6240\u6709\u7684\u9519\u8bef\u3002","title":"\u81ea\u5b9a\u4e49\u9519\u8bef\u8f93\u51fa"},{"location":"06%20In%20Practice/01%20Debugging/#_6","text":"\u5bf9\u4e8eGLSL\u6765\u8bf4\uff0c\u6211\u4eec\u4e0d\u80fd\u8bbf\u95ee\u50cf\u662f glGetError \u8fd9\u6837\u7684\u51fd\u6570\uff0c\u4e5f\u4e0d\u80fd\u901a\u8fc7\u6b65\u8fdb\u7684\u65b9\u5f0f\u8fd0\u884c\u7740\u8272\u5668\u4ee3\u7801\u3002\u5982\u679c\u4f60\u5f97\u5230\u4e00\u4e2a\u9ed1\u5c4f\u6216\u8005\u5b8c\u5168\u9519\u8bef\u7684\u89c6\u89c9\u6548\u679c\uff0c\u901a\u5e38\u60f3\u8981\u77e5\u9053\u7740\u8272\u5668\u4ee3\u7801\u662f\u5426\u6709\u8bef\u4f1a\u975e\u5e38\u56f0\u96be\u3002\u662f\u7684\uff0c\u6211\u4eec\u662f\u6709\u7f16\u8bd1\u9519\u8bef\u62a5\u544a\u6765\u62a5\u544a\u8bed\u6cd5\u9519\u8bef\uff0c\u4f46\u662f\u6355\u6349\u8bed\u4e49\u9519\u8bef\u53c8\u662f\u4e00\u5927\u96be\u9898\u3002 \u4e00\u4e2a\u7ecf\u5e38\u4f7f\u7528\u7684\u6280\u5de7\u5c31\u662f\u5c06\u7740\u8272\u5668\u7a0b\u5e8f\u4e2d\u6240\u6709\u76f8\u5173\u7684\u53d8\u91cf\u76f4\u63a5\u53d1\u9001\u5230\u7247\u6bb5\u7740\u8272\u5668\u7684\u8f93\u51fa\u901a\u9053\uff0c\u4ee5\u8bc4\u4f30\u5b83\u4eec\u3002\u901a\u8fc7\u76f4\u63a5\u8f93\u51fa\u7740\u8272\u5668\u53d8\u91cf\u5230\u8f93\u51fa\u989c\u8272\u901a\u9053\uff0c\u6211\u4eec\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u89c2\u5bdf\u89c6\u89c9\u7ed3\u679c\u6765\u83b7\u53d6\u6709\u7528\u7684\u4fe1\u606f\u3002\u6bd4\u5982\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u68c0\u67e5\u4e00\u4e2a\u6a21\u578b\u7684\u6cd5\u5411\u91cf\u662f\u5426\u6b63\u786e\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u4eec\uff08\u53ef\u4ee5\u662f\u53d8\u6362\u8fc7\u7684\u4e5f\u53ef\u4ee5\u662f\u6ca1\u6709\u53d8\u6362\u8fc7\u7684\uff09\u4ece\u9876\u70b9\u7740\u8272\u5668\u4f20\u9012\u5230\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u6211\u4eec\u4f1a\u7528\u4ee5\u4e0b\u8fd9\u79cd\u65b9\u5f0f\u8f93\u51fa\u6cd5\u5411\u91cf\uff1a #version 330 core out vec4 FragColor; in vec3 Normal; [...] void main() { [...] FragColor.rgb = Normal; FragColor.a = 1.0f; } \u901a\u8fc7\u8f93\u51fa\u4e00\u4e2a\uff08\u975e\u989c\u8272\uff09\u53d8\u91cf\u5230\u8fd9\u6837\u5b50\u7684\u8f93\u51fa\u989c\u8272\u901a\u9053\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u5ba1\u67e5\u53d8\u91cf\u662f\u5426\u663e\u793a\u7740\u6b63\u786e\u7684\u503c\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5982\u679c\u6700\u540e\u7684\u89c6\u89c9\u6548\u679c\u5b8c\u5168\u662f\u9ed1\u8272\u7684\uff0c\u5219\u5f88\u6e05\u695a\u8868\u660e\u6cd5\u5411\u91cf\u6ca1\u6709\u6b63\u786e\u5730\u4f20\u9012\u81f3\u7740\u8272\u5668\u4e2d\u3002\u5f53\u5b83\u4eec\u90fd\u663e\u793a\u51fa\u6765\u7684\u65f6\u5019\uff0c\u68c0\u67e5\u5b83\u4eec\uff08\u5927\u6982\uff09\u6b63\u786e\u4e0e\u5426\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u7b80\u5355\u3002 \u4ece\u89c6\u89c9\u6548\u679c\u6765\u770b\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u89c1\u4e16\u754c\u7a7a\u95f4\u7684\u6cd5\u5411\u91cf\u5e94\u8be5\u662f\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u80cc\u5305\u6a21\u578b\u7684\u53f3\u4fa7\u5927\u90e8\u5206\u90fd\u662f\u7ea2\u8272\u7684\uff08\u8fd9\u8868\u660e\u6cd5\u7ebf\u5927\u6982\uff08\u6b63\u786e\u5730\uff09\u6307\u5411\u6b63x\u8f74\uff09\uff0c\u540c\u6837\u7684\uff0c\u80cc\u5305\u7684\u524d\u65b9\u5927\u90e8\u5206\u90fd\u4e3a\u84dd\u8272\uff0c\u5373\u6b63z\u8f74\u65b9\u5411\u3002 \u8fd9\u4e00\u65b9\u6cd5\u53ef\u4ee5\u5f88\u5bb9\u6613\u62d3\u5c55\u5230\u4f60\u60f3\u8981\u6d4b\u8bd5\u7684\u4efb\u4f55\u53d8\u91cf\u3002\u4e00\u65e6\u4f60\u5361\u4f4f\u4e86\u6216\u8005\u6000\u7591\u4f60\u7684\u7740\u8272\u5668\u6709\u95ee\u9898\uff0c\u5c1d\u8bd5\u663e\u793a\u591a\u4e2a\u53d8\u91cf\u548c/\u6216\u4e2d\u95f4\u7ed3\u679c\uff0c\u770b\u770b\u54ea\u90e8\u5206\u7b97\u6cd5\u4ec0\u4e48\u7684\u6ca1\u52a0\u4e0a\u6216\u8005\u6709\u9519\u8bef\u3002","title":"\u8c03\u8bd5\u7740\u8272\u5668\u8f93\u51fa"},{"location":"06%20In%20Practice/01%20Debugging/#opengl-glsl","text":"\u6bcf\u4e00\u4e2a\u9a71\u52a8\u90fd\u6709\u5b83\u81ea\u5df1\u7684\u602a\u7656\u3002\u6bd4\u5982\u8bf4NVIDIA\u9a71\u52a8\u4f1a\u66f4\u5bbd\u5bb9\u4e00\u70b9\uff0c\u901a\u5e38\u4f1a\u5ffd\u7565\u4e00\u4e9b\u9650\u5236\u6216\u8005\u89c4\u8303\uff0c\u800cATI/AMD\u9a71\u52a8\u5219\u901a\u5e38\u4f1a\u4e25\u683c\u6267\u884cOpenGL\u89c4\u8303\uff08\u5728\u6211\u770b\u6765\u4f1a\u66f4\u597d\u4e00\u70b9\uff09\u3002\u95ee\u9898\u662f\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u7684\u7740\u8272\u5668\u5230\u53e6\u4e00\u53f0\u673a\u5668\u4e0a\u53ef\u80fd\u5c31\u7531\u4e8e\u9a71\u52a8\u5dee\u5f02\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\u4e86\u3002 \u901a\u8fc7\u591a\u5e74\u7684\u7ecf\u9a8c\u4f60\u4f1a\u6700\u7ec8\u80fd\u591f\u77e5\u9053\u4e0d\u540cGPU\u4f9b\u5e94\u5546\u4e4b\u95f4\u7684\u7ec6\u5fae\u5dee\u522b\uff0c\u4f46\u5982\u679c\u4f60\u60f3\u8981\u4fdd\u8bc1\u4f60\u7684\u7740\u8272\u5668\u4ee3\u7801\u5728\u6240\u6709\u7684\u673a\u5668\u4e0a\u90fd\u80fd\u8fd0\u884c\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u5bf9\u7740\u5b98\u65b9\u7684\u6807\u51c6\u4f7f\u7528OpenGL\u7684GLSL \u53c2\u8003\u7f16\u8bd1\u5668 \uff08Reference Compiler\uff09\u6765\u68c0\u67e5\u3002\u4f60\u53ef\u4ee5\u4ece \u8fd9\u91cc \u4e0b\u8f7d\u6240\u8c13\u7684 GLSL\u8bed\u8a00\u6821\u9a8c\u5668 (GLSL Lang Validator)\u7684\u53ef\u6267\u884c\u7248\u672c\uff0c\u6216\u8005\u4ece \u8fd9\u91cc \u627e\u5230\u5b8c\u6574\u7684\u6e90\u7801\u3002 \u6709\u4e86\u8fd9\u4e2aGLSL\u8bed\u8a00\u6821\u9a8c\u5668\uff0c\u4f60\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u68c0\u67e5\u4f60\u7684\u7740\u8272\u5668\u4ee3\u7801\uff0c\u53ea\u9700\u8981\u628a\u7740\u8272\u5668\u6587\u4ef6\u4f5c\u4e3a\u7a0b\u5e8f\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5373\u53ef\u3002\u6ce8\u610fGLSL\u8bed\u8a00\u6821\u9a8c\u5668\u662f\u901a\u8fc7\u4e0b\u5217\u56fa\u5b9a\u7684\u540e\u7f00\u540d\u6765\u51b3\u5b9a\u7740\u8272\u5668\u7684\u7c7b\u578b\u7684\uff1a .vert \uff1a\u9876\u70b9\u7740\u8272\u5668(Vertex Shader) .frag \uff1a\u7247\u6bb5\u7740\u8272\u5668(Fragment Shader) .geom \uff1a\u51e0\u4f55\u7740\u8272\u5668(Geometry Shader) .tesc \uff1a\u7ec6\u5206\u63a7\u5236\u7740\u8272\u5668(Tessellation Control Shader) .tese \uff1a\u7ec6\u5206\u8ba1\u7b97\u7740\u8272\u5668(Tessellation Evaluation Shader) .comp \uff1a\u8ba1\u7b97\u7740\u8272\u5668(Compute Shader) \u8fd0\u884cGLSL\u53c2\u8003\u7f16\u8bd1\u5668\u975e\u5e38\u7b80\u5355\uff1a glsllangvalidator shaderFile.vert \u6ce8\u610f\u5982\u679c\u6ca1\u6709\u68c0\u6d4b\u5230\u9519\u8bef\u7684\u8bdd\u5219\u6ca1\u6709\u8f93\u51fa\u3002\u5bf9\u4e00\u4e2a\u4e0d\u6b63\u786e\u7684\u9876\u70b9\u7740\u8272\u5668\u4f7f\u7528GLSL\u53c2\u8003\u7f16\u8bd1\u5668\u8fdb\u884c\u6d4b\u8bd5\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u7ed3\u679c\uff1a \u5b83\u4e0d\u4f1a\u663e\u793aAMD\uff0cNVidia\uff0c\u4ee5\u53caIntel\u7684GLSL\u7f16\u8bd1\u5668\u4e4b\u95f4\u7684\u7ec6\u5fae\u5dee\u522b\uff0c\u4e5f\u4e0d\u80fd\u4fdd\u8bc1\u4f60\u7684\u7740\u8272\u5668\u5b8c\u5168\u6ca1\u6709Bug\uff0c\u4f46\u5b83\u81f3\u5c11\u80fd\u591f\u5e2e\u4f60\u5bf9\u7740\u76f4\u63a5\u7684GLSL\u89c4\u8303\u8fdb\u884c\u68c0\u67e5\u3002","title":"OpenGL GLSL\u53c2\u8003\u7f16\u8bd1\u5668"},{"location":"06%20In%20Practice/01%20Debugging/#_7","text":"\u4f60\u7684\u8c03\u8bd5\u5de5\u5177\u7bb1\u4e2d\u53e6\u5916\u4e00\u4e2a\u6280\u5de7\u5c31\u662f\u5728OpenGL\u7a0b\u5e8f\u4e2d\u4e00\u5757\u7279\u5b9a\u533a\u57df\u663e\u793a\u5e27\u7f13\u51b2\u7684\u5185\u5bb9\u3002\u4f60\u53ef\u80fd\u4f1a\u6bd4\u8f83\u9891\u7e41\u5730\u4f7f\u7528 \u5e27\u7f13\u51b2 \uff0c\u4f46\u7531\u4e8e\u5e27\u7f13\u51b2\u7684\u64cd\u4f5c\u901a\u5e38\u5728\u540e\u53f0\u8fdb\u884c\uff0c\u6709\u65f6\u5019\u60f3\u8981\u77e5\u9053\u51fa\u4ec0\u4e48\u95ee\u9898\u4f1a\u975e\u5e38\u56f0\u96be\u3002\u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\u663e\u793a\u5e27\u7f13\u51b2\u7684\u5185\u5bb9\u662f\u4e00\u4e2a\u5f88\u6709\u7528\u7684\u6280\u5de7\uff0c\u5e2e\u52a9\u4f60\u5feb\u901f\u68c0\u67e5\u9519\u8bef\u3002 Important \u6ce8\u610f\uff0c\u8fd9\u91cc\u8ba8\u8bba\u7684\u5e27\u7f13\u51b2\u663e\u793a\u5185\u5bb9\uff08\u9644\u4ef6\uff09\u4ec5\u80fd\u5728\u7eb9\u7406\u9644\u4ef6\u4e0a\u4f7f\u7528\uff0c\u800c\u4e0d\u80fd\u5e94\u7528\u4e8e\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u3002 \u901a\u8fc7\u4f7f\u7528\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u663e\u793a\u7eb9\u7406\u7684\u7740\u8272\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u4e00\u4e2a\u52a9\u624b\u51fd\u6570\u5feb\u901f\u5728\u5c4f\u5e55\u53f3\u4e0a\u89d2\u663e\u793a\u4efb\u4f55\u7eb9\u7406\u3002 // \u9876\u70b9\u7740\u8272\u5668 #version 330 core layout (location = 0) in vec2 position; layout (location = 1) in vec2 texCoords; out vec2 TexCoords; void main() { gl_Position = vec4(position, 0.0f, 1.0f); TexCoords = texCoords; } // \u7247\u6bb5\u7740\u8272\u5668 #version 330 core out vec4 FragColor; in vec2 TexCoords; uniform sampler2D fboAttachment; void main() { FragColor = texture(fboAttachment, TexCoords); } void DisplayFramebufferTexture(GLuint textureID) { if(!notInitialized) { // \u5728\u5c4f\u5e55\u53f3\u4e0a\u89d2\uff0c\u4f7f\u7528NDC\u9876\u70b9\u5750\u6807\u521d\u59cb\u5316\u7740\u8272\u5668\u548cVAO [...] } glActiveTexture(GL_TEXTURE0); glUseProgram(shaderDisplayFBOOutput); glBindTexture(GL_TEXTURE_2D, textureID); glBindVertexArray(vaoDebugTexturedRect); glDrawArrays(GL_TRIANGLES, 0, 6); glBindVertexArray(0); glUseProgram(0); } int main() { [...] while (!glfwWindowShouldClose(window)) { [...] DisplayFramebufferTexture(fboAttachment0); glfwSwapBuffers(window); } } \u8fd9\u5c06\u5728\u5c4f\u5e55\u53f3\u4e0a\u89d2\u7ed9\u4f60\u4e00\u4e2a\u5c0f\u7a97\u53e3\uff0c\u7528\u6765\u8c03\u8bd5\u5e27\u7f13\u51b2\u7684\u8f93\u51fa\u3002\u6bd4\u5982\u4f60\u60f3\u8981\u68c0\u67e5\u5ef6\u8fdf\u6e32\u67d3\u5668\u7684\u51e0\u4f55\u6e32\u67d3\u9636\u6bb5\u4e2d\u7684\u6cd5\u5411\u91cf\u662f\u5426\u6b63\u786e\uff0c\u4f7f\u7528\u8fd9\u4e2a\u4f1a\u975e\u5e38\u65b9\u4fbf\uff1a \u4f60\u5f53\u7136\u53ef\u4ee5\u62d3\u5c55\u8fd9\u4e2a\u51fd\u6570\u4ee5\u652f\u6301\u6e32\u67d3\u66f4\u591a\u7684\u7eb9\u7406\u3002\u8fd9\u4e2a\u65b9\u6cd5\u80fd\u591f\u975e\u5e38\u5feb\u901f\u5730\u8ba9\u4f60\u5bf9\u5e27\u7f13\u51b2\u5185\u5bb9\u6709\u7740\u6301\u7eed\u7684\u53cd\u9988\u3002","title":"\u5e27\u7f13\u51b2\u8f93\u51fa"},{"location":"06%20In%20Practice/01%20Debugging/#_8","text":"\u5f53\u4e0a\u9762\u6240\u6709\u4ecb\u7ecd\u5230\u7684\u6280\u5de7\u90fd\u4e0d\u80fd\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4ecd\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u7b2c\u4e09\u65b9\u7684\u5de5\u5177\u6765\u5e2e\u52a9\u6211\u4eec\u8c03\u8bd5\u3002\u7b2c\u4e09\u65b9\u5e94\u7528\u901a\u5e38\u5c06\u5b83\u4eec\u81ea\u5df1\u6ce8\u5165\u5230OpenGL\u9a71\u52a8\u4e2d\uff0c\u5e76\u4e14\u80fd\u591f\u62e6\u622a\u5404\u79cdOpenGL\u8c03\u7528\uff0c\u7ed9\u4f60\u5927\u91cf\u6709\u7528\u7684\u6570\u636e\u3002\u8fd9\u4e9b\u5de5\u5177\u53ef\u4ee5\u5728\u5f88\u591a\u65b9\u9762\u5e2e\u52a9\u5230\u4f60\uff1a\u5bf9OpenGL\u51fd\u6570\u4f7f\u7528\u8fdb\u884c\u6027\u80fd\u6d4b\u8bd5\uff0c\u5bfb\u627e\u74f6\u9888\uff0c\u68c0\u67e5\u7f13\u51b2\u5185\u5b58\uff0c\u663e\u793a\u7eb9\u7406\u548c\u5e27\u7f13\u51b2\u9644\u4ef6\u3002\u5982\u679c\u4f60\u6b63\u5728\u5199\uff08\u5927\u89c4\u6a21\uff09\u4ea7\u54c1\u4ee3\u7801\uff0c\u8fd9\u7c7b\u7684\u5de5\u5177\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u662f\u975e\u5e38\u6709\u7528\u7684\u3002 \u6211\u5728\u4e0b\u9762\u5217\u51fa\u4e86\u4e00\u4e9b\u6d41\u884c\u7684\u8c03\u8bd5\u5de5\u5177\uff0c\u9009\u51e0\u4e2a\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u770b\u770b\u54ea\u4e2a\u6700\u9002\u5408\u4f60\u3002","title":"\u5916\u90e8\u8c03\u8bd5\u8f6f\u4ef6"},{"location":"06%20In%20Practice/01%20Debugging/#renderdoc","text":"RenderDoc\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\uff08\u5b8c\u5168 \u5f00\u6e90 \u7684\uff09\u72ec\u7acb\u8c03\u8bd5\u5de5\u5177\u3002\u4f60\u53ea\u9700\u8981\u8bbe\u7f6e\u6355\u6349\u7684\u7a0b\u5e8f\u4ee5\u53ca\u5de5\u4f5c\u76ee\u5f55\u5c31\u884c\u4e86\u3002\u4f60\u7684\u7a0b\u5e8f\u4f1a\u6b63\u5e38\u8fd0\u884c\uff0c\u5f53\u4f60\u60f3\u8981\u68c0\u67e5\u4e00\u4e2a\u7279\u5b9a\u7684\u5e27\u7684\u65f6\u5019\uff0c\u4f60\u53ea\u9700\u8981\u8ba9RenderDoc\u5728\u7a0b\u5e8f\u5f53\u524d\u72b6\u6001\u4e0b\u6355\u6349\u4e00\u4e2a\u6216\u591a\u4e2a\u5e27\u5373\u53ef\u3002\u5728\u6355\u6349\u7684\u5e27\u5f53\u4e2d\uff0c\u4f60\u53ef\u4ee5\u89c2\u5bdf\u7ba1\u7ebf\u72b6\u6001\uff0c\u6240\u6709OpenGL\u6307\u4ee4\uff0c\u7f13\u51b2\u50a8\u5b58\uff0c\u4ee5\u53ca\u4f7f\u7528\u7684\u7eb9\u7406\u3002","title":"RenderDoc"},{"location":"06%20In%20Practice/01%20Debugging/#codexl","text":"CodeXL \u662f\u7531AMD\u5f00\u53d1\u7684\u4e00\u6b3eGPU\u8c03\u8bd5\u5de5\u5177\uff0c\u5b83\u6709\u72ec\u7acb\u7248\u672c\u4e5f\u6709Visual Studio\u63d2\u4ef6\u7248\u672c\u3002CodeXL\u53ef\u4ee5\u7ed9\u4f60\u975e\u5e38\u591a\u7684\u4fe1\u606f\uff0c\u5bf9\u4e8e\u56fe\u5f62\u7a0b\u5e8f\u7684\u6027\u80fd\u6d4b\u8bd5\u4e5f\u975e\u5e38\u6709\u7528\u3002CodeXL\u5728NVidia\u4e0eIntel\u7684\u663e\u5361\u4e0a\u4e5f\u80fd\u8fd0\u884c\uff0c\u4e0d\u8fc7\u4f1a\u4e0d\u652f\u6301OpenCL\u8c03\u8bd5\u3002 \u6211\u6ca1\u6709\u592a\u591a\u7684CodeXL\u4f7f\u7528\u7ecf\u9a8c\uff0c\u6211\u4e2a\u4eba\u89c9\u5f97RenderDoc\u4f1a\u66f4\u5bb9\u6613\u4f7f\u7528\u4e00\u70b9\uff0c\u4f46\u6211\u4ecd\u628a\u5b83\u5217\u5728\u8fd9\u91cc\uff0c\u56e0\u4e3a\u5b83\u4ecd\u662f\u4e00\u4e2a\u975e\u5e38\u53ef\u9760\u7684\u5de5\u5177\uff0c\u5e76\u4e14\u4e3b\u8981\u662f\u7531\u6700\u5927\u7684GPU\u5236\u9020\u5546\u4e4b\u4e00\u5f00\u53d1\u7684\u3002","title":"CodeXL"},{"location":"06%20In%20Practice/01%20Debugging/#nvidia-nsight","text":"NVIDIA\u6d41\u884c\u7684 Nsight GPU\u8c03\u8bd5\u5de5\u5177\u5e76\u4e0d\u662f\u4e00\u4e2a\u72ec\u7acb\u7a0b\u5e8f\uff0c\u800c\u662f\u4e00\u4e2aVisual Studio IDE\u6216\u8005Eclipse IDE\u7684\u63d2\u4ef6 (NVIDIA\u73b0\u5728\u4e5f\u63d0\u4f9b \u72ec\u7acb\u7248\u672c \u4e86)\u3002Nsight\u63d2\u4ef6\u5bf9\u56fe\u5f62\u5f00\u53d1\u8005\u6765\u8bf4\u975e\u5e38\u5bb9\u6613\u4f7f\u7528\uff0c\u56e0\u4e3a\u5b83\u7ed9\u51fa\u4e86GPU\u7528\u91cf\uff0c\u9010\u5e27GPU\u72b6\u6001\u5927\u91cf\u8fd0\u884c\u65f6\u7684\u7edf\u8ba1\u6570\u636e\u3002 \u5f53\u4f60\u5728Visual Studio\uff08\u6216Eclipse\uff09\u4f7f\u7528Nsight\u7684\u8c03\u8bd5\u6216\u8005\u6027\u80fd\u6d4b\u8bd5\u6307\u4ee4\u542f\u52a8\u7a0b\u5e8f\u7684\u65f6\u5019\uff0cNsight\u5c06\u4f1a\u5728\u7a0b\u5e8f\u81ea\u8eab\u4e2d\u8fd0\u884c\u3002Nsight\u975e\u5e38\u68d2\u7684\u4e00\u70b9\u5c31\u662f\u5b83\u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\u6e32\u67d3\u4e86\u4e00\u5957GUI\u7cfb\u7edf\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u83b7\u53d6\u4f60\u7a0b\u5e8f\u5404\u79cd\u5404\u6837\u6709\u7528\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u662f\u8fd0\u884c\u65f6\u4e5f\u53ef\u4ee5\u662f\u9010\u5e27\u5206\u6790\u3002 Nsight\u662f\u4e00\u6b3e\u975e\u5e38\u6709\u7528\u7684\u5de5\u5177\uff0c\u5728\u6211\u770b\u6765\u6bd4\u4e0a\u8ff0\u5176\u5b83\u5de5\u5177\u90fd\u6709\u66f4\u597d\u7684\u8868\u73b0\uff0c\u4f46\u5b83\u4ecd\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7f3a\u70b9\uff0c\u5b83\u53ea\u80fd\u5728NVIDIA\u7684\u663e\u5361\u4e0a\u5de5\u4f5c\u3002\u5982\u679c\u4f60\u6b63\u5728\u4f7f\u7528\u4e00\u6b3eNVIDIA\u7684\u663e\u5361\uff08\u5e76\u4e14\u4f7f\u7528Visual Studio\uff09\uff0cNsight\u662f\u975e\u5e38\u503c\u5f97\u4e00\u8bd5\u7684\u3002 \u6211\u77e5\u9053\u6211\u53ef\u80fd\u9057\u6f0f\u4e86\u4e00\u4e9b\u5176\u5b83\u7684\u8c03\u8bd5\u5de5\u5177\uff08\u6bd4\u5982\u6211\u8fd8\u80fd\u60f3\u5230\u6709Valve\u7684 VOGL \u548c APItrace \uff09\uff0c\u4f46\u6211\u89c9\u5f97\u8fd9\u4e2a\u5217\u8868\u5df2\u7ecf\u7ed9\u4f60\u8db3\u591f\u591a\u7684\u5de5\u5177\u6765\u5b9e\u9a8c\u4e86\u3002","title":"NVIDIA Nsight"},{"location":"06%20In%20Practice/01%20Debugging/#_9","text":"\u4e3a\u4ec0\u4e48\u4f60\u7684\u4ee3\u7801\u4f1a\u4ea7\u751f\u4e00\u4e2a\u9ed1\u8272\u7a97\u53e3 \uff1aReto Koradi\u5217\u4e3e\u4e86\u4f60\u7684\u5c4f\u5e55\u6ca1\u6709\u4ea7\u751f\u4efb\u4f55\u8f93\u51fa\u7684\u53ef\u80fd\u539f\u56e0\u3002 \u8c03\u8bd5\u8f93\u51fa \uff1aVallentin Source\u5199\u7684\u4e00\u4efd\u975e\u5e38\u8be6\u7ec6\u7684\u8c03\u8bd5\u8f93\u51fa\u6559\u7a0b\uff0c\u91cc\u9762\u6709\u5728\u591a\u4e2a\u7a97\u53e3\u7cfb\u7edf\u4e2d\u914d\u7f6e\u8c03\u8bd5\u4e0a\u4e0b\u6587\u7684\u8be6\u7ec6\u4fe1\u606f\u3002","title":"\u9644\u52a0\u8d44\u6e90"},{"location":"06%20In%20Practice/02%20Text%20Rendering/","text":"\u6587\u672c\u6e32\u67d3 \u539f\u6587 Text Rendering \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Geequlim \u6821\u5bf9 gjy_1992, BLumia \u5f53\u4f60\u5728\u56fe\u5f62\u8ba1\u7b97\u9886\u57df\u5192\u9669\u5230\u4e86\u4e00\u5b9a\u9636\u6bb5\u4ee5\u540e\u4f60\u53ef\u80fd\u4f1a\u60f3\u4f7f\u7528OpenGL\u6765\u7ed8\u5236\u6587\u672c\u3002\u7136\u800c\uff0c\u53ef\u80fd\u4e0e\u4f60\u60f3\u8c61\u7684\u5e76\u4e0d\u4e00\u6837\uff0c\u4f7f\u7528\u50cfOpenGL\u8fd9\u6837\u7684\u5e95\u5c42\u5e93\u6765\u628a\u6587\u672c\u6e32\u67d3\u5230\u5c4f\u5e55\u4e0a\u5e76\u4e0d\u662f\u4e00\u4ef6\u7b80\u5355\u7684\u4e8b\u60c5\u3002\u5982\u679c\u4f60\u53ea\u9700\u8981\u7ed8\u5236128\u79cd\u4e0d\u540c\u7684\u5b57\u7b26(Character)\uff0c\u90a3\u4e48\u4e8b\u60c5\u53ef\u80fd\u4f1a\u7b80\u5355\u4e00\u4e9b\u3002\u4f46\u662f\u5982\u679c\u4f60\u8981\u7ed8\u5236\u7684\u5b57\u7b26\u6709\u7740\u4e0d\u540c\u7684\u5bbd\u3001\u9ad8\u548c\u8fb9\u8ddd\uff0c\u4e8b\u60c5\u9a6c\u4e0a\u5c31\u590d\u6742\u4e86\u3002\u6839\u636e\u4f60\u4f7f\u7528\u8bed\u8a00\u7684\u4e0d\u540c\uff0c\u4f60\u53ef\u80fd\u4f1a\u9700\u8981\u591a\u4e8e128\u4e2a\u5b57\u7b26\u3002\u518d\u8005\uff0c\u5982\u679c\u4f60\u8981\u7ed8\u5236\u97f3\u4e50\u7b26\u3001\u6570\u5b66\u7b26\u53f7\u8fd9\u4e9b\u7279\u6b8a\u7684\u7b26\u53f7\uff1b\u6216\u8005\u6e32\u67d3\u7ad6\u6392\u6587\u672c\u5462\uff1f\u4e00\u65e6\u4f60\u628a\u6587\u672c\u8fd9\u4e9b\u590d\u6742\u7684\u60c5\u51b5\u8003\u8651\u8fdb\u6765\uff0c\u4f60\u5c31\u4e0d\u4f1a\u5947\u602a\u4e3a\u4ec0\u4e48OpenGL\u8fd9\u6837\u7684\u5e95\u5c42API\u6ca1\u6709\u5305\u542b\u6587\u672c\u5904\u7406\u4e86\u3002 \u7531\u4e8eOpenGL\u672c\u8eab\u5e76\u6ca1\u6709\u5305\u542b\u4efb\u4f55\u7684\u6587\u672c\u5904\u7406\u80fd\u529b\uff0c\u6211\u4eec\u5fc5\u987b\u81ea\u5df1\u5b9a\u4e49\u4e00\u5957\u5168\u65b0\u7684\u7cfb\u7edf\u8ba9OpenGL\u7ed8\u5236\u6587\u672c\u5230\u5c4f\u5e55\u4e0a\u3002\u7531\u4e8e\u6587\u672c\u5b57\u7b26\u6ca1\u6709\u56fe\u5143\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u6709\u70b9\u521b\u9020\u529b\u624d\u884c\u3002\u9700\u8981\u4f7f\u7528\u7684\u4e00\u4e9b\u6280\u672f\u53ef\u4ee5\u662f\uff1a\u901a\u8fc7 GL_LINES \u6765\u7ed8\u5236\u5b57\u5f62\uff0c\u521b\u5efa\u6587\u672c\u76843D\u7f51\u683c(Mesh)\uff0c\u6216\u57283D\u73af\u5883\u4e2d\u5c06\u5b57\u7b26\u7eb9\u7406\u6e32\u67d3\u52302D\u56db\u8fb9\u5f62\u4e0a\u3002 \u5f00\u53d1\u8005\u6700\u5e38\u7528\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u5c06\u5b57\u7b26\u7eb9\u7406\u7ed8\u5236\u5230\u56db\u8fb9\u5f62\u4e0a\u3002\u7ed8\u5236\u8fd9\u4e9b\u7eb9\u7406\u56db\u8fb9\u5f62\u672c\u8eab\u5176\u5b9e\u5e76\u4e0d\u662f\u5f88\u590d\u6742\uff0c\u7136\u800c\u68c0\u7d22\u8981\u7ed8\u5236\u6587\u672c\u7684\u7eb9\u7406\u5374\u53d8\u6210\u4e86\u4e00\u9879\u6709\u6311\u6218\u6027\u7684\u5de5\u4f5c\u3002\u672c\u6559\u7a0b\u5c06\u63a2\u7d22\u591a\u79cd\u6587\u672c\u6e32\u67d3\u7684\u5b9e\u73b0\u65b9\u6cd5\uff0c\u5e76\u4e14\u4f7f\u7528FreeType\u5e93\u5b9e\u73b0\u4e00\u4e2a\u66f4\u52a0\u9ad8\u7ea7\u4f46\u66f4\u7075\u6d3b\u7684\u6e32\u67d3\u6587\u672c\u6280\u672f\u3002 \u7ecf\u5178\u6587\u672c\u6e32\u67d3\uff1a\u4f4d\u56fe\u5b57\u4f53 \u65e9\u671f\u7684\u65f6\u5019\uff0c\u6e32\u67d3\u6587\u672c\u662f\u901a\u8fc7\u9009\u62e9\u4e00\u4e2a\u9700\u8981\u7684\u5b57\u4f53(Font)\uff08\u6216\u8005\u81ea\u5df1\u521b\u5efa\u4e00\u4e2a\uff09\uff0c\u5e76\u63d0\u53d6\u8fd9\u4e2a\u5b57\u4f53\u4e2d\u6240\u6709\u76f8\u5173\u7684\u5b57\u7b26\uff0c\u5c06\u5b83\u4eec\u653e\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u5927\u7eb9\u7406\u4e2d\u6765\u5b9e\u73b0\u7684\u3002\u8fd9\u6837\u4e00\u5f20\u7eb9\u7406\u53eb\u505a \u4f4d\u56fe\u5b57\u4f53 (Bitmap Font)\uff0c\u5b83\u5728\u7eb9\u7406\u7684\u9884\u5b9a\u4e49\u533a\u57df\u4e2d\u5305\u542b\u4e86\u6211\u4eec\u60f3\u8981\u4f7f\u7528\u7684\u6240\u6709\u5b57\u7b26\u3002\u5b57\u4f53\u7684\u8fd9\u4e9b\u5b57\u7b26\u88ab\u79f0\u4e3a \u5b57\u5f62 (Glyph)\u3002\u6bcf\u4e2a\u5b57\u5f62\u90fd\u5173\u8054\u7740\u4e00\u4e2a\u7279\u5b9a\u7684\u7eb9\u7406\u5750\u6807\u533a\u57df\u3002\u5f53\u4f60\u60f3\u8981\u6e32\u67d3\u4e00\u4e2a\u5b57\u7b26\u7684\u65f6\u5019\uff0c\u4f60\u53ea\u9700\u8981\u901a\u8fc7\u6e32\u67d3\u8fd9\u4e00\u5757\u7279\u5b9a\u7684\u4f4d\u56fe\u5b57\u4f53\u533a\u57df\u52302D\u56db\u8fb9\u5f62\u4e0a\u5373\u53ef\u3002 \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u53d6\u4e00\u5f20\u4f4d\u56fe\u5b57\u4f53\uff0c\uff08\u901a\u8fc7\u4ed4\u7ec6\u9009\u62e9\u7eb9\u7406\u5750\u6807\uff09\u4ece\u7eb9\u7406\u4e2d\u91c7\u6837\u5bf9\u5e94\u7684\u5b57\u5f62\uff0c\u5e76\u6e32\u67d3\u5b83\u4eec\u5230\u591a\u4e2a2D\u56db\u8fb9\u5f62\u4e0a\uff0c\u6700\u7ec8\u6e32\u67d3\u51fa\u201cOpenGL\u201d\u6587\u672c\u3002\u901a\u8fc7\u542f\u7528 \u6df7\u5408 \uff0c\u8ba9\u80cc\u666f\u4fdd\u6301\u900f\u660e\uff0c\u6700\u7ec8\u5c31\u80fd\u6e32\u67d3\u4e00\u4e2a\u5b57\u7b26\u4e32\u5230\u5c4f\u5e55\u4e0a\u3002\u8fd9\u4e2a\u4f4d\u56fe\u5b57\u4f53\u662f\u901a\u8fc7Codehead\u7684\u4f4d\u56fe \u5b57\u4f53\u751f\u6210\u5668 \u751f\u6210\u7684\u3002 \u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u7ed8\u5236\u6587\u672c\u6709\u8bb8\u591a\u4f18\u52bf\u4e5f\u6709\u5f88\u591a\u7f3a\u70b9\u3002\u9996\u5148\uff0c\u5b83\u76f8\u5bf9\u6765\u8bf4\u5f88\u5bb9\u6613\u5b9e\u73b0\uff0c\u5e76\u4e14\u56e0\u4e3a\u4f4d\u56fe\u5b57\u4f53\u5df2\u7ecf\u9884\u5149\u6805\u5316\u4e86\uff0c\u5b83\u7684\u6548\u7387\u4e5f\u5f88\u9ad8\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4e0d\u591f\u7075\u6d3b\u3002\u5f53\u4f60\u60f3\u8981\u4f7f\u7528\u4e0d\u540c\u7684\u5b57\u4f53\u65f6\uff0c\u4f60\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u4e00\u5957\u5168\u65b0\u7684\u4f4d\u56fe\u5b57\u4f53\uff0c\u800c\u4e14\u4f60\u7684\u7a0b\u5e8f\u4f1a\u88ab\u9650\u5236\u5728\u4e00\u4e2a\u56fa\u5b9a\u7684\u5206\u8fa8\u7387\u3002\u5982\u679c\u4f60\u5bf9\u8fd9\u4e9b\u6587\u672c\u8fdb\u884c\u7f29\u653e\u7684\u8bdd\u4f60\u4f1a\u770b\u5230\u6587\u672c\u7684\u50cf\u7d20\u8fb9\u7f18\u3002\u6b64\u5916\uff0c\u8fd9\u79cd\u65b9\u5f0f\u901a\u5e38\u4f1a\u5c40\u9650\u4e8e\u975e\u5e38\u5c0f\u7684\u5b57\u7b26\u96c6\uff0c\u5982\u679c\u4f60\u60f3\u8ba9\u5b83\u6765\u652f\u6301Extended\u6216\u8005Unicode\u5b57\u7b26\u7684\u8bdd\u5c31\u5f88\u4e0d\u73b0\u5b9e\u4e86\u3002 \u8fd9\u79cd\u7ed8\u5236\u6587\u672c\u7684\u65b9\u5f0f\u66fe\u7ecf\u5f97\u76ca\u4e8e\u5b83\u7684\u9ad8\u901f\u548c\u53ef\u79fb\u690d\u6027\u800c\u975e\u5e38\u6d41\u884c\uff0c\u7136\u800c\u73b0\u5728\u5df2\u7ecf\u51fa\u73b0\u66f4\u52a0\u7075\u6d3b\u7684\u65b9\u5f0f\u4e86\u3002\u5176\u4e2d\u4e00\u4e2a\u662f\u6211\u4eec\u5373\u5c06\u8ba8\u8bba\u7684\u4f7f\u7528FreeType\u5e93\u6765\u52a0\u8f7dTrueType\u5b57\u4f53\u7684\u65b9\u5f0f\u3002 \u73b0\u4ee3\u6587\u672c\u6e32\u67d3\uff1aFreeType FreeType\u662f\u4e00\u4e2a\u80fd\u591f\u7528\u4e8e\u52a0\u8f7d\u5b57\u4f53\u5e76\u5c06\u4ed6\u4eec\u6e32\u67d3\u5230\u4f4d\u56fe\u4ee5\u53ca\u63d0\u4f9b\u591a\u79cd\u5b57\u4f53\u76f8\u5173\u7684\u64cd\u4f5c\u7684\u8f6f\u4ef6\u5f00\u53d1\u5e93\u3002\u5b83\u662f\u4e00\u4e2a\u975e\u5e38\u53d7\u6b22\u8fce\u7684\u8de8\u5e73\u53f0\u5b57\u4f53\u5e93\uff0c\u5b83\u88ab\u7528\u4e8eMac OS X\u3001Java\u3001PlayStation\u4e3b\u673a\u3001Linux\u3001Android\u7b49\u5e73\u53f0\u3002FreeType\u7684\u771f\u6b63\u5438\u5f15\u529b\u5728\u4e8e\u5b83\u80fd\u591f\u52a0\u8f7dTrueType\u5b57\u4f53\u3002 TrueType\u5b57\u4f53\u4e0d\u662f\u7528\u50cf\u7d20\u6216\u5176\u4ed6\u4e0d\u53ef\u7f29\u653e\u7684\u65b9\u5f0f\u6765\u5b9a\u4e49\u7684\uff0c\u5b83\u662f\u901a\u8fc7\u6570\u5b66\u516c\u5f0f\uff08\u66f2\u7ebf\u7684\u7ec4\u5408\uff09\u6765\u5b9a\u4e49\u7684\u3002\u7c7b\u4f3c\u4e8e\u77e2\u91cf\u56fe\u50cf\uff0c\u8fd9\u4e9b\u5149\u6805\u5316\u540e\u7684\u5b57\u4f53\u56fe\u50cf\u53ef\u4ee5\u6839\u636e\u9700\u8981\u7684\u5b57\u4f53\u9ad8\u5ea6\u6765\u751f\u6210\u3002\u901a\u8fc7\u4f7f\u7528TrueType\u5b57\u4f53\uff0c\u4f60\u53ef\u4ee5\u8f7b\u6613\u6e32\u67d3\u4e0d\u540c\u5927\u5c0f\u7684\u5b57\u5f62\u800c\u4e0d\u9020\u6210\u4efb\u4f55\u8d28\u91cf\u635f\u5931\u3002 FreeType\u53ef\u4ee5\u5728\u4ed6\u4eec\u7684 \u5b98\u65b9\u7f51\u7ad9 \u4e2d\u4e0b\u8f7d\u5230\u3002\u4f60\u53ef\u4ee5\u9009\u62e9\u81ea\u5df1\u7528\u6e90\u7801\u7f16\u8bd1\u8fd9\u4e2a\u5e93\uff0c\u5982\u679c\u652f\u6301\u4f60\u7684\u5e73\u53f0\u7684\u8bdd\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4ed6\u4eec\u9884\u7f16\u8bd1\u597d\u7684\u5e93\u3002\u8bf7\u786e\u8ba4\u4f60\u5c06 freetype.lib \u6dfb\u52a0\u5230\u4f60\u9879\u76ee\u7684\u94fe\u63a5\u5e93\u4e2d\uff0c\u5e76\u4e14\u786e\u8ba4\u7f16\u8bd1\u5668\u77e5\u9053\u5934\u6587\u4ef6\u7684\u4f4d\u7f6e\u3002 \u7136\u540e\u8bf7\u786e\u8ba4\u5305\u542b\u5408\u9002\u7684\u5934\u6587\u4ef6\uff1a #include <ft2build.h> #include FT_FREETYPE_H Attention \u7531\u4e8eFreeType\u7684\u5f00\u53d1\u65b9\u5f0f\uff08\u81f3\u5c11\u5728\u6211\u5199\u8fd9\u7bc7\u6587\u7ae0\u7684\u65f6\u5019\uff09\uff0c\u4f60\u4e0d\u80fd\u5c06\u5b83\u4eec\u7684\u5934\u6587\u4ef6\u653e\u5230\u4e00\u4e2a\u65b0\u7684\u76ee\u5f55\u4e0b\u3002\u5b83\u4eec\u5e94\u8be5\u4fdd\u5b58\u5728\u4f60include\u76ee\u5f55\u7684\u6839\u76ee\u5f55\u4e0b\u3002\u901a\u8fc7\u4f7f\u7528\u50cf #include <FreeType/ft2build.h> \u8fd9\u6837\u7684\u65b9\u5f0f\u5bfc\u5165FreeType\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e9b\u5934\u6587\u4ef6\u51b2\u7a81\u7684\u95ee\u9898\u3002 FreeType\u6240\u505a\u7684\u4e8b\u5c31\u662f\u52a0\u8f7dTrueType\u5b57\u4f53\u5e76\u4e3a\u6bcf\u4e00\u4e2a\u5b57\u5f62\u751f\u6210\u4f4d\u56fe\u4ee5\u53ca\u8ba1\u7b97\u51e0\u4e2a\u5ea6\u91cf\u503c(Metric)\u3002\u6211\u4eec\u53ef\u4ee5\u63d0\u53d6\u51fa\u5b83\u751f\u6210\u7684\u4f4d\u56fe\u4f5c\u4e3a\u5b57\u5f62\u7684\u7eb9\u7406\uff0c\u5e76\u4f7f\u7528\u8fd9\u4e9b\u5ea6\u91cf\u503c\u5b9a\u4f4d\u5b57\u7b26\u7684\u5b57\u5f62\u3002 \u8981\u52a0\u8f7d\u4e00\u4e2a\u5b57\u4f53\uff0c\u6211\u4eec\u53ea\u9700\u8981\u521d\u59cb\u5316FreeType\u5e93\uff0c\u5e76\u4e14\u5c06\u8fd9\u4e2a\u5b57\u4f53\u52a0\u8f7d\u4e3a\u4e00\u4e2aFreeType\u79f0\u4e4b\u4e3a \u9762 (Face)\u7684\u4e1c\u897f\u3002\u8fd9\u91cc\u4e3a\u6211\u4eec\u52a0\u8f7d\u4e00\u4e2a\u4ece Windows/Fonts \u76ee\u5f55\u4e2d\u62f7\u8d1d\u6765\u7684TrueType\u5b57\u4f53\u6587\u4ef6 arial.ttf \u3002 FT_Library ft; if (FT_Init_FreeType(&ft)) std::cout << \"ERROR::FREETYPE: Could not init FreeType Library\" << std::endl; FT_Face face; if (FT_New_Face(ft, \"fonts/arial.ttf\", 0, &face)) std::cout << \"ERROR::FREETYPE: Failed to load font\" << std::endl; \u8fd9\u4e9bFreeType\u51fd\u6570\u5728\u51fa\u73b0\u9519\u8bef\u65f6\u5c06\u8fd4\u56de\u4e00\u4e2a\u975e\u96f6\u7684\u6574\u6570\u503c\u3002 \u5f53\u9762\u52a0\u8f7d\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u5b57\u4f53\u5927\u5c0f\uff0c\u8fd9\u8868\u793a\u7740\u6211\u4eec\u8981\u4ece\u5b57\u4f53\u9762\u4e2d\u751f\u6210\u591a\u5927\u7684\u5b57\u5f62\uff1a FT_Set_Pixel_Sizes(face, 0, 48); \u6b64\u51fd\u6570\u8bbe\u7f6e\u4e86\u5b57\u4f53\u9762\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff0c\u5c06\u5bbd\u5ea6\u503c\u8bbe\u4e3a0\u8868\u793a\u6211\u4eec\u8981\u4ece\u5b57\u4f53\u9762\u901a\u8fc7\u7ed9\u5b9a\u7684\u9ad8\u5ea6\u4e2d\u52a8\u6001\u8ba1\u7b97\u51fa\u5b57\u5f62\u7684\u5bbd\u5ea6\u3002 \u4e00\u4e2aFreeType\u9762\u4e2d\u5305\u542b\u4e86\u4e00\u4e2a\u5b57\u5f62\u7684\u96c6\u5408\u3002\u6211\u4eec\u53ef\u4ee5\u8c03\u7528 FT_Load_Char \u51fd\u6570\u6765\u5c06\u5176\u4e2d\u4e00\u4e2a\u5b57\u5f62\u8bbe\u7f6e\u4e3a\u6fc0\u6d3b\u5b57\u5f62\u3002\u8fd9\u91cc\u6211\u4eec\u9009\u62e9\u52a0\u8f7d\u5b57\u7b26\u5b57\u5f62\u2019X\u2019\uff1a if (FT_Load_Char(face, 'X', FT_LOAD_RENDER)) std::cout << \"ERROR::FREETYTPE: Failed to load Glyph\" << std::endl; \u901a\u8fc7\u5c06 FT_LOAD_RENDER \u8bbe\u4e3a\u52a0\u8f7d\u6807\u8bb0\u4e4b\u4e00\uff0c\u6211\u4eec\u544a\u8bc9FreeType\u53bb\u521b\u5efa\u4e00\u4e2a8\u4f4d\u7684\u7070\u5ea6\u4f4d\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 face->glyph->bitmap \u6765\u8bbf\u95ee\u8fd9\u4e2a\u4f4d\u56fe\u3002 \u4f7f\u7528FreeType\u52a0\u8f7d\u7684\u6bcf\u4e2a\u5b57\u5f62\u6ca1\u6709\u76f8\u540c\u7684\u5927\u5c0f\uff08\u4e0d\u50cf\u4f4d\u56fe\u5b57\u4f53\u90a3\u6837\uff09\u3002\u4f7f\u7528FreeType\u751f\u6210\u7684\u4f4d\u56fe\u7684\u5927\u5c0f\u6070\u597d\u80fd\u5305\u542b\u8fd9\u4e2a\u5b57\u7b26\u53ef\u89c1\u533a\u57df\u3002\u4f8b\u5982\u751f\u6210\u7528\u4e8e\u8868\u793a\u2019.\u2019\u7684\u4f4d\u56fe\u7684\u5927\u5c0f\u8981\u6bd4\u8868\u793a\u2019X\u2019\u7684\u5c0f\u5f97\u591a\u3002\u56e0\u6b64\uff0cFreeType\u540c\u6837\u4e5f\u52a0\u8f7d\u4e86\u4e00\u4e9b\u5ea6\u91cf\u503c\u6765\u6307\u5b9a\u6bcf\u4e2a\u5b57\u7b26\u7684\u5927\u5c0f\u548c\u4f4d\u7f6e\u3002\u4e0b\u9762\u8fd9\u5f20\u56fe\u5c55\u793a\u4e86FreeType\u5bf9\u6bcf\u4e00\u4e2a\u5b57\u7b26\u5b57\u5f62\u8ba1\u7b97\u7684\u6240\u6709\u5ea6\u91cf\u503c\u3002 \u6bcf\u4e00\u4e2a\u5b57\u5f62\u90fd\u653e\u5728\u4e00\u4e2a\u6c34\u5e73\u7684 \u57fa\u51c6\u7ebf (Baseline)\u4e0a\uff08\u5373\u4e0a\u56fe\u4e2d\u6c34\u5e73\u7bad\u5934\u6307\u793a\u7684\u90a3\u6761\u7ebf\uff09\u3002\u4e00\u4e9b\u5b57\u5f62\u6070\u597d\u4f4d\u4e8e\u57fa\u51c6\u7ebf\u4e0a\uff08\u5982\u2019X\u2019\uff09\uff0c\u800c\u53e6\u4e00\u4e9b\u5219\u4f1a\u7a0d\u5fae\u8d8a\u8fc7\u57fa\u51c6\u7ebf\u4ee5\u4e0b\uff08\u5982\u2019g\u2019\u6216\u2019p\u2019\uff09\uff08\u8bd1\u6ce8\uff1a\u5373\u8fd9\u4e9b\u5e26\u6709\u4e0b\u4f38\u90e8\u7684\u5b57\u6bcd\uff0c\u53ef\u4ee5\u89c1 \u8fd9\u91cc \uff09\u3002\u8fd9\u4e9b\u5ea6\u91cf\u503c\u7cbe\u786e\u5b9a\u4e49\u4e86\u6446\u653e\u5b57\u5f62\u6240\u9700\u7684\u6bcf\u4e2a\u5b57\u5f62\u8ddd\u79bb\u57fa\u51c6\u7ebf\u7684\u504f\u79fb\u91cf\uff0c\u6bcf\u4e2a\u5b57\u5f62\u7684\u5927\u5c0f\uff0c\u4ee5\u53ca\u9700\u8981\u9884\u7559\u591a\u5c11\u7a7a\u95f4\u6765\u6e32\u67d3\u4e0b\u4e00\u4e2a\u5b57\u5f62\u3002\u4e0b\u9762\u8fd9\u4e2a\u8868\u5217\u51fa\u4e86\u6211\u4eec\u9700\u8981\u7684\u6240\u6709\u5c5e\u6027\u3002 \u5c5e\u6027 \u83b7\u53d6\u65b9\u5f0f \u751f\u6210\u4f4d\u56fe\u63cf\u8ff0 width face->glyph->bitmap.width \u4f4d\u56fe\u5bbd\u5ea6\uff08\u50cf\u7d20\uff09 height face->glyph->bitmap.rows \u4f4d\u56fe\u9ad8\u5ea6\uff08\u50cf\u7d20\uff09 bearingX face->glyph->bitmap_left \u6c34\u5e73\u8ddd\u79bb\uff0c\u5373\u4f4d\u56fe\u76f8\u5bf9\u4e8e\u539f\u70b9\u7684\u6c34\u5e73\u4f4d\u7f6e\uff08\u50cf\u7d20\uff09 bearingY face->glyph->bitmap_top \u5782\u76f4\u8ddd\u79bb\uff0c\u5373\u4f4d\u56fe\u76f8\u5bf9\u4e8e\u57fa\u51c6\u7ebf\u7684\u5782\u76f4\u4f4d\u7f6e\uff08\u50cf\u7d20\uff09 advance face->glyph->advance.x \u6c34\u5e73\u9884\u7559\u503c\uff0c\u5373\u539f\u70b9\u5230\u4e0b\u4e00\u4e2a\u5b57\u5f62\u539f\u70b9\u7684\u6c34\u5e73\u8ddd\u79bb\uff08\u5355\u4f4d\uff1a1/64\u50cf\u7d20\uff09 \u5728\u9700\u8981\u6e32\u67d3\u5b57\u7b26\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u52a0\u8f7d\u4e00\u4e2a\u5b57\u7b26\u5b57\u5f62\uff0c\u83b7\u53d6\u5b83\u7684\u5ea6\u91cf\u503c\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u7eb9\u7406\uff0c\u4f46\u6bcf\u4e00\u5e27\u90fd\u8fd9\u6837\u505a\u4f1a\u975e\u5e38\u6ca1\u6709\u6548\u7387\u3002\u6211\u4eec\u5e94\u5c06\u8fd9\u4e9b\u751f\u6210\u7684\u6570\u636e\u50a8\u5b58\u5728\u7a0b\u5e8f\u7684\u67d0\u4e00\u4e2a\u5730\u65b9\uff0c\u5728\u9700\u8981\u6e32\u67d3\u5b57\u7b26\u7684\u65f6\u5019\u518d\u53bb\u8c03\u7528\u3002\u6211\u4eec\u4f1a\u5b9a\u4e49\u4e00\u4e2a\u975e\u5e38\u65b9\u4fbf\u7684\u7ed3\u6784\u4f53\uff0c\u5e76\u5c06\u8fd9\u4e9b\u7ed3\u6784\u4f53\u5b58\u50a8\u5728\u4e00\u4e2a map \u4e2d\u3002 struct Character { GLuint TextureID; // \u5b57\u5f62\u7eb9\u7406\u7684ID glm::ivec2 Size; // \u5b57\u5f62\u5927\u5c0f glm::ivec2 Bearing; // \u4ece\u57fa\u51c6\u7ebf\u5230\u5b57\u5f62\u5de6\u90e8/\u9876\u90e8\u7684\u504f\u79fb\u503c GLuint Advance; // \u539f\u70b9\u8ddd\u4e0b\u4e00\u4e2a\u5b57\u5f62\u539f\u70b9\u7684\u8ddd\u79bb }; std::map<GLchar, Character> Characters; \u5bf9\u4e8e\u8fd9\u4e2a\u6559\u7a0b\u6765\u8bf4\uff0c\u672c\u7740\u8ba9\u4e00\u5207\u7b80\u5355\u7684\u76ee\u7684\uff0c\u6211\u4eec\u53ea\u751f\u6210ASCII\u5b57\u7b26\u96c6\u7684\u524d128\u4e2a\u5b57\u7b26\u3002\u5bf9\u6bcf\u4e00\u4e2a\u5b57\u7b26\uff0c\u6211\u4eec\u751f\u6210\u4e00\u4e2a\u7eb9\u7406\u5e76\u4fdd\u5b58\u76f8\u5173\u6570\u636e\u81f3 Character \u7ed3\u6784\u4f53\u4e2d\uff0c\u4e4b\u540e\u518d\u6dfb\u52a0\u81f3 Characters \u8fd9\u4e2a\u6620\u5c04\u8868\u4e2d\u3002\u8fd9\u6837\u5b50\uff0c\u6e32\u67d3\u4e00\u4e2a\u5b57\u7b26\u6240\u9700\u7684\u6240\u6709\u6570\u636e\u5c31\u90fd\u88ab\u50a8\u5b58\u4e0b\u6765\u5907\u7528\u4e86\u3002 glPixelStorei(GL_UNPACK_ALIGNMENT, 1); //\u7981\u7528\u5b57\u8282\u5bf9\u9f50\u9650\u5236 for (GLubyte c = 0; c < 128; c++) { // \u52a0\u8f7d\u5b57\u7b26\u7684\u5b57\u5f62 if (FT_Load_Char(face, c, FT_LOAD_RENDER)) { std::cout << \"ERROR::FREETYTPE: Failed to load Glyph\" << std::endl; continue; } // \u751f\u6210\u7eb9\u7406 GLuint texture; glGenTextures(1, &texture); glBindTexture(GL_TEXTURE_2D, texture); glTexImage2D( GL_TEXTURE_2D, 0, GL_RED, face->glyph->bitmap.width, face->glyph->bitmap.rows, 0, GL_RED, GL_UNSIGNED_BYTE, face->glyph->bitmap.buffer ); // \u8bbe\u7f6e\u7eb9\u7406\u9009\u9879 glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR); // \u50a8\u5b58\u5b57\u7b26\u4f9b\u4e4b\u540e\u4f7f\u7528 Character character = { texture, glm::ivec2(face->glyph->bitmap.width, face->glyph->bitmap.rows), glm::ivec2(face->glyph->bitmap_left, face->glyph->bitmap_top), face->glyph->advance.x }; Characters.insert(std::pair<GLchar, Character>(c, character)); } \u5728\u8fd9\u4e2afor\u5faa\u73af\u4e2d\u6211\u4eec\u904d\u5386\u4e86ASCII\u96c6\u4e2d\u7684\u5168\u90e8128\u4e2a\u5b57\u7b26\uff0c\u5e76\u83b7\u53d6\u5b83\u4eec\u5bf9\u5e94\u7684\u5b57\u7b26\u5b57\u5f62\u3002\u5bf9\u6bcf\u4e00\u4e2a\u5b57\u7b26\uff0c\u6211\u4eec\u751f\u6210\u4e86\u4e00\u4e2a\u7eb9\u7406\uff0c\u8bbe\u7f6e\u4e86\u5b83\u7684\u9009\u9879\uff0c\u5e76\u50a8\u5b58\u4e86\u5b83\u7684\u5ea6\u91cf\u503c\u3002\u6709\u8da3\u7684\u662f\u6211\u4eec\u8fd9\u91cc\u5c06\u7eb9\u7406\u7684 internalFormat \u548c format \u8bbe\u7f6e\u4e3a GL_RED \u3002\u901a\u8fc7\u5b57\u5f62\u751f\u6210\u7684\u4f4d\u56fe\u662f\u4e00\u4e2a8\u4f4d\u7070\u5ea6\u56fe\uff0c\u5b83\u7684\u6bcf\u4e00\u4e2a\u989c\u8272\u90fd\u7531\u4e00\u4e2a\u5b57\u8282\u6765\u8868\u793a\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06\u4f4d\u56fe\u7f13\u51b2\u7684\u6bcf\u4e00\u5b57\u8282\u90fd\u4f5c\u4e3a\u7eb9\u7406\u7684\u989c\u8272\u503c\u3002\u8fd9\u662f\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u7279\u6b8a\u7684\u7eb9\u7406\u5b9e\u73b0\u7684\uff0c\u8fd9\u4e2a\u7eb9\u7406\u7684\u6bcf\u4e00\u5b57\u8282\u90fd\u5bf9\u5e94\u7740\u7eb9\u7406\u989c\u8272\u7684\u7ea2\u8272\u5206\u91cf\uff08\u989c\u8272\u5411\u91cf\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\uff09\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u5b57\u8282\u6765\u8868\u793a\u7eb9\u7406\u7684\u989c\u8272\uff0c\u6211\u4eec\u9700\u8981\u6ce8\u610fOpenGL\u7684\u4e00\u4e2a\u9650\u5236\uff1a glPixelStorei(GL_UNPACK_ALIGNMENT, 1); OpenGL\u8981\u6c42\u6240\u6709\u7684\u7eb9\u7406\u90fd\u662f4\u5b57\u8282\u5bf9\u9f50\u7684\uff0c\u5373\u7eb9\u7406\u7684\u5927\u5c0f\u6c38\u8fdc\u662f4\u5b57\u8282\u7684\u500d\u6570\u3002\u901a\u5e38\u8fd9\u5e76\u4e0d\u4f1a\u51fa\u73b0\u4ec0\u4e48\u95ee\u9898\uff0c\u56e0\u4e3a\u5927\u90e8\u5206\u7eb9\u7406\u7684\u5bbd\u5ea6\u90fd\u4e3a4\u7684\u500d\u6570\u5e76/\u6216\u6bcf\u50cf\u7d20\u4f7f\u75284\u4e2a\u5b57\u8282\uff0c\u4f46\u662f\u73b0\u5728\u6211\u4eec\u6bcf\u4e2a\u50cf\u7d20\u53ea\u7528\u4e86\u4e00\u4e2a\u5b57\u8282\uff0c\u5b83\u53ef\u4ee5\u662f\u4efb\u610f\u7684\u5bbd\u5ea6\u3002\u901a\u8fc7\u5c06\u7eb9\u7406\u89e3\u538b\u5bf9\u9f50\u53c2\u6570\u8bbe\u4e3a1\uff0c\u8fd9\u6837\u624d\u80fd\u786e\u4fdd\u4e0d\u4f1a\u6709\u5bf9\u9f50\u95ee\u9898\uff08\u5b83\u53ef\u80fd\u4f1a\u9020\u6210\u6bb5\u9519\u8bef\uff09\u3002 \u5f53\u4f60\u5904\u7406\u5b8c\u5b57\u5f62\u540e\u4e0d\u8981\u5fd8\u8bb0\u6e05\u7406FreeType\u7684\u8d44\u6e90\u3002 FT_Done_Face(face); FT_Done_FreeType(ft); \u7740\u8272\u5668 \u6211\u4eec\u5c06\u4f7f\u7528\u4e0b\u9762\u7684\u9876\u70b9\u7740\u8272\u5668\u6765\u6e32\u67d3\u5b57\u5f62\uff1a #version 330 core layout (location = 0) in vec4 vertex; // <vec2 pos, vec2 tex> out vec2 TexCoords; uniform mat4 projection; void main() { gl_Position = projection * vec4(vertex.xy, 0.0, 1.0); TexCoords = vertex.zw; } \u6211\u4eec\u5c06\u4f4d\u7f6e\u548c\u7eb9\u7406\u7eb9\u7406\u5750\u6807\u7684\u6570\u636e\u5408\u8d77\u6765\u5b58\u5728\u4e00\u4e2a vec4 \u4e2d\u3002\u8fd9\u4e2a\u9876\u70b9\u7740\u8272\u5668\u5c06\u4f4d\u7f6e\u5750\u6807\u4e0e\u4e00\u4e2a\u6295\u5f71\u77e9\u9635\u76f8\u4e58\uff0c\u5e76\u5c06\u7eb9\u7406\u5750\u6807\u4f20\u9012\u7ed9\u7247\u6bb5\u7740\u8272\u5668\uff1a #version 330 core in vec2 TexCoords; out vec4 color; uniform sampler2D text; uniform vec3 textColor; void main() { vec4 sampled = vec4(1.0, 1.0, 1.0, texture(text, TexCoords).r); color = vec4(textColor, 1.0) * sampled; } \u7247\u6bb5\u7740\u8272\u5668\u6709\u4e24\u4e2auniform\u53d8\u91cf\uff1a\u4e00\u4e2a\u662f\u5355\u989c\u8272\u901a\u9053\u7684\u5b57\u5f62\u4f4d\u56fe\u7eb9\u7406\uff0c\u53e6\u4e00\u4e2a\u662f\u989c\u8272uniform\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u8c03\u6574\u6587\u672c\u7684\u6700\u7ec8\u989c\u8272\u3002\u6211\u4eec\u9996\u5148\u4ece\u4f4d\u56fe\u7eb9\u7406\u4e2d\u91c7\u6837\u989c\u8272\u503c\uff0c\u7531\u4e8e\u7eb9\u7406\u6570\u636e\u4e2d\u4ec5\u5b58\u50a8\u7740\u7ea2\u8272\u5206\u91cf\uff0c\u6211\u4eec\u5c31\u91c7\u6837\u7eb9\u7406\u7684 r \u5206\u91cf\u6765\u4f5c\u4e3a\u53d6\u6837\u7684alpha\u503c\u3002\u901a\u8fc7\u53d8\u6362\u989c\u8272\u7684alpha\u503c\uff0c\u6700\u7ec8\u7684\u989c\u8272\u5728\u5b57\u5f62\u80cc\u666f\u989c\u8272\u4e0a\u4f1a\u662f\u900f\u660e\u7684\uff0c\u800c\u5728\u771f\u6b63\u7684\u5b57\u7b26\u50cf\u7d20\u4e0a\u662f\u4e0d\u900f\u660e\u7684\u3002\u6211\u4eec\u4e5f\u5c06RGB\u989c\u8272\u4e0e textColor \u8fd9\u4e2auniform\u76f8\u4e58\uff0c\u6765\u53d8\u6362\u6587\u672c\u989c\u8272\u3002 \u5f53\u7136\u6211\u4eec\u9700\u8981\u542f\u7528 \u6df7\u5408 \u624d\u80fd\u8ba9\u8fd9\u4e00\u5207\u884c\u4e4b\u6709\u6548\uff1a glEnable(GL_BLEND); glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); \u5bf9\u4e8e\u6295\u5f71\u77e9\u9635\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u6b63\u5c04\u6295\u5f71\u77e9\u9635(Orthographic Projection Matrix)\u3002\u5bf9\u4e8e\u6587\u672c\u6e32\u67d3\u6211\u4eec\uff08\u901a\u5e38\uff09\u90fd\u4e0d\u9700\u8981\u900f\u89c6\uff0c\u4f7f\u7528\u6b63\u5c04\u6295\u5f71\u540c\u6837\u5141\u8bb8\u6211\u4eec\u5728\u5c4f\u5e55\u5750\u6807\u7cfb\u4e2d\u8bbe\u5b9a\u6240\u6709\u7684\u9876\u70b9\u5750\u6807\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u5982\u4e0b\u65b9\u5f0f\u914d\u7f6e\uff1a glm::mat4 projection = glm::ortho(0.0f, 800.0f, 0.0f, 600.0f); \u6211\u4eec\u8bbe\u7f6e\u6295\u5f71\u77e9\u9635\u7684\u5e95\u90e8\u53c2\u6570\u4e3a 0.0f \uff0c\u5e76\u5c06\u9876\u90e8\u53c2\u6570\u8bbe\u7f6e\u4e3a\u7a97\u53e3\u7684\u9ad8\u5ea6\u3002\u8fd9\u6837\u505a\u7684\u7ed3\u679c\u662f\u6211\u4eec\u6307\u5b9a\u4e86y\u5750\u6807\u7684\u8303\u56f4\u4e3a\u5c4f\u5e55\u5e95\u90e8(0.0f)\u81f3\u5c4f\u5e55\u9876\u90e8(600.0f)\u3002\u8fd9\u610f\u5473\u7740\u73b0\u5728\u70b9(0.0, 0.0)\u5bf9\u5e94\u5de6\u4e0b\u89d2\uff08\u8bd1\u6ce8\uff1a\u800c\u4e0d\u518d\u662f\u7a97\u53e3\u6b63\u4e2d\u95f4\uff09\u3002 \u6700\u540e\u8981\u505a\u7684\u4e8b\u662f\u521b\u5efa\u4e00\u4e2aVBO\u548cVAO\u7528\u6765\u6e32\u67d3\u56db\u8fb9\u5f62\u3002\u73b0\u5728\u6211\u4eec\u5728\u521d\u59cb\u5316VBO\u65f6\u5206\u914d\u8db3\u591f\u7684\u5185\u5b58\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5728\u6e32\u67d3\u5b57\u7b26\u7684\u65f6\u5019\u518d\u6765\u66f4\u65b0VBO\u7684\u5185\u5b58\u3002 GLuint VAO, VBO; glGenVertexArrays(1, &VAO); glGenBuffers(1, &VBO); glBindVertexArray(VAO); glBindBuffer(GL_ARRAY_BUFFER, VBO); glBufferData(GL_ARRAY_BUFFER, sizeof(GLfloat) * 6 * 4, NULL, GL_DYNAMIC_DRAW); glEnableVertexAttribArray(0); glVertexAttribPointer(0, 4, GL_FLOAT, GL_FALSE, 4 * sizeof(GLfloat), 0); glBindBuffer(GL_ARRAY_BUFFER, 0); glBindVertexArray(0); \u6bcf\u4e2a2D\u56db\u8fb9\u5f62\u9700\u89816\u4e2a\u9876\u70b9\uff0c\u6bcf\u4e2a\u9876\u70b9\u53c8\u662f\u7531\u4e00\u4e2a4float\u5411\u91cf\uff08\u8bd1\u6ce8\uff1a\u4e00\u4e2a\u7eb9\u7406\u5750\u6807\u548c\u4e00\u4e2a\u9876\u70b9\u5750\u6807\uff09\u7ec4\u6210\uff0c\u56e0\u6b64\u6211\u4eec\u5c06VBO\u7684\u5185\u5b58\u5206\u914d\u4e3a6 * 4\u4e2afloat\u7684\u5927\u5c0f\u3002\u7531\u4e8e\u6211\u4eec\u4f1a\u5728\u7ed8\u5236\u5b57\u7b26\u65f6\u7ecf\u5e38\u66f4\u65b0VBO\u7684\u5185\u5b58\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5185\u5b58\u7c7b\u578b\u8bbe\u7f6e\u4e3a GL_DYNAMIC_DRAW \u3002 \u6e32\u67d3\u4e00\u884c\u6587\u672c \u8981\u6e32\u67d3\u4e00\u4e2a\u5b57\u7b26\uff0c\u6211\u4eec\u4ece\u4e4b\u524d\u521b\u5efa\u7684 Characters \u6620\u5c04\u8868\u4e2d\u53d6\u51fa\u5bf9\u5e94\u7684 Character \u7ed3\u6784\u4f53\uff0c\u5e76\u6839\u636e\u5b57\u7b26\u7684\u5ea6\u91cf\u503c\u6765\u8ba1\u7b97\u56db\u8fb9\u5f62\u7684\u7ef4\u5ea6\u3002\u6839\u636e\u56db\u8fb9\u5f62\u7684\u7ef4\u5ea6\u6211\u4eec\u5c31\u80fd\u52a8\u6001\u8ba1\u7b97\u51fa6\u4e2a\u63cf\u8ff0\u56db\u8fb9\u5f62\u7684\u9876\u70b9\uff0c\u5e76\u4f7f\u7528 glBufferSubData \u51fd\u6570\u66f4\u65b0VBO\u6240\u7ba1\u7406\u5185\u5b58\u7684\u5185\u5bb9\u3002 \u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u53eb\u505a RenderText \u7684\u51fd\u6570\u6e32\u67d3\u4e00\u4e2a\u5b57\u7b26\u4e32\uff1a void RenderText(Shader &s, std::string text, GLfloat x, GLfloat y, GLfloat scale, glm::vec3 color) { // \u6fc0\u6d3b\u5bf9\u5e94\u7684\u6e32\u67d3\u72b6\u6001 s.Use(); glUniform3f(glGetUniformLocation(s.Program, \"textColor\"), color.x, color.y, color.z); glActiveTexture(GL_TEXTURE0); glBindVertexArray(VAO); // \u904d\u5386\u6587\u672c\u4e2d\u6240\u6709\u7684\u5b57\u7b26 std::string::const_iterator c; for (c = text.begin(); c != text.end(); c++) { Character ch = Characters[*c]; GLfloat xpos = x + ch.Bearing.x * scale; GLfloat ypos = y - (ch.Size.y - ch.Bearing.y) * scale; GLfloat w = ch.Size.x * scale; GLfloat h = ch.Size.y * scale; // \u5bf9\u6bcf\u4e2a\u5b57\u7b26\u66f4\u65b0VBO GLfloat vertices[6][4] = { { xpos, ypos + h, 0.0, 0.0 }, { xpos, ypos, 0.0, 1.0 }, { xpos + w, ypos, 1.0, 1.0 }, { xpos, ypos + h, 0.0, 0.0 }, { xpos + w, ypos, 1.0, 1.0 }, { xpos + w, ypos + h, 1.0, 0.0 } }; // \u5728\u56db\u8fb9\u5f62\u4e0a\u7ed8\u5236\u5b57\u5f62\u7eb9\u7406 glBindTexture(GL_TEXTURE_2D, ch.textureID); // \u66f4\u65b0VBO\u5185\u5b58\u7684\u5185\u5bb9 glBindBuffer(GL_ARRAY_BUFFER, VBO); glBufferSubData(GL_ARRAY_BUFFER, 0, sizeof(vertices), vertices); glBindBuffer(GL_ARRAY_BUFFER, 0); // \u7ed8\u5236\u56db\u8fb9\u5f62 glDrawArrays(GL_TRIANGLES, 0, 6); // \u66f4\u65b0\u4f4d\u7f6e\u5230\u4e0b\u4e00\u4e2a\u5b57\u5f62\u7684\u539f\u70b9\uff0c\u6ce8\u610f\u5355\u4f4d\u662f1/64\u50cf\u7d20 x += (ch.Advance >> 6) * scale; // \u4f4d\u504f\u79fb6\u4e2a\u5355\u4f4d\u6765\u83b7\u53d6\u5355\u4f4d\u4e3a\u50cf\u7d20\u7684\u503c (2^6 = 64) } glBindVertexArray(0); glBindTexture(GL_TEXTURE_2D, 0); } \u8fd9\u4e2a\u51fd\u6570\u7684\u5185\u5bb9\u5e94\u8be5\u975e\u5e38\u660e\u663e\u4e86\uff1a\u6211\u4eec\u9996\u5148\u8ba1\u7b97\u51fa\u56db\u8fb9\u5f62\u7684\u539f\u70b9\u5750\u6807\uff08\u4e3a xpos \u548c ypos \uff09\u548c\u5b83\u7684\u5927\u5c0f\uff08\u4e3a w \u548c h \uff09\uff0c\u5e76\u751f\u62106\u4e2a\u9876\u70b9\u5f62\u6210\u8fd9\u4e2a2D\u56db\u8fb9\u5f62\uff1b\u6ce8\u610f\u6211\u4eec\u5c06\u6bcf\u4e2a\u5ea6\u91cf\u503c\u90fd\u4f7f\u7528 scale \u8fdb\u884c\u7f29\u653e\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u66f4\u65b0\u4e86VBO\u7684\u5185\u5bb9\u3001\u5e76\u6e32\u67d3\u4e86\u8fd9\u4e2a\u56db\u8fb9\u5f62\u3002 \u5176\u4e2d\u8fd9\u884c\u4ee3\u7801\u9700\u8981\u52a0\u500d\u7559\u610f\uff1a GLfloat ypos = y - (ch.Size.y - ch.Bearing.y); \u4e00\u4e9b\u5b57\u7b26\uff08\u5982\u2019p\u2019\u6216\u2019q\u2019\uff09\u9700\u8981\u88ab\u6e32\u67d3\u5230\u57fa\u51c6\u7ebf\u4ee5\u4e0b\uff0c\u56e0\u6b64\u5b57\u5f62\u56db\u8fb9\u5f62\u4e5f\u5e94\u8be5\u88ab\u6446\u653e\u5728 RenderText \u7684 y \u503c\u4ee5\u4e0b\u3002 ypos \u7684\u504f\u79fb\u91cf\u53ef\u4ee5\u4ece\u5b57\u5f62\u7684\u5ea6\u91cf\u503c\u4e2d\u5f97\u51fa\uff1a \u8981\u8ba1\u7b97\u8fd9\u6bb5\u8ddd\u79bb\uff0c\u5373\u504f\u79fb\u91cf\uff0c\u6211\u4eec\u9700\u8981\u627e\u51fa\u5b57\u5f62\u5728\u57fa\u51c6\u7ebf\u4e4b\u4e0b\u5ef6\u5c55\u51fa\u53bb\u7684\u8ddd\u79bb\u3002\u5728\u4e0a\u56fe\u4e2d\u8fd9\u6bb5\u8ddd\u79bb\u7528\u7ea2\u8272\u7bad\u5934\u6807\u51fa\u3002\u4ece\u5ea6\u91cf\u503c\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7528\u5b57\u5f62\u7684\u9ad8\u5ea6\u51cf\u53bb bearingY \u6765\u8ba1\u7b97\u8fd9\u6bb5\u5411\u91cf\u7684\u957f\u5ea6\u3002\u5bf9\u4e8e\u90a3\u4e9b\u6b63\u597d\u4f4d\u4e8e\u57fa\u51c6\u7ebf\u4e0a\u7684\u5b57\u7b26\uff08\u5982\u2019X\u2019\uff09\uff0c\u8fd9\u4e2a\u503c\u6b63\u597d\u662f0.0\u3002\u800c\u5bf9\u4e8e\u90a3\u4e9b\u8d85\u51fa\u57fa\u51c6\u7ebf\u7684\u5b57\u7b26\uff08\u5982\u2019g\u2019\u6216\u2019j\u2019\uff09\uff0c\u8fd9\u4e2a\u503c\u5219\u662f\u6b63\u7684\u3002 \u5982\u679c\u4f60\u6bcf\u4ef6\u4e8b\u90fd\u505a\u5bf9\u4e86\uff0c\u90a3\u4e48\u4f60\u73b0\u5728\u5df2\u7ecf\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u8bed\u53e5\u6210\u529f\u6e32\u67d3\u5b57\u7b26\u4e32\u4e86\uff1a RenderText(shader, \"This is sample text\", 25.0f, 25.0f, 1.0f, glm::vec3(0.5, 0.8f, 0.2f)); RenderText(shader, \"(C) LearnOpenGL.com\", 540.0f, 570.0f, 0.5f, glm::vec3(0.3, 0.7f, 0.9f)); \u6e32\u67d3\u6548\u679c\u770b\u4e0a\u53bb\u50cf\u8fd9\u6837\uff1a \u4f60\u53ef\u4ee5\u4ece \u8fd9\u91cc \u83b7\u53d6\u8fd9\u4e2a\u4f8b\u5b50\u7684\u6e90\u4ee3\u7801\u3002 \u4e3a\u4e86\u8ba9\u4f60\u66f4\u597d\u7406\u89e3\u6211\u4eec\u662f\u600e\u4e48\u8ba1\u7b97\u56db\u8fb9\u5f62\u9876\u70b9\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5173\u95ed\u6df7\u5408\u6765\u770b\u770b\u771f\u6b63\u6e32\u67d3\u51fa\u6765\u7684\u56db\u8fb9\u5f62\u662f\u4ec0\u4e48\u6837\u5b50\u7684\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u5927\u90e8\u5206\u7684\u56db\u8fb9\u5f62\u90fd\u4f4d\u4e8e\u4e00\u6761\uff08\u60f3\u8c61\u4e2d\u7684\uff09\u57fa\u51c6\u7ebf\u4e0a\uff0c\u800c\u5bf9\u5e94\u2019p\u2019\u6216\u2019(\u2018\u5b57\u5f62\u7684\u56db\u8fb9\u5f62\u5219\u7a0d\u5fae\u5411\u4e0b\u504f\u79fb\u4e86\u4e00\u4e9b\u3002 \u66f4\u8fdb\u4e00\u6b65 \u672c\u6559\u7a0b\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528FreeType\u5e93\u7ed8\u5236TrueType\u6587\u672c\u3002\u8fd9\u79cd\u65b9\u5f0f\u7075\u6d3b\u3001\u53ef\u7f29\u653e\u5e76\u652f\u6301\u591a\u79cd\u5b57\u7b26\u7f16\u7801\u3002\u7136\u800c\uff0c\u7531\u4e8e\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2a\u5b57\u5f62\u90fd\u751f\u6210\u5e76\u6e32\u67d3\u4e86\u7eb9\u7406\uff0c\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u5e76\u4e0d\u9700\u8981\u8fd9\u4e48\u5f3a\u5927\u7684\u529f\u80fd\u3002\u6027\u80fd\u66f4\u597d\u7684\u4f4d\u56fe\u5b57\u4f53\u4e5f\u8bb8\u662f\u66f4\u53ef\u53d6\u7684\uff0c\u56e0\u4e3a\u5bf9\u6240\u6709\u7684\u5b57\u5f62\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u7eb9\u7406\u3002\u5f53\u7136\uff0c\u6700\u597d\u7684\u65b9\u5f0f\u662f\u7ed3\u5408\u8fd9\u4e24\u79cd\u65b9\u5f0f\uff0c\u52a8\u6001\u751f\u6210\u5305\u542b\u6240\u6709\u5b57\u7b26\u5b57\u5f62\u7684\u4f4d\u56fe\u5b57\u4f53\u7eb9\u7406\uff0c\u5e76\u7528FreeType\u52a0\u8f7d\u3002\u8fd9\u4e3a\u6e32\u67d3\u5668\u8282\u7701\u4e86\u5927\u91cf\u7eb9\u7406\u5207\u6362\u7684\u5f00\u9500\uff0c\u5e76\u4e14\u6839\u636e\u5b57\u5f62\u7684\u6392\u5217\u7d27\u5bc6\u7a0b\u5ea6\u4e5f\u53ef\u4ee5\u8282\u7701\u5f88\u591a\u7684\u6027\u80fd\u5f00\u9500\u3002 \u53e6\u4e00\u4e2a\u4f7f\u7528FreeType\u5b57\u4f53\u7684\u95ee\u9898\u662f\u5b57\u5f62\u7eb9\u7406\u662f\u50a8\u5b58\u4e3a\u4e00\u4e2a\u56fa\u5b9a\u7684\u5b57\u4f53\u5927\u5c0f\u7684\uff0c\u56e0\u6b64\u76f4\u63a5\u5bf9\u5176\u653e\u5927\u5c31\u4f1a\u51fa\u73b0\u952f\u9f7f\u8fb9\u7f18\u3002\u6b64\u5916\uff0c\u5bf9\u5b57\u5f62\u8fdb\u884c\u65cb\u8f6c\u8fd8\u4f1a\u4f7f\u5b83\u4eec\u770b\u4e0a\u53bb\u53d8\u5f97\u6a21\u7cca\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u50a8\u5b58\u6bcf\u4e2a\u50cf\u7d20\u8ddd\u6700\u8fd1\u7684\u5b57\u5f62\u8f6e\u5ed3\u7684\u8ddd\u79bb\uff0c\u800c\u4e0d\u662f\u5149\u6805\u5316\u7684\u50cf\u7d20\u989c\u8272\uff0c\u6765\u7f13\u89e3\u3002\u8fd9\u9879\u6280\u672f\u88ab\u79f0\u4e3a \u6709\u5411\u8ddd\u79bb\u573a (Signed Distance Fields)\uff0cValve\u5728\u51e0\u5e74\u524d\u53d1\u8868\u8fc7\u4e00\u7bc7\u4e86 \u8bba\u6587 \uff0c\u8ba8\u8bba\u4e86\u4ed6\u4eec\u901a\u8fc7\u8fd9\u9879\u6280\u672f\u6765\u83b7\u5f97\u975e\u5e38\u68d2\u76843D\u6e32\u67d3\u6548\u679c\u3002","title":"\u6587\u672c\u6e32\u67d3"},{"location":"06%20In%20Practice/02%20Text%20Rendering/#_1","text":"\u539f\u6587 Text Rendering \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 Geequlim \u6821\u5bf9 gjy_1992, BLumia \u5f53\u4f60\u5728\u56fe\u5f62\u8ba1\u7b97\u9886\u57df\u5192\u9669\u5230\u4e86\u4e00\u5b9a\u9636\u6bb5\u4ee5\u540e\u4f60\u53ef\u80fd\u4f1a\u60f3\u4f7f\u7528OpenGL\u6765\u7ed8\u5236\u6587\u672c\u3002\u7136\u800c\uff0c\u53ef\u80fd\u4e0e\u4f60\u60f3\u8c61\u7684\u5e76\u4e0d\u4e00\u6837\uff0c\u4f7f\u7528\u50cfOpenGL\u8fd9\u6837\u7684\u5e95\u5c42\u5e93\u6765\u628a\u6587\u672c\u6e32\u67d3\u5230\u5c4f\u5e55\u4e0a\u5e76\u4e0d\u662f\u4e00\u4ef6\u7b80\u5355\u7684\u4e8b\u60c5\u3002\u5982\u679c\u4f60\u53ea\u9700\u8981\u7ed8\u5236128\u79cd\u4e0d\u540c\u7684\u5b57\u7b26(Character)\uff0c\u90a3\u4e48\u4e8b\u60c5\u53ef\u80fd\u4f1a\u7b80\u5355\u4e00\u4e9b\u3002\u4f46\u662f\u5982\u679c\u4f60\u8981\u7ed8\u5236\u7684\u5b57\u7b26\u6709\u7740\u4e0d\u540c\u7684\u5bbd\u3001\u9ad8\u548c\u8fb9\u8ddd\uff0c\u4e8b\u60c5\u9a6c\u4e0a\u5c31\u590d\u6742\u4e86\u3002\u6839\u636e\u4f60\u4f7f\u7528\u8bed\u8a00\u7684\u4e0d\u540c\uff0c\u4f60\u53ef\u80fd\u4f1a\u9700\u8981\u591a\u4e8e128\u4e2a\u5b57\u7b26\u3002\u518d\u8005\uff0c\u5982\u679c\u4f60\u8981\u7ed8\u5236\u97f3\u4e50\u7b26\u3001\u6570\u5b66\u7b26\u53f7\u8fd9\u4e9b\u7279\u6b8a\u7684\u7b26\u53f7\uff1b\u6216\u8005\u6e32\u67d3\u7ad6\u6392\u6587\u672c\u5462\uff1f\u4e00\u65e6\u4f60\u628a\u6587\u672c\u8fd9\u4e9b\u590d\u6742\u7684\u60c5\u51b5\u8003\u8651\u8fdb\u6765\uff0c\u4f60\u5c31\u4e0d\u4f1a\u5947\u602a\u4e3a\u4ec0\u4e48OpenGL\u8fd9\u6837\u7684\u5e95\u5c42API\u6ca1\u6709\u5305\u542b\u6587\u672c\u5904\u7406\u4e86\u3002 \u7531\u4e8eOpenGL\u672c\u8eab\u5e76\u6ca1\u6709\u5305\u542b\u4efb\u4f55\u7684\u6587\u672c\u5904\u7406\u80fd\u529b\uff0c\u6211\u4eec\u5fc5\u987b\u81ea\u5df1\u5b9a\u4e49\u4e00\u5957\u5168\u65b0\u7684\u7cfb\u7edf\u8ba9OpenGL\u7ed8\u5236\u6587\u672c\u5230\u5c4f\u5e55\u4e0a\u3002\u7531\u4e8e\u6587\u672c\u5b57\u7b26\u6ca1\u6709\u56fe\u5143\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u6709\u70b9\u521b\u9020\u529b\u624d\u884c\u3002\u9700\u8981\u4f7f\u7528\u7684\u4e00\u4e9b\u6280\u672f\u53ef\u4ee5\u662f\uff1a\u901a\u8fc7 GL_LINES \u6765\u7ed8\u5236\u5b57\u5f62\uff0c\u521b\u5efa\u6587\u672c\u76843D\u7f51\u683c(Mesh)\uff0c\u6216\u57283D\u73af\u5883\u4e2d\u5c06\u5b57\u7b26\u7eb9\u7406\u6e32\u67d3\u52302D\u56db\u8fb9\u5f62\u4e0a\u3002 \u5f00\u53d1\u8005\u6700\u5e38\u7528\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u5c06\u5b57\u7b26\u7eb9\u7406\u7ed8\u5236\u5230\u56db\u8fb9\u5f62\u4e0a\u3002\u7ed8\u5236\u8fd9\u4e9b\u7eb9\u7406\u56db\u8fb9\u5f62\u672c\u8eab\u5176\u5b9e\u5e76\u4e0d\u662f\u5f88\u590d\u6742\uff0c\u7136\u800c\u68c0\u7d22\u8981\u7ed8\u5236\u6587\u672c\u7684\u7eb9\u7406\u5374\u53d8\u6210\u4e86\u4e00\u9879\u6709\u6311\u6218\u6027\u7684\u5de5\u4f5c\u3002\u672c\u6559\u7a0b\u5c06\u63a2\u7d22\u591a\u79cd\u6587\u672c\u6e32\u67d3\u7684\u5b9e\u73b0\u65b9\u6cd5\uff0c\u5e76\u4e14\u4f7f\u7528FreeType\u5e93\u5b9e\u73b0\u4e00\u4e2a\u66f4\u52a0\u9ad8\u7ea7\u4f46\u66f4\u7075\u6d3b\u7684\u6e32\u67d3\u6587\u672c\u6280\u672f\u3002","title":"\u6587\u672c\u6e32\u67d3"},{"location":"06%20In%20Practice/02%20Text%20Rendering/#_2","text":"\u65e9\u671f\u7684\u65f6\u5019\uff0c\u6e32\u67d3\u6587\u672c\u662f\u901a\u8fc7\u9009\u62e9\u4e00\u4e2a\u9700\u8981\u7684\u5b57\u4f53(Font)\uff08\u6216\u8005\u81ea\u5df1\u521b\u5efa\u4e00\u4e2a\uff09\uff0c\u5e76\u63d0\u53d6\u8fd9\u4e2a\u5b57\u4f53\u4e2d\u6240\u6709\u76f8\u5173\u7684\u5b57\u7b26\uff0c\u5c06\u5b83\u4eec\u653e\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u5927\u7eb9\u7406\u4e2d\u6765\u5b9e\u73b0\u7684\u3002\u8fd9\u6837\u4e00\u5f20\u7eb9\u7406\u53eb\u505a \u4f4d\u56fe\u5b57\u4f53 (Bitmap Font)\uff0c\u5b83\u5728\u7eb9\u7406\u7684\u9884\u5b9a\u4e49\u533a\u57df\u4e2d\u5305\u542b\u4e86\u6211\u4eec\u60f3\u8981\u4f7f\u7528\u7684\u6240\u6709\u5b57\u7b26\u3002\u5b57\u4f53\u7684\u8fd9\u4e9b\u5b57\u7b26\u88ab\u79f0\u4e3a \u5b57\u5f62 (Glyph)\u3002\u6bcf\u4e2a\u5b57\u5f62\u90fd\u5173\u8054\u7740\u4e00\u4e2a\u7279\u5b9a\u7684\u7eb9\u7406\u5750\u6807\u533a\u57df\u3002\u5f53\u4f60\u60f3\u8981\u6e32\u67d3\u4e00\u4e2a\u5b57\u7b26\u7684\u65f6\u5019\uff0c\u4f60\u53ea\u9700\u8981\u901a\u8fc7\u6e32\u67d3\u8fd9\u4e00\u5757\u7279\u5b9a\u7684\u4f4d\u56fe\u5b57\u4f53\u533a\u57df\u52302D\u56db\u8fb9\u5f62\u4e0a\u5373\u53ef\u3002 \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u53d6\u4e00\u5f20\u4f4d\u56fe\u5b57\u4f53\uff0c\uff08\u901a\u8fc7\u4ed4\u7ec6\u9009\u62e9\u7eb9\u7406\u5750\u6807\uff09\u4ece\u7eb9\u7406\u4e2d\u91c7\u6837\u5bf9\u5e94\u7684\u5b57\u5f62\uff0c\u5e76\u6e32\u67d3\u5b83\u4eec\u5230\u591a\u4e2a2D\u56db\u8fb9\u5f62\u4e0a\uff0c\u6700\u7ec8\u6e32\u67d3\u51fa\u201cOpenGL\u201d\u6587\u672c\u3002\u901a\u8fc7\u542f\u7528 \u6df7\u5408 \uff0c\u8ba9\u80cc\u666f\u4fdd\u6301\u900f\u660e\uff0c\u6700\u7ec8\u5c31\u80fd\u6e32\u67d3\u4e00\u4e2a\u5b57\u7b26\u4e32\u5230\u5c4f\u5e55\u4e0a\u3002\u8fd9\u4e2a\u4f4d\u56fe\u5b57\u4f53\u662f\u901a\u8fc7Codehead\u7684\u4f4d\u56fe \u5b57\u4f53\u751f\u6210\u5668 \u751f\u6210\u7684\u3002 \u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u7ed8\u5236\u6587\u672c\u6709\u8bb8\u591a\u4f18\u52bf\u4e5f\u6709\u5f88\u591a\u7f3a\u70b9\u3002\u9996\u5148\uff0c\u5b83\u76f8\u5bf9\u6765\u8bf4\u5f88\u5bb9\u6613\u5b9e\u73b0\uff0c\u5e76\u4e14\u56e0\u4e3a\u4f4d\u56fe\u5b57\u4f53\u5df2\u7ecf\u9884\u5149\u6805\u5316\u4e86\uff0c\u5b83\u7684\u6548\u7387\u4e5f\u5f88\u9ad8\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4e0d\u591f\u7075\u6d3b\u3002\u5f53\u4f60\u60f3\u8981\u4f7f\u7528\u4e0d\u540c\u7684\u5b57\u4f53\u65f6\uff0c\u4f60\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u4e00\u5957\u5168\u65b0\u7684\u4f4d\u56fe\u5b57\u4f53\uff0c\u800c\u4e14\u4f60\u7684\u7a0b\u5e8f\u4f1a\u88ab\u9650\u5236\u5728\u4e00\u4e2a\u56fa\u5b9a\u7684\u5206\u8fa8\u7387\u3002\u5982\u679c\u4f60\u5bf9\u8fd9\u4e9b\u6587\u672c\u8fdb\u884c\u7f29\u653e\u7684\u8bdd\u4f60\u4f1a\u770b\u5230\u6587\u672c\u7684\u50cf\u7d20\u8fb9\u7f18\u3002\u6b64\u5916\uff0c\u8fd9\u79cd\u65b9\u5f0f\u901a\u5e38\u4f1a\u5c40\u9650\u4e8e\u975e\u5e38\u5c0f\u7684\u5b57\u7b26\u96c6\uff0c\u5982\u679c\u4f60\u60f3\u8ba9\u5b83\u6765\u652f\u6301Extended\u6216\u8005Unicode\u5b57\u7b26\u7684\u8bdd\u5c31\u5f88\u4e0d\u73b0\u5b9e\u4e86\u3002 \u8fd9\u79cd\u7ed8\u5236\u6587\u672c\u7684\u65b9\u5f0f\u66fe\u7ecf\u5f97\u76ca\u4e8e\u5b83\u7684\u9ad8\u901f\u548c\u53ef\u79fb\u690d\u6027\u800c\u975e\u5e38\u6d41\u884c\uff0c\u7136\u800c\u73b0\u5728\u5df2\u7ecf\u51fa\u73b0\u66f4\u52a0\u7075\u6d3b\u7684\u65b9\u5f0f\u4e86\u3002\u5176\u4e2d\u4e00\u4e2a\u662f\u6211\u4eec\u5373\u5c06\u8ba8\u8bba\u7684\u4f7f\u7528FreeType\u5e93\u6765\u52a0\u8f7dTrueType\u5b57\u4f53\u7684\u65b9\u5f0f\u3002","title":"\u7ecf\u5178\u6587\u672c\u6e32\u67d3\uff1a\u4f4d\u56fe\u5b57\u4f53"},{"location":"06%20In%20Practice/02%20Text%20Rendering/#freetype","text":"FreeType\u662f\u4e00\u4e2a\u80fd\u591f\u7528\u4e8e\u52a0\u8f7d\u5b57\u4f53\u5e76\u5c06\u4ed6\u4eec\u6e32\u67d3\u5230\u4f4d\u56fe\u4ee5\u53ca\u63d0\u4f9b\u591a\u79cd\u5b57\u4f53\u76f8\u5173\u7684\u64cd\u4f5c\u7684\u8f6f\u4ef6\u5f00\u53d1\u5e93\u3002\u5b83\u662f\u4e00\u4e2a\u975e\u5e38\u53d7\u6b22\u8fce\u7684\u8de8\u5e73\u53f0\u5b57\u4f53\u5e93\uff0c\u5b83\u88ab\u7528\u4e8eMac OS X\u3001Java\u3001PlayStation\u4e3b\u673a\u3001Linux\u3001Android\u7b49\u5e73\u53f0\u3002FreeType\u7684\u771f\u6b63\u5438\u5f15\u529b\u5728\u4e8e\u5b83\u80fd\u591f\u52a0\u8f7dTrueType\u5b57\u4f53\u3002 TrueType\u5b57\u4f53\u4e0d\u662f\u7528\u50cf\u7d20\u6216\u5176\u4ed6\u4e0d\u53ef\u7f29\u653e\u7684\u65b9\u5f0f\u6765\u5b9a\u4e49\u7684\uff0c\u5b83\u662f\u901a\u8fc7\u6570\u5b66\u516c\u5f0f\uff08\u66f2\u7ebf\u7684\u7ec4\u5408\uff09\u6765\u5b9a\u4e49\u7684\u3002\u7c7b\u4f3c\u4e8e\u77e2\u91cf\u56fe\u50cf\uff0c\u8fd9\u4e9b\u5149\u6805\u5316\u540e\u7684\u5b57\u4f53\u56fe\u50cf\u53ef\u4ee5\u6839\u636e\u9700\u8981\u7684\u5b57\u4f53\u9ad8\u5ea6\u6765\u751f\u6210\u3002\u901a\u8fc7\u4f7f\u7528TrueType\u5b57\u4f53\uff0c\u4f60\u53ef\u4ee5\u8f7b\u6613\u6e32\u67d3\u4e0d\u540c\u5927\u5c0f\u7684\u5b57\u5f62\u800c\u4e0d\u9020\u6210\u4efb\u4f55\u8d28\u91cf\u635f\u5931\u3002 FreeType\u53ef\u4ee5\u5728\u4ed6\u4eec\u7684 \u5b98\u65b9\u7f51\u7ad9 \u4e2d\u4e0b\u8f7d\u5230\u3002\u4f60\u53ef\u4ee5\u9009\u62e9\u81ea\u5df1\u7528\u6e90\u7801\u7f16\u8bd1\u8fd9\u4e2a\u5e93\uff0c\u5982\u679c\u652f\u6301\u4f60\u7684\u5e73\u53f0\u7684\u8bdd\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4ed6\u4eec\u9884\u7f16\u8bd1\u597d\u7684\u5e93\u3002\u8bf7\u786e\u8ba4\u4f60\u5c06 freetype.lib \u6dfb\u52a0\u5230\u4f60\u9879\u76ee\u7684\u94fe\u63a5\u5e93\u4e2d\uff0c\u5e76\u4e14\u786e\u8ba4\u7f16\u8bd1\u5668\u77e5\u9053\u5934\u6587\u4ef6\u7684\u4f4d\u7f6e\u3002 \u7136\u540e\u8bf7\u786e\u8ba4\u5305\u542b\u5408\u9002\u7684\u5934\u6587\u4ef6\uff1a #include <ft2build.h> #include FT_FREETYPE_H Attention \u7531\u4e8eFreeType\u7684\u5f00\u53d1\u65b9\u5f0f\uff08\u81f3\u5c11\u5728\u6211\u5199\u8fd9\u7bc7\u6587\u7ae0\u7684\u65f6\u5019\uff09\uff0c\u4f60\u4e0d\u80fd\u5c06\u5b83\u4eec\u7684\u5934\u6587\u4ef6\u653e\u5230\u4e00\u4e2a\u65b0\u7684\u76ee\u5f55\u4e0b\u3002\u5b83\u4eec\u5e94\u8be5\u4fdd\u5b58\u5728\u4f60include\u76ee\u5f55\u7684\u6839\u76ee\u5f55\u4e0b\u3002\u901a\u8fc7\u4f7f\u7528\u50cf #include <FreeType/ft2build.h> \u8fd9\u6837\u7684\u65b9\u5f0f\u5bfc\u5165FreeType\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e9b\u5934\u6587\u4ef6\u51b2\u7a81\u7684\u95ee\u9898\u3002 FreeType\u6240\u505a\u7684\u4e8b\u5c31\u662f\u52a0\u8f7dTrueType\u5b57\u4f53\u5e76\u4e3a\u6bcf\u4e00\u4e2a\u5b57\u5f62\u751f\u6210\u4f4d\u56fe\u4ee5\u53ca\u8ba1\u7b97\u51e0\u4e2a\u5ea6\u91cf\u503c(Metric)\u3002\u6211\u4eec\u53ef\u4ee5\u63d0\u53d6\u51fa\u5b83\u751f\u6210\u7684\u4f4d\u56fe\u4f5c\u4e3a\u5b57\u5f62\u7684\u7eb9\u7406\uff0c\u5e76\u4f7f\u7528\u8fd9\u4e9b\u5ea6\u91cf\u503c\u5b9a\u4f4d\u5b57\u7b26\u7684\u5b57\u5f62\u3002 \u8981\u52a0\u8f7d\u4e00\u4e2a\u5b57\u4f53\uff0c\u6211\u4eec\u53ea\u9700\u8981\u521d\u59cb\u5316FreeType\u5e93\uff0c\u5e76\u4e14\u5c06\u8fd9\u4e2a\u5b57\u4f53\u52a0\u8f7d\u4e3a\u4e00\u4e2aFreeType\u79f0\u4e4b\u4e3a \u9762 (Face)\u7684\u4e1c\u897f\u3002\u8fd9\u91cc\u4e3a\u6211\u4eec\u52a0\u8f7d\u4e00\u4e2a\u4ece Windows/Fonts \u76ee\u5f55\u4e2d\u62f7\u8d1d\u6765\u7684TrueType\u5b57\u4f53\u6587\u4ef6 arial.ttf \u3002 FT_Library ft; if (FT_Init_FreeType(&ft)) std::cout << \"ERROR::FREETYPE: Could not init FreeType Library\" << std::endl; FT_Face face; if (FT_New_Face(ft, \"fonts/arial.ttf\", 0, &face)) std::cout << \"ERROR::FREETYPE: Failed to load font\" << std::endl; \u8fd9\u4e9bFreeType\u51fd\u6570\u5728\u51fa\u73b0\u9519\u8bef\u65f6\u5c06\u8fd4\u56de\u4e00\u4e2a\u975e\u96f6\u7684\u6574\u6570\u503c\u3002 \u5f53\u9762\u52a0\u8f7d\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u5b57\u4f53\u5927\u5c0f\uff0c\u8fd9\u8868\u793a\u7740\u6211\u4eec\u8981\u4ece\u5b57\u4f53\u9762\u4e2d\u751f\u6210\u591a\u5927\u7684\u5b57\u5f62\uff1a FT_Set_Pixel_Sizes(face, 0, 48); \u6b64\u51fd\u6570\u8bbe\u7f6e\u4e86\u5b57\u4f53\u9762\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff0c\u5c06\u5bbd\u5ea6\u503c\u8bbe\u4e3a0\u8868\u793a\u6211\u4eec\u8981\u4ece\u5b57\u4f53\u9762\u901a\u8fc7\u7ed9\u5b9a\u7684\u9ad8\u5ea6\u4e2d\u52a8\u6001\u8ba1\u7b97\u51fa\u5b57\u5f62\u7684\u5bbd\u5ea6\u3002 \u4e00\u4e2aFreeType\u9762\u4e2d\u5305\u542b\u4e86\u4e00\u4e2a\u5b57\u5f62\u7684\u96c6\u5408\u3002\u6211\u4eec\u53ef\u4ee5\u8c03\u7528 FT_Load_Char \u51fd\u6570\u6765\u5c06\u5176\u4e2d\u4e00\u4e2a\u5b57\u5f62\u8bbe\u7f6e\u4e3a\u6fc0\u6d3b\u5b57\u5f62\u3002\u8fd9\u91cc\u6211\u4eec\u9009\u62e9\u52a0\u8f7d\u5b57\u7b26\u5b57\u5f62\u2019X\u2019\uff1a if (FT_Load_Char(face, 'X', FT_LOAD_RENDER)) std::cout << \"ERROR::FREETYTPE: Failed to load Glyph\" << std::endl; \u901a\u8fc7\u5c06 FT_LOAD_RENDER \u8bbe\u4e3a\u52a0\u8f7d\u6807\u8bb0\u4e4b\u4e00\uff0c\u6211\u4eec\u544a\u8bc9FreeType\u53bb\u521b\u5efa\u4e00\u4e2a8\u4f4d\u7684\u7070\u5ea6\u4f4d\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 face->glyph->bitmap \u6765\u8bbf\u95ee\u8fd9\u4e2a\u4f4d\u56fe\u3002 \u4f7f\u7528FreeType\u52a0\u8f7d\u7684\u6bcf\u4e2a\u5b57\u5f62\u6ca1\u6709\u76f8\u540c\u7684\u5927\u5c0f\uff08\u4e0d\u50cf\u4f4d\u56fe\u5b57\u4f53\u90a3\u6837\uff09\u3002\u4f7f\u7528FreeType\u751f\u6210\u7684\u4f4d\u56fe\u7684\u5927\u5c0f\u6070\u597d\u80fd\u5305\u542b\u8fd9\u4e2a\u5b57\u7b26\u53ef\u89c1\u533a\u57df\u3002\u4f8b\u5982\u751f\u6210\u7528\u4e8e\u8868\u793a\u2019.\u2019\u7684\u4f4d\u56fe\u7684\u5927\u5c0f\u8981\u6bd4\u8868\u793a\u2019X\u2019\u7684\u5c0f\u5f97\u591a\u3002\u56e0\u6b64\uff0cFreeType\u540c\u6837\u4e5f\u52a0\u8f7d\u4e86\u4e00\u4e9b\u5ea6\u91cf\u503c\u6765\u6307\u5b9a\u6bcf\u4e2a\u5b57\u7b26\u7684\u5927\u5c0f\u548c\u4f4d\u7f6e\u3002\u4e0b\u9762\u8fd9\u5f20\u56fe\u5c55\u793a\u4e86FreeType\u5bf9\u6bcf\u4e00\u4e2a\u5b57\u7b26\u5b57\u5f62\u8ba1\u7b97\u7684\u6240\u6709\u5ea6\u91cf\u503c\u3002 \u6bcf\u4e00\u4e2a\u5b57\u5f62\u90fd\u653e\u5728\u4e00\u4e2a\u6c34\u5e73\u7684 \u57fa\u51c6\u7ebf (Baseline)\u4e0a\uff08\u5373\u4e0a\u56fe\u4e2d\u6c34\u5e73\u7bad\u5934\u6307\u793a\u7684\u90a3\u6761\u7ebf\uff09\u3002\u4e00\u4e9b\u5b57\u5f62\u6070\u597d\u4f4d\u4e8e\u57fa\u51c6\u7ebf\u4e0a\uff08\u5982\u2019X\u2019\uff09\uff0c\u800c\u53e6\u4e00\u4e9b\u5219\u4f1a\u7a0d\u5fae\u8d8a\u8fc7\u57fa\u51c6\u7ebf\u4ee5\u4e0b\uff08\u5982\u2019g\u2019\u6216\u2019p\u2019\uff09\uff08\u8bd1\u6ce8\uff1a\u5373\u8fd9\u4e9b\u5e26\u6709\u4e0b\u4f38\u90e8\u7684\u5b57\u6bcd\uff0c\u53ef\u4ee5\u89c1 \u8fd9\u91cc \uff09\u3002\u8fd9\u4e9b\u5ea6\u91cf\u503c\u7cbe\u786e\u5b9a\u4e49\u4e86\u6446\u653e\u5b57\u5f62\u6240\u9700\u7684\u6bcf\u4e2a\u5b57\u5f62\u8ddd\u79bb\u57fa\u51c6\u7ebf\u7684\u504f\u79fb\u91cf\uff0c\u6bcf\u4e2a\u5b57\u5f62\u7684\u5927\u5c0f\uff0c\u4ee5\u53ca\u9700\u8981\u9884\u7559\u591a\u5c11\u7a7a\u95f4\u6765\u6e32\u67d3\u4e0b\u4e00\u4e2a\u5b57\u5f62\u3002\u4e0b\u9762\u8fd9\u4e2a\u8868\u5217\u51fa\u4e86\u6211\u4eec\u9700\u8981\u7684\u6240\u6709\u5c5e\u6027\u3002 \u5c5e\u6027 \u83b7\u53d6\u65b9\u5f0f \u751f\u6210\u4f4d\u56fe\u63cf\u8ff0 width face->glyph->bitmap.width \u4f4d\u56fe\u5bbd\u5ea6\uff08\u50cf\u7d20\uff09 height face->glyph->bitmap.rows \u4f4d\u56fe\u9ad8\u5ea6\uff08\u50cf\u7d20\uff09 bearingX face->glyph->bitmap_left \u6c34\u5e73\u8ddd\u79bb\uff0c\u5373\u4f4d\u56fe\u76f8\u5bf9\u4e8e\u539f\u70b9\u7684\u6c34\u5e73\u4f4d\u7f6e\uff08\u50cf\u7d20\uff09 bearingY face->glyph->bitmap_top \u5782\u76f4\u8ddd\u79bb\uff0c\u5373\u4f4d\u56fe\u76f8\u5bf9\u4e8e\u57fa\u51c6\u7ebf\u7684\u5782\u76f4\u4f4d\u7f6e\uff08\u50cf\u7d20\uff09 advance face->glyph->advance.x \u6c34\u5e73\u9884\u7559\u503c\uff0c\u5373\u539f\u70b9\u5230\u4e0b\u4e00\u4e2a\u5b57\u5f62\u539f\u70b9\u7684\u6c34\u5e73\u8ddd\u79bb\uff08\u5355\u4f4d\uff1a1/64\u50cf\u7d20\uff09 \u5728\u9700\u8981\u6e32\u67d3\u5b57\u7b26\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u52a0\u8f7d\u4e00\u4e2a\u5b57\u7b26\u5b57\u5f62\uff0c\u83b7\u53d6\u5b83\u7684\u5ea6\u91cf\u503c\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u7eb9\u7406\uff0c\u4f46\u6bcf\u4e00\u5e27\u90fd\u8fd9\u6837\u505a\u4f1a\u975e\u5e38\u6ca1\u6709\u6548\u7387\u3002\u6211\u4eec\u5e94\u5c06\u8fd9\u4e9b\u751f\u6210\u7684\u6570\u636e\u50a8\u5b58\u5728\u7a0b\u5e8f\u7684\u67d0\u4e00\u4e2a\u5730\u65b9\uff0c\u5728\u9700\u8981\u6e32\u67d3\u5b57\u7b26\u7684\u65f6\u5019\u518d\u53bb\u8c03\u7528\u3002\u6211\u4eec\u4f1a\u5b9a\u4e49\u4e00\u4e2a\u975e\u5e38\u65b9\u4fbf\u7684\u7ed3\u6784\u4f53\uff0c\u5e76\u5c06\u8fd9\u4e9b\u7ed3\u6784\u4f53\u5b58\u50a8\u5728\u4e00\u4e2a map \u4e2d\u3002 struct Character { GLuint TextureID; // \u5b57\u5f62\u7eb9\u7406\u7684ID glm::ivec2 Size; // \u5b57\u5f62\u5927\u5c0f glm::ivec2 Bearing; // \u4ece\u57fa\u51c6\u7ebf\u5230\u5b57\u5f62\u5de6\u90e8/\u9876\u90e8\u7684\u504f\u79fb\u503c GLuint Advance; // \u539f\u70b9\u8ddd\u4e0b\u4e00\u4e2a\u5b57\u5f62\u539f\u70b9\u7684\u8ddd\u79bb }; std::map<GLchar, Character> Characters; \u5bf9\u4e8e\u8fd9\u4e2a\u6559\u7a0b\u6765\u8bf4\uff0c\u672c\u7740\u8ba9\u4e00\u5207\u7b80\u5355\u7684\u76ee\u7684\uff0c\u6211\u4eec\u53ea\u751f\u6210ASCII\u5b57\u7b26\u96c6\u7684\u524d128\u4e2a\u5b57\u7b26\u3002\u5bf9\u6bcf\u4e00\u4e2a\u5b57\u7b26\uff0c\u6211\u4eec\u751f\u6210\u4e00\u4e2a\u7eb9\u7406\u5e76\u4fdd\u5b58\u76f8\u5173\u6570\u636e\u81f3 Character \u7ed3\u6784\u4f53\u4e2d\uff0c\u4e4b\u540e\u518d\u6dfb\u52a0\u81f3 Characters \u8fd9\u4e2a\u6620\u5c04\u8868\u4e2d\u3002\u8fd9\u6837\u5b50\uff0c\u6e32\u67d3\u4e00\u4e2a\u5b57\u7b26\u6240\u9700\u7684\u6240\u6709\u6570\u636e\u5c31\u90fd\u88ab\u50a8\u5b58\u4e0b\u6765\u5907\u7528\u4e86\u3002 glPixelStorei(GL_UNPACK_ALIGNMENT, 1); //\u7981\u7528\u5b57\u8282\u5bf9\u9f50\u9650\u5236 for (GLubyte c = 0; c < 128; c++) { // \u52a0\u8f7d\u5b57\u7b26\u7684\u5b57\u5f62 if (FT_Load_Char(face, c, FT_LOAD_RENDER)) { std::cout << \"ERROR::FREETYTPE: Failed to load Glyph\" << std::endl; continue; } // \u751f\u6210\u7eb9\u7406 GLuint texture; glGenTextures(1, &texture); glBindTexture(GL_TEXTURE_2D, texture); glTexImage2D( GL_TEXTURE_2D, 0, GL_RED, face->glyph->bitmap.width, face->glyph->bitmap.rows, 0, GL_RED, GL_UNSIGNED_BYTE, face->glyph->bitmap.buffer ); // \u8bbe\u7f6e\u7eb9\u7406\u9009\u9879 glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR); // \u50a8\u5b58\u5b57\u7b26\u4f9b\u4e4b\u540e\u4f7f\u7528 Character character = { texture, glm::ivec2(face->glyph->bitmap.width, face->glyph->bitmap.rows), glm::ivec2(face->glyph->bitmap_left, face->glyph->bitmap_top), face->glyph->advance.x }; Characters.insert(std::pair<GLchar, Character>(c, character)); } \u5728\u8fd9\u4e2afor\u5faa\u73af\u4e2d\u6211\u4eec\u904d\u5386\u4e86ASCII\u96c6\u4e2d\u7684\u5168\u90e8128\u4e2a\u5b57\u7b26\uff0c\u5e76\u83b7\u53d6\u5b83\u4eec\u5bf9\u5e94\u7684\u5b57\u7b26\u5b57\u5f62\u3002\u5bf9\u6bcf\u4e00\u4e2a\u5b57\u7b26\uff0c\u6211\u4eec\u751f\u6210\u4e86\u4e00\u4e2a\u7eb9\u7406\uff0c\u8bbe\u7f6e\u4e86\u5b83\u7684\u9009\u9879\uff0c\u5e76\u50a8\u5b58\u4e86\u5b83\u7684\u5ea6\u91cf\u503c\u3002\u6709\u8da3\u7684\u662f\u6211\u4eec\u8fd9\u91cc\u5c06\u7eb9\u7406\u7684 internalFormat \u548c format \u8bbe\u7f6e\u4e3a GL_RED \u3002\u901a\u8fc7\u5b57\u5f62\u751f\u6210\u7684\u4f4d\u56fe\u662f\u4e00\u4e2a8\u4f4d\u7070\u5ea6\u56fe\uff0c\u5b83\u7684\u6bcf\u4e00\u4e2a\u989c\u8272\u90fd\u7531\u4e00\u4e2a\u5b57\u8282\u6765\u8868\u793a\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06\u4f4d\u56fe\u7f13\u51b2\u7684\u6bcf\u4e00\u5b57\u8282\u90fd\u4f5c\u4e3a\u7eb9\u7406\u7684\u989c\u8272\u503c\u3002\u8fd9\u662f\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u7279\u6b8a\u7684\u7eb9\u7406\u5b9e\u73b0\u7684\uff0c\u8fd9\u4e2a\u7eb9\u7406\u7684\u6bcf\u4e00\u5b57\u8282\u90fd\u5bf9\u5e94\u7740\u7eb9\u7406\u989c\u8272\u7684\u7ea2\u8272\u5206\u91cf\uff08\u989c\u8272\u5411\u91cf\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\uff09\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u5b57\u8282\u6765\u8868\u793a\u7eb9\u7406\u7684\u989c\u8272\uff0c\u6211\u4eec\u9700\u8981\u6ce8\u610fOpenGL\u7684\u4e00\u4e2a\u9650\u5236\uff1a glPixelStorei(GL_UNPACK_ALIGNMENT, 1); OpenGL\u8981\u6c42\u6240\u6709\u7684\u7eb9\u7406\u90fd\u662f4\u5b57\u8282\u5bf9\u9f50\u7684\uff0c\u5373\u7eb9\u7406\u7684\u5927\u5c0f\u6c38\u8fdc\u662f4\u5b57\u8282\u7684\u500d\u6570\u3002\u901a\u5e38\u8fd9\u5e76\u4e0d\u4f1a\u51fa\u73b0\u4ec0\u4e48\u95ee\u9898\uff0c\u56e0\u4e3a\u5927\u90e8\u5206\u7eb9\u7406\u7684\u5bbd\u5ea6\u90fd\u4e3a4\u7684\u500d\u6570\u5e76/\u6216\u6bcf\u50cf\u7d20\u4f7f\u75284\u4e2a\u5b57\u8282\uff0c\u4f46\u662f\u73b0\u5728\u6211\u4eec\u6bcf\u4e2a\u50cf\u7d20\u53ea\u7528\u4e86\u4e00\u4e2a\u5b57\u8282\uff0c\u5b83\u53ef\u4ee5\u662f\u4efb\u610f\u7684\u5bbd\u5ea6\u3002\u901a\u8fc7\u5c06\u7eb9\u7406\u89e3\u538b\u5bf9\u9f50\u53c2\u6570\u8bbe\u4e3a1\uff0c\u8fd9\u6837\u624d\u80fd\u786e\u4fdd\u4e0d\u4f1a\u6709\u5bf9\u9f50\u95ee\u9898\uff08\u5b83\u53ef\u80fd\u4f1a\u9020\u6210\u6bb5\u9519\u8bef\uff09\u3002 \u5f53\u4f60\u5904\u7406\u5b8c\u5b57\u5f62\u540e\u4e0d\u8981\u5fd8\u8bb0\u6e05\u7406FreeType\u7684\u8d44\u6e90\u3002 FT_Done_Face(face); FT_Done_FreeType(ft);","title":"\u73b0\u4ee3\u6587\u672c\u6e32\u67d3\uff1aFreeType"},{"location":"06%20In%20Practice/02%20Text%20Rendering/#_3","text":"\u6211\u4eec\u5c06\u4f7f\u7528\u4e0b\u9762\u7684\u9876\u70b9\u7740\u8272\u5668\u6765\u6e32\u67d3\u5b57\u5f62\uff1a #version 330 core layout (location = 0) in vec4 vertex; // <vec2 pos, vec2 tex> out vec2 TexCoords; uniform mat4 projection; void main() { gl_Position = projection * vec4(vertex.xy, 0.0, 1.0); TexCoords = vertex.zw; } \u6211\u4eec\u5c06\u4f4d\u7f6e\u548c\u7eb9\u7406\u7eb9\u7406\u5750\u6807\u7684\u6570\u636e\u5408\u8d77\u6765\u5b58\u5728\u4e00\u4e2a vec4 \u4e2d\u3002\u8fd9\u4e2a\u9876\u70b9\u7740\u8272\u5668\u5c06\u4f4d\u7f6e\u5750\u6807\u4e0e\u4e00\u4e2a\u6295\u5f71\u77e9\u9635\u76f8\u4e58\uff0c\u5e76\u5c06\u7eb9\u7406\u5750\u6807\u4f20\u9012\u7ed9\u7247\u6bb5\u7740\u8272\u5668\uff1a #version 330 core in vec2 TexCoords; out vec4 color; uniform sampler2D text; uniform vec3 textColor; void main() { vec4 sampled = vec4(1.0, 1.0, 1.0, texture(text, TexCoords).r); color = vec4(textColor, 1.0) * sampled; } \u7247\u6bb5\u7740\u8272\u5668\u6709\u4e24\u4e2auniform\u53d8\u91cf\uff1a\u4e00\u4e2a\u662f\u5355\u989c\u8272\u901a\u9053\u7684\u5b57\u5f62\u4f4d\u56fe\u7eb9\u7406\uff0c\u53e6\u4e00\u4e2a\u662f\u989c\u8272uniform\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u8c03\u6574\u6587\u672c\u7684\u6700\u7ec8\u989c\u8272\u3002\u6211\u4eec\u9996\u5148\u4ece\u4f4d\u56fe\u7eb9\u7406\u4e2d\u91c7\u6837\u989c\u8272\u503c\uff0c\u7531\u4e8e\u7eb9\u7406\u6570\u636e\u4e2d\u4ec5\u5b58\u50a8\u7740\u7ea2\u8272\u5206\u91cf\uff0c\u6211\u4eec\u5c31\u91c7\u6837\u7eb9\u7406\u7684 r \u5206\u91cf\u6765\u4f5c\u4e3a\u53d6\u6837\u7684alpha\u503c\u3002\u901a\u8fc7\u53d8\u6362\u989c\u8272\u7684alpha\u503c\uff0c\u6700\u7ec8\u7684\u989c\u8272\u5728\u5b57\u5f62\u80cc\u666f\u989c\u8272\u4e0a\u4f1a\u662f\u900f\u660e\u7684\uff0c\u800c\u5728\u771f\u6b63\u7684\u5b57\u7b26\u50cf\u7d20\u4e0a\u662f\u4e0d\u900f\u660e\u7684\u3002\u6211\u4eec\u4e5f\u5c06RGB\u989c\u8272\u4e0e textColor \u8fd9\u4e2auniform\u76f8\u4e58\uff0c\u6765\u53d8\u6362\u6587\u672c\u989c\u8272\u3002 \u5f53\u7136\u6211\u4eec\u9700\u8981\u542f\u7528 \u6df7\u5408 \u624d\u80fd\u8ba9\u8fd9\u4e00\u5207\u884c\u4e4b\u6709\u6548\uff1a glEnable(GL_BLEND); glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); \u5bf9\u4e8e\u6295\u5f71\u77e9\u9635\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u6b63\u5c04\u6295\u5f71\u77e9\u9635(Orthographic Projection Matrix)\u3002\u5bf9\u4e8e\u6587\u672c\u6e32\u67d3\u6211\u4eec\uff08\u901a\u5e38\uff09\u90fd\u4e0d\u9700\u8981\u900f\u89c6\uff0c\u4f7f\u7528\u6b63\u5c04\u6295\u5f71\u540c\u6837\u5141\u8bb8\u6211\u4eec\u5728\u5c4f\u5e55\u5750\u6807\u7cfb\u4e2d\u8bbe\u5b9a\u6240\u6709\u7684\u9876\u70b9\u5750\u6807\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u5982\u4e0b\u65b9\u5f0f\u914d\u7f6e\uff1a glm::mat4 projection = glm::ortho(0.0f, 800.0f, 0.0f, 600.0f); \u6211\u4eec\u8bbe\u7f6e\u6295\u5f71\u77e9\u9635\u7684\u5e95\u90e8\u53c2\u6570\u4e3a 0.0f \uff0c\u5e76\u5c06\u9876\u90e8\u53c2\u6570\u8bbe\u7f6e\u4e3a\u7a97\u53e3\u7684\u9ad8\u5ea6\u3002\u8fd9\u6837\u505a\u7684\u7ed3\u679c\u662f\u6211\u4eec\u6307\u5b9a\u4e86y\u5750\u6807\u7684\u8303\u56f4\u4e3a\u5c4f\u5e55\u5e95\u90e8(0.0f)\u81f3\u5c4f\u5e55\u9876\u90e8(600.0f)\u3002\u8fd9\u610f\u5473\u7740\u73b0\u5728\u70b9(0.0, 0.0)\u5bf9\u5e94\u5de6\u4e0b\u89d2\uff08\u8bd1\u6ce8\uff1a\u800c\u4e0d\u518d\u662f\u7a97\u53e3\u6b63\u4e2d\u95f4\uff09\u3002 \u6700\u540e\u8981\u505a\u7684\u4e8b\u662f\u521b\u5efa\u4e00\u4e2aVBO\u548cVAO\u7528\u6765\u6e32\u67d3\u56db\u8fb9\u5f62\u3002\u73b0\u5728\u6211\u4eec\u5728\u521d\u59cb\u5316VBO\u65f6\u5206\u914d\u8db3\u591f\u7684\u5185\u5b58\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5728\u6e32\u67d3\u5b57\u7b26\u7684\u65f6\u5019\u518d\u6765\u66f4\u65b0VBO\u7684\u5185\u5b58\u3002 GLuint VAO, VBO; glGenVertexArrays(1, &VAO); glGenBuffers(1, &VBO); glBindVertexArray(VAO); glBindBuffer(GL_ARRAY_BUFFER, VBO); glBufferData(GL_ARRAY_BUFFER, sizeof(GLfloat) * 6 * 4, NULL, GL_DYNAMIC_DRAW); glEnableVertexAttribArray(0); glVertexAttribPointer(0, 4, GL_FLOAT, GL_FALSE, 4 * sizeof(GLfloat), 0); glBindBuffer(GL_ARRAY_BUFFER, 0); glBindVertexArray(0); \u6bcf\u4e2a2D\u56db\u8fb9\u5f62\u9700\u89816\u4e2a\u9876\u70b9\uff0c\u6bcf\u4e2a\u9876\u70b9\u53c8\u662f\u7531\u4e00\u4e2a4float\u5411\u91cf\uff08\u8bd1\u6ce8\uff1a\u4e00\u4e2a\u7eb9\u7406\u5750\u6807\u548c\u4e00\u4e2a\u9876\u70b9\u5750\u6807\uff09\u7ec4\u6210\uff0c\u56e0\u6b64\u6211\u4eec\u5c06VBO\u7684\u5185\u5b58\u5206\u914d\u4e3a6 * 4\u4e2afloat\u7684\u5927\u5c0f\u3002\u7531\u4e8e\u6211\u4eec\u4f1a\u5728\u7ed8\u5236\u5b57\u7b26\u65f6\u7ecf\u5e38\u66f4\u65b0VBO\u7684\u5185\u5b58\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5185\u5b58\u7c7b\u578b\u8bbe\u7f6e\u4e3a GL_DYNAMIC_DRAW \u3002","title":"\u7740\u8272\u5668"},{"location":"06%20In%20Practice/02%20Text%20Rendering/#_4","text":"\u8981\u6e32\u67d3\u4e00\u4e2a\u5b57\u7b26\uff0c\u6211\u4eec\u4ece\u4e4b\u524d\u521b\u5efa\u7684 Characters \u6620\u5c04\u8868\u4e2d\u53d6\u51fa\u5bf9\u5e94\u7684 Character \u7ed3\u6784\u4f53\uff0c\u5e76\u6839\u636e\u5b57\u7b26\u7684\u5ea6\u91cf\u503c\u6765\u8ba1\u7b97\u56db\u8fb9\u5f62\u7684\u7ef4\u5ea6\u3002\u6839\u636e\u56db\u8fb9\u5f62\u7684\u7ef4\u5ea6\u6211\u4eec\u5c31\u80fd\u52a8\u6001\u8ba1\u7b97\u51fa6\u4e2a\u63cf\u8ff0\u56db\u8fb9\u5f62\u7684\u9876\u70b9\uff0c\u5e76\u4f7f\u7528 glBufferSubData \u51fd\u6570\u66f4\u65b0VBO\u6240\u7ba1\u7406\u5185\u5b58\u7684\u5185\u5bb9\u3002 \u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u53eb\u505a RenderText \u7684\u51fd\u6570\u6e32\u67d3\u4e00\u4e2a\u5b57\u7b26\u4e32\uff1a void RenderText(Shader &s, std::string text, GLfloat x, GLfloat y, GLfloat scale, glm::vec3 color) { // \u6fc0\u6d3b\u5bf9\u5e94\u7684\u6e32\u67d3\u72b6\u6001 s.Use(); glUniform3f(glGetUniformLocation(s.Program, \"textColor\"), color.x, color.y, color.z); glActiveTexture(GL_TEXTURE0); glBindVertexArray(VAO); // \u904d\u5386\u6587\u672c\u4e2d\u6240\u6709\u7684\u5b57\u7b26 std::string::const_iterator c; for (c = text.begin(); c != text.end(); c++) { Character ch = Characters[*c]; GLfloat xpos = x + ch.Bearing.x * scale; GLfloat ypos = y - (ch.Size.y - ch.Bearing.y) * scale; GLfloat w = ch.Size.x * scale; GLfloat h = ch.Size.y * scale; // \u5bf9\u6bcf\u4e2a\u5b57\u7b26\u66f4\u65b0VBO GLfloat vertices[6][4] = { { xpos, ypos + h, 0.0, 0.0 }, { xpos, ypos, 0.0, 1.0 }, { xpos + w, ypos, 1.0, 1.0 }, { xpos, ypos + h, 0.0, 0.0 }, { xpos + w, ypos, 1.0, 1.0 }, { xpos + w, ypos + h, 1.0, 0.0 } }; // \u5728\u56db\u8fb9\u5f62\u4e0a\u7ed8\u5236\u5b57\u5f62\u7eb9\u7406 glBindTexture(GL_TEXTURE_2D, ch.textureID); // \u66f4\u65b0VBO\u5185\u5b58\u7684\u5185\u5bb9 glBindBuffer(GL_ARRAY_BUFFER, VBO); glBufferSubData(GL_ARRAY_BUFFER, 0, sizeof(vertices), vertices); glBindBuffer(GL_ARRAY_BUFFER, 0); // \u7ed8\u5236\u56db\u8fb9\u5f62 glDrawArrays(GL_TRIANGLES, 0, 6); // \u66f4\u65b0\u4f4d\u7f6e\u5230\u4e0b\u4e00\u4e2a\u5b57\u5f62\u7684\u539f\u70b9\uff0c\u6ce8\u610f\u5355\u4f4d\u662f1/64\u50cf\u7d20 x += (ch.Advance >> 6) * scale; // \u4f4d\u504f\u79fb6\u4e2a\u5355\u4f4d\u6765\u83b7\u53d6\u5355\u4f4d\u4e3a\u50cf\u7d20\u7684\u503c (2^6 = 64) } glBindVertexArray(0); glBindTexture(GL_TEXTURE_2D, 0); } \u8fd9\u4e2a\u51fd\u6570\u7684\u5185\u5bb9\u5e94\u8be5\u975e\u5e38\u660e\u663e\u4e86\uff1a\u6211\u4eec\u9996\u5148\u8ba1\u7b97\u51fa\u56db\u8fb9\u5f62\u7684\u539f\u70b9\u5750\u6807\uff08\u4e3a xpos \u548c ypos \uff09\u548c\u5b83\u7684\u5927\u5c0f\uff08\u4e3a w \u548c h \uff09\uff0c\u5e76\u751f\u62106\u4e2a\u9876\u70b9\u5f62\u6210\u8fd9\u4e2a2D\u56db\u8fb9\u5f62\uff1b\u6ce8\u610f\u6211\u4eec\u5c06\u6bcf\u4e2a\u5ea6\u91cf\u503c\u90fd\u4f7f\u7528 scale \u8fdb\u884c\u7f29\u653e\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u66f4\u65b0\u4e86VBO\u7684\u5185\u5bb9\u3001\u5e76\u6e32\u67d3\u4e86\u8fd9\u4e2a\u56db\u8fb9\u5f62\u3002 \u5176\u4e2d\u8fd9\u884c\u4ee3\u7801\u9700\u8981\u52a0\u500d\u7559\u610f\uff1a GLfloat ypos = y - (ch.Size.y - ch.Bearing.y); \u4e00\u4e9b\u5b57\u7b26\uff08\u5982\u2019p\u2019\u6216\u2019q\u2019\uff09\u9700\u8981\u88ab\u6e32\u67d3\u5230\u57fa\u51c6\u7ebf\u4ee5\u4e0b\uff0c\u56e0\u6b64\u5b57\u5f62\u56db\u8fb9\u5f62\u4e5f\u5e94\u8be5\u88ab\u6446\u653e\u5728 RenderText \u7684 y \u503c\u4ee5\u4e0b\u3002 ypos \u7684\u504f\u79fb\u91cf\u53ef\u4ee5\u4ece\u5b57\u5f62\u7684\u5ea6\u91cf\u503c\u4e2d\u5f97\u51fa\uff1a \u8981\u8ba1\u7b97\u8fd9\u6bb5\u8ddd\u79bb\uff0c\u5373\u504f\u79fb\u91cf\uff0c\u6211\u4eec\u9700\u8981\u627e\u51fa\u5b57\u5f62\u5728\u57fa\u51c6\u7ebf\u4e4b\u4e0b\u5ef6\u5c55\u51fa\u53bb\u7684\u8ddd\u79bb\u3002\u5728\u4e0a\u56fe\u4e2d\u8fd9\u6bb5\u8ddd\u79bb\u7528\u7ea2\u8272\u7bad\u5934\u6807\u51fa\u3002\u4ece\u5ea6\u91cf\u503c\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7528\u5b57\u5f62\u7684\u9ad8\u5ea6\u51cf\u53bb bearingY \u6765\u8ba1\u7b97\u8fd9\u6bb5\u5411\u91cf\u7684\u957f\u5ea6\u3002\u5bf9\u4e8e\u90a3\u4e9b\u6b63\u597d\u4f4d\u4e8e\u57fa\u51c6\u7ebf\u4e0a\u7684\u5b57\u7b26\uff08\u5982\u2019X\u2019\uff09\uff0c\u8fd9\u4e2a\u503c\u6b63\u597d\u662f0.0\u3002\u800c\u5bf9\u4e8e\u90a3\u4e9b\u8d85\u51fa\u57fa\u51c6\u7ebf\u7684\u5b57\u7b26\uff08\u5982\u2019g\u2019\u6216\u2019j\u2019\uff09\uff0c\u8fd9\u4e2a\u503c\u5219\u662f\u6b63\u7684\u3002 \u5982\u679c\u4f60\u6bcf\u4ef6\u4e8b\u90fd\u505a\u5bf9\u4e86\uff0c\u90a3\u4e48\u4f60\u73b0\u5728\u5df2\u7ecf\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u8bed\u53e5\u6210\u529f\u6e32\u67d3\u5b57\u7b26\u4e32\u4e86\uff1a RenderText(shader, \"This is sample text\", 25.0f, 25.0f, 1.0f, glm::vec3(0.5, 0.8f, 0.2f)); RenderText(shader, \"(C) LearnOpenGL.com\", 540.0f, 570.0f, 0.5f, glm::vec3(0.3, 0.7f, 0.9f)); \u6e32\u67d3\u6548\u679c\u770b\u4e0a\u53bb\u50cf\u8fd9\u6837\uff1a \u4f60\u53ef\u4ee5\u4ece \u8fd9\u91cc \u83b7\u53d6\u8fd9\u4e2a\u4f8b\u5b50\u7684\u6e90\u4ee3\u7801\u3002 \u4e3a\u4e86\u8ba9\u4f60\u66f4\u597d\u7406\u89e3\u6211\u4eec\u662f\u600e\u4e48\u8ba1\u7b97\u56db\u8fb9\u5f62\u9876\u70b9\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5173\u95ed\u6df7\u5408\u6765\u770b\u770b\u771f\u6b63\u6e32\u67d3\u51fa\u6765\u7684\u56db\u8fb9\u5f62\u662f\u4ec0\u4e48\u6837\u5b50\u7684\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u5927\u90e8\u5206\u7684\u56db\u8fb9\u5f62\u90fd\u4f4d\u4e8e\u4e00\u6761\uff08\u60f3\u8c61\u4e2d\u7684\uff09\u57fa\u51c6\u7ebf\u4e0a\uff0c\u800c\u5bf9\u5e94\u2019p\u2019\u6216\u2019(\u2018\u5b57\u5f62\u7684\u56db\u8fb9\u5f62\u5219\u7a0d\u5fae\u5411\u4e0b\u504f\u79fb\u4e86\u4e00\u4e9b\u3002","title":"\u6e32\u67d3\u4e00\u884c\u6587\u672c"},{"location":"06%20In%20Practice/02%20Text%20Rendering/#_5","text":"\u672c\u6559\u7a0b\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528FreeType\u5e93\u7ed8\u5236TrueType\u6587\u672c\u3002\u8fd9\u79cd\u65b9\u5f0f\u7075\u6d3b\u3001\u53ef\u7f29\u653e\u5e76\u652f\u6301\u591a\u79cd\u5b57\u7b26\u7f16\u7801\u3002\u7136\u800c\uff0c\u7531\u4e8e\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2a\u5b57\u5f62\u90fd\u751f\u6210\u5e76\u6e32\u67d3\u4e86\u7eb9\u7406\uff0c\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u5e76\u4e0d\u9700\u8981\u8fd9\u4e48\u5f3a\u5927\u7684\u529f\u80fd\u3002\u6027\u80fd\u66f4\u597d\u7684\u4f4d\u56fe\u5b57\u4f53\u4e5f\u8bb8\u662f\u66f4\u53ef\u53d6\u7684\uff0c\u56e0\u4e3a\u5bf9\u6240\u6709\u7684\u5b57\u5f62\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u7eb9\u7406\u3002\u5f53\u7136\uff0c\u6700\u597d\u7684\u65b9\u5f0f\u662f\u7ed3\u5408\u8fd9\u4e24\u79cd\u65b9\u5f0f\uff0c\u52a8\u6001\u751f\u6210\u5305\u542b\u6240\u6709\u5b57\u7b26\u5b57\u5f62\u7684\u4f4d\u56fe\u5b57\u4f53\u7eb9\u7406\uff0c\u5e76\u7528FreeType\u52a0\u8f7d\u3002\u8fd9\u4e3a\u6e32\u67d3\u5668\u8282\u7701\u4e86\u5927\u91cf\u7eb9\u7406\u5207\u6362\u7684\u5f00\u9500\uff0c\u5e76\u4e14\u6839\u636e\u5b57\u5f62\u7684\u6392\u5217\u7d27\u5bc6\u7a0b\u5ea6\u4e5f\u53ef\u4ee5\u8282\u7701\u5f88\u591a\u7684\u6027\u80fd\u5f00\u9500\u3002 \u53e6\u4e00\u4e2a\u4f7f\u7528FreeType\u5b57\u4f53\u7684\u95ee\u9898\u662f\u5b57\u5f62\u7eb9\u7406\u662f\u50a8\u5b58\u4e3a\u4e00\u4e2a\u56fa\u5b9a\u7684\u5b57\u4f53\u5927\u5c0f\u7684\uff0c\u56e0\u6b64\u76f4\u63a5\u5bf9\u5176\u653e\u5927\u5c31\u4f1a\u51fa\u73b0\u952f\u9f7f\u8fb9\u7f18\u3002\u6b64\u5916\uff0c\u5bf9\u5b57\u5f62\u8fdb\u884c\u65cb\u8f6c\u8fd8\u4f1a\u4f7f\u5b83\u4eec\u770b\u4e0a\u53bb\u53d8\u5f97\u6a21\u7cca\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u50a8\u5b58\u6bcf\u4e2a\u50cf\u7d20\u8ddd\u6700\u8fd1\u7684\u5b57\u5f62\u8f6e\u5ed3\u7684\u8ddd\u79bb\uff0c\u800c\u4e0d\u662f\u5149\u6805\u5316\u7684\u50cf\u7d20\u989c\u8272\uff0c\u6765\u7f13\u89e3\u3002\u8fd9\u9879\u6280\u672f\u88ab\u79f0\u4e3a \u6709\u5411\u8ddd\u79bb\u573a (Signed Distance Fields)\uff0cValve\u5728\u51e0\u5e74\u524d\u53d1\u8868\u8fc7\u4e00\u7bc7\u4e86 \u8bba\u6587 \uff0c\u8ba8\u8bba\u4e86\u4ed6\u4eec\u901a\u8fc7\u8fd9\u9879\u6280\u672f\u6765\u83b7\u5f97\u975e\u5e38\u68d2\u76843D\u6e32\u67d3\u6548\u679c\u3002","title":"\u66f4\u8fdb\u4e00\u6b65"},{"location":"06%20In%20Practice/2D-Game/01%20Breakout/","text":"Breakout \u539f\u6587 Breakout \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 HHz(qq:1158332489) \u6821\u5bf9 Krasjet \u770b\u5b8c\u524d\u9762\u7684\u6559\u7a0b\u4e4b\u540e\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u4e86\u975e\u5e38\u591a\u7684OpenGL\u5185\u90e8\u5de5\u4f5c\u539f\u7406\uff0c\u5e76\u4e14\u6211\u4eec\u5df2\u7ecf\u80fd\u591f\u7528\u8fd9\u4e9b\u77e5\u8bc6\u7ed8\u5236\u4e00\u4e9b\u590d\u6742\u7684\u56fe\u5f62\u3002\u7136\u800c\uff0c\u9664\u4e86\u4e4b\u524d\u7684\u51e0\u4e2a\u6280\u672f\u6f14\u793a\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u6ca1\u6709\u771f\u6b63\u5229\u7528OpenGL\u5f00\u53d1\u4e00\u4e2a\u5b9e\u9645\u5e94\u7528\u3002\u8fd9\u7bc7\u6559\u7a0b\u4e3aOpenGL 2D\u6e38\u620f\u5236\u4f5c\u7cfb\u5217\u6559\u7a0b\u7684\u5165\u95e8\u7bc7\u3002\u8fd9\u4e2a\u7cfb\u5217\u6559\u7a0b\u5c06\u5c55\u793a\u6211\u4eec\u8be5\u5982\u4f55\u5c06OpenGL\u5e94\u7528\u5230\u66f4\u5927\uff0c\u66f4\u590d\u6742\u7684\u73af\u5883\u4e2d\u3002\u6ce8\u610f\u8fd9\u4e2a\u7cfb\u5217\u6559\u7a0b\u4e0d\u4e00\u5b9a\u4f1a\u5f15\u5165\u65b0\u7684OpenGL\u6982\u5ff5\uff0c\u4f46\u4f1a\u6216\u591a\u6216\u5c11\u5730\u5411\u6211\u4eec\u5c55\u793a\u5982\u4f55\u5c06\u6240\u5b66\u7684\u6982\u5ff5\u5e94\u7528\u5230\u66f4\u5927\u7684\u7a0b\u5e8f\u4e2d\u53bb\u3002 \u7531\u4e8e\u6211\u4eec\u5e0c\u671b\u4e8b\u60c5\u80fd\u591f\u7b80\u5355\u4e00\u70b9\uff0c\u6211\u4eec\u4f1a\u4ee5\u522b\u4eba\u5f00\u53d1\u8fc7\u7684\u4e00\u4e2a2D\u8857\u673a\u6e38\u620f\u4e3a\u57fa\u7840\uff0c\u5f00\u53d1\u6211\u4eec\u81ea\u5df1\u76842D\u6e38\u620f\u3002\u8fd9\u5c31\u662f Breakout \uff0c\u4e00\u4e2a\u4e8e1976\u5e74\u53d1\u5e03\u7684\u8fd0\u884c\u5728Atari 2600\u4e3b\u673a\u4e0a\u7684\u7ecf\u51782D\u6e38\u620f\u3002\u6e38\u620f\u8981\u6c42\u73a9\u5bb6\u901a\u8fc7\u64cd\u63a7\u4e00\u4e2a\u6321\u677f\u53cd\u5f39\u5c0f\u7403\uff0c\u4ee5\u7834\u574f\u6240\u6709\u7684\u7816\u5757\uff0c\u800c\u4e0d\u80fd\u8ba9\u5c0f\u7403\u5230\u8fbe\u5c4f\u5e55\u5e95\u7aef\u3002\u5f53\u73a9\u5bb6\u7834\u574f\u4e86\u6240\u6709\u7816\u5757\u7684\u65f6\u5019\u5373\u4e3a\u5b8c\u6210\u4e86\u6e38\u620f\u3002 \u4e0b\u9762\u6211\u4eec\u53ef\u4ee5\u770b\u5230Breakout\u539f\u672c\u5728Atari 2600\u4e0a\u662f\u4ec0\u4e48\u6837\u5b50\u7684\uff1a \u6e38\u620f\u6709\u4ee5\u4e0b\u51e0\u4e2a\u673a\u5236\uff1a \u73a9\u5bb6\u80fd\u591f\u63a7\u5236\u4e00\u4e2a\u5c0f\u6321\u677f\uff0c\u5b83\u53ea\u80fd\u5728\u5c4f\u5e55\u8303\u56f4\u5185\u5de6\u53f3\u79fb\u52a8\u3002 \u7403\u5728\u5c4f\u5e55\u4e0a\u8fd0\u52a8\uff0c\u6bcf\u4e00\u6b21\u78b0\u649e\u90fd\u4f1a\u4f7f\u7403\u6839\u636e\u78b0\u649e\u4f4d\u7f6e\u6539\u53d8\u8fd0\u52a8\u65b9\u5411\u3002\u5bf9\u5c4f\u5e55\u8fb9\u6846\uff0c\u7816\u5757\uff0c\u6321\u677f\u90fd\u9700\u8981\u6709\u78b0\u649e\u5224\u5b9a\u3002 \u5f53\u7403\u8fd0\u52a8\u5230\u5c4f\u5e55\u5e95\u90e8\u8fb9\u754c\u7684\u65f6\u5019\uff0c\u6e38\u620f\u7ed3\u675f\u6216\u8005\u73a9\u5bb6\u4e27\u5931\u4e00\u70b9\u751f\u547d\u503c\u3002 \u7403\u78b0\u5230\u7816\u5757\u7684\u65f6\u5019\uff0c\u7816\u5757\u4f1a\u88ab\u7834\u574f\u3002 \u5f53\u6240\u6709\u7816\u5757\u90fd\u88ab\u7834\u574f\uff0c\u73a9\u5bb6\u83b7\u80dc\u3002 \u7403\u7684\u65b9\u5411\u53ef\u4ee5\u901a\u8fc7\u7403\u78b0\u649e\u5728\u6321\u677f\u4e0a\u7684\u4f4d\u7f6e\uff08\u5373\u5230\u6321\u677f\u4e2d\u5fc3\u7684\u8ddd\u79bb\uff09\u6765\u64cd\u63a7\u3002 \u7531\u4e8e\u5c0f\u7403\u4f1a\u4e0d\u65f6\u901a\u8fc7\u7f1d\u9699\u5230\u8fbe\u7816\u5899\u7684\u4e0a\u65b9\uff0c\u5b83\u4f1a\u5728\u9876\u90e8\u8fb9\u7f18\u4e0e\u7816\u5757\u5c42\u7684\u4e0a\u8fb9\u7f18\u4e4b\u95f4\u4e0d\u65ad\u5f39\u8df3\u3002\u5c0f\u7403\u4f1a\u4e00\u76f4\u6301\u7eed\u8fd9\u79cd\u72b6\u6001\u76f4\u5230\u6700\u7ec8\u518d\u6b21\u8fdb\u5165\u7f1d\u9699\u6389\u4e0b\u6765\u3002\u8fd9\u4e5f\u662f\u8fd9\u4e2a\u6e38\u620f\u540d\u5b57\u7684\u6765\u6e90\uff0c\u5c0f\u7403\u5fc5\u987b\u8981\u4ece\u7f1d\u9699\u4e2d\u9003\u8131(Break out)\u51fa\u6765\u3002 OpenGL Breakout \u6211\u4eec\u5c06\u628a\u8fd9\u4e2a\u7ecf\u5178\u7684\u8857\u673a\u6e38\u620f\u4f5c\u4e3a\u6211\u4eec\u4e4b\u540e\u8981\u5b8c\u5168\u4f7f\u7528OpenGL\u5b9e\u73b0\u7684\u8fd9\u4e2a\u6e38\u620f\u7684\u57fa\u7840\u3002\u8fd9\u4e2a\u7248\u672c\u7684Breakout\u5c06\u4f1a\u8fd0\u884c\u5728\u663e\u5361\u4e0a\uff0c\u6240\u4ee5\u6211\u4eec\u80fd\u591f\u6539\u8fdb\u7ecf\u5178\u7684Breakout\u6e38\u620f\uff0c\u7ed9\u5b83\u52a0\u4e00\u4e9b\u5f88\u68d2\u7684\u7279\u6027\u3002 \u9664\u4e86\u4ee5\u4e0a\u8fd9\u4e9b\u7ecf\u5178\u7684\u673a\u5236\uff0c\u6211\u4eec\u7684Breakout\u8fd8\u5c06\u62e5\u6709\uff1a \u4f60\u89c1\u8fc7\u6700\u68d2\u7684\u753b\u8d28 \u7c92\u5b50\u7cfb\u7edf \u9ad8\u7ea7\u6587\u5b57\u6e32\u67d3 \u9053\u5177 \u540e\u671f\u5904\u7406\u7279\u6548 \u591a\u4e2a\uff08\u53ef\u81ea\u5b9a\u4e49\u7684\uff09\u5173\u5361 \u4e3a\u4e86\u5f15\u8d77\u5927\u5bb6\u7684\u5174\u8da3\uff0c\u4f60\u53ef\u4ee5\u770b\u770b\u6e38\u620f\u5b8c\u6210\u4e4b\u540e\u7684\u6837\u5b50\uff1a \u8fd9\u4e9b\u6559\u7a0b\u5c06\u4f1a\u7ed3\u5408\u4e4b\u524d\u6559\u7a0b\u4e2d\u7684\u5927\u91cf\u6982\u5ff5\uff0c\u5e76\u4e14\u4f1a\u5c55\u793a\u5982\u4f55\u8ba9\u5b83\u4eec\u4ee5\u4e00\u4e2a\u6574\u4f53\u5de5\u4f5c\u3002\u6240\u4ee5\uff0c\u5728\u4f60\u5f00\u59cb\u8fd9\u4e2a\u7cfb\u5217\u6559\u7a0b\u7684\u5b66\u4e60\u4e4b\u524d\uff0c\u8bf7\u81f3\u5c11\u5b8c\u6210 \u300c\u5165\u95e8\u300d \u7ae0\u8282\u3002 \u800c\u4e14\uff0c\u6709\u4e9b\u6559\u7a0b\u4f1a\u9700\u6c42\u5176\u5b83\u4e00\u4e9b\u6559\u7a0b\u7684\u6982\u5ff5\uff08\u6bd4\u5982\u8bf4\u5728 \u300c\u9ad8\u7ea7OpenGL\u300d \u7ae0\u8282\u4e2d\u7684\u5e27\u7f13\u51b2\uff09\uff0c\u6240\u4ee5\u5f53\u5fc5\u8981\u7684\u65f6\u5019\u6211\u4f1a\u5217\u51fa\u9700\u6c42\u7684\u6559\u7a0b\u3002 \u5982\u679c\u4f60\u5df2\u51c6\u5907\u597d\u5f00\u53d1\u8fd9\u4e2a\u6e38\u620f\uff0c\u53ef\u4ee5\u5f00\u59cb \u4e0b\u4e00\u8282 \u7684\u5b66\u4e60\u4e86\u3002","title":"Breakout"},{"location":"06%20In%20Practice/2D-Game/01%20Breakout/#breakout","text":"\u539f\u6587 Breakout \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 HHz(qq:1158332489) \u6821\u5bf9 Krasjet \u770b\u5b8c\u524d\u9762\u7684\u6559\u7a0b\u4e4b\u540e\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u4e86\u975e\u5e38\u591a\u7684OpenGL\u5185\u90e8\u5de5\u4f5c\u539f\u7406\uff0c\u5e76\u4e14\u6211\u4eec\u5df2\u7ecf\u80fd\u591f\u7528\u8fd9\u4e9b\u77e5\u8bc6\u7ed8\u5236\u4e00\u4e9b\u590d\u6742\u7684\u56fe\u5f62\u3002\u7136\u800c\uff0c\u9664\u4e86\u4e4b\u524d\u7684\u51e0\u4e2a\u6280\u672f\u6f14\u793a\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u6ca1\u6709\u771f\u6b63\u5229\u7528OpenGL\u5f00\u53d1\u4e00\u4e2a\u5b9e\u9645\u5e94\u7528\u3002\u8fd9\u7bc7\u6559\u7a0b\u4e3aOpenGL 2D\u6e38\u620f\u5236\u4f5c\u7cfb\u5217\u6559\u7a0b\u7684\u5165\u95e8\u7bc7\u3002\u8fd9\u4e2a\u7cfb\u5217\u6559\u7a0b\u5c06\u5c55\u793a\u6211\u4eec\u8be5\u5982\u4f55\u5c06OpenGL\u5e94\u7528\u5230\u66f4\u5927\uff0c\u66f4\u590d\u6742\u7684\u73af\u5883\u4e2d\u3002\u6ce8\u610f\u8fd9\u4e2a\u7cfb\u5217\u6559\u7a0b\u4e0d\u4e00\u5b9a\u4f1a\u5f15\u5165\u65b0\u7684OpenGL\u6982\u5ff5\uff0c\u4f46\u4f1a\u6216\u591a\u6216\u5c11\u5730\u5411\u6211\u4eec\u5c55\u793a\u5982\u4f55\u5c06\u6240\u5b66\u7684\u6982\u5ff5\u5e94\u7528\u5230\u66f4\u5927\u7684\u7a0b\u5e8f\u4e2d\u53bb\u3002 \u7531\u4e8e\u6211\u4eec\u5e0c\u671b\u4e8b\u60c5\u80fd\u591f\u7b80\u5355\u4e00\u70b9\uff0c\u6211\u4eec\u4f1a\u4ee5\u522b\u4eba\u5f00\u53d1\u8fc7\u7684\u4e00\u4e2a2D\u8857\u673a\u6e38\u620f\u4e3a\u57fa\u7840\uff0c\u5f00\u53d1\u6211\u4eec\u81ea\u5df1\u76842D\u6e38\u620f\u3002\u8fd9\u5c31\u662f Breakout \uff0c\u4e00\u4e2a\u4e8e1976\u5e74\u53d1\u5e03\u7684\u8fd0\u884c\u5728Atari 2600\u4e3b\u673a\u4e0a\u7684\u7ecf\u51782D\u6e38\u620f\u3002\u6e38\u620f\u8981\u6c42\u73a9\u5bb6\u901a\u8fc7\u64cd\u63a7\u4e00\u4e2a\u6321\u677f\u53cd\u5f39\u5c0f\u7403\uff0c\u4ee5\u7834\u574f\u6240\u6709\u7684\u7816\u5757\uff0c\u800c\u4e0d\u80fd\u8ba9\u5c0f\u7403\u5230\u8fbe\u5c4f\u5e55\u5e95\u7aef\u3002\u5f53\u73a9\u5bb6\u7834\u574f\u4e86\u6240\u6709\u7816\u5757\u7684\u65f6\u5019\u5373\u4e3a\u5b8c\u6210\u4e86\u6e38\u620f\u3002 \u4e0b\u9762\u6211\u4eec\u53ef\u4ee5\u770b\u5230Breakout\u539f\u672c\u5728Atari 2600\u4e0a\u662f\u4ec0\u4e48\u6837\u5b50\u7684\uff1a \u6e38\u620f\u6709\u4ee5\u4e0b\u51e0\u4e2a\u673a\u5236\uff1a \u73a9\u5bb6\u80fd\u591f\u63a7\u5236\u4e00\u4e2a\u5c0f\u6321\u677f\uff0c\u5b83\u53ea\u80fd\u5728\u5c4f\u5e55\u8303\u56f4\u5185\u5de6\u53f3\u79fb\u52a8\u3002 \u7403\u5728\u5c4f\u5e55\u4e0a\u8fd0\u52a8\uff0c\u6bcf\u4e00\u6b21\u78b0\u649e\u90fd\u4f1a\u4f7f\u7403\u6839\u636e\u78b0\u649e\u4f4d\u7f6e\u6539\u53d8\u8fd0\u52a8\u65b9\u5411\u3002\u5bf9\u5c4f\u5e55\u8fb9\u6846\uff0c\u7816\u5757\uff0c\u6321\u677f\u90fd\u9700\u8981\u6709\u78b0\u649e\u5224\u5b9a\u3002 \u5f53\u7403\u8fd0\u52a8\u5230\u5c4f\u5e55\u5e95\u90e8\u8fb9\u754c\u7684\u65f6\u5019\uff0c\u6e38\u620f\u7ed3\u675f\u6216\u8005\u73a9\u5bb6\u4e27\u5931\u4e00\u70b9\u751f\u547d\u503c\u3002 \u7403\u78b0\u5230\u7816\u5757\u7684\u65f6\u5019\uff0c\u7816\u5757\u4f1a\u88ab\u7834\u574f\u3002 \u5f53\u6240\u6709\u7816\u5757\u90fd\u88ab\u7834\u574f\uff0c\u73a9\u5bb6\u83b7\u80dc\u3002 \u7403\u7684\u65b9\u5411\u53ef\u4ee5\u901a\u8fc7\u7403\u78b0\u649e\u5728\u6321\u677f\u4e0a\u7684\u4f4d\u7f6e\uff08\u5373\u5230\u6321\u677f\u4e2d\u5fc3\u7684\u8ddd\u79bb\uff09\u6765\u64cd\u63a7\u3002 \u7531\u4e8e\u5c0f\u7403\u4f1a\u4e0d\u65f6\u901a\u8fc7\u7f1d\u9699\u5230\u8fbe\u7816\u5899\u7684\u4e0a\u65b9\uff0c\u5b83\u4f1a\u5728\u9876\u90e8\u8fb9\u7f18\u4e0e\u7816\u5757\u5c42\u7684\u4e0a\u8fb9\u7f18\u4e4b\u95f4\u4e0d\u65ad\u5f39\u8df3\u3002\u5c0f\u7403\u4f1a\u4e00\u76f4\u6301\u7eed\u8fd9\u79cd\u72b6\u6001\u76f4\u5230\u6700\u7ec8\u518d\u6b21\u8fdb\u5165\u7f1d\u9699\u6389\u4e0b\u6765\u3002\u8fd9\u4e5f\u662f\u8fd9\u4e2a\u6e38\u620f\u540d\u5b57\u7684\u6765\u6e90\uff0c\u5c0f\u7403\u5fc5\u987b\u8981\u4ece\u7f1d\u9699\u4e2d\u9003\u8131(Break out)\u51fa\u6765\u3002","title":"Breakout"},{"location":"06%20In%20Practice/2D-Game/01%20Breakout/#opengl-breakout","text":"\u6211\u4eec\u5c06\u628a\u8fd9\u4e2a\u7ecf\u5178\u7684\u8857\u673a\u6e38\u620f\u4f5c\u4e3a\u6211\u4eec\u4e4b\u540e\u8981\u5b8c\u5168\u4f7f\u7528OpenGL\u5b9e\u73b0\u7684\u8fd9\u4e2a\u6e38\u620f\u7684\u57fa\u7840\u3002\u8fd9\u4e2a\u7248\u672c\u7684Breakout\u5c06\u4f1a\u8fd0\u884c\u5728\u663e\u5361\u4e0a\uff0c\u6240\u4ee5\u6211\u4eec\u80fd\u591f\u6539\u8fdb\u7ecf\u5178\u7684Breakout\u6e38\u620f\uff0c\u7ed9\u5b83\u52a0\u4e00\u4e9b\u5f88\u68d2\u7684\u7279\u6027\u3002 \u9664\u4e86\u4ee5\u4e0a\u8fd9\u4e9b\u7ecf\u5178\u7684\u673a\u5236\uff0c\u6211\u4eec\u7684Breakout\u8fd8\u5c06\u62e5\u6709\uff1a \u4f60\u89c1\u8fc7\u6700\u68d2\u7684\u753b\u8d28 \u7c92\u5b50\u7cfb\u7edf \u9ad8\u7ea7\u6587\u5b57\u6e32\u67d3 \u9053\u5177 \u540e\u671f\u5904\u7406\u7279\u6548 \u591a\u4e2a\uff08\u53ef\u81ea\u5b9a\u4e49\u7684\uff09\u5173\u5361 \u4e3a\u4e86\u5f15\u8d77\u5927\u5bb6\u7684\u5174\u8da3\uff0c\u4f60\u53ef\u4ee5\u770b\u770b\u6e38\u620f\u5b8c\u6210\u4e4b\u540e\u7684\u6837\u5b50\uff1a \u8fd9\u4e9b\u6559\u7a0b\u5c06\u4f1a\u7ed3\u5408\u4e4b\u524d\u6559\u7a0b\u4e2d\u7684\u5927\u91cf\u6982\u5ff5\uff0c\u5e76\u4e14\u4f1a\u5c55\u793a\u5982\u4f55\u8ba9\u5b83\u4eec\u4ee5\u4e00\u4e2a\u6574\u4f53\u5de5\u4f5c\u3002\u6240\u4ee5\uff0c\u5728\u4f60\u5f00\u59cb\u8fd9\u4e2a\u7cfb\u5217\u6559\u7a0b\u7684\u5b66\u4e60\u4e4b\u524d\uff0c\u8bf7\u81f3\u5c11\u5b8c\u6210 \u300c\u5165\u95e8\u300d \u7ae0\u8282\u3002 \u800c\u4e14\uff0c\u6709\u4e9b\u6559\u7a0b\u4f1a\u9700\u6c42\u5176\u5b83\u4e00\u4e9b\u6559\u7a0b\u7684\u6982\u5ff5\uff08\u6bd4\u5982\u8bf4\u5728 \u300c\u9ad8\u7ea7OpenGL\u300d \u7ae0\u8282\u4e2d\u7684\u5e27\u7f13\u51b2\uff09\uff0c\u6240\u4ee5\u5f53\u5fc5\u8981\u7684\u65f6\u5019\u6211\u4f1a\u5217\u51fa\u9700\u6c42\u7684\u6559\u7a0b\u3002 \u5982\u679c\u4f60\u5df2\u51c6\u5907\u597d\u5f00\u53d1\u8fd9\u4e2a\u6e38\u620f\uff0c\u53ef\u4ee5\u5f00\u59cb \u4e0b\u4e00\u8282 \u7684\u5b66\u4e60\u4e86\u3002","title":"OpenGL Breakout"},{"location":"06%20In%20Practice/2D-Game/02%20Setting%20up/","text":"\u51c6\u5907\u5de5\u4f5c \u539f\u6587 Setting up \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 ZMANT \u6821\u5bf9 Krasjet Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u5728\u5f00\u59cb\u771f\u6b63\u5199\u6e38\u620f\u673a\u5236\u4e4b\u524d\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u914d\u7f6e\u4e00\u4e2a\u7b80\u5355\u7684\u6846\u67b6\uff0c\u7528\u6765\u5b58\u653e\u8fd9\u4e2a\u6e38\u620f\uff0c\u8fd9\u4e2a\u6e38\u620f\u5c06\u4f1a\u7528\u5230\u51e0\u4e2a\u7b2c\u4e09\u65b9\u5e93\uff0c\u5b83\u4eec\u7684\u5927\u591a\u6570\u90fd\u5df2\u7ecf\u5728\u524d\u9762\u7684\u6559\u7a0b\u4e2d\u4ecb\u7ecd\u8fc7\u4e86\u3002\u5728\u9700\u8981\u7528\u5230\u65b0\u7684\u5e93\u7684\u65f6\u5019\uff0c\u6211\u4f1a\u4f5c\u51fa\u9002\u5f53\u7684\u4ecb\u7ecd\u3002 \u9996\u5148\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u6240\u8c13\u7684 \u8d85\u7ea7 (Uber)\u6e38\u620f\u7c7b\uff0c\u5b83\u4f1a\u5305\u542b\u6240\u6709\u76f8\u5173\u7684\u6e32\u67d3\u548c\u6e38\u620f\u4ee3\u7801\u3002\u8fd9\u4e2a\u6e38\u620f\u7c7b\u7684\u4e3b\u8981\u4f5c\u7528\u662f\uff08\u7b80\u5355\uff09\u7ba1\u7406\u4f60\u7684\u6e38\u620f\u4ee3\u7801\uff0c\u5e76\u4e0e\u6b64\u540c\u65f6\u5c06\u6240\u6709\u7684\u7a97\u53e3\u4ee3\u7801\u4ece\u6e38\u620f\u4e2d\u89e3\u8026\u3002\u8fd9\u6837\u5b50\u7684\u8bdd\uff0c\u4f60\u5c31\u53ef\u4ee5\u628a\u76f8\u540c\u7684\u7c7b\u8fc1\u79fb\u5230\u5b8c\u5168\u4e0d\u540c\u7684\u7a97\u53e3\u5e93\uff08\u6bd4\u5982SDL\u6216SFML\uff09\u800c\u4e0d\u9700\u8981\u505a\u592a\u591a\u7684\u5de5\u4f5c\u3002 Important \u62bd\u8c61\u5e76\u5f52\u7eb3\u6e38\u620f\u6216\u56fe\u5f62\u4ee3\u7801\u81f3\u7c7b\u4e0e\u5bf9\u8c61\u4e2d\u6709\u6210\u5343\u4e0a\u4e07\u79cd\u65b9\u5f0f\u3002\u5728\u8fd9\u4e2a\u7cfb\u5217\u6559\u7a0b\u4e2d\u4f60\u6240\u770b\u5230\u7684\u4ec5\u662f\u5176\u4e2d\u7684\u4e00\u79cd\u3002\u5982\u679c\u4f60\u89c9\u5f97\u80fd\u6709\u66f4\u597d\u7684\u65b9\u5f0f\u8fdb\u884c\u5b9e\u73b0\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u6539\u8fdb\u6211\u7684\u8fd9\u4e2a\u5b9e\u73b0\u3002 \u8fd9\u4e2a\u6e38\u620f\u7c7b\u5c01\u88c5\u4e86\u4e00\u4e2a\u521d\u59cb\u5316\u51fd\u6570\u3001\u4e00\u4e2a\u66f4\u65b0\u51fd\u6570\u3001\u4e00\u4e2a\u5904\u7406\u8f93\u5165\u51fd\u6570\u4ee5\u53ca\u4e00\u4e2a\u6e32\u67d3\u51fd\u6570\uff1a class Game { public: // \u6e38\u620f\u72b6\u6001 GameState State; GLboolean Keys[1024]; GLuint Width, Height; // \u6784\u9020\u51fd\u6570/\u6790\u6784\u51fd\u6570 Game(GLuint width, GLuint height); ~Game(); // \u521d\u59cb\u5316\u6e38\u620f\u72b6\u6001\uff08\u52a0\u8f7d\u6240\u6709\u7684\u7740\u8272\u5668/\u7eb9\u7406/\u5173\u5361\uff09 void Init(); // \u6e38\u620f\u5faa\u73af void ProcessInput(GLfloat dt); void Update(GLfloat dt); void Render(); }; \u8fd9\u4e2a\u7c7b\u5e94\u8be5\u5305\u542b\u4e86\u6240\u6709\u5728\u4e00\u4e2a\u6e38\u620f\u7c7b\u4e2d\u4f1a\u51fa\u73b0\u7684\u4e1c\u897f\u3002\u6211\u4eec\u901a\u8fc7\u7ed9\u5b9a\u4e00\u4e2a\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff08\u5bf9\u5e94\u4e8e\u4f60\u73a9\u6e38\u620f\u65f6\u7684\u5206\u8fa8\u7387\uff09\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u6e38\u620f\uff0c\u5e76\u4e14\u4f7f\u7528 Init \u51fd\u6570\u6765\u52a0\u8f7d\u7740\u8272\u5668\u3001\u7eb9\u7406\u5e76\u4e14\u521d\u59cb\u5316\u6240\u6709\u7684\u6e38\u620f\u72b6\u6001\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 ProcessInput \u51fd\u6570\uff0c\u5e76\u4f7f\u7528\u5b58\u50a8\u5728 Keys \u6570\u7ec4\u91cc\u7684\u6570\u636e\u6765\u5904\u7406\u8f93\u5165\u3002\u5e76\u4e14\u5728 Update \u51fd\u6570\u91cc\u9762\u6211\u4eec\u53ef\u4ee5\u66f4\u65b0\u6e38\u620f\u8bbe\u7f6e\u72b6\u6001\uff08\u6bd4\u5982\u73a9\u5bb6/\u7403\u7684\u79fb\u52a8\uff09\u3002\u6700\u540e\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u8c03\u7528 Render \u51fd\u6570\u6765\u5bf9\u6e38\u620f\u8fdb\u884c\u6e32\u67d3\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u5c06\u8fd0\u52a8\u903b\u8f91\u4e0e\u6e32\u67d3\u903b\u8f91\u5206\u5f00\u4e86\u3002 \u8fd9\u4e2a Game \u7c7b\u540c\u6837\u4e86\u5c01\u88c5\u4e86\u4e00\u4e2a\u53eb\u505a State \u7684\u53d8\u91cf\uff0c\u5b83\u7684\u7c7b\u578b\u662f GameState \uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a // \u4ee3\u8868\u4e86\u6e38\u620f\u7684\u5f53\u524d\u72b6\u6001 enum GameState { GAME_ACTIVE, GAME_MENU, GAME_WIN }; \u8fd9\u4e2a\u7c7b\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u8ddf\u8e2a\u6e38\u620f\u7684\u5f53\u524d\u72b6\u6001\u3002\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u5f53\u524d\u6e38\u620f\u7684\u72b6\u6001\u6765\u51b3\u5b9a\u6e32\u67d3\u548c/\u6216\u8005\u5904\u7406\u4e0d\u540c\u7684\u5143\u7d20(Item)\u4e86\uff08\u6bd4\u5982\u5f53\u6211\u4eec\u5728\u6e38\u620f\u83dc\u5355\u754c\u9762\u7684\u65f6\u5019\u5c31\u53ef\u80fd\u9700\u8981\u6e32\u67d3\u548c\u5904\u7406\u4e0d\u540c\u7684\u5143\u7d20\u4e86\uff09\u3002 \u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u4e2a\u6e38\u620f\u7c7b\u7684\u51fd\u6570\u8fd8\u5b8c\u5168\u662f\u7a7a\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u8fd8\u6ca1\u6709\u5199\u6e38\u620f\u7684\u5b9e\u9645\u4ee3\u7801\uff0c\u4f46\u8fd9\u91cc\u662f Game \u7c7b\u7684 \u5934\u6587\u4ef6 \u548c \u4ee3\u7801\u6587\u4ef6 \u3002 \u5de5\u5177\u7c7b \u56e0\u4e3a\u6211\u4eec\u6b63\u5728\u5f00\u53d1\u4e00\u4e2a\u5927\u578b\u5e94\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u4e0d\u5f97\u4e0d\u9891\u7e41\u5730\u91cd\u7528\u4e00\u4e9bOpenGL\u7684\u6982\u5ff5\uff0c\u6bd4\u5982\u7eb9\u7406\u548c\u7740\u8272\u5668\u7b49\u3002\u56e0\u6b64\uff0c\u4e3a\u8fd9\u4e24\u4e2a\u5143\u7d20\u521b\u5efa\u4e00\u4e2a\u66f4\u52a0\u6613\u7528\u7684\u63a5\u53e3\u4e5f\u662f\u60c5\u7406\u4e4b\u4e2d\u7684\u4e8b\u4e86\uff0c\u5c31\u50cf\u5728\u6211\u4eec\u524d\u9762\u6559\u7a0b\u4e2d\u521b\u5efa\u7684\u90a3\u4e2a\u7740\u8272\u5668\u7c7b\u4e00\u6837\u3002 \u7740\u8272\u5668\u7c7b\u4f1a\u63a5\u53d7\u4e24\u4e2a\u6216\u4e09\u4e2a\uff08\u5982\u679c\u6709\u51e0\u4f55\u7740\u8272\u5668\uff09\u5b57\u7b26\u4e32\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u7f16\u8bd1\u597d\u7684\u7740\u8272\u5668\uff08\u5982\u679c\u5931\u8d25\u7684\u8bdd\u5219\u751f\u6210\u9519\u8bef\u4fe1\u606f\uff09\u3002\u8fd9\u4e2a\u7740\u8272\u5668\u7c7b\u4e5f\u5305\u542b\u5f88\u591a\u5de5\u5177(Utility)\u51fd\u6570\u6765\u5e2e\u52a9\u5feb\u901f\u8bbe\u7f6euniform\u503c\u3002\u7eb9\u7406\u7c7b\u4f1a\u63a5\u53d7\u4e00\u4e2a\u5b57\u8282(Byte)\u6570\u7ec4\u4ee5\u53ca\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff0c\u5e76\uff08\u6839\u636e\u8bbe\u5b9a\u7684\u5c5e\u6027\uff09\u751f\u6210\u4e00\u4e2a2D\u7eb9\u7406\u56fe\u50cf\u3002\u540c\u6837\uff0c\u8fd9\u4e2a\u7eb9\u7406\u7c7b\u4e5f\u4f1a\u5c01\u88c5\u4e00\u4e9b\u5de5\u5177\u51fd\u6570\u3002 \u6211\u4eec\u5e76\u4e0d\u4f1a\u6df1\u5165\u8ba8\u8bba\u8fd9\u4e9b\u7c7b\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u56e0\u4e3a\u5b66\u5230\u8fd9\u91cc\u4f60\u5e94\u8be5\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u7406\u89e3\u5b83\u4eec\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u4e86\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u627e\u5230\u5b83\u4eec\u7684\u5934\u6587\u4ef6\u548c\u4ee3\u7801\u6587\u4ef6\uff0c\u90fd\u6709\u8be6\u7ec6\u7684\u6ce8\u91ca\uff1a \u7740\u8272\u5668 \uff1a \u5934\u6587\u4ef6 \uff0c \u4ee3\u7801 \u7eb9\u7406 \uff1a \u5934\u6587\u4ef6 \uff0c \u4ee3\u7801 \u6ce8\u610f\u5f53\u524d\u7684\u7eb9\u7406\u7c7b\u4ec5\u662f\u4e3a2D\u7eb9\u7406\u8bbe\u8ba1\u7684\uff0c\u4f46\u4f60\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u5c06\u5176\u6269\u5f20\u81f3\u66f4\u591a\u7684\u7eb9\u7406\u7c7b\u578b\u3002 \u8d44\u6e90\u7ba1\u7406 \u5c3d\u7ba1\u7740\u8272\u5668\u4e0e\u7eb9\u7406\u7c7b\u7684\u51fd\u6570\u672c\u8eab\u5c31\u5f88\u68d2\u4e86\uff0c\u5b83\u4eec\u4ecd\u9700\u8981\u6709\u4e00\u4e2a\u5b57\u8282\u6570\u7ec4\u6216\u4e00\u4e9b\u5b57\u7b26\u4e32\u6765\u8c03\u7528\u5b83\u4eec\u3002\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5c06\u6587\u4ef6\u52a0\u8f7d\u4ee3\u7801\u5d4c\u5165\u5230\u5b83\u4eec\u81ea\u5df1\u7684\u7c7b\u4e2d\uff0c\u4f46\u8fd9\u7a0d\u5fae\u6709\u70b9\u8fdd\u53cd\u4e86 \u5355\u4e00\u529f\u80fd\u539f\u5219 (Single Responsibility Principle)\uff0c\u5373\u8fd9\u4e24\u4e2a\u7c7b\u5e94\u5f53\u5206\u522b\u4ec5\u4ec5\u5173\u6ce8\u7eb9\u7406\u6216\u8005\u7740\u8272\u5668\u672c\u8eab\uff0c\u800c\u4e0d\u662f\u5b83\u4eec\u7684\u6587\u4ef6\u52a0\u8f7d\u673a\u5236\u3002 \u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u7528\u4e00\u4e2a\u66f4\u52a0\u6709\u7ec4\u7ec7\u7684\u65b9\u6cd5\uff08\u8bd1\u6ce8\uff1a\u6765\u5b9e\u73b0\u6587\u4ef6\u7684\u52a0\u8f7d\uff09\uff0c\u5c31\u662f\u521b\u5efa\u4e00\u4e2a\u6240\u8c13 \u8d44\u6e90\u7ba1\u7406\u5668 \u7684\u5b9e\u4f53\uff0c\u4e13\u95e8\u52a0\u8f7d\u6e38\u620f\u76f8\u5173\u7684\u8d44\u6e90\u3002\u521b\u5efa\u4e00\u4e2a\u8d44\u6e90\u7ba1\u7406\u5668\u6709\u591a\u79cd\u65b9\u6cd5\u3002\u5728\u8fd9\u4e2a\u6559\u7a0b\u4e2d\u6211\u4eec\u9009\u62e9\u4f7f\u7528\u4e00\u4e2a\u5355\u4e00\u5b9e\u4f8b(Singleton)\u7684\u9759\u6001\u8d44\u6e90\u7ba1\u7406\u5668\uff0c\uff08\u7531\u4e8e\u5b83\u9759\u6001\u7684\u672c\u8d28\uff09\u5b83\u5728\u6574\u4e2a\u5de5\u7a0b\u4e2d\u90fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u5b83\u4f1a\u5c01\u88c5\u6240\u6709\u7684\u5df2\u52a0\u8f7d\u8d44\u6e90\u4ee5\u53ca\u4e00\u4e9b\u76f8\u5173\u7684\u52a0\u8f7d\u529f\u80fd\u3002 \u4f7f\u7528\u4e00\u4e2a\u5177\u6709\u9759\u6001\u5c5e\u6027\u7684\u5355\u4e00\u5b9e\u4f8b\u7c7b\u6709\u5f88\u591a\u4f18\u70b9\u4e5f\u6709\u5f88\u591a\u7f3a\u70b9\u3002\u5b83\u4e3b\u8981\u7684\u7f3a\u70b9\u5c31\u662f\u8fd9\u6837\u4f1a\u635f\u5931OOP\u5c5e\u6027\uff0c\u5e76\u4e14\u4e27\u5931\u6784\u9020\u4e0e\u6790\u6784\u7684\u63a7\u5236\u3002\u4e0d\u8fc7\uff0c\u5bf9\u4e8e\u6211\u4eec\u8fd9\u79cd\u5c0f\u9879\u76ee\u6765\u8bf4\u662f\u8fd9\u4e9b\u95ee\u9898\u4e5f\u662f\u5f88\u5bb9\u6613\u5904\u7406\u7684\u3002 \u548c\u5176\u5b83\u7c7b\u7684\u6587\u4ef6\u4e00\u6837\uff0c\u8fd9\u4e2a\u8d44\u6e90\u7ba1\u7406\u5668\u7684\u4ee3\u7801\u5982\u4e0b\uff1a \u8d44\u6e90\u7ba1\u7406\u5668 \uff1a \u5934\u6587\u4ef6 \uff0c \u4ee3\u7801 \u901a\u8fc7\u4f7f\u7528\u8d44\u6e90\u7ba1\u7406\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u628a\u7740\u8272\u5668\u52a0\u8f7d\u5230\u7a0b\u5e8f\u91cc\u9762\uff1a Shader shader = ResourceManager::LoadShader(\"vertex.vs\", \"fragment.vs\", nullptr, \"test\"); // \u63a5\u4e0b\u6765\u4f7f\u7528\u5b83 shader.Use(); // \u6216\u8005 ResourceManager::GetShader(\"test\").Use(); Game \u7c7b\u3001\u8d44\u6e90\u7ba1\u7406\u5668\u7c7b\uff0c\u4ee5\u53ca\u5f88\u5bb9\u6613\u7ba1\u7406\u7684 Shader \u548c Texture2D \u7c7b\u4e00\u8d77\u7ec4\u6210\u4e86\u4e4b\u540e\u6559\u7a0b\u7684\u57fa\u7840\uff0c\u6211\u4eec\u4e4b\u540e\u4f1a\u5e7f\u6cdb\u4f7f\u7528\u8fd9\u4e9b\u7c7b\u6765\u5b9e\u73b0\u6211\u4eec\u7684Breakout\u6e38\u620f\u3002 \u7a0b\u5e8f \u6211\u4eec\u4ecd\u7136\u9700\u8981\u4e3a\u8fd9\u4e2a\u6e38\u620f\u521b\u5efa\u4e00\u4e2a\u7a97\u53e3\u5e76\u4e14\u8bbe\u7f6e\u4e00\u4e9bOpenGL\u7684\u521d\u59cb\u72b6\u6001\u3002\u6211\u4eec\u786e\u4fdd\u4f7f\u7528OpenGL\u7684 \u9762\u5254\u9664 \u529f\u80fd\u548c \u6df7\u5408 \u529f\u80fd\u3002\u6211\u4eec\u4e0d\u9700\u8981\u4f7f\u7528\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6e38\u620f\u5b8c\u5168\u662f2D\u7684\uff0c\u6240\u6709\u9876\u70b9\u90fd\u6709\u76f8\u540c\u7684z\u503c\uff0c\u6240\u4ee5\u5f00\u542f\u6df1\u5ea6\u6d4b\u8bd5\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\uff0c\u53cd\u800c\u53ef\u80fd\u9020\u6210\u6df1\u5ea6\u51b2\u7a81(Z-fighting)\u3002 \u8fd9\u4e2aBreakout\u6e38\u620f\u7684\u8d77\u59cb\u4ee3\u7801\u975e\u5e38\u7b80\u5355\uff1a\u6211\u4eec\u7528GLFW\u521b\u5efa\u4e00\u4e2a\u7a97\u53e3\uff0c\u6ce8\u518c\u4e00\u4e9b\u56de\u8c03\u51fd\u6570\uff0c\u521b\u5efa\u4e00\u4e2aGame\u5bf9\u8c61\uff0c\u5e76\u5c06\u6240\u6709\u76f8\u5173\u7684\u4fe1\u606f\u90fd\u4f20\u5230\u6e38\u620f\u7c7b\u4e2d\u3002\u4ee3\u7801\u5982\u4e0b\uff1a \u7a0b\u5e8f \uff1a \u4ee3\u7801 \u8fd0\u884c\u8fd9\u4e2a\u4ee3\u7801\uff0c\u4f60\u5e94\u8be5\u80fd\u5f97\u5230\u4e0b\u9762\u7684\u8f93\u51fa\uff1a \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u4e3a\u4e4b\u540e\u7684\u6559\u7a0b\u6784\u5efa\u4e86\u4e00\u4e2a\u575a\u5b9e\u7684\u6846\u67b6\uff0c\u6211\u4eec\u5c06\u4e0d\u65ad\u5730\u62d3\u5c55\u8fd9\u4e2a\u6e38\u620f\u7c7b\uff0c\u5c01\u88c5\u65b0\u7684\u529f\u80fd\u3002\u5982\u679c\u4f60\u51c6\u5907\u597d\u4e86\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb \u4e0b\u4e00\u8282 \u7684\u5b66\u4e60\u4e86\u3002","title":"\u51c6\u5907\u5de5\u4f5c"},{"location":"06%20In%20Practice/2D-Game/02%20Setting%20up/#_1","text":"\u539f\u6587 Setting up \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 ZMANT \u6821\u5bf9 Krasjet Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u5728\u5f00\u59cb\u771f\u6b63\u5199\u6e38\u620f\u673a\u5236\u4e4b\u524d\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u914d\u7f6e\u4e00\u4e2a\u7b80\u5355\u7684\u6846\u67b6\uff0c\u7528\u6765\u5b58\u653e\u8fd9\u4e2a\u6e38\u620f\uff0c\u8fd9\u4e2a\u6e38\u620f\u5c06\u4f1a\u7528\u5230\u51e0\u4e2a\u7b2c\u4e09\u65b9\u5e93\uff0c\u5b83\u4eec\u7684\u5927\u591a\u6570\u90fd\u5df2\u7ecf\u5728\u524d\u9762\u7684\u6559\u7a0b\u4e2d\u4ecb\u7ecd\u8fc7\u4e86\u3002\u5728\u9700\u8981\u7528\u5230\u65b0\u7684\u5e93\u7684\u65f6\u5019\uff0c\u6211\u4f1a\u4f5c\u51fa\u9002\u5f53\u7684\u4ecb\u7ecd\u3002 \u9996\u5148\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u6240\u8c13\u7684 \u8d85\u7ea7 (Uber)\u6e38\u620f\u7c7b\uff0c\u5b83\u4f1a\u5305\u542b\u6240\u6709\u76f8\u5173\u7684\u6e32\u67d3\u548c\u6e38\u620f\u4ee3\u7801\u3002\u8fd9\u4e2a\u6e38\u620f\u7c7b\u7684\u4e3b\u8981\u4f5c\u7528\u662f\uff08\u7b80\u5355\uff09\u7ba1\u7406\u4f60\u7684\u6e38\u620f\u4ee3\u7801\uff0c\u5e76\u4e0e\u6b64\u540c\u65f6\u5c06\u6240\u6709\u7684\u7a97\u53e3\u4ee3\u7801\u4ece\u6e38\u620f\u4e2d\u89e3\u8026\u3002\u8fd9\u6837\u5b50\u7684\u8bdd\uff0c\u4f60\u5c31\u53ef\u4ee5\u628a\u76f8\u540c\u7684\u7c7b\u8fc1\u79fb\u5230\u5b8c\u5168\u4e0d\u540c\u7684\u7a97\u53e3\u5e93\uff08\u6bd4\u5982SDL\u6216SFML\uff09\u800c\u4e0d\u9700\u8981\u505a\u592a\u591a\u7684\u5de5\u4f5c\u3002 Important \u62bd\u8c61\u5e76\u5f52\u7eb3\u6e38\u620f\u6216\u56fe\u5f62\u4ee3\u7801\u81f3\u7c7b\u4e0e\u5bf9\u8c61\u4e2d\u6709\u6210\u5343\u4e0a\u4e07\u79cd\u65b9\u5f0f\u3002\u5728\u8fd9\u4e2a\u7cfb\u5217\u6559\u7a0b\u4e2d\u4f60\u6240\u770b\u5230\u7684\u4ec5\u662f\u5176\u4e2d\u7684\u4e00\u79cd\u3002\u5982\u679c\u4f60\u89c9\u5f97\u80fd\u6709\u66f4\u597d\u7684\u65b9\u5f0f\u8fdb\u884c\u5b9e\u73b0\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u6539\u8fdb\u6211\u7684\u8fd9\u4e2a\u5b9e\u73b0\u3002 \u8fd9\u4e2a\u6e38\u620f\u7c7b\u5c01\u88c5\u4e86\u4e00\u4e2a\u521d\u59cb\u5316\u51fd\u6570\u3001\u4e00\u4e2a\u66f4\u65b0\u51fd\u6570\u3001\u4e00\u4e2a\u5904\u7406\u8f93\u5165\u51fd\u6570\u4ee5\u53ca\u4e00\u4e2a\u6e32\u67d3\u51fd\u6570\uff1a class Game { public: // \u6e38\u620f\u72b6\u6001 GameState State; GLboolean Keys[1024]; GLuint Width, Height; // \u6784\u9020\u51fd\u6570/\u6790\u6784\u51fd\u6570 Game(GLuint width, GLuint height); ~Game(); // \u521d\u59cb\u5316\u6e38\u620f\u72b6\u6001\uff08\u52a0\u8f7d\u6240\u6709\u7684\u7740\u8272\u5668/\u7eb9\u7406/\u5173\u5361\uff09 void Init(); // \u6e38\u620f\u5faa\u73af void ProcessInput(GLfloat dt); void Update(GLfloat dt); void Render(); }; \u8fd9\u4e2a\u7c7b\u5e94\u8be5\u5305\u542b\u4e86\u6240\u6709\u5728\u4e00\u4e2a\u6e38\u620f\u7c7b\u4e2d\u4f1a\u51fa\u73b0\u7684\u4e1c\u897f\u3002\u6211\u4eec\u901a\u8fc7\u7ed9\u5b9a\u4e00\u4e2a\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff08\u5bf9\u5e94\u4e8e\u4f60\u73a9\u6e38\u620f\u65f6\u7684\u5206\u8fa8\u7387\uff09\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u6e38\u620f\uff0c\u5e76\u4e14\u4f7f\u7528 Init \u51fd\u6570\u6765\u52a0\u8f7d\u7740\u8272\u5668\u3001\u7eb9\u7406\u5e76\u4e14\u521d\u59cb\u5316\u6240\u6709\u7684\u6e38\u620f\u72b6\u6001\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 ProcessInput \u51fd\u6570\uff0c\u5e76\u4f7f\u7528\u5b58\u50a8\u5728 Keys \u6570\u7ec4\u91cc\u7684\u6570\u636e\u6765\u5904\u7406\u8f93\u5165\u3002\u5e76\u4e14\u5728 Update \u51fd\u6570\u91cc\u9762\u6211\u4eec\u53ef\u4ee5\u66f4\u65b0\u6e38\u620f\u8bbe\u7f6e\u72b6\u6001\uff08\u6bd4\u5982\u73a9\u5bb6/\u7403\u7684\u79fb\u52a8\uff09\u3002\u6700\u540e\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u8c03\u7528 Render \u51fd\u6570\u6765\u5bf9\u6e38\u620f\u8fdb\u884c\u6e32\u67d3\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u5c06\u8fd0\u52a8\u903b\u8f91\u4e0e\u6e32\u67d3\u903b\u8f91\u5206\u5f00\u4e86\u3002 \u8fd9\u4e2a Game \u7c7b\u540c\u6837\u4e86\u5c01\u88c5\u4e86\u4e00\u4e2a\u53eb\u505a State \u7684\u53d8\u91cf\uff0c\u5b83\u7684\u7c7b\u578b\u662f GameState \uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a // \u4ee3\u8868\u4e86\u6e38\u620f\u7684\u5f53\u524d\u72b6\u6001 enum GameState { GAME_ACTIVE, GAME_MENU, GAME_WIN }; \u8fd9\u4e2a\u7c7b\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u8ddf\u8e2a\u6e38\u620f\u7684\u5f53\u524d\u72b6\u6001\u3002\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u5f53\u524d\u6e38\u620f\u7684\u72b6\u6001\u6765\u51b3\u5b9a\u6e32\u67d3\u548c/\u6216\u8005\u5904\u7406\u4e0d\u540c\u7684\u5143\u7d20(Item)\u4e86\uff08\u6bd4\u5982\u5f53\u6211\u4eec\u5728\u6e38\u620f\u83dc\u5355\u754c\u9762\u7684\u65f6\u5019\u5c31\u53ef\u80fd\u9700\u8981\u6e32\u67d3\u548c\u5904\u7406\u4e0d\u540c\u7684\u5143\u7d20\u4e86\uff09\u3002 \u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u4e2a\u6e38\u620f\u7c7b\u7684\u51fd\u6570\u8fd8\u5b8c\u5168\u662f\u7a7a\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u8fd8\u6ca1\u6709\u5199\u6e38\u620f\u7684\u5b9e\u9645\u4ee3\u7801\uff0c\u4f46\u8fd9\u91cc\u662f Game \u7c7b\u7684 \u5934\u6587\u4ef6 \u548c \u4ee3\u7801\u6587\u4ef6 \u3002","title":"\u51c6\u5907\u5de5\u4f5c"},{"location":"06%20In%20Practice/2D-Game/02%20Setting%20up/#_2","text":"\u56e0\u4e3a\u6211\u4eec\u6b63\u5728\u5f00\u53d1\u4e00\u4e2a\u5927\u578b\u5e94\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u4e0d\u5f97\u4e0d\u9891\u7e41\u5730\u91cd\u7528\u4e00\u4e9bOpenGL\u7684\u6982\u5ff5\uff0c\u6bd4\u5982\u7eb9\u7406\u548c\u7740\u8272\u5668\u7b49\u3002\u56e0\u6b64\uff0c\u4e3a\u8fd9\u4e24\u4e2a\u5143\u7d20\u521b\u5efa\u4e00\u4e2a\u66f4\u52a0\u6613\u7528\u7684\u63a5\u53e3\u4e5f\u662f\u60c5\u7406\u4e4b\u4e2d\u7684\u4e8b\u4e86\uff0c\u5c31\u50cf\u5728\u6211\u4eec\u524d\u9762\u6559\u7a0b\u4e2d\u521b\u5efa\u7684\u90a3\u4e2a\u7740\u8272\u5668\u7c7b\u4e00\u6837\u3002 \u7740\u8272\u5668\u7c7b\u4f1a\u63a5\u53d7\u4e24\u4e2a\u6216\u4e09\u4e2a\uff08\u5982\u679c\u6709\u51e0\u4f55\u7740\u8272\u5668\uff09\u5b57\u7b26\u4e32\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u7f16\u8bd1\u597d\u7684\u7740\u8272\u5668\uff08\u5982\u679c\u5931\u8d25\u7684\u8bdd\u5219\u751f\u6210\u9519\u8bef\u4fe1\u606f\uff09\u3002\u8fd9\u4e2a\u7740\u8272\u5668\u7c7b\u4e5f\u5305\u542b\u5f88\u591a\u5de5\u5177(Utility)\u51fd\u6570\u6765\u5e2e\u52a9\u5feb\u901f\u8bbe\u7f6euniform\u503c\u3002\u7eb9\u7406\u7c7b\u4f1a\u63a5\u53d7\u4e00\u4e2a\u5b57\u8282(Byte)\u6570\u7ec4\u4ee5\u53ca\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff0c\u5e76\uff08\u6839\u636e\u8bbe\u5b9a\u7684\u5c5e\u6027\uff09\u751f\u6210\u4e00\u4e2a2D\u7eb9\u7406\u56fe\u50cf\u3002\u540c\u6837\uff0c\u8fd9\u4e2a\u7eb9\u7406\u7c7b\u4e5f\u4f1a\u5c01\u88c5\u4e00\u4e9b\u5de5\u5177\u51fd\u6570\u3002 \u6211\u4eec\u5e76\u4e0d\u4f1a\u6df1\u5165\u8ba8\u8bba\u8fd9\u4e9b\u7c7b\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u56e0\u4e3a\u5b66\u5230\u8fd9\u91cc\u4f60\u5e94\u8be5\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u7406\u89e3\u5b83\u4eec\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u4e86\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u627e\u5230\u5b83\u4eec\u7684\u5934\u6587\u4ef6\u548c\u4ee3\u7801\u6587\u4ef6\uff0c\u90fd\u6709\u8be6\u7ec6\u7684\u6ce8\u91ca\uff1a \u7740\u8272\u5668 \uff1a \u5934\u6587\u4ef6 \uff0c \u4ee3\u7801 \u7eb9\u7406 \uff1a \u5934\u6587\u4ef6 \uff0c \u4ee3\u7801 \u6ce8\u610f\u5f53\u524d\u7684\u7eb9\u7406\u7c7b\u4ec5\u662f\u4e3a2D\u7eb9\u7406\u8bbe\u8ba1\u7684\uff0c\u4f46\u4f60\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u5c06\u5176\u6269\u5f20\u81f3\u66f4\u591a\u7684\u7eb9\u7406\u7c7b\u578b\u3002","title":"\u5de5\u5177\u7c7b"},{"location":"06%20In%20Practice/2D-Game/02%20Setting%20up/#_3","text":"\u5c3d\u7ba1\u7740\u8272\u5668\u4e0e\u7eb9\u7406\u7c7b\u7684\u51fd\u6570\u672c\u8eab\u5c31\u5f88\u68d2\u4e86\uff0c\u5b83\u4eec\u4ecd\u9700\u8981\u6709\u4e00\u4e2a\u5b57\u8282\u6570\u7ec4\u6216\u4e00\u4e9b\u5b57\u7b26\u4e32\u6765\u8c03\u7528\u5b83\u4eec\u3002\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5c06\u6587\u4ef6\u52a0\u8f7d\u4ee3\u7801\u5d4c\u5165\u5230\u5b83\u4eec\u81ea\u5df1\u7684\u7c7b\u4e2d\uff0c\u4f46\u8fd9\u7a0d\u5fae\u6709\u70b9\u8fdd\u53cd\u4e86 \u5355\u4e00\u529f\u80fd\u539f\u5219 (Single Responsibility Principle)\uff0c\u5373\u8fd9\u4e24\u4e2a\u7c7b\u5e94\u5f53\u5206\u522b\u4ec5\u4ec5\u5173\u6ce8\u7eb9\u7406\u6216\u8005\u7740\u8272\u5668\u672c\u8eab\uff0c\u800c\u4e0d\u662f\u5b83\u4eec\u7684\u6587\u4ef6\u52a0\u8f7d\u673a\u5236\u3002 \u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u7528\u4e00\u4e2a\u66f4\u52a0\u6709\u7ec4\u7ec7\u7684\u65b9\u6cd5\uff08\u8bd1\u6ce8\uff1a\u6765\u5b9e\u73b0\u6587\u4ef6\u7684\u52a0\u8f7d\uff09\uff0c\u5c31\u662f\u521b\u5efa\u4e00\u4e2a\u6240\u8c13 \u8d44\u6e90\u7ba1\u7406\u5668 \u7684\u5b9e\u4f53\uff0c\u4e13\u95e8\u52a0\u8f7d\u6e38\u620f\u76f8\u5173\u7684\u8d44\u6e90\u3002\u521b\u5efa\u4e00\u4e2a\u8d44\u6e90\u7ba1\u7406\u5668\u6709\u591a\u79cd\u65b9\u6cd5\u3002\u5728\u8fd9\u4e2a\u6559\u7a0b\u4e2d\u6211\u4eec\u9009\u62e9\u4f7f\u7528\u4e00\u4e2a\u5355\u4e00\u5b9e\u4f8b(Singleton)\u7684\u9759\u6001\u8d44\u6e90\u7ba1\u7406\u5668\uff0c\uff08\u7531\u4e8e\u5b83\u9759\u6001\u7684\u672c\u8d28\uff09\u5b83\u5728\u6574\u4e2a\u5de5\u7a0b\u4e2d\u90fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u5b83\u4f1a\u5c01\u88c5\u6240\u6709\u7684\u5df2\u52a0\u8f7d\u8d44\u6e90\u4ee5\u53ca\u4e00\u4e9b\u76f8\u5173\u7684\u52a0\u8f7d\u529f\u80fd\u3002 \u4f7f\u7528\u4e00\u4e2a\u5177\u6709\u9759\u6001\u5c5e\u6027\u7684\u5355\u4e00\u5b9e\u4f8b\u7c7b\u6709\u5f88\u591a\u4f18\u70b9\u4e5f\u6709\u5f88\u591a\u7f3a\u70b9\u3002\u5b83\u4e3b\u8981\u7684\u7f3a\u70b9\u5c31\u662f\u8fd9\u6837\u4f1a\u635f\u5931OOP\u5c5e\u6027\uff0c\u5e76\u4e14\u4e27\u5931\u6784\u9020\u4e0e\u6790\u6784\u7684\u63a7\u5236\u3002\u4e0d\u8fc7\uff0c\u5bf9\u4e8e\u6211\u4eec\u8fd9\u79cd\u5c0f\u9879\u76ee\u6765\u8bf4\u662f\u8fd9\u4e9b\u95ee\u9898\u4e5f\u662f\u5f88\u5bb9\u6613\u5904\u7406\u7684\u3002 \u548c\u5176\u5b83\u7c7b\u7684\u6587\u4ef6\u4e00\u6837\uff0c\u8fd9\u4e2a\u8d44\u6e90\u7ba1\u7406\u5668\u7684\u4ee3\u7801\u5982\u4e0b\uff1a \u8d44\u6e90\u7ba1\u7406\u5668 \uff1a \u5934\u6587\u4ef6 \uff0c \u4ee3\u7801 \u901a\u8fc7\u4f7f\u7528\u8d44\u6e90\u7ba1\u7406\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u628a\u7740\u8272\u5668\u52a0\u8f7d\u5230\u7a0b\u5e8f\u91cc\u9762\uff1a Shader shader = ResourceManager::LoadShader(\"vertex.vs\", \"fragment.vs\", nullptr, \"test\"); // \u63a5\u4e0b\u6765\u4f7f\u7528\u5b83 shader.Use(); // \u6216\u8005 ResourceManager::GetShader(\"test\").Use(); Game \u7c7b\u3001\u8d44\u6e90\u7ba1\u7406\u5668\u7c7b\uff0c\u4ee5\u53ca\u5f88\u5bb9\u6613\u7ba1\u7406\u7684 Shader \u548c Texture2D \u7c7b\u4e00\u8d77\u7ec4\u6210\u4e86\u4e4b\u540e\u6559\u7a0b\u7684\u57fa\u7840\uff0c\u6211\u4eec\u4e4b\u540e\u4f1a\u5e7f\u6cdb\u4f7f\u7528\u8fd9\u4e9b\u7c7b\u6765\u5b9e\u73b0\u6211\u4eec\u7684Breakout\u6e38\u620f\u3002","title":"\u8d44\u6e90\u7ba1\u7406"},{"location":"06%20In%20Practice/2D-Game/02%20Setting%20up/#_4","text":"\u6211\u4eec\u4ecd\u7136\u9700\u8981\u4e3a\u8fd9\u4e2a\u6e38\u620f\u521b\u5efa\u4e00\u4e2a\u7a97\u53e3\u5e76\u4e14\u8bbe\u7f6e\u4e00\u4e9bOpenGL\u7684\u521d\u59cb\u72b6\u6001\u3002\u6211\u4eec\u786e\u4fdd\u4f7f\u7528OpenGL\u7684 \u9762\u5254\u9664 \u529f\u80fd\u548c \u6df7\u5408 \u529f\u80fd\u3002\u6211\u4eec\u4e0d\u9700\u8981\u4f7f\u7528\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6e38\u620f\u5b8c\u5168\u662f2D\u7684\uff0c\u6240\u6709\u9876\u70b9\u90fd\u6709\u76f8\u540c\u7684z\u503c\uff0c\u6240\u4ee5\u5f00\u542f\u6df1\u5ea6\u6d4b\u8bd5\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\uff0c\u53cd\u800c\u53ef\u80fd\u9020\u6210\u6df1\u5ea6\u51b2\u7a81(Z-fighting)\u3002 \u8fd9\u4e2aBreakout\u6e38\u620f\u7684\u8d77\u59cb\u4ee3\u7801\u975e\u5e38\u7b80\u5355\uff1a\u6211\u4eec\u7528GLFW\u521b\u5efa\u4e00\u4e2a\u7a97\u53e3\uff0c\u6ce8\u518c\u4e00\u4e9b\u56de\u8c03\u51fd\u6570\uff0c\u521b\u5efa\u4e00\u4e2aGame\u5bf9\u8c61\uff0c\u5e76\u5c06\u6240\u6709\u76f8\u5173\u7684\u4fe1\u606f\u90fd\u4f20\u5230\u6e38\u620f\u7c7b\u4e2d\u3002\u4ee3\u7801\u5982\u4e0b\uff1a \u7a0b\u5e8f \uff1a \u4ee3\u7801 \u8fd0\u884c\u8fd9\u4e2a\u4ee3\u7801\uff0c\u4f60\u5e94\u8be5\u80fd\u5f97\u5230\u4e0b\u9762\u7684\u8f93\u51fa\uff1a \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u4e3a\u4e4b\u540e\u7684\u6559\u7a0b\u6784\u5efa\u4e86\u4e00\u4e2a\u575a\u5b9e\u7684\u6846\u67b6\uff0c\u6211\u4eec\u5c06\u4e0d\u65ad\u5730\u62d3\u5c55\u8fd9\u4e2a\u6e38\u620f\u7c7b\uff0c\u5c01\u88c5\u65b0\u7684\u529f\u80fd\u3002\u5982\u679c\u4f60\u51c6\u5907\u597d\u4e86\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb \u4e0b\u4e00\u8282 \u7684\u5b66\u4e60\u4e86\u3002","title":"\u7a0b\u5e8f"},{"location":"06%20In%20Practice/2D-Game/03%20Rendering%20Sprites/","text":"\u6e32\u67d3\u7cbe\u7075 \u539f\u6587 Rendering Sprites \u4f5c\u8005 JoeyDeVires \u7ffb\u8bd1 ZMANT \u6821\u5bf9 Krasjet Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u4e3a\u4e86\u7ed9\u6211\u4eec\u5f53\u524d\u8fd9\u4e2a\u9ed1\u6f06\u6f06\u7684\u6e38\u620f\u4e16\u754c\u5e26\u6765\u4e00\u70b9\u751f\u673a\uff0c\u6211\u4eec\u5c06\u4f1a\u6e32\u67d3\u4e00\u4e9b\u7cbe\u7075(Sprite)\u6765\u586b\u8865\u8fd9\u4e9b\u7a7a\u865a\u3002 \u7cbe\u7075 \u6709\u5f88\u591a\u79cd\u5b9a\u4e49\uff0c\u4f46\u8fd9\u91cc\u4e3b\u8981\u662f\u6307\u4e00\u4e2a2D\u56fe\u7247\uff0c\u5b83\u901a\u5e38\u662f\u548c\u4e00\u4e9b\u6446\u653e\u76f8\u5173\u7684\u5c5e\u6027\u6570\u636e\u4e00\u8d77\u4f7f\u7528\uff0c\u6bd4\u5982\u4f4d\u7f6e\u3001\u65cb\u8f6c\u89d2\u5ea6\u4ee5\u53ca\u4e8c\u7ef4\u7684\u5927\u5c0f\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u7cbe\u7075\u5c31\u662f\u90a3\u4e9b\u53ef\u4ee5\u57282D\u6e38\u620f\u4e2d\u6e32\u67d3\u7684\u56fe\u50cf/\u7eb9\u7406\u5bf9\u8c61\u3002 \u6211\u4eec\u53ef\u4ee5\u50cf\u524d\u9762\u5927\u591a\u6570\u6559\u7a0b\u91cc\u505a\u7684\u90a3\u6837\uff0c\u7528\u9876\u70b9\u6570\u636e\u521b\u5efa2D\u5f62\u72b6\uff0c\u5c06\u6240\u6709\u6570\u636e\u4f20\u8fdbGPU\u5e76\u624b\u52a8\u53d8\u6362\u56fe\u5f62\u3002\u7136\u800c\uff0c\u5728\u6211\u4eec\u8fd9\u6837\u7684\u5927\u578b\u5e94\u7528\u4e2d\uff0c\u6211\u4eec\u6700\u597d\u662f\u5bf92D\u5f62\u72b6\u6e32\u67d3\u505a\u4e00\u4e9b\u62bd\u8c61\u5316\u3002\u5982\u679c\u6211\u4eec\u8981\u5bf9\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u624b\u52a8\u5b9a\u4e49\u5f62\u72b6\u548c\u53d8\u6362\u7684\u8bdd\uff0c\u5f88\u5feb\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u51cc\u4e71\u4e86\u3002 \u5728\u8fd9\u4e2a\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u5b9a\u4e49\u4e00\u4e2a\u6e32\u67d3\u7c7b\uff0c\u8ba9\u6211\u4eec\u7528\u6700\u5c11\u7684\u4ee3\u7801\u6e32\u67d3\u5927\u91cf\u7684\u7cbe\u7075\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece\u6563\u6c99\u4e00\u6837\u7684OpenGL\u6e32\u67d3\u4ee3\u7801\u4e2d\u62bd\u8c61\u51fa\u6e38\u620f\u4ee3\u7801\uff0c\u8fd9\u4e5f\u662f\u5728\u4e00\u4e2a\u5927\u578b\u5de5\u7a0b\u4e2d\u5e38\u7528\u7684\u505a\u6cd5\u3002\u867d\u7136\u6211\u4eec\u9996\u5148\u8fd8\u8981\u53bb\u914d\u7f6e\u4e00\u4e2a\u5408\u9002\u7684\u6295\u5f71\u77e9\u9635\u3002 2D\u6295\u5f71\u77e9\u9635 \u4ece\u8fd9\u4e2a \u5750\u6807\u7cfb\u7edf \u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u660e\u767d\u4e86\u6295\u5f71\u77e9\u9635\u7684\u4f5c\u7528\u662f\u628a\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u8f6c\u5316\u4e3a\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u3002\u901a\u8fc7\u751f\u6210\u5408\u9002\u7684\u6295\u5f71\u77e9\u9635\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u5750\u6807\u7cfb\u4e0b\u8ba1\u7b97\uff0c\u8fd9\u53ef\u80fd\u6bd4\u628a\u6240\u6709\u7684\u5750\u6807\u90fd\u6307\u5b9a\u4e3a\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\uff08\u518d\u8ba1\u7b97\uff09\u8981\u66f4\u5bb9\u6613\u5904\u7406\u3002 \u6211\u4eec\u4e0d\u9700\u8981\u5bf9\u5750\u6807\u7cfb\u5e94\u7528\u900f\u89c6\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6e38\u620f\u5b8c\u5168\u662f2D\u7684\uff0c\u6240\u4ee5\u4e00\u4e2a\u6b63\u5c04\u6295\u5f71\u77e9\u9635(Orthographic Projection Matrix)\u5c31\u53ef\u4ee5\u4e86\u3002\u7531\u4e8e\u6b63\u5c04\u6295\u5f71\u77e9\u9635\u51e0\u4e4e\u76f4\u63a5\u53d8\u6362\u6240\u6709\u7684\u5750\u6807\u81f3\u88c1\u526a\u7a7a\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5982\u4e0b\u7684\u6295\u5f71\u77e9\u9635\u6307\u5b9a\u4e16\u754c\u5750\u6807\u4e3a\u5c4f\u5e55\u5750\u6807\uff1a glm::mat4 projection = glm::ortho(0.0f, 800.0f, 600.0f, 0.0f, -1.0f, 1.0f); \u524d\u9762\u7684\u56db\u4e2a\u53c2\u6570\u4f9d\u6b21\u6307\u5b9a\u4e86\u6295\u5f71\u5e73\u622a\u5934\u4f53\u7684\u5de6\u3001\u53f3\u3001\u4e0b\u3001\u4e0a\u8fb9\u754c\u3002\u8fd9\u4e2a\u6295\u5f71\u77e9\u9635\u628a\u6240\u6709\u57280\u5230800\u4e4b\u95f4\u7684x\u5750\u6807\u53d8\u6362\u5230-1\u52301\u4e4b\u95f4\uff0c\u5e76\u628a\u6240\u6709\u57280\u5230600\u4e4b\u95f4\u7684y\u5750\u6807\u53d8\u6362\u5230-1\u52301\u4e4b\u95f4\u3002\u8fd9\u91cc\u6211\u4eec\u6307\u5b9a\u4e86\u5e73\u622a\u5934\u4f53\u9876\u90e8\u7684y\u5750\u6807\u503c\u4e3a0\uff0c\u5e95\u90e8\u7684y\u5750\u6807\u503c\u4e3a600\u3002\u6240\u4ee5\uff0c\u8fd9\u4e2a\u573a\u666f\u7684\u5de6\u4e0a\u89d2\u5750\u6807\u4e3a(0,0)\uff0c\u53f3\u4e0b\u89d2\u5750\u6807\u4e3a(800,600)\uff0c\u5c31\u50cf\u5c4f\u5e55\u5750\u6807\u90a3\u6837\u3002\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u76f4\u63a5\u5bf9\u5e94\u6700\u7ec8\u50cf\u7d20\u7684\u5750\u6807\u3002 \u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6307\u5b9a\u6240\u6709\u7684\u9876\u70b9\u5750\u6807\u4e3a\u5c4f\u5e55\u4e0a\u7684\u50cf\u7d20\u5750\u6807\u4e86\uff0c\u8fd9\u5bf92D\u6e38\u620f\u6765\u8bf4\u76f8\u5f53\u76f4\u89c2\u3002 \u6e32\u67d3\u7cbe\u7075 \u6e32\u67d3\u4e00\u4e2a\u5b9e\u9645\u7684\u7cbe\u7075\u5e94\u8be5\u4e0d\u4f1a\u592a\u590d\u6742\u3002\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u6709\u7eb9\u7406\u7684\u56db\u8fb9\u5f62\uff0c\u5b83\u5728\u4e4b\u540e\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6a21\u578b\u77e9\u9635\u6765\u53d8\u6362\uff0c\u7136\u540e\u6211\u4eec\u4f1a\u7528\u4e4b\u524d\u5b9a\u4e49\u7684\u6b63\u5c04\u6295\u5f71\u77e9\u9635\u6765\u6295\u5f71\u5b83\u3002 Important \u7531\u4e8eBreakout\u662f\u4e00\u4e2a\u9759\u6001\u7684\u6e38\u620f\uff0c\u8fd9\u91cc\u4e0d\u9700\u8981\u89c2\u5bdf/\u6444\u50cf\u673a\u77e9\u9635\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6295\u5f71\u77e9\u9635\u628a\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u53d8\u6362\u5230\u88c1\u526a\u7a7a\u95f4\u5750\u6807\u3002 \u4e3a\u4e86\u53d8\u6362\u7cbe\u7075\u6211\u4eec\u4f1a\u4f7f\u7528\u4e0b\u9762\u8fd9\u4e2a\u9876\u70b9\u7740\u8272\u5668\uff1a #version 330 core layout (location = 0) in vec4 vertex; // <vec2 position, vec2 texCoords> out vec2 TexCoords; uniform mat4 model; uniform mat4 projection; void main() { TexCoords = vertex.zw; gl_Position = projection * model * vec4(vertex.xy, 0.0, 1.0); } \u6ce8\u610f\uff0c\u6211\u4eec\u4ec5\u7528\u4e86\u4e00\u4e2a vec4 \u53d8\u91cf\u6765\u5b58\u50a8\u4f4d\u7f6e\u548c\u7eb9\u7406\u5750\u6807\u6570\u636e\u3002\u56e0\u4e3a\u4f4d\u7f6e\u548c\u7eb9\u7406\u5750\u6807\u6570\u636e\u90fd\u53ea\u5305\u542b\u4e86\u4e24\u4e2afloat\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u4ed6\u4eec\u7ec4\u5408\u5728\u4e00\u8d77\u4f5c\u4e3a\u4e00\u4e2a\u5355\u4e00\u7684\u9876\u70b9\u5c5e\u6027\u3002 \u7247\u6bb5\u7740\u8272\u5668\u4e5f\u6bd4\u8f83\u76f4\u89c2\u3002\u6211\u4eec\u4f1a\u5728\u8fd9\u91cc\u83b7\u53d6\u4e00\u4e2a\u7eb9\u7406\u548c\u4e00\u4e2a\u989c\u8272\u5411\u91cf\uff0c\u5b83\u4eec\u90fd\u4f1a\u5f71\u54cd\u7247\u6bb5\u7684\u6700\u7ec8\u989c\u8272\u3002\u6709\u4e86\u8fd9\u4e2auniform\u989c\u8272\u5411\u91cf\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u5728\u6e38\u620f\u4ee3\u7801\u4e2d\u6539\u53d8\u7cbe\u7075\u7684\u989c\u8272\u4e86\u3002 #version 330 core in vec2 TexCoords; out vec4 color; uniform sampler2D image; uniform vec3 spriteColor; void main() { color = vec4(spriteColor, 1.0) * texture(image, TexCoords); } \u4e3a\u4e86\u8ba9\u7cbe\u7075\u7684\u6e32\u67d3\u66f4\u52a0\u6709\u6761\u7406\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a SpriteRenderer \u7c7b\uff0c\u6709\u4e86\u5b83\u53ea\u9700\u8981\u4e00\u4e2a\u51fd\u6570\u5c31\u53ef\u4ee5\u6e32\u67d3\u7cbe\u7075\u4e86\u3002\u5b83\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a class SpriteRenderer { public: SpriteRenderer(Shader &shader); ~SpriteRenderer(); void DrawSprite(Texture2D &texture, glm::vec2 position, glm::vec2 size = glm::vec2(10, 10), GLfloat rotate = 0.0f, glm::vec3 color = glm::vec3(1.0f)); private: Shader shader; GLuint quadVAO; void initRenderData(); }; SpriteRenderer \u7c7b\u5c01\u88c5\u4e86\u4e00\u4e2a\u7740\u8272\u5668\u5bf9\u8c61\uff0c\u4e00\u4e2a\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\u4ee5\u53ca\u4e00\u4e2a\u6e32\u67d3\u548c\u521d\u59cb\u5316\u51fd\u6570\u3002\u5b83\u7684\u6784\u9020\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u7740\u8272\u5668\u5bf9\u8c61\u7528\u4e8e\u4e4b\u540e\u7684\u6e32\u67d3\u3002 \u521d\u59cb\u5316 \u9996\u5148\uff0c\u8ba9\u6211\u4eec\u6df1\u5165\u7814\u7a76\u4e00\u4e0b\u8d1f\u8d23\u914d\u7f6e quadVAO \u7684 initRenderData \u51fd\u6570\uff1a void SpriteRenderer::initRenderData() { // \u914d\u7f6e VAO/VBO GLuint VBO; GLfloat vertices[] = { // \u4f4d\u7f6e // \u7eb9\u7406 0.0f, 1.0f, 0.0f, 1.0f, 1.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 0.0f, 1.0f, 0.0f }; glGenVertexArrays(1, &this->quadVAO); glGenBuffers(1, &VBO); glBindBuffer(GL_ARRAY_BUFFER, VBO); glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW); glBindVertexArray(this->quadVAO); glEnableVertexAttribArray(0); glVertexAttribPointer(0, 4, GL_FLOAT, GL_FALSE, 4 * sizeof(GLfloat), (GLvoid*)0); glBindBuffer(GL_ARRAY_BUFFER, 0); glBindVertexArray(0); } \u8fd9\u91cc\uff0c\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u4e86\u4e00\u7ec4\u4ee5\u56db\u8fb9\u5f62\u7684\u5de6\u4e0a\u89d2\u4e3a(0,0)\u5750\u6807\u7684\u9876\u70b9\u3002\u8fd9\u610f\u5473\u7740\u5f53\u6211\u4eec\u5728\u56db\u8fb9\u5f62\u4e0a\u5e94\u7528\u4e00\u4e2a\u4f4d\u79fb\u6216\u7f29\u653e\u53d8\u6362\u7684\u65f6\u5019\uff0c\u5b83\u4eec\u4f1a\u4ece\u56db\u8fb9\u5f62\u7684\u5de6\u4e0a\u89d2\u5f00\u59cb\u8fdb\u884c\u53d8\u6362\u3002\u8fd9\u57282D\u56fe\u5f62\u4ee5\u53ca/\u6216GUI\u7cfb\u7edf\u4e2d\u5e7f\u4e3a\u63a5\u53d7\uff0c\u5143\u7d20\u7684\u4f4d\u7f6e\u5b9a\u4e49\u4e3a\u5143\u7d20\u5de6\u4e0a\u89d2\u7684\u4f4d\u7f6e\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u7b80\u5355\u5730\u5411GPU\u4f20\u9012\u9876\u70b9\u6570\u636e\uff0c\u5e76\u4e14\u914d\u7f6e\u9876\u70b9\u5c5e\u6027\uff0c\u5f53\u7136\u5728\u8fd9\u91cc\u4ec5\u6709\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\u3002\u56e0\u4e3a\u6240\u6709\u7684\u7cbe\u7075\u5171\u4eab\u7740\u540c\u6837\u7684\u9876\u70b9\u6570\u636e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e3a\u8fd9\u4e2a\u7cbe\u7075\u6e32\u67d3\u5668\u5b9a\u4e49\u4e00\u4e2aVAO\u5c31\u884c\u4e86\u3002 \u6e32\u67d3 \u6e32\u67d3\u7cbe\u7075\u5e76\u4e0d\u662f\u592a\u96be\uff1b\u6211\u4eec\u4f7f\u7528\u7cbe\u7075\u6e32\u67d3\u5668\u7684\u7740\u8272\u5668\uff0c\u914d\u7f6e\u4e00\u4e2a\u6a21\u578b\u77e9\u9635\u5e76\u4e14\u8bbe\u7f6e\u76f8\u5173\u7684uniform\u3002\u8fd9\u91cc\u6700\u91cd\u8981\u7684\u5c31\u662f\u53d8\u6362\u7684\u987a\u5e8f\uff1a void SpriteRenderer::DrawSprite(Texture2D &texture, glm::vec2 position, glm::vec2 size, GLfloat rotate, glm::vec3 color) { // \u51c6\u5907\u53d8\u6362 this->shader.Use(); glm::mat4 model; model = glm::translate(model, glm::vec3(position, 0.0f)); model = glm::translate(model, glm::vec3(0.5f * size.x, 0.5f * size.y, 0.0f)); model = glm::rotate(model, rotate, glm::vec3(0.0f, 0.0f, 1.0f)); model = glm::translate(model, glm::vec3(-0.5f * size.x, -0.5f * size.y, 0.0f)); model = glm::scale(model, glm::vec3(size, 1.0f)); this->shader.SetMatrix4(\"model\", model); this->shader.SetVector3f(\"spriteColor\", color); glActiveTexture(GL_TEXTURE0); texture.Bind(); glBindVertexArray(this->quadVAO); glDrawArrays(GL_TRIANGLES, 0, 6); glBindVertexArray(0); } \u5f53\u8bd5\u56fe\u5728\u4e00\u4e2a\u573a\u666f\u4e2d\u7528\u65cb\u8f6c\u77e9\u9635\u548c\u7f29\u653e\u77e9\u9635\u653e\u7f6e\u4e00\u4e2a\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u5efa\u8bae\u662f\u9996\u5148\u505a\u7f29\u653e\u53d8\u6362\uff0c\u518d\u65cb\u8f6c\uff0c\u6700\u540e\u624d\u662f\u4f4d\u79fb\u53d8\u6362\u3002\u56e0\u4e3a\u77e9\u9635\u4e58\u6cd5\u662f\u4ece\u53f3\u5411\u5de6\u6267\u884c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53d8\u6362\u7684\u77e9\u9635\u987a\u5e8f\u662f\u76f8\u53cd\u7684\uff1a\u79fb\u52a8\uff0c\u65cb\u8f6c\uff0c\u7f29\u653e\u3002 \u65cb\u8f6c\u53d8\u6362\u53ef\u80fd\u770b\u8d77\u6765\u7a0d\u5fae\u6709\u70b9\u8ba9\u4eba\u671b\u800c\u5374\u6b65\u3002\u6211\u4eec\u4ece \u53d8\u6362 \u6559\u7a0b\u91cc\u9762\u77e5\u9053\u65cb\u8f6c\u603b\u662f\u56f4\u7ed5\u539f\u70b9(0,0)\u8f6c\u52a8\u7684\u3002\u56e0\u4e3a\u6211\u4eec\u6307\u5b9a\u4e86\u56db\u8fb9\u5f62\u7684\u5de6\u4e0a\u89d2\u4e3a(0,0)\uff0c\u6240\u6709\u7684\u65cb\u8f6c\u90fd\u4f1a\u56f4\u7ed5\u8fd9\u4e2a(0,0)\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5728\u56db\u8fb9\u5f62\u5de6\u4e0a\u89d2\u7684 \u65cb\u8f6c\u539f\u70b9 (Origin of Rotation)\u4f1a\u4ea7\u751f\u4e0d\u60f3\u8981\u7684\u7ed3\u679c\u3002\u6211\u4eec\u60f3\u8981\u505a\u7684\u662f\u628a\u65cb\u8f6c\u539f\u70b9\u79fb\u5230\u56db\u8fb9\u5f62\u7684\u4e2d\u5fc3\uff0c\u8fd9\u6837\u65cb\u8f6c\u5c31\u4f1a\u56f4\u7ed5\u56db\u8fb9\u5f62\u4e2d\u5fc3\u800c\u4e0d\u662f\u5de6\u4e0a\u89d2\u4e86\u3002\u6211\u4eec\u4f1a\u5728\u65cb\u8f6c\u4e4b\u524d\u628a\u65cb\u8f6c\u539f\u70b9\u79fb\u52a8\u5230\u56db\u8fb9\u5f62\u4e2d\u5fc3\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u56e0\u4e3a\u6211\u4eec\u9996\u5148\u4f1a\u7f29\u653e\u8fd9\u4e2a\u56db\u8fb9\u5f62\uff0c\u6211\u4eec\u5728\u4f4d\u79fb\u7cbe\u7075\u7684\u4e2d\u5fc3\u65f6\u8fd8\u9700\u8981\u628a\u7cbe\u7075\u7684\u5927\u5c0f\u8003\u8651\u8fdb\u6765\uff08\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e58\u4ee5\u4e86\u7cbe\u7075\u7684 size \u5411\u91cf\uff09\u3002\u5728\u65cb\u8f6c\u53d8\u6362\u5e94\u7528\u4e4b\u540e\uff0c\u6211\u4eec\u4f1a\u53cd\u8f6c\u4e4b\u524d\u7684\u5e73\u79fb\u64cd\u4f5c\u3002 \u628a\u6240\u6709\u53d8\u6362\u7ec4\u5408\u8d77\u6765\u6211\u4eec\u5c31\u80fd\u4ee5\u4efb\u4f55\u60f3\u8981\u7684\u65b9\u5f0f\u653e\u7f6e\u3001\u7f29\u653e\u5e76\u5e73\u79fb\u6bcf\u4e2a\u7cbe\u7075\u4e86\u3002\u4e0b\u9762\u4f60\u53ef\u4ee5\u627e\u5230\u7cbe\u7075\u6e32\u67d3\u5668\u5b8c\u6574\u7684\u6e90\u4ee3\u7801\uff1a \u7cbe\u7075\u6e32\u67d3\u5668 \uff1a \u5934\u6587\u4ef6 \uff0c \u4ee3\u7801 \u4f60\u597d\uff0c\u7cbe\u7075 \u6709\u4e86 SpriteRenderer \u7c7b\uff0c\u6211\u4eec\u7ec8\u4e8e\u80fd\u591f\u6e32\u67d3\u5b9e\u9645\u7684\u56fe\u50cf\u5230\u5c4f\u5e55\u4e0a\u4e86\uff01\u8ba9\u6211\u4eec\u6765\u5728\u6e38\u620f\u4ee3\u7801\u91cc\u9762\u521d\u59cb\u5316\u4e00\u4e2a\u7cbe\u7075\u5e76\u4e14\u52a0\u8f7d\u6211\u4eec\u6700\u559c\u7231\u7684 \u7eb9\u7406 \uff1a SpriteRenderer *Renderer; void Game::Init() { // \u52a0\u8f7d\u7740\u8272\u5668 ResourceManager::LoadShader(\"shaders/sprite.vs\", \"shaders/sprite.frag\", nullptr, \"sprite\"); // \u914d\u7f6e\u7740\u8272\u5668 glm::mat4 projection = glm::ortho(0.0f, static_cast<GLfloat>(this->Width), static_cast<GLfloat>(this->Height), 0.0f, -1.0f, 1.0f); ResourceManager::GetShader(\"sprite\").Use().SetInteger(\"image\", 0); ResourceManager::GetShader(\"sprite\").SetMatrix4(\"projection\", projection); // \u8bbe\u7f6e\u4e13\u7528\u4e8e\u6e32\u67d3\u7684\u63a7\u5236 Renderer = new SpriteRenderer(ResourceManager::GetShader(\"sprite\")); // \u52a0\u8f7d\u7eb9\u7406 ResourceManager::LoadTexture(\"textures/awesomeface.png\", GL_TRUE, \"face\"); } \u7136\u540e\uff0c\u5728\u6e32\u67d3\u51fd\u6570\u91cc\u9762\u6211\u4eec\u5c31\u53ef\u4ee5\u6e32\u67d3\u4e00\u4e0b\u6211\u4eec\u5fc3\u7231\u7684\u5409\u7965\u7269\u6765\u68c0\u6d4b\u662f\u5426\u4e00\u5207\u90fd\u6b63\u5e38\u5de5\u4f5c\u4e86\uff1a void Game::Render() { Renderer->DrawSprite(ResourceManager::GetTexture(\"face\"), glm::vec2(200, 200), glm::vec2(300, 400), 45.0f, glm::vec3(0.0f, 1.0f, 0.0f)); } \u8fd9\u91cc\u6211\u4eec\u628a\u7cbe\u7075\u653e\u7f6e\u5728\u9760\u8fd1\u5c4f\u5e55\u4e2d\u5fc3\u7684\u4f4d\u7f6e\uff0c\u5b83\u7684\u9ad8\u5ea6\u4f1a\u6bd4\u5bbd\u5ea6\u5927\u4e00\u70b9\u3002\u6211\u4eec\u540c\u6837\u4e5f\u628a\u5b83\u65cb\u8f6c\u4e8645\u5ea6\u5e76\u628a\u5b83\u8bbe\u7f6e\u4e3a\u7eff\u8272\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u8bbe\u5b9a\u7684\u7cbe\u7075\u7684\u4f4d\u7f6e\u662f\u7cbe\u7075\u56db\u8fb9\u5f62\u5de6\u4e0a\u89d2\u7684\u4f4d\u7f6e\u3002 \u5982\u679c\u4f60\u4e00\u5207\u90fd\u505a\u5bf9\u4e86\u4f60\u5e94\u8be5\u53ef\u4ee5\u770b\u5230\u4e0b\u9762\u7684\u7ed3\u679c\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u66f4\u65b0\u540e\u7684\u6e38\u620f\u7c7b\u6e90\u4ee3\u7801\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u8ba9\u6e32\u67d3\u7cfb\u7edf\u6b63\u5e38\u5de5\u4f5c\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 \u4e0b\u4e00\u8282 \u6559\u7a0b\u4e2d\u7528\u5b83\u6765\u6784\u5efa\u6e38\u620f\u7684\u5173\u5361\u3002","title":"\u6e32\u67d3\u7cbe\u7075"},{"location":"06%20In%20Practice/2D-Game/03%20Rendering%20Sprites/#_1","text":"\u539f\u6587 Rendering Sprites \u4f5c\u8005 JoeyDeVires \u7ffb\u8bd1 ZMANT \u6821\u5bf9 Krasjet Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u4e3a\u4e86\u7ed9\u6211\u4eec\u5f53\u524d\u8fd9\u4e2a\u9ed1\u6f06\u6f06\u7684\u6e38\u620f\u4e16\u754c\u5e26\u6765\u4e00\u70b9\u751f\u673a\uff0c\u6211\u4eec\u5c06\u4f1a\u6e32\u67d3\u4e00\u4e9b\u7cbe\u7075(Sprite)\u6765\u586b\u8865\u8fd9\u4e9b\u7a7a\u865a\u3002 \u7cbe\u7075 \u6709\u5f88\u591a\u79cd\u5b9a\u4e49\uff0c\u4f46\u8fd9\u91cc\u4e3b\u8981\u662f\u6307\u4e00\u4e2a2D\u56fe\u7247\uff0c\u5b83\u901a\u5e38\u662f\u548c\u4e00\u4e9b\u6446\u653e\u76f8\u5173\u7684\u5c5e\u6027\u6570\u636e\u4e00\u8d77\u4f7f\u7528\uff0c\u6bd4\u5982\u4f4d\u7f6e\u3001\u65cb\u8f6c\u89d2\u5ea6\u4ee5\u53ca\u4e8c\u7ef4\u7684\u5927\u5c0f\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u7cbe\u7075\u5c31\u662f\u90a3\u4e9b\u53ef\u4ee5\u57282D\u6e38\u620f\u4e2d\u6e32\u67d3\u7684\u56fe\u50cf/\u7eb9\u7406\u5bf9\u8c61\u3002 \u6211\u4eec\u53ef\u4ee5\u50cf\u524d\u9762\u5927\u591a\u6570\u6559\u7a0b\u91cc\u505a\u7684\u90a3\u6837\uff0c\u7528\u9876\u70b9\u6570\u636e\u521b\u5efa2D\u5f62\u72b6\uff0c\u5c06\u6240\u6709\u6570\u636e\u4f20\u8fdbGPU\u5e76\u624b\u52a8\u53d8\u6362\u56fe\u5f62\u3002\u7136\u800c\uff0c\u5728\u6211\u4eec\u8fd9\u6837\u7684\u5927\u578b\u5e94\u7528\u4e2d\uff0c\u6211\u4eec\u6700\u597d\u662f\u5bf92D\u5f62\u72b6\u6e32\u67d3\u505a\u4e00\u4e9b\u62bd\u8c61\u5316\u3002\u5982\u679c\u6211\u4eec\u8981\u5bf9\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u624b\u52a8\u5b9a\u4e49\u5f62\u72b6\u548c\u53d8\u6362\u7684\u8bdd\uff0c\u5f88\u5feb\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u51cc\u4e71\u4e86\u3002 \u5728\u8fd9\u4e2a\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u5b9a\u4e49\u4e00\u4e2a\u6e32\u67d3\u7c7b\uff0c\u8ba9\u6211\u4eec\u7528\u6700\u5c11\u7684\u4ee3\u7801\u6e32\u67d3\u5927\u91cf\u7684\u7cbe\u7075\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece\u6563\u6c99\u4e00\u6837\u7684OpenGL\u6e32\u67d3\u4ee3\u7801\u4e2d\u62bd\u8c61\u51fa\u6e38\u620f\u4ee3\u7801\uff0c\u8fd9\u4e5f\u662f\u5728\u4e00\u4e2a\u5927\u578b\u5de5\u7a0b\u4e2d\u5e38\u7528\u7684\u505a\u6cd5\u3002\u867d\u7136\u6211\u4eec\u9996\u5148\u8fd8\u8981\u53bb\u914d\u7f6e\u4e00\u4e2a\u5408\u9002\u7684\u6295\u5f71\u77e9\u9635\u3002","title":"\u6e32\u67d3\u7cbe\u7075"},{"location":"06%20In%20Practice/2D-Game/03%20Rendering%20Sprites/#2d","text":"\u4ece\u8fd9\u4e2a \u5750\u6807\u7cfb\u7edf \u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u660e\u767d\u4e86\u6295\u5f71\u77e9\u9635\u7684\u4f5c\u7528\u662f\u628a\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u8f6c\u5316\u4e3a\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u3002\u901a\u8fc7\u751f\u6210\u5408\u9002\u7684\u6295\u5f71\u77e9\u9635\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u5750\u6807\u7cfb\u4e0b\u8ba1\u7b97\uff0c\u8fd9\u53ef\u80fd\u6bd4\u628a\u6240\u6709\u7684\u5750\u6807\u90fd\u6307\u5b9a\u4e3a\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\uff08\u518d\u8ba1\u7b97\uff09\u8981\u66f4\u5bb9\u6613\u5904\u7406\u3002 \u6211\u4eec\u4e0d\u9700\u8981\u5bf9\u5750\u6807\u7cfb\u5e94\u7528\u900f\u89c6\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6e38\u620f\u5b8c\u5168\u662f2D\u7684\uff0c\u6240\u4ee5\u4e00\u4e2a\u6b63\u5c04\u6295\u5f71\u77e9\u9635(Orthographic Projection Matrix)\u5c31\u53ef\u4ee5\u4e86\u3002\u7531\u4e8e\u6b63\u5c04\u6295\u5f71\u77e9\u9635\u51e0\u4e4e\u76f4\u63a5\u53d8\u6362\u6240\u6709\u7684\u5750\u6807\u81f3\u88c1\u526a\u7a7a\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5982\u4e0b\u7684\u6295\u5f71\u77e9\u9635\u6307\u5b9a\u4e16\u754c\u5750\u6807\u4e3a\u5c4f\u5e55\u5750\u6807\uff1a glm::mat4 projection = glm::ortho(0.0f, 800.0f, 600.0f, 0.0f, -1.0f, 1.0f); \u524d\u9762\u7684\u56db\u4e2a\u53c2\u6570\u4f9d\u6b21\u6307\u5b9a\u4e86\u6295\u5f71\u5e73\u622a\u5934\u4f53\u7684\u5de6\u3001\u53f3\u3001\u4e0b\u3001\u4e0a\u8fb9\u754c\u3002\u8fd9\u4e2a\u6295\u5f71\u77e9\u9635\u628a\u6240\u6709\u57280\u5230800\u4e4b\u95f4\u7684x\u5750\u6807\u53d8\u6362\u5230-1\u52301\u4e4b\u95f4\uff0c\u5e76\u628a\u6240\u6709\u57280\u5230600\u4e4b\u95f4\u7684y\u5750\u6807\u53d8\u6362\u5230-1\u52301\u4e4b\u95f4\u3002\u8fd9\u91cc\u6211\u4eec\u6307\u5b9a\u4e86\u5e73\u622a\u5934\u4f53\u9876\u90e8\u7684y\u5750\u6807\u503c\u4e3a0\uff0c\u5e95\u90e8\u7684y\u5750\u6807\u503c\u4e3a600\u3002\u6240\u4ee5\uff0c\u8fd9\u4e2a\u573a\u666f\u7684\u5de6\u4e0a\u89d2\u5750\u6807\u4e3a(0,0)\uff0c\u53f3\u4e0b\u89d2\u5750\u6807\u4e3a(800,600)\uff0c\u5c31\u50cf\u5c4f\u5e55\u5750\u6807\u90a3\u6837\u3002\u89c2\u5bdf\u7a7a\u95f4\u5750\u6807\u76f4\u63a5\u5bf9\u5e94\u6700\u7ec8\u50cf\u7d20\u7684\u5750\u6807\u3002 \u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6307\u5b9a\u6240\u6709\u7684\u9876\u70b9\u5750\u6807\u4e3a\u5c4f\u5e55\u4e0a\u7684\u50cf\u7d20\u5750\u6807\u4e86\uff0c\u8fd9\u5bf92D\u6e38\u620f\u6765\u8bf4\u76f8\u5f53\u76f4\u89c2\u3002","title":"2D\u6295\u5f71\u77e9\u9635"},{"location":"06%20In%20Practice/2D-Game/03%20Rendering%20Sprites/#_2","text":"\u6e32\u67d3\u4e00\u4e2a\u5b9e\u9645\u7684\u7cbe\u7075\u5e94\u8be5\u4e0d\u4f1a\u592a\u590d\u6742\u3002\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u6709\u7eb9\u7406\u7684\u56db\u8fb9\u5f62\uff0c\u5b83\u5728\u4e4b\u540e\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6a21\u578b\u77e9\u9635\u6765\u53d8\u6362\uff0c\u7136\u540e\u6211\u4eec\u4f1a\u7528\u4e4b\u524d\u5b9a\u4e49\u7684\u6b63\u5c04\u6295\u5f71\u77e9\u9635\u6765\u6295\u5f71\u5b83\u3002 Important \u7531\u4e8eBreakout\u662f\u4e00\u4e2a\u9759\u6001\u7684\u6e38\u620f\uff0c\u8fd9\u91cc\u4e0d\u9700\u8981\u89c2\u5bdf/\u6444\u50cf\u673a\u77e9\u9635\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6295\u5f71\u77e9\u9635\u628a\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u53d8\u6362\u5230\u88c1\u526a\u7a7a\u95f4\u5750\u6807\u3002 \u4e3a\u4e86\u53d8\u6362\u7cbe\u7075\u6211\u4eec\u4f1a\u4f7f\u7528\u4e0b\u9762\u8fd9\u4e2a\u9876\u70b9\u7740\u8272\u5668\uff1a #version 330 core layout (location = 0) in vec4 vertex; // <vec2 position, vec2 texCoords> out vec2 TexCoords; uniform mat4 model; uniform mat4 projection; void main() { TexCoords = vertex.zw; gl_Position = projection * model * vec4(vertex.xy, 0.0, 1.0); } \u6ce8\u610f\uff0c\u6211\u4eec\u4ec5\u7528\u4e86\u4e00\u4e2a vec4 \u53d8\u91cf\u6765\u5b58\u50a8\u4f4d\u7f6e\u548c\u7eb9\u7406\u5750\u6807\u6570\u636e\u3002\u56e0\u4e3a\u4f4d\u7f6e\u548c\u7eb9\u7406\u5750\u6807\u6570\u636e\u90fd\u53ea\u5305\u542b\u4e86\u4e24\u4e2afloat\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u4ed6\u4eec\u7ec4\u5408\u5728\u4e00\u8d77\u4f5c\u4e3a\u4e00\u4e2a\u5355\u4e00\u7684\u9876\u70b9\u5c5e\u6027\u3002 \u7247\u6bb5\u7740\u8272\u5668\u4e5f\u6bd4\u8f83\u76f4\u89c2\u3002\u6211\u4eec\u4f1a\u5728\u8fd9\u91cc\u83b7\u53d6\u4e00\u4e2a\u7eb9\u7406\u548c\u4e00\u4e2a\u989c\u8272\u5411\u91cf\uff0c\u5b83\u4eec\u90fd\u4f1a\u5f71\u54cd\u7247\u6bb5\u7684\u6700\u7ec8\u989c\u8272\u3002\u6709\u4e86\u8fd9\u4e2auniform\u989c\u8272\u5411\u91cf\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u5728\u6e38\u620f\u4ee3\u7801\u4e2d\u6539\u53d8\u7cbe\u7075\u7684\u989c\u8272\u4e86\u3002 #version 330 core in vec2 TexCoords; out vec4 color; uniform sampler2D image; uniform vec3 spriteColor; void main() { color = vec4(spriteColor, 1.0) * texture(image, TexCoords); } \u4e3a\u4e86\u8ba9\u7cbe\u7075\u7684\u6e32\u67d3\u66f4\u52a0\u6709\u6761\u7406\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a SpriteRenderer \u7c7b\uff0c\u6709\u4e86\u5b83\u53ea\u9700\u8981\u4e00\u4e2a\u51fd\u6570\u5c31\u53ef\u4ee5\u6e32\u67d3\u7cbe\u7075\u4e86\u3002\u5b83\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a class SpriteRenderer { public: SpriteRenderer(Shader &shader); ~SpriteRenderer(); void DrawSprite(Texture2D &texture, glm::vec2 position, glm::vec2 size = glm::vec2(10, 10), GLfloat rotate = 0.0f, glm::vec3 color = glm::vec3(1.0f)); private: Shader shader; GLuint quadVAO; void initRenderData(); }; SpriteRenderer \u7c7b\u5c01\u88c5\u4e86\u4e00\u4e2a\u7740\u8272\u5668\u5bf9\u8c61\uff0c\u4e00\u4e2a\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\u4ee5\u53ca\u4e00\u4e2a\u6e32\u67d3\u548c\u521d\u59cb\u5316\u51fd\u6570\u3002\u5b83\u7684\u6784\u9020\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u7740\u8272\u5668\u5bf9\u8c61\u7528\u4e8e\u4e4b\u540e\u7684\u6e32\u67d3\u3002","title":"\u6e32\u67d3\u7cbe\u7075"},{"location":"06%20In%20Practice/2D-Game/03%20Rendering%20Sprites/#_3","text":"\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u6df1\u5165\u7814\u7a76\u4e00\u4e0b\u8d1f\u8d23\u914d\u7f6e quadVAO \u7684 initRenderData \u51fd\u6570\uff1a void SpriteRenderer::initRenderData() { // \u914d\u7f6e VAO/VBO GLuint VBO; GLfloat vertices[] = { // \u4f4d\u7f6e // \u7eb9\u7406 0.0f, 1.0f, 0.0f, 1.0f, 1.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 0.0f, 1.0f, 0.0f }; glGenVertexArrays(1, &this->quadVAO); glGenBuffers(1, &VBO); glBindBuffer(GL_ARRAY_BUFFER, VBO); glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW); glBindVertexArray(this->quadVAO); glEnableVertexAttribArray(0); glVertexAttribPointer(0, 4, GL_FLOAT, GL_FALSE, 4 * sizeof(GLfloat), (GLvoid*)0); glBindBuffer(GL_ARRAY_BUFFER, 0); glBindVertexArray(0); } \u8fd9\u91cc\uff0c\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u4e86\u4e00\u7ec4\u4ee5\u56db\u8fb9\u5f62\u7684\u5de6\u4e0a\u89d2\u4e3a(0,0)\u5750\u6807\u7684\u9876\u70b9\u3002\u8fd9\u610f\u5473\u7740\u5f53\u6211\u4eec\u5728\u56db\u8fb9\u5f62\u4e0a\u5e94\u7528\u4e00\u4e2a\u4f4d\u79fb\u6216\u7f29\u653e\u53d8\u6362\u7684\u65f6\u5019\uff0c\u5b83\u4eec\u4f1a\u4ece\u56db\u8fb9\u5f62\u7684\u5de6\u4e0a\u89d2\u5f00\u59cb\u8fdb\u884c\u53d8\u6362\u3002\u8fd9\u57282D\u56fe\u5f62\u4ee5\u53ca/\u6216GUI\u7cfb\u7edf\u4e2d\u5e7f\u4e3a\u63a5\u53d7\uff0c\u5143\u7d20\u7684\u4f4d\u7f6e\u5b9a\u4e49\u4e3a\u5143\u7d20\u5de6\u4e0a\u89d2\u7684\u4f4d\u7f6e\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u7b80\u5355\u5730\u5411GPU\u4f20\u9012\u9876\u70b9\u6570\u636e\uff0c\u5e76\u4e14\u914d\u7f6e\u9876\u70b9\u5c5e\u6027\uff0c\u5f53\u7136\u5728\u8fd9\u91cc\u4ec5\u6709\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\u3002\u56e0\u4e3a\u6240\u6709\u7684\u7cbe\u7075\u5171\u4eab\u7740\u540c\u6837\u7684\u9876\u70b9\u6570\u636e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e3a\u8fd9\u4e2a\u7cbe\u7075\u6e32\u67d3\u5668\u5b9a\u4e49\u4e00\u4e2aVAO\u5c31\u884c\u4e86\u3002","title":"\u521d\u59cb\u5316"},{"location":"06%20In%20Practice/2D-Game/03%20Rendering%20Sprites/#_4","text":"\u6e32\u67d3\u7cbe\u7075\u5e76\u4e0d\u662f\u592a\u96be\uff1b\u6211\u4eec\u4f7f\u7528\u7cbe\u7075\u6e32\u67d3\u5668\u7684\u7740\u8272\u5668\uff0c\u914d\u7f6e\u4e00\u4e2a\u6a21\u578b\u77e9\u9635\u5e76\u4e14\u8bbe\u7f6e\u76f8\u5173\u7684uniform\u3002\u8fd9\u91cc\u6700\u91cd\u8981\u7684\u5c31\u662f\u53d8\u6362\u7684\u987a\u5e8f\uff1a void SpriteRenderer::DrawSprite(Texture2D &texture, glm::vec2 position, glm::vec2 size, GLfloat rotate, glm::vec3 color) { // \u51c6\u5907\u53d8\u6362 this->shader.Use(); glm::mat4 model; model = glm::translate(model, glm::vec3(position, 0.0f)); model = glm::translate(model, glm::vec3(0.5f * size.x, 0.5f * size.y, 0.0f)); model = glm::rotate(model, rotate, glm::vec3(0.0f, 0.0f, 1.0f)); model = glm::translate(model, glm::vec3(-0.5f * size.x, -0.5f * size.y, 0.0f)); model = glm::scale(model, glm::vec3(size, 1.0f)); this->shader.SetMatrix4(\"model\", model); this->shader.SetVector3f(\"spriteColor\", color); glActiveTexture(GL_TEXTURE0); texture.Bind(); glBindVertexArray(this->quadVAO); glDrawArrays(GL_TRIANGLES, 0, 6); glBindVertexArray(0); } \u5f53\u8bd5\u56fe\u5728\u4e00\u4e2a\u573a\u666f\u4e2d\u7528\u65cb\u8f6c\u77e9\u9635\u548c\u7f29\u653e\u77e9\u9635\u653e\u7f6e\u4e00\u4e2a\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u5efa\u8bae\u662f\u9996\u5148\u505a\u7f29\u653e\u53d8\u6362\uff0c\u518d\u65cb\u8f6c\uff0c\u6700\u540e\u624d\u662f\u4f4d\u79fb\u53d8\u6362\u3002\u56e0\u4e3a\u77e9\u9635\u4e58\u6cd5\u662f\u4ece\u53f3\u5411\u5de6\u6267\u884c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53d8\u6362\u7684\u77e9\u9635\u987a\u5e8f\u662f\u76f8\u53cd\u7684\uff1a\u79fb\u52a8\uff0c\u65cb\u8f6c\uff0c\u7f29\u653e\u3002 \u65cb\u8f6c\u53d8\u6362\u53ef\u80fd\u770b\u8d77\u6765\u7a0d\u5fae\u6709\u70b9\u8ba9\u4eba\u671b\u800c\u5374\u6b65\u3002\u6211\u4eec\u4ece \u53d8\u6362 \u6559\u7a0b\u91cc\u9762\u77e5\u9053\u65cb\u8f6c\u603b\u662f\u56f4\u7ed5\u539f\u70b9(0,0)\u8f6c\u52a8\u7684\u3002\u56e0\u4e3a\u6211\u4eec\u6307\u5b9a\u4e86\u56db\u8fb9\u5f62\u7684\u5de6\u4e0a\u89d2\u4e3a(0,0)\uff0c\u6240\u6709\u7684\u65cb\u8f6c\u90fd\u4f1a\u56f4\u7ed5\u8fd9\u4e2a(0,0)\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5728\u56db\u8fb9\u5f62\u5de6\u4e0a\u89d2\u7684 \u65cb\u8f6c\u539f\u70b9 (Origin of Rotation)\u4f1a\u4ea7\u751f\u4e0d\u60f3\u8981\u7684\u7ed3\u679c\u3002\u6211\u4eec\u60f3\u8981\u505a\u7684\u662f\u628a\u65cb\u8f6c\u539f\u70b9\u79fb\u5230\u56db\u8fb9\u5f62\u7684\u4e2d\u5fc3\uff0c\u8fd9\u6837\u65cb\u8f6c\u5c31\u4f1a\u56f4\u7ed5\u56db\u8fb9\u5f62\u4e2d\u5fc3\u800c\u4e0d\u662f\u5de6\u4e0a\u89d2\u4e86\u3002\u6211\u4eec\u4f1a\u5728\u65cb\u8f6c\u4e4b\u524d\u628a\u65cb\u8f6c\u539f\u70b9\u79fb\u52a8\u5230\u56db\u8fb9\u5f62\u4e2d\u5fc3\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u56e0\u4e3a\u6211\u4eec\u9996\u5148\u4f1a\u7f29\u653e\u8fd9\u4e2a\u56db\u8fb9\u5f62\uff0c\u6211\u4eec\u5728\u4f4d\u79fb\u7cbe\u7075\u7684\u4e2d\u5fc3\u65f6\u8fd8\u9700\u8981\u628a\u7cbe\u7075\u7684\u5927\u5c0f\u8003\u8651\u8fdb\u6765\uff08\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e58\u4ee5\u4e86\u7cbe\u7075\u7684 size \u5411\u91cf\uff09\u3002\u5728\u65cb\u8f6c\u53d8\u6362\u5e94\u7528\u4e4b\u540e\uff0c\u6211\u4eec\u4f1a\u53cd\u8f6c\u4e4b\u524d\u7684\u5e73\u79fb\u64cd\u4f5c\u3002 \u628a\u6240\u6709\u53d8\u6362\u7ec4\u5408\u8d77\u6765\u6211\u4eec\u5c31\u80fd\u4ee5\u4efb\u4f55\u60f3\u8981\u7684\u65b9\u5f0f\u653e\u7f6e\u3001\u7f29\u653e\u5e76\u5e73\u79fb\u6bcf\u4e2a\u7cbe\u7075\u4e86\u3002\u4e0b\u9762\u4f60\u53ef\u4ee5\u627e\u5230\u7cbe\u7075\u6e32\u67d3\u5668\u5b8c\u6574\u7684\u6e90\u4ee3\u7801\uff1a \u7cbe\u7075\u6e32\u67d3\u5668 \uff1a \u5934\u6587\u4ef6 \uff0c \u4ee3\u7801","title":"\u6e32\u67d3"},{"location":"06%20In%20Practice/2D-Game/03%20Rendering%20Sprites/#_5","text":"\u6709\u4e86 SpriteRenderer \u7c7b\uff0c\u6211\u4eec\u7ec8\u4e8e\u80fd\u591f\u6e32\u67d3\u5b9e\u9645\u7684\u56fe\u50cf\u5230\u5c4f\u5e55\u4e0a\u4e86\uff01\u8ba9\u6211\u4eec\u6765\u5728\u6e38\u620f\u4ee3\u7801\u91cc\u9762\u521d\u59cb\u5316\u4e00\u4e2a\u7cbe\u7075\u5e76\u4e14\u52a0\u8f7d\u6211\u4eec\u6700\u559c\u7231\u7684 \u7eb9\u7406 \uff1a SpriteRenderer *Renderer; void Game::Init() { // \u52a0\u8f7d\u7740\u8272\u5668 ResourceManager::LoadShader(\"shaders/sprite.vs\", \"shaders/sprite.frag\", nullptr, \"sprite\"); // \u914d\u7f6e\u7740\u8272\u5668 glm::mat4 projection = glm::ortho(0.0f, static_cast<GLfloat>(this->Width), static_cast<GLfloat>(this->Height), 0.0f, -1.0f, 1.0f); ResourceManager::GetShader(\"sprite\").Use().SetInteger(\"image\", 0); ResourceManager::GetShader(\"sprite\").SetMatrix4(\"projection\", projection); // \u8bbe\u7f6e\u4e13\u7528\u4e8e\u6e32\u67d3\u7684\u63a7\u5236 Renderer = new SpriteRenderer(ResourceManager::GetShader(\"sprite\")); // \u52a0\u8f7d\u7eb9\u7406 ResourceManager::LoadTexture(\"textures/awesomeface.png\", GL_TRUE, \"face\"); } \u7136\u540e\uff0c\u5728\u6e32\u67d3\u51fd\u6570\u91cc\u9762\u6211\u4eec\u5c31\u53ef\u4ee5\u6e32\u67d3\u4e00\u4e0b\u6211\u4eec\u5fc3\u7231\u7684\u5409\u7965\u7269\u6765\u68c0\u6d4b\u662f\u5426\u4e00\u5207\u90fd\u6b63\u5e38\u5de5\u4f5c\u4e86\uff1a void Game::Render() { Renderer->DrawSprite(ResourceManager::GetTexture(\"face\"), glm::vec2(200, 200), glm::vec2(300, 400), 45.0f, glm::vec3(0.0f, 1.0f, 0.0f)); } \u8fd9\u91cc\u6211\u4eec\u628a\u7cbe\u7075\u653e\u7f6e\u5728\u9760\u8fd1\u5c4f\u5e55\u4e2d\u5fc3\u7684\u4f4d\u7f6e\uff0c\u5b83\u7684\u9ad8\u5ea6\u4f1a\u6bd4\u5bbd\u5ea6\u5927\u4e00\u70b9\u3002\u6211\u4eec\u540c\u6837\u4e5f\u628a\u5b83\u65cb\u8f6c\u4e8645\u5ea6\u5e76\u628a\u5b83\u8bbe\u7f6e\u4e3a\u7eff\u8272\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u8bbe\u5b9a\u7684\u7cbe\u7075\u7684\u4f4d\u7f6e\u662f\u7cbe\u7075\u56db\u8fb9\u5f62\u5de6\u4e0a\u89d2\u7684\u4f4d\u7f6e\u3002 \u5982\u679c\u4f60\u4e00\u5207\u90fd\u505a\u5bf9\u4e86\u4f60\u5e94\u8be5\u53ef\u4ee5\u770b\u5230\u4e0b\u9762\u7684\u7ed3\u679c\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u66f4\u65b0\u540e\u7684\u6e38\u620f\u7c7b\u6e90\u4ee3\u7801\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u8ba9\u6e32\u67d3\u7cfb\u7edf\u6b63\u5e38\u5de5\u4f5c\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 \u4e0b\u4e00\u8282 \u6559\u7a0b\u4e2d\u7528\u5b83\u6765\u6784\u5efa\u6e38\u620f\u7684\u5173\u5361\u3002","title":"\u4f60\u597d\uff0c\u7cbe\u7075"},{"location":"06%20In%20Practice/2D-Game/04%20Levels/","text":"\u5173\u5361 \u539f\u6587 Levels \u4f5c\u8005 JoeydeVries \u7ffb\u8bd1 \u5305\u7eb8 \u6821\u5bf9 \u6682\u65e0 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 Breakout\u4e0d\u4f1a\u53ea\u662f\u4e00\u4e2a\u5355\u4e00\u7684\u7eff\u8272\u7b11\u8138\uff0c\u800c\u662f\u4e00\u4e9b\u7531\u8bb8\u591a\u5f69\u8272\u7816\u5757\u7ec4\u6210\u7684\u5b8c\u6574\u5173\u5361\u3002\u6211\u4eec\u5e0c\u671b\u8fd9\u4e9b\u5173\u5361\u6709\u4ee5\u4e0b\u7279\u6027\uff1a\u4ed6\u4eec\u8db3\u591f\u7075\u6d3b\u4ee5\u4fbf\u4e8e\u652f\u6301\u4efb\u610f\u6570\u91cf\u7684\u884c\u6216\u5217\u3001\u53ef\u4ee5\u62e5\u6709\u4e0d\u53ef\u6467\u6bc1\u7684\u575a\u56fa\u7816\u5757\u3001\u652f\u6301\u591a\u79cd\u7c7b\u578b\u7684\u7816\u5757\u4e14\u8fd9\u4e9b\u4fe1\u606f\u88ab\u5b58\u50a8\u5728\u5916\u90e8\u6587\u4ef6\u4e2d\u3002 \u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u7b80\u8981\u4ecb\u7ecd\u7528\u4e8e\u7ba1\u7406\u5927\u91cf\u7816\u5757\u7684\u6e38\u620f\u5173\u5361\u5bf9\u8c61\u7684\u4ee3\u7801\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u5148\u5b9a\u4e49\u4ec0\u4e48\u662f\u4e00\u4e2a\u7816\u5757\u3002 \u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u88ab\u79f0\u4e3a\u6e38\u620f\u5bf9\u8c61\u7684\u7ec4\u4ef6\u4f5c\u4e3a\u4e00\u4e2a\u6e38\u620f\u5185\u7269\u4f53\u7684\u57fa\u672c\u8868\u793a\u3002\u8fd9\u6837\u7684\u6e38\u620f\u5bf9\u8c61\u6301\u6709\u4e00\u4e9b\u72b6\u6001\u6570\u636e\uff0c\u5982\u5176\u4f4d\u7f6e\u3001\u5927\u5c0f\u4e0e\u901f\u7387\u3002\u5b83\u8fd8\u6301\u6709\u989c\u8272\u3001\u65cb\u8f6c\u3001\u662f\u5426\u575a\u786c(\u4e0d\u53ef\u88ab\u6467\u6bc1)\u3001\u662f\u5426\u88ab\u6467\u6bc1\u7684\u5c5e\u6027\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u5b83\u8fd8\u5b58\u50a8\u4e86\u4e00\u4e2aTexture2D\u53d8\u91cf\u4f5c\u4e3a\u5176\u7cbe\u7075(Sprite)\u3002 \u6e38\u620f\u4e2d\u7684\u6bcf\u4e2a\u7269\u4f53\u90fd\u53ef\u4ee5\u88ab\u8868\u793a\u4e3a GameObject \u6216\u8fd9\u4e2a\u7c7b\u7684\u6d3e\u751f\u7c7b\uff0c\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u627e\u5230 GameObject \u7684\u4ee3\u7801\uff1a GameObject \uff1a \u5934\u6587\u4ef6 \uff0c \u4ee3\u7801 Breakout\u4e2d\u7684\u5173\u5361\u57fa\u672c\u7531\u7816\u5757\u7ec4\u6210\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u7816\u5757\u7684\u96c6\u5408\u8868\u793a\u4e00\u4e2a\u5173\u5361\u3002\u56e0\u4e3a\u7816\u5757\u9700\u8981\u548c\u6e38\u620f\u5bf9\u8c61\u51e0\u4e4e\u76f8\u540c\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5173\u5361\u4e2d\u7684\u6bcf\u4e2a\u7816\u5757\u8868\u793a\u4e3a GameObject \u3002 GameLevel \u7c7b\u7684\u5e03\u5c40\u5982\u4e0b\u6240\u793a\uff1a class GameLevel { public: std::vector<GameObject> Bricks; GameLevel() { } // \u4ece\u6587\u4ef6\u4e2d\u52a0\u8f7d\u5173\u5361 void Load(const GLchar *file, GLuint levelWidth, GLuint levelHeight); // \u6e32\u67d3\u5173\u5361 void Draw(SpriteRenderer &renderer); // \u68c0\u67e5\u4e00\u4e2a\u5173\u5361\u662f\u5426\u5df2\u5b8c\u6210 (\u6240\u6709\u975e\u575a\u786c\u7684\u74f7\u7816\u5747\u88ab\u6467\u6bc1) GLboolean IsCompleted(); private: // \u7531\u7816\u5757\u6570\u636e\u521d\u59cb\u5316\u5173\u5361 void init(std::vector<std::vector<GLuint>> tileData, GLuint levelWidth, GLuint levelHeight); }; \u7531\u4e8e\u5173\u5361\u6570\u636e\u4ece\u5916\u90e8\u6587\u672c\u4e2d\u52a0\u8f7d\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u63d0\u51fa\u67d0\u79cd\u5173\u5361\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u4e0b\u662f\u5173\u5361\u6570\u636e\u5728\u6587\u672c\u6587\u4ef6\u4e2d\u53ef\u80fd\u7684\u8868\u793a\u5f62\u5f0f\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a 1 1 1 1 1 1 2 2 0 0 2 2 3 3 4 4 3 3 \u5728\u8fd9\u91cc\u4e00\u4e2a\u5173\u5361\u88ab\u5b58\u50a8\u5728\u4e00\u4e2a\u77e9\u9635\u7ed3\u6784\u4e2d\uff0c\u6bcf\u4e2a\u6570\u5b57\u4ee3\u8868\u4e00\u79cd\u7c7b\u578b\u7684\u7816\u5757\uff0c\u5e76\u4ee5\u7a7a\u683c\u5206\u9694\u3002\u5728\u5173\u5361\u4ee3\u7801\u4e2d\u6211\u4eec\u53ef\u4ee5\u5047\u5b9a\u6bcf\u4e2a\u6570\u5b57\u4ee3\u8868\u4ec0\u4e48\uff1a \u6570\u5b570\uff1a\u65e0\u7816\u5757\uff0c\u8868\u793a\u5173\u5361\u4e2d\u7a7a\u7684\u533a\u57df \u6570\u5b571\uff1a\u4e00\u4e2a\u575a\u786c\u7684\u7816\u5757\uff0c\u4e0d\u53ef\u88ab\u6467\u6bc1 \u5927\u4e8e1\u7684\u6570\u5b57\uff1a\u4e00\u4e2a\u53ef\u88ab\u6467\u6bc1\u7684\u7816\u5757\uff0c\u4e0d\u540c\u7684\u6570\u5b57\u533a\u5206\u7816\u5757\u7684\u989c\u8272 \u4e0a\u9762\u7684\u793a\u4f8b\u5173\u5361\u5728\u88ab GameLevel \u5904\u7406\u540e\uff0c\u770b\u8d77\u6765\u4f1a\u50cf\u8fd9\u6837\uff1a GameLevel \u7c7b\u4f7f\u7528\u4e24\u4e2a\u51fd\u6570\u4ece\u6587\u4ef6\u4e2d\u751f\u6210\u4e00\u4e2a\u5173\u5361\u3002\u5b83\u9996\u5148\u5c06\u6240\u6709\u6570\u5b57\u5728 Load \u51fd\u6570\u4e2d\u52a0\u8f7d\u5230\u4e8c\u7ef4\u5bb9\u5668(vector)\u91cc\uff0c\u7136\u540e\u5728 init \u51fd\u6570\u4e2d\u5904\u7406\u8fd9\u4e9b\u6570\u5b57\uff0c\u4ee5\u521b\u5efa\u6240\u6709\u7684\u6e38\u620f\u5bf9\u8c61\u3002 void GameLevel::Load(const GLchar *file, GLuint levelWidth, GLuint levelHeight) { // \u6e05\u7a7a\u8fc7\u671f\u6570\u636e this->Bricks.clear(); // \u4ece\u6587\u4ef6\u4e2d\u52a0\u8f7d GLuint tileCode; GameLevel level; std::string line; std::ifstream fstream(file); std::vector<std::vector<GLuint>> tileData; if (fstream) { while (std::getline(fstream, line)) // \u8bfb\u53d6\u5173\u5361\u6587\u4ef6\u7684\u6bcf\u4e00\u884c { std::istringstream sstream(line); std::vector<GLuint> row; while (sstream >> tileCode) // \u8bfb\u53d6\u88ab\u7a7a\u683c\u5206\u9694\u7684\u6bcf\u4e2a\u6570\u5b57 row.push_back(tileCode); tileData.push_back(row); } if (tileData.size() > 0) this->init(tileData, levelWidth, levelHeight); } } \u88ab\u52a0\u8f7d\u540e\u7684 tileData \u6570\u636e\u88ab\u4f20\u9012\u5230 GameLevel \u7684 init \u51fd\u6570\uff1a void GameLevel::init(std::vector<std::vector<GLuint>> tileData, GLuint lvlWidth, GLuint lvlHeight) { // \u8ba1\u7b97\u6bcf\u4e2a\u7ef4\u5ea6\u7684\u5927\u5c0f GLuint height = tileData.size(); GLuint width = tileData[0].size(); GLfloat unit_width = lvlWidth / static_cast<GLfloat>(width); GLfloat unit_height = lvlHeight / height; // \u57fa\u4e8etileDataC\u521d\u59cb\u5316\u5173\u5361 for (GLuint y = 0; y < height; ++y) { for (GLuint x = 0; x < width; ++x) { // \u68c0\u67e5\u7816\u5757\u7c7b\u578b if (tileData[y][x] == 1) { glm::vec2 pos(unit_width * x, unit_height * y); glm::vec2 size(unit_width, unit_height); GameObject obj(pos, size, ResourceManager::GetTexture(\"block_solid\"), glm::vec3(0.8f, 0.8f, 0.7f) ); obj.IsSolid = GL_TRUE; this->Bricks.push_back(obj); } else if (tileData[y][x] > 1) { glm::vec3 color = glm::vec3(1.0f); // \u9ed8\u8ba4\u4e3a\u767d\u8272 if (tileData[y][x] == 2) color = glm::vec3(0.2f, 0.6f, 1.0f); else if (tileData[y][x] == 3) color = glm::vec3(0.0f, 0.7f, 0.0f); else if (tileData[y][x] == 4) color = glm::vec3(0.8f, 0.8f, 0.4f); else if (tileData[y][x] == 5) color = glm::vec3(1.0f, 0.5f, 0.0f); glm::vec2 pos(unit_width * x, unit_height * y); glm::vec2 size(unit_width, unit_height); this->Bricks.push_back( GameObject(pos, size, ResourceManager::GetTexture(\"block\"), color) ); } } } } init \u51fd\u6570\u904d\u5386\u6bcf\u4e2a\u88ab\u52a0\u8f7d\u7684\u6570\u5b57\uff0c\u5904\u7406\u540e\u5c06\u4e00\u4e2a\u76f8\u5e94\u7684 GameObject \u6dfb\u52a0\u5230\u5173\u5361\u7684\u5bb9\u5668\u4e2d\u3002\u6bcf\u4e2a\u7816\u5757\u7684\u5c3a\u5bf8(unit_width\u548cunit_height)\u6839\u636e\u7816\u5757\u7684\u603b\u6570\u88ab\u81ea\u52a8\u8ba1\u7b97\u4ee5\u4fbf\u4e8e\u6bcf\u5757\u7816\u53ef\u4ee5\u5b8c\u7f8e\u5730\u9002\u5408\u5c4f\u5e55\u8fb9\u754c\u3002 \u5728\u8fd9\u91cc\u6211\u4eec\u7528\u4e24\u4e2a\u65b0\u7684\u7eb9\u7406\u52a0\u8f7d\u6e38\u620f\u5bf9\u8c61\uff0c\u5206\u522b\u4e3a block \u7eb9\u7406\u4e0e solid block \u7eb9\u7406\u3002 \u8fd9\u91cc\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u5c0f\u7a8d\u95e8\uff0c\u5373\u8fd9\u4e9b\u7eb9\u7406\u662f\u5b8c\u5168\u7070\u5ea6\u7684\u3002\u5176\u6548\u679c\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6e38\u620f\u4ee3\u7801\u4e2d\uff0c\u901a\u8fc7\u5c06\u7070\u5ea6\u503c\u4e0e\u5b9a\u4e49\u597d\u7684\u989c\u8272\u77e2\u91cf\u76f8\u4e58\u6765\u5de7\u5999\u5730\u64cd\u7eb5\u5b83\u4eec\u7684\u989c\u8272\uff0c\u5c31\u5982\u540c\u6211\u4eec\u5728 SpriteRenderer \u4e2d\u6240\u505a\u7684\u90a3\u6837\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u81ea\u5b9a\u4e49\u7684\u989c\u8272/\u5916\u89c2\u5c31\u4e0d\u4f1a\u663e\u5f97\u602a\u5f02\u6216\u4e0d\u5e73\u8861\u3002 GameLevel \u7c7b\u8fd8\u5305\u542b\u4e00\u4e9b\u5176\u4ed6\u7684\u529f\u80fd\uff0c\u6bd4\u5982\u6e32\u67d3\u6240\u6709\u672a\u88ab\u7834\u574f\u7684\u7816\u5757\uff0c\u6216\u9a8c\u8bc1\u662f\u5426\u6240\u6709\u7684\u53ef\u7834\u574f\u7816\u5757\u5747\u88ab\u6467\u6bc1\u3002\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u627e\u5230 GameLevel \u7c7b\u7684\u6e90\u7801\uff1a GameLevel \uff1a \u5934\u6587\u4ef6 \uff0c \u4ee3\u7801 \u56e0\u4e3a\u652f\u6301\u4efb\u610f\u6570\u91cf\u7684\u884c\u548c\u5217\uff0c\u8fd9\u4e2a\u6e38\u620f\u5173\u5361\u7c7b\u7ed9\u6211\u4eec\u5e26\u6765\u4e86\u5f88\u5927\u7684\u7075\u6d3b\u6027\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u5173\u5361\u6587\u4ef6\u8f7b\u677e\u521b\u5efa\u81ea\u5df1\u7684\u5173\u5361\u3002 \u5728\u6e38\u620f\u4e2d \u6211\u4eec\u5e0c\u671b\u5728Breakout\u6e38\u620f\u4e2d\u652f\u6301\u591a\u4e2a\u5173\u5361\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u5728 Game \u7c7b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6301\u6709 GameLevel \u53d8\u91cf\u7684\u5bb9\u5668\u3002\u540c\u65f6\u6211\u4eec\u8fd8\u5c06\u5b58\u50a8\u5f53\u524d\u7684\u6e38\u620f\u5173\u5361\u3002 class Game { [...] std::vector<GameLevel> Levels; GLuint Level; [...] }; \u8fd9\u4e2a\u6559\u7a0b\u7684Breakout\u7248\u672c\u5171\u67094\u4e2a\u6e38\u620f\u5173\u5361\uff1a Standard A few small gaps Space invader Bounce galore \u7136\u540e Game \u7c7b\u7684 init \u51fd\u6570\u521d\u59cb\u5316\u6bcf\u4e2a\u7eb9\u7406\u548c\u5173\u5361\uff1a void Game::Init() { [...] // \u52a0\u8f7d\u7eb9\u7406 ResourceManager::LoadTexture(\"textures/background.jpg\", GL_FALSE, \"background\"); ResourceManager::LoadTexture(\"textures/awesomeface.png\", GL_TRUE, \"face\"); ResourceManager::LoadTexture(\"textures/block.png\", GL_FALSE, \"block\"); ResourceManager::LoadTexture(\"textures/block_solid.png\", GL_FALSE, \"block_solid\"); // \u52a0\u8f7d\u5173\u5361 GameLevel one; one.Load(\"levels/one.lvl\", this->Width, this->Height * 0.5); GameLevel two; two.Load(\"levels/two.lvl\", this->Width, this->Height * 0.5); GameLevel three; three.Load(\"levels/three.lvl\", this->Width, this->Height * 0.5); GameLevel four; four.Load(\"levels/four.lvl\", this->Width, this->Height * 0.5); this->Levels.push_back(one); this->Levels.push_back(two); this->Levels.push_back(three); this->Levels.push_back(four); this->Level = 1; } \u73b0\u5728\u5269\u4e0b\u8981\u505a\u7684\u5c31\u662f\u901a\u8fc7\u8c03\u7528\u5f53\u524d\u5173\u5361\u7684 Draw \u51fd\u6570\u6765\u6e32\u67d3\u6211\u4eec\u5b8c\u6210\u7684\u5173\u5361\uff0c\u7136\u540e\u4f7f\u7528\u7ed9\u5b9a\u7684sprite\u6e32\u67d3\u5668\u8c03\u7528\u6bcf\u4e2a GameObject \u7684 Draw \u51fd\u6570\u3002\u9664\u4e86\u5173\u5361\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u4f1a\u7528\u4e00\u4e2a\u5f88\u597d\u7684 \u80cc\u666f\u56fe\u7247 \u6765\u6e32\u67d3\u8fd9\u4e2a\u573a\u666f\uff1a void Game::Render() { if(this->State == GAME_ACTIVE) { // \u7ed8\u5236\u80cc\u666f Renderer->DrawSprite(ResourceManager::GetTexture(\"background\"), glm::vec2(0, 0), glm::vec2(this->Width, this->Height), 0.0f ); // \u7ed8\u5236\u5173\u5361 this->Levels[this->Level].Draw(*Renderer); } } \u7ed3\u679c\u4fbf\u662f\u5982\u4e0b\u8fd9\u4e2a\u88ab\u5448\u73b0\u7684\u5173\u5361\uff0c\u5b83\u4f7f\u6211\u4eec\u7684\u6e38\u620f\u53d8\u5f97\u5f00\u59cb\u751f\u52a8\u8d77\u6765\uff1a \u73a9\u5bb6\u6321\u677f \u6b64\u65f6\u6211\u4eec\u5728\u573a\u666f\u5e95\u90e8\u5f15\u5165\u4e00\u4e2a\u7531\u73a9\u5bb6\u63a7\u5236\u7684\u6321\u677f\uff0c\u6321\u677f\u53ea\u5141\u8bb8\u6c34\u5e73\u79fb\u52a8\uff0c\u5e76\u4e14\u5728\u5b83\u63a5\u89e6\u4efb\u610f\u573a\u666f\u8fb9\u7f18\u65f6\u505c\u6b62\u3002\u5bf9\u4e8e\u73a9\u5bb6\u6321\u677f\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 \u4ee5\u4e0b \u7eb9\u7406\uff1a \u4e00\u4e2a\u6321\u677f\u5bf9\u8c61\u62e5\u6709\u4f4d\u7f6e\u3001\u5927\u5c0f\u3001\u6e32\u67d3\u7eb9\u7406\u7b49\u5c5e\u6027\uff0c\u6240\u4ee5\u6211\u4eec\u7406\u6240\u5f53\u7136\u5730\u5c06\u5176\u5b9a\u4e49\u4e3a\u4e00\u4e2a GameObject \u3002 // \u521d\u59cb\u5316\u6321\u677f\u7684\u5927\u5c0f const glm::vec2 PLAYER_SIZE(100, 20); // \u521d\u59cb\u5316\u5f53\u73ed\u7684\u901f\u7387 const GLfloat PLAYER_VELOCITY(500.0f); GameObject *Player; void Game::Init() { [...] ResourceManager::LoadTexture(\"textures/paddle.png\", true, \"paddle\"); [...] glm::vec2 playerPos = glm::vec2( this->Width / 2 - PLAYER_SIZE.x / 2, this->Height - PLAYER_SIZE.y ); Player = new GameObject(playerPos, PLAYER_SIZE, ResourceManager::GetTexture(\"paddle\")); } \u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e86\u51e0\u4e2a\u5e38\u91cf\u6765\u521d\u59cb\u5316\u6321\u677f\u7684\u5927\u5c0f\u4e0e\u901f\u7387\u3002\u5728 Game \u7684 Init \u51fd\u6570\u4e2d\u6211\u4eec\u8ba1\u7b97\u6321\u677f\u7684\u521d\u59cb\u4f4d\u7f6e\uff0c\u4f7f\u5176\u4e2d\u5fc3\u4e0e\u573a\u666f\u7684\u6c34\u5e73\u4e2d\u5fc3\u5bf9\u9f50\u3002 \u9664\u6b64\u4e4b\u5916\u6211\u4eec\u8fd8\u9700\u8981\u5728 Game \u7684 Render \u51fd\u6570\u4e2d\u6dfb\u52a0\uff1a Player->Draw(*Renderer); \u5982\u679c\u4f60\u73b0\u5728\u542f\u52a8\u6e38\u620f\uff0c\u4f60\u4e0d\u4ec5\u4f1a\u770b\u5230\u5173\u5361\u753b\u9762\uff0c\u8fd8\u4f1a\u6709\u4e00\u4e2a\u5728\u573a\u666f\u5e95\u90e8\u8fb9\u7f18\u7684\u5947\u7279\u7684\u6321\u677f\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5b83\u9664\u4e86\u9759\u6001\u5730\u653e\u7f6e\u5728\u90a3\u4ee5\u5916\u4e0d\u4f1a\u53d1\u751f\u4efb\u4f55\u4e8b\u60c5\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u8fdb\u5165\u6e38\u620f\u7684 ProcessInput \u51fd\u6570\uff0c\u4f7f\u5f97\u5f53\u73a9\u5bb6\u6309\u4e0bA\u548cD\u65f6\uff0c\u6321\u677f\u53ef\u4ee5\u6c34\u5e73\u79fb\u52a8\u3002 void Game::ProcessInput(GLfloat dt) { if (this->State == GAME_ACTIVE) { GLfloat velocity = PLAYER_VELOCITY * dt; // \u79fb\u52a8\u6321\u677f if (this->Keys[GLFW_KEY_A]) { if (Player->Position.x >= 0) Player->Position.x -= velocity; } if (this->Keys[GLFW_KEY_D]) { if (Player->Position.x <= this->Width - Player->Size.x) Player->Position.x += velocity; } } } \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u6839\u636e\u7528\u6237\u6309\u4e0b\u7684\u952e\uff0c\u5411\u5de6\u6216\u5411\u53f3\u79fb\u52a8\u6321\u677f(\u6ce8\u610f\u6211\u4eec\u5c06\u901f\u7387\u4e0edeltaTime\u76f8\u4e58)\u3002\u5f53\u6321\u677f\u7684x\u503c\u5c0f\u4e8e0\uff0c\u5b83\u5c06\u79fb\u52a8\u51fa\u6e38\u620f\u573a\u666f\u7684\u6700\u5de6\u4fa7\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u5141\u8bb8\u6321\u677f\u7684x\u503c\u5927\u4e8e0\u65f6\u5411\u5de6\u79fb\u52a8\u3002\u5bf9\u4e8e\u53f3\u4fa7\u8fb9\u7f18\u6211\u4eec\u505a\u76f8\u540c\u7684\u5904\u7406\uff0c\u4f46\u6211\u4eec\u5fc5\u987b\u6bd4\u8f83\u573a\u666f\u7684\u53f3\u4fa7\u8fb9\u7f18\u4e0e\u6321\u677f\u7684\u53f3\u4fa7\u8fb9\u7f18\uff0c\u5373\u573a\u666f\u5bbd\u5ea6\u51cf\u53bb\u6321\u677f\u5bbd\u5ea6\u3002 \u73b0\u5728\u542f\u52a8\u6e38\u620f\uff0c\u5c06\u5448\u73b0\u4e00\u4e2a\u73a9\u5bb6\u53ef\u63a7\u5236\u5728\u6574\u4e2a\u573a\u666f\u5e95\u90e8\u81ea\u7531\u79fb\u52a8\u7684\u6321\u677f\u3002 \u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u627e\u5230\u66f4\u65b0\u540e\u7684 Game \u7c7b\u4ee3\u7801\uff1a Game \uff1a \u5934\u6587\u4ef6 \uff0c \u4ee3\u7801","title":"\u5173\u5361"},{"location":"06%20In%20Practice/2D-Game/04%20Levels/#_1","text":"\u539f\u6587 Levels \u4f5c\u8005 JoeydeVries \u7ffb\u8bd1 \u5305\u7eb8 \u6821\u5bf9 \u6682\u65e0 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 Breakout\u4e0d\u4f1a\u53ea\u662f\u4e00\u4e2a\u5355\u4e00\u7684\u7eff\u8272\u7b11\u8138\uff0c\u800c\u662f\u4e00\u4e9b\u7531\u8bb8\u591a\u5f69\u8272\u7816\u5757\u7ec4\u6210\u7684\u5b8c\u6574\u5173\u5361\u3002\u6211\u4eec\u5e0c\u671b\u8fd9\u4e9b\u5173\u5361\u6709\u4ee5\u4e0b\u7279\u6027\uff1a\u4ed6\u4eec\u8db3\u591f\u7075\u6d3b\u4ee5\u4fbf\u4e8e\u652f\u6301\u4efb\u610f\u6570\u91cf\u7684\u884c\u6216\u5217\u3001\u53ef\u4ee5\u62e5\u6709\u4e0d\u53ef\u6467\u6bc1\u7684\u575a\u56fa\u7816\u5757\u3001\u652f\u6301\u591a\u79cd\u7c7b\u578b\u7684\u7816\u5757\u4e14\u8fd9\u4e9b\u4fe1\u606f\u88ab\u5b58\u50a8\u5728\u5916\u90e8\u6587\u4ef6\u4e2d\u3002 \u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u7b80\u8981\u4ecb\u7ecd\u7528\u4e8e\u7ba1\u7406\u5927\u91cf\u7816\u5757\u7684\u6e38\u620f\u5173\u5361\u5bf9\u8c61\u7684\u4ee3\u7801\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u5148\u5b9a\u4e49\u4ec0\u4e48\u662f\u4e00\u4e2a\u7816\u5757\u3002 \u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u88ab\u79f0\u4e3a\u6e38\u620f\u5bf9\u8c61\u7684\u7ec4\u4ef6\u4f5c\u4e3a\u4e00\u4e2a\u6e38\u620f\u5185\u7269\u4f53\u7684\u57fa\u672c\u8868\u793a\u3002\u8fd9\u6837\u7684\u6e38\u620f\u5bf9\u8c61\u6301\u6709\u4e00\u4e9b\u72b6\u6001\u6570\u636e\uff0c\u5982\u5176\u4f4d\u7f6e\u3001\u5927\u5c0f\u4e0e\u901f\u7387\u3002\u5b83\u8fd8\u6301\u6709\u989c\u8272\u3001\u65cb\u8f6c\u3001\u662f\u5426\u575a\u786c(\u4e0d\u53ef\u88ab\u6467\u6bc1)\u3001\u662f\u5426\u88ab\u6467\u6bc1\u7684\u5c5e\u6027\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u5b83\u8fd8\u5b58\u50a8\u4e86\u4e00\u4e2aTexture2D\u53d8\u91cf\u4f5c\u4e3a\u5176\u7cbe\u7075(Sprite)\u3002 \u6e38\u620f\u4e2d\u7684\u6bcf\u4e2a\u7269\u4f53\u90fd\u53ef\u4ee5\u88ab\u8868\u793a\u4e3a GameObject \u6216\u8fd9\u4e2a\u7c7b\u7684\u6d3e\u751f\u7c7b\uff0c\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u627e\u5230 GameObject \u7684\u4ee3\u7801\uff1a GameObject \uff1a \u5934\u6587\u4ef6 \uff0c \u4ee3\u7801 Breakout\u4e2d\u7684\u5173\u5361\u57fa\u672c\u7531\u7816\u5757\u7ec4\u6210\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u7816\u5757\u7684\u96c6\u5408\u8868\u793a\u4e00\u4e2a\u5173\u5361\u3002\u56e0\u4e3a\u7816\u5757\u9700\u8981\u548c\u6e38\u620f\u5bf9\u8c61\u51e0\u4e4e\u76f8\u540c\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5173\u5361\u4e2d\u7684\u6bcf\u4e2a\u7816\u5757\u8868\u793a\u4e3a GameObject \u3002 GameLevel \u7c7b\u7684\u5e03\u5c40\u5982\u4e0b\u6240\u793a\uff1a class GameLevel { public: std::vector<GameObject> Bricks; GameLevel() { } // \u4ece\u6587\u4ef6\u4e2d\u52a0\u8f7d\u5173\u5361 void Load(const GLchar *file, GLuint levelWidth, GLuint levelHeight); // \u6e32\u67d3\u5173\u5361 void Draw(SpriteRenderer &renderer); // \u68c0\u67e5\u4e00\u4e2a\u5173\u5361\u662f\u5426\u5df2\u5b8c\u6210 (\u6240\u6709\u975e\u575a\u786c\u7684\u74f7\u7816\u5747\u88ab\u6467\u6bc1) GLboolean IsCompleted(); private: // \u7531\u7816\u5757\u6570\u636e\u521d\u59cb\u5316\u5173\u5361 void init(std::vector<std::vector<GLuint>> tileData, GLuint levelWidth, GLuint levelHeight); }; \u7531\u4e8e\u5173\u5361\u6570\u636e\u4ece\u5916\u90e8\u6587\u672c\u4e2d\u52a0\u8f7d\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u63d0\u51fa\u67d0\u79cd\u5173\u5361\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u4e0b\u662f\u5173\u5361\u6570\u636e\u5728\u6587\u672c\u6587\u4ef6\u4e2d\u53ef\u80fd\u7684\u8868\u793a\u5f62\u5f0f\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a 1 1 1 1 1 1 2 2 0 0 2 2 3 3 4 4 3 3 \u5728\u8fd9\u91cc\u4e00\u4e2a\u5173\u5361\u88ab\u5b58\u50a8\u5728\u4e00\u4e2a\u77e9\u9635\u7ed3\u6784\u4e2d\uff0c\u6bcf\u4e2a\u6570\u5b57\u4ee3\u8868\u4e00\u79cd\u7c7b\u578b\u7684\u7816\u5757\uff0c\u5e76\u4ee5\u7a7a\u683c\u5206\u9694\u3002\u5728\u5173\u5361\u4ee3\u7801\u4e2d\u6211\u4eec\u53ef\u4ee5\u5047\u5b9a\u6bcf\u4e2a\u6570\u5b57\u4ee3\u8868\u4ec0\u4e48\uff1a \u6570\u5b570\uff1a\u65e0\u7816\u5757\uff0c\u8868\u793a\u5173\u5361\u4e2d\u7a7a\u7684\u533a\u57df \u6570\u5b571\uff1a\u4e00\u4e2a\u575a\u786c\u7684\u7816\u5757\uff0c\u4e0d\u53ef\u88ab\u6467\u6bc1 \u5927\u4e8e1\u7684\u6570\u5b57\uff1a\u4e00\u4e2a\u53ef\u88ab\u6467\u6bc1\u7684\u7816\u5757\uff0c\u4e0d\u540c\u7684\u6570\u5b57\u533a\u5206\u7816\u5757\u7684\u989c\u8272 \u4e0a\u9762\u7684\u793a\u4f8b\u5173\u5361\u5728\u88ab GameLevel \u5904\u7406\u540e\uff0c\u770b\u8d77\u6765\u4f1a\u50cf\u8fd9\u6837\uff1a GameLevel \u7c7b\u4f7f\u7528\u4e24\u4e2a\u51fd\u6570\u4ece\u6587\u4ef6\u4e2d\u751f\u6210\u4e00\u4e2a\u5173\u5361\u3002\u5b83\u9996\u5148\u5c06\u6240\u6709\u6570\u5b57\u5728 Load \u51fd\u6570\u4e2d\u52a0\u8f7d\u5230\u4e8c\u7ef4\u5bb9\u5668(vector)\u91cc\uff0c\u7136\u540e\u5728 init \u51fd\u6570\u4e2d\u5904\u7406\u8fd9\u4e9b\u6570\u5b57\uff0c\u4ee5\u521b\u5efa\u6240\u6709\u7684\u6e38\u620f\u5bf9\u8c61\u3002 void GameLevel::Load(const GLchar *file, GLuint levelWidth, GLuint levelHeight) { // \u6e05\u7a7a\u8fc7\u671f\u6570\u636e this->Bricks.clear(); // \u4ece\u6587\u4ef6\u4e2d\u52a0\u8f7d GLuint tileCode; GameLevel level; std::string line; std::ifstream fstream(file); std::vector<std::vector<GLuint>> tileData; if (fstream) { while (std::getline(fstream, line)) // \u8bfb\u53d6\u5173\u5361\u6587\u4ef6\u7684\u6bcf\u4e00\u884c { std::istringstream sstream(line); std::vector<GLuint> row; while (sstream >> tileCode) // \u8bfb\u53d6\u88ab\u7a7a\u683c\u5206\u9694\u7684\u6bcf\u4e2a\u6570\u5b57 row.push_back(tileCode); tileData.push_back(row); } if (tileData.size() > 0) this->init(tileData, levelWidth, levelHeight); } } \u88ab\u52a0\u8f7d\u540e\u7684 tileData \u6570\u636e\u88ab\u4f20\u9012\u5230 GameLevel \u7684 init \u51fd\u6570\uff1a void GameLevel::init(std::vector<std::vector<GLuint>> tileData, GLuint lvlWidth, GLuint lvlHeight) { // \u8ba1\u7b97\u6bcf\u4e2a\u7ef4\u5ea6\u7684\u5927\u5c0f GLuint height = tileData.size(); GLuint width = tileData[0].size(); GLfloat unit_width = lvlWidth / static_cast<GLfloat>(width); GLfloat unit_height = lvlHeight / height; // \u57fa\u4e8etileDataC\u521d\u59cb\u5316\u5173\u5361 for (GLuint y = 0; y < height; ++y) { for (GLuint x = 0; x < width; ++x) { // \u68c0\u67e5\u7816\u5757\u7c7b\u578b if (tileData[y][x] == 1) { glm::vec2 pos(unit_width * x, unit_height * y); glm::vec2 size(unit_width, unit_height); GameObject obj(pos, size, ResourceManager::GetTexture(\"block_solid\"), glm::vec3(0.8f, 0.8f, 0.7f) ); obj.IsSolid = GL_TRUE; this->Bricks.push_back(obj); } else if (tileData[y][x] > 1) { glm::vec3 color = glm::vec3(1.0f); // \u9ed8\u8ba4\u4e3a\u767d\u8272 if (tileData[y][x] == 2) color = glm::vec3(0.2f, 0.6f, 1.0f); else if (tileData[y][x] == 3) color = glm::vec3(0.0f, 0.7f, 0.0f); else if (tileData[y][x] == 4) color = glm::vec3(0.8f, 0.8f, 0.4f); else if (tileData[y][x] == 5) color = glm::vec3(1.0f, 0.5f, 0.0f); glm::vec2 pos(unit_width * x, unit_height * y); glm::vec2 size(unit_width, unit_height); this->Bricks.push_back( GameObject(pos, size, ResourceManager::GetTexture(\"block\"), color) ); } } } } init \u51fd\u6570\u904d\u5386\u6bcf\u4e2a\u88ab\u52a0\u8f7d\u7684\u6570\u5b57\uff0c\u5904\u7406\u540e\u5c06\u4e00\u4e2a\u76f8\u5e94\u7684 GameObject \u6dfb\u52a0\u5230\u5173\u5361\u7684\u5bb9\u5668\u4e2d\u3002\u6bcf\u4e2a\u7816\u5757\u7684\u5c3a\u5bf8(unit_width\u548cunit_height)\u6839\u636e\u7816\u5757\u7684\u603b\u6570\u88ab\u81ea\u52a8\u8ba1\u7b97\u4ee5\u4fbf\u4e8e\u6bcf\u5757\u7816\u53ef\u4ee5\u5b8c\u7f8e\u5730\u9002\u5408\u5c4f\u5e55\u8fb9\u754c\u3002 \u5728\u8fd9\u91cc\u6211\u4eec\u7528\u4e24\u4e2a\u65b0\u7684\u7eb9\u7406\u52a0\u8f7d\u6e38\u620f\u5bf9\u8c61\uff0c\u5206\u522b\u4e3a block \u7eb9\u7406\u4e0e solid block \u7eb9\u7406\u3002 \u8fd9\u91cc\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u5c0f\u7a8d\u95e8\uff0c\u5373\u8fd9\u4e9b\u7eb9\u7406\u662f\u5b8c\u5168\u7070\u5ea6\u7684\u3002\u5176\u6548\u679c\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6e38\u620f\u4ee3\u7801\u4e2d\uff0c\u901a\u8fc7\u5c06\u7070\u5ea6\u503c\u4e0e\u5b9a\u4e49\u597d\u7684\u989c\u8272\u77e2\u91cf\u76f8\u4e58\u6765\u5de7\u5999\u5730\u64cd\u7eb5\u5b83\u4eec\u7684\u989c\u8272\uff0c\u5c31\u5982\u540c\u6211\u4eec\u5728 SpriteRenderer \u4e2d\u6240\u505a\u7684\u90a3\u6837\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u81ea\u5b9a\u4e49\u7684\u989c\u8272/\u5916\u89c2\u5c31\u4e0d\u4f1a\u663e\u5f97\u602a\u5f02\u6216\u4e0d\u5e73\u8861\u3002 GameLevel \u7c7b\u8fd8\u5305\u542b\u4e00\u4e9b\u5176\u4ed6\u7684\u529f\u80fd\uff0c\u6bd4\u5982\u6e32\u67d3\u6240\u6709\u672a\u88ab\u7834\u574f\u7684\u7816\u5757\uff0c\u6216\u9a8c\u8bc1\u662f\u5426\u6240\u6709\u7684\u53ef\u7834\u574f\u7816\u5757\u5747\u88ab\u6467\u6bc1\u3002\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u627e\u5230 GameLevel \u7c7b\u7684\u6e90\u7801\uff1a GameLevel \uff1a \u5934\u6587\u4ef6 \uff0c \u4ee3\u7801 \u56e0\u4e3a\u652f\u6301\u4efb\u610f\u6570\u91cf\u7684\u884c\u548c\u5217\uff0c\u8fd9\u4e2a\u6e38\u620f\u5173\u5361\u7c7b\u7ed9\u6211\u4eec\u5e26\u6765\u4e86\u5f88\u5927\u7684\u7075\u6d3b\u6027\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u5173\u5361\u6587\u4ef6\u8f7b\u677e\u521b\u5efa\u81ea\u5df1\u7684\u5173\u5361\u3002","title":"\u5173\u5361"},{"location":"06%20In%20Practice/2D-Game/04%20Levels/#_2","text":"\u6211\u4eec\u5e0c\u671b\u5728Breakout\u6e38\u620f\u4e2d\u652f\u6301\u591a\u4e2a\u5173\u5361\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u5728 Game \u7c7b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6301\u6709 GameLevel \u53d8\u91cf\u7684\u5bb9\u5668\u3002\u540c\u65f6\u6211\u4eec\u8fd8\u5c06\u5b58\u50a8\u5f53\u524d\u7684\u6e38\u620f\u5173\u5361\u3002 class Game { [...] std::vector<GameLevel> Levels; GLuint Level; [...] }; \u8fd9\u4e2a\u6559\u7a0b\u7684Breakout\u7248\u672c\u5171\u67094\u4e2a\u6e38\u620f\u5173\u5361\uff1a Standard A few small gaps Space invader Bounce galore \u7136\u540e Game \u7c7b\u7684 init \u51fd\u6570\u521d\u59cb\u5316\u6bcf\u4e2a\u7eb9\u7406\u548c\u5173\u5361\uff1a void Game::Init() { [...] // \u52a0\u8f7d\u7eb9\u7406 ResourceManager::LoadTexture(\"textures/background.jpg\", GL_FALSE, \"background\"); ResourceManager::LoadTexture(\"textures/awesomeface.png\", GL_TRUE, \"face\"); ResourceManager::LoadTexture(\"textures/block.png\", GL_FALSE, \"block\"); ResourceManager::LoadTexture(\"textures/block_solid.png\", GL_FALSE, \"block_solid\"); // \u52a0\u8f7d\u5173\u5361 GameLevel one; one.Load(\"levels/one.lvl\", this->Width, this->Height * 0.5); GameLevel two; two.Load(\"levels/two.lvl\", this->Width, this->Height * 0.5); GameLevel three; three.Load(\"levels/three.lvl\", this->Width, this->Height * 0.5); GameLevel four; four.Load(\"levels/four.lvl\", this->Width, this->Height * 0.5); this->Levels.push_back(one); this->Levels.push_back(two); this->Levels.push_back(three); this->Levels.push_back(four); this->Level = 1; } \u73b0\u5728\u5269\u4e0b\u8981\u505a\u7684\u5c31\u662f\u901a\u8fc7\u8c03\u7528\u5f53\u524d\u5173\u5361\u7684 Draw \u51fd\u6570\u6765\u6e32\u67d3\u6211\u4eec\u5b8c\u6210\u7684\u5173\u5361\uff0c\u7136\u540e\u4f7f\u7528\u7ed9\u5b9a\u7684sprite\u6e32\u67d3\u5668\u8c03\u7528\u6bcf\u4e2a GameObject \u7684 Draw \u51fd\u6570\u3002\u9664\u4e86\u5173\u5361\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u4f1a\u7528\u4e00\u4e2a\u5f88\u597d\u7684 \u80cc\u666f\u56fe\u7247 \u6765\u6e32\u67d3\u8fd9\u4e2a\u573a\u666f\uff1a void Game::Render() { if(this->State == GAME_ACTIVE) { // \u7ed8\u5236\u80cc\u666f Renderer->DrawSprite(ResourceManager::GetTexture(\"background\"), glm::vec2(0, 0), glm::vec2(this->Width, this->Height), 0.0f ); // \u7ed8\u5236\u5173\u5361 this->Levels[this->Level].Draw(*Renderer); } } \u7ed3\u679c\u4fbf\u662f\u5982\u4e0b\u8fd9\u4e2a\u88ab\u5448\u73b0\u7684\u5173\u5361\uff0c\u5b83\u4f7f\u6211\u4eec\u7684\u6e38\u620f\u53d8\u5f97\u5f00\u59cb\u751f\u52a8\u8d77\u6765\uff1a","title":"\u5728\u6e38\u620f\u4e2d"},{"location":"06%20In%20Practice/2D-Game/04%20Levels/#_3","text":"\u6b64\u65f6\u6211\u4eec\u5728\u573a\u666f\u5e95\u90e8\u5f15\u5165\u4e00\u4e2a\u7531\u73a9\u5bb6\u63a7\u5236\u7684\u6321\u677f\uff0c\u6321\u677f\u53ea\u5141\u8bb8\u6c34\u5e73\u79fb\u52a8\uff0c\u5e76\u4e14\u5728\u5b83\u63a5\u89e6\u4efb\u610f\u573a\u666f\u8fb9\u7f18\u65f6\u505c\u6b62\u3002\u5bf9\u4e8e\u73a9\u5bb6\u6321\u677f\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 \u4ee5\u4e0b \u7eb9\u7406\uff1a \u4e00\u4e2a\u6321\u677f\u5bf9\u8c61\u62e5\u6709\u4f4d\u7f6e\u3001\u5927\u5c0f\u3001\u6e32\u67d3\u7eb9\u7406\u7b49\u5c5e\u6027\uff0c\u6240\u4ee5\u6211\u4eec\u7406\u6240\u5f53\u7136\u5730\u5c06\u5176\u5b9a\u4e49\u4e3a\u4e00\u4e2a GameObject \u3002 // \u521d\u59cb\u5316\u6321\u677f\u7684\u5927\u5c0f const glm::vec2 PLAYER_SIZE(100, 20); // \u521d\u59cb\u5316\u5f53\u73ed\u7684\u901f\u7387 const GLfloat PLAYER_VELOCITY(500.0f); GameObject *Player; void Game::Init() { [...] ResourceManager::LoadTexture(\"textures/paddle.png\", true, \"paddle\"); [...] glm::vec2 playerPos = glm::vec2( this->Width / 2 - PLAYER_SIZE.x / 2, this->Height - PLAYER_SIZE.y ); Player = new GameObject(playerPos, PLAYER_SIZE, ResourceManager::GetTexture(\"paddle\")); } \u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e86\u51e0\u4e2a\u5e38\u91cf\u6765\u521d\u59cb\u5316\u6321\u677f\u7684\u5927\u5c0f\u4e0e\u901f\u7387\u3002\u5728 Game \u7684 Init \u51fd\u6570\u4e2d\u6211\u4eec\u8ba1\u7b97\u6321\u677f\u7684\u521d\u59cb\u4f4d\u7f6e\uff0c\u4f7f\u5176\u4e2d\u5fc3\u4e0e\u573a\u666f\u7684\u6c34\u5e73\u4e2d\u5fc3\u5bf9\u9f50\u3002 \u9664\u6b64\u4e4b\u5916\u6211\u4eec\u8fd8\u9700\u8981\u5728 Game \u7684 Render \u51fd\u6570\u4e2d\u6dfb\u52a0\uff1a Player->Draw(*Renderer); \u5982\u679c\u4f60\u73b0\u5728\u542f\u52a8\u6e38\u620f\uff0c\u4f60\u4e0d\u4ec5\u4f1a\u770b\u5230\u5173\u5361\u753b\u9762\uff0c\u8fd8\u4f1a\u6709\u4e00\u4e2a\u5728\u573a\u666f\u5e95\u90e8\u8fb9\u7f18\u7684\u5947\u7279\u7684\u6321\u677f\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5b83\u9664\u4e86\u9759\u6001\u5730\u653e\u7f6e\u5728\u90a3\u4ee5\u5916\u4e0d\u4f1a\u53d1\u751f\u4efb\u4f55\u4e8b\u60c5\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u8fdb\u5165\u6e38\u620f\u7684 ProcessInput \u51fd\u6570\uff0c\u4f7f\u5f97\u5f53\u73a9\u5bb6\u6309\u4e0bA\u548cD\u65f6\uff0c\u6321\u677f\u53ef\u4ee5\u6c34\u5e73\u79fb\u52a8\u3002 void Game::ProcessInput(GLfloat dt) { if (this->State == GAME_ACTIVE) { GLfloat velocity = PLAYER_VELOCITY * dt; // \u79fb\u52a8\u6321\u677f if (this->Keys[GLFW_KEY_A]) { if (Player->Position.x >= 0) Player->Position.x -= velocity; } if (this->Keys[GLFW_KEY_D]) { if (Player->Position.x <= this->Width - Player->Size.x) Player->Position.x += velocity; } } } \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u6839\u636e\u7528\u6237\u6309\u4e0b\u7684\u952e\uff0c\u5411\u5de6\u6216\u5411\u53f3\u79fb\u52a8\u6321\u677f(\u6ce8\u610f\u6211\u4eec\u5c06\u901f\u7387\u4e0edeltaTime\u76f8\u4e58)\u3002\u5f53\u6321\u677f\u7684x\u503c\u5c0f\u4e8e0\uff0c\u5b83\u5c06\u79fb\u52a8\u51fa\u6e38\u620f\u573a\u666f\u7684\u6700\u5de6\u4fa7\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u5141\u8bb8\u6321\u677f\u7684x\u503c\u5927\u4e8e0\u65f6\u5411\u5de6\u79fb\u52a8\u3002\u5bf9\u4e8e\u53f3\u4fa7\u8fb9\u7f18\u6211\u4eec\u505a\u76f8\u540c\u7684\u5904\u7406\uff0c\u4f46\u6211\u4eec\u5fc5\u987b\u6bd4\u8f83\u573a\u666f\u7684\u53f3\u4fa7\u8fb9\u7f18\u4e0e\u6321\u677f\u7684\u53f3\u4fa7\u8fb9\u7f18\uff0c\u5373\u573a\u666f\u5bbd\u5ea6\u51cf\u53bb\u6321\u677f\u5bbd\u5ea6\u3002 \u73b0\u5728\u542f\u52a8\u6e38\u620f\uff0c\u5c06\u5448\u73b0\u4e00\u4e2a\u73a9\u5bb6\u53ef\u63a7\u5236\u5728\u6574\u4e2a\u573a\u666f\u5e95\u90e8\u81ea\u7531\u79fb\u52a8\u7684\u6321\u677f\u3002 \u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u627e\u5230\u66f4\u65b0\u540e\u7684 Game \u7c7b\u4ee3\u7801\uff1a Game \uff1a \u5934\u6587\u4ef6 \uff0c \u4ee3\u7801","title":"\u73a9\u5bb6\u6321\u677f"},{"location":"06%20In%20Practice/2D-Game/06%20Particles/","text":"\u7c92\u5b50 \u539f\u6587 Particles \u4f5c\u8005 JoeydeVries \u7ffb\u8bd1 ZMANT \u6821\u5bf9 \u6682\u65e0 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u4e00\u4e2a\u5fae\u7c92,\u4eceOpenGL\u7684\u89d2\u5ea6\u770b\u5c31\u662f\u4e00\u4e2a\u603b\u662f\u9762\u5411\u6444\u50cf\u673a\u65b9\u5411\u4e14(\u901a\u5e38)\u5305\u542b\u4e00\u4e2a\u5927\u90e8\u5206\u533a\u57df\u662f\u900f\u660e\u7684\u7eb9\u7406\u7684\u5c0f\u56db\u8fb9\u5f62\u3002\u4e00\u4e2a\u5fae\u7c92\u672c\u8eab\u4e3b\u8981\u5c31\u662f\u4e00\u4e2a\u7cbe\u7075(sprite),\u524d\u9762\u6211\u4eec\u5df2\u7ecf\u65e9\u5c31\u4f7f\u7528\u8fc7\u4e86\uff0c\u4f46\u662f\u5f53\u4f60\u628a\u6210\u5343\u4e0a\u4e07\u4e2a\u8fd9\u4e9b\u5fae\u7c92\u653e\u5728\u4e00\u8d77\u7684\u65f6\u5019,\u5c31\u53ef\u4ee5\u521b\u9020\u51fa\u4ee4\u4eba\u75af\u72c2\u7684\u6548\u679c. \u5f53\u5904\u7406\u8fd9\u4e9b\u5fae\u7c92\u7684\u65f6\u5019\uff0c\u901a\u5e38\u662f\u7531\u4e00\u4e2a\u53eb\u505a\u7c92\u5b50\u53d1\u5c04\u5668\u6216\u7c92\u5b50\u751f\u6210\u5668\u7684\u4e1c\u897f\u5b8c\u6210\u7684\uff0c\u4ece\u8fd9\u4e2a\u5730\u65b9,\u6301\u7eed\u4e0d\u65ad\u7684\u4ea7\u751f\u65b0\u7684\u5fae\u7c92\u5e76\u4e14\u65e7\u7684\u5fae\u7c92\u968f\u7740\u65f6\u95f4\u9010\u6e10\u6d88\u4ea1\u3002\u5982\u679c\u8fd9\u4e2a\u7c92\u5b50\u53d1\u5c04\u5668\u4ea7\u751f\u4e00\u4e2a\u5e26\u7740\u7c7b\u4f3c\u70df\u96fe\u7eb9\u7406\u7684\u5fae\u7c92\u7684\u65f6\u5019\uff0c\u5b83\u7684\u989c\u8272\u4eae\u5ea6\u540c\u65f6\u53c8\u968f\u7740\u4e0e\u53d1\u5c04\u5668\u8ddd\u79bb\u7684\u589e\u52a0\u800c\u53d8\u6697\uff0c\u90a3\u4e48\u5c31\u4f1a\u4ea7\u751f\u51fa\u707c\u70ed\u7684\u706b\u7130\u7684\u6548\u679c: \u4e00\u4e2a\u5355\u4e00\u7684\u5fae\u7c92\u901a\u5e38\u6709\u4e00\u4e2a\u751f\u547d\u503c\u53d8\u91cf\uff0c\u5e76\u4e14\u4ece\u5b83\u4ea7\u751f\u5f00\u59cb\u5c31\u4e00\u76f4\u5728\u7f13\u6162\u7684\u51cf\u5c11\u3002\u4e00\u65e6\u5b83\u7684\u751f\u547d\u503c\u5c11\u4e8e\u67d0\u4e2a\u6781\u9650\u503c\uff08\u901a\u5e38\u662f0\uff09\u6211\u4eec\u5c31\u4f1a\u6740\u6389\u8fd9\u4e2a\u7c92\u5b50,\u8fd9\u6837\u4e0b\u4e00\u4e2a\u7c92\u5b50\u4ea7\u751f\u65f6\u5c31\u53ef\u4ee5\u8ba9\u5b83\u6765\u66ff\u6362\u90a3\u4e2a\u88ab\u6740\u6389\u7684\u7c92\u5b50\u3002\u4e00\u4e2a\u7c92\u5b50\u53d1\u5c04\u5668\u63a7\u5236\u5b83\u4ea7\u751f\u7684\u6240\u6709\u7c92\u5b50\u5e76\u4e14\u6839\u636e\u5b83\u4eec\u7684\u5c5e\u6027\u6765\u6539\u53d8\u5b83\u4eec\u7684\u884c\u4e3a\u3002\u4e00\u4e2a\u7c92\u5b50\u901a\u5e38\u6709\u4e0b\u9762\u7684\u5c5e\u6027\uff1a struct Particle { glm::vec2 Position, Velocity; glm::vec4 Color; GLfloat Life; Particle() : Position(0.0f), Velocity(0.0f), Color(1.0f), Life(0.0f) { } }; \u770b\u4e0a\u9762\u90a3\u4e2a\u706b\u7130\u7684\u4f8b\u5b50\uff0c\u90a3\u4e2a\u7c92\u5b50\u53d1\u5c04\u5668\u53ef\u80fd\u5728\u9760\u8fd1\u53d1\u5c04\u5668\u7684\u5730\u65b9\u4ea7\u751f\u6bcf\u4e00\u4e2a\u7c92\u5b50\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u5411\u4e0a\u7684\u901f\u5ea6\uff0c\u8fd9\u6837\u6bcf\u4e2a\u7c92\u5b50\u90fd\u662f\u671d\u7740\u6b63$y$\u8f74\u65b9\u5411\u79fb\u52a8\u3002\u90a3\u4f3c\u4e4e\u67093\u4e2a\u4e0d\u540c\u533a\u57df\uff0c\u53ea\u662f\u53ef\u80fd\u76f8\u6bd4\u5176\u4ed6\u7684\u533a\u57df\uff0c\u7ed9\u4e86\u67d0\u4e2a\u533a\u57df\u5185\u7684\u7c92\u5b50\u66f4\u5feb\u7684\u901f\u5ea6\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u770b\u5230\uff0c$y$\u8f74\u65b9\u5411\u8d8a\u9ad8\u7684\u7c92\u5b50\uff0c\u5b83\u4eec\u7684\u9ec4\u8272\u6216\u8005\u8bf4\u4eae\u5ea6\u5c31\u8d8a\u4f4e\u3002\u4e00\u65e6\u67d0\u4e2a\u7c92\u5b50\u5230\u8fbe\u67d0\u4e2a\u9ad8\u5ea6\u7684\u65f6\u5019\uff0c\u5b83\u7684\u751f\u547d\u503c\u5c31\u4f1a\u8017\u5c3d\u7136\u540e\u88ab\u6740\u6389\uff1b\u7edd\u4e0d\u53ef\u80fd\u76f4\u51b2\u4e91\u9704\u3002 \u4f60\u53ef\u4ee5\u60f3\u8c61\u5230\u7528\u8fd9\u6837\u4e00\u4e2a\u7cfb\u7edf\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u521b\u9020\u4e00\u4e9b\u6709\u8da3\u7684\u6548\u679c\u6bd4\u5982\u706b\u7130\uff0c\u9752\u70df\uff0c\u70df\u96fe\uff0c\u9b54\u6cd5\u6548\u679c\uff0c\u70ae\u706b\u6b8b\u6e23\u7b49\u7b49\u3002\u5728Breakout\u6e38\u620f\u91cc\uff0c\u6211\u4eec\u5c06\u4f1a\u4f7f\u7528\u4e0b\u9762\u90a3\u4e2a\u5c0f\u7403\u6765\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u7c92\u5b50\u751f\u6210\u5668\u6765\u5236\u4f5c\u4e00\u4e9b\u6709\u8da3\u7684\u6548\u679c\uff0c\u7ed3\u679c\u770b\u8d77\u6765\u5c31\u50cf\u8fd9\u6837\uff1a \u4e0a\u9762\u90a3\u4e2a\u7c92\u5b50\u751f\u6210\u5668\u5728\u8fd9\u4e2a\u7403\u7684\u4f4d\u7f6e\u4ea7\u751f\u65e0\u6570\u7684\u7c92\u5b50\uff0c\u6839\u636e\u7403\u79fb\u52a8\u7684\u901f\u5ea6\u7ed9\u4e86\u7c92\u5b50\u76f8\u5e94\u7684\u901f\u5ea6\uff0c\u5e76\u4e14\u6839\u636e\u5b83\u4eec\u7684\u751f\u547d\u503c\u6765\u6539\u53d8\u4ed6\u4eec\u7684\u989c\u8272\u4eae\u5ea6\u3002 \u4e3a\u4e86\u6e32\u67d3\u8fd9\u4e9b\u7c92\u5b50\uff0c\u6211\u4eec\u5c06\u4f1a\u7528\u5230\u6709\u4e0d\u540c\u5b9e\u73b0\u7684\u7740\u8272\u5668\uff1a #version 330 core layout (location = 0) in vec4 vertex; // <vec2 position, vec2 texCoords> out vec2 TexCoords; out vec4 ParticleColor; uniform mat4 projection; uniform vec2 offset; uniform vec4 color; void main() { float scale = 10.0f; TexCoords = vertex.zw; ParticleColor = color; gl_Position = projection * vec4((vertex.xy * scale) + offset, 0.0, 1.0); } \u4ee5\u53ca\u50cf\u7d20\u7740\u8272\u5668: #version 330 core in vec2 TexCoords; in vec4 ParticleColor; out vec4 color; uniform sampler2D sprite; void main() { color = (texture(sprite, TexCoords) * ParticleColor); } \u6211\u4eec\u83b7\u53d6\u6bcf\u4e2a\u7c92\u5b50\u7684\u4f4d\u7f6e\u548c\u7eb9\u7406\u5c5e\u6027\u5e76\u4e14\u8bbe\u7f6e\u4e24\u4e2auniform\u53d8\u91cf\uff1a$offset$\u548c$color$\u6765\u6539\u53d8\u6bcf\u4e2a\u7c92\u5b50\u7684\u8f93\u51fa\u72b6\u6001\u3002\u6ce8\u610f\u5230\uff0c\u5728\u9876\u70b9\u7740\u8272\u5668\u91cc\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a\u56db\u8fb9\u5f62\u7684\u7c92\u5b50\u7f29\u5c0f\u4e8610\u500d\uff1b\u4f60\u4e5f\u53ef\u4ee5\u628a\u8fd9\u4e2a\u7f29\u653e\u53d8\u91cf\u8bbe\u7f6e\u6210uniform\u7c7b\u578b\u7684\u53d8\u91cf\u4ece\u800c\u63a7\u5236\u4e00\u4e9b\u4e2a\u522b\u7684\u7c92\u5b50\u3002 \u9996\u5148,\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u7c92\u5b50\u6570\u7ec4\uff0c\u7136\u540e\u7528Particle\u7ed3\u6784\u4f53\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u6765\u5b9e\u4f8b\u5316\u3002 GLuint nr_particles = 500; std::vector<Particle> particles; for (GLuint i = 0; i < nr_particles; ++i) particles.push_back(Particle()); \u7136\u540e\u5728\u6bcf\u4e00\u5e27\u91cc\u9762\uff0c\u6211\u4eec\u90fd\u4f1a\u7528\u4e00\u4e2a\u8d77\u59cb\u53d8\u91cf\u6765\u4ea7\u751f\u4e00\u4e9b\u65b0\u7684\u7c92\u5b50\u5e76\u4e14\u5bf9\u6bcf\u4e2a\u7c92\u5b50\uff08\u8fd8\u6d3b\u7740\u7684\uff09\u66f4\u65b0\u5b83\u4eec\u7684\u503c\u3002 GLuint nr_new_particles = 2; // Add new particles for (GLuint i = 0; i < nr_new_particles; ++i) { int unusedParticle = FirstUnusedParticle(); RespawnParticle(particles[unusedParticle], object, offset); } // Update all particles for (GLuint i = 0; i < nr_particles; ++i) { Particle &p = particles[i]; p.Life -= dt; // reduce life if (p.Life > 0.0f) { // particle is alive, thus update p.Position -= p.Velocity * dt; p.Color.a -= dt * 2.5; } } \u7b2c\u4e00\u4e2a\u5faa\u73af\u770b\u8d77\u6765\u53ef\u80fd\u6709\u70b9\u5413\u4eba\u3002\u56e0\u4e3a\u8fd9\u4e9b\u7c92\u5b50\u4f1a\u968f\u7740\u65f6\u95f4\u6d88\u4ea1\uff0c\u6211\u4eec\u5c31\u60f3\u5728\u6bcf\u4e00\u5e27\u91cc\u9762\u4ea7\u751f nr_new_particles \u4e2a\u65b0\u7c92\u5b50\u3002\u4f46\u662f\u4e00\u5f00\u59cb\u6211\u4eec\u5c31\u77e5\u9053\u4e86\u603b\u7684\u7c92\u5b50\u6570\u91cf\u662f nr_partiles \uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u7b80\u5355\u7684\u5f80\u7c92\u5b50\u6570\u7ec4\u91cc\u9762\u6dfb\u52a0\u65b0\u7684\u7c92\u5b50\u3002\u5426\u5219\u7684\u8bdd\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2a\u88c5\u6ee1\u6210\u5343\u4e0a\u4e07\u4e2a\u7c92\u5b50\u7684\u6570\u7ec4\uff0c\u8003\u8651\u5230\u8fd9\u4e2a\u7c92\u5b50\u6570\u7ec4\u91cc\u9762\u5176\u5b9e\u53ea\u6709\u4e00\u5c0f\u90e8\u5206\u7c92\u5b50\u662f\u5b58\u6d3b\u7684\uff0c\u8fd9\u6837\u5c31\u592a\u6d6a\u8d39\u6548\u7387\u4e86\u3002 \u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u627e\u5230\u7b2c\u4e00\u4e2a\u6d88\u4ea1\u7684\u7c92\u5b50\u7136\u540e\u7528\u4e00\u4e2a\u65b0\u4ea7\u751f\u7684\u7c92\u5b50\u6765\u66f4\u65b0\u5b83\u3002\u51fd\u6570 FirstUnuseParticle \u5c31\u662f\u8bd5\u56fe\u627e\u5230\u7b2c\u4e00\u4e2a\u6d88\u4ea1\u7684\u7c92\u5b50\u5e76\u4e14\u8fd4\u56de\u5b83\u7684\u7d22\u5f15\u503c\u7ed9\u8c03\u7528\u8005\u3002 GLuint lastUsedParticle = 0; GLuint FirstUnusedParticle() { // Search from last used particle, this will usually return almost instantly for (GLuint i = lastUsedParticle; i < nr_particles; ++i){ if (particles[i].Life <= 0.0f){ lastUsedParticle = i; return i; } } // Otherwise, do a linear search for (GLuint i = 0; i < lastUsedParticle; ++i){ if (particles[i].Life <= 0.0f){ lastUsedParticle = i; return i; } } // Override first particle if all others are alive lastUsedParticle = 0; return 0; } \u8fd9\u4e2a\u51fd\u6570\u5b58\u50a8\u4e86\u5b83\u627e\u5230\u7684\u4e0a\u4e00\u4e2a\u6d88\u4ea1\u7684\u7c92\u5b50\u7684\u7d22\u5f15\u503c\uff0c\u7531\u4e8e\u4e0b\u4e00\u4e2a\u6d88\u4ea1\u7684\u7c92\u5b50\u7d22\u5f15\u503c\u603b\u662f\u5728\u4e0a\u4e00\u4e2a\u6d88\u4ea1\u7684\u7c92\u5b50\u7d22\u5f15\u503c\u7684\u53f3\u8fb9\uff0c\u6240\u4ee5\u6211\u4eec\u9996\u5148\u4ece\u5b83\u5b58\u50a8\u7684\u4e0a\u4e00\u4e2a\u6d88\u4ea1\u7684\u7c92\u5b50\u7d22\u5f15\u4f4d\u7f6e\u5f00\u59cb\u67e5\u627e\uff0c\u5982\u679c\u6211\u4eec\u6ca1\u6709\u4efb\u4f55\u6d88\u4ea1\u7684\u7c92\u5b50\uff0c\u6211\u4eec\u5c31\u7b80\u5355\u7684\u505a\u4e00\u4e2a\u7ebf\u6027\u67e5\u627e\uff0c\u5982\u679c\u6ca1\u6709\u7c92\u5b50\u6d88\u4ea1\u5c31\u8fd4\u56de\u7d22\u5f15\u503c 0 \uff0c\u7ed3\u679c\u5c31\u662f\u7b2c\u4e00\u4e2a\u7c92\u5b50\u88ab\u8986\u76d6\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u662f\u6700\u540e\u4e00\u79cd\u60c5\u51b5\uff0c\u5c31\u610f\u5473\u7740\u4f60\u7c92\u5b50\u7684\u751f\u547d\u503c\u592a\u957f\u4e86\uff0c\u5728\u6bcf\u4e00\u5e27\u91cc\u9762\u9700\u8981\u4ea7\u751f\u66f4\u5c11\u7684\u7c92\u5b50\uff0c\u6216\u8005\u4f60\u53ea\u662f\u6ca1\u6709\u4fdd\u7559\u8db3\u591f\u7684\u7c92\u5b50\uff0c \u4e4b\u540e\uff0c\u4e00\u65e6\u7c92\u5b50\u6570\u7ec4\u4e2d\u7b2c\u4e00\u4e2a\u6d88\u4ea1\u7684\u7c92\u5b50\u88ab\u53d1\u73b0\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u901a\u8fc7\u8c03\u7528 RespawnParticle \u51fd\u6570\u66f4\u65b0\u5b83\u7684\u503c\uff0c\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a Particle \u5bf9\u8c61\uff0c\u4e00\u4e2a GameObject \u5bf9\u8c61\u548c\u4e00\u4e2a offset \u5411\u91cf: void RespawnParticle(Particle &particle, GameObject &object, glm::vec2 offset) { GLfloat random = ((rand() % 100) - 50) / 10.0f; GLfloat rColor = 0.5 + ((rand() % 100) / 100.0f); particle.Position = object.Position + random + offset; particle.Color = glm::vec4(rColor, rColor, rColor, 1.0f); particle.Life = 1.0f; particle.Velocity = object.Velocity * 0.1f; } \u8fd9\u4e2a\u51fd\u6570\u7b80\u5355\u7684\u91cd\u7f6e\u8fd9\u4e2a\u7c92\u5b50\u7684\u751f\u547d\u503c\u4e3a1.0f\uff0c\u968f\u673a\u7684\u7ed9\u4e00\u4e2a\u5927\u4e8e 0.5 \u7684\u989c\u8272\u503c(\u7ecf\u8fc7\u989c\u8272\u5411\u91cf)\u5e76\u4e14(\u5728\u7269\u4f53\u5468\u56f4)\u5206\u914d\u4e00\u4e2a\u4f4d\u7f6e\u548c\u901f\u5ea6\u57fa\u4e8e\u6e38\u620f\u91cc\u7684\u7269\u4f53\u3002 \u5bf9\u4e8e\u66f4\u65b0\u51fd\u6570\u91cc\u7684\u7b2c\u4e8c\u4e2a\u5faa\u73af\u904d\u5386\u4e86\u6240\u6709\u7c92\u5b50\uff0c\u5e76\u4e14\u5bf9\u4e8e\u6bcf\u4e2a\u7c92\u5b50\u7684\u751f\u547d\u503c\u90fd\u51cf\u53bb\u4e00\u4e2a\u65f6\u95f4\u5dee\uff1b\u8fd9\u6837\u6bcf\u4e2a\u7c92\u5b50\u7684\u751f\u547d\u503c\u5c31\u7cbe\u786e\u5230\u4e86\u79d2\u3002\u7136\u540e\u518d\u68c0\u67e5\u8fd9\u4e2a\u7c92\u5b50\u662f\u5426\u662f\u8fd8\u6d3b\u7740\u7684\uff0c\u82e5\u662f,\u5219\u66f4\u65b0\u5b83\u7684\u4f4d\u7f6e\u548c\u989c\u8272\u5c5e\u6027\u3002\u8fd9\u91cc\u6211\u4eec\u7f13\u6162\u7684\u51cf\u5c11\u7c92\u5b50\u989c\u8272\u503c\u7684 alpha \u503c\uff0c\u4ee5\u81f3\u4e8e\u5b83\u770b\u8d77\u6765\u5c31\u662f\u968f\u7740\u65f6\u95f4\u800c\u7f13\u6162\u7684\u6d88\u4ea1\u3002 \u6700\u540e\u4fdd\u7559\u4e0b\u6765\u5c31\u662f\u5b9e\u9645\u9700\u8981\u6e32\u67d3\u7684\u7c92\u5b50\uff1a glBlendFunc(GL_SRC_ALPHA, GL_ONE); particleShader.Use(); for (Particle particle : particles) { if (particle.Life > 0.0f) { particleShader.SetVector2f(\"offset\", particle.Position); particleShader.SetVector4f(\"color\", particle.Color); particleTexture.Bind(); glBindVertexArray(particleVAO); glDrawArrays(GL_TRIANGLES, 0, 6); glBindVertexArray(0); } } glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); \u5728\u8fd9\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u7c92\u5b50\uff0c\u6211\u4eec\u4e00\u4e00\u8bbe\u7f6e\u4ed6\u4eec\u7684 uniform \u53d8\u91cf offse \u548c color \uff0c\u7ed1\u5b9a\u7eb9\u7406\uff0c\u7136\u540e\u6e32\u67d3 2D \u56db\u8fb9\u5f62\u7684\u7c92\u5b50\u3002\u6709\u8da3\u7684\u662f\u6211\u4eec\u5728\u8fd9\u770b\u5230\u4e86\u4e24\u6b21\u8c03\u7528\u51fd\u6570 glBlendFunc \u3002\u5f53\u8981\u6e32\u67d3\u8fd9\u4e9b\u7c92\u5b50\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f7f\u7528 GL_ONE \u66ff\u6362\u9ed8\u8ba4\u7684\u76ee\u7684\u56e0\u5b50\u6a21\u5f0f GL_ONE_MINUS_SRC_ALPHA \uff0c\u8fd9\u6837\uff0c\u8fd9\u4e9b\u7c92\u5b50\u53e0\u52a0\u5728\u4e00\u8d77\u7684\u65f6\u5019\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e9b\u5e73\u6ed1\u7684\u53d1\u70ed\u6548\u679c\uff0c\u5c31\u50cf\u5728\u8fd9\u4e2a\u6559\u7a0b\u524d\u9762\u90a3\u6837\u4f7f\u7528\u6df7\u5408\u6a21\u5f0f\u6765\u6e32\u67d3\u51fa\u706b\u7130\u7684\u6548\u679c\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u8fd9\u6837\u5728\u6709\u5927\u591a\u6570\u7c92\u5b50\u7684\u4e2d\u5fc3\u5c31\u4f1a\u4ea7\u751f\u66f4\u52a0\u707c\u70ed\u7684\u6548\u679c\u3002 \u56e0\u4e3a\u6211\u4eec(\u5c31\u50cf\u8fd9\u4e2a\u7cfb\u5217\u6559\u7a0b\u7684\u5176\u4ed6\u90e8\u5206\u4e00\u6837)\u559c\u6b22\u8ba9\u4e8b\u60c5\u53d8\u5f97\u6709\u6761\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u521b\u5efa\u4e86\u53e6\u4e00\u4e2a\u7c7b ParticleGenerator \u6765\u5c01\u88c5\u6211\u4eec\u521a\u521a\u8c08\u5230\u7684\u6240\u6709\u529f\u80fd\u3002\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u94fe\u63a5\u91cc\u627e\u5230\u6e90\u7801\uff1a header \uff0c code \u7136\u540e\u5728\u6e38\u620f\u4ee3\u7801\u91cc,\u6211\u4eec\u521b\u5efa\u8fd9\u6837\u4e00\u4e2a\u7c92\u5b50\u53d1\u5c04\u5668\u5e76\u4e14\u7528 \u8fd9\u4e2a \u7eb9\u7406\u521d\u59cb\u5316\u3002 ParticleGenerator *Particles; void Game::Init() { [...] ResourceManager::LoadShader(\"shaders/particle.vs\", \"shaders/particle.frag\", nullptr, \"particle\"); [...] ResourceManager::LoadTexture(\"textures/particle.png\", GL_TRUE, \"particle\"); [...] Particles = new ParticleGenerator( ResourceManager::GetShader(\"particle\"), ResourceManager::GetTexture(\"particle\"), 500 ); } \u7136\u540e\u6211\u4eec\u5728 Game \u7c7b\u7684 Updata \u51fd\u6570\u91cc\u4e3a\u7c92\u5b50\u751f\u6210\u5668\u6dfb\u52a0\u4e00\u6761\u66f4\u65b0\u8bed\u53e5\uff1a void Game::Update(GLfloat dt) { [...] // Update particles Particles->Update(dt, *Ball, 2, glm::vec2(Ball->Radius / 2)); [...] } \u6bcf\u4e2a\u7c92\u5b50\u90fd\u5c06\u4f7f\u7528\u7403\u7684\u6e38\u620f\u5bf9\u8c61\u5c5e\u6027\u5bf9\u8c61\uff0c\u6bcf\u5e27\u4ea7\u751f\u4e24\u4e2a\u7c92\u5b50\u5e76\u4e14\u4ed6\u4eec\u90fd\u662f\u504f\u5411\u7403\u5f97\u4e2d\u5fc3\uff0c\u6700\u540e\u662f\u6e32\u67d3\u7c92\u5b50\uff1a void Game::Render() { if (this->State == GAME_ACTIVE) { [...] // Draw player Player->Draw(*Renderer); // Draw particles Particles->Draw(); // Draw ball Ball->Draw(*Renderer); } } \u6ce8\u610f\u5230\uff0c\u6211\u4eec\u662f\u5728\u6e32\u67d3\u7403\u4f53\u4e4b\u524d\u4e14\u5728\u6e32\u67d3\u5176\u4ed6\u7269\u4f53\u4e4b\u540e\u6e32\u67d3\u7c92\u5b50\u7684\uff0c\u8fd9\u6837\uff0c\u7c92\u5b50\u5c31\u4f1a\u5728\u6240\u6709\u5176\u4ed6\u7269\u4f53\u9762\u524d\uff0c\u4f46\u5728\u7403\u4f53\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u66f4\u65b0\u7684 game \u7c7b\u7684\u6e90\u7801\u3002 \u5982\u679c\u4f60\u73b0\u5728\u7f16\u8bd1\u5e76\u8fd0\u884c\u4f60\u7684\u7a0b\u5e8f\uff0c\u4f60\u53ef\u80fd\u4f1a\u770b\u5230\u5728\u7403\u4f53\u4e4b\u540e\u6709\u4e00\u6761\u5c0f\u5c3e\u5df4\u3002\u5c31\u50cf\u8fd9\u4e2a\u6559\u7a0b\u5f00\u59cb\u7684\u90a3\u6837\uff0c\u7ed9\u4e86\u8fd9\u4e2a\u6e38\u620f\u66f4\u52a0\u73b0\u4ee3\u5316\u7684\u9762\u8c8c\u3002\u8fd9\u4e2a\u7cfb\u7edf\u8fd8\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u6269\u5c55\u5230\u66f4\u9ad8\u7ea7\u6548\u679c\u7684\u4e3b\u4f53\u4e0a\uff0c\u5c31\u7528\u8fd9\u4e2a\u7c92\u5b50\u751f\u6210\u5668\u81ea\u7531\u7684\u53bb\u5b9e\u9a8c\u5427\uff0c\u770b\u770b\u4f60\u662f\u5426\u53ef\u4ee5\u521b\u5efa\u51fa\u4f60\u81ea\u5df1\u7684\u7279\u6548\u3002","title":"\u7c92\u5b50"},{"location":"06%20In%20Practice/2D-Game/06%20Particles/#_1","text":"\u539f\u6587 Particles \u4f5c\u8005 JoeydeVries \u7ffb\u8bd1 ZMANT \u6821\u5bf9 \u6682\u65e0 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u4e00\u4e2a\u5fae\u7c92,\u4eceOpenGL\u7684\u89d2\u5ea6\u770b\u5c31\u662f\u4e00\u4e2a\u603b\u662f\u9762\u5411\u6444\u50cf\u673a\u65b9\u5411\u4e14(\u901a\u5e38)\u5305\u542b\u4e00\u4e2a\u5927\u90e8\u5206\u533a\u57df\u662f\u900f\u660e\u7684\u7eb9\u7406\u7684\u5c0f\u56db\u8fb9\u5f62\u3002\u4e00\u4e2a\u5fae\u7c92\u672c\u8eab\u4e3b\u8981\u5c31\u662f\u4e00\u4e2a\u7cbe\u7075(sprite),\u524d\u9762\u6211\u4eec\u5df2\u7ecf\u65e9\u5c31\u4f7f\u7528\u8fc7\u4e86\uff0c\u4f46\u662f\u5f53\u4f60\u628a\u6210\u5343\u4e0a\u4e07\u4e2a\u8fd9\u4e9b\u5fae\u7c92\u653e\u5728\u4e00\u8d77\u7684\u65f6\u5019,\u5c31\u53ef\u4ee5\u521b\u9020\u51fa\u4ee4\u4eba\u75af\u72c2\u7684\u6548\u679c. \u5f53\u5904\u7406\u8fd9\u4e9b\u5fae\u7c92\u7684\u65f6\u5019\uff0c\u901a\u5e38\u662f\u7531\u4e00\u4e2a\u53eb\u505a\u7c92\u5b50\u53d1\u5c04\u5668\u6216\u7c92\u5b50\u751f\u6210\u5668\u7684\u4e1c\u897f\u5b8c\u6210\u7684\uff0c\u4ece\u8fd9\u4e2a\u5730\u65b9,\u6301\u7eed\u4e0d\u65ad\u7684\u4ea7\u751f\u65b0\u7684\u5fae\u7c92\u5e76\u4e14\u65e7\u7684\u5fae\u7c92\u968f\u7740\u65f6\u95f4\u9010\u6e10\u6d88\u4ea1\u3002\u5982\u679c\u8fd9\u4e2a\u7c92\u5b50\u53d1\u5c04\u5668\u4ea7\u751f\u4e00\u4e2a\u5e26\u7740\u7c7b\u4f3c\u70df\u96fe\u7eb9\u7406\u7684\u5fae\u7c92\u7684\u65f6\u5019\uff0c\u5b83\u7684\u989c\u8272\u4eae\u5ea6\u540c\u65f6\u53c8\u968f\u7740\u4e0e\u53d1\u5c04\u5668\u8ddd\u79bb\u7684\u589e\u52a0\u800c\u53d8\u6697\uff0c\u90a3\u4e48\u5c31\u4f1a\u4ea7\u751f\u51fa\u707c\u70ed\u7684\u706b\u7130\u7684\u6548\u679c: \u4e00\u4e2a\u5355\u4e00\u7684\u5fae\u7c92\u901a\u5e38\u6709\u4e00\u4e2a\u751f\u547d\u503c\u53d8\u91cf\uff0c\u5e76\u4e14\u4ece\u5b83\u4ea7\u751f\u5f00\u59cb\u5c31\u4e00\u76f4\u5728\u7f13\u6162\u7684\u51cf\u5c11\u3002\u4e00\u65e6\u5b83\u7684\u751f\u547d\u503c\u5c11\u4e8e\u67d0\u4e2a\u6781\u9650\u503c\uff08\u901a\u5e38\u662f0\uff09\u6211\u4eec\u5c31\u4f1a\u6740\u6389\u8fd9\u4e2a\u7c92\u5b50,\u8fd9\u6837\u4e0b\u4e00\u4e2a\u7c92\u5b50\u4ea7\u751f\u65f6\u5c31\u53ef\u4ee5\u8ba9\u5b83\u6765\u66ff\u6362\u90a3\u4e2a\u88ab\u6740\u6389\u7684\u7c92\u5b50\u3002\u4e00\u4e2a\u7c92\u5b50\u53d1\u5c04\u5668\u63a7\u5236\u5b83\u4ea7\u751f\u7684\u6240\u6709\u7c92\u5b50\u5e76\u4e14\u6839\u636e\u5b83\u4eec\u7684\u5c5e\u6027\u6765\u6539\u53d8\u5b83\u4eec\u7684\u884c\u4e3a\u3002\u4e00\u4e2a\u7c92\u5b50\u901a\u5e38\u6709\u4e0b\u9762\u7684\u5c5e\u6027\uff1a struct Particle { glm::vec2 Position, Velocity; glm::vec4 Color; GLfloat Life; Particle() : Position(0.0f), Velocity(0.0f), Color(1.0f), Life(0.0f) { } }; \u770b\u4e0a\u9762\u90a3\u4e2a\u706b\u7130\u7684\u4f8b\u5b50\uff0c\u90a3\u4e2a\u7c92\u5b50\u53d1\u5c04\u5668\u53ef\u80fd\u5728\u9760\u8fd1\u53d1\u5c04\u5668\u7684\u5730\u65b9\u4ea7\u751f\u6bcf\u4e00\u4e2a\u7c92\u5b50\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u5411\u4e0a\u7684\u901f\u5ea6\uff0c\u8fd9\u6837\u6bcf\u4e2a\u7c92\u5b50\u90fd\u662f\u671d\u7740\u6b63$y$\u8f74\u65b9\u5411\u79fb\u52a8\u3002\u90a3\u4f3c\u4e4e\u67093\u4e2a\u4e0d\u540c\u533a\u57df\uff0c\u53ea\u662f\u53ef\u80fd\u76f8\u6bd4\u5176\u4ed6\u7684\u533a\u57df\uff0c\u7ed9\u4e86\u67d0\u4e2a\u533a\u57df\u5185\u7684\u7c92\u5b50\u66f4\u5feb\u7684\u901f\u5ea6\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u770b\u5230\uff0c$y$\u8f74\u65b9\u5411\u8d8a\u9ad8\u7684\u7c92\u5b50\uff0c\u5b83\u4eec\u7684\u9ec4\u8272\u6216\u8005\u8bf4\u4eae\u5ea6\u5c31\u8d8a\u4f4e\u3002\u4e00\u65e6\u67d0\u4e2a\u7c92\u5b50\u5230\u8fbe\u67d0\u4e2a\u9ad8\u5ea6\u7684\u65f6\u5019\uff0c\u5b83\u7684\u751f\u547d\u503c\u5c31\u4f1a\u8017\u5c3d\u7136\u540e\u88ab\u6740\u6389\uff1b\u7edd\u4e0d\u53ef\u80fd\u76f4\u51b2\u4e91\u9704\u3002 \u4f60\u53ef\u4ee5\u60f3\u8c61\u5230\u7528\u8fd9\u6837\u4e00\u4e2a\u7cfb\u7edf\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u521b\u9020\u4e00\u4e9b\u6709\u8da3\u7684\u6548\u679c\u6bd4\u5982\u706b\u7130\uff0c\u9752\u70df\uff0c\u70df\u96fe\uff0c\u9b54\u6cd5\u6548\u679c\uff0c\u70ae\u706b\u6b8b\u6e23\u7b49\u7b49\u3002\u5728Breakout\u6e38\u620f\u91cc\uff0c\u6211\u4eec\u5c06\u4f1a\u4f7f\u7528\u4e0b\u9762\u90a3\u4e2a\u5c0f\u7403\u6765\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u7c92\u5b50\u751f\u6210\u5668\u6765\u5236\u4f5c\u4e00\u4e9b\u6709\u8da3\u7684\u6548\u679c\uff0c\u7ed3\u679c\u770b\u8d77\u6765\u5c31\u50cf\u8fd9\u6837\uff1a \u4e0a\u9762\u90a3\u4e2a\u7c92\u5b50\u751f\u6210\u5668\u5728\u8fd9\u4e2a\u7403\u7684\u4f4d\u7f6e\u4ea7\u751f\u65e0\u6570\u7684\u7c92\u5b50\uff0c\u6839\u636e\u7403\u79fb\u52a8\u7684\u901f\u5ea6\u7ed9\u4e86\u7c92\u5b50\u76f8\u5e94\u7684\u901f\u5ea6\uff0c\u5e76\u4e14\u6839\u636e\u5b83\u4eec\u7684\u751f\u547d\u503c\u6765\u6539\u53d8\u4ed6\u4eec\u7684\u989c\u8272\u4eae\u5ea6\u3002 \u4e3a\u4e86\u6e32\u67d3\u8fd9\u4e9b\u7c92\u5b50\uff0c\u6211\u4eec\u5c06\u4f1a\u7528\u5230\u6709\u4e0d\u540c\u5b9e\u73b0\u7684\u7740\u8272\u5668\uff1a #version 330 core layout (location = 0) in vec4 vertex; // <vec2 position, vec2 texCoords> out vec2 TexCoords; out vec4 ParticleColor; uniform mat4 projection; uniform vec2 offset; uniform vec4 color; void main() { float scale = 10.0f; TexCoords = vertex.zw; ParticleColor = color; gl_Position = projection * vec4((vertex.xy * scale) + offset, 0.0, 1.0); } \u4ee5\u53ca\u50cf\u7d20\u7740\u8272\u5668: #version 330 core in vec2 TexCoords; in vec4 ParticleColor; out vec4 color; uniform sampler2D sprite; void main() { color = (texture(sprite, TexCoords) * ParticleColor); } \u6211\u4eec\u83b7\u53d6\u6bcf\u4e2a\u7c92\u5b50\u7684\u4f4d\u7f6e\u548c\u7eb9\u7406\u5c5e\u6027\u5e76\u4e14\u8bbe\u7f6e\u4e24\u4e2auniform\u53d8\u91cf\uff1a$offset$\u548c$color$\u6765\u6539\u53d8\u6bcf\u4e2a\u7c92\u5b50\u7684\u8f93\u51fa\u72b6\u6001\u3002\u6ce8\u610f\u5230\uff0c\u5728\u9876\u70b9\u7740\u8272\u5668\u91cc\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a\u56db\u8fb9\u5f62\u7684\u7c92\u5b50\u7f29\u5c0f\u4e8610\u500d\uff1b\u4f60\u4e5f\u53ef\u4ee5\u628a\u8fd9\u4e2a\u7f29\u653e\u53d8\u91cf\u8bbe\u7f6e\u6210uniform\u7c7b\u578b\u7684\u53d8\u91cf\u4ece\u800c\u63a7\u5236\u4e00\u4e9b\u4e2a\u522b\u7684\u7c92\u5b50\u3002 \u9996\u5148,\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u7c92\u5b50\u6570\u7ec4\uff0c\u7136\u540e\u7528Particle\u7ed3\u6784\u4f53\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u6765\u5b9e\u4f8b\u5316\u3002 GLuint nr_particles = 500; std::vector<Particle> particles; for (GLuint i = 0; i < nr_particles; ++i) particles.push_back(Particle()); \u7136\u540e\u5728\u6bcf\u4e00\u5e27\u91cc\u9762\uff0c\u6211\u4eec\u90fd\u4f1a\u7528\u4e00\u4e2a\u8d77\u59cb\u53d8\u91cf\u6765\u4ea7\u751f\u4e00\u4e9b\u65b0\u7684\u7c92\u5b50\u5e76\u4e14\u5bf9\u6bcf\u4e2a\u7c92\u5b50\uff08\u8fd8\u6d3b\u7740\u7684\uff09\u66f4\u65b0\u5b83\u4eec\u7684\u503c\u3002 GLuint nr_new_particles = 2; // Add new particles for (GLuint i = 0; i < nr_new_particles; ++i) { int unusedParticle = FirstUnusedParticle(); RespawnParticle(particles[unusedParticle], object, offset); } // Update all particles for (GLuint i = 0; i < nr_particles; ++i) { Particle &p = particles[i]; p.Life -= dt; // reduce life if (p.Life > 0.0f) { // particle is alive, thus update p.Position -= p.Velocity * dt; p.Color.a -= dt * 2.5; } } \u7b2c\u4e00\u4e2a\u5faa\u73af\u770b\u8d77\u6765\u53ef\u80fd\u6709\u70b9\u5413\u4eba\u3002\u56e0\u4e3a\u8fd9\u4e9b\u7c92\u5b50\u4f1a\u968f\u7740\u65f6\u95f4\u6d88\u4ea1\uff0c\u6211\u4eec\u5c31\u60f3\u5728\u6bcf\u4e00\u5e27\u91cc\u9762\u4ea7\u751f nr_new_particles \u4e2a\u65b0\u7c92\u5b50\u3002\u4f46\u662f\u4e00\u5f00\u59cb\u6211\u4eec\u5c31\u77e5\u9053\u4e86\u603b\u7684\u7c92\u5b50\u6570\u91cf\u662f nr_partiles \uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u7b80\u5355\u7684\u5f80\u7c92\u5b50\u6570\u7ec4\u91cc\u9762\u6dfb\u52a0\u65b0\u7684\u7c92\u5b50\u3002\u5426\u5219\u7684\u8bdd\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2a\u88c5\u6ee1\u6210\u5343\u4e0a\u4e07\u4e2a\u7c92\u5b50\u7684\u6570\u7ec4\uff0c\u8003\u8651\u5230\u8fd9\u4e2a\u7c92\u5b50\u6570\u7ec4\u91cc\u9762\u5176\u5b9e\u53ea\u6709\u4e00\u5c0f\u90e8\u5206\u7c92\u5b50\u662f\u5b58\u6d3b\u7684\uff0c\u8fd9\u6837\u5c31\u592a\u6d6a\u8d39\u6548\u7387\u4e86\u3002 \u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u627e\u5230\u7b2c\u4e00\u4e2a\u6d88\u4ea1\u7684\u7c92\u5b50\u7136\u540e\u7528\u4e00\u4e2a\u65b0\u4ea7\u751f\u7684\u7c92\u5b50\u6765\u66f4\u65b0\u5b83\u3002\u51fd\u6570 FirstUnuseParticle \u5c31\u662f\u8bd5\u56fe\u627e\u5230\u7b2c\u4e00\u4e2a\u6d88\u4ea1\u7684\u7c92\u5b50\u5e76\u4e14\u8fd4\u56de\u5b83\u7684\u7d22\u5f15\u503c\u7ed9\u8c03\u7528\u8005\u3002 GLuint lastUsedParticle = 0; GLuint FirstUnusedParticle() { // Search from last used particle, this will usually return almost instantly for (GLuint i = lastUsedParticle; i < nr_particles; ++i){ if (particles[i].Life <= 0.0f){ lastUsedParticle = i; return i; } } // Otherwise, do a linear search for (GLuint i = 0; i < lastUsedParticle; ++i){ if (particles[i].Life <= 0.0f){ lastUsedParticle = i; return i; } } // Override first particle if all others are alive lastUsedParticle = 0; return 0; } \u8fd9\u4e2a\u51fd\u6570\u5b58\u50a8\u4e86\u5b83\u627e\u5230\u7684\u4e0a\u4e00\u4e2a\u6d88\u4ea1\u7684\u7c92\u5b50\u7684\u7d22\u5f15\u503c\uff0c\u7531\u4e8e\u4e0b\u4e00\u4e2a\u6d88\u4ea1\u7684\u7c92\u5b50\u7d22\u5f15\u503c\u603b\u662f\u5728\u4e0a\u4e00\u4e2a\u6d88\u4ea1\u7684\u7c92\u5b50\u7d22\u5f15\u503c\u7684\u53f3\u8fb9\uff0c\u6240\u4ee5\u6211\u4eec\u9996\u5148\u4ece\u5b83\u5b58\u50a8\u7684\u4e0a\u4e00\u4e2a\u6d88\u4ea1\u7684\u7c92\u5b50\u7d22\u5f15\u4f4d\u7f6e\u5f00\u59cb\u67e5\u627e\uff0c\u5982\u679c\u6211\u4eec\u6ca1\u6709\u4efb\u4f55\u6d88\u4ea1\u7684\u7c92\u5b50\uff0c\u6211\u4eec\u5c31\u7b80\u5355\u7684\u505a\u4e00\u4e2a\u7ebf\u6027\u67e5\u627e\uff0c\u5982\u679c\u6ca1\u6709\u7c92\u5b50\u6d88\u4ea1\u5c31\u8fd4\u56de\u7d22\u5f15\u503c 0 \uff0c\u7ed3\u679c\u5c31\u662f\u7b2c\u4e00\u4e2a\u7c92\u5b50\u88ab\u8986\u76d6\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u662f\u6700\u540e\u4e00\u79cd\u60c5\u51b5\uff0c\u5c31\u610f\u5473\u7740\u4f60\u7c92\u5b50\u7684\u751f\u547d\u503c\u592a\u957f\u4e86\uff0c\u5728\u6bcf\u4e00\u5e27\u91cc\u9762\u9700\u8981\u4ea7\u751f\u66f4\u5c11\u7684\u7c92\u5b50\uff0c\u6216\u8005\u4f60\u53ea\u662f\u6ca1\u6709\u4fdd\u7559\u8db3\u591f\u7684\u7c92\u5b50\uff0c \u4e4b\u540e\uff0c\u4e00\u65e6\u7c92\u5b50\u6570\u7ec4\u4e2d\u7b2c\u4e00\u4e2a\u6d88\u4ea1\u7684\u7c92\u5b50\u88ab\u53d1\u73b0\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u901a\u8fc7\u8c03\u7528 RespawnParticle \u51fd\u6570\u66f4\u65b0\u5b83\u7684\u503c\uff0c\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a Particle \u5bf9\u8c61\uff0c\u4e00\u4e2a GameObject \u5bf9\u8c61\u548c\u4e00\u4e2a offset \u5411\u91cf: void RespawnParticle(Particle &particle, GameObject &object, glm::vec2 offset) { GLfloat random = ((rand() % 100) - 50) / 10.0f; GLfloat rColor = 0.5 + ((rand() % 100) / 100.0f); particle.Position = object.Position + random + offset; particle.Color = glm::vec4(rColor, rColor, rColor, 1.0f); particle.Life = 1.0f; particle.Velocity = object.Velocity * 0.1f; } \u8fd9\u4e2a\u51fd\u6570\u7b80\u5355\u7684\u91cd\u7f6e\u8fd9\u4e2a\u7c92\u5b50\u7684\u751f\u547d\u503c\u4e3a1.0f\uff0c\u968f\u673a\u7684\u7ed9\u4e00\u4e2a\u5927\u4e8e 0.5 \u7684\u989c\u8272\u503c(\u7ecf\u8fc7\u989c\u8272\u5411\u91cf)\u5e76\u4e14(\u5728\u7269\u4f53\u5468\u56f4)\u5206\u914d\u4e00\u4e2a\u4f4d\u7f6e\u548c\u901f\u5ea6\u57fa\u4e8e\u6e38\u620f\u91cc\u7684\u7269\u4f53\u3002 \u5bf9\u4e8e\u66f4\u65b0\u51fd\u6570\u91cc\u7684\u7b2c\u4e8c\u4e2a\u5faa\u73af\u904d\u5386\u4e86\u6240\u6709\u7c92\u5b50\uff0c\u5e76\u4e14\u5bf9\u4e8e\u6bcf\u4e2a\u7c92\u5b50\u7684\u751f\u547d\u503c\u90fd\u51cf\u53bb\u4e00\u4e2a\u65f6\u95f4\u5dee\uff1b\u8fd9\u6837\u6bcf\u4e2a\u7c92\u5b50\u7684\u751f\u547d\u503c\u5c31\u7cbe\u786e\u5230\u4e86\u79d2\u3002\u7136\u540e\u518d\u68c0\u67e5\u8fd9\u4e2a\u7c92\u5b50\u662f\u5426\u662f\u8fd8\u6d3b\u7740\u7684\uff0c\u82e5\u662f,\u5219\u66f4\u65b0\u5b83\u7684\u4f4d\u7f6e\u548c\u989c\u8272\u5c5e\u6027\u3002\u8fd9\u91cc\u6211\u4eec\u7f13\u6162\u7684\u51cf\u5c11\u7c92\u5b50\u989c\u8272\u503c\u7684 alpha \u503c\uff0c\u4ee5\u81f3\u4e8e\u5b83\u770b\u8d77\u6765\u5c31\u662f\u968f\u7740\u65f6\u95f4\u800c\u7f13\u6162\u7684\u6d88\u4ea1\u3002 \u6700\u540e\u4fdd\u7559\u4e0b\u6765\u5c31\u662f\u5b9e\u9645\u9700\u8981\u6e32\u67d3\u7684\u7c92\u5b50\uff1a glBlendFunc(GL_SRC_ALPHA, GL_ONE); particleShader.Use(); for (Particle particle : particles) { if (particle.Life > 0.0f) { particleShader.SetVector2f(\"offset\", particle.Position); particleShader.SetVector4f(\"color\", particle.Color); particleTexture.Bind(); glBindVertexArray(particleVAO); glDrawArrays(GL_TRIANGLES, 0, 6); glBindVertexArray(0); } } glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); \u5728\u8fd9\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u7c92\u5b50\uff0c\u6211\u4eec\u4e00\u4e00\u8bbe\u7f6e\u4ed6\u4eec\u7684 uniform \u53d8\u91cf offse \u548c color \uff0c\u7ed1\u5b9a\u7eb9\u7406\uff0c\u7136\u540e\u6e32\u67d3 2D \u56db\u8fb9\u5f62\u7684\u7c92\u5b50\u3002\u6709\u8da3\u7684\u662f\u6211\u4eec\u5728\u8fd9\u770b\u5230\u4e86\u4e24\u6b21\u8c03\u7528\u51fd\u6570 glBlendFunc \u3002\u5f53\u8981\u6e32\u67d3\u8fd9\u4e9b\u7c92\u5b50\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f7f\u7528 GL_ONE \u66ff\u6362\u9ed8\u8ba4\u7684\u76ee\u7684\u56e0\u5b50\u6a21\u5f0f GL_ONE_MINUS_SRC_ALPHA \uff0c\u8fd9\u6837\uff0c\u8fd9\u4e9b\u7c92\u5b50\u53e0\u52a0\u5728\u4e00\u8d77\u7684\u65f6\u5019\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e9b\u5e73\u6ed1\u7684\u53d1\u70ed\u6548\u679c\uff0c\u5c31\u50cf\u5728\u8fd9\u4e2a\u6559\u7a0b\u524d\u9762\u90a3\u6837\u4f7f\u7528\u6df7\u5408\u6a21\u5f0f\u6765\u6e32\u67d3\u51fa\u706b\u7130\u7684\u6548\u679c\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u8fd9\u6837\u5728\u6709\u5927\u591a\u6570\u7c92\u5b50\u7684\u4e2d\u5fc3\u5c31\u4f1a\u4ea7\u751f\u66f4\u52a0\u707c\u70ed\u7684\u6548\u679c\u3002 \u56e0\u4e3a\u6211\u4eec(\u5c31\u50cf\u8fd9\u4e2a\u7cfb\u5217\u6559\u7a0b\u7684\u5176\u4ed6\u90e8\u5206\u4e00\u6837)\u559c\u6b22\u8ba9\u4e8b\u60c5\u53d8\u5f97\u6709\u6761\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u521b\u5efa\u4e86\u53e6\u4e00\u4e2a\u7c7b ParticleGenerator \u6765\u5c01\u88c5\u6211\u4eec\u521a\u521a\u8c08\u5230\u7684\u6240\u6709\u529f\u80fd\u3002\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u94fe\u63a5\u91cc\u627e\u5230\u6e90\u7801\uff1a header \uff0c code \u7136\u540e\u5728\u6e38\u620f\u4ee3\u7801\u91cc,\u6211\u4eec\u521b\u5efa\u8fd9\u6837\u4e00\u4e2a\u7c92\u5b50\u53d1\u5c04\u5668\u5e76\u4e14\u7528 \u8fd9\u4e2a \u7eb9\u7406\u521d\u59cb\u5316\u3002 ParticleGenerator *Particles; void Game::Init() { [...] ResourceManager::LoadShader(\"shaders/particle.vs\", \"shaders/particle.frag\", nullptr, \"particle\"); [...] ResourceManager::LoadTexture(\"textures/particle.png\", GL_TRUE, \"particle\"); [...] Particles = new ParticleGenerator( ResourceManager::GetShader(\"particle\"), ResourceManager::GetTexture(\"particle\"), 500 ); } \u7136\u540e\u6211\u4eec\u5728 Game \u7c7b\u7684 Updata \u51fd\u6570\u91cc\u4e3a\u7c92\u5b50\u751f\u6210\u5668\u6dfb\u52a0\u4e00\u6761\u66f4\u65b0\u8bed\u53e5\uff1a void Game::Update(GLfloat dt) { [...] // Update particles Particles->Update(dt, *Ball, 2, glm::vec2(Ball->Radius / 2)); [...] } \u6bcf\u4e2a\u7c92\u5b50\u90fd\u5c06\u4f7f\u7528\u7403\u7684\u6e38\u620f\u5bf9\u8c61\u5c5e\u6027\u5bf9\u8c61\uff0c\u6bcf\u5e27\u4ea7\u751f\u4e24\u4e2a\u7c92\u5b50\u5e76\u4e14\u4ed6\u4eec\u90fd\u662f\u504f\u5411\u7403\u5f97\u4e2d\u5fc3\uff0c\u6700\u540e\u662f\u6e32\u67d3\u7c92\u5b50\uff1a void Game::Render() { if (this->State == GAME_ACTIVE) { [...] // Draw player Player->Draw(*Renderer); // Draw particles Particles->Draw(); // Draw ball Ball->Draw(*Renderer); } } \u6ce8\u610f\u5230\uff0c\u6211\u4eec\u662f\u5728\u6e32\u67d3\u7403\u4f53\u4e4b\u524d\u4e14\u5728\u6e32\u67d3\u5176\u4ed6\u7269\u4f53\u4e4b\u540e\u6e32\u67d3\u7c92\u5b50\u7684\uff0c\u8fd9\u6837\uff0c\u7c92\u5b50\u5c31\u4f1a\u5728\u6240\u6709\u5176\u4ed6\u7269\u4f53\u9762\u524d\uff0c\u4f46\u5728\u7403\u4f53\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u66f4\u65b0\u7684 game \u7c7b\u7684\u6e90\u7801\u3002 \u5982\u679c\u4f60\u73b0\u5728\u7f16\u8bd1\u5e76\u8fd0\u884c\u4f60\u7684\u7a0b\u5e8f\uff0c\u4f60\u53ef\u80fd\u4f1a\u770b\u5230\u5728\u7403\u4f53\u4e4b\u540e\u6709\u4e00\u6761\u5c0f\u5c3e\u5df4\u3002\u5c31\u50cf\u8fd9\u4e2a\u6559\u7a0b\u5f00\u59cb\u7684\u90a3\u6837\uff0c\u7ed9\u4e86\u8fd9\u4e2a\u6e38\u620f\u66f4\u52a0\u73b0\u4ee3\u5316\u7684\u9762\u8c8c\u3002\u8fd9\u4e2a\u7cfb\u7edf\u8fd8\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u6269\u5c55\u5230\u66f4\u9ad8\u7ea7\u6548\u679c\u7684\u4e3b\u4f53\u4e0a\uff0c\u5c31\u7528\u8fd9\u4e2a\u7c92\u5b50\u751f\u6210\u5668\u81ea\u7531\u7684\u53bb\u5b9e\u9a8c\u5427\uff0c\u770b\u770b\u4f60\u662f\u5426\u53ef\u4ee5\u521b\u5efa\u51fa\u4f60\u81ea\u5df1\u7684\u7279\u6548\u3002","title":"\u7c92\u5b50"},{"location":"06%20In%20Practice/2D-Game/07%20Postprocessing/","text":"\u540e\u671f\u5904\u7406 \u539f\u6587 Postprocessing \u4f5c\u8005 JoeydeVries \u7ffb\u8bd1 \u5305\u7eb8 \u6821\u5bf9 \u6682\u65e0 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u5982\u679c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u51e0\u4e2a\u540e\u671f\u5904\u7406(Postprocess)\u7279\u6548\u4e30\u5bccBreakout\u6e38\u620f\u7684\u89c6\u89c9\u6548\u679c\u7684\u8bdd\uff0c\u4f1a\u4e0d\u4f1a\u662f\u4e00\u4ef6\u5f88\u6709\u8da3\u7684\u4e8b\u60c5\uff1f\u5229\u7528OpenGL\u7684\u5e27\u7f13\u51b2\uff0c\u6211\u4eec\u53ef\u4ee5\u76f8\u5bf9\u5bb9\u6613\u5730\u521b\u9020\u51fa\u6a21\u7cca\u7684\u6296\u52a8\u6548\u679c\u3001\u53cd\u8f6c\u573a\u666f\u91cc\u7684\u6240\u6709\u989c\u8272\u3001\u505a\u4e00\u4e9b\u201c\u75af\u72c2\u201d\u7684\u9876\u70b9\u8fd0\u52a8\u3001\u6216\u662f\u4f7f\u7528\u4e00\u4e9b\u5176\u4ed6\u6709\u8da3\u7684\u7279\u6548\u3002 Important \u8fd9\u7ae0\u6559\u7a0b\u5e7f\u6cdb\u8fd0\u7528\u4e86\u4e4b\u524d \u5e27\u7f13\u51b2 \u4e0e \u6297\u952f\u9f7f \u7ae0\u8282\u7684\u6982\u5ff5\u3002 \u5728\u6559\u7a0b\u7684\u5e27\u7f13\u51b2\u7ae0\u8282\u91cc\uff0c\u6211\u4eec\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u5355\u4e2a\u7eb9\u7406\uff0c\u901a\u8fc7\u540e\u671f\u5904\u7406\u7279\u6548\u5b9e\u73b0\u6709\u8da3\u7684\u6548\u679c\uff08\u53cd\u76f8\u3001\u7070\u5ea6\u3001\u6a21\u7cca\u3001\u9510\u5316\u3001\u8fb9\u7f18\u68c0\u6d4b\uff09\u3002\u5728Breakout\u4e2d\u6211\u4eec\u5c06\u505a\u4e00\u4e9b\u7c7b\u4f3c\u7684\u4e8b\u60c5\uff1a\u6211\u4eec\u4f1a\u521b\u5efa\u4e00\u4e2a\u5e27\u7f13\u51b2\u5bf9\u8c61\uff0c\u5e76\u9644\u5e26\u4e00\u4e2a\u591a\u91cd\u91c7\u6837\u7684\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u4f5c\u4e3a\u5176\u989c\u8272\u9644\u4ef6\u3002\u6e38\u620f\u4e2d\u6240\u6709\u7684\u6e32\u67d3\u76f8\u5173\u4ee3\u7801\u90fd\u5e94\u8be5\u6e32\u67d3\u81f3\u8fd9\u4e2a\u591a\u91cd\u91c7\u6837\u7684\u5e27\u7f13\u51b2\uff0c\u7136\u540e\u5c06\u5176\u5185\u5bb9\u4f20\u8f93( Bit blit )\u81f3\u4e00\u4e2a\u4e0d\u540c\u7684\u5e27\u7f13\u51b2\u4e2d\uff0c\u8be5\u5e27\u7f13\u51b2\u7528\u4e00\u4e2a\u7eb9\u7406\u4f5c\u4e3a\u5176\u989c\u8272\u9644\u4ef6\u3002\u8fd9\u4e2a\u7eb9\u7406\u4f1a\u5305\u542b\u6e38\u620f\u7684\u6e32\u67d3\u540e\u7684\u6297\u952f\u9f7f\u56fe\u50cf\uff0c\u6211\u4eec\u5bf9\u5b83\u5e94\u7528\u96f6\u6216\u591a\u4e2a\u540e\u671f\u5904\u7406\u7279\u6548\u540e\u6e32\u67d3\u81f3\u4e00\u4e2a\u5927\u76842D\u56db\u8fb9\u5f62\u3002\uff08\u8bd1\u6ce8\uff1a\u8fd9\u6bb5\u8868\u8ff0\u7684\u590d\u6742\u6d41\u7a0b\u4e0e\u6559\u7a0b\u5e27\u7f13\u51b2\u7ae0\u8282\u7684\u5185\u5bb9\u76f8\u4f3c\uff0c\u539f\u6587\u4e2d\u5305\u542b\u5927\u91cf\u6613\u6df7\u6dc6\u7684\u540d\u8bcd\u4e0e\u4ee3\u8bcd\uff0c\u5efa\u8bae\u8bfb\u8005\u5148\u4ed4\u7ec6\u7406\u89e3\u5e27\u7f13\u51b2\u7ae0\u8282\u7684\u5185\u5bb9\u4e0e\u6d41\u7a0b\uff09\u3002 \u603b\u7ed3\u4e00\u4e0b\u8fd9\u4e9b\u6e32\u67d3\u6b65\u9aa4\uff1a \u7ed1\u5b9a\u81f3\u591a\u91cd\u91c7\u6837\u7684\u5e27\u7f13\u51b2 \u548c\u5f80\u5e38\u4e00\u6837\u6e32\u67d3\u6e38\u620f \u5c06\u591a\u91cd\u91c7\u6837\u7684\u5e27\u7f13\u51b2\u5185\u5bb9\u4f20\u8f93\u81f3\u4e00\u4e2a\u666e\u901a\u7684\u5e27\u7f13\u51b2\u4e2d\uff08\u8fd9\u4e2a\u5e27\u7f13\u51b2\u4f7f\u7528\u4e86\u4e00\u4e2a\u7eb9\u7406\u4f5c\u4e3a\u5176\u989c\u8272\u7f13\u51b2\u9644\u4ef6\uff09 \u89e3\u9664\u7ed1\u5b9a\uff08\u7ed1\u5b9a\u56de\u9ed8\u8ba4\u7684\u5e27\u7f13\u51b2\uff09 \u5728\u540e\u671f\u5904\u7406\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u6765\u81ea\u666e\u901a\u5e27\u7f13\u51b2\u7684\u989c\u8272\u7f13\u51b2\u7eb9\u7406 \u6e32\u67d3\u5c4f\u5e55\u5927\u5c0f\u7684\u56db\u8fb9\u5f62\u4f5c\u4e3a\u540e\u671f\u5904\u7406\u7740\u8272\u5668\u7684\u8f93\u51fa \u6211\u4eec\u7684\u540e\u671f\u5904\u7406\u7740\u8272\u5668\u5141\u8bb8\u4f7f\u7528\u4e09\u79cd\u7279\u6548\uff1a shake , confuse \u548c chaos \u3002 shake \uff1a\u8f7b\u5fae\u6643\u52a8\u573a\u666f\u5e76\u9644\u52a0\u4e00\u4e2a\u5fae\u5c0f\u7684\u6a21\u7cca\u6548\u679c\u3002 shake \uff1a\u53cd\u8f6c\u573a\u666f\u4e2d\u7684\u989c\u8272\u5e76\u98a0\u5012x\u8f74\u548cy\u8f74\u3002 chaos : \u5229\u7528\u8fb9\u7f18\u68c0\u6d4b\u5377\u79ef\u6838\u521b\u9020\u6709\u8da3\u7684\u89c6\u89c9\u6548\u679c\uff0c\u5e76\u4ee5\u5706\u5f62\u65cb\u8f6c\u52a8\u753b\u7684\u5f62\u5f0f\u79fb\u52a8\u7eb9\u7406\u56fe\u7247\uff0c\u5b9e\u73b0\u201c\u6df7\u6c8c\u201d\u7279\u6548\u3002 \u4ee5\u4e0b\u662f\u8fd9\u4e9b\u6548\u679c\u7684\u793a\u4f8b\uff1a \u57282D\u56db\u8fb9\u5f62\u4e0a\u64cd\u4f5c\u7684\u9876\u70b9\u7740\u8272\u5668\u5982\u4e0b\u6240\u793a\uff1a #version 330 core layout (location = 0) in vec4 vertex; // <vec2 position, vec2 texCoords> out vec2 TexCoords; uniform bool chaos; uniform bool confuse; uniform bool shake; uniform float time; void main() { gl_Position = vec4(vertex.xy, 0.0f, 1.0f); vec2 texture = vertex.zw; if(chaos) { float strength = 0.3; vec2 pos = vec2(texture.x + sin(time) * strength, texture.y + cos(time) * strength); TexCoords = pos; } else if(confuse) { TexCoords = vec2(1.0 - texture.x, 1.0 - texture.y); } else { TexCoords = texture; } if (shake) { float strength = 0.01; gl_Position.x += cos(time * 10) * strength; gl_Position.y += cos(time * 15) * strength; } } \u57fa\u4e8euniform\u662f\u5426\u88ab\u8bbe\u7f6e\u4e3atrue\uff0c\u9876\u70b9\u7740\u8272\u5668\u53ef\u4ee5\u6267\u884c\u4e0d\u540c\u7684\u5206\u652f\u3002\u5982\u679c chaos \u6216 confuse \u88ab\u8bbe\u7f6e\u4e3atrue\uff0c\u9876\u70b9\u7740\u8272\u5668\u5c06\u64cd\u7eb5\u7eb9\u7406\u5750\u6807\u6765\u79fb\u52a8\u573a\u666f\uff08\u4ee5\u5706\u5f62\u52a8\u753b\u53d8\u6362\u7eb9\u7406\u5750\u6807\u6216\u53cd\u8f6c\u7eb9\u7406\u5750\u6807\uff09\u3002\u56e0\u4e3a\u6211\u4eec\u5c06\u7eb9\u7406\u73af\u7ed5\u65b9\u5f0f\u8bbe\u7f6e\u4e3a\u4e86 GL_REPEAT \uff0c\u6240\u4ee5 chaos \u7279\u6548\u4f1a\u5bfc\u81f4\u573a\u666f\u5728\u56db\u8fb9\u5f62\u7684\u5404\u4e2a\u90e8\u5206\u91cd\u590d\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5982\u679c shake \u88ab\u8bbe\u7f6e\u4e3atrue\uff0c\u5b83\u5c06\u5fae\u91cf\u79fb\u52a8\u9876\u70b9\u4f4d\u7f6e\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c chaos \u4e0e confuse \u4e0d\u5e94\u540c\u65f6\u4e3atrue\uff0c\u800c shake \u5219\u53ef\u4ee5\u4e0e\u5176\u4ed6\u7279\u6548\u4e00\u8d77\u751f\u6548\u3002 \u5f53\u4efb\u610f\u7279\u6548\u88ab\u6fc0\u6d3b\u65f6\uff0c\u9664\u4e86\u504f\u79fb\u9876\u70b9\u7684\u4f4d\u7f6e\u548c\u7eb9\u7406\u5750\u6807\uff0c\u6211\u4eec\u4e5f\u5e0c\u671b\u521b\u9020\u663e\u8457\u7684\u89c6\u89c9\u6548\u679c\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff1a #version 330 core in vec2 TexCoords; out vec4 color; uniform sampler2D scene; uniform vec2 offsets[9]; uniform int edge_kernel[9]; uniform float blur_kernel[9]; uniform bool chaos; uniform bool confuse; uniform bool shake; void main() { color = vec4(0.0f); vec3 sample[9]; // \u5982\u679c\u4f7f\u7528\u5377\u79ef\u77e9\u9635\uff0c\u5219\u5bf9\u7eb9\u7406\u7684\u504f\u79fb\u50cf\u7d20\u8fdb\u884c\u91c7\u6837 if(chaos || shake) for(int i = 0; i < 9; i++) sample[i] = vec3(texture(scene, TexCoords.st + offsets[i])); // \u5904\u7406\u7279\u6548 if(chaos) { for(int i = 0; i < 9; i++) color += vec4(sample[i] * edge_kernel[i], 0.0f); color.a = 1.0f; } else if(confuse) { color = vec4(1.0 - texture(scene, TexCoords).rgb, 1.0); } else if(shake) { for(int i = 0; i < 9; i++) color += vec4(sample[i] * blur_kernel[i], 0.0f); color.a = 1.0f; } else { color = texture(scene, TexCoords); } } \u8fd9\u4e2a\u7740\u8272\u5668\u51e0\u4e4e\u76f4\u63a5\u6784\u5efa\u81ea\u5e27\u7f13\u51b2\u6559\u7a0b\u7684\u7247\u6bb5\u7740\u8272\u5668\uff0c\u5e76\u6839\u636e\u88ab\u6fc0\u6d3b\u7684\u7279\u6548\u7c7b\u578b\u8fdb\u884c\u76f8\u5e94\u7684\u540e\u671f\u5904\u7406\u3002\u8fd9\u4e00\u6b21\uff0c\u504f\u79fb\u77e9\u9635(offset matrix)\u548c\u5377\u79ef\u6838\u4f5c\u4e3auniform\u53d8\u91cf\uff0c\u7531\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u4ee3\u7801\u5b9a\u4e49\u3002\u597d\u5904\u662f\u6211\u4eec\u53ea\u9700\u8981\u8bbe\u7f6e\u8fd9\u4e9b\u5185\u5bb9\u4e00\u6b21\uff0c\u800c\u4e0d\u5fc5\u5728\u6bcf\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u6267\u884c\u65f6\u91cd\u65b0\u8ba1\u7b97\u8fd9\u4e9b\u77e9\u9635\u3002\u4f8b\u5982\uff0c\u504f\u79fb\u77e9\u9635\u7684\u914d\u7f6e\u5982\u4e0b\u6240\u793a\uff1a GLfloat offset = 1.0f / 300.0f; GLfloat offsets[9][2] = { { -offset, offset }, // \u5de6\u4e0a { 0.0f, offset }, // \u4e2d\u4e0a { offset, offset }, // \u53f3\u4e0a { -offset, 0.0f }, // \u5de6\u4e2d { 0.0f, 0.0f }, // \u6b63\u4e2d { offset, 0.0f }, // \u53f3\u4e2d { -offset, -offset }, // \u5de6\u4e0b { 0.0f, -offset }, // \u4e2d\u4e0b { offset, -offset } // \u53f3\u4e0b }; glUniform2fv(glGetUniformLocation(shader.ID, \"offsets\"), 9, (GLfloat*)offsets); \u7531\u4e8e\u6240\u6709\u7ba1\u7406\u5e27\u7f13\u51b2\u5668\u7684\u6982\u5ff5\u5df2\u7ecf\u5728\u4e4b\u524d\u7684\u6559\u7a0b\u4e2d\u6709\u8fc7\u5e7f\u6cdb\u7684\u8ba8\u8bba\uff0c\u6240\u4ee5\u8fd9\u6b21\u6211\u4e0d\u4f1a\u6df1\u5165\u5176\u7ec6\u8282\u3002\u4e0b\u9762\u662f PostProcessor \u7c7b\u7684\u4ee3\u7801\uff0c\u5b83\u7ba1\u7406\u521d\u59cb\u5316\uff0c\u8bfb\u5199\u5e27\u7f13\u51b2\u5e76\u5c06\u4e00\u4e2a\u56db\u8fb9\u5f62\u6e32\u67d3\u81f3\u5c4f\u5e55\u3002\u5982\u679c\u4f60\u7406\u89e3\u4e86\u5e27\u7f13\u51b2\u4e0e\u53cd\u952f\u9f7f\u7ae0\u8282\u7684\u6559\u7a0b\uff0c\u4f60\u5e94\u8be5\u53ef\u4ee5\u5b8c\u5168\u5b83\u7684\u4ee3\u7801\u3002 PostProcessor \uff1a \u5934\u6587\u4ef6 \uff0c \u4ee3\u7801 \u6709\u8da3\u7684\u662f BeginRender \u548c EndRender \u51fd\u6570\u3002\u7531\u4e8e\u6211\u4eec\u5fc5\u987b\u5c06\u6574\u4e2a\u6e38\u620f\u573a\u666f\u6e32\u67d3\u81f3\u5e27\u7f13\u51b2\u4e2d\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5728\u573a\u666f\u7684\u6e32\u67d3\u4ee3\u7801\u4e4b\u524d\u548c\u4e4b\u540e\u5206\u522b\u8c03\u7528 BeginRender \u548c EndRender \u3002\u63a5\u7740\uff0c\u8fd9\u4e2a\u7c7b\u5c06\u5904\u7406\u5e55\u540e\u7684\u5e27\u7f13\u51b2\u64cd\u4f5c\u3002\u5728\u6e38\u620f\u7684\u6e32\u67d3\u51fd\u6570\u4e2d\u4f7f\u7528 PostProcessor \u7c7b\u5982\u4e0b\u6240\u793a\uff1a PostProcessor *Effects; void Game::Render() { if (this->State == GAME_ACTIVE) { Effects->BeginRender(); // \u7ed8\u5236\u80cc\u666f // \u7ed8\u5236\u5173\u5361 // \u7ed8\u5236\u6321\u677f // \u7ed8\u5236\u7c92\u5b50 // \u7ed8\u5236\u5c0f\u7403 Effects->EndRender(); Effects->Render(glfwGetTime()); } } \u65e0\u8bba\u6211\u4eec\u9700\u8981\u4ec0\u4e48\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u9700\u8981\u7684 PostProcessor \u7c7b\u4e2d\u7684\u7279\u6548\u5c5e\u6027\u8bbe\u7f6e\u4e3atrue\uff0c\u5176\u6548\u679c\u5c31\u53ef\u4ee5\u7acb\u5373\u53ef\u89c1\u3002 Shake it \u4f5c\u4e3a\u8fd9\u4e9b\u6548\u679c\u7684\u6f14\u793a\uff0c\u6211\u4eec\u5c06\u6a21\u62df\u7403\u51fb\u4e2d\u575a\u56fa\u7684\u6df7\u51dd\u571f\u5757\u65f6\u7684\u89c6\u89c9\u51b2\u51fb\u3002\u65e0\u8bba\u5728\u54ea\u91cc\u53d1\u751f\u78b0\u649e\uff0c\u53ea\u8981\u5728\u77ed\u65f6\u95f4\u5185\u5b9e\u73b0\u6643\u52a8(shake)\u6548\u679c\uff0c\u4fbf\u80fd\u589e\u5f3a\u649e\u51fb\u7684\u51b2\u51fb\u611f\u3002 \u6211\u4eec\u53ea\u60f3\u5141\u8bb8\u6643\u52a8\u6548\u679c\u6301\u7eed\u4e00\u5c0f\u6bb5\u65f6\u95f4\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u58f0\u660e\u4e00\u4e2a\u6301\u6709\u6643\u52a8\u6548\u679c\u6301\u7eed\u65f6\u95f4\u7684\u53d8\u91cf ShakeTime \u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\u3002\u65e0\u8bba\u78b0\u649e\u4f55\u65f6\u53d1\u751f\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u53d8\u91cf\u91cd\u7f6e\u4e3a\u4e00\u4e2a\u7279\u5b9a\u7684\u6301\u7eed\u65f6\u95f4: GLfloat ShakeTime = 0.0f; void Game::DoCollisions() { for (GameObject &box : this->Levels[this->Level].Bricks) { if (!box.Destroyed) { Collision collision = CheckCollision(*Ball, box); if (std::get<0>(collision)) // \u5982\u679c\u53d1\u751f\u4e86\u78b0\u649e { // \u5982\u679c\u4e0d\u662f\u5b9e\u5fc3\u7684\u7816\u5757\u5219\u6467\u6bc1 if (!box.IsSolid) box.Destroyed = GL_TRUE; else { // \u5982\u679c\u662f\u5b9e\u5fc3\u7684\u7816\u5757\u5219\u6fc0\u6d3bshake\u7279\u6548 ShakeTime = 0.05f; Effects->Shake = true; } [...] } } } [...] } \u7136\u540e\u5728\u6e38\u620f\u7684 Update \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u51cf\u5c11 ShakeTime \u53d8\u91cf\u7684\u503c\u76f4\u5230\u5176\u4e3a0.0\uff0c\u5e76\u505c\u7528shake\u7279\u6548\u3002 void Game::Update(GLfloat dt) { [...] if (ShakeTime > 0.0f) { ShakeTime -= dt; if (ShakeTime <= 0.0f) Effects->Shake = false; } } \u8fd9\u6837\uff0c\u6bcf\u5f53\u6211\u4eec\u78b0\u5230\u4e00\u4e2a\u5b9e\u5fc3\u7816\u5757\u65f6\uff0c\u5c4f\u5e55\u4f1a\u77ed\u6682\u5730\u6296\u52a8\u4e0e\u6a21\u7cca\uff0c\u7ed9\u73a9\u5bb6\u4e00\u4e9b\u5c0f\u7403\u4e0e\u575a\u56fa\u7269\u4f53\u78b0\u649e\u7684\u89c6\u89c9\u53cd\u9988\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u66f4\u65b0\u540e\u7684 Game \u7c7b\u3002 \u5728 \u4e0b\u4e00\u7ae0 \u5173\u4e8e\u201c\u9053\u5177\u201d\u7684\u6559\u7a0b\u4e2d\u6211\u4eec\u5c06\u5e26\u6765\u53e6\u5916\u4e24\u79cd\u7684\u7279\u6548\u7684\u4f7f\u7528\u3002","title":"\u540e\u671f\u5904\u7406"},{"location":"06%20In%20Practice/2D-Game/07%20Postprocessing/#_1","text":"\u539f\u6587 Postprocessing \u4f5c\u8005 JoeydeVries \u7ffb\u8bd1 \u5305\u7eb8 \u6821\u5bf9 \u6682\u65e0 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u5982\u679c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u51e0\u4e2a\u540e\u671f\u5904\u7406(Postprocess)\u7279\u6548\u4e30\u5bccBreakout\u6e38\u620f\u7684\u89c6\u89c9\u6548\u679c\u7684\u8bdd\uff0c\u4f1a\u4e0d\u4f1a\u662f\u4e00\u4ef6\u5f88\u6709\u8da3\u7684\u4e8b\u60c5\uff1f\u5229\u7528OpenGL\u7684\u5e27\u7f13\u51b2\uff0c\u6211\u4eec\u53ef\u4ee5\u76f8\u5bf9\u5bb9\u6613\u5730\u521b\u9020\u51fa\u6a21\u7cca\u7684\u6296\u52a8\u6548\u679c\u3001\u53cd\u8f6c\u573a\u666f\u91cc\u7684\u6240\u6709\u989c\u8272\u3001\u505a\u4e00\u4e9b\u201c\u75af\u72c2\u201d\u7684\u9876\u70b9\u8fd0\u52a8\u3001\u6216\u662f\u4f7f\u7528\u4e00\u4e9b\u5176\u4ed6\u6709\u8da3\u7684\u7279\u6548\u3002 Important \u8fd9\u7ae0\u6559\u7a0b\u5e7f\u6cdb\u8fd0\u7528\u4e86\u4e4b\u524d \u5e27\u7f13\u51b2 \u4e0e \u6297\u952f\u9f7f \u7ae0\u8282\u7684\u6982\u5ff5\u3002 \u5728\u6559\u7a0b\u7684\u5e27\u7f13\u51b2\u7ae0\u8282\u91cc\uff0c\u6211\u4eec\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u5355\u4e2a\u7eb9\u7406\uff0c\u901a\u8fc7\u540e\u671f\u5904\u7406\u7279\u6548\u5b9e\u73b0\u6709\u8da3\u7684\u6548\u679c\uff08\u53cd\u76f8\u3001\u7070\u5ea6\u3001\u6a21\u7cca\u3001\u9510\u5316\u3001\u8fb9\u7f18\u68c0\u6d4b\uff09\u3002\u5728Breakout\u4e2d\u6211\u4eec\u5c06\u505a\u4e00\u4e9b\u7c7b\u4f3c\u7684\u4e8b\u60c5\uff1a\u6211\u4eec\u4f1a\u521b\u5efa\u4e00\u4e2a\u5e27\u7f13\u51b2\u5bf9\u8c61\uff0c\u5e76\u9644\u5e26\u4e00\u4e2a\u591a\u91cd\u91c7\u6837\u7684\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61\u4f5c\u4e3a\u5176\u989c\u8272\u9644\u4ef6\u3002\u6e38\u620f\u4e2d\u6240\u6709\u7684\u6e32\u67d3\u76f8\u5173\u4ee3\u7801\u90fd\u5e94\u8be5\u6e32\u67d3\u81f3\u8fd9\u4e2a\u591a\u91cd\u91c7\u6837\u7684\u5e27\u7f13\u51b2\uff0c\u7136\u540e\u5c06\u5176\u5185\u5bb9\u4f20\u8f93( Bit blit )\u81f3\u4e00\u4e2a\u4e0d\u540c\u7684\u5e27\u7f13\u51b2\u4e2d\uff0c\u8be5\u5e27\u7f13\u51b2\u7528\u4e00\u4e2a\u7eb9\u7406\u4f5c\u4e3a\u5176\u989c\u8272\u9644\u4ef6\u3002\u8fd9\u4e2a\u7eb9\u7406\u4f1a\u5305\u542b\u6e38\u620f\u7684\u6e32\u67d3\u540e\u7684\u6297\u952f\u9f7f\u56fe\u50cf\uff0c\u6211\u4eec\u5bf9\u5b83\u5e94\u7528\u96f6\u6216\u591a\u4e2a\u540e\u671f\u5904\u7406\u7279\u6548\u540e\u6e32\u67d3\u81f3\u4e00\u4e2a\u5927\u76842D\u56db\u8fb9\u5f62\u3002\uff08\u8bd1\u6ce8\uff1a\u8fd9\u6bb5\u8868\u8ff0\u7684\u590d\u6742\u6d41\u7a0b\u4e0e\u6559\u7a0b\u5e27\u7f13\u51b2\u7ae0\u8282\u7684\u5185\u5bb9\u76f8\u4f3c\uff0c\u539f\u6587\u4e2d\u5305\u542b\u5927\u91cf\u6613\u6df7\u6dc6\u7684\u540d\u8bcd\u4e0e\u4ee3\u8bcd\uff0c\u5efa\u8bae\u8bfb\u8005\u5148\u4ed4\u7ec6\u7406\u89e3\u5e27\u7f13\u51b2\u7ae0\u8282\u7684\u5185\u5bb9\u4e0e\u6d41\u7a0b\uff09\u3002 \u603b\u7ed3\u4e00\u4e0b\u8fd9\u4e9b\u6e32\u67d3\u6b65\u9aa4\uff1a \u7ed1\u5b9a\u81f3\u591a\u91cd\u91c7\u6837\u7684\u5e27\u7f13\u51b2 \u548c\u5f80\u5e38\u4e00\u6837\u6e32\u67d3\u6e38\u620f \u5c06\u591a\u91cd\u91c7\u6837\u7684\u5e27\u7f13\u51b2\u5185\u5bb9\u4f20\u8f93\u81f3\u4e00\u4e2a\u666e\u901a\u7684\u5e27\u7f13\u51b2\u4e2d\uff08\u8fd9\u4e2a\u5e27\u7f13\u51b2\u4f7f\u7528\u4e86\u4e00\u4e2a\u7eb9\u7406\u4f5c\u4e3a\u5176\u989c\u8272\u7f13\u51b2\u9644\u4ef6\uff09 \u89e3\u9664\u7ed1\u5b9a\uff08\u7ed1\u5b9a\u56de\u9ed8\u8ba4\u7684\u5e27\u7f13\u51b2\uff09 \u5728\u540e\u671f\u5904\u7406\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u6765\u81ea\u666e\u901a\u5e27\u7f13\u51b2\u7684\u989c\u8272\u7f13\u51b2\u7eb9\u7406 \u6e32\u67d3\u5c4f\u5e55\u5927\u5c0f\u7684\u56db\u8fb9\u5f62\u4f5c\u4e3a\u540e\u671f\u5904\u7406\u7740\u8272\u5668\u7684\u8f93\u51fa \u6211\u4eec\u7684\u540e\u671f\u5904\u7406\u7740\u8272\u5668\u5141\u8bb8\u4f7f\u7528\u4e09\u79cd\u7279\u6548\uff1a shake , confuse \u548c chaos \u3002 shake \uff1a\u8f7b\u5fae\u6643\u52a8\u573a\u666f\u5e76\u9644\u52a0\u4e00\u4e2a\u5fae\u5c0f\u7684\u6a21\u7cca\u6548\u679c\u3002 shake \uff1a\u53cd\u8f6c\u573a\u666f\u4e2d\u7684\u989c\u8272\u5e76\u98a0\u5012x\u8f74\u548cy\u8f74\u3002 chaos : \u5229\u7528\u8fb9\u7f18\u68c0\u6d4b\u5377\u79ef\u6838\u521b\u9020\u6709\u8da3\u7684\u89c6\u89c9\u6548\u679c\uff0c\u5e76\u4ee5\u5706\u5f62\u65cb\u8f6c\u52a8\u753b\u7684\u5f62\u5f0f\u79fb\u52a8\u7eb9\u7406\u56fe\u7247\uff0c\u5b9e\u73b0\u201c\u6df7\u6c8c\u201d\u7279\u6548\u3002 \u4ee5\u4e0b\u662f\u8fd9\u4e9b\u6548\u679c\u7684\u793a\u4f8b\uff1a \u57282D\u56db\u8fb9\u5f62\u4e0a\u64cd\u4f5c\u7684\u9876\u70b9\u7740\u8272\u5668\u5982\u4e0b\u6240\u793a\uff1a #version 330 core layout (location = 0) in vec4 vertex; // <vec2 position, vec2 texCoords> out vec2 TexCoords; uniform bool chaos; uniform bool confuse; uniform bool shake; uniform float time; void main() { gl_Position = vec4(vertex.xy, 0.0f, 1.0f); vec2 texture = vertex.zw; if(chaos) { float strength = 0.3; vec2 pos = vec2(texture.x + sin(time) * strength, texture.y + cos(time) * strength); TexCoords = pos; } else if(confuse) { TexCoords = vec2(1.0 - texture.x, 1.0 - texture.y); } else { TexCoords = texture; } if (shake) { float strength = 0.01; gl_Position.x += cos(time * 10) * strength; gl_Position.y += cos(time * 15) * strength; } } \u57fa\u4e8euniform\u662f\u5426\u88ab\u8bbe\u7f6e\u4e3atrue\uff0c\u9876\u70b9\u7740\u8272\u5668\u53ef\u4ee5\u6267\u884c\u4e0d\u540c\u7684\u5206\u652f\u3002\u5982\u679c chaos \u6216 confuse \u88ab\u8bbe\u7f6e\u4e3atrue\uff0c\u9876\u70b9\u7740\u8272\u5668\u5c06\u64cd\u7eb5\u7eb9\u7406\u5750\u6807\u6765\u79fb\u52a8\u573a\u666f\uff08\u4ee5\u5706\u5f62\u52a8\u753b\u53d8\u6362\u7eb9\u7406\u5750\u6807\u6216\u53cd\u8f6c\u7eb9\u7406\u5750\u6807\uff09\u3002\u56e0\u4e3a\u6211\u4eec\u5c06\u7eb9\u7406\u73af\u7ed5\u65b9\u5f0f\u8bbe\u7f6e\u4e3a\u4e86 GL_REPEAT \uff0c\u6240\u4ee5 chaos \u7279\u6548\u4f1a\u5bfc\u81f4\u573a\u666f\u5728\u56db\u8fb9\u5f62\u7684\u5404\u4e2a\u90e8\u5206\u91cd\u590d\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5982\u679c shake \u88ab\u8bbe\u7f6e\u4e3atrue\uff0c\u5b83\u5c06\u5fae\u91cf\u79fb\u52a8\u9876\u70b9\u4f4d\u7f6e\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c chaos \u4e0e confuse \u4e0d\u5e94\u540c\u65f6\u4e3atrue\uff0c\u800c shake \u5219\u53ef\u4ee5\u4e0e\u5176\u4ed6\u7279\u6548\u4e00\u8d77\u751f\u6548\u3002 \u5f53\u4efb\u610f\u7279\u6548\u88ab\u6fc0\u6d3b\u65f6\uff0c\u9664\u4e86\u504f\u79fb\u9876\u70b9\u7684\u4f4d\u7f6e\u548c\u7eb9\u7406\u5750\u6807\uff0c\u6211\u4eec\u4e5f\u5e0c\u671b\u521b\u9020\u663e\u8457\u7684\u89c6\u89c9\u6548\u679c\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff1a #version 330 core in vec2 TexCoords; out vec4 color; uniform sampler2D scene; uniform vec2 offsets[9]; uniform int edge_kernel[9]; uniform float blur_kernel[9]; uniform bool chaos; uniform bool confuse; uniform bool shake; void main() { color = vec4(0.0f); vec3 sample[9]; // \u5982\u679c\u4f7f\u7528\u5377\u79ef\u77e9\u9635\uff0c\u5219\u5bf9\u7eb9\u7406\u7684\u504f\u79fb\u50cf\u7d20\u8fdb\u884c\u91c7\u6837 if(chaos || shake) for(int i = 0; i < 9; i++) sample[i] = vec3(texture(scene, TexCoords.st + offsets[i])); // \u5904\u7406\u7279\u6548 if(chaos) { for(int i = 0; i < 9; i++) color += vec4(sample[i] * edge_kernel[i], 0.0f); color.a = 1.0f; } else if(confuse) { color = vec4(1.0 - texture(scene, TexCoords).rgb, 1.0); } else if(shake) { for(int i = 0; i < 9; i++) color += vec4(sample[i] * blur_kernel[i], 0.0f); color.a = 1.0f; } else { color = texture(scene, TexCoords); } } \u8fd9\u4e2a\u7740\u8272\u5668\u51e0\u4e4e\u76f4\u63a5\u6784\u5efa\u81ea\u5e27\u7f13\u51b2\u6559\u7a0b\u7684\u7247\u6bb5\u7740\u8272\u5668\uff0c\u5e76\u6839\u636e\u88ab\u6fc0\u6d3b\u7684\u7279\u6548\u7c7b\u578b\u8fdb\u884c\u76f8\u5e94\u7684\u540e\u671f\u5904\u7406\u3002\u8fd9\u4e00\u6b21\uff0c\u504f\u79fb\u77e9\u9635(offset matrix)\u548c\u5377\u79ef\u6838\u4f5c\u4e3auniform\u53d8\u91cf\uff0c\u7531\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u4ee3\u7801\u5b9a\u4e49\u3002\u597d\u5904\u662f\u6211\u4eec\u53ea\u9700\u8981\u8bbe\u7f6e\u8fd9\u4e9b\u5185\u5bb9\u4e00\u6b21\uff0c\u800c\u4e0d\u5fc5\u5728\u6bcf\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u6267\u884c\u65f6\u91cd\u65b0\u8ba1\u7b97\u8fd9\u4e9b\u77e9\u9635\u3002\u4f8b\u5982\uff0c\u504f\u79fb\u77e9\u9635\u7684\u914d\u7f6e\u5982\u4e0b\u6240\u793a\uff1a GLfloat offset = 1.0f / 300.0f; GLfloat offsets[9][2] = { { -offset, offset }, // \u5de6\u4e0a { 0.0f, offset }, // \u4e2d\u4e0a { offset, offset }, // \u53f3\u4e0a { -offset, 0.0f }, // \u5de6\u4e2d { 0.0f, 0.0f }, // \u6b63\u4e2d { offset, 0.0f }, // \u53f3\u4e2d { -offset, -offset }, // \u5de6\u4e0b { 0.0f, -offset }, // \u4e2d\u4e0b { offset, -offset } // \u53f3\u4e0b }; glUniform2fv(glGetUniformLocation(shader.ID, \"offsets\"), 9, (GLfloat*)offsets); \u7531\u4e8e\u6240\u6709\u7ba1\u7406\u5e27\u7f13\u51b2\u5668\u7684\u6982\u5ff5\u5df2\u7ecf\u5728\u4e4b\u524d\u7684\u6559\u7a0b\u4e2d\u6709\u8fc7\u5e7f\u6cdb\u7684\u8ba8\u8bba\uff0c\u6240\u4ee5\u8fd9\u6b21\u6211\u4e0d\u4f1a\u6df1\u5165\u5176\u7ec6\u8282\u3002\u4e0b\u9762\u662f PostProcessor \u7c7b\u7684\u4ee3\u7801\uff0c\u5b83\u7ba1\u7406\u521d\u59cb\u5316\uff0c\u8bfb\u5199\u5e27\u7f13\u51b2\u5e76\u5c06\u4e00\u4e2a\u56db\u8fb9\u5f62\u6e32\u67d3\u81f3\u5c4f\u5e55\u3002\u5982\u679c\u4f60\u7406\u89e3\u4e86\u5e27\u7f13\u51b2\u4e0e\u53cd\u952f\u9f7f\u7ae0\u8282\u7684\u6559\u7a0b\uff0c\u4f60\u5e94\u8be5\u53ef\u4ee5\u5b8c\u5168\u5b83\u7684\u4ee3\u7801\u3002 PostProcessor \uff1a \u5934\u6587\u4ef6 \uff0c \u4ee3\u7801 \u6709\u8da3\u7684\u662f BeginRender \u548c EndRender \u51fd\u6570\u3002\u7531\u4e8e\u6211\u4eec\u5fc5\u987b\u5c06\u6574\u4e2a\u6e38\u620f\u573a\u666f\u6e32\u67d3\u81f3\u5e27\u7f13\u51b2\u4e2d\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5728\u573a\u666f\u7684\u6e32\u67d3\u4ee3\u7801\u4e4b\u524d\u548c\u4e4b\u540e\u5206\u522b\u8c03\u7528 BeginRender \u548c EndRender \u3002\u63a5\u7740\uff0c\u8fd9\u4e2a\u7c7b\u5c06\u5904\u7406\u5e55\u540e\u7684\u5e27\u7f13\u51b2\u64cd\u4f5c\u3002\u5728\u6e38\u620f\u7684\u6e32\u67d3\u51fd\u6570\u4e2d\u4f7f\u7528 PostProcessor \u7c7b\u5982\u4e0b\u6240\u793a\uff1a PostProcessor *Effects; void Game::Render() { if (this->State == GAME_ACTIVE) { Effects->BeginRender(); // \u7ed8\u5236\u80cc\u666f // \u7ed8\u5236\u5173\u5361 // \u7ed8\u5236\u6321\u677f // \u7ed8\u5236\u7c92\u5b50 // \u7ed8\u5236\u5c0f\u7403 Effects->EndRender(); Effects->Render(glfwGetTime()); } } \u65e0\u8bba\u6211\u4eec\u9700\u8981\u4ec0\u4e48\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u9700\u8981\u7684 PostProcessor \u7c7b\u4e2d\u7684\u7279\u6548\u5c5e\u6027\u8bbe\u7f6e\u4e3atrue\uff0c\u5176\u6548\u679c\u5c31\u53ef\u4ee5\u7acb\u5373\u53ef\u89c1\u3002","title":"\u540e\u671f\u5904\u7406"},{"location":"06%20In%20Practice/2D-Game/07%20Postprocessing/#shake-it","text":"\u4f5c\u4e3a\u8fd9\u4e9b\u6548\u679c\u7684\u6f14\u793a\uff0c\u6211\u4eec\u5c06\u6a21\u62df\u7403\u51fb\u4e2d\u575a\u56fa\u7684\u6df7\u51dd\u571f\u5757\u65f6\u7684\u89c6\u89c9\u51b2\u51fb\u3002\u65e0\u8bba\u5728\u54ea\u91cc\u53d1\u751f\u78b0\u649e\uff0c\u53ea\u8981\u5728\u77ed\u65f6\u95f4\u5185\u5b9e\u73b0\u6643\u52a8(shake)\u6548\u679c\uff0c\u4fbf\u80fd\u589e\u5f3a\u649e\u51fb\u7684\u51b2\u51fb\u611f\u3002 \u6211\u4eec\u53ea\u60f3\u5141\u8bb8\u6643\u52a8\u6548\u679c\u6301\u7eed\u4e00\u5c0f\u6bb5\u65f6\u95f4\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u58f0\u660e\u4e00\u4e2a\u6301\u6709\u6643\u52a8\u6548\u679c\u6301\u7eed\u65f6\u95f4\u7684\u53d8\u91cf ShakeTime \u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\u3002\u65e0\u8bba\u78b0\u649e\u4f55\u65f6\u53d1\u751f\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u53d8\u91cf\u91cd\u7f6e\u4e3a\u4e00\u4e2a\u7279\u5b9a\u7684\u6301\u7eed\u65f6\u95f4: GLfloat ShakeTime = 0.0f; void Game::DoCollisions() { for (GameObject &box : this->Levels[this->Level].Bricks) { if (!box.Destroyed) { Collision collision = CheckCollision(*Ball, box); if (std::get<0>(collision)) // \u5982\u679c\u53d1\u751f\u4e86\u78b0\u649e { // \u5982\u679c\u4e0d\u662f\u5b9e\u5fc3\u7684\u7816\u5757\u5219\u6467\u6bc1 if (!box.IsSolid) box.Destroyed = GL_TRUE; else { // \u5982\u679c\u662f\u5b9e\u5fc3\u7684\u7816\u5757\u5219\u6fc0\u6d3bshake\u7279\u6548 ShakeTime = 0.05f; Effects->Shake = true; } [...] } } } [...] } \u7136\u540e\u5728\u6e38\u620f\u7684 Update \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u51cf\u5c11 ShakeTime \u53d8\u91cf\u7684\u503c\u76f4\u5230\u5176\u4e3a0.0\uff0c\u5e76\u505c\u7528shake\u7279\u6548\u3002 void Game::Update(GLfloat dt) { [...] if (ShakeTime > 0.0f) { ShakeTime -= dt; if (ShakeTime <= 0.0f) Effects->Shake = false; } } \u8fd9\u6837\uff0c\u6bcf\u5f53\u6211\u4eec\u78b0\u5230\u4e00\u4e2a\u5b9e\u5fc3\u7816\u5757\u65f6\uff0c\u5c4f\u5e55\u4f1a\u77ed\u6682\u5730\u6296\u52a8\u4e0e\u6a21\u7cca\uff0c\u7ed9\u73a9\u5bb6\u4e00\u4e9b\u5c0f\u7403\u4e0e\u575a\u56fa\u7269\u4f53\u78b0\u649e\u7684\u89c6\u89c9\u53cd\u9988\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u66f4\u65b0\u540e\u7684 Game \u7c7b\u3002 \u5728 \u4e0b\u4e00\u7ae0 \u5173\u4e8e\u201c\u9053\u5177\u201d\u7684\u6559\u7a0b\u4e2d\u6211\u4eec\u5c06\u5e26\u6765\u53e6\u5916\u4e24\u79cd\u7684\u7279\u6548\u7684\u4f7f\u7528\u3002","title":"Shake it"},{"location":"06%20In%20Practice/2D-Game/08%20Powerups/","text":"\u9053\u5177 \u539f\u6587 Powerups \u4f5c\u8005 JoeydeVries \u7ffb\u8bd1 \u5305\u7eb8 \u6821\u5bf9 \u6682\u65e0 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 Breakout\u5df2\u7ecf\u63a5\u8fd1\u5b8c\u6210\u4e86\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u81f3\u5c11\u518d\u589e\u52a0\u4e00\u79cd\u6e38\u620f\u673a\u5236\u8ba9\u5b83\u53d8\u5f97\u66f4\u9177\u3002\u201c\u5145\u7535\u201d\uff08\u8bd1\u6ce8\uff1aPowerups\uff0c\u5f88\u591a\u6e38\u620f\u4e2d\u90fd\u4f1a\u7528\u8fd9\u4e2a\u5355\u8bcd\u6307\u4ee3\u53ef\u4ee5\u63d0\u5347\u80fd\u529b\u7684\u9053\u5177\uff0c\u672c\u6587\u4e4b\u540e\u4e5f\u4f1a\u7528\u9053\u5177\u4e00\u8bcd\u4f5c\u4e3a\u5176\u7ffb\u8bd1\uff09\u600e\u4e48\u6837\uff1f \u8fd9\u4e2a\u60f3\u6cd5\u7684\u542b\u4e49\u662f\uff0c\u65e0\u8bba\u4e00\u4e2a\u7816\u5757\u4f55\u65f6\u88ab\u6467\u6bc1\uff0c\u5b83\u90fd\u6709\u4e00\u5b9a\u51e0\u7387\u4ea7\u751f\u4e00\u4e2a\u9053\u5177\u5757\u3002\u8fd9\u6837\u7684\u9053\u5177\u5feb\u4f1a\u7f13\u6162\u964d\u843d\uff0c\u800c\u4e14\u5f53\u5b83\u4e0e\u73a9\u5bb6\u6321\u677f\u53d1\u751f\u63a5\u89e6\u65f6\uff0c\u4f1a\u53d1\u751f\u57fa\u4e8e\u9053\u5177\u7c7b\u578b\u7684\u6709\u8da3\u6548\u679c\u3002\u4f8b\u5982\uff0c\u67d0\u4e00\u79cd\u9053\u5177\u53ef\u4ee5\u8ba9\u73a9\u5bb6\u6321\u677f\u53d8\u957f\uff0c\u53e6\u4e00\u79cd\u9053\u5177\u5219\u53ef\u4ee5\u8ba9\u5c0f\u7403\u7a7f\u8fc7\u7269\u4f53\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e9b\u53ef\u4ee5\u7ed9\u73a9\u5bb6\u9020\u6210\u8d1f\u9762\u5f71\u54cd\u7684\u8d1f\u9762\u9053\u5177\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u9053\u5177\u5efa\u6a21\u4e3a\u5177\u6709\u4e00\u4e9b\u989d\u5916\u5c5e\u6027\u7684 GameObject \uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u7ee7\u627f\u81ea GameObject \u7684 PowerUp \u7c7b\u5e76\u5728\u5176\u4e2d\u589e\u6dfb\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u6210\u5458\u5c5e\u6027\u3002 const glm::vec2 SIZE(60, 20); const glm::vec2 VELOCITY(0.0f, 150.0f); class PowerUp : public GameObject { public: // \u9053\u5177\u7c7b\u578b std::string Type; GLfloat Duration; GLboolean Activated; // \u6784\u9020\u51fd\u6570 PowerUp(std::string type, glm::vec3 color, GLfloat duration, glm::vec2 position, Texture2D texture) : GameObject(position, SIZE, texture, color, VELOCITY), Type(type), Duration(duration), Activated() { } }; PowerUp \u7c7b\u4ec5\u4ec5\u662f\u4e00\u4e2a\u6709\u4e00\u4e9b\u989d\u5916\u72b6\u6001\u7684 GameObject \uff0c \u6240\u4ee5\u6211\u4eec\u7b80\u5355\u5730\u5c06\u5b83\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u5934\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5b83\u3002 \u6bcf\u4e2a\u9053\u5177\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u5b9a\u4e49\u5b83\u7684\u7c7b\u578b\uff0c\u6301\u6709\u8868\u793a\u5b83\u6709\u6548\u65f6\u957f\u7684\u6301\u7eed\u65f6\u95f4\u4e0e\u8868\u793a\u5f53\u524d\u662f\u5426\u88ab\u6fc0\u6d3b\u7684\u5c5e\u6027\u3002\u5728Breakout\u4e2d\uff0c\u6211\u4eec\u5c06\u6dfb\u52a04\u79cd\u589e\u76ca\u9053\u5177\u4e0e2\u79cd\u8d1f\u9762\u9053\u5177\uff1a Speed : \u589e\u52a0\u5c0f\u740320%\u7684\u901f\u5ea6 Sticky : \u5f53\u5c0f\u7403\u4e0e\u73a9\u5bb6\u6321\u677f\u63a5\u89e6\u65f6\uff0c\u5c0f\u7403\u4f1a\u4fdd\u6301\u7c98\u5728\u6321\u677f\u4e0a\u7684\u72b6\u6001\u76f4\u5230\u518d\u6b21\u6309\u4e0b\u7a7a\u683c\u952e\uff0c\u8fd9\u53ef\u4ee5\u8ba9\u73a9\u5bb6\u5728\u91ca\u653e\u5c0f\u7403\u524d\u627e\u5230\u66f4\u5408\u9002\u7684\u4f4d\u7f6e Pass-Through : \u975e\u5b9e\u5fc3\u7816\u5757\u7684\u78b0\u649e\u5904\u7406\u88ab\u7981\u7528\uff0c\u4f7f\u5c0f\u7403\u53ef\u4ee5\u7a7f\u8fc7\u5e76\u6467\u6bc1\u591a\u4e2a\u7816\u5757 Pad-Size-Increase : \u589e\u52a0\u73a9\u5bb6\u6321\u677f50\u50cf\u7d20\u7684\u5bbd\u5ea6 Confuse : \u77ed\u65f6\u95f4\u5185\u6fc0\u6d3bconfuse\u540e\u671f\u7279\u6548\uff0c\u8ff7\u60d1\u73a9\u5bb6 Chaos : \u77ed\u65f6\u95f4\u5185\u6fc0\u6d3bchaos\u540e\u671f\u7279\u6548\uff0c\u4f7f\u73a9\u5bb6\u8ff7\u5931\u65b9\u5411 \u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u627e\u5230\u9053\u5177\u7684\u9ad8\u8d28\u91cf\u7eb9\u7406\uff1a Texture \uff1a Speed , Sticky , Pass-Through , Pad-Size-Increase , Confuse , Chaos . \u4e0e\u5173\u5361\u4e2d\u7684\u7816\u5757\u7eb9\u7406\u7c7b\u4f3c\uff0c\u6bcf\u4e2a\u9053\u5177\u7eb9\u7406\u90fd\u662f\u5b8c\u5168\u7070\u5ea6\u7684\uff0c\u8fd9\u4f7f\u5f97\u6211\u4eec\u5728\u5c06\u5176\u4e0e\u989c\u8272\u5411\u91cf\u76f8\u4e58\u65f6\u53ef\u4ee5\u4fdd\u6301\u8272\u5f69\u7684\u5e73\u8861\u3002 \u56e0\u4e3a\u6211\u4eec\u9700\u8981\u8ddf\u8e2a\u6e38\u620f\u4e2d\u88ab\u6fc0\u6d3b\u7684\u9053\u5177\u7684\u7c7b\u578b\u3001\u6301\u7eed\u65f6\u95f4\u3001\u76f8\u5173\u6548\u679c\u7b49\u72b6\u6001\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5b83\u4eec\u5b58\u50a8\u5728\u4e00\u4e2a\u5bb9\u5668\u5185\uff1a class Game { public: [...] std::vector<PowerUp> PowerUps; [...] void SpawnPowerUps(GameObject &block); void UpdatePowerUps(GLfloat dt); }; \u6211\u4eec\u8fd8\u5b9a\u4e49\u4e86\u4e24\u4e2a\u7ba1\u7406\u9053\u5177\u7684\u51fd\u6570\uff0c SpawnPowerUps \u5728\u7ed9\u5b9a\u7684\u7816\u5757\u4f4d\u7f6e\u751f\u6210\u4e00\u4e2a\u9053\u5177\uff0c UpdatePowerUps \u7ba1\u7406\u6240\u6709\u5f53\u524d\u88ab\u6fc0\u6d3b\u7684\u9053\u5177\u3002 SpawnPowerUps \u6bcf\u6b21\u7816\u5757\u88ab\u6467\u6bc1\u65f6\u6211\u4eec\u5e0c\u671b\u4ee5\u4e00\u5b9a\u51e0\u7387\u751f\u6210\u4e00\u4e2a\u9053\u5177\uff0c\u8fd9\u4e2a\u529f\u80fd\u53ef\u4ee5\u5728 Game \u7684 SpawnPowerUps \u51fd\u6570\u4e2d\u627e\u5230\uff1a GLboolean ShouldSpawn(GLuint chance) { GLuint random = rand() % chance; return random == 0; } void Game::SpawnPowerUps(GameObject &block) { if (ShouldSpawn(75)) // 1/75\u7684\u51e0\u7387 this->PowerUps.push_back( PowerUp(\"speed\", glm::vec3(0.5f, 0.5f, 1.0f), 0.0f, block.Position, tex_speed )); if (ShouldSpawn(75)) this->PowerUps.push_back( PowerUp(\"sticky\", glm::vec3(1.0f, 0.5f, 1.0f), 20.0f, block.Position, tex_sticky ); if (ShouldSpawn(75)) this->PowerUps.push_back( PowerUp(\"pass-through\", glm::vec3(0.5f, 1.0f, 0.5f), 10.0f, block.Position, tex_pass )); if (ShouldSpawn(75)) this->PowerUps.push_back( PowerUp(\"pad-size-increase\", glm::vec3(1.0f, 0.6f, 0.4), 0.0f, block.Position, tex_size )); if (ShouldSpawn(15)) // \u8d1f\u9762\u9053\u5177\u88ab\u66f4\u9891\u7e41\u5730\u751f\u6210 this->PowerUps.push_back( PowerUp(\"confuse\", glm::vec3(1.0f, 0.3f, 0.3f), 15.0f, block.Position, tex_confuse )); if (ShouldSpawn(15)) this->PowerUps.push_back( PowerUp(\"chaos\", glm::vec3(0.9f, 0.25f, 0.25f), 15.0f, block.Position, tex_chaos )); } \u8fd9\u6837\u7684 SpawnPowerUps \u51fd\u6570\u4ee5\u4e00\u5b9a\u51e0\u7387\uff081/75\u666e\u901a\u9053\u5177\uff0c1/15\u8d1f\u9762\u9053\u5177\uff09\u751f\u6210\u4e00\u4e2a\u65b0\u7684 PowerUp \u5bf9\u8c61\uff0c\u5e76\u8bbe\u7f6e\u5176\u5c5e\u6027\u3002\u6bcf\u79cd\u9053\u5177\u6709\u7279\u6b8a\u7684\u989c\u8272\u4f7f\u5b83\u4eec\u66f4\u5177\u6709\u8fa8\u8bc6\u5ea6\uff0c\u540c\u65f6\u6839\u636e\u7c7b\u578b\u51b3\u5b9a\u5176\u6301\u7eed\u65f6\u95f4\u7684\u79d2\u6570\uff0c\u82e5\u503c\u4e3a0.0f\u5219\u8868\u793a\u5b83\u6301\u7eed\u65e0\u9650\u957f\u7684\u65f6\u95f4\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6bcf\u4e2a\u9053\u5177\u521d\u59cb\u5316\u65f6\u4f20\u5165\u88ab\u6467\u6bc1\u7816\u5757\u7684\u4f4d\u7f6e\u4e0e\u4e0a\u4e00\u5c0f\u8282\u7ed9\u51fa\u7684\u5bf9\u5e94\u7eb9\u7406\u3002 \u6fc0\u6d3b\u9053\u5177 \u63a5\u4e0b\u6765\u6211\u4eec\u66f4\u65b0\u6e38\u620f\u7684 DoCollisions \u51fd\u6570\u4f7f\u5b83\u4e0d\u53ea\u68c0\u67e5\u5c0f\u7403\u4e0e\u7816\u5757\u548c\u6321\u677f\u7684\u78b0\u649e\uff0c\u8fd8\u68c0\u67e5\u6321\u677f\u4e0e\u6240\u6709\u672a\u88ab\u9500\u6bc1\u7684\u9053\u5177\u7684\u78b0\u649e\u3002\u6ce8\u610f\u6211\u4eec\u5728\u7816\u5757\u88ab\u6467\u6bc1\u7684\u540c\u65f6\u8c03\u7528 SpawnPowerUps \u51fd\u6570\u3002 void Game::DoCollisions() { for (GameObject &box : this->Levels[this->Level].Bricks) { if (!box.Destroyed) { Collision collision = CheckCollision(*Ball, box); if (std::get<0>(collision)) { if (!box.IsSolid) { box.Destroyed = GL_TRUE; this->SpawnPowerUps(box); } [...] } } } [...] for (PowerUp &powerUp : this->PowerUps) { if (!powerUp.Destroyed) { if (powerUp.Position.y >= this->Height) powerUp.Destroyed = GL_TRUE; if (CheckCollision(*Player, powerUp)) { // \u9053\u5177\u4e0e\u6321\u677f\u63a5\u89e6\uff0c\u6fc0\u6d3b\u5b83\uff01 ActivatePowerUp(powerUp); powerUp.Destroyed = GL_TRUE; powerUp.Activated = GL_TRUE; } } } } \u5bf9\u6240\u6709\u672a\u88ab\u9500\u6bc1\u7684\u9053\u5177\uff0c\u6211\u4eec\u68c0\u67e5\u5b83\u662f\u5426\u63a5\u89e6\u5230\u4e86\u5c4f\u5e55\u5e95\u90e8\u6216\u73a9\u5bb6\u6321\u677f\uff0c\u65e0\u8bba\u54ea\u79cd\u60c5\u51b5\u6211\u4eec\u90fd\u9500\u6bc1\u5b83\uff0c\u4f46\u5f53\u9053\u5177\u4e0e\u73a9\u5bb6\u6321\u677f\u63a5\u89e6\u65f6\uff0c\u6fc0\u6d3b\u8fd9\u4e2a\u9053\u5177\u3002 \u6fc0\u6d3b\u9053\u5177\u7684\u64cd\u4f5c\u53ef\u4ee5\u901a\u8fc7\u5c06\u5176 Activated \u5c5e\u6027\u8bbe\u4e3atrue\u6765\u5b8c\u6210\uff0c\u5b9e\u73b0\u5176\u6548\u679c\u5219\u9700\u8981\u5c06\u5b83\u4f20\u7ed9 ActivatePowerUp \u51fd\u6570\uff1a void ActivatePowerUp(PowerUp &powerUp) { // \u6839\u636e\u9053\u5177\u7c7b\u578b\u53d1\u52a8\u9053\u5177 if (powerUp.Type == \"speed\") { Ball->Velocity *= 1.2; } else if (powerUp.Type == \"sticky\") { Ball->Sticky = GL_TRUE; Player->Color = glm::vec3(1.0f, 0.5f, 1.0f); } else if (powerUp.Type == \"pass-through\") { Ball->PassThrough = GL_TRUE; Ball->Color = glm::vec3(1.0f, 0.5f, 0.5f); } else if (powerUp.Type == \"pad-size-increase\") { Player->Size.x += 50; } else if (powerUp.Type == \"confuse\") { if (!Effects->Chaos) Effects->Confuse = GL_TRUE; // \u53ea\u5728chaos\u672a\u6fc0\u6d3b\u65f6\u751f\u6548\uff0cchaos\u540c\u7406 } else if (powerUp.Type == \"chaos\") { if (!Effects->Confuse) Effects->Chaos = GL_TRUE; } } ActivatePowerUp \u7684\u76ee\u7684\u6b63\u5982\u5176\u540d\u79f0\uff0c\u5b83\u6309\u672c\u7ae0\u6559\u7a0b\u4e4b\u524d\u6240\u9884\u8bbe\u7684\u90a3\u6837\u6fc0\u6d3b\u4e86\u4e00\u4e2a\u9053\u5177\u7684\u6548\u679c\u3002\u6211\u4eec\u68c0\u67e5\u9053\u5177\u7684\u7c7b\u578b\u5e76\u76f8\u5e94\u5730\u6539\u53d8\u6e38\u620f\u72b6\u6001\u3002\u5bf9\u4e8e Sticky \u548c Pass-through \u6548\u679c\uff0c\u6211\u4eec\u4e5f\u76f8\u5e94\u5730\u6539\u53d8\u4e86\u6321\u677f\u548c\u5c0f\u7403\u7684\u989c\u8272\u6765\u7ed9\u73a9\u5bb6\u4e00\u4e9b\u5f53\u524d\u88ab\u6fc0\u6d3b\u4e86\u54ea\u79cd\u6548\u679c\u7684\u53cd\u9988\u3002 \u56e0\u4e3a Sticky \u548c Pass-through \u6548\u679c\u7a0d\u5fae\u6539\u53d8\u4e86\u4e00\u4e9b\u539f\u6709\u7684\u6e38\u620f\u903b\u8f91\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u8fd9\u4e9b\u6548\u679c\u4f5c\u4e3a\u5c5e\u6027\u5b58\u50a8\u5728\u5c0f\u7403\u5bf9\u8c61\u4e2d\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5c0f\u7403\u5f53\u524d\u6fc0\u6d3b\u4e86\u4ec0\u4e48\u6548\u679c\u800c\u6539\u53d8\u6e38\u620f\u903b\u8f91\u3002\u6211\u4eec\u53ea\u5728 BallObject \u7684\u5934\u6587\u4ef6\u4e2d\u589e\u52a0\u4e86\u4e24\u4e2a\u5c5e\u6027\uff0c\u4f46\u4e3a\u4e86\u5b8c\u6574\u6027\u4e0b\u9762\u7ed9\u51fa\u4e86\u66f4\u65b0\u540e\u7684\u4ee3\u7801\uff1a GameObject : \u5934\u6587\u4ef6 \uff0c \u4ee3\u7801 \u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6539\u52a8 DoCollisions \u51fd\u6570\u4e2d\u5c0f\u7403\u4e0e\u6321\u677f\u78b0\u649e\u7684\u4ee3\u7801\u4fbf\u6377\u5730\u5b9e\u73b0 Sticky \u6548\u679c\u3002 if (!Ball->Stuck && std::get<0>(result)) { [...] Ball->Stuck = Ball->Sticky; } \u5728\u8fd9\u91cc\u6211\u4eec\u5c06\u5c0f\u7403\u7684Stuck\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u5b83\u81ea\u5df1\u7684Sticky\u5c5e\u6027\uff0c\u82e5 Stikcy \u6548\u679c\u88ab\u6fc0\u6d3b\uff0c\u90a3\u4e48\u5c0f\u7403\u5219\u4f1a\u5728\u4e0e\u6321\u677f\u63a5\u89e6\u65f6\u7c98\u5728\u4e0a\u9762\uff0c\u73a9\u5bb6\u4e0d\u5f97\u4e0d\u518d\u6b21\u6309\u4e0b\u7a7a\u683c\u952e\u624d\u80fd\u91ca\u653e\u5b83\u3002 \u5728\u540c\u6837\u7684 DoCollisions \u51fd\u6570\u4e2d\u8fd8\u6709\u4e2a\u4e3a\u4e86\u5b9e\u73b0 Pass-through \u6548\u679c\u7684\u7c7b\u4f3c\u5c0f\u6539\u52a8\u3002\u5f53\u5c0f\u7403\u7684 PassThrough \u5c5e\u6027\u88ab\u8bbe\u7f6e\u4e3atrue\u65f6\uff0c\u6211\u4eec\u4e0d\u5bf9\u975e\u5b9e\u5fc3\u7816\u5757\u505a\u78b0\u649e\u5904\u7406\u64cd\u4f5c\u3002 Direction dir = std::get<1>(collision); glm::vec2 diff_vector = std::get<2>(collision); if (!(Ball->PassThrough && !box.IsSolid)) { if (dir == LEFT || dir == RIGHT) // \u6c34\u5e73\u78b0\u649e { [...] } else { [...] } } \u5176\u4ed6\u6548\u679c\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u66f4\u6539\u6e38\u620f\u7684\u72b6\u6001\u6765\u5b9e\u73b0\uff0c\u5982\u5c0f\u7403\u7684\u901f\u5ea6\u3001\u6321\u677f\u7684\u5c3a\u5bf8\u3001 PostProcessor \u5bf9\u8c61\u7684\u6548\u679c\u3002 \u66f4\u65b0\u9053\u5177 \u73b0\u5728\u5269\u4e0b\u8981\u505a\u7684\u5c31\u662f\u4fdd\u8bc1\u9053\u5177\u751f\u6210\u540e\u53ef\u4ee5\u79fb\u52a8\uff0c\u5e76\u4e14\u5728\u5b83\u4eec\u7684\u6301\u7eed\u65f6\u95f4\u7528\u5c3d\u540e\u5931\u6548\uff0c\u5426\u5219\u9053\u5177\u5c06\u6c38\u8fdc\u4fdd\u6301\u6fc0\u6d3b\u72b6\u6001\u3002 \u5728\u6e38\u620f\u7684 UpdatePowerUps \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u6839\u636e\u9053\u5177\u7684\u901f\u5ea6\u79fb\u52a8\u5b83\uff0c\u5e76\u51cf\u5c11\u5df2\u6fc0\u6d3b\u9053\u5177\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u6bcf\u5f53\u65f6\u95f4\u51cf\u5c11\u81f3\u5c0f\u4e8e0\u65f6\uff0c\u6211\u4eec\u4ee4\u5176\u5931\u6548\uff0c\u5e76\u6062\u590d\u76f8\u5173\u53d8\u91cf\u7684\u72b6\u6001\u3002 void Game::UpdatePowerUps(GLfloat dt) { for (PowerUp &powerUp : this->PowerUps) { powerUp.Position += powerUp.Velocity * dt; if (powerUp.Activated) { powerUp.Duration -= dt; if (powerUp.Duration <= 0.0f) { // \u4e4b\u540e\u4f1a\u5c06\u8fd9\u4e2a\u9053\u5177\u79fb\u9664 powerUp.Activated = GL_FALSE; // \u505c\u7528\u6548\u679c if (powerUp.Type == \"sticky\") { if (!isOtherPowerUpActive(this->PowerUps, \"sticky\")) { // \u4ec5\u5f53\u6ca1\u6709\u5176\u4ed6sticky\u6548\u679c\u5904\u4e8e\u6fc0\u6d3b\u72b6\u6001\u65f6\u91cd\u7f6e\uff0c\u4ee5\u4e0b\u540c\u7406 Ball->Sticky = GL_FALSE; Player->Color = glm::vec3(1.0f); } } else if (powerUp.Type == \"pass-through\") { if (!isOtherPowerUpActive(this->PowerUps, \"pass-through\")) { Ball->PassThrough = GL_FALSE; Ball->Color = glm::vec3(1.0f); } } else if (powerUp.Type == \"confuse\") { if (!isOtherPowerUpActive(this->PowerUps, \"confuse\")) { Effects->Confuse = GL_FALSE; } } else if (powerUp.Type == \"chaos\") { if (!isOtherPowerUpActive(this->PowerUps, \"chaos\")) { Effects->Chaos = GL_FALSE; } } } } } this->PowerUps.erase(std::remove_if(this->PowerUps.begin(), this->PowerUps.end(), [](const PowerUp &powerUp) { return powerUp.Destroyed && !powerUp.Activated; } ), this->PowerUps.end()); } \u4f60\u53ef\u4ee5\u770b\u5230\u5bf9\u4e8e\u6bcf\u4e2a\u6548\u679c\uff0c\u6211\u4eec\u901a\u8fc7\u5c06\u76f8\u5173\u5143\u7d20\u91cd\u7f6e\u6765\u505c\u7528\u5b83\u3002\u6211\u4eec\u8fd8\u5c06 PowerUp \u7684 Activated \u5c5e\u6027\u8bbe\u4e3afalse\uff0c\u5728 UpdatePowerUps \u7ed3\u675f\u65f6\uff0c\u6211\u4eec\u901a\u8fc7\u5faa\u73afPowerUps\u5bb9\u5668\uff0c\u82e5\u4e00\u4e2a\u9053\u5177\u88ab\u9500\u6bc1\u5207\u88ab\u505c\u7528\uff0c\u5219\u79fb\u9664\u5b83\u3002\u6211\u4eec\u5728\u7b97\u6cd5\u5f00\u5934\u4f7f\u7528 remove_if \u51fd\u6570\uff0c\u901a\u8fc7\u7ed9\u5b9a\u7684lamda\u8868\u8fbe\u5f0f\u6d88\u9664\u8fd9\u4e9b\u5bf9\u8c61\u3002 Important remove_if \u51fd\u6570\u5c06lamda\u8868\u8fbe\u5f0f\u4e3atrue\u7684\u5143\u7d20\u79fb\u52a8\u81f3\u5bb9\u5668\u7684\u672b\u5c3e\u5e76\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\u6307\u5411\u5e94\u88ab\u79fb\u9664\u7684\u5143\u7d20\u8303\u56f4\u7684\u5f00\u59cb\u90e8\u5206\u3002\u5bb9\u5668\u7684 erase \u51fd\u6570\u63a5\u7740\u64e6\u9664\u8fd9\u4e2a\u8fed\u4ee3\u5668\u6307\u5411\u7684\u5143\u7d20\u4e0e\u5bb9\u5668\u672b\u5c3e\u5143\u7d20\u4e4b\u95f4\u7684\u6240\u6709\u5143\u7d20\u3002 \u53ef\u80fd\u4f1a\u53d1\u751f\u8fd9\u6837\u7684\u60c5\u51b5\uff1a\u5f53\u4e00\u4e2a\u9053\u5177\u5728\u6fc0\u6d3b\u72b6\u6001\u65f6\uff0c\u53e6\u4e00\u4e2a\u9053\u5177\u4e0e\u6321\u677f\u53d1\u751f\u4e86\u63a5\u89e6\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u6709\u8d85\u8fc71\u4e2a\u5728\u5f53\u524d PowerUps \u5bb9\u5668\u4e2d\u5904\u4e8e\u6fc0\u6d3b\u72b6\u6001\u7684\u9053\u5177\u3002\u7136\u540e\uff0c\u5f53\u8fd9\u4e9b\u9053\u5177\u4e2d\u7684\u4e00\u4e2a\u88ab\u505c\u7528\u65f6\uff0c\u6211\u4eec\u4e0d\u5e94\u4f7f\u5176\u6548\u679c\u5931\u6548\u56e0\u4e3a\u53e6\u4e00\u4e2a\u76f8\u540c\u7c7b\u578b\u7684\u9053\u5177\u4ecd\u5904\u4e8e\u6fc0\u6d3b\u72b6\u6001\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6211\u4eec\u4f7f\u7528 isOtherPowerUpActive \u68c0\u67e5\u662f\u5426\u6709\u540c\u7c7b\u9053\u5177\u5904\u4e8e\u6fc0\u6d3b\u72b6\u6001\u3002\u53ea\u6709\u5f53\u5b83\u8fd4\u56defalse\u65f6\uff0c\u6211\u4eec\u624d\u505c\u7528\u8fd9\u4e2a\u9053\u5177\u7684\u6548\u679c\u3002\u8fd9\u6837\uff0c\u7ed9\u5b9a\u7c7b\u578b\u7684\u9053\u5177\u7684\u6301\u7eed\u65f6\u95f4\u5c31\u53ef\u4ee5\u5ef6\u957f\u81f3\u6700\u8fd1\u4e00\u6b21\u88ab\u6fc0\u6d3b\u540e\u7684\u6301\u7eed\u65f6\u95f4\u3002 GLboolean IsOtherPowerUpActive(std::vector<PowerUp> &powerUps, std::string type) { for (const PowerUp &powerUp : powerUps) { if (powerUp.Activated) if (powerUp.Type == type) return GL_TRUE; } return GL_FALSE; } \u8fd9\u4e2a\u51fd\u6570\u7b80\u5355\u5730\u68c0\u67e5\u662f\u5426\u6709\u540c\u7c7b\u9053\u5177\u5904\u4e8e\u6fc0\u6d3b\u72b6\u6001\uff0c\u5982\u679c\u6709\u5219\u8fd4\u56de GL_TRUE \u3002 \u6700\u540e\u5269\u4e0b\u7684\u4e00\u4ef6\u4e8b\u4fbf\u662f\u6e32\u67d3\u9053\u5177\uff1a void Game::Render() { if (this->State == GAME_ACTIVE) { [...] for (PowerUp &powerUp : this->PowerUps) if (!powerUp.Destroyed) powerUp.Draw(*Renderer); [...] } } \u7ed3\u5408\u6240\u6709\u7684\u8fd9\u4e9b\u529f\u80fd\uff0c\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u4f5c\u7684\u9053\u5177\u7cfb\u7edf\uff0c\u5b83\u4e0d\u4ec5\u4f7f\u6e38\u620f\u66f4\u6709\u8da3\uff0c\u8fd8\u4f7f\u6e38\u620f\u66f4\u5177\u6709\u6311\u6218\u6027\u3002\u5b83\u770b\u4e0a\u53bb\u4f1a\u50cf\u8fd9\u6837\uff1a \u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u627e\u5230\u6240\u6709\u66f4\u65b0\u540e\u7684\u4ee3\u7801\uff08\u5f53\u5173\u5361\u91cd\u7f6e\u65f6\u6211\u4eec\u540c\u65f6\u91cd\u7f6e\u6240\u6709\u9053\u5177\u6548\u679c\uff09\uff1a Game : \u5934\u6587\u4ef6 \uff0c \u4ee3\u7801","title":"\u9053\u5177"},{"location":"06%20In%20Practice/2D-Game/08%20Powerups/#_1","text":"\u539f\u6587 Powerups \u4f5c\u8005 JoeydeVries \u7ffb\u8bd1 \u5305\u7eb8 \u6821\u5bf9 \u6682\u65e0 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 Breakout\u5df2\u7ecf\u63a5\u8fd1\u5b8c\u6210\u4e86\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u81f3\u5c11\u518d\u589e\u52a0\u4e00\u79cd\u6e38\u620f\u673a\u5236\u8ba9\u5b83\u53d8\u5f97\u66f4\u9177\u3002\u201c\u5145\u7535\u201d\uff08\u8bd1\u6ce8\uff1aPowerups\uff0c\u5f88\u591a\u6e38\u620f\u4e2d\u90fd\u4f1a\u7528\u8fd9\u4e2a\u5355\u8bcd\u6307\u4ee3\u53ef\u4ee5\u63d0\u5347\u80fd\u529b\u7684\u9053\u5177\uff0c\u672c\u6587\u4e4b\u540e\u4e5f\u4f1a\u7528\u9053\u5177\u4e00\u8bcd\u4f5c\u4e3a\u5176\u7ffb\u8bd1\uff09\u600e\u4e48\u6837\uff1f \u8fd9\u4e2a\u60f3\u6cd5\u7684\u542b\u4e49\u662f\uff0c\u65e0\u8bba\u4e00\u4e2a\u7816\u5757\u4f55\u65f6\u88ab\u6467\u6bc1\uff0c\u5b83\u90fd\u6709\u4e00\u5b9a\u51e0\u7387\u4ea7\u751f\u4e00\u4e2a\u9053\u5177\u5757\u3002\u8fd9\u6837\u7684\u9053\u5177\u5feb\u4f1a\u7f13\u6162\u964d\u843d\uff0c\u800c\u4e14\u5f53\u5b83\u4e0e\u73a9\u5bb6\u6321\u677f\u53d1\u751f\u63a5\u89e6\u65f6\uff0c\u4f1a\u53d1\u751f\u57fa\u4e8e\u9053\u5177\u7c7b\u578b\u7684\u6709\u8da3\u6548\u679c\u3002\u4f8b\u5982\uff0c\u67d0\u4e00\u79cd\u9053\u5177\u53ef\u4ee5\u8ba9\u73a9\u5bb6\u6321\u677f\u53d8\u957f\uff0c\u53e6\u4e00\u79cd\u9053\u5177\u5219\u53ef\u4ee5\u8ba9\u5c0f\u7403\u7a7f\u8fc7\u7269\u4f53\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e9b\u53ef\u4ee5\u7ed9\u73a9\u5bb6\u9020\u6210\u8d1f\u9762\u5f71\u54cd\u7684\u8d1f\u9762\u9053\u5177\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u9053\u5177\u5efa\u6a21\u4e3a\u5177\u6709\u4e00\u4e9b\u989d\u5916\u5c5e\u6027\u7684 GameObject \uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u7ee7\u627f\u81ea GameObject \u7684 PowerUp \u7c7b\u5e76\u5728\u5176\u4e2d\u589e\u6dfb\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u6210\u5458\u5c5e\u6027\u3002 const glm::vec2 SIZE(60, 20); const glm::vec2 VELOCITY(0.0f, 150.0f); class PowerUp : public GameObject { public: // \u9053\u5177\u7c7b\u578b std::string Type; GLfloat Duration; GLboolean Activated; // \u6784\u9020\u51fd\u6570 PowerUp(std::string type, glm::vec3 color, GLfloat duration, glm::vec2 position, Texture2D texture) : GameObject(position, SIZE, texture, color, VELOCITY), Type(type), Duration(duration), Activated() { } }; PowerUp \u7c7b\u4ec5\u4ec5\u662f\u4e00\u4e2a\u6709\u4e00\u4e9b\u989d\u5916\u72b6\u6001\u7684 GameObject \uff0c \u6240\u4ee5\u6211\u4eec\u7b80\u5355\u5730\u5c06\u5b83\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u5934\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5b83\u3002 \u6bcf\u4e2a\u9053\u5177\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u5b9a\u4e49\u5b83\u7684\u7c7b\u578b\uff0c\u6301\u6709\u8868\u793a\u5b83\u6709\u6548\u65f6\u957f\u7684\u6301\u7eed\u65f6\u95f4\u4e0e\u8868\u793a\u5f53\u524d\u662f\u5426\u88ab\u6fc0\u6d3b\u7684\u5c5e\u6027\u3002\u5728Breakout\u4e2d\uff0c\u6211\u4eec\u5c06\u6dfb\u52a04\u79cd\u589e\u76ca\u9053\u5177\u4e0e2\u79cd\u8d1f\u9762\u9053\u5177\uff1a Speed : \u589e\u52a0\u5c0f\u740320%\u7684\u901f\u5ea6 Sticky : \u5f53\u5c0f\u7403\u4e0e\u73a9\u5bb6\u6321\u677f\u63a5\u89e6\u65f6\uff0c\u5c0f\u7403\u4f1a\u4fdd\u6301\u7c98\u5728\u6321\u677f\u4e0a\u7684\u72b6\u6001\u76f4\u5230\u518d\u6b21\u6309\u4e0b\u7a7a\u683c\u952e\uff0c\u8fd9\u53ef\u4ee5\u8ba9\u73a9\u5bb6\u5728\u91ca\u653e\u5c0f\u7403\u524d\u627e\u5230\u66f4\u5408\u9002\u7684\u4f4d\u7f6e Pass-Through : \u975e\u5b9e\u5fc3\u7816\u5757\u7684\u78b0\u649e\u5904\u7406\u88ab\u7981\u7528\uff0c\u4f7f\u5c0f\u7403\u53ef\u4ee5\u7a7f\u8fc7\u5e76\u6467\u6bc1\u591a\u4e2a\u7816\u5757 Pad-Size-Increase : \u589e\u52a0\u73a9\u5bb6\u6321\u677f50\u50cf\u7d20\u7684\u5bbd\u5ea6 Confuse : \u77ed\u65f6\u95f4\u5185\u6fc0\u6d3bconfuse\u540e\u671f\u7279\u6548\uff0c\u8ff7\u60d1\u73a9\u5bb6 Chaos : \u77ed\u65f6\u95f4\u5185\u6fc0\u6d3bchaos\u540e\u671f\u7279\u6548\uff0c\u4f7f\u73a9\u5bb6\u8ff7\u5931\u65b9\u5411 \u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u627e\u5230\u9053\u5177\u7684\u9ad8\u8d28\u91cf\u7eb9\u7406\uff1a Texture \uff1a Speed , Sticky , Pass-Through , Pad-Size-Increase , Confuse , Chaos . \u4e0e\u5173\u5361\u4e2d\u7684\u7816\u5757\u7eb9\u7406\u7c7b\u4f3c\uff0c\u6bcf\u4e2a\u9053\u5177\u7eb9\u7406\u90fd\u662f\u5b8c\u5168\u7070\u5ea6\u7684\uff0c\u8fd9\u4f7f\u5f97\u6211\u4eec\u5728\u5c06\u5176\u4e0e\u989c\u8272\u5411\u91cf\u76f8\u4e58\u65f6\u53ef\u4ee5\u4fdd\u6301\u8272\u5f69\u7684\u5e73\u8861\u3002 \u56e0\u4e3a\u6211\u4eec\u9700\u8981\u8ddf\u8e2a\u6e38\u620f\u4e2d\u88ab\u6fc0\u6d3b\u7684\u9053\u5177\u7684\u7c7b\u578b\u3001\u6301\u7eed\u65f6\u95f4\u3001\u76f8\u5173\u6548\u679c\u7b49\u72b6\u6001\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5b83\u4eec\u5b58\u50a8\u5728\u4e00\u4e2a\u5bb9\u5668\u5185\uff1a class Game { public: [...] std::vector<PowerUp> PowerUps; [...] void SpawnPowerUps(GameObject &block); void UpdatePowerUps(GLfloat dt); }; \u6211\u4eec\u8fd8\u5b9a\u4e49\u4e86\u4e24\u4e2a\u7ba1\u7406\u9053\u5177\u7684\u51fd\u6570\uff0c SpawnPowerUps \u5728\u7ed9\u5b9a\u7684\u7816\u5757\u4f4d\u7f6e\u751f\u6210\u4e00\u4e2a\u9053\u5177\uff0c UpdatePowerUps \u7ba1\u7406\u6240\u6709\u5f53\u524d\u88ab\u6fc0\u6d3b\u7684\u9053\u5177\u3002","title":"\u9053\u5177"},{"location":"06%20In%20Practice/2D-Game/08%20Powerups/#spawnpowerups","text":"\u6bcf\u6b21\u7816\u5757\u88ab\u6467\u6bc1\u65f6\u6211\u4eec\u5e0c\u671b\u4ee5\u4e00\u5b9a\u51e0\u7387\u751f\u6210\u4e00\u4e2a\u9053\u5177\uff0c\u8fd9\u4e2a\u529f\u80fd\u53ef\u4ee5\u5728 Game \u7684 SpawnPowerUps \u51fd\u6570\u4e2d\u627e\u5230\uff1a GLboolean ShouldSpawn(GLuint chance) { GLuint random = rand() % chance; return random == 0; } void Game::SpawnPowerUps(GameObject &block) { if (ShouldSpawn(75)) // 1/75\u7684\u51e0\u7387 this->PowerUps.push_back( PowerUp(\"speed\", glm::vec3(0.5f, 0.5f, 1.0f), 0.0f, block.Position, tex_speed )); if (ShouldSpawn(75)) this->PowerUps.push_back( PowerUp(\"sticky\", glm::vec3(1.0f, 0.5f, 1.0f), 20.0f, block.Position, tex_sticky ); if (ShouldSpawn(75)) this->PowerUps.push_back( PowerUp(\"pass-through\", glm::vec3(0.5f, 1.0f, 0.5f), 10.0f, block.Position, tex_pass )); if (ShouldSpawn(75)) this->PowerUps.push_back( PowerUp(\"pad-size-increase\", glm::vec3(1.0f, 0.6f, 0.4), 0.0f, block.Position, tex_size )); if (ShouldSpawn(15)) // \u8d1f\u9762\u9053\u5177\u88ab\u66f4\u9891\u7e41\u5730\u751f\u6210 this->PowerUps.push_back( PowerUp(\"confuse\", glm::vec3(1.0f, 0.3f, 0.3f), 15.0f, block.Position, tex_confuse )); if (ShouldSpawn(15)) this->PowerUps.push_back( PowerUp(\"chaos\", glm::vec3(0.9f, 0.25f, 0.25f), 15.0f, block.Position, tex_chaos )); } \u8fd9\u6837\u7684 SpawnPowerUps \u51fd\u6570\u4ee5\u4e00\u5b9a\u51e0\u7387\uff081/75\u666e\u901a\u9053\u5177\uff0c1/15\u8d1f\u9762\u9053\u5177\uff09\u751f\u6210\u4e00\u4e2a\u65b0\u7684 PowerUp \u5bf9\u8c61\uff0c\u5e76\u8bbe\u7f6e\u5176\u5c5e\u6027\u3002\u6bcf\u79cd\u9053\u5177\u6709\u7279\u6b8a\u7684\u989c\u8272\u4f7f\u5b83\u4eec\u66f4\u5177\u6709\u8fa8\u8bc6\u5ea6\uff0c\u540c\u65f6\u6839\u636e\u7c7b\u578b\u51b3\u5b9a\u5176\u6301\u7eed\u65f6\u95f4\u7684\u79d2\u6570\uff0c\u82e5\u503c\u4e3a0.0f\u5219\u8868\u793a\u5b83\u6301\u7eed\u65e0\u9650\u957f\u7684\u65f6\u95f4\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6bcf\u4e2a\u9053\u5177\u521d\u59cb\u5316\u65f6\u4f20\u5165\u88ab\u6467\u6bc1\u7816\u5757\u7684\u4f4d\u7f6e\u4e0e\u4e0a\u4e00\u5c0f\u8282\u7ed9\u51fa\u7684\u5bf9\u5e94\u7eb9\u7406\u3002","title":"SpawnPowerUps"},{"location":"06%20In%20Practice/2D-Game/08%20Powerups/#_2","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u66f4\u65b0\u6e38\u620f\u7684 DoCollisions \u51fd\u6570\u4f7f\u5b83\u4e0d\u53ea\u68c0\u67e5\u5c0f\u7403\u4e0e\u7816\u5757\u548c\u6321\u677f\u7684\u78b0\u649e\uff0c\u8fd8\u68c0\u67e5\u6321\u677f\u4e0e\u6240\u6709\u672a\u88ab\u9500\u6bc1\u7684\u9053\u5177\u7684\u78b0\u649e\u3002\u6ce8\u610f\u6211\u4eec\u5728\u7816\u5757\u88ab\u6467\u6bc1\u7684\u540c\u65f6\u8c03\u7528 SpawnPowerUps \u51fd\u6570\u3002 void Game::DoCollisions() { for (GameObject &box : this->Levels[this->Level].Bricks) { if (!box.Destroyed) { Collision collision = CheckCollision(*Ball, box); if (std::get<0>(collision)) { if (!box.IsSolid) { box.Destroyed = GL_TRUE; this->SpawnPowerUps(box); } [...] } } } [...] for (PowerUp &powerUp : this->PowerUps) { if (!powerUp.Destroyed) { if (powerUp.Position.y >= this->Height) powerUp.Destroyed = GL_TRUE; if (CheckCollision(*Player, powerUp)) { // \u9053\u5177\u4e0e\u6321\u677f\u63a5\u89e6\uff0c\u6fc0\u6d3b\u5b83\uff01 ActivatePowerUp(powerUp); powerUp.Destroyed = GL_TRUE; powerUp.Activated = GL_TRUE; } } } } \u5bf9\u6240\u6709\u672a\u88ab\u9500\u6bc1\u7684\u9053\u5177\uff0c\u6211\u4eec\u68c0\u67e5\u5b83\u662f\u5426\u63a5\u89e6\u5230\u4e86\u5c4f\u5e55\u5e95\u90e8\u6216\u73a9\u5bb6\u6321\u677f\uff0c\u65e0\u8bba\u54ea\u79cd\u60c5\u51b5\u6211\u4eec\u90fd\u9500\u6bc1\u5b83\uff0c\u4f46\u5f53\u9053\u5177\u4e0e\u73a9\u5bb6\u6321\u677f\u63a5\u89e6\u65f6\uff0c\u6fc0\u6d3b\u8fd9\u4e2a\u9053\u5177\u3002 \u6fc0\u6d3b\u9053\u5177\u7684\u64cd\u4f5c\u53ef\u4ee5\u901a\u8fc7\u5c06\u5176 Activated \u5c5e\u6027\u8bbe\u4e3atrue\u6765\u5b8c\u6210\uff0c\u5b9e\u73b0\u5176\u6548\u679c\u5219\u9700\u8981\u5c06\u5b83\u4f20\u7ed9 ActivatePowerUp \u51fd\u6570\uff1a void ActivatePowerUp(PowerUp &powerUp) { // \u6839\u636e\u9053\u5177\u7c7b\u578b\u53d1\u52a8\u9053\u5177 if (powerUp.Type == \"speed\") { Ball->Velocity *= 1.2; } else if (powerUp.Type == \"sticky\") { Ball->Sticky = GL_TRUE; Player->Color = glm::vec3(1.0f, 0.5f, 1.0f); } else if (powerUp.Type == \"pass-through\") { Ball->PassThrough = GL_TRUE; Ball->Color = glm::vec3(1.0f, 0.5f, 0.5f); } else if (powerUp.Type == \"pad-size-increase\") { Player->Size.x += 50; } else if (powerUp.Type == \"confuse\") { if (!Effects->Chaos) Effects->Confuse = GL_TRUE; // \u53ea\u5728chaos\u672a\u6fc0\u6d3b\u65f6\u751f\u6548\uff0cchaos\u540c\u7406 } else if (powerUp.Type == \"chaos\") { if (!Effects->Confuse) Effects->Chaos = GL_TRUE; } } ActivatePowerUp \u7684\u76ee\u7684\u6b63\u5982\u5176\u540d\u79f0\uff0c\u5b83\u6309\u672c\u7ae0\u6559\u7a0b\u4e4b\u524d\u6240\u9884\u8bbe\u7684\u90a3\u6837\u6fc0\u6d3b\u4e86\u4e00\u4e2a\u9053\u5177\u7684\u6548\u679c\u3002\u6211\u4eec\u68c0\u67e5\u9053\u5177\u7684\u7c7b\u578b\u5e76\u76f8\u5e94\u5730\u6539\u53d8\u6e38\u620f\u72b6\u6001\u3002\u5bf9\u4e8e Sticky \u548c Pass-through \u6548\u679c\uff0c\u6211\u4eec\u4e5f\u76f8\u5e94\u5730\u6539\u53d8\u4e86\u6321\u677f\u548c\u5c0f\u7403\u7684\u989c\u8272\u6765\u7ed9\u73a9\u5bb6\u4e00\u4e9b\u5f53\u524d\u88ab\u6fc0\u6d3b\u4e86\u54ea\u79cd\u6548\u679c\u7684\u53cd\u9988\u3002 \u56e0\u4e3a Sticky \u548c Pass-through \u6548\u679c\u7a0d\u5fae\u6539\u53d8\u4e86\u4e00\u4e9b\u539f\u6709\u7684\u6e38\u620f\u903b\u8f91\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u8fd9\u4e9b\u6548\u679c\u4f5c\u4e3a\u5c5e\u6027\u5b58\u50a8\u5728\u5c0f\u7403\u5bf9\u8c61\u4e2d\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5c0f\u7403\u5f53\u524d\u6fc0\u6d3b\u4e86\u4ec0\u4e48\u6548\u679c\u800c\u6539\u53d8\u6e38\u620f\u903b\u8f91\u3002\u6211\u4eec\u53ea\u5728 BallObject \u7684\u5934\u6587\u4ef6\u4e2d\u589e\u52a0\u4e86\u4e24\u4e2a\u5c5e\u6027\uff0c\u4f46\u4e3a\u4e86\u5b8c\u6574\u6027\u4e0b\u9762\u7ed9\u51fa\u4e86\u66f4\u65b0\u540e\u7684\u4ee3\u7801\uff1a GameObject : \u5934\u6587\u4ef6 \uff0c \u4ee3\u7801 \u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6539\u52a8 DoCollisions \u51fd\u6570\u4e2d\u5c0f\u7403\u4e0e\u6321\u677f\u78b0\u649e\u7684\u4ee3\u7801\u4fbf\u6377\u5730\u5b9e\u73b0 Sticky \u6548\u679c\u3002 if (!Ball->Stuck && std::get<0>(result)) { [...] Ball->Stuck = Ball->Sticky; } \u5728\u8fd9\u91cc\u6211\u4eec\u5c06\u5c0f\u7403\u7684Stuck\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u5b83\u81ea\u5df1\u7684Sticky\u5c5e\u6027\uff0c\u82e5 Stikcy \u6548\u679c\u88ab\u6fc0\u6d3b\uff0c\u90a3\u4e48\u5c0f\u7403\u5219\u4f1a\u5728\u4e0e\u6321\u677f\u63a5\u89e6\u65f6\u7c98\u5728\u4e0a\u9762\uff0c\u73a9\u5bb6\u4e0d\u5f97\u4e0d\u518d\u6b21\u6309\u4e0b\u7a7a\u683c\u952e\u624d\u80fd\u91ca\u653e\u5b83\u3002 \u5728\u540c\u6837\u7684 DoCollisions \u51fd\u6570\u4e2d\u8fd8\u6709\u4e2a\u4e3a\u4e86\u5b9e\u73b0 Pass-through \u6548\u679c\u7684\u7c7b\u4f3c\u5c0f\u6539\u52a8\u3002\u5f53\u5c0f\u7403\u7684 PassThrough \u5c5e\u6027\u88ab\u8bbe\u7f6e\u4e3atrue\u65f6\uff0c\u6211\u4eec\u4e0d\u5bf9\u975e\u5b9e\u5fc3\u7816\u5757\u505a\u78b0\u649e\u5904\u7406\u64cd\u4f5c\u3002 Direction dir = std::get<1>(collision); glm::vec2 diff_vector = std::get<2>(collision); if (!(Ball->PassThrough && !box.IsSolid)) { if (dir == LEFT || dir == RIGHT) // \u6c34\u5e73\u78b0\u649e { [...] } else { [...] } } \u5176\u4ed6\u6548\u679c\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u66f4\u6539\u6e38\u620f\u7684\u72b6\u6001\u6765\u5b9e\u73b0\uff0c\u5982\u5c0f\u7403\u7684\u901f\u5ea6\u3001\u6321\u677f\u7684\u5c3a\u5bf8\u3001 PostProcessor \u5bf9\u8c61\u7684\u6548\u679c\u3002","title":"\u6fc0\u6d3b\u9053\u5177"},{"location":"06%20In%20Practice/2D-Game/08%20Powerups/#_3","text":"\u73b0\u5728\u5269\u4e0b\u8981\u505a\u7684\u5c31\u662f\u4fdd\u8bc1\u9053\u5177\u751f\u6210\u540e\u53ef\u4ee5\u79fb\u52a8\uff0c\u5e76\u4e14\u5728\u5b83\u4eec\u7684\u6301\u7eed\u65f6\u95f4\u7528\u5c3d\u540e\u5931\u6548\uff0c\u5426\u5219\u9053\u5177\u5c06\u6c38\u8fdc\u4fdd\u6301\u6fc0\u6d3b\u72b6\u6001\u3002 \u5728\u6e38\u620f\u7684 UpdatePowerUps \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u6839\u636e\u9053\u5177\u7684\u901f\u5ea6\u79fb\u52a8\u5b83\uff0c\u5e76\u51cf\u5c11\u5df2\u6fc0\u6d3b\u9053\u5177\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u6bcf\u5f53\u65f6\u95f4\u51cf\u5c11\u81f3\u5c0f\u4e8e0\u65f6\uff0c\u6211\u4eec\u4ee4\u5176\u5931\u6548\uff0c\u5e76\u6062\u590d\u76f8\u5173\u53d8\u91cf\u7684\u72b6\u6001\u3002 void Game::UpdatePowerUps(GLfloat dt) { for (PowerUp &powerUp : this->PowerUps) { powerUp.Position += powerUp.Velocity * dt; if (powerUp.Activated) { powerUp.Duration -= dt; if (powerUp.Duration <= 0.0f) { // \u4e4b\u540e\u4f1a\u5c06\u8fd9\u4e2a\u9053\u5177\u79fb\u9664 powerUp.Activated = GL_FALSE; // \u505c\u7528\u6548\u679c if (powerUp.Type == \"sticky\") { if (!isOtherPowerUpActive(this->PowerUps, \"sticky\")) { // \u4ec5\u5f53\u6ca1\u6709\u5176\u4ed6sticky\u6548\u679c\u5904\u4e8e\u6fc0\u6d3b\u72b6\u6001\u65f6\u91cd\u7f6e\uff0c\u4ee5\u4e0b\u540c\u7406 Ball->Sticky = GL_FALSE; Player->Color = glm::vec3(1.0f); } } else if (powerUp.Type == \"pass-through\") { if (!isOtherPowerUpActive(this->PowerUps, \"pass-through\")) { Ball->PassThrough = GL_FALSE; Ball->Color = glm::vec3(1.0f); } } else if (powerUp.Type == \"confuse\") { if (!isOtherPowerUpActive(this->PowerUps, \"confuse\")) { Effects->Confuse = GL_FALSE; } } else if (powerUp.Type == \"chaos\") { if (!isOtherPowerUpActive(this->PowerUps, \"chaos\")) { Effects->Chaos = GL_FALSE; } } } } } this->PowerUps.erase(std::remove_if(this->PowerUps.begin(), this->PowerUps.end(), [](const PowerUp &powerUp) { return powerUp.Destroyed && !powerUp.Activated; } ), this->PowerUps.end()); } \u4f60\u53ef\u4ee5\u770b\u5230\u5bf9\u4e8e\u6bcf\u4e2a\u6548\u679c\uff0c\u6211\u4eec\u901a\u8fc7\u5c06\u76f8\u5173\u5143\u7d20\u91cd\u7f6e\u6765\u505c\u7528\u5b83\u3002\u6211\u4eec\u8fd8\u5c06 PowerUp \u7684 Activated \u5c5e\u6027\u8bbe\u4e3afalse\uff0c\u5728 UpdatePowerUps \u7ed3\u675f\u65f6\uff0c\u6211\u4eec\u901a\u8fc7\u5faa\u73afPowerUps\u5bb9\u5668\uff0c\u82e5\u4e00\u4e2a\u9053\u5177\u88ab\u9500\u6bc1\u5207\u88ab\u505c\u7528\uff0c\u5219\u79fb\u9664\u5b83\u3002\u6211\u4eec\u5728\u7b97\u6cd5\u5f00\u5934\u4f7f\u7528 remove_if \u51fd\u6570\uff0c\u901a\u8fc7\u7ed9\u5b9a\u7684lamda\u8868\u8fbe\u5f0f\u6d88\u9664\u8fd9\u4e9b\u5bf9\u8c61\u3002 Important remove_if \u51fd\u6570\u5c06lamda\u8868\u8fbe\u5f0f\u4e3atrue\u7684\u5143\u7d20\u79fb\u52a8\u81f3\u5bb9\u5668\u7684\u672b\u5c3e\u5e76\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\u6307\u5411\u5e94\u88ab\u79fb\u9664\u7684\u5143\u7d20\u8303\u56f4\u7684\u5f00\u59cb\u90e8\u5206\u3002\u5bb9\u5668\u7684 erase \u51fd\u6570\u63a5\u7740\u64e6\u9664\u8fd9\u4e2a\u8fed\u4ee3\u5668\u6307\u5411\u7684\u5143\u7d20\u4e0e\u5bb9\u5668\u672b\u5c3e\u5143\u7d20\u4e4b\u95f4\u7684\u6240\u6709\u5143\u7d20\u3002 \u53ef\u80fd\u4f1a\u53d1\u751f\u8fd9\u6837\u7684\u60c5\u51b5\uff1a\u5f53\u4e00\u4e2a\u9053\u5177\u5728\u6fc0\u6d3b\u72b6\u6001\u65f6\uff0c\u53e6\u4e00\u4e2a\u9053\u5177\u4e0e\u6321\u677f\u53d1\u751f\u4e86\u63a5\u89e6\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u6709\u8d85\u8fc71\u4e2a\u5728\u5f53\u524d PowerUps \u5bb9\u5668\u4e2d\u5904\u4e8e\u6fc0\u6d3b\u72b6\u6001\u7684\u9053\u5177\u3002\u7136\u540e\uff0c\u5f53\u8fd9\u4e9b\u9053\u5177\u4e2d\u7684\u4e00\u4e2a\u88ab\u505c\u7528\u65f6\uff0c\u6211\u4eec\u4e0d\u5e94\u4f7f\u5176\u6548\u679c\u5931\u6548\u56e0\u4e3a\u53e6\u4e00\u4e2a\u76f8\u540c\u7c7b\u578b\u7684\u9053\u5177\u4ecd\u5904\u4e8e\u6fc0\u6d3b\u72b6\u6001\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6211\u4eec\u4f7f\u7528 isOtherPowerUpActive \u68c0\u67e5\u662f\u5426\u6709\u540c\u7c7b\u9053\u5177\u5904\u4e8e\u6fc0\u6d3b\u72b6\u6001\u3002\u53ea\u6709\u5f53\u5b83\u8fd4\u56defalse\u65f6\uff0c\u6211\u4eec\u624d\u505c\u7528\u8fd9\u4e2a\u9053\u5177\u7684\u6548\u679c\u3002\u8fd9\u6837\uff0c\u7ed9\u5b9a\u7c7b\u578b\u7684\u9053\u5177\u7684\u6301\u7eed\u65f6\u95f4\u5c31\u53ef\u4ee5\u5ef6\u957f\u81f3\u6700\u8fd1\u4e00\u6b21\u88ab\u6fc0\u6d3b\u540e\u7684\u6301\u7eed\u65f6\u95f4\u3002 GLboolean IsOtherPowerUpActive(std::vector<PowerUp> &powerUps, std::string type) { for (const PowerUp &powerUp : powerUps) { if (powerUp.Activated) if (powerUp.Type == type) return GL_TRUE; } return GL_FALSE; } \u8fd9\u4e2a\u51fd\u6570\u7b80\u5355\u5730\u68c0\u67e5\u662f\u5426\u6709\u540c\u7c7b\u9053\u5177\u5904\u4e8e\u6fc0\u6d3b\u72b6\u6001\uff0c\u5982\u679c\u6709\u5219\u8fd4\u56de GL_TRUE \u3002 \u6700\u540e\u5269\u4e0b\u7684\u4e00\u4ef6\u4e8b\u4fbf\u662f\u6e32\u67d3\u9053\u5177\uff1a void Game::Render() { if (this->State == GAME_ACTIVE) { [...] for (PowerUp &powerUp : this->PowerUps) if (!powerUp.Destroyed) powerUp.Draw(*Renderer); [...] } } \u7ed3\u5408\u6240\u6709\u7684\u8fd9\u4e9b\u529f\u80fd\uff0c\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u4f5c\u7684\u9053\u5177\u7cfb\u7edf\uff0c\u5b83\u4e0d\u4ec5\u4f7f\u6e38\u620f\u66f4\u6709\u8da3\uff0c\u8fd8\u4f7f\u6e38\u620f\u66f4\u5177\u6709\u6311\u6218\u6027\u3002\u5b83\u770b\u4e0a\u53bb\u4f1a\u50cf\u8fd9\u6837\uff1a \u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u627e\u5230\u6240\u6709\u66f4\u65b0\u540e\u7684\u4ee3\u7801\uff08\u5f53\u5173\u5361\u91cd\u7f6e\u65f6\u6211\u4eec\u540c\u65f6\u91cd\u7f6e\u6240\u6709\u9053\u5177\u6548\u679c\uff09\uff1a Game : \u5934\u6587\u4ef6 \uff0c \u4ee3\u7801","title":"\u66f4\u65b0\u9053\u5177"},{"location":"06%20In%20Practice/2D-Game/09%20Audio/","text":"\u97f3\u6548 \u539f\u6587 Audio \u4f5c\u8005 JoeydeVries \u7ffb\u8bd1 \u5305\u7eb8 \u6821\u5bf9 \u6682\u65e0 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u65e0\u8bba\u6211\u4eec\u5c06\u6e38\u620f\u97f3\u91cf\u8c03\u5230\u591a\u5927\uff0c\u6211\u4eec\u90fd\u4e0d\u4f1a\u542c\u5230\u6765\u81ea\u6e38\u620f\u7684\u4efb\u4f55\u97f3\u6548\u3002\u6211\u4eec\u5df2\u7ecf\u5c55\u793a\u4e86\u8fd9\u4e48\u591a\u5185\u5bb9\uff0c\u4f46\u6ca1\u6709\u4efb\u4f55\u97f3\u9891\uff0c\u6e38\u620f\u4ecd\u663e\u5f97\u6709\u4e9b\u7a7a\u6d1e\u3002\u5728\u672c\u8282\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 OpenGL\u4e0d\u63d0\u4f9b\u5173\u4e8e\u97f3\u9891\u7684\u4efb\u4f55\u652f\u6301\u3002\u6211\u4eec\u4e0d\u5f97\u4e0d\u624b\u52a8\u5c06\u97f3\u9891\u52a0\u8f7d\u4e3a\u5b57\u8282\u683c\u5f0f\uff0c\u5904\u7406\u5e76\u5c06\u5176\u8f6c\u5316\u4e3a\u97f3\u9891\u6d41\uff0c\u5e76\u9002\u5f53\u5730\u7ba1\u7406\u591a\u4e2a\u97f3\u9891\u6d41\u4ee5\u4f9b\u6211\u4eec\u7684\u6e38\u620f\u4f7f\u7528\u3002\u7136\u800c\u8fd9\u6709\u4e00\u4e9b\u590d\u6742\uff0c\u5e76\u4e14\u9700\u8981\u4e00\u4e9b\u5e95\u5c42\u7684\u97f3\u9891\u5de5\u7a0b\u77e5\u8bc6\u3002 \u5982\u679c\u4f60\u4e50\u610f\uff0c\u4f60\u53ef\u4ee5\u624b\u52a8\u52a0\u8f7d\u6765\u81ea\u591a\u79cd\u6269\u5c55\u540d\u7684\u97f3\u9891\u6587\u4ef6\u7684\u97f3\u9891\u6d41\u3002\u7136\u800c\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u88ab\u79f0\u4e3airrKlang\u7684\u97f3\u9891\u7ba1\u7406\u5e93\u3002 irrKlang IrrKlang\u662f\u4e00\u4e2a\u53ef\u4ee5\u64ad\u653eWAV\uff0cMP3\uff0cOGG\u548cFLAC\u6587\u4ef6\u7684\u9ad8\u7ea7\u4e8c\u7ef4\u548c\u4e09\u7ef4\uff08Windows\uff0cMac OS X\uff0cLinux\uff09\u58f0\u97f3\u5f15\u64ce\u548c\u97f3\u9891\u5e93\u3002\u5b83\u8fd8\u6709\u4e00\u4e9b\u53ef\u4ee5\u81ea\u7531\u8c03\u6574\u7684\u97f3\u9891\u6548\u679c\uff0c\u5982\u6df7\u54cd\u3001\u5ef6\u8fdf\u548c\u5931\u771f\u3002 Important 3D\u97f3\u9891\u610f\u5473\u7740\u97f3\u9891\u6e90\u53ef\u4ee5\u6709\u4e00\u4e2a3D\u4f4d\u7f6e\uff0c\u7136\u540e\u6839\u636e\u76f8\u673a\u5230\u97f3\u9891\u6e90\u7684\u4f4d\u7f6e\u8870\u51cf\u97f3\u91cf\uff0c\u4f7f\u5176\u5728\u4e00\u4e2a3D\u4e16\u754c\u91cc\u663e\u5f97\u81ea\u7136\uff08\u60f3\u60f33D\u4e16\u754c\u4e2d\u7684\u67aa\u58f0\uff0c\u901a\u5e38\u4f60\u53ef\u4ee5\u4ece\u97f3\u6548\u4e2d\u542c\u51fa\u5b83\u6765\u81ea\u4ec0\u4e48\u65b9\u5411/\u4f4d\u7f6e\uff09\u3002 IrrKlang\u662f\u4e00\u4e2a\u6613\u4e8e\u4f7f\u7528\u7684\u97f3\u9891\u5e93\uff0c\u53ea\u9700\u51e0\u884c\u4ee3\u7801\u4fbf\u53ef\u64ad\u653e\u5927\u591a\u6570\u97f3\u9891\u6587\u4ef6\uff0c\u8fd9\u4f7f\u5b83\u6210\u4e3a\u6211\u4eecBreakout\u6e38\u620f\u7684\u5b8c\u7f8e\u9009\u62e9\u3002\u8bf7\u6ce8\u610f\uff0cirrKlang\u6709\u4e00\u4e2a\u6709\u4e00\u5b9a\u9650\u5236\u7684\u8bc1\u4e66\uff1a\u5141\u8bb8\u4f60\u5c06irrKlang\u7528\u4e8e\u975e\u5546\u4e1a\u76ee\u7684\uff0c\u4f46\u662f\u5982\u679c\u4f60\u60f3\u4f7f\u7528irrKlang\u5546\u4e1a\u7248\uff0c\u5c31\u5fc5\u987b\u652f\u4ed8\u8d2d\u4e70\u4ed6\u4eec\u7684\u4e13\u4e1a\u7248\u3002\u7531\u4e8eBreakout\u548c\u672c\u6559\u7a0b\u7cfb\u5217\u662f\u975e\u5546\u4e1a\u6027\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u81ea\u7531\u5730\u4f7f\u7528\u4ed6\u4eec\u7684\u6807\u51c6\u5e93\u3002 \u4f60\u53ef\u4ee5\u4ece\u4ed6\u4eec\u7684 \u4e0b\u8f7d\u9875\u9762 \u4e0b\u8f7dirrKlang\uff0c\u6211\u4eec\u5c06\u4f7f\u75281.5\u7248\u672c\u3002\u7531\u4e8eirrKlang\u662f\u975e\u5f00\u6e90\u7684\u4ee3\u7801\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u5f97\u4e0d\u4f7f\u7528irrKlang\u4e3a\u6211\u4eec\u63d0\u4f9b\u7684\u4efb\u4f55\u4e1c\u897f\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u4ed6\u4eec\u6709\u5927\u91cf\u7684\u9884\u7f16\u8bd1\u5e93\u6587\u4ef6\uff0c\u6240\u4ee5\u4f60\u4eec\u5927\u591a\u6570\u4eba\u5e94\u8be5\u53ef\u4ee5\u5f88\u597d\u5730\u4f7f\u7528\u5b83\u3002 \u4f60\u9700\u8981\u5f15\u5165\u4e86irrKlang\u7684\u5934\u6587\u4ef6\uff0c\u5c06\u4ed6\u4eec\u7684\u5e93\u6587\u4ef6\uff08irrKlang.lib\uff09\u6dfb\u52a0\u5230\u94fe\u63a5\u5668\u8bbe\u7f6e\u4e2d\uff0c\u5e76\u5c06\u4ed6\u4eec\u7684dll\u6587\u4ef6\u590d\u5236\u5230\u9002\u5f53\u7684\u76ee\u5f55\u4e0b\uff08\u901a\u5e38\u548c.exe\u5728\u540c\u4e00\u76ee\u5f55\u4e0b\uff09\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4f60\u60f3\u8981\u52a0\u8f7dMP3\u6587\u4ef6\uff0c\u5219\u8fd8\u9700\u8981\u5f15\u5165ikpMP3.dll\u6587\u4ef6\u3002 \u6dfb\u52a0\u97f3\u4e50 \u4e3a\u4e86\u8fd9\u4e2a\u6e38\u620f\u6211\u7279\u5236\u4e86\u4e00\u4e2a\u5c0f\u5c0f\u7684\u97f3\u8f68\uff0c\u8ba9\u6e38\u620f\u66f4\u5bcc\u6709\u6d3b\u529b\u3002\u5728 \u8fd9\u91cc \u4f60\u53ef\u4ee5\u627e\u5230\u6211\u4eec\u5c06\u8981\u7528\u4f5c\u6e38\u620f\u80cc\u666f\u97f3\u4e50\u7684\u97f3\u8f68\u3002\u8fd9\u4e2a\u97f3\u8f68\u4f1a\u5728\u6e38\u620f\u5f00\u59cb\u65f6\u64ad\u653e\u5e76\u4e0d\u65ad\u5faa\u73af\u76f4\u5230\u6e38\u620f\u7ed3\u675f\u3002\u4f60\u53ef\u4ee5\u968f\u610f\u7528\u81ea\u5df1\u7684\u97f3\u9891\u66ff\u6362\u5b83\uff0c\u6216\u8005\u7528\u559c\u6b22\u7684\u65b9\u5f0f\u4f7f\u7528\u5b83\u3002 \u5229\u7528irrKlang\u5e93\u5c06\u5176\u6dfb\u52a0\u5230Breakout\u6e38\u620f\u91cc\u975e\u5e38\u7b80\u5355\u3002\u6211\u4eec\u5f15\u5165\u76f8\u5e94\u7684\u5934\u6587\u4ef6\uff0c\u521b\u5efa irrKlang::ISoundEngine \uff0c\u7528 createIrrKlangDevice \u521d\u59cb\u5316\u5b83\u5e76\u4f7f\u7528\u8fd9\u4e2a\u5f15\u64ce\u52a0\u8f7d\u3001\u64ad\u653e\u97f3\u9891\uff1a #include <irrklang/irrKlang.h> using namespace irrklang; ISoundEngine *SoundEngine = createIrrKlangDevice(); void Game::Init() { [...] SoundEngine->play2D(\"audio/breakout.mp3\", GL_TRUE); } \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a SoundEngine \uff0c\u7528\u4e8e\u7ba1\u7406\u6240\u6709\u4e0e\u97f3\u9891\u76f8\u5173\u7684\u4ee3\u7801\u3002\u4e00\u65e6\u6211\u4eec\u521d\u59cb\u5316\u4e86\u5f15\u64ce\uff0c\u4fbf\u53ef\u4ee5\u8c03\u7528 play2D \u51fd\u6570\u64ad\u653e\u97f3\u9891\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u6587\u4ef6\u540d\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u662f\u5426\u5faa\u73af\u64ad\u653e\u3002 \u8fd9\u5c31\u662f\u5168\u90e8\u4e86\uff01\u73b0\u5728\u8fd0\u884c\u6e38\u620f\u4f1a\u4f7f\u4f60\u7684\u8033\u673a\u6216\u626c\u58f0\u5668\u8ff8\u53d1\u51fa\u58f0\u6ce2\u3002 \u6dfb\u52a0\u97f3\u6548 \u6211\u4eec\u8fd8\u6ca1\u6709\u7ed3\u675f\uff0c\u56e0\u4e3a\u97f3\u4e50\u672c\u8eab\u5e76\u4e0d\u80fd\u4f7f\u6e38\u620f\u5b8c\u5168\u5145\u6ee1\u6d3b\u529b\u3002\u6211\u4eec\u5e0c\u671b\u5728\u6e38\u620f\u53d1\u751f\u4e00\u4e9b\u6709\u8da3\u4e8b\u4ef6\u65f6\u64ad\u653e\u97f3\u6548\uff0c\u4f5c\u4e3a\u7ed9\u73a9\u5bb6\u7684\u989d\u5916\u53cd\u9988\uff0c\u5982\u6211\u4eec\u649e\u51fb\u7816\u5757\u3001\u83b7\u5f97\u9053\u5177\u65f6\u3002\u4e0b\u9762\u4f60\u53ef\u4ee5\u627e\u5230\u6211\u4eec\u9700\u8981\u7684\u6240\u6709\u97f3\u6548\uff08\u6765\u81eafreesound.org\uff09\uff1a bleep.mp3 : \u5c0f\u7403\u649e\u51fb\u975e\u5b9e\u5fc3\u7816\u5757\u65f6\u7684\u97f3\u6548 solid.wav \uff1a\u5c0f\u7403\u649e\u51fb\u5b9e\u5fc3\u7816\u5757\u65f6\u7684\u97f3\u6548 powerup.wav : \u83b7\u5f97\u9053\u5177\u65f6\u7684\u97f3\u6548 bleep.wav : \u5c0f\u7403\u5728\u6321\u677f\u4e0a\u53cd\u5f39\u65f6\u7684\u97f3\u6548 \u65e0\u8bba\u5728\u54ea\u91cc\u53d1\u751f\u78b0\u649e\uff0c\u6211\u4eec\u90fd\u4f1a\u64ad\u653e\u76f8\u5e94\u7684\u97f3\u6548\u3002\u6211\u4e0d\u4f1a\u8be6\u7ec6\u9610\u8ff0\u6bcf\u4e00\u884c\u7684\u4ee3\u7801\uff0c\u5e76\u628a\u66f4\u65b0\u540e\u7684\u4ee3\u7801\u653e\u5728\u4e86 \u8fd9\u91cc \uff0c\u4f60\u5e94\u8be5\u53ef\u4ee5\u8f7b\u677e\u5730\u627e\u5230\u76f8\u5e94\u7684\u6dfb\u52a0\u97f3\u6548\u7684\u5730\u65b9\u3002 \u628a\u8fd9\u4e9b\u96c6\u6210\u5728\u4e00\u8d77\u540e\u6211\u4eec\u7684\u6e38\u620f\u663e\u5f97\u66f4\u5b8c\u6574\u4e86\uff0c\u5c31\u50cf\u8fd9\u6837\uff1a IrrKlang\u5141\u8bb8\u4e00\u4e9b\u66f4\u7cbe\u7ec6\u7684\u97f3\u9891\u7ba1\u7406\u529f\u80fd\uff0c\u5982\u5185\u5b58\u7ba1\u7406\u3001\u58f0\u97f3\u7279\u6548\u548c\u58f0\u97f3\u4e8b\u4ef6\u56de\u8c03\u3002\u770b\u770b\u4ed6\u4eec\u7684C++ \u6559\u7a0b \u5e76\u5c1d\u8bd5\u4e00\u4e9b\u529f\u80fd\u5427\u3002","title":"\u97f3\u6548"},{"location":"06%20In%20Practice/2D-Game/09%20Audio/#_1","text":"\u539f\u6587 Audio \u4f5c\u8005 JoeydeVries \u7ffb\u8bd1 \u5305\u7eb8 \u6821\u5bf9 \u6682\u65e0 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u65e0\u8bba\u6211\u4eec\u5c06\u6e38\u620f\u97f3\u91cf\u8c03\u5230\u591a\u5927\uff0c\u6211\u4eec\u90fd\u4e0d\u4f1a\u542c\u5230\u6765\u81ea\u6e38\u620f\u7684\u4efb\u4f55\u97f3\u6548\u3002\u6211\u4eec\u5df2\u7ecf\u5c55\u793a\u4e86\u8fd9\u4e48\u591a\u5185\u5bb9\uff0c\u4f46\u6ca1\u6709\u4efb\u4f55\u97f3\u9891\uff0c\u6e38\u620f\u4ecd\u663e\u5f97\u6709\u4e9b\u7a7a\u6d1e\u3002\u5728\u672c\u8282\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 OpenGL\u4e0d\u63d0\u4f9b\u5173\u4e8e\u97f3\u9891\u7684\u4efb\u4f55\u652f\u6301\u3002\u6211\u4eec\u4e0d\u5f97\u4e0d\u624b\u52a8\u5c06\u97f3\u9891\u52a0\u8f7d\u4e3a\u5b57\u8282\u683c\u5f0f\uff0c\u5904\u7406\u5e76\u5c06\u5176\u8f6c\u5316\u4e3a\u97f3\u9891\u6d41\uff0c\u5e76\u9002\u5f53\u5730\u7ba1\u7406\u591a\u4e2a\u97f3\u9891\u6d41\u4ee5\u4f9b\u6211\u4eec\u7684\u6e38\u620f\u4f7f\u7528\u3002\u7136\u800c\u8fd9\u6709\u4e00\u4e9b\u590d\u6742\uff0c\u5e76\u4e14\u9700\u8981\u4e00\u4e9b\u5e95\u5c42\u7684\u97f3\u9891\u5de5\u7a0b\u77e5\u8bc6\u3002 \u5982\u679c\u4f60\u4e50\u610f\uff0c\u4f60\u53ef\u4ee5\u624b\u52a8\u52a0\u8f7d\u6765\u81ea\u591a\u79cd\u6269\u5c55\u540d\u7684\u97f3\u9891\u6587\u4ef6\u7684\u97f3\u9891\u6d41\u3002\u7136\u800c\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u88ab\u79f0\u4e3airrKlang\u7684\u97f3\u9891\u7ba1\u7406\u5e93\u3002","title":"\u97f3\u6548"},{"location":"06%20In%20Practice/2D-Game/09%20Audio/#irrklang","text":"IrrKlang\u662f\u4e00\u4e2a\u53ef\u4ee5\u64ad\u653eWAV\uff0cMP3\uff0cOGG\u548cFLAC\u6587\u4ef6\u7684\u9ad8\u7ea7\u4e8c\u7ef4\u548c\u4e09\u7ef4\uff08Windows\uff0cMac OS X\uff0cLinux\uff09\u58f0\u97f3\u5f15\u64ce\u548c\u97f3\u9891\u5e93\u3002\u5b83\u8fd8\u6709\u4e00\u4e9b\u53ef\u4ee5\u81ea\u7531\u8c03\u6574\u7684\u97f3\u9891\u6548\u679c\uff0c\u5982\u6df7\u54cd\u3001\u5ef6\u8fdf\u548c\u5931\u771f\u3002 Important 3D\u97f3\u9891\u610f\u5473\u7740\u97f3\u9891\u6e90\u53ef\u4ee5\u6709\u4e00\u4e2a3D\u4f4d\u7f6e\uff0c\u7136\u540e\u6839\u636e\u76f8\u673a\u5230\u97f3\u9891\u6e90\u7684\u4f4d\u7f6e\u8870\u51cf\u97f3\u91cf\uff0c\u4f7f\u5176\u5728\u4e00\u4e2a3D\u4e16\u754c\u91cc\u663e\u5f97\u81ea\u7136\uff08\u60f3\u60f33D\u4e16\u754c\u4e2d\u7684\u67aa\u58f0\uff0c\u901a\u5e38\u4f60\u53ef\u4ee5\u4ece\u97f3\u6548\u4e2d\u542c\u51fa\u5b83\u6765\u81ea\u4ec0\u4e48\u65b9\u5411/\u4f4d\u7f6e\uff09\u3002 IrrKlang\u662f\u4e00\u4e2a\u6613\u4e8e\u4f7f\u7528\u7684\u97f3\u9891\u5e93\uff0c\u53ea\u9700\u51e0\u884c\u4ee3\u7801\u4fbf\u53ef\u64ad\u653e\u5927\u591a\u6570\u97f3\u9891\u6587\u4ef6\uff0c\u8fd9\u4f7f\u5b83\u6210\u4e3a\u6211\u4eecBreakout\u6e38\u620f\u7684\u5b8c\u7f8e\u9009\u62e9\u3002\u8bf7\u6ce8\u610f\uff0cirrKlang\u6709\u4e00\u4e2a\u6709\u4e00\u5b9a\u9650\u5236\u7684\u8bc1\u4e66\uff1a\u5141\u8bb8\u4f60\u5c06irrKlang\u7528\u4e8e\u975e\u5546\u4e1a\u76ee\u7684\uff0c\u4f46\u662f\u5982\u679c\u4f60\u60f3\u4f7f\u7528irrKlang\u5546\u4e1a\u7248\uff0c\u5c31\u5fc5\u987b\u652f\u4ed8\u8d2d\u4e70\u4ed6\u4eec\u7684\u4e13\u4e1a\u7248\u3002\u7531\u4e8eBreakout\u548c\u672c\u6559\u7a0b\u7cfb\u5217\u662f\u975e\u5546\u4e1a\u6027\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u81ea\u7531\u5730\u4f7f\u7528\u4ed6\u4eec\u7684\u6807\u51c6\u5e93\u3002 \u4f60\u53ef\u4ee5\u4ece\u4ed6\u4eec\u7684 \u4e0b\u8f7d\u9875\u9762 \u4e0b\u8f7dirrKlang\uff0c\u6211\u4eec\u5c06\u4f7f\u75281.5\u7248\u672c\u3002\u7531\u4e8eirrKlang\u662f\u975e\u5f00\u6e90\u7684\u4ee3\u7801\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u5f97\u4e0d\u4f7f\u7528irrKlang\u4e3a\u6211\u4eec\u63d0\u4f9b\u7684\u4efb\u4f55\u4e1c\u897f\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u4ed6\u4eec\u6709\u5927\u91cf\u7684\u9884\u7f16\u8bd1\u5e93\u6587\u4ef6\uff0c\u6240\u4ee5\u4f60\u4eec\u5927\u591a\u6570\u4eba\u5e94\u8be5\u53ef\u4ee5\u5f88\u597d\u5730\u4f7f\u7528\u5b83\u3002 \u4f60\u9700\u8981\u5f15\u5165\u4e86irrKlang\u7684\u5934\u6587\u4ef6\uff0c\u5c06\u4ed6\u4eec\u7684\u5e93\u6587\u4ef6\uff08irrKlang.lib\uff09\u6dfb\u52a0\u5230\u94fe\u63a5\u5668\u8bbe\u7f6e\u4e2d\uff0c\u5e76\u5c06\u4ed6\u4eec\u7684dll\u6587\u4ef6\u590d\u5236\u5230\u9002\u5f53\u7684\u76ee\u5f55\u4e0b\uff08\u901a\u5e38\u548c.exe\u5728\u540c\u4e00\u76ee\u5f55\u4e0b\uff09\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4f60\u60f3\u8981\u52a0\u8f7dMP3\u6587\u4ef6\uff0c\u5219\u8fd8\u9700\u8981\u5f15\u5165ikpMP3.dll\u6587\u4ef6\u3002","title":"irrKlang"},{"location":"06%20In%20Practice/2D-Game/09%20Audio/#_2","text":"\u4e3a\u4e86\u8fd9\u4e2a\u6e38\u620f\u6211\u7279\u5236\u4e86\u4e00\u4e2a\u5c0f\u5c0f\u7684\u97f3\u8f68\uff0c\u8ba9\u6e38\u620f\u66f4\u5bcc\u6709\u6d3b\u529b\u3002\u5728 \u8fd9\u91cc \u4f60\u53ef\u4ee5\u627e\u5230\u6211\u4eec\u5c06\u8981\u7528\u4f5c\u6e38\u620f\u80cc\u666f\u97f3\u4e50\u7684\u97f3\u8f68\u3002\u8fd9\u4e2a\u97f3\u8f68\u4f1a\u5728\u6e38\u620f\u5f00\u59cb\u65f6\u64ad\u653e\u5e76\u4e0d\u65ad\u5faa\u73af\u76f4\u5230\u6e38\u620f\u7ed3\u675f\u3002\u4f60\u53ef\u4ee5\u968f\u610f\u7528\u81ea\u5df1\u7684\u97f3\u9891\u66ff\u6362\u5b83\uff0c\u6216\u8005\u7528\u559c\u6b22\u7684\u65b9\u5f0f\u4f7f\u7528\u5b83\u3002 \u5229\u7528irrKlang\u5e93\u5c06\u5176\u6dfb\u52a0\u5230Breakout\u6e38\u620f\u91cc\u975e\u5e38\u7b80\u5355\u3002\u6211\u4eec\u5f15\u5165\u76f8\u5e94\u7684\u5934\u6587\u4ef6\uff0c\u521b\u5efa irrKlang::ISoundEngine \uff0c\u7528 createIrrKlangDevice \u521d\u59cb\u5316\u5b83\u5e76\u4f7f\u7528\u8fd9\u4e2a\u5f15\u64ce\u52a0\u8f7d\u3001\u64ad\u653e\u97f3\u9891\uff1a #include <irrklang/irrKlang.h> using namespace irrklang; ISoundEngine *SoundEngine = createIrrKlangDevice(); void Game::Init() { [...] SoundEngine->play2D(\"audio/breakout.mp3\", GL_TRUE); } \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a SoundEngine \uff0c\u7528\u4e8e\u7ba1\u7406\u6240\u6709\u4e0e\u97f3\u9891\u76f8\u5173\u7684\u4ee3\u7801\u3002\u4e00\u65e6\u6211\u4eec\u521d\u59cb\u5316\u4e86\u5f15\u64ce\uff0c\u4fbf\u53ef\u4ee5\u8c03\u7528 play2D \u51fd\u6570\u64ad\u653e\u97f3\u9891\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u6587\u4ef6\u540d\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u662f\u5426\u5faa\u73af\u64ad\u653e\u3002 \u8fd9\u5c31\u662f\u5168\u90e8\u4e86\uff01\u73b0\u5728\u8fd0\u884c\u6e38\u620f\u4f1a\u4f7f\u4f60\u7684\u8033\u673a\u6216\u626c\u58f0\u5668\u8ff8\u53d1\u51fa\u58f0\u6ce2\u3002","title":"\u6dfb\u52a0\u97f3\u4e50"},{"location":"06%20In%20Practice/2D-Game/09%20Audio/#_3","text":"\u6211\u4eec\u8fd8\u6ca1\u6709\u7ed3\u675f\uff0c\u56e0\u4e3a\u97f3\u4e50\u672c\u8eab\u5e76\u4e0d\u80fd\u4f7f\u6e38\u620f\u5b8c\u5168\u5145\u6ee1\u6d3b\u529b\u3002\u6211\u4eec\u5e0c\u671b\u5728\u6e38\u620f\u53d1\u751f\u4e00\u4e9b\u6709\u8da3\u4e8b\u4ef6\u65f6\u64ad\u653e\u97f3\u6548\uff0c\u4f5c\u4e3a\u7ed9\u73a9\u5bb6\u7684\u989d\u5916\u53cd\u9988\uff0c\u5982\u6211\u4eec\u649e\u51fb\u7816\u5757\u3001\u83b7\u5f97\u9053\u5177\u65f6\u3002\u4e0b\u9762\u4f60\u53ef\u4ee5\u627e\u5230\u6211\u4eec\u9700\u8981\u7684\u6240\u6709\u97f3\u6548\uff08\u6765\u81eafreesound.org\uff09\uff1a bleep.mp3 : \u5c0f\u7403\u649e\u51fb\u975e\u5b9e\u5fc3\u7816\u5757\u65f6\u7684\u97f3\u6548 solid.wav \uff1a\u5c0f\u7403\u649e\u51fb\u5b9e\u5fc3\u7816\u5757\u65f6\u7684\u97f3\u6548 powerup.wav : \u83b7\u5f97\u9053\u5177\u65f6\u7684\u97f3\u6548 bleep.wav : \u5c0f\u7403\u5728\u6321\u677f\u4e0a\u53cd\u5f39\u65f6\u7684\u97f3\u6548 \u65e0\u8bba\u5728\u54ea\u91cc\u53d1\u751f\u78b0\u649e\uff0c\u6211\u4eec\u90fd\u4f1a\u64ad\u653e\u76f8\u5e94\u7684\u97f3\u6548\u3002\u6211\u4e0d\u4f1a\u8be6\u7ec6\u9610\u8ff0\u6bcf\u4e00\u884c\u7684\u4ee3\u7801\uff0c\u5e76\u628a\u66f4\u65b0\u540e\u7684\u4ee3\u7801\u653e\u5728\u4e86 \u8fd9\u91cc \uff0c\u4f60\u5e94\u8be5\u53ef\u4ee5\u8f7b\u677e\u5730\u627e\u5230\u76f8\u5e94\u7684\u6dfb\u52a0\u97f3\u6548\u7684\u5730\u65b9\u3002 \u628a\u8fd9\u4e9b\u96c6\u6210\u5728\u4e00\u8d77\u540e\u6211\u4eec\u7684\u6e38\u620f\u663e\u5f97\u66f4\u5b8c\u6574\u4e86\uff0c\u5c31\u50cf\u8fd9\u6837\uff1a IrrKlang\u5141\u8bb8\u4e00\u4e9b\u66f4\u7cbe\u7ec6\u7684\u97f3\u9891\u7ba1\u7406\u529f\u80fd\uff0c\u5982\u5185\u5b58\u7ba1\u7406\u3001\u58f0\u97f3\u7279\u6548\u548c\u58f0\u97f3\u4e8b\u4ef6\u56de\u8c03\u3002\u770b\u770b\u4ed6\u4eec\u7684C++ \u6559\u7a0b \u5e76\u5c1d\u8bd5\u4e00\u4e9b\u529f\u80fd\u5427\u3002","title":"\u6dfb\u52a0\u97f3\u6548"},{"location":"06%20In%20Practice/2D-Game/10%20Render%20Text/","text":"\u6e32\u67d3\u6587\u672c \u539f\u6587 Render text \u4f5c\u8005 JoeydeVries \u7ffb\u8bd1 aillieo \u6821\u5bf9 \u6682\u65e0 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u672c\u6559\u7a0b\u4e2d\u5c06\u901a\u8fc7\u589e\u52a0\u751f\u547d\u503c\u7cfb\u7edf\u3001\u83b7\u80dc\u6761\u4ef6\u548c\u6e32\u67d3\u6587\u672c\u5f62\u5f0f\u7684\u53cd\u9988\u6765\u5bf9\u6e38\u620f\u505a\u6700\u540e\u7684\u5b8c\u5584\u3002\u672c\u6559\u7a0b\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u5efa\u7acb\u5728\u4e4b\u524d\u7684\u6559\u7a0b \u6587\u672c\u6e32\u67d3 \u57fa\u7840\u4e4b\u4e0a\uff0c\u56e0\u6b64\u5982\u679c\u6ca1\u6709\u770b\u8fc7\u7684\u8bdd\uff0c\u5f3a\u70c8\u5efa\u8bae\u60a8\u5148\u4e00\u6b65\u4e00\u6b65\u5b66\u4e60\u4e4b\u524d\u7684\u6559\u7a0b\u3002 \u5728Breakout\u4e2d\uff0c\u6240\u6709\u7684\u6587\u672c\u6e32\u67d3\u4ee3\u7801\u90fd\u5c01\u88c5\u5728\u4e00\u4e2a\u540d\u4e3a TextRenderer \u7684\u7c7b\u4e2d\uff0c\u5176\u4e2d\u5305\u542bFreeType\u5e93\u7684\u521d\u59cb\u5316\u3001\u6e32\u67d3\u914d\u7f6e\u548c\u5b9e\u9645\u6e32\u67d3\u4ee3\u7801\u7b49\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002\u4ee5\u4e0b\u662f TextRenderer \u7c7b\u7684\u4ee3\u7801\uff1a TextRenderer : header , code . Text shaders : vertex , fragment . \u6587\u672c\u6e32\u67d3\u5668\u4e2d\u51fd\u6570\u7684\u5185\u5bb9\u51e0\u4e4e\u4e0e\u6587\u672c\u6e32\u67d3\u6559\u7a0b\u4e2d\u7684\u4ee3\u7801\u5b8c\u5168\u4e00\u6837\u3002\u4f46\u7528\u4e8e\u5411\u5c4f\u5e55\u6e32\u67d3\u5b57\u5f62\u7684\u4ee3\u7801\u7a0d\u6709\u4e0d\u540c\uff1a void TextRenderer::RenderText(std::string text, GLfloat x, GLfloat y, GLfloat scale,glm::vec3 color) { [...] for (c = text.begin(); c != text.end(); c++) { GLfloat xpos = x + ch.Bearing.x * scale; GLfloat ypos = y + (this->Characters['H'].Bearing.y - ch.Bearing.y) * scale; GLfloat w = ch.Size.x * scale; GLfloat h = ch.Size.y * scale; // \u4e3a\u6bcf\u4e2a\u5b57\u7b26\u66f4\u65b0VBO GLfloat vertices[6][4] = { { xpos, ypos + h, 0.0, 1.0 }, { xpos + w, ypos, 1.0, 0.0 }, { xpos, ypos, 0.0, 0.0 }, { xpos, ypos + h, 0.0, 1.0 }, { xpos + w, ypos + h, 1.0, 1.0 }, { xpos + w, ypos, 1.0, 0.0 } }; [...] } } \u4e4b\u6240\u4ee5\u4f1a\u7a0d\u6709\u4e0d\u540c\uff0c\u662f\u56e0\u4e3a\u76f8\u6bd4\u4e8e\u6587\u672c\u6e32\u67d3\u6559\u7a0b\u6211\u4eec\u6b64\u5904\u4f7f\u7528\u4e86\u4e00\u4e2a\u4e0d\u540c\u7684\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u3002\u5728\u6587\u672c\u6e32\u67d3\u6559\u7a0b\u4e2d\uff0c\u6240\u6709\u7684 y \u503c\u53d6\u503c\u4ece\u5e95\u90e8\u5411\u9876\u90e8\u9012\u589e\uff0c\u4f46\u5728\u6e38\u620fBreakout\u4e2d\uff0c y \u503c\u53d6\u503c\u4ece\u9876\u90e8\u5230\u5e95\u90e8\u9012\u589e\uff0c\u503c\u4e3a 0.0 \u7684 y \u503c\u5bf9\u5e94\u5c4f\u5e55\u9876\u7aef\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u7a0d\u5fae\u6539\u53d8\u8ba1\u7b97\u5782\u76f4\u65b9\u5411\u504f\u79fb\u7684\u65b9\u6cd5\u3002 \u7531\u4e8e\u73b0\u5728\u6211\u4eec\u5c06 RenderText \u7684 y \u5750\u6807\u53c2\u6570\u4ece\u4e0a\u5411\u4e0b\u6e32\u67d3\uff0c\u6211\u4eec\u5c06\u5782\u76f4\u504f\u79fb\u8ba1\u7b97\u4e3a\u4e00\u4e2a\u5b57\u5f62\u4ece\u5b57\u5f62\u7a7a\u95f4\u9876\u90e8\u5411\u4e0b\u63a8\u8fdb\u7684\u8ddd\u79bb\u3002\u56de\u987eFreeType\u7684\u5b57\u5f62\u77e9\u9635\u56fe\u7247\uff0c\u6b64\u5782\u76f4\u504f\u79fb\u7528\u7ea2\u8272\u7bad\u5934\u6807\u8bb0\u3002 \u4e3a\u8ba1\u7b97\u5782\u76f4\u504f\u79fb\uff0c\u6211\u4eec\u9700\u8981\u83b7\u53d6\u5b57\u5f62\u7a7a\u95f4\u7684\u9876\u90e8\uff08\u57fa\u672c\u4e0a\u662f\u539f\u70b9\u53d1\u51fa\u7684\u9ed1\u8272\u5782\u76f4\u7bad\u5934\u7684\u957f\u5ea6\uff09\u3002\u4e0d\u5e78\u7684\u662f\uff0cFreeType\u5e76\u4e0d\u5411\u6211\u4eec\u63d0\u4f9b\u8fd9\u6837\u7684\u673a\u5236\u3002\u6211\u4eec\u5df2\u77e5\u7684\u662f\u6709\u4e00\u4e9b\u5b57\u5f62\u76f4\u63a5\u4e0e\u9876\u90e8\u63a5\u89e6\uff0c\u5982\u5b57\u7b26\u2019H\u2019\u3001\u2019T\u2019\u6216\u2019X\u2019\u3002\u90a3\u4e48\u6211\u4eec\u901a\u8fc7 \u63a5\u89e6\u9876\u90e8\u7684 \u5b57\u5f62\u7684 bearingY \u51cf\u53bb\u9876\u90e8\u4e0d\u786e\u5b9a\u5b57\u5f62\u7684 bearingY \u6765\u8ba1\u7b97\u7ea2\u8272\u77e2\u91cf\u7684\u957f\u5ea6\u3002\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u6211\u4eec\u4f9d\u636e\u5b57\u5f62\u9876\u90e8\u7684\u70b9\u4e0e\u9876\u90e8\u8fb9\u5dee\u5f02\u7684\u8ddd\u79bb\u6765\u5411\u4e0b\u63a8\u8fdb\u5b57\u5f62\u3002 GLfloat ypos = y + (this->Characters['H'].Bearing.y - ch.Bearing.y) * scale; \u9664\u4e86\u66f4\u65b0 ypos \u7684\u8ba1\u7b97\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u8c03\u6362\u4e86\u4e00\u4e9b\u9876\u70b9\u7684\u987a\u5e8f\uff0c\u7528\u4ee5\u786e\u4fdd\u6240\u6709\u7684\u9876\u70b9\u5728\u4e0e\u73b0\u5728\u7684\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u76f8\u4e58\u540e\u4ecd\u4e3a\u6b63\u65b9\u5411\uff08\u8be6\u89c1\u6559\u7a0b \u9762\u5254\u9664 \uff09\u3002 \u5411\u6e38\u620f\u4e2d\u52a0\u5165 TextRenderer \u5e76\u4e0d\u96be\uff1a TextRenderer *Text; void Game::Init() { [...] Text = new TextRenderer(this->Width, this->Height); Text->Load(\"fonts/ocraext.TTF\", 24); } \u4f7f\u7528\u4e00\u4e2a\u540d\u4e3aOCR A Extended\u7684\u5b57\u4f53\u6765\u521d\u59cb\u5316\u6587\u672c\u6e32\u67d3\u5668\uff0c\u8be5\u5b57\u4f53\u53ef\u4ee5\u4ece \u8fd9\u91cc \u4e0b\u8f7d\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u4e0d\u540c\u7684\u5b57\u4f53\uff0c\u5982\u679c\u4e0d\u5f88\u559c\u6b22\u8fd9\u4e2a\u5b57\u4f53\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u6587\u672c\u6e32\u67d3\u5668\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u5b8c\u6210\u6e38\u620f\u673a\u5236\u3002 \u73a9\u5bb6\u751f\u547d\u503c \u5f53\u7403\u78b0\u5230\u5e95\u90e8\u8fb9\u754c\u65f6\uff0c\u6211\u4eec\u4f1a\u7ed9\u73a9\u5bb6\u989d\u5916\u7684\u51e0\u6b21\u673a\u4f1a\uff0c\u800c\u4e0d\u662f\u7acb\u5373\u91cd\u7f6e\u6e38\u620f\u3002\u6211\u4eec\u4f7f\u7528\u73a9\u5bb6\u751f\u547d\u503c\u7684\u5f62\u5f0f\u6765\u5b9e\u73b0\uff0c\u73a9\u5bb6\u5f00\u59cb\u65f6\u4f1a\u6709\u521d\u59cb\u6570\u91cf\u7684\u751f\u547d\u503c\uff08\u6bd4\u5982 3 \uff09\uff0c\u6bcf\u5f53\u7403\u78b0\u5230\u5e95\u90e8\u8fb9\u754c\uff0c\u73a9\u5bb6\u7684\u751f\u547d\u503c\u603b\u6570\u4f1a\u51cf 1 \u3002\u53ea\u6709\u5f53\u73a9\u5bb6\u751f\u547d\u503c\u53d8\u4e3a 0 \u65f6\u624d\u4f1a\u91cd\u7f6e\u6e38\u620f\u3002\u8fd9\u6837\u5bf9\u73a9\u5bb6\u6765\u8bf4\u5b8c\u6210\u5173\u5361\u4f1a\u7a0d\u5bb9\u6613\u4e00\u70b9\uff0c\u540c\u65f6\u4e5f\u4f1a\u611f\u53d7\u5230\u96be\u5ea6\u3002 \u6211\u4eec\u5411game\u7c7b\u4e2d\u589e\u52a0\u73a9\u5bb6\u7684\u751f\u547d\u503c\u4ee5\u8bb0\u5f55\u5b83\uff08\u5728\u6784\u9020\u51fd\u6570\u4e2d\u5c06\u5176\u521d\u59cb\u5316\u4e3a 3 \uff09\u3002 class Game { [...] public: GLuint Lives; } \u63a5\u4e0b\u6765\u6211\u4eec\u4fee\u6539game\u7c7b\u7684 update \u51fd\u6570\uff0c\u4e0d\u518d\u91cd\u7f6e\u6e38\u620f\uff0c\u800c\u662f\u51cf\u5c11\u73a9\u5bb6\u751f\u547d\u503c\uff0c\u53ea\u6709\u5f53\u751f\u547d\u503c\u4e3a 0 \u65f6\u91cd\u7f6e\u6e38\u620f\u3002 void Game::Update(GLfloat dt) { [...] if (Ball->Position.y >= this->Height) // \u7403\u662f\u5426\u63a5\u89e6\u5230\u5e95\u90e8\u8fb9\u754c? { --this->Lives; // \u73a9\u5bb6\u662f\u5426\u5df2\u5931\u53bb\u6240\u6709\u751f\u547d\u503c? : \u6e38\u620f\u7ed3\u675f if (this->Lives == 0) { this->ResetLevel(); this->State = GAME_MENU; } this->ResetPlayer(); } } \u4e00\u65e6\u73a9\u5bb6\u6e38\u620f\u7ed3\u675f\uff08 lives \u7b49\u4e8e 0 \uff09\uff0c\u6211\u4eec\u4f1a\u91cd\u7f6e\u5173\u5361\uff0c\u5e76\u5c06\u6e38\u620f\u72b6\u6001\u6539\u53d8\u4e3a GAME_MENU \uff0c\u7a0d\u540e\u4f1a\u8be6\u7ec6\u8bb2\u3002 \u6ce8\u610f\u4e0d\u8981\u5fd8\u4e86\u5728\u91cd\u7f6e\u6e38\u620f/\u5173\u5361\u65f6\u91cd\u7f6e\u73a9\u5bb6\u751f\u547d\u503c\uff1a void Game::ResetLevel() { [...] this->Lives = 3; } \u6b64\u65f6\u73a9\u5bb6\u751f\u547d\u503c\u5df2\u53ef\u4ee5\u8fd0\u4f5c\uff0c\u4f46\u73a9\u5bb6\u5728\u6e38\u620f\u65f6\u5374\u65e0\u6cd5\u770b\u5230\u81ea\u5df1\u5f53\u524d\u6709\u591a\u5c11\u751f\u547d\u503c\u3002\u8fd9\u65f6\u5c31\u9700\u8981\u52a0\u5165\u6587\u672c\u6e32\u67d3\u5668\u3002 void Game::Render() { if (this->State == GAME_ACTIVE) { [...] std::stringstream ss; ss << this->Lives; Text->RenderText(\"Lives:\" + ss.str(), 5.0f, 5.0f, 1.0f); } } \u8fd9\u91cc\u6211\u4eec\u5c06\u751f\u547d\u503c\u6570\u91cf\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u5176\u663e\u793a\u5728\u5c4f\u5e55\u5de6\u4e0a\u89d2\u3002\u770b\u8d77\u6765\u5c06\u4f1a\u662f\u50cf\u8fd9\u6837\uff1a \u4e00\u65e6\u7403\u63a5\u89e6\u5230\u5e95\u90e8\u8fb9\u754c\uff0c\u73a9\u5bb6\u7684\u751f\u547d\u503c\u4f1a\u51cf\u5c11\uff0c\u8fd9\u4f1a\u5728\u5c4f\u5e55\u5de6\u4e0a\u89d2\u76f4\u63a5\u53ef\u89c1\u3002 \u5173\u5361\u9009\u62e9 \u5f53\u73a9\u5bb6\u6240\u5904\u6e38\u620f\u72b6\u6001\u4e3a GAME_MENU \u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u73a9\u5bb6\u53ef\u4ee5\u63a7\u5236\u9009\u62e9\u4ed6\u60f3\u73a9\u7684\u5173\u5361\u3002\u73a9\u5bb6\u5e94\u8be5\u53ef\u4ee5\u4f7f\u7528\u2019w\u2019\u6216\u2019s\u2019\u952e\u5728\u6211\u4eec\u52a0\u8f7d\u7684\u6240\u6709\u5173\u5361\u4e2d\u6eda\u52a8\u9009\u62e9\u3002\u5f53\u73a9\u5bb6\u611f\u89c9\u9009\u4e2d\u7684\u662f\u4ed6\u60f3\u73a9\u7684\u5173\u5361\u65f6\uff0c\u4ed6\u53ef\u4ee5\u6309\u56de\u8f66\u952e\u5c06\u6e38\u620f\u72b6\u6001\u4ece GAME_MENU \u5207\u6362\u5230 GAME_ACTIVE \u3002 \u5141\u8bb8\u73a9\u5bb6\u9009\u62e9\u5173\u5361\u5e76\u4e0d\u96be\u3002\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u5f53\u73a9\u5bb6\u6309\u4e0b\u2019w\u2019\u6216\u2019s\u2019\u952e\u65f6\u5206\u522b\u589e\u52a0\u6216\u51cf\u5c0fgame\u7c7b\u4e2d\u7684\u53d8\u91cf Level \u7684\u503c\uff1a if (this->State == GAME_MENU) { if (this->Keys[GLFW_KEY_ENTER]) this->State = GAME_ACTIVE; if (this->Keys[GLFW_KEY_W]) this->Level = (this->Level + 1) % 4; if (this->Keys[GLFW_KEY_S]) { if (this->Level > 0) --this->Level; else this->Level = 3; } } \u6211\u4eec\u4f7f\u7528\u53d6\u6a21\u8fd0\u7b97( % )\u4ee5\u4fdd\u8bc1\u53d8\u91cf Level \u5728\u53ef\u63a5\u53d7\u7684\u5173\u5361\u503c\u8303\u56f4\u5185\uff08 0 \u548c 3 \u4e4b\u95f4\uff09\u3002\u9664\u4e86\u53d8\u6362\u5173\u5361\u4e4b\u5916\uff0c\u5728\u83dc\u5355\u72b6\u6001\u65f6\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u5176\u6e32\u67d3\u51fa\u6765\u3002\u6211\u4eec\u8981\u7ed9\u73a9\u5bb6\u4e00\u4e9b\u6587\u672c\u5f62\u5f0f\u7684\u6307\u793a\uff0c\u5e76\u5728\u80cc\u666f\u4e2d\u5c55\u793a\u51fa\u9009\u4e2d\u7684\u5173\u5361\u3002 void Game::Render() { if (this->State == GAME_ACTIVE || this->State == GAME_MENU) { [...] // \u6e38\u620f\u72b6\u6001\u6e32\u67d3\u4ee3\u7801 } if (this->State == GAME_MENU) { Text->RenderText(\"Press ENTER to start\", 250.0f, Height / 2, 1.0f); Text->RenderText(\"Press W or S to select level\", 245.0f, Height / 2 + 20.0f, 0.75f); } } \u8fd9\u91cc\u65e0\u8bba\u6e38\u620f\u5904\u5728 GAME_ACTIVE \u72b6\u6001\u8fd8\u662f GAME_MENU \u72b6\u6001\uff0c\u90fd\u4f1a\u6e32\u67d3\u6e38\u620f\uff0c\u5f53\u6e38\u620f\u5904\u5728 GAME_MENU \u72b6\u6001\u9700\u8981\u6e32\u67d3\u4e24\u884c\u6587\u672c\u7528\u4e8e\u544a\u77e5\u73a9\u5bb6\u9009\u62e9\u4e00\u4e2a\u5173\u5361\u5e76\u4e14/\u6216\u8005\u786e\u8ba4\u9009\u62e9\u3002\u6ce8\u610f\uff0c\u4e3a\u6b64\u5fc5\u987b\u5728\u542f\u52a8\u6e38\u620f\u65f6\u5c06\u6e38\u620f\u72b6\u6001\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a GAME_MENU \u3002 \u770b\u8d77\u6765\u5f88\u68d2\uff0c\u4f46\u5f53\u4f60\u8bd5\u56fe\u8fd0\u884c\u4ee3\u7801\u4f60\u5f88\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\uff0c\u5f53\u6309\u4e0b\u2019w\u2019\u6216\u2019s\u2019\u952e\u65f6\uff0c\u6e38\u620f\u4f1a\u5728\u5173\u5361\u4e4b\u524d\u5feb\u901f\u6eda\u52a8\uff0c\u5f88\u96be\u9009\u4e2d\u4f60\u60f3\u73a9\u7684\u5173\u5361\u3002\u8fd9\u662f\u56e0\u4e3agame\u4f1a\u5728\u591a\u5e27\u8bb0\u5f55\u6309\u952e\u76f4\u5230\u6309\u952e\u677e\u5f00\u3002\u8fd9\u5c06\u5bfc\u81f4 ProcessInput \u51fd\u6570\u5904\u7406\u6309\u4e0b\u7684\u952e\u4e0d\u6b62\u4e00\u6b21\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528GUI\u7cfb\u7edf\u4e2d\u5e38\u89c1\u7684\u4e00\u4e2a\u5c0f\u6280\u5de7\u6765\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002\u8fd9\u4e00\u5c0f\u6280\u5de7\u5c31\u662f\uff1a\u4e0d\u4ec5\u8bb0\u5f55\u5f53\u524d\u6309\u4e0b\u7684\u952e\uff0c\u5e76\u4e14\u5b58\u50a8\u5df2\u7ecf\u88ab\u6309\u4e0b\u7684\u952e\uff0c\u76f4\u5230\u518d\u6b21\u677e\u5f00\u3002\u7136\u540e\u6211\u4eec\u4f1a\u68c0\u67e5\uff08\u5728\u5904\u7406\u4e4b\u524d\uff09\u662f\u5426\u8fd8\u6ca1\u6709\u88ab\u5904\u7406\uff0c\u5982\u679c\u6ca1\u6709\u88ab\u5904\u7406\u7684\u8bdd\uff0c\u5904\u7406\u8be5\u6309\u952e\u5e76\u5c06\u5176\u5b58\u50a8\u4e3a\u6b63\u5728\u88ab\u5904\u7406\u3002\u4e00\u65e6\u6211\u4eec\u8981\u5728\u672a\u677e\u5f00\u65f6\u518d\u6b21\u5904\u7406\u76f8\u540c\u7684\u6309\u952e\uff0c\u6211\u4eec\u5c06\u4e0d\u4f1a\u5904\u7406\u8be5\u6309\u952e\u3002\u8fd9\u542c\u8d77\u6765\u8ba9\u4eba\u7a0d\u5fae\u8ff7\u60d1\uff0c\u4f46\u5f53\u4f60\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u89c1\u5230\u5b83\uff0c\uff08\u5f88\u53ef\u80fd\uff09\u5c31\u4f1a\u660e\u767d\u5b83\u7684\u610f\u4e49\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u521b\u5efa\u53e6\u4e00\u4e2a\u5e03\u5c14\u6570\u7ec4\u7528\u6765\u8868\u793a\u5904\u7406\u8fc7\u7684\u6309\u952e\u3002\u6211\u4eec\u5728game\u7c7b\u5b9a\u4e49\u5982\u4e0b\uff1a class Game { [...] public: GLboolean KeysProcessed[1024]; } \u5f53\u76f8\u5bf9\u5e94\u7684\u6309\u952e\u88ab\u5904\u7406\u65f6\uff0c\u6211\u4eec\u5c06\u5176\u8bbe\u7f6e\u4e3a true \uff0c\u4ee5\u786e\u4fdd\u6309\u952e\u53ea\u5728\u4e4b\u524d\u6ca1\u6709\u88ab\u5904\u7406\u8fc7\uff08\u76f4\u5230\u677e\u5f00\uff09\u65f6\u5c06\u5176\u5904\u7406\u3002 void Game::ProcessInput(GLfloat dt) { if (this->State == GAME_MENU) { if (this->Keys[GLFW_KEY_ENTER] && !this->KeysProcessed[GLFW_KEY_ENTER]) { this->State = GAME_ACTIVE; this->KeysProcessed[GLFW_KEY_ENTER] = GL_TRUE; } if (this->Keys[GLFW_KEY_W] && !this->KeysProcessed[GLFW_KEY_W]) { this->Level = (this->Level + 1) % 4; this->KeysProcessed[GLFW_KEY_W] = GL_TRUE; } if (this->Keys[GLFW_KEY_S] && !this->KeysProcessed[GLFW_KEY_S]) { if (this->Level > 0) --this->Level; else this->Level = 3; this->KeysProcessed[GLFW_KEY_S] = GL_TRUE; } } [...] } \u73b0\u5728\uff0c\u5f53 KeysProcessed \u6570\u7ec4\u4e2d\u6309\u952e\u7684\u503c\u672a\u88ab\u8bbe\u7f6e\u65f6\uff0c\u6211\u4eec\u4f1a\u5904\u7406\u6309\u952e\u5e76\u5c06\u5176\u503c\u8bbe\u4e3a true \u3002\u4e0b\u4e00\u6b21\u5f53\u5230\u8fbe\u540c\u4e00\u6309\u952e\u7684 if \u6761\u4ef6\u65f6\uff0c\u5b83\u5df2\u7ecf\u88ab\u5904\u7406\u8fc7\u4e86\u6240\u4ee5\u6211\u4eec\u4f1a\u5047\u88c5\u5e76\u6ca1\u6709\u6309\u4e0b\u6b64\u952e\uff0c\u76f4\u5230\u5b83\u88ab\u677e\u5f00\u3002 \u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u5728\u677e\u5f00\u6309\u952e\u65f6\u901a\u8fc7GLFW\u7684\u6309\u952e\u56de\u8c03\u51fd\u6570\uff0c\u91cd\u7f6e\u6309\u952e\u5904\u7406\u540e\u7684\u503c\uff0c\u4ee5\u4fbf\u4e8e\u4e0b\u6b21\u518d\u5904\u7406\uff1a void key_callback(GLFWwindow* window, int key, int scancode, int action, int mode) { [...] if (key >= 0 && key < 1024) { if (action == GLFW_PRESS) Breakout.Keys[key] = GL_TRUE; else if (action == GLFW_RELEASE) { Breakout.Keys[key] = GL_FALSE; Breakout.KeysProcessed[key] = GL_FALSE; } } } \u542f\u52a8\u6e38\u620f\u4f1a\u5c55\u793a\u4e00\u4e2a\u6574\u6d01\u7684\u5173\u5361\u9009\u62e9\u754c\u9762\uff0c\u73b0\u5728\u53ef\u4ee5\u6bcf\u6b21\u6309\u952e\u6e05\u6670\u5730\u9009\u62e9\u4e00\u4e2a\u5173\u5361\uff0c\u65e0\u8bba\u6309\u952e\u88ab\u6309\u4e0b\u591a\u4e45\u3002 \u83b7\u80dc \u73b0\u5728\u73a9\u5bb6\u53ef\u4ee5\u9009\u62e9\u5173\u5361\u3001\u73a9\u6e38\u620f\u548c\u6e38\u620f\u5931\u8d25\u3002\u6709\u4e9b\u4e0d\u5e78\u7684\u662f\u73a9\u5bb6\u5728\u6d88\u9664\u4e86\u6240\u6709\u7684\u7816\u5757\u4e4b\u540e\u4f1a\u53d1\u73b0\u65e0\u6cd5\u83b7\u5f97\u6e38\u620f\u80dc\u5229\u3002\u73b0\u5728\u6765\u4fee\u590d\u6b64\u95ee\u9898\u3002 \u5728\u6240\u6709\u5b9e\u4f53\u7816\u5757\u88ab\u6d88\u9664\u4e4b\u540e\u73a9\u5bb6\u4f1a\u53d6\u5f97\u80dc\u5229\u3002\u6211\u4eec\u5df2\u7ecf\u5728 GameLevel \u7c7b\u521b\u5efa\u4e86\u4e00\u4e2a\u51fd\u6570\u7528\u4e8e\u68c0\u67e5\u8fd9\u4e00\u6761\u4ef6\uff1a GLboolean GameLevel::IsCompleted() { for (GameObject &tile : this->Bricks) if (!tile.IsSolid && !tile.Destroyed) return GL_FALSE; return GL_TRUE; } \u6211\u4eec\u4f1a\u68c0\u67e5\u6e38\u620f\u5173\u5361\u6240\u6709\u7684\u7816\u5757\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u975e\u5b9e\u4f53\u7816\u5757\u672a\u88ab\u6d88\u9664\u5219\u8fd4\u56de false \u3002\u6211\u4eec\u6240\u8981\u505a\u7684\u5c31\u662f\u5728 Update \u51fd\u6570\u4e2d\u68c0\u67e5\u6b64\u6761\u4ef6\uff0c\u4e00\u65e6\u8fd4\u56de true \uff0c\u6211\u4eec\u5c31\u5c06\u6e38\u620f\u72b6\u6001\u6539\u53d8\u4e3a GAME_WIN \uff1a void Game::Update(GLfloat dt) { [...] if (this->State == GAME_ACTIVE && this->Levels[this->Level].IsCompleted()) { this->ResetLevel(); this->ResetPlayer(); Effects->Chaos = GL_TRUE; this->State = GAME_WIN; } } \u5728\u6e38\u620f\u6fc0\u6d3b\u72b6\u6001\uff0c\u5f53\u5173\u5361\u5b8c\u6210\u65f6\uff0c\u6211\u4eec\u4f1a\u91cd\u7f6e\u6e38\u620f\u5e76\u4e14\u5728 GAME_WIN \u72b6\u6001\u5c55\u793a\u4e00\u6761\u5c0f\u7684\u80dc\u5229\u7684\u6d88\u606f\u3002\u4e3a\u4e86\u589e\u52a0\u8da3\u5473\u6027\u6211\u4eec\u4f1a\u5728 GAME_WIN \u754c\u9762\u542f\u7528\u6df7\u6c8c\u6548\u5e94\u3002\u5728\u51fd\u6570 Render \u4e2d\u6211\u4eec\u4f1a\u795d\u8d3a\u73a9\u5bb6\u5e76\u8be2\u95ee\u5176\u91cd\u65b0\u5f00\u59cb\u8fd8\u662f\u9000\u51fa\u6e38\u620f\u3002 void Game::Render() { [...] if (this->State == GAME_WIN) { Text->RenderText( \"You WON!!!\", 320.0, Height / 2 - 20.0, 1.0, glm::vec3(0.0, 1.0, 0.0) ); Text->RenderText( \"Press ENTER to retry or ESC to quit\", 130.0, Height / 2, 1.0, glm::vec3(1.0, 1.0, 0.0) ); } } \u4e4b\u540e\u6211\u4eec\u5f53\u7136\u4e5f\u8981\u5904\u7406\u4e4b\u524d\u63d0\u5230\u7684\u6309\u952e\uff1a void Game::ProcessInput(GLfloat dt) { [...] if (this->State == GAME_WIN) { if (this->Keys[GLFW_KEY_ENTER]) { this->KeysProcessed[GLFW_KEY_ENTER] = GL_TRUE; Effects->Chaos = GL_FALSE; this->State = GAME_MENU; } } } \u4e4b\u540e\u5982\u679c\u4f60\u771f\u7684\u53ef\u4ee5\u8d62\u5f97\u6e38\u620f\uff0c\u4f60\u5c06\u4f1a\u770b\u5230\u4ee5\u4e0b\u56fe\u7247\uff1a \u5c31\u662f\u8fd9\u6837\uff01\u8fd9\u662f\u6e38\u620fBreakout\u6211\u4eec\u8981\u5904\u7406\u7684\u6700\u540e\u4e00\u5757\u62fc\u56fe\u3002\u5c1d\u8bd5\u6309\u7167\u81ea\u5df1\u7684\u610f\u613f\u81ea\u5b9a\u4e49\u5e76\u628a\u5b83\u5c55\u793a\u7ed9\u4f60\u7684\u5bb6\u4eba\u548c\u670b\u53cb\uff01 \u4ee5\u4e0b\u662f\u6700\u7ec8\u7248\u7684\u6e38\u620f\u4ee3\u7801\uff1a Game : header , code .","title":"\u6e32\u67d3\u6587\u672c"},{"location":"06%20In%20Practice/2D-Game/10%20Render%20Text/#_1","text":"\u539f\u6587 Render text \u4f5c\u8005 JoeydeVries \u7ffb\u8bd1 aillieo \u6821\u5bf9 \u6682\u65e0 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u672c\u6559\u7a0b\u4e2d\u5c06\u901a\u8fc7\u589e\u52a0\u751f\u547d\u503c\u7cfb\u7edf\u3001\u83b7\u80dc\u6761\u4ef6\u548c\u6e32\u67d3\u6587\u672c\u5f62\u5f0f\u7684\u53cd\u9988\u6765\u5bf9\u6e38\u620f\u505a\u6700\u540e\u7684\u5b8c\u5584\u3002\u672c\u6559\u7a0b\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u5efa\u7acb\u5728\u4e4b\u524d\u7684\u6559\u7a0b \u6587\u672c\u6e32\u67d3 \u57fa\u7840\u4e4b\u4e0a\uff0c\u56e0\u6b64\u5982\u679c\u6ca1\u6709\u770b\u8fc7\u7684\u8bdd\uff0c\u5f3a\u70c8\u5efa\u8bae\u60a8\u5148\u4e00\u6b65\u4e00\u6b65\u5b66\u4e60\u4e4b\u524d\u7684\u6559\u7a0b\u3002 \u5728Breakout\u4e2d\uff0c\u6240\u6709\u7684\u6587\u672c\u6e32\u67d3\u4ee3\u7801\u90fd\u5c01\u88c5\u5728\u4e00\u4e2a\u540d\u4e3a TextRenderer \u7684\u7c7b\u4e2d\uff0c\u5176\u4e2d\u5305\u542bFreeType\u5e93\u7684\u521d\u59cb\u5316\u3001\u6e32\u67d3\u914d\u7f6e\u548c\u5b9e\u9645\u6e32\u67d3\u4ee3\u7801\u7b49\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002\u4ee5\u4e0b\u662f TextRenderer \u7c7b\u7684\u4ee3\u7801\uff1a TextRenderer : header , code . Text shaders : vertex , fragment . \u6587\u672c\u6e32\u67d3\u5668\u4e2d\u51fd\u6570\u7684\u5185\u5bb9\u51e0\u4e4e\u4e0e\u6587\u672c\u6e32\u67d3\u6559\u7a0b\u4e2d\u7684\u4ee3\u7801\u5b8c\u5168\u4e00\u6837\u3002\u4f46\u7528\u4e8e\u5411\u5c4f\u5e55\u6e32\u67d3\u5b57\u5f62\u7684\u4ee3\u7801\u7a0d\u6709\u4e0d\u540c\uff1a void TextRenderer::RenderText(std::string text, GLfloat x, GLfloat y, GLfloat scale,glm::vec3 color) { [...] for (c = text.begin(); c != text.end(); c++) { GLfloat xpos = x + ch.Bearing.x * scale; GLfloat ypos = y + (this->Characters['H'].Bearing.y - ch.Bearing.y) * scale; GLfloat w = ch.Size.x * scale; GLfloat h = ch.Size.y * scale; // \u4e3a\u6bcf\u4e2a\u5b57\u7b26\u66f4\u65b0VBO GLfloat vertices[6][4] = { { xpos, ypos + h, 0.0, 1.0 }, { xpos + w, ypos, 1.0, 0.0 }, { xpos, ypos, 0.0, 0.0 }, { xpos, ypos + h, 0.0, 1.0 }, { xpos + w, ypos + h, 1.0, 1.0 }, { xpos + w, ypos, 1.0, 0.0 } }; [...] } } \u4e4b\u6240\u4ee5\u4f1a\u7a0d\u6709\u4e0d\u540c\uff0c\u662f\u56e0\u4e3a\u76f8\u6bd4\u4e8e\u6587\u672c\u6e32\u67d3\u6559\u7a0b\u6211\u4eec\u6b64\u5904\u4f7f\u7528\u4e86\u4e00\u4e2a\u4e0d\u540c\u7684\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u3002\u5728\u6587\u672c\u6e32\u67d3\u6559\u7a0b\u4e2d\uff0c\u6240\u6709\u7684 y \u503c\u53d6\u503c\u4ece\u5e95\u90e8\u5411\u9876\u90e8\u9012\u589e\uff0c\u4f46\u5728\u6e38\u620fBreakout\u4e2d\uff0c y \u503c\u53d6\u503c\u4ece\u9876\u90e8\u5230\u5e95\u90e8\u9012\u589e\uff0c\u503c\u4e3a 0.0 \u7684 y \u503c\u5bf9\u5e94\u5c4f\u5e55\u9876\u7aef\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u7a0d\u5fae\u6539\u53d8\u8ba1\u7b97\u5782\u76f4\u65b9\u5411\u504f\u79fb\u7684\u65b9\u6cd5\u3002 \u7531\u4e8e\u73b0\u5728\u6211\u4eec\u5c06 RenderText \u7684 y \u5750\u6807\u53c2\u6570\u4ece\u4e0a\u5411\u4e0b\u6e32\u67d3\uff0c\u6211\u4eec\u5c06\u5782\u76f4\u504f\u79fb\u8ba1\u7b97\u4e3a\u4e00\u4e2a\u5b57\u5f62\u4ece\u5b57\u5f62\u7a7a\u95f4\u9876\u90e8\u5411\u4e0b\u63a8\u8fdb\u7684\u8ddd\u79bb\u3002\u56de\u987eFreeType\u7684\u5b57\u5f62\u77e9\u9635\u56fe\u7247\uff0c\u6b64\u5782\u76f4\u504f\u79fb\u7528\u7ea2\u8272\u7bad\u5934\u6807\u8bb0\u3002 \u4e3a\u8ba1\u7b97\u5782\u76f4\u504f\u79fb\uff0c\u6211\u4eec\u9700\u8981\u83b7\u53d6\u5b57\u5f62\u7a7a\u95f4\u7684\u9876\u90e8\uff08\u57fa\u672c\u4e0a\u662f\u539f\u70b9\u53d1\u51fa\u7684\u9ed1\u8272\u5782\u76f4\u7bad\u5934\u7684\u957f\u5ea6\uff09\u3002\u4e0d\u5e78\u7684\u662f\uff0cFreeType\u5e76\u4e0d\u5411\u6211\u4eec\u63d0\u4f9b\u8fd9\u6837\u7684\u673a\u5236\u3002\u6211\u4eec\u5df2\u77e5\u7684\u662f\u6709\u4e00\u4e9b\u5b57\u5f62\u76f4\u63a5\u4e0e\u9876\u90e8\u63a5\u89e6\uff0c\u5982\u5b57\u7b26\u2019H\u2019\u3001\u2019T\u2019\u6216\u2019X\u2019\u3002\u90a3\u4e48\u6211\u4eec\u901a\u8fc7 \u63a5\u89e6\u9876\u90e8\u7684 \u5b57\u5f62\u7684 bearingY \u51cf\u53bb\u9876\u90e8\u4e0d\u786e\u5b9a\u5b57\u5f62\u7684 bearingY \u6765\u8ba1\u7b97\u7ea2\u8272\u77e2\u91cf\u7684\u957f\u5ea6\u3002\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u6211\u4eec\u4f9d\u636e\u5b57\u5f62\u9876\u90e8\u7684\u70b9\u4e0e\u9876\u90e8\u8fb9\u5dee\u5f02\u7684\u8ddd\u79bb\u6765\u5411\u4e0b\u63a8\u8fdb\u5b57\u5f62\u3002 GLfloat ypos = y + (this->Characters['H'].Bearing.y - ch.Bearing.y) * scale; \u9664\u4e86\u66f4\u65b0 ypos \u7684\u8ba1\u7b97\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u8c03\u6362\u4e86\u4e00\u4e9b\u9876\u70b9\u7684\u987a\u5e8f\uff0c\u7528\u4ee5\u786e\u4fdd\u6240\u6709\u7684\u9876\u70b9\u5728\u4e0e\u73b0\u5728\u7684\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u76f8\u4e58\u540e\u4ecd\u4e3a\u6b63\u65b9\u5411\uff08\u8be6\u89c1\u6559\u7a0b \u9762\u5254\u9664 \uff09\u3002 \u5411\u6e38\u620f\u4e2d\u52a0\u5165 TextRenderer \u5e76\u4e0d\u96be\uff1a TextRenderer *Text; void Game::Init() { [...] Text = new TextRenderer(this->Width, this->Height); Text->Load(\"fonts/ocraext.TTF\", 24); } \u4f7f\u7528\u4e00\u4e2a\u540d\u4e3aOCR A Extended\u7684\u5b57\u4f53\u6765\u521d\u59cb\u5316\u6587\u672c\u6e32\u67d3\u5668\uff0c\u8be5\u5b57\u4f53\u53ef\u4ee5\u4ece \u8fd9\u91cc \u4e0b\u8f7d\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u4e0d\u540c\u7684\u5b57\u4f53\uff0c\u5982\u679c\u4e0d\u5f88\u559c\u6b22\u8fd9\u4e2a\u5b57\u4f53\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u6587\u672c\u6e32\u67d3\u5668\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u5b8c\u6210\u6e38\u620f\u673a\u5236\u3002","title":"\u6e32\u67d3\u6587\u672c"},{"location":"06%20In%20Practice/2D-Game/10%20Render%20Text/#_2","text":"\u5f53\u7403\u78b0\u5230\u5e95\u90e8\u8fb9\u754c\u65f6\uff0c\u6211\u4eec\u4f1a\u7ed9\u73a9\u5bb6\u989d\u5916\u7684\u51e0\u6b21\u673a\u4f1a\uff0c\u800c\u4e0d\u662f\u7acb\u5373\u91cd\u7f6e\u6e38\u620f\u3002\u6211\u4eec\u4f7f\u7528\u73a9\u5bb6\u751f\u547d\u503c\u7684\u5f62\u5f0f\u6765\u5b9e\u73b0\uff0c\u73a9\u5bb6\u5f00\u59cb\u65f6\u4f1a\u6709\u521d\u59cb\u6570\u91cf\u7684\u751f\u547d\u503c\uff08\u6bd4\u5982 3 \uff09\uff0c\u6bcf\u5f53\u7403\u78b0\u5230\u5e95\u90e8\u8fb9\u754c\uff0c\u73a9\u5bb6\u7684\u751f\u547d\u503c\u603b\u6570\u4f1a\u51cf 1 \u3002\u53ea\u6709\u5f53\u73a9\u5bb6\u751f\u547d\u503c\u53d8\u4e3a 0 \u65f6\u624d\u4f1a\u91cd\u7f6e\u6e38\u620f\u3002\u8fd9\u6837\u5bf9\u73a9\u5bb6\u6765\u8bf4\u5b8c\u6210\u5173\u5361\u4f1a\u7a0d\u5bb9\u6613\u4e00\u70b9\uff0c\u540c\u65f6\u4e5f\u4f1a\u611f\u53d7\u5230\u96be\u5ea6\u3002 \u6211\u4eec\u5411game\u7c7b\u4e2d\u589e\u52a0\u73a9\u5bb6\u7684\u751f\u547d\u503c\u4ee5\u8bb0\u5f55\u5b83\uff08\u5728\u6784\u9020\u51fd\u6570\u4e2d\u5c06\u5176\u521d\u59cb\u5316\u4e3a 3 \uff09\u3002 class Game { [...] public: GLuint Lives; } \u63a5\u4e0b\u6765\u6211\u4eec\u4fee\u6539game\u7c7b\u7684 update \u51fd\u6570\uff0c\u4e0d\u518d\u91cd\u7f6e\u6e38\u620f\uff0c\u800c\u662f\u51cf\u5c11\u73a9\u5bb6\u751f\u547d\u503c\uff0c\u53ea\u6709\u5f53\u751f\u547d\u503c\u4e3a 0 \u65f6\u91cd\u7f6e\u6e38\u620f\u3002 void Game::Update(GLfloat dt) { [...] if (Ball->Position.y >= this->Height) // \u7403\u662f\u5426\u63a5\u89e6\u5230\u5e95\u90e8\u8fb9\u754c? { --this->Lives; // \u73a9\u5bb6\u662f\u5426\u5df2\u5931\u53bb\u6240\u6709\u751f\u547d\u503c? : \u6e38\u620f\u7ed3\u675f if (this->Lives == 0) { this->ResetLevel(); this->State = GAME_MENU; } this->ResetPlayer(); } } \u4e00\u65e6\u73a9\u5bb6\u6e38\u620f\u7ed3\u675f\uff08 lives \u7b49\u4e8e 0 \uff09\uff0c\u6211\u4eec\u4f1a\u91cd\u7f6e\u5173\u5361\uff0c\u5e76\u5c06\u6e38\u620f\u72b6\u6001\u6539\u53d8\u4e3a GAME_MENU \uff0c\u7a0d\u540e\u4f1a\u8be6\u7ec6\u8bb2\u3002 \u6ce8\u610f\u4e0d\u8981\u5fd8\u4e86\u5728\u91cd\u7f6e\u6e38\u620f/\u5173\u5361\u65f6\u91cd\u7f6e\u73a9\u5bb6\u751f\u547d\u503c\uff1a void Game::ResetLevel() { [...] this->Lives = 3; } \u6b64\u65f6\u73a9\u5bb6\u751f\u547d\u503c\u5df2\u53ef\u4ee5\u8fd0\u4f5c\uff0c\u4f46\u73a9\u5bb6\u5728\u6e38\u620f\u65f6\u5374\u65e0\u6cd5\u770b\u5230\u81ea\u5df1\u5f53\u524d\u6709\u591a\u5c11\u751f\u547d\u503c\u3002\u8fd9\u65f6\u5c31\u9700\u8981\u52a0\u5165\u6587\u672c\u6e32\u67d3\u5668\u3002 void Game::Render() { if (this->State == GAME_ACTIVE) { [...] std::stringstream ss; ss << this->Lives; Text->RenderText(\"Lives:\" + ss.str(), 5.0f, 5.0f, 1.0f); } } \u8fd9\u91cc\u6211\u4eec\u5c06\u751f\u547d\u503c\u6570\u91cf\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u5176\u663e\u793a\u5728\u5c4f\u5e55\u5de6\u4e0a\u89d2\u3002\u770b\u8d77\u6765\u5c06\u4f1a\u662f\u50cf\u8fd9\u6837\uff1a \u4e00\u65e6\u7403\u63a5\u89e6\u5230\u5e95\u90e8\u8fb9\u754c\uff0c\u73a9\u5bb6\u7684\u751f\u547d\u503c\u4f1a\u51cf\u5c11\uff0c\u8fd9\u4f1a\u5728\u5c4f\u5e55\u5de6\u4e0a\u89d2\u76f4\u63a5\u53ef\u89c1\u3002","title":"\u73a9\u5bb6\u751f\u547d\u503c"},{"location":"06%20In%20Practice/2D-Game/10%20Render%20Text/#_3","text":"\u5f53\u73a9\u5bb6\u6240\u5904\u6e38\u620f\u72b6\u6001\u4e3a GAME_MENU \u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u73a9\u5bb6\u53ef\u4ee5\u63a7\u5236\u9009\u62e9\u4ed6\u60f3\u73a9\u7684\u5173\u5361\u3002\u73a9\u5bb6\u5e94\u8be5\u53ef\u4ee5\u4f7f\u7528\u2019w\u2019\u6216\u2019s\u2019\u952e\u5728\u6211\u4eec\u52a0\u8f7d\u7684\u6240\u6709\u5173\u5361\u4e2d\u6eda\u52a8\u9009\u62e9\u3002\u5f53\u73a9\u5bb6\u611f\u89c9\u9009\u4e2d\u7684\u662f\u4ed6\u60f3\u73a9\u7684\u5173\u5361\u65f6\uff0c\u4ed6\u53ef\u4ee5\u6309\u56de\u8f66\u952e\u5c06\u6e38\u620f\u72b6\u6001\u4ece GAME_MENU \u5207\u6362\u5230 GAME_ACTIVE \u3002 \u5141\u8bb8\u73a9\u5bb6\u9009\u62e9\u5173\u5361\u5e76\u4e0d\u96be\u3002\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u5f53\u73a9\u5bb6\u6309\u4e0b\u2019w\u2019\u6216\u2019s\u2019\u952e\u65f6\u5206\u522b\u589e\u52a0\u6216\u51cf\u5c0fgame\u7c7b\u4e2d\u7684\u53d8\u91cf Level \u7684\u503c\uff1a if (this->State == GAME_MENU) { if (this->Keys[GLFW_KEY_ENTER]) this->State = GAME_ACTIVE; if (this->Keys[GLFW_KEY_W]) this->Level = (this->Level + 1) % 4; if (this->Keys[GLFW_KEY_S]) { if (this->Level > 0) --this->Level; else this->Level = 3; } } \u6211\u4eec\u4f7f\u7528\u53d6\u6a21\u8fd0\u7b97( % )\u4ee5\u4fdd\u8bc1\u53d8\u91cf Level \u5728\u53ef\u63a5\u53d7\u7684\u5173\u5361\u503c\u8303\u56f4\u5185\uff08 0 \u548c 3 \u4e4b\u95f4\uff09\u3002\u9664\u4e86\u53d8\u6362\u5173\u5361\u4e4b\u5916\uff0c\u5728\u83dc\u5355\u72b6\u6001\u65f6\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u5176\u6e32\u67d3\u51fa\u6765\u3002\u6211\u4eec\u8981\u7ed9\u73a9\u5bb6\u4e00\u4e9b\u6587\u672c\u5f62\u5f0f\u7684\u6307\u793a\uff0c\u5e76\u5728\u80cc\u666f\u4e2d\u5c55\u793a\u51fa\u9009\u4e2d\u7684\u5173\u5361\u3002 void Game::Render() { if (this->State == GAME_ACTIVE || this->State == GAME_MENU) { [...] // \u6e38\u620f\u72b6\u6001\u6e32\u67d3\u4ee3\u7801 } if (this->State == GAME_MENU) { Text->RenderText(\"Press ENTER to start\", 250.0f, Height / 2, 1.0f); Text->RenderText(\"Press W or S to select level\", 245.0f, Height / 2 + 20.0f, 0.75f); } } \u8fd9\u91cc\u65e0\u8bba\u6e38\u620f\u5904\u5728 GAME_ACTIVE \u72b6\u6001\u8fd8\u662f GAME_MENU \u72b6\u6001\uff0c\u90fd\u4f1a\u6e32\u67d3\u6e38\u620f\uff0c\u5f53\u6e38\u620f\u5904\u5728 GAME_MENU \u72b6\u6001\u9700\u8981\u6e32\u67d3\u4e24\u884c\u6587\u672c\u7528\u4e8e\u544a\u77e5\u73a9\u5bb6\u9009\u62e9\u4e00\u4e2a\u5173\u5361\u5e76\u4e14/\u6216\u8005\u786e\u8ba4\u9009\u62e9\u3002\u6ce8\u610f\uff0c\u4e3a\u6b64\u5fc5\u987b\u5728\u542f\u52a8\u6e38\u620f\u65f6\u5c06\u6e38\u620f\u72b6\u6001\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a GAME_MENU \u3002 \u770b\u8d77\u6765\u5f88\u68d2\uff0c\u4f46\u5f53\u4f60\u8bd5\u56fe\u8fd0\u884c\u4ee3\u7801\u4f60\u5f88\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\uff0c\u5f53\u6309\u4e0b\u2019w\u2019\u6216\u2019s\u2019\u952e\u65f6\uff0c\u6e38\u620f\u4f1a\u5728\u5173\u5361\u4e4b\u524d\u5feb\u901f\u6eda\u52a8\uff0c\u5f88\u96be\u9009\u4e2d\u4f60\u60f3\u73a9\u7684\u5173\u5361\u3002\u8fd9\u662f\u56e0\u4e3agame\u4f1a\u5728\u591a\u5e27\u8bb0\u5f55\u6309\u952e\u76f4\u5230\u6309\u952e\u677e\u5f00\u3002\u8fd9\u5c06\u5bfc\u81f4 ProcessInput \u51fd\u6570\u5904\u7406\u6309\u4e0b\u7684\u952e\u4e0d\u6b62\u4e00\u6b21\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528GUI\u7cfb\u7edf\u4e2d\u5e38\u89c1\u7684\u4e00\u4e2a\u5c0f\u6280\u5de7\u6765\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002\u8fd9\u4e00\u5c0f\u6280\u5de7\u5c31\u662f\uff1a\u4e0d\u4ec5\u8bb0\u5f55\u5f53\u524d\u6309\u4e0b\u7684\u952e\uff0c\u5e76\u4e14\u5b58\u50a8\u5df2\u7ecf\u88ab\u6309\u4e0b\u7684\u952e\uff0c\u76f4\u5230\u518d\u6b21\u677e\u5f00\u3002\u7136\u540e\u6211\u4eec\u4f1a\u68c0\u67e5\uff08\u5728\u5904\u7406\u4e4b\u524d\uff09\u662f\u5426\u8fd8\u6ca1\u6709\u88ab\u5904\u7406\uff0c\u5982\u679c\u6ca1\u6709\u88ab\u5904\u7406\u7684\u8bdd\uff0c\u5904\u7406\u8be5\u6309\u952e\u5e76\u5c06\u5176\u5b58\u50a8\u4e3a\u6b63\u5728\u88ab\u5904\u7406\u3002\u4e00\u65e6\u6211\u4eec\u8981\u5728\u672a\u677e\u5f00\u65f6\u518d\u6b21\u5904\u7406\u76f8\u540c\u7684\u6309\u952e\uff0c\u6211\u4eec\u5c06\u4e0d\u4f1a\u5904\u7406\u8be5\u6309\u952e\u3002\u8fd9\u542c\u8d77\u6765\u8ba9\u4eba\u7a0d\u5fae\u8ff7\u60d1\uff0c\u4f46\u5f53\u4f60\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u89c1\u5230\u5b83\uff0c\uff08\u5f88\u53ef\u80fd\uff09\u5c31\u4f1a\u660e\u767d\u5b83\u7684\u610f\u4e49\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u521b\u5efa\u53e6\u4e00\u4e2a\u5e03\u5c14\u6570\u7ec4\u7528\u6765\u8868\u793a\u5904\u7406\u8fc7\u7684\u6309\u952e\u3002\u6211\u4eec\u5728game\u7c7b\u5b9a\u4e49\u5982\u4e0b\uff1a class Game { [...] public: GLboolean KeysProcessed[1024]; } \u5f53\u76f8\u5bf9\u5e94\u7684\u6309\u952e\u88ab\u5904\u7406\u65f6\uff0c\u6211\u4eec\u5c06\u5176\u8bbe\u7f6e\u4e3a true \uff0c\u4ee5\u786e\u4fdd\u6309\u952e\u53ea\u5728\u4e4b\u524d\u6ca1\u6709\u88ab\u5904\u7406\u8fc7\uff08\u76f4\u5230\u677e\u5f00\uff09\u65f6\u5c06\u5176\u5904\u7406\u3002 void Game::ProcessInput(GLfloat dt) { if (this->State == GAME_MENU) { if (this->Keys[GLFW_KEY_ENTER] && !this->KeysProcessed[GLFW_KEY_ENTER]) { this->State = GAME_ACTIVE; this->KeysProcessed[GLFW_KEY_ENTER] = GL_TRUE; } if (this->Keys[GLFW_KEY_W] && !this->KeysProcessed[GLFW_KEY_W]) { this->Level = (this->Level + 1) % 4; this->KeysProcessed[GLFW_KEY_W] = GL_TRUE; } if (this->Keys[GLFW_KEY_S] && !this->KeysProcessed[GLFW_KEY_S]) { if (this->Level > 0) --this->Level; else this->Level = 3; this->KeysProcessed[GLFW_KEY_S] = GL_TRUE; } } [...] } \u73b0\u5728\uff0c\u5f53 KeysProcessed \u6570\u7ec4\u4e2d\u6309\u952e\u7684\u503c\u672a\u88ab\u8bbe\u7f6e\u65f6\uff0c\u6211\u4eec\u4f1a\u5904\u7406\u6309\u952e\u5e76\u5c06\u5176\u503c\u8bbe\u4e3a true \u3002\u4e0b\u4e00\u6b21\u5f53\u5230\u8fbe\u540c\u4e00\u6309\u952e\u7684 if \u6761\u4ef6\u65f6\uff0c\u5b83\u5df2\u7ecf\u88ab\u5904\u7406\u8fc7\u4e86\u6240\u4ee5\u6211\u4eec\u4f1a\u5047\u88c5\u5e76\u6ca1\u6709\u6309\u4e0b\u6b64\u952e\uff0c\u76f4\u5230\u5b83\u88ab\u677e\u5f00\u3002 \u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u5728\u677e\u5f00\u6309\u952e\u65f6\u901a\u8fc7GLFW\u7684\u6309\u952e\u56de\u8c03\u51fd\u6570\uff0c\u91cd\u7f6e\u6309\u952e\u5904\u7406\u540e\u7684\u503c\uff0c\u4ee5\u4fbf\u4e8e\u4e0b\u6b21\u518d\u5904\u7406\uff1a void key_callback(GLFWwindow* window, int key, int scancode, int action, int mode) { [...] if (key >= 0 && key < 1024) { if (action == GLFW_PRESS) Breakout.Keys[key] = GL_TRUE; else if (action == GLFW_RELEASE) { Breakout.Keys[key] = GL_FALSE; Breakout.KeysProcessed[key] = GL_FALSE; } } } \u542f\u52a8\u6e38\u620f\u4f1a\u5c55\u793a\u4e00\u4e2a\u6574\u6d01\u7684\u5173\u5361\u9009\u62e9\u754c\u9762\uff0c\u73b0\u5728\u53ef\u4ee5\u6bcf\u6b21\u6309\u952e\u6e05\u6670\u5730\u9009\u62e9\u4e00\u4e2a\u5173\u5361\uff0c\u65e0\u8bba\u6309\u952e\u88ab\u6309\u4e0b\u591a\u4e45\u3002","title":"\u5173\u5361\u9009\u62e9"},{"location":"06%20In%20Practice/2D-Game/10%20Render%20Text/#_4","text":"\u73b0\u5728\u73a9\u5bb6\u53ef\u4ee5\u9009\u62e9\u5173\u5361\u3001\u73a9\u6e38\u620f\u548c\u6e38\u620f\u5931\u8d25\u3002\u6709\u4e9b\u4e0d\u5e78\u7684\u662f\u73a9\u5bb6\u5728\u6d88\u9664\u4e86\u6240\u6709\u7684\u7816\u5757\u4e4b\u540e\u4f1a\u53d1\u73b0\u65e0\u6cd5\u83b7\u5f97\u6e38\u620f\u80dc\u5229\u3002\u73b0\u5728\u6765\u4fee\u590d\u6b64\u95ee\u9898\u3002 \u5728\u6240\u6709\u5b9e\u4f53\u7816\u5757\u88ab\u6d88\u9664\u4e4b\u540e\u73a9\u5bb6\u4f1a\u53d6\u5f97\u80dc\u5229\u3002\u6211\u4eec\u5df2\u7ecf\u5728 GameLevel \u7c7b\u521b\u5efa\u4e86\u4e00\u4e2a\u51fd\u6570\u7528\u4e8e\u68c0\u67e5\u8fd9\u4e00\u6761\u4ef6\uff1a GLboolean GameLevel::IsCompleted() { for (GameObject &tile : this->Bricks) if (!tile.IsSolid && !tile.Destroyed) return GL_FALSE; return GL_TRUE; } \u6211\u4eec\u4f1a\u68c0\u67e5\u6e38\u620f\u5173\u5361\u6240\u6709\u7684\u7816\u5757\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u975e\u5b9e\u4f53\u7816\u5757\u672a\u88ab\u6d88\u9664\u5219\u8fd4\u56de false \u3002\u6211\u4eec\u6240\u8981\u505a\u7684\u5c31\u662f\u5728 Update \u51fd\u6570\u4e2d\u68c0\u67e5\u6b64\u6761\u4ef6\uff0c\u4e00\u65e6\u8fd4\u56de true \uff0c\u6211\u4eec\u5c31\u5c06\u6e38\u620f\u72b6\u6001\u6539\u53d8\u4e3a GAME_WIN \uff1a void Game::Update(GLfloat dt) { [...] if (this->State == GAME_ACTIVE && this->Levels[this->Level].IsCompleted()) { this->ResetLevel(); this->ResetPlayer(); Effects->Chaos = GL_TRUE; this->State = GAME_WIN; } } \u5728\u6e38\u620f\u6fc0\u6d3b\u72b6\u6001\uff0c\u5f53\u5173\u5361\u5b8c\u6210\u65f6\uff0c\u6211\u4eec\u4f1a\u91cd\u7f6e\u6e38\u620f\u5e76\u4e14\u5728 GAME_WIN \u72b6\u6001\u5c55\u793a\u4e00\u6761\u5c0f\u7684\u80dc\u5229\u7684\u6d88\u606f\u3002\u4e3a\u4e86\u589e\u52a0\u8da3\u5473\u6027\u6211\u4eec\u4f1a\u5728 GAME_WIN \u754c\u9762\u542f\u7528\u6df7\u6c8c\u6548\u5e94\u3002\u5728\u51fd\u6570 Render \u4e2d\u6211\u4eec\u4f1a\u795d\u8d3a\u73a9\u5bb6\u5e76\u8be2\u95ee\u5176\u91cd\u65b0\u5f00\u59cb\u8fd8\u662f\u9000\u51fa\u6e38\u620f\u3002 void Game::Render() { [...] if (this->State == GAME_WIN) { Text->RenderText( \"You WON!!!\", 320.0, Height / 2 - 20.0, 1.0, glm::vec3(0.0, 1.0, 0.0) ); Text->RenderText( \"Press ENTER to retry or ESC to quit\", 130.0, Height / 2, 1.0, glm::vec3(1.0, 1.0, 0.0) ); } } \u4e4b\u540e\u6211\u4eec\u5f53\u7136\u4e5f\u8981\u5904\u7406\u4e4b\u524d\u63d0\u5230\u7684\u6309\u952e\uff1a void Game::ProcessInput(GLfloat dt) { [...] if (this->State == GAME_WIN) { if (this->Keys[GLFW_KEY_ENTER]) { this->KeysProcessed[GLFW_KEY_ENTER] = GL_TRUE; Effects->Chaos = GL_FALSE; this->State = GAME_MENU; } } } \u4e4b\u540e\u5982\u679c\u4f60\u771f\u7684\u53ef\u4ee5\u8d62\u5f97\u6e38\u620f\uff0c\u4f60\u5c06\u4f1a\u770b\u5230\u4ee5\u4e0b\u56fe\u7247\uff1a \u5c31\u662f\u8fd9\u6837\uff01\u8fd9\u662f\u6e38\u620fBreakout\u6211\u4eec\u8981\u5904\u7406\u7684\u6700\u540e\u4e00\u5757\u62fc\u56fe\u3002\u5c1d\u8bd5\u6309\u7167\u81ea\u5df1\u7684\u610f\u613f\u81ea\u5b9a\u4e49\u5e76\u628a\u5b83\u5c55\u793a\u7ed9\u4f60\u7684\u5bb6\u4eba\u548c\u670b\u53cb\uff01 \u4ee5\u4e0b\u662f\u6700\u7ec8\u7248\u7684\u6e38\u620f\u4ee3\u7801\uff1a Game : header , code .","title":"\u83b7\u80dc"},{"location":"06%20In%20Practice/2D-Game/11%20Final%20thoughts/","text":"\u7ed3\u8bed \u539f\u6587 Final thoughts \u4f5c\u8005 JoeydeVries \u7ffb\u8bd1 \u5305\u7eb8 \u6821\u5bf9 \u6682\u65e0 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u4e0e\u4ec5\u4ec5\u662f\u7528OpenGL\u521b\u5efa\u4e00\u4e2a\u6280\u672f\u6f14\u793a\u76f8\u6bd4\uff0c\u8fd9\u4e00\u6574\u7ae0\u7684\u6559\u7a0b\u7ed9\u6211\u4eec\u4e86\u4e00\u6b21\u4f53\u9a8c\u5728\u6b64\u4e4b\u4e0a\u7684\u66f4\u591a\u5185\u5bb9\u7684\u673a\u4f1a\u3002\u6211\u4eec\u4ece\u96f6\u5f00\u59cb\u5236\u4f5c\u4e86\u4e00\u4e2a2D\u6e38\u620f\uff0c\u5e76\u5b66\u4e60\u4e86\u5982\u4f55\u5bf9\u7279\u5b9a\u7684\u5e95\u5c42\u56fe\u5f62\u5b66\u6982\u5ff5\u8fdb\u884c\u62bd\u8c61\u3001\u4f7f\u7528\u57fa\u7840\u7684\u78b0\u649e\u68c0\u6d4b\u6280\u672f\u3001\u521b\u5efa\u7c92\u5b50\u3001\u5c55\u793a\u57fa\u4e8e\u6b63\u5c04\u6295\u5f71\u77e9\u9635\u7684\u573a\u666f\u3002\u6240\u6709\u7684\u8fd9\u4e9b\u90fd\u4f7f\u7528\u4e86\u4e4b\u524d\u6559\u7a0b\u4e2d\u8ba8\u8bba\u8fc7\u7684\u6982\u5ff5\u3002\u6211\u4eec\u5e76\u6ca1\u6709\u771f\u6b63\u5730\u5b66\u4e60\u548c\u4f7f\u7528OpenGL\u4e2d\u65b0\u7684\u3001\u4ee4\u4eba\u5174\u594b\u7684\u56fe\u5f62\u6280\u672f\uff0c\u66f4\u591a\u7684\u662f\u5728\u5c06\u6240\u6709\u77e5\u8bc6\u6574\u5408\u81f3\u4e00\u4e2a\u66f4\u5927\u7684\u6574\u4f53\u4e2d\u3002 Breakout\u8fd9\u6837\u7684\u4e00\u4e2a\u7b80\u5355\u6e38\u620f\u7684\u5236\u4f5c\u53ef\u4ee5\u88ab\u6570\u5343\u79cd\u65b9\u6cd5\u5b8c\u6210\uff0c\u800c\u6211\u4eec\u7684\u505a\u6cd5\u4e5f\u53ea\u662f\u5176\u4e2d\u4e4b\u4e00\u3002\u968f\u7740\u6e38\u620f\u8d8a\u6765\u8d8a\u5e9e\u5927\uff0c\u4f60\u5f00\u59cb\u5e94\u7528\u7684\u62bd\u8c61\u601d\u60f3\u4e0e\u8bbe\u8ba1\u6a21\u5f0f\u5c31\u4f1a\u8d8a\u591a\u3002\u5982\u679c\u5e0c\u671b\u8fdb\u884c\u66f4\u6df1\u5165\u7684\u5b66\u4e60\u4e0e\u9605\u8bfb\uff0c\u4f60\u53ef\u4ee5\u5728 game programming patterns \u627e\u5230\u5927\u90e8\u5206\u7684\u62bd\u8c61\u601d\u60f3\u4e0e\u8bbe\u8ba1\u6a21\u5f0f\u3002\uff08\u8bd1\u6ce8\uff1a\u300a\u6e38\u620f\u7f16\u7a0b\u6a21\u5f0f\u300b\u4e00\u4e66\u56fd\u5185\u5df2\u6709\u4e2d\u6587\u7ffb\u8bd1\u7248\uff0cGPP\u7ffb\u8bd1\u7ec4\u8bd1\uff0c\u4eba\u6c11\u90ae\u7535\u51fa\u7248\u793e\uff09 \u8bf7\u8bb0\u4f4f\uff0c\u7f16\u5199\u51fa\u4e00\u4e2a\u6709\u7740\u975e\u5e38\u5e72\u51c0\u3001\u8003\u8651\u5468\u5168\u7684\u4ee3\u7801\u7684\u6e38\u620f\u662f\u4e00\u4ef6\u5f88\u56f0\u96be\u7684\u4efb\u52a1\uff08\u51e0\u4e4e\u4e0d\u53ef\u80fd\uff09\u3002\u4f60\u53ea\u9700\u8981\u5728\u7f16\u5199\u6e38\u620f\u65f6\u4f7f\u7528\u5728\u5f53\u65f6\u4f60\u8ba4\u4e3a\u6b63\u786e\u7684\u65b9\u6cd5\u3002\u968f\u7740\u4f60\u5bf9\u89c6\u9891\u6e38\u620f\u5f00\u53d1\u7684\u5b9e\u8df5\u8d8a\u6765\u8d8a\u591a\uff0c\u4f60\u5b66\u4e60\u7684\u65b0\u7684\u3001\u66f4\u597d\u5730\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\u5c31\u8d8a\u591a\u3002\u4e0d\u5fc5\u56e0\u4e3a\u7f16\u5199\u201c\u5b8c\u7f8e\u201d\u4ee3\u7801\u7684\u56f0\u96be\u611f\u5230\u632b\u8d25\uff0c\u575a\u6301\u7f16\u7a0b\u5427\uff01 \u4f18\u5316 \u8fd9\u4e9b\u6559\u7a0b\u7684\u5185\u5bb9\u548c\u76ee\u524d\u5df2\u5b8c\u6210\u7684\u6e38\u620f\u4ee3\u7801\u7684\u5173\u6ce8\u70b9\u90fd\u5728\u4e8e\u5982\u4f55\u5c3d\u53ef\u80fd\u7b80\u5355\u5730\u9610\u8ff0\u6982\u5ff5\uff0c\u800c\u6ca1\u6709\u6df1\u5165\u5730\u4f18\u5316\u7ec6\u8282\u3002\u56e0\u6b64\uff0c\u5f88\u591a\u6027\u80fd\u76f8\u5173\u7684\u8003\u8651\u90fd\u88ab\u5ffd\u7565\u4e86\u3002\u4e3a\u4e86\u5728\u6e38\u620f\u7684\u5e27\u7387\u5f00\u59cb\u4e0b\u964d\u65f6\u53ef\u4ee5\u63d0\u9ad8\u6027\u80fd\uff0c\u6211\u4eec\u5c06\u5217\u51fa\u4e00\u4e9b\u73b0\u4ee3\u76842D OpenGL\u6e38\u620f\u4e2d\u5e38\u89c1\u7684\u6539\u8fdb\u65b9\u6848\u3002 \u6e32\u67d3\u7cbe\u7075\u8868\u5355/\u7eb9\u7406\u56fe\u8c31(Sprite sheet / Texture atlas) \uff1a\u4ee3\u66ff\u4f7f\u7528\u5355\u4e2a\u6e32\u67d3\u7cbe\u7075\u6e32\u67d3\u5355\u4e2a\u7eb9\u7406\u7684\u6e32\u67d3\u65b9\u5f0f\uff0c\u6211\u4eec\u5c06\u6240\u6709\u9700\u8981\u7528\u5230\u7684\u7eb9\u7406\u7ec4\u5408\u5230\u5355\u4e2a\u5927\u7eb9\u7406\u4e2d\uff08\u5982\u540c\u4f4d\u56fe\u5b57\u4f53\uff09\uff0c\u5e76\u7528\u7eb9\u7406\u5750\u6807\u6765\u9009\u62e9\u5408\u9002\u7684\u7cbe\u7075\u4e0e\u7eb9\u7406\u3002\u5207\u6362\u7eb9\u7406\u72b6\u6001\u662f\u975e\u5e38\u6602\u8d35\u7684\u64cd\u4f5c\uff0c\u800c\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u8ba9\u6211\u4eec\u51e0\u4e4e\u53ef\u4ee5\u4e0d\u7528\u5728\u7eb9\u7406\u95f4\u8fdb\u884c\u5207\u6362\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd9\u6837\u505a\u8fd8\u53ef\u4ee5\u8ba9GPU\u66f4\u6709\u6548\u7387\u5730\u7f13\u5b58\u7eb9\u7406\uff0c\u83b7\u5f97\u66f4\u5feb\u7684\u67e5\u627e\u901f\u5ea6\u3002\uff08\u8bd1\u6ce8\uff1acache\u7684\u5c40\u90e8\u6027\u539f\u7406\uff09 \u5b9e\u4f8b\u5316\u6e32\u67d3 \uff1a\u4ee3\u66ff\u4e00\u6b21\u53ea\u6e32\u67d3\u4e00\u4e2a\u56db\u8fb9\u5f62\u7684\u6e32\u67d3\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u60f3\u8981\u6e32\u67d3\u7684\u6240\u6709\u56db\u8fb9\u5f62\u6279\u91cf\u5316\uff0c\u5e76\u4f7f\u7528 \u5b9e\u4f8b\u5316\u6e32\u67d3 \u5728\u4e00\u6b21<> draw call \u4e2d\u6210\u6279\u5730\u6e32\u67d3\u56db\u8fb9\u5f62\u3002\u8fd9\u5f88\u5bb9\u6613\u5b9e\u73b0\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u7cbe\u7075\u90fd\u7531\u76f8\u540c\u7684\u9876\u70b9\u7ec4\u6210\uff0c\u4e0d\u540c\u4e4b\u5904\u53ea\u6709\u4e00\u4e2a\u6a21\u578b\u77e9\u9635(Model Matrix)\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u5176\u5305\u542b\u5728\u4e00\u4e2a\u5b9e\u4f8b\u5316\u6570\u7ec4\u4e2d\u3002\u8fd9\u6837\u53ef\u4ee5\u4f7fOpenGL\u6bcf\u5e27\u6e32\u67d3\u66f4\u591a\u7684\u7cbe\u7075\u3002\u5b9e\u4f8b\u5316\u6e32\u67d3\u4e5f\u53ef\u4ee5\u7528\u6765\u6e32\u67d3\u7c92\u5b50\u548c\u5b57\u7b26\u5b57\u5f62\u3002 \u4e09\u89d2\u5f62\u5e26(Triangle Strips) \uff1a\u4ee3\u66ff\u6bcf\u6b21\u6e32\u67d3\u4e24\u4e2a\u4e09\u89d2\u5f62\u7684\u6e32\u67d3\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528OpenGL\u7684 TRIANGLE_STRIP \u6e32\u67d3\u56fe\u5143\u6e32\u67d3\u5b83\u4eec\uff0c\u53ea\u97004\u4e2a\u9876\u70b9\u800c\u975e6\u4e2a\u3002\u8fd9\u8282\u7ea6\u4e86\u4e09\u5206\u4e4b\u4e00\u9700\u8981\u4f20\u9012\u7ed9GPU\u7684\u6570\u636e\u91cf\u3002 \u7a7a\u95f4\u5212\u5206(Space partition)\u7b97\u6cd5 \uff1a\u5f53\u68c0\u67e5\u53ef\u80fd\u53d1\u751f\u7684\u78b0\u649e\u65f6\uff0c\u6211\u4eec\u5c06\u5c0f\u7403\u4e0e\u5f53\u524d\u5173\u5361\u4e2d\u7684\u6bcf\u4e00\u4e2a\u7816\u5757\u8fdb\u884c\u6bd4\u8f83\uff0c\u8fd9\u4e48\u505a\u6709\u4e9b\u6d6a\u8d39CPU\u8d44\u6e90\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5f97\u77e5\u5728\u8fd9\u4e00\u5e27\u4e2d\uff0c\u5927\u591a\u6570\u7816\u5757\u90fd\u4e0d\u4f1a\u4e0e\u5c0f\u7403\u5f88\u63a5\u8fd1\u3002\u4f7f\u7528BSP\uff0c\u516b\u53c9\u6811(Octress)\u6216k-d(imension)\u6811\u7b49\u7a7a\u95f4\u5212\u5206\u7b97\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u53ef\u89c1\u7684\u7a7a\u95f4\u5212\u5206\u6210\u8bb8\u591a\u8f83\u5c0f\u7684\u533a\u57df\uff0c\u5e76\u5224\u65ad\u5c0f\u7403\u662f\u5426\u5728\u8fd9\u4e2a\u533a\u57df\u4e2d\uff0c\u4ece\u800c\u4e3a\u6211\u4eec\u7701\u53bb\u5927\u91cf\u7684\u78b0\u649e\u68c0\u67e5\u3002\u5bf9\u4e8eBreakout\u8fd9\u6837\u7684\u7b80\u5355\u6e38\u620f\u6765\u8bf4\uff0c\u8fd9\u53ef\u80fd\u662f\u8fc7\u5ea6\u7684\uff0c\u4f46\u5bf9\u4e8e\u6709\u7740\u66f4\u590d\u6742\u7684\u78b0\u649e\u68c0\u6d4b\u7b97\u6cd5\u7684\u590d\u6742\u6e38\u620f\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u53ef\u4ee5\u663e\u8457\u5730\u63d0\u9ad8\u6027\u80fd\u3002 \u6700\u5c0f\u5316\u72b6\u6001\u95f4\u7684\u8f6c\u6362 \uff1a\u72b6\u6001\u95f4\u7684\u53d8\u5316\uff08\u5982\u7ed1\u5b9a\u7eb9\u7406\u6216\u5207\u6362\u7740\u8272\u5668\uff09\u5728OpenGL\u4e2d\u975e\u5e38\u6602\u8d35\uff0c\u56e0\u6b64\u4f60\u9700\u8981\u907f\u514d\u5927\u91cf\u7684\u72b6\u6001\u53d8\u5316\u3002\u4e00\u79cd\u6700\u5c0f\u5316\u72b6\u6001\u95f4\u53d8\u5316\u7684\u65b9\u6cd5\u662f\u521b\u5efa\u81ea\u5df1\u7684\u72b6\u6001\u7ba1\u7406\u5668\u6765\u5b58\u50a8OpenGL\u72b6\u6001\u7684\u5f53\u524d\u503c\uff08\u6bd4\u5982\u7ed1\u5b9a\u4e86\u54ea\u4e2a\u7eb9\u7406\uff09\uff0c\u5e76\u4e14\u53ea\u5728\u9700\u8981\u6539\u53d8\u65f6\u8fdb\u884c\u5207\u6362\uff0c\u8fd9\u53ef\u4ee5\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u72b6\u6001\u53d8\u5316\u3002\u53e6\u5916\u4e00\u79cd\u65b9\u5f0f\u662f\u57fa\u4e8e\u72b6\u6001\u5207\u6362\u5bf9\u6240\u6709\u9700\u8981\u6e32\u67d3\u7684\u7269\u4f53\u8fdb\u884c\u6392\u5e8f\u3002\u9996\u5148\u6e32\u67d3\u4f7f\u7528\u7740\u8272\u5668A\u7684\u6240\u6709\u5bf9\u8c61\uff0c\u7136\u540e\u6e32\u67d3\u4f7f\u7528\u7740\u8272\u5668B\u7684\u6240\u6709\u5bf9\u8c61\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u5f53\u7136\u8fd9\u53ef\u4ee5\u6269\u5c55\u5230\u7740\u8272\u5668\u3001\u7eb9\u7406\u7ed1\u5b9a\u3001\u5e27\u7f13\u51b2\u5207\u6362\u7b49\u3002 \u8fd9\u4e9b\u5e94\u8be5\u53ef\u4ee5\u7ed9\u4f60\u4e00\u4e9b\u5173\u4e8e\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4ec0\u4e48\u6837\u7684\u7684\u9ad8\u7ea7\u6280\u5de7\u8fdb\u4e00\u6b65\u63d0\u9ad82D\u6e38\u620f\u6027\u80fd\u5730\u63d0\u793a\u3002\u8fd9\u4e5f\u8ba9\u4f60\u611f\u53d7\u5230\u4e86OpenGL\u7684\u5f3a\u5927\u529f\u80fd\u3002\u901a\u8fc7\u4eb2\u624b\u5b8c\u6210\u5927\u90e8\u5206\u7684\u6e32\u67d3\uff0c\u6211\u4eec\u5bf9\u6574\u4e2a\u6e32\u67d3\u8fc7\u7a0b\u6709\u4e86\u5b8c\u6574\u7684\u638c\u63e1\uff0c\u4ece\u800c\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u8fc7\u7a0b\u7684\u4f18\u5316\u3002\u5982\u679c\u4f60\u5bf9Breakout\u7684\u6027\u80fd\u5e76\u4e0d\u6ee1\u610f\uff0c\u4f60\u53ef\u4ee5\u628a\u8fd9\u4e9b\u5f53\u505a\u7ec3\u4e60\u3002 \u5f00\u59cb\u521b\u4f5c\uff01 \u4f60\u5df2\u7ecf\u770b\u5230\u4e86\u5982\u4f55\u5728OpenGL\u4e2d\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u6e38\u620f\uff0c\u73b0\u5728\u8f6e\u5230\u4f60\u6765\u521b\u4f5c\u5c5e\u4e8e\u81ea\u5df1\u7684\u6e32\u67d3/\u6e38\u620f\u7a0b\u5e8f\u4e86\u3002\u5230\u76ee\u524d\u4e3a\u6b62\u6211\u4eec\u8ba8\u8bba\u7684\u8bb8\u591a\u6280\u672f\u90fd\u53ef\u4ee5\u5e94\u7528\u4e8e\u5927\u90e8\u52062D\u6e38\u620f\u4e2d\uff0c\u5982\u6e32\u67d3\u7cbe\u7075\u3001\u57fa\u7840\u7684\u78b0\u649e\u68c0\u6d4b\u3001\u540e\u671f\u5904\u7406\u3001\u6587\u672c\u6e32\u67d3\u548c\u7c92\u5b50\u7cfb\u7edf\u3002\u73b0\u5728\u4f60\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u6280\u672f\u4ee5\u4f60\u8ba4\u4e3a\u5408\u7406\u7684\u65b9\u5f0f\u8fdb\u884c\u7ec4\u5408\u4e0e\u4fee\u6539\uff0c\u5e76\u5f00\u53d1\u4f60\u81ea\u5df1\u7684\u624b\u5236\u6e38\u620f\u5427\uff01","title":"\u7ed3\u8bed"},{"location":"06%20In%20Practice/2D-Game/11%20Final%20thoughts/#_1","text":"\u539f\u6587 Final thoughts \u4f5c\u8005 JoeydeVries \u7ffb\u8bd1 \u5305\u7eb8 \u6821\u5bf9 \u6682\u65e0 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u4e0e\u4ec5\u4ec5\u662f\u7528OpenGL\u521b\u5efa\u4e00\u4e2a\u6280\u672f\u6f14\u793a\u76f8\u6bd4\uff0c\u8fd9\u4e00\u6574\u7ae0\u7684\u6559\u7a0b\u7ed9\u6211\u4eec\u4e86\u4e00\u6b21\u4f53\u9a8c\u5728\u6b64\u4e4b\u4e0a\u7684\u66f4\u591a\u5185\u5bb9\u7684\u673a\u4f1a\u3002\u6211\u4eec\u4ece\u96f6\u5f00\u59cb\u5236\u4f5c\u4e86\u4e00\u4e2a2D\u6e38\u620f\uff0c\u5e76\u5b66\u4e60\u4e86\u5982\u4f55\u5bf9\u7279\u5b9a\u7684\u5e95\u5c42\u56fe\u5f62\u5b66\u6982\u5ff5\u8fdb\u884c\u62bd\u8c61\u3001\u4f7f\u7528\u57fa\u7840\u7684\u78b0\u649e\u68c0\u6d4b\u6280\u672f\u3001\u521b\u5efa\u7c92\u5b50\u3001\u5c55\u793a\u57fa\u4e8e\u6b63\u5c04\u6295\u5f71\u77e9\u9635\u7684\u573a\u666f\u3002\u6240\u6709\u7684\u8fd9\u4e9b\u90fd\u4f7f\u7528\u4e86\u4e4b\u524d\u6559\u7a0b\u4e2d\u8ba8\u8bba\u8fc7\u7684\u6982\u5ff5\u3002\u6211\u4eec\u5e76\u6ca1\u6709\u771f\u6b63\u5730\u5b66\u4e60\u548c\u4f7f\u7528OpenGL\u4e2d\u65b0\u7684\u3001\u4ee4\u4eba\u5174\u594b\u7684\u56fe\u5f62\u6280\u672f\uff0c\u66f4\u591a\u7684\u662f\u5728\u5c06\u6240\u6709\u77e5\u8bc6\u6574\u5408\u81f3\u4e00\u4e2a\u66f4\u5927\u7684\u6574\u4f53\u4e2d\u3002 Breakout\u8fd9\u6837\u7684\u4e00\u4e2a\u7b80\u5355\u6e38\u620f\u7684\u5236\u4f5c\u53ef\u4ee5\u88ab\u6570\u5343\u79cd\u65b9\u6cd5\u5b8c\u6210\uff0c\u800c\u6211\u4eec\u7684\u505a\u6cd5\u4e5f\u53ea\u662f\u5176\u4e2d\u4e4b\u4e00\u3002\u968f\u7740\u6e38\u620f\u8d8a\u6765\u8d8a\u5e9e\u5927\uff0c\u4f60\u5f00\u59cb\u5e94\u7528\u7684\u62bd\u8c61\u601d\u60f3\u4e0e\u8bbe\u8ba1\u6a21\u5f0f\u5c31\u4f1a\u8d8a\u591a\u3002\u5982\u679c\u5e0c\u671b\u8fdb\u884c\u66f4\u6df1\u5165\u7684\u5b66\u4e60\u4e0e\u9605\u8bfb\uff0c\u4f60\u53ef\u4ee5\u5728 game programming patterns \u627e\u5230\u5927\u90e8\u5206\u7684\u62bd\u8c61\u601d\u60f3\u4e0e\u8bbe\u8ba1\u6a21\u5f0f\u3002\uff08\u8bd1\u6ce8\uff1a\u300a\u6e38\u620f\u7f16\u7a0b\u6a21\u5f0f\u300b\u4e00\u4e66\u56fd\u5185\u5df2\u6709\u4e2d\u6587\u7ffb\u8bd1\u7248\uff0cGPP\u7ffb\u8bd1\u7ec4\u8bd1\uff0c\u4eba\u6c11\u90ae\u7535\u51fa\u7248\u793e\uff09 \u8bf7\u8bb0\u4f4f\uff0c\u7f16\u5199\u51fa\u4e00\u4e2a\u6709\u7740\u975e\u5e38\u5e72\u51c0\u3001\u8003\u8651\u5468\u5168\u7684\u4ee3\u7801\u7684\u6e38\u620f\u662f\u4e00\u4ef6\u5f88\u56f0\u96be\u7684\u4efb\u52a1\uff08\u51e0\u4e4e\u4e0d\u53ef\u80fd\uff09\u3002\u4f60\u53ea\u9700\u8981\u5728\u7f16\u5199\u6e38\u620f\u65f6\u4f7f\u7528\u5728\u5f53\u65f6\u4f60\u8ba4\u4e3a\u6b63\u786e\u7684\u65b9\u6cd5\u3002\u968f\u7740\u4f60\u5bf9\u89c6\u9891\u6e38\u620f\u5f00\u53d1\u7684\u5b9e\u8df5\u8d8a\u6765\u8d8a\u591a\uff0c\u4f60\u5b66\u4e60\u7684\u65b0\u7684\u3001\u66f4\u597d\u5730\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\u5c31\u8d8a\u591a\u3002\u4e0d\u5fc5\u56e0\u4e3a\u7f16\u5199\u201c\u5b8c\u7f8e\u201d\u4ee3\u7801\u7684\u56f0\u96be\u611f\u5230\u632b\u8d25\uff0c\u575a\u6301\u7f16\u7a0b\u5427\uff01","title":"\u7ed3\u8bed"},{"location":"06%20In%20Practice/2D-Game/11%20Final%20thoughts/#_2","text":"\u8fd9\u4e9b\u6559\u7a0b\u7684\u5185\u5bb9\u548c\u76ee\u524d\u5df2\u5b8c\u6210\u7684\u6e38\u620f\u4ee3\u7801\u7684\u5173\u6ce8\u70b9\u90fd\u5728\u4e8e\u5982\u4f55\u5c3d\u53ef\u80fd\u7b80\u5355\u5730\u9610\u8ff0\u6982\u5ff5\uff0c\u800c\u6ca1\u6709\u6df1\u5165\u5730\u4f18\u5316\u7ec6\u8282\u3002\u56e0\u6b64\uff0c\u5f88\u591a\u6027\u80fd\u76f8\u5173\u7684\u8003\u8651\u90fd\u88ab\u5ffd\u7565\u4e86\u3002\u4e3a\u4e86\u5728\u6e38\u620f\u7684\u5e27\u7387\u5f00\u59cb\u4e0b\u964d\u65f6\u53ef\u4ee5\u63d0\u9ad8\u6027\u80fd\uff0c\u6211\u4eec\u5c06\u5217\u51fa\u4e00\u4e9b\u73b0\u4ee3\u76842D OpenGL\u6e38\u620f\u4e2d\u5e38\u89c1\u7684\u6539\u8fdb\u65b9\u6848\u3002 \u6e32\u67d3\u7cbe\u7075\u8868\u5355/\u7eb9\u7406\u56fe\u8c31(Sprite sheet / Texture atlas) \uff1a\u4ee3\u66ff\u4f7f\u7528\u5355\u4e2a\u6e32\u67d3\u7cbe\u7075\u6e32\u67d3\u5355\u4e2a\u7eb9\u7406\u7684\u6e32\u67d3\u65b9\u5f0f\uff0c\u6211\u4eec\u5c06\u6240\u6709\u9700\u8981\u7528\u5230\u7684\u7eb9\u7406\u7ec4\u5408\u5230\u5355\u4e2a\u5927\u7eb9\u7406\u4e2d\uff08\u5982\u540c\u4f4d\u56fe\u5b57\u4f53\uff09\uff0c\u5e76\u7528\u7eb9\u7406\u5750\u6807\u6765\u9009\u62e9\u5408\u9002\u7684\u7cbe\u7075\u4e0e\u7eb9\u7406\u3002\u5207\u6362\u7eb9\u7406\u72b6\u6001\u662f\u975e\u5e38\u6602\u8d35\u7684\u64cd\u4f5c\uff0c\u800c\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u8ba9\u6211\u4eec\u51e0\u4e4e\u53ef\u4ee5\u4e0d\u7528\u5728\u7eb9\u7406\u95f4\u8fdb\u884c\u5207\u6362\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd9\u6837\u505a\u8fd8\u53ef\u4ee5\u8ba9GPU\u66f4\u6709\u6548\u7387\u5730\u7f13\u5b58\u7eb9\u7406\uff0c\u83b7\u5f97\u66f4\u5feb\u7684\u67e5\u627e\u901f\u5ea6\u3002\uff08\u8bd1\u6ce8\uff1acache\u7684\u5c40\u90e8\u6027\u539f\u7406\uff09 \u5b9e\u4f8b\u5316\u6e32\u67d3 \uff1a\u4ee3\u66ff\u4e00\u6b21\u53ea\u6e32\u67d3\u4e00\u4e2a\u56db\u8fb9\u5f62\u7684\u6e32\u67d3\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u60f3\u8981\u6e32\u67d3\u7684\u6240\u6709\u56db\u8fb9\u5f62\u6279\u91cf\u5316\uff0c\u5e76\u4f7f\u7528 \u5b9e\u4f8b\u5316\u6e32\u67d3 \u5728\u4e00\u6b21<> draw call \u4e2d\u6210\u6279\u5730\u6e32\u67d3\u56db\u8fb9\u5f62\u3002\u8fd9\u5f88\u5bb9\u6613\u5b9e\u73b0\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u7cbe\u7075\u90fd\u7531\u76f8\u540c\u7684\u9876\u70b9\u7ec4\u6210\uff0c\u4e0d\u540c\u4e4b\u5904\u53ea\u6709\u4e00\u4e2a\u6a21\u578b\u77e9\u9635(Model Matrix)\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u5176\u5305\u542b\u5728\u4e00\u4e2a\u5b9e\u4f8b\u5316\u6570\u7ec4\u4e2d\u3002\u8fd9\u6837\u53ef\u4ee5\u4f7fOpenGL\u6bcf\u5e27\u6e32\u67d3\u66f4\u591a\u7684\u7cbe\u7075\u3002\u5b9e\u4f8b\u5316\u6e32\u67d3\u4e5f\u53ef\u4ee5\u7528\u6765\u6e32\u67d3\u7c92\u5b50\u548c\u5b57\u7b26\u5b57\u5f62\u3002 \u4e09\u89d2\u5f62\u5e26(Triangle Strips) \uff1a\u4ee3\u66ff\u6bcf\u6b21\u6e32\u67d3\u4e24\u4e2a\u4e09\u89d2\u5f62\u7684\u6e32\u67d3\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528OpenGL\u7684 TRIANGLE_STRIP \u6e32\u67d3\u56fe\u5143\u6e32\u67d3\u5b83\u4eec\uff0c\u53ea\u97004\u4e2a\u9876\u70b9\u800c\u975e6\u4e2a\u3002\u8fd9\u8282\u7ea6\u4e86\u4e09\u5206\u4e4b\u4e00\u9700\u8981\u4f20\u9012\u7ed9GPU\u7684\u6570\u636e\u91cf\u3002 \u7a7a\u95f4\u5212\u5206(Space partition)\u7b97\u6cd5 \uff1a\u5f53\u68c0\u67e5\u53ef\u80fd\u53d1\u751f\u7684\u78b0\u649e\u65f6\uff0c\u6211\u4eec\u5c06\u5c0f\u7403\u4e0e\u5f53\u524d\u5173\u5361\u4e2d\u7684\u6bcf\u4e00\u4e2a\u7816\u5757\u8fdb\u884c\u6bd4\u8f83\uff0c\u8fd9\u4e48\u505a\u6709\u4e9b\u6d6a\u8d39CPU\u8d44\u6e90\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5f97\u77e5\u5728\u8fd9\u4e00\u5e27\u4e2d\uff0c\u5927\u591a\u6570\u7816\u5757\u90fd\u4e0d\u4f1a\u4e0e\u5c0f\u7403\u5f88\u63a5\u8fd1\u3002\u4f7f\u7528BSP\uff0c\u516b\u53c9\u6811(Octress)\u6216k-d(imension)\u6811\u7b49\u7a7a\u95f4\u5212\u5206\u7b97\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u53ef\u89c1\u7684\u7a7a\u95f4\u5212\u5206\u6210\u8bb8\u591a\u8f83\u5c0f\u7684\u533a\u57df\uff0c\u5e76\u5224\u65ad\u5c0f\u7403\u662f\u5426\u5728\u8fd9\u4e2a\u533a\u57df\u4e2d\uff0c\u4ece\u800c\u4e3a\u6211\u4eec\u7701\u53bb\u5927\u91cf\u7684\u78b0\u649e\u68c0\u67e5\u3002\u5bf9\u4e8eBreakout\u8fd9\u6837\u7684\u7b80\u5355\u6e38\u620f\u6765\u8bf4\uff0c\u8fd9\u53ef\u80fd\u662f\u8fc7\u5ea6\u7684\uff0c\u4f46\u5bf9\u4e8e\u6709\u7740\u66f4\u590d\u6742\u7684\u78b0\u649e\u68c0\u6d4b\u7b97\u6cd5\u7684\u590d\u6742\u6e38\u620f\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u53ef\u4ee5\u663e\u8457\u5730\u63d0\u9ad8\u6027\u80fd\u3002 \u6700\u5c0f\u5316\u72b6\u6001\u95f4\u7684\u8f6c\u6362 \uff1a\u72b6\u6001\u95f4\u7684\u53d8\u5316\uff08\u5982\u7ed1\u5b9a\u7eb9\u7406\u6216\u5207\u6362\u7740\u8272\u5668\uff09\u5728OpenGL\u4e2d\u975e\u5e38\u6602\u8d35\uff0c\u56e0\u6b64\u4f60\u9700\u8981\u907f\u514d\u5927\u91cf\u7684\u72b6\u6001\u53d8\u5316\u3002\u4e00\u79cd\u6700\u5c0f\u5316\u72b6\u6001\u95f4\u53d8\u5316\u7684\u65b9\u6cd5\u662f\u521b\u5efa\u81ea\u5df1\u7684\u72b6\u6001\u7ba1\u7406\u5668\u6765\u5b58\u50a8OpenGL\u72b6\u6001\u7684\u5f53\u524d\u503c\uff08\u6bd4\u5982\u7ed1\u5b9a\u4e86\u54ea\u4e2a\u7eb9\u7406\uff09\uff0c\u5e76\u4e14\u53ea\u5728\u9700\u8981\u6539\u53d8\u65f6\u8fdb\u884c\u5207\u6362\uff0c\u8fd9\u53ef\u4ee5\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u72b6\u6001\u53d8\u5316\u3002\u53e6\u5916\u4e00\u79cd\u65b9\u5f0f\u662f\u57fa\u4e8e\u72b6\u6001\u5207\u6362\u5bf9\u6240\u6709\u9700\u8981\u6e32\u67d3\u7684\u7269\u4f53\u8fdb\u884c\u6392\u5e8f\u3002\u9996\u5148\u6e32\u67d3\u4f7f\u7528\u7740\u8272\u5668A\u7684\u6240\u6709\u5bf9\u8c61\uff0c\u7136\u540e\u6e32\u67d3\u4f7f\u7528\u7740\u8272\u5668B\u7684\u6240\u6709\u5bf9\u8c61\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u5f53\u7136\u8fd9\u53ef\u4ee5\u6269\u5c55\u5230\u7740\u8272\u5668\u3001\u7eb9\u7406\u7ed1\u5b9a\u3001\u5e27\u7f13\u51b2\u5207\u6362\u7b49\u3002 \u8fd9\u4e9b\u5e94\u8be5\u53ef\u4ee5\u7ed9\u4f60\u4e00\u4e9b\u5173\u4e8e\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4ec0\u4e48\u6837\u7684\u7684\u9ad8\u7ea7\u6280\u5de7\u8fdb\u4e00\u6b65\u63d0\u9ad82D\u6e38\u620f\u6027\u80fd\u5730\u63d0\u793a\u3002\u8fd9\u4e5f\u8ba9\u4f60\u611f\u53d7\u5230\u4e86OpenGL\u7684\u5f3a\u5927\u529f\u80fd\u3002\u901a\u8fc7\u4eb2\u624b\u5b8c\u6210\u5927\u90e8\u5206\u7684\u6e32\u67d3\uff0c\u6211\u4eec\u5bf9\u6574\u4e2a\u6e32\u67d3\u8fc7\u7a0b\u6709\u4e86\u5b8c\u6574\u7684\u638c\u63e1\uff0c\u4ece\u800c\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u8fc7\u7a0b\u7684\u4f18\u5316\u3002\u5982\u679c\u4f60\u5bf9Breakout\u7684\u6027\u80fd\u5e76\u4e0d\u6ee1\u610f\uff0c\u4f60\u53ef\u4ee5\u628a\u8fd9\u4e9b\u5f53\u505a\u7ec3\u4e60\u3002","title":"\u4f18\u5316"},{"location":"06%20In%20Practice/2D-Game/11%20Final%20thoughts/#_3","text":"\u4f60\u5df2\u7ecf\u770b\u5230\u4e86\u5982\u4f55\u5728OpenGL\u4e2d\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u6e38\u620f\uff0c\u73b0\u5728\u8f6e\u5230\u4f60\u6765\u521b\u4f5c\u5c5e\u4e8e\u81ea\u5df1\u7684\u6e32\u67d3/\u6e38\u620f\u7a0b\u5e8f\u4e86\u3002\u5230\u76ee\u524d\u4e3a\u6b62\u6211\u4eec\u8ba8\u8bba\u7684\u8bb8\u591a\u6280\u672f\u90fd\u53ef\u4ee5\u5e94\u7528\u4e8e\u5927\u90e8\u52062D\u6e38\u620f\u4e2d\uff0c\u5982\u6e32\u67d3\u7cbe\u7075\u3001\u57fa\u7840\u7684\u78b0\u649e\u68c0\u6d4b\u3001\u540e\u671f\u5904\u7406\u3001\u6587\u672c\u6e32\u67d3\u548c\u7c92\u5b50\u7cfb\u7edf\u3002\u73b0\u5728\u4f60\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u6280\u672f\u4ee5\u4f60\u8ba4\u4e3a\u5408\u7406\u7684\u65b9\u5f0f\u8fdb\u884c\u7ec4\u5408\u4e0e\u4fee\u6539\uff0c\u5e76\u5f00\u53d1\u4f60\u81ea\u5df1\u7684\u624b\u5236\u6e38\u620f\u5427\uff01","title":"\u5f00\u59cb\u521b\u4f5c\uff01"},{"location":"06%20In%20Practice/2D-Game/05%20Collisions/01%20Ball/","text":"\u7403 \u539f\u6587 Ball \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 aillieo \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u6b64\u65f6\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u5305\u542b\u6709\u5f88\u591a\u7816\u5757\u548c\u73a9\u5bb6\u7684\u4e00\u4e2a\u6321\u677f\u7684\u5173\u5361\u3002\u4e0e\u7ecf\u5178\u7684Breakout\u5185\u5bb9\u76f8\u6bd4\u8fd8\u5dee\u4e00\u4e2a\u7403\u3002\u6e38\u620f\u7684\u76ee\u7684\u662f\u8ba9\u7403\u649e\u51fb\u6240\u6709\u7684\u7816\u5757\uff0c\u76f4\u5230\u6240\u6709\u7684\u53ef\u9500\u6bc1\u7816\u5757\u90fd\u88ab\u9500\u6bc1\uff0c\u4f46\u540c\u65f6\u4e5f\u8981\u6ee1\u8db3\u6761\u4ef6\uff1a\u7403\u4e0d\u80fd\u78b0\u89e6\u5c4f\u5e55\u7684\u4e0b\u8fb9\u7f18\u3002 \u9664\u4e86\u901a\u7528\u7684\u6e38\u620f\u5bf9\u8c61\u7ec4\u4ef6\uff0c\u7403\u8fd8\u9700\u8981\u6709\u534a\u5f84\u548c\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u8be5\u5e03\u5c14\u503c\u7528\u4e8e\u6307\u793a\u7403\u88ab\u56fa\u5b9a( stuck )\u5728\u73a9\u5bb6\u6321\u677f\u4e0a\u8fd8\u662f\u88ab\u5141\u8bb8\u81ea\u7531\u8fd0\u52a8\u7684\u72b6\u6001\u3002\u5f53\u6e38\u620f\u5f00\u59cb\u65f6\uff0c\u7403\u88ab\u521d\u59cb\u56fa\u5b9a\u5728\u73a9\u5bb6\u6321\u677f\u4e0a\uff0c\u76f4\u5230\u73a9\u5bb6\u6309\u4e0b\u4efb\u610f\u952e\u5f00\u59cb\u6e38\u620f\u3002 \u7531\u4e8e\u7403\u53ea\u662f\u4e00\u4e2a\u9644\u5e26\u4e86\u4e00\u4e9b\u989d\u5916\u5c5e\u6027\u7684 GameObject \uff0c\u6240\u4ee5\u6309\u7167\u5e38\u89c4\u9700\u8981\u521b\u5efa BallObject \u7c7b\u4f5c\u4e3a GameObject \u7684\u5b50\u7c7b\u3002 class BallObject : public GameObject { public: // \u7403\u7684\u72b6\u6001 GLfloat Radius; GLboolean Stuck; BallObject(); BallObject(glm::vec2 pos, GLfloat radius, glm::vec2 velocity, Texture2D sprite); glm::vec2 Move(GLfloat dt, GLuint window_width); void Reset(glm::vec2 position, glm::vec2 velocity); }; BallObject \u7684\u6784\u9020\u51fd\u6570\u4e0d\u4f46\u521d\u59cb\u5316\u4e86\u5176\u81ea\u8eab\u7684\u503c\uff0c\u800c\u4e14\u5b9e\u9645\u4e0a\u4e5f\u6f5c\u5728\u5730\u521d\u59cb\u5316\u4e86 GameObject \u3002 BallObject \u7c7b\u62e5\u6709\u4e00\u4e2a Move \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7528\u4e8e\u6839\u636e\u7403\u7684\u901f\u5ea6\u6765\u79fb\u52a8\u7403\uff0c\u5e76\u68c0\u67e5\u5b83\u662f\u5426\u78b0\u5230\u4e86\u573a\u666f\u7684\u4efb\u4f55\u8fb9\u754c\uff0c\u5982\u679c\u78b0\u5230\u7684\u8bdd\u5c31\u4f1a\u53cd\u8f6c\u7403\u7684\u901f\u5ea6\uff1a glm::vec2 BallObject::Move(GLfloat dt, GLuint window_width) { // \u5982\u679c\u6ca1\u6709\u88ab\u56fa\u5b9a\u5728\u6321\u677f\u4e0a if (!this->Stuck) { // \u79fb\u52a8\u7403 this->Position += this->Velocity * dt; // \u68c0\u67e5\u662f\u5426\u5728\u7a97\u53e3\u8fb9\u754c\u4ee5\u5916\uff0c\u5982\u679c\u662f\u7684\u8bdd\u53cd\u8f6c\u901f\u5ea6\u5e76\u6062\u590d\u5230\u6b63\u786e\u7684\u4f4d\u7f6e if (this->Position.x <= 0.0f) { this->Velocity.x = -this->Velocity.x; this->Position.x = 0.0f; } else if (this->Position.x + this->Size.x >= window_width) { this->Velocity.x = -this->Velocity.x; this->Position.x = window_width - this->Size.x; } if (this->Position.y <= 0.0f) { this->Velocity.y = -this->Velocity.y; this->Position.y = 0.0f; } } return this->Position; } \u9664\u4e86\u53cd\u8f6c\u7403\u7684\u901f\u5ea6\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u628a\u7403\u6cbf\u7740\u8fb9\u754c\u91cd\u65b0\u653e\u7f6e\u56de\u6765\u3002\u53ea\u6709\u5728\u6ca1\u6709\u88ab\u56fa\u5b9a\u65f6\u7403\u624d\u80fd\u591f\u79fb\u52a8\u3002 Important \u56e0\u4e3a\u5982\u679c\u7403\u78b0\u89e6\u5230\u5e95\u90e8\u8fb9\u754c\u65f6\u73a9\u5bb6\u4f1a\u7ed3\u675f\u6e38\u620f\uff08\u6216\u5931\u53bb\u4e00\u6761\u547d\uff09\uff0c\u6240\u4ee5\u5728\u5e95\u90e8\u8fb9\u754c\u6ca1\u6709\u4ee3\u7801\u6765\u63a7\u5236\u7403\u53cd\u5f39\u3002\u6211\u4eec\u7a0d\u540e\u9700\u8981\u5728\u4ee3\u7801\u4e2d\u67d0\u4e9b\u5730\u65b9\u5b9e\u73b0\u8fd9\u4e00\u903b\u8f91\u3002 \u4f60\u53ef\u4ee5\u5728\u4e0b\u8fb9\u770b\u5230 BallObject \u7684\u4ee3\u7801\uff1a BallObject: header , code \u9996\u5148\u6211\u4eec\u5728\u6e38\u620f\u4e2d\u6dfb\u52a0\u7403\u3002\u4e0e\u73a9\u5bb6\u6321\u677f\u76f8\u4f3c\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7403\u5bf9\u8c61\u5e76\u4e14\u5b9a\u4e49\u4e24\u4e2a\u7528\u6765\u521d\u59cb\u5316\u7403\u7684\u5e38\u91cf\u3002\u5bf9\u4e8e\u7403\u7684\u7eb9\u7406\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u5728LearnOpenGL Breakout\u6e38\u620f\u4e2d\u5b8c\u7f8e\u9002\u7528\u7684\u4e00\u5f20\u56fe\u7247\uff1a \u7403\u7eb9\u7406 \u3002 // \u521d\u59cb\u5316\u7403\u7684\u901f\u5ea6 const glm::vec2 INITIAL_BALL_VELOCITY(100.0f, -350.0f); // \u7403\u7684\u534a\u5f84 const GLfloat BALL_RADIUS = 12.5f; BallObject *Ball; void Game::Init() { [...] glm::vec2 ballPos = playerPos + glm::vec2(PLAYER_SIZE.x / 2 - BALL_RADIUS, -BALL_RADIUS * 2); Ball = new BallObject(ballPos, BALL_RADIUS, INITIAL_BALL_VELOCITY, ResourceManager::GetTexture(\"face\")); } \u7136\u540e\u6211\u4eec\u5728\u6bcf\u5e27\u4e2d\u8c03\u7528\u6e38\u620f\u4ee3\u7801\u4e2d Update \u51fd\u6570\u91cc\u7684 Move \u51fd\u6570\u6765\u66f4\u65b0\u7403\u7684\u4f4d\u7f6e\uff1a void Game::Update(GLfloat dt) { Ball->Move(dt, this->Width); } \u9664\u6b64\u4e4b\u5916\uff0c\u7531\u4e8e\u7403\u521d\u59cb\u662f\u56fa\u5b9a\u5728\u6321\u677f\u4e0a\u7684\uff0c\u6211\u4eec\u5fc5\u987b\u8ba9\u73a9\u5bb6\u80fd\u591f\u4ece\u56fa\u5b9a\u7684\u4f4d\u7f6e\u91cd\u65b0\u79fb\u52a8\u5b83\u3002\u6211\u4eec\u9009\u62e9\u4f7f\u7528\u7a7a\u683c\u952e\u6765\u4ece\u6321\u677f\u91ca\u653e\u7403\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5fc5\u987b\u7a0d\u5fae\u4fee\u6539 ProcessInput \u51fd\u6570\uff1a void Game::ProcessInput(GLfloat dt) { if (this->State == GAME_ACTIVE) { GLfloat velocity = PLAYER_VELOCITY * dt; // \u79fb\u52a8\u73a9\u5bb6\u6321\u677f if (this->Keys[GLFW_KEY_A]) { if (Player->Position.x >= 0) { Player->Position.x -= velocity; if (Ball->Stuck) Ball->Position.x -= velocity; } } if (this->Keys[GLFW_KEY_D]) { if (Player->Position.x <= this->Width - Player->Size.x) { Player->Position.x += velocity; if (Ball->Stuck) Ball->Position.x += velocity; } } if (this->Keys[GLFW_KEY_SPACE]) Ball->Stuck = false; } } \u73b0\u5728\u5982\u679c\u73a9\u5bb6\u6309\u4e0b\u4e86\u7a7a\u683c\u952e\uff0c\u7403\u7684 Stuck \u503c\u4f1a\u8bbe\u7f6e\u4e3a false \u3002\u6211\u4eec\u8fd8\u9700\u8981\u66f4\u65b0 ProcessInput \u51fd\u6570\uff0c\u5f53\u7403\u88ab\u56fa\u5b9a\u7684\u65f6\u5019\uff0c\u4f1a\u8ddf\u968f\u6321\u677f\u7684\u4f4d\u7f6e\u6765\u79fb\u52a8\u7403\u3002 \u6700\u540e\u6211\u4eec\u9700\u8981\u6e32\u67d3\u7403\uff0c\u6b64\u65f6\u8fd9\u5e94\u8be5\u5f88\u663e\u800c\u6613\u89c1\u4e86\uff1a void Game::Render() { if (this->State == GAME_ACTIVE) { [...] Ball->Draw(*Renderer); } } \u7ed3\u679c\u5c31\u662f\u7403\u4f1a\u8ddf\u968f\u7740\u6321\u677f\uff0c\u5e76\u4e14\u5f53\u6211\u4eec\u6309\u4e0b\u7a7a\u683c\u952e\u65f6\u7403\u5f00\u59cb\u81ea\u7531\u8fd0\u52a8\u3002\u7403\u4f1a\u5728\u5de6\u4fa7\u3001\u53f3\u4fa7\u548c\u9876\u90e8\u8fb9\u754c\u5408\u7406\u5730\u53cd\u5f39\uff0c\u4f46\u770b\u8d77\u6765\u4e0d\u4f1a\u649e\u51fb\u4efb\u4f55\u7684\u7816\u5757\uff0c\u5c31\u50cf\u6211\u4eec\u53ef\u4ee5\u5728\u4e0b\u8fb9\u7684\u89c6\u9891\u4e2d\u770b\u5230\u7684\u90a3\u6837\uff1a \u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u521b\u5efa\u4e00\u4e2a\u6216\u591a\u4e2a\u51fd\u6570\u7528\u4e8e\u68c0\u67e5\u7403\u5bf9\u8c61\u662f\u5426\u649e\u51fb\u5173\u5361\u4e2d\u7684\u4efb\u4f55\u7816\u5757\uff0c\u5982\u679c\u649e\u51fb\u7684\u8bdd\u5c31\u9500\u6bc1\u7816\u5757\u3002\u8fd9\u4e9b\u6240\u8c13\u7684\u78b0\u649e\u68c0\u6d4b( collision detection )\u529f\u80fd\u5c06\u662f\u6211\u4eec \u4e0b\u4e00\u4e2a \u6559\u7a0b\u7684\u91cd\u70b9\u3002","title":"\u7403"},{"location":"06%20In%20Practice/2D-Game/05%20Collisions/01%20Ball/#_1","text":"\u539f\u6587 Ball \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 aillieo \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u6b64\u65f6\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u5305\u542b\u6709\u5f88\u591a\u7816\u5757\u548c\u73a9\u5bb6\u7684\u4e00\u4e2a\u6321\u677f\u7684\u5173\u5361\u3002\u4e0e\u7ecf\u5178\u7684Breakout\u5185\u5bb9\u76f8\u6bd4\u8fd8\u5dee\u4e00\u4e2a\u7403\u3002\u6e38\u620f\u7684\u76ee\u7684\u662f\u8ba9\u7403\u649e\u51fb\u6240\u6709\u7684\u7816\u5757\uff0c\u76f4\u5230\u6240\u6709\u7684\u53ef\u9500\u6bc1\u7816\u5757\u90fd\u88ab\u9500\u6bc1\uff0c\u4f46\u540c\u65f6\u4e5f\u8981\u6ee1\u8db3\u6761\u4ef6\uff1a\u7403\u4e0d\u80fd\u78b0\u89e6\u5c4f\u5e55\u7684\u4e0b\u8fb9\u7f18\u3002 \u9664\u4e86\u901a\u7528\u7684\u6e38\u620f\u5bf9\u8c61\u7ec4\u4ef6\uff0c\u7403\u8fd8\u9700\u8981\u6709\u534a\u5f84\u548c\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u8be5\u5e03\u5c14\u503c\u7528\u4e8e\u6307\u793a\u7403\u88ab\u56fa\u5b9a( stuck )\u5728\u73a9\u5bb6\u6321\u677f\u4e0a\u8fd8\u662f\u88ab\u5141\u8bb8\u81ea\u7531\u8fd0\u52a8\u7684\u72b6\u6001\u3002\u5f53\u6e38\u620f\u5f00\u59cb\u65f6\uff0c\u7403\u88ab\u521d\u59cb\u56fa\u5b9a\u5728\u73a9\u5bb6\u6321\u677f\u4e0a\uff0c\u76f4\u5230\u73a9\u5bb6\u6309\u4e0b\u4efb\u610f\u952e\u5f00\u59cb\u6e38\u620f\u3002 \u7531\u4e8e\u7403\u53ea\u662f\u4e00\u4e2a\u9644\u5e26\u4e86\u4e00\u4e9b\u989d\u5916\u5c5e\u6027\u7684 GameObject \uff0c\u6240\u4ee5\u6309\u7167\u5e38\u89c4\u9700\u8981\u521b\u5efa BallObject \u7c7b\u4f5c\u4e3a GameObject \u7684\u5b50\u7c7b\u3002 class BallObject : public GameObject { public: // \u7403\u7684\u72b6\u6001 GLfloat Radius; GLboolean Stuck; BallObject(); BallObject(glm::vec2 pos, GLfloat radius, glm::vec2 velocity, Texture2D sprite); glm::vec2 Move(GLfloat dt, GLuint window_width); void Reset(glm::vec2 position, glm::vec2 velocity); }; BallObject \u7684\u6784\u9020\u51fd\u6570\u4e0d\u4f46\u521d\u59cb\u5316\u4e86\u5176\u81ea\u8eab\u7684\u503c\uff0c\u800c\u4e14\u5b9e\u9645\u4e0a\u4e5f\u6f5c\u5728\u5730\u521d\u59cb\u5316\u4e86 GameObject \u3002 BallObject \u7c7b\u62e5\u6709\u4e00\u4e2a Move \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7528\u4e8e\u6839\u636e\u7403\u7684\u901f\u5ea6\u6765\u79fb\u52a8\u7403\uff0c\u5e76\u68c0\u67e5\u5b83\u662f\u5426\u78b0\u5230\u4e86\u573a\u666f\u7684\u4efb\u4f55\u8fb9\u754c\uff0c\u5982\u679c\u78b0\u5230\u7684\u8bdd\u5c31\u4f1a\u53cd\u8f6c\u7403\u7684\u901f\u5ea6\uff1a glm::vec2 BallObject::Move(GLfloat dt, GLuint window_width) { // \u5982\u679c\u6ca1\u6709\u88ab\u56fa\u5b9a\u5728\u6321\u677f\u4e0a if (!this->Stuck) { // \u79fb\u52a8\u7403 this->Position += this->Velocity * dt; // \u68c0\u67e5\u662f\u5426\u5728\u7a97\u53e3\u8fb9\u754c\u4ee5\u5916\uff0c\u5982\u679c\u662f\u7684\u8bdd\u53cd\u8f6c\u901f\u5ea6\u5e76\u6062\u590d\u5230\u6b63\u786e\u7684\u4f4d\u7f6e if (this->Position.x <= 0.0f) { this->Velocity.x = -this->Velocity.x; this->Position.x = 0.0f; } else if (this->Position.x + this->Size.x >= window_width) { this->Velocity.x = -this->Velocity.x; this->Position.x = window_width - this->Size.x; } if (this->Position.y <= 0.0f) { this->Velocity.y = -this->Velocity.y; this->Position.y = 0.0f; } } return this->Position; } \u9664\u4e86\u53cd\u8f6c\u7403\u7684\u901f\u5ea6\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u628a\u7403\u6cbf\u7740\u8fb9\u754c\u91cd\u65b0\u653e\u7f6e\u56de\u6765\u3002\u53ea\u6709\u5728\u6ca1\u6709\u88ab\u56fa\u5b9a\u65f6\u7403\u624d\u80fd\u591f\u79fb\u52a8\u3002 Important \u56e0\u4e3a\u5982\u679c\u7403\u78b0\u89e6\u5230\u5e95\u90e8\u8fb9\u754c\u65f6\u73a9\u5bb6\u4f1a\u7ed3\u675f\u6e38\u620f\uff08\u6216\u5931\u53bb\u4e00\u6761\u547d\uff09\uff0c\u6240\u4ee5\u5728\u5e95\u90e8\u8fb9\u754c\u6ca1\u6709\u4ee3\u7801\u6765\u63a7\u5236\u7403\u53cd\u5f39\u3002\u6211\u4eec\u7a0d\u540e\u9700\u8981\u5728\u4ee3\u7801\u4e2d\u67d0\u4e9b\u5730\u65b9\u5b9e\u73b0\u8fd9\u4e00\u903b\u8f91\u3002 \u4f60\u53ef\u4ee5\u5728\u4e0b\u8fb9\u770b\u5230 BallObject \u7684\u4ee3\u7801\uff1a BallObject: header , code \u9996\u5148\u6211\u4eec\u5728\u6e38\u620f\u4e2d\u6dfb\u52a0\u7403\u3002\u4e0e\u73a9\u5bb6\u6321\u677f\u76f8\u4f3c\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7403\u5bf9\u8c61\u5e76\u4e14\u5b9a\u4e49\u4e24\u4e2a\u7528\u6765\u521d\u59cb\u5316\u7403\u7684\u5e38\u91cf\u3002\u5bf9\u4e8e\u7403\u7684\u7eb9\u7406\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u5728LearnOpenGL Breakout\u6e38\u620f\u4e2d\u5b8c\u7f8e\u9002\u7528\u7684\u4e00\u5f20\u56fe\u7247\uff1a \u7403\u7eb9\u7406 \u3002 // \u521d\u59cb\u5316\u7403\u7684\u901f\u5ea6 const glm::vec2 INITIAL_BALL_VELOCITY(100.0f, -350.0f); // \u7403\u7684\u534a\u5f84 const GLfloat BALL_RADIUS = 12.5f; BallObject *Ball; void Game::Init() { [...] glm::vec2 ballPos = playerPos + glm::vec2(PLAYER_SIZE.x / 2 - BALL_RADIUS, -BALL_RADIUS * 2); Ball = new BallObject(ballPos, BALL_RADIUS, INITIAL_BALL_VELOCITY, ResourceManager::GetTexture(\"face\")); } \u7136\u540e\u6211\u4eec\u5728\u6bcf\u5e27\u4e2d\u8c03\u7528\u6e38\u620f\u4ee3\u7801\u4e2d Update \u51fd\u6570\u91cc\u7684 Move \u51fd\u6570\u6765\u66f4\u65b0\u7403\u7684\u4f4d\u7f6e\uff1a void Game::Update(GLfloat dt) { Ball->Move(dt, this->Width); } \u9664\u6b64\u4e4b\u5916\uff0c\u7531\u4e8e\u7403\u521d\u59cb\u662f\u56fa\u5b9a\u5728\u6321\u677f\u4e0a\u7684\uff0c\u6211\u4eec\u5fc5\u987b\u8ba9\u73a9\u5bb6\u80fd\u591f\u4ece\u56fa\u5b9a\u7684\u4f4d\u7f6e\u91cd\u65b0\u79fb\u52a8\u5b83\u3002\u6211\u4eec\u9009\u62e9\u4f7f\u7528\u7a7a\u683c\u952e\u6765\u4ece\u6321\u677f\u91ca\u653e\u7403\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5fc5\u987b\u7a0d\u5fae\u4fee\u6539 ProcessInput \u51fd\u6570\uff1a void Game::ProcessInput(GLfloat dt) { if (this->State == GAME_ACTIVE) { GLfloat velocity = PLAYER_VELOCITY * dt; // \u79fb\u52a8\u73a9\u5bb6\u6321\u677f if (this->Keys[GLFW_KEY_A]) { if (Player->Position.x >= 0) { Player->Position.x -= velocity; if (Ball->Stuck) Ball->Position.x -= velocity; } } if (this->Keys[GLFW_KEY_D]) { if (Player->Position.x <= this->Width - Player->Size.x) { Player->Position.x += velocity; if (Ball->Stuck) Ball->Position.x += velocity; } } if (this->Keys[GLFW_KEY_SPACE]) Ball->Stuck = false; } } \u73b0\u5728\u5982\u679c\u73a9\u5bb6\u6309\u4e0b\u4e86\u7a7a\u683c\u952e\uff0c\u7403\u7684 Stuck \u503c\u4f1a\u8bbe\u7f6e\u4e3a false \u3002\u6211\u4eec\u8fd8\u9700\u8981\u66f4\u65b0 ProcessInput \u51fd\u6570\uff0c\u5f53\u7403\u88ab\u56fa\u5b9a\u7684\u65f6\u5019\uff0c\u4f1a\u8ddf\u968f\u6321\u677f\u7684\u4f4d\u7f6e\u6765\u79fb\u52a8\u7403\u3002 \u6700\u540e\u6211\u4eec\u9700\u8981\u6e32\u67d3\u7403\uff0c\u6b64\u65f6\u8fd9\u5e94\u8be5\u5f88\u663e\u800c\u6613\u89c1\u4e86\uff1a void Game::Render() { if (this->State == GAME_ACTIVE) { [...] Ball->Draw(*Renderer); } } \u7ed3\u679c\u5c31\u662f\u7403\u4f1a\u8ddf\u968f\u7740\u6321\u677f\uff0c\u5e76\u4e14\u5f53\u6211\u4eec\u6309\u4e0b\u7a7a\u683c\u952e\u65f6\u7403\u5f00\u59cb\u81ea\u7531\u8fd0\u52a8\u3002\u7403\u4f1a\u5728\u5de6\u4fa7\u3001\u53f3\u4fa7\u548c\u9876\u90e8\u8fb9\u754c\u5408\u7406\u5730\u53cd\u5f39\uff0c\u4f46\u770b\u8d77\u6765\u4e0d\u4f1a\u649e\u51fb\u4efb\u4f55\u7684\u7816\u5757\uff0c\u5c31\u50cf\u6211\u4eec\u53ef\u4ee5\u5728\u4e0b\u8fb9\u7684\u89c6\u9891\u4e2d\u770b\u5230\u7684\u90a3\u6837\uff1a \u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u521b\u5efa\u4e00\u4e2a\u6216\u591a\u4e2a\u51fd\u6570\u7528\u4e8e\u68c0\u67e5\u7403\u5bf9\u8c61\u662f\u5426\u649e\u51fb\u5173\u5361\u4e2d\u7684\u4efb\u4f55\u7816\u5757\uff0c\u5982\u679c\u649e\u51fb\u7684\u8bdd\u5c31\u9500\u6bc1\u7816\u5757\u3002\u8fd9\u4e9b\u6240\u8c13\u7684\u78b0\u649e\u68c0\u6d4b( collision detection )\u529f\u80fd\u5c06\u662f\u6211\u4eec \u4e0b\u4e00\u4e2a \u6559\u7a0b\u7684\u91cd\u70b9\u3002","title":"\u7403"},{"location":"06%20In%20Practice/2D-Game/05%20Collisions/02%20Collision%20detection/","text":"\u78b0\u649e\u68c0\u6d4b \u539f\u6587 Collision detection \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 aillieo \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u5f53\u8bd5\u56fe\u5224\u65ad\u4e24\u4e2a\u7269\u4f53\u4e4b\u95f4\u662f\u5426\u6709\u78b0\u649e\u53d1\u751f\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u4e0d\u4f7f\u7528\u7269\u4f53\u672c\u8eab\u7684\u6570\u636e\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u7269\u4f53\u5e38\u5e38\u4f1a\u5f88\u590d\u6742\uff0c\u8fd9\u5c06\u5bfc\u81f4\u78b0\u649e\u68c0\u6d4b\u53d8\u5f97\u5f88\u590d\u6742\u3002\u6b63\u56e0\u8fd9\u4e00\u70b9\uff0c\u4f7f\u7528 \u91cd\u53e0 \u5728\u7269\u4f53\u4e0a\u7684\u66f4\u7b80\u5355\u7684\u5916\u5f62\uff08\u901a\u5e38\u6709\u8f83\u7b80\u5355\u660e\u786e\u7684\u6570\u5b66\u5b9a\u4e49\uff09\u6765\u8fdb\u884c\u78b0\u649e\u68c0\u6d4b\u6210\u4e3a\u5e38\u7528\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u57fa\u4e8e\u8fd9\u4e9b\u7b80\u5355\u7684\u5916\u5f62\u6765\u68c0\u6d4b\u78b0\u649e\uff0c\u8fd9\u6837\u4ee3\u7801\u4f1a\u53d8\u5f97\u66f4\u7b80\u5355\u4e14\u8282\u7701\u4e86\u5f88\u591a\u6027\u80fd\u3002\u8fd9\u4e9b \u78b0\u649e\u5916\u5f62 \u4f8b\u5982\u5706\u3001\u7403\u4f53\u3001\u957f\u65b9\u5f62\u548c\u7acb\u65b9\u4f53\u7b49\uff0c\u4e0e\u62e5\u6709\u4e0a\u767e\u4e2a\u4e09\u89d2\u5f62\u7684\u7f51\u683c\u76f8\u6bd4\u7b80\u5355\u4e86\u5f88\u591a\u3002 \u867d\u7136\u5b83\u4eec\u786e\u5b9e\u63d0\u4f9b\u4e86\u66f4\u7b80\u5355\u66f4\u9ad8\u6548\u7684\u78b0\u649e\u68c0\u6d4b\u7b97\u6cd5\uff0c\u4f46\u8fd9\u4e9b\u7b80\u5355\u7684\u78b0\u649e\u5916\u5f62\u62e5\u6709\u4e00\u4e2a\u5171\u540c\u7684\u7f3a\u70b9\uff0c\u8fd9\u4e9b\u5916\u5f62\u901a\u5e38\u65e0\u6cd5\u5b8c\u5168\u5305\u88f9\u7269\u4f53\u3002\u4ea7\u751f\u7684\u5f71\u54cd\u5c31\u662f\u5f53\u68c0\u6d4b\u5230\u78b0\u649e\u65f6\uff0c\u5b9e\u9645\u7684\u7269\u4f53\u5e76\u6ca1\u6709\u771f\u6b63\u7684\u78b0\u649e\u3002\u5fc5\u987b\u8bb0\u4f4f\u7684\u662f\u8fd9\u4e9b\u5916\u5f62\u4ec5\u4ec5\u662f\u771f\u5b9e\u5916\u5f62\u7684\u8fd1\u4f3c\u3002 AABB - AABB \u78b0\u649e AABB\u4ee3\u8868\u7684\u662f \u8f74\u5bf9\u9f50\u78b0\u649e\u7bb1 (Axis-aligned Bounding Box)\uff0c\u78b0\u649e\u7bb1\u662f\u6307\u4e0e\u573a\u666f\u57fa\u7840\u5750\u6807\u8f74\uff082D\u4e2d\u7684\u662fx\u548cy\u8f74\uff09\u5bf9\u9f50\u7684\u957f\u65b9\u5f62\u7684\u78b0\u649e\u5916\u5f62\u3002\u4e0e\u5750\u6807\u8f74\u5bf9\u9f50\u610f\u5473\u7740\u8fd9\u4e2a\u957f\u65b9\u5f62\u6ca1\u6709\u7ecf\u8fc7\u65cb\u8f6c\u5e76\u4e14\u5b83\u7684\u8fb9\u7ebf\u548c\u573a\u666f\u4e2d\u57fa\u7840\u5750\u6807\u8f74\u5e73\u884c\uff08\u4f8b\u5982\uff0c\u5de6\u53f3\u8fb9\u7ebf\u548cy\u8f74\u5e73\u884c\uff09\u3002\u8fd9\u4e9b\u78b0\u649e\u7bb1\u603b\u662f\u548c\u573a\u666f\u7684\u5750\u6807\u8f74\u5e73\u884c\uff0c\u8fd9\u4f7f\u5f97\u6240\u6709\u7684\u8ba1\u7b97\u90fd\u53d8\u5f97\u66f4\u7b80\u5355\u3002\u4e0b\u8fb9\u662f\u6211\u4eec\u7528\u4e00\u4e2aAABB\u5305\u88f9\u4e00\u4e2a\u7403\u5bf9\u8c61\uff08\u7269\u4f53\uff09\uff1a Breakout\u4e2d\u51e0\u4e4e\u6240\u6709\u7684\u7269\u4f53\u90fd\u662f\u57fa\u4e8e\u957f\u65b9\u5f62\u7684\u7269\u4f53\uff0c\u56e0\u6b64\u5f88\u7406\u6240\u5e94\u5f53\u5730\u4f7f\u7528\u8f74\u5bf9\u9f50\u78b0\u649e\u7bb1\u6765\u8fdb\u884c\u78b0\u649e\u68c0\u6d4b\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u505a\u7684\u3002 \u6709\u591a\u79cd\u65b9\u5f0f\u6765\u5b9a\u4e49\u4e0e\u5750\u6807\u8f74\u5bf9\u9f50\u7684\u78b0\u649e\u7bb1\u3002\u5176\u4e2d\u4e00\u79cd\u5b9a\u4e49AABB\u7684\u65b9\u5f0f\u662f\u83b7\u53d6\u5de6\u4e0a\u89d2\u70b9\u548c\u53f3\u4e0b\u89d2\u70b9\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u5b9a\u4e49\u7684 GameObject \u7c7b\u5df2\u7ecf\u5305\u542b\u4e86\u4e00\u4e2a\u5de6\u4e0a\u89d2\u70b9\u4f4d\u7f6e\uff08\u5b83\u7684Position vector\uff09\u5e76\u4e14\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u628a\u5de6\u4e0a\u89d2\u70b9\u7684\u77e2\u91cf\u52a0\u4e0a\u5b83\u7684\u5c3a\u5bf8\uff08 Position + Size \uff09\u5f88\u5bb9\u6613\u5730\u8ba1\u7b97\u51fa\u53f3\u4e0b\u89d2\u70b9\u3002\u6bcf\u4e2a GameObject \u90fd\u5305\u542b\u4e00\u4e2aAABB\u6211\u4eec\u53ef\u4ee5\u9ad8\u6548\u5730\u4f7f\u7528\u5b83\u4eec\u78b0\u649e\u3002 \u90a3\u4e48\u6211\u4eec\u5982\u4f55\u5224\u65ad\u78b0\u649e\u5462\uff1f\u5f53\u4e24\u4e2a\u78b0\u649e\u5916\u5f62\u8fdb\u5165\u5bf9\u65b9\u7684\u533a\u57df\u65f6\u5c31\u4f1a\u53d1\u751f\u78b0\u649e\uff0c\u4f8b\u5982\u5b9a\u4e49\u4e86\u7b2c\u4e00\u4e2a\u7269\u4f53\u7684\u78b0\u649e\u5916\u5f62\u4ee5\u67d0\u79cd\u5f62\u5f0f\u8fdb\u5165\u4e86\u7b2c\u4e8c\u4e2a\u7269\u4f53\u7684\u78b0\u649e\u5916\u5f62\u3002\u5bf9\u4e8eAABB\u6765\u8bf4\u5f88\u5bb9\u6613\u5224\u65ad\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u4e0e\u5750\u6807\u8f74\u5bf9\u9f50\u7684\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u8f74\u6211\u4eec\u8981\u68c0\u6d4b\u4e24\u4e2a\u7269\u4f53\u7684\u8fb9\u754c\u5728\u6b64\u8f74\u5411\u662f\u5426\u6709\u91cd\u53e0\u3002\u56e0\u6b64\u6211\u4eec\u53ea\u662f\u7b80\u5355\u5730\u68c0\u67e5\u4e24\u4e2a\u7269\u4f53\u7684\u6c34\u5e73\u8fb9\u754c\u662f\u5426\u91cd\u5408\u4ee5\u53ca\u5782\u76f4\u8fb9\u754c\u662f\u5426\u91cd\u5408\u3002\u5982\u679c\u6c34\u5e73\u8fb9\u754c \u548c \u5782\u76f4\u8fb9\u754c\u90fd\u6709\u91cd\u53e0\u90a3\u4e48\u6211\u4eec\u5c31\u68c0\u6d4b\u5230\u4e00\u6b21\u78b0\u649e\u3002 \u5c06\u8fd9\u4e00\u6982\u5ff5\u8f6c\u5316\u4e3a\u4ee3\u7801\u4e5f\u662f\u5f88\u76f4\u767d\u7684\u3002\u6211\u4eec\u5bf9\u4e24\u4e2a\u8f74\u90fd\u68c0\u6d4b\u662f\u5426\u91cd\u53e0\uff0c\u5982\u679c\u90fd\u91cd\u53e0\u5c31\u8fd4\u56de\u78b0\u649e\uff1a GLboolean CheckCollision(GameObject &one, GameObject &two) // AABB - AABB collision { // x\u8f74\u65b9\u5411\u78b0\u649e\uff1f bool collisionX = one.Position.x + one.Size.x >= two.Position.x && two.Position.x + two.Size.x >= one.Position.x; // y\u8f74\u65b9\u5411\u78b0\u649e\uff1f bool collisionY = one.Position.y + one.Size.y >= two.Position.y && two.Position.y + two.Size.y >= one.Position.y; // \u53ea\u6709\u4e24\u4e2a\u8f74\u5411\u90fd\u6709\u78b0\u649e\u65f6\u624d\u78b0\u649e return collisionX && collisionY; } \u6211\u4eec\u68c0\u67e5\u7b2c\u4e00\u4e2a\u7269\u4f53\u7684\u6700\u53f3\u4fa7\u662f\u5426\u5927\u4e8e\u7b2c\u4e8c\u4e2a\u7269\u4f53\u7684\u6700\u5de6\u4fa7 \u5e76\u4e14 \u7b2c\u4e8c\u4e2a\u7269\u4f53\u7684\u6700\u53f3\u4fa7\u662f\u5426\u5927\u4e8e\u7b2c\u4e00\u4e2a\u7269\u4f53\u7684\u6700\u5de6\u4fa7\uff1b\u5782\u76f4\u7684\u8f74\u5411\u4e0e\u6b64\u76f8\u4f3c\u3002\u5982\u679c\u60a8\u65e0\u6cd5\u987a\u5229\u5730\u5c06\u8fd9\u4e00\u8fc7\u7a0b\u53ef\u89c6\u5316\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5728\u7eb8\u4e0a\u753b\u8fb9\u754c\u7ebf/\u957f\u65b9\u5f62\u6765\u81ea\u884c\u5224\u65ad\u3002 \u4e3a\u66f4\u597d\u5730\u7ec4\u7ec7\u78b0\u649e\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u5728 Game \u7c7b\u4e2d\u52a0\u5165\u4e00\u4e2a\u989d\u5916\u7684\u51fd\u6570\uff1a class Game { public: [...] void DoCollisions(); }; \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 DoCollisions \u6765\u68c0\u67e5\u7403\u4e0e\u5173\u5361\u4e2d\u7684\u7816\u5757\u662f\u5426\u53d1\u751f\u78b0\u649e\u3002\u5982\u679c\u68c0\u6d4b\u5230\u78b0\u649e\uff0c\u5c31\u5c06\u7816\u5757\u7684 Destroyed \u5c5e\u6027\u8bbe\u4e3a true \uff0c\u6b64\u4e3e\u4f1a\u505c\u6b62\u5173\u5361\u4e2d\u5bf9\u6b64\u7816\u5757\u7684\u6e32\u67d3\u3002 void Game::DoCollisions() { for (GameObject &box : this->Levels[this->Level].Bricks) { if (!box.Destroyed) { if (CheckCollision(*Ball, box)) { if (!box.IsSolid) box.Destroyed = GL_TRUE; } } } } \u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u66f4\u65b0 Game \u7684 Update \u51fd\u6570\uff1a void Game::Update(GLfloat dt) { // \u66f4\u65b0\u5bf9\u8c61 Ball->Move(dt, this->Width); // \u68c0\u6d4b\u78b0\u649e this->DoCollisions(); } \u6b64\u65f6\u5982\u679c\u6211\u4eec\u8fd0\u884c\u4ee3\u7801\uff0c\u7403\u4f1a\u4e0e\u6bcf\u4e2a\u7816\u5757\u8fdb\u884c\u78b0\u649e\u68c0\u6d4b\uff0c\u5982\u679c\u7816\u5757\u4e0d\u662f\u5b9e\u5fc3\u7684\uff0c\u5219\u8868\u793a\u7816\u5757\u88ab\u9500\u6bc1\u3002\u5982\u679c\u8fd0\u884c\u6e38\u620f\u4ee5\u4e0b\u662f\u4f60\u4f1a\u770b\u5230\u7684\uff1a \u867d\u7136\u78b0\u649e\u68c0\u6d4b\u786e\u5b9e\u751f\u6548\uff0c\u4f46\u5e76\u4e0d\u662f\u975e\u5e38\u51c6\u786e\uff0c\u56e0\u4e3a\u7403\u4f1a\u5728\u4e0d\u76f4\u63a5\u63a5\u89e6\u5230\u5927\u591a\u6570\u7816\u5757\u65f6\u4e0e\u5b83\u4eec\u53d1\u751f\u78b0\u649e\u3002\u6211\u4eec\u6765\u5b9e\u73b0\u53e6\u4e00\u79cd\u78b0\u649e\u68c0\u6d4b\u6280\u672f\u3002 AABB - \u5706\u78b0\u649e\u68c0\u6d4b \u7531\u4e8e\u7403\u662f\u4e00\u4e2a\u5706\u5f62\u7684\u7269\u4f53\uff0cAABB\u6216\u8bb8\u4e0d\u662f\u7403\u7684\u6700\u4f73\u78b0\u649e\u5916\u5f62\u3002\u78b0\u649e\u7684\u4ee3\u7801\u4e2d\u5c06\u7403\u89c6\u4e3a\u957f\u65b9\u5f62\u6846\uff0c\u56e0\u6b64\u5e38\u5e38\u4f1a\u51fa\u73b0\u7403\u78b0\u649e\u4e86\u7816\u5757\u4f46\u6b64\u65f6\u7403\u7cbe\u7075\u8fd8\u6ca1\u6709\u63a5\u89e6\u5230\u7816\u5757\u3002 \u4f7f\u7528\u5706\u5f62\u78b0\u649e\u5916\u5f62\u800c\u4e0d\u662fAABB\u6765\u4ee3\u8868\u7403\u4f1a\u66f4\u5408\u4e4e\u5e38\u7406\u3002\u56e0\u6b64\u6211\u4eec\u5728\u7403\u5bf9\u8c61\u4e2d\u5305\u542b\u4e86 Radius \u53d8\u91cf\uff0c\u4e3a\u4e86\u5b9a\u4e49\u5706\u5f62\u78b0\u649e\u5916\u5f62\uff0c\u6211\u4eec\u9700\u8981\u7684\u662f\u4e00\u4e2a\u4f4d\u7f6e\u77e2\u91cf\u548c\u4e00\u4e2a\u534a\u5f84\u3002 \u8fd9\u610f\u5473\u7740\u6211\u4eec\u4e0d\u5f97\u4e0d\u4fee\u6539\u68c0\u6d4b\u7b97\u6cd5\uff0c\u56e0\u4e3a\u5f53\u524d\u7684\u7b97\u6cd5\u53ea\u9002\u7528\u4e8e\u4e24\u4e2aAABB\u7684\u78b0\u649e\u3002\u68c0\u6d4b\u5706\u548cAABB\u78b0\u649e\u7684\u7b97\u6cd5\u4f1a\u7a0d\u7a0d\u590d\u6742\uff0c\u5173\u952e\u70b9\u5982\u4e0b\uff1a\u6211\u4eec\u4f1a\u627e\u5230AABB\u4e0a\u8ddd\u79bb\u5706\u6700\u8fd1\u7684\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u5706\u5230\u8fd9\u4e00\u70b9\u7684\u8ddd\u79bb\u5c0f\u4e8e\u5b83\u7684\u534a\u5f84\uff0c\u90a3\u4e48\u5c31\u4ea7\u751f\u4e86\u78b0\u649e\u3002 \u96be\u70b9\u5728\u4e8e\u83b7\u53d6AABB\u4e0a\u7684\u6700\u8fd1\u70b9 \\bar{P} \u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u5bf9\u4e8e\u4efb\u610f\u7684AABB\u548c\u5706\u6211\u4eec\u5982\u4f55\u8ba1\u7b97\u8be5\u70b9\uff1a \u9996\u5148\u6211\u4eec\u8981\u83b7\u53d6\u7403\u5fc3 \\bar{C} \u4e0eAABB\u4e2d\u5fc3 \\bar{B} \u7684\u77e2\u91cf\u5dee \\bar{D} \u3002\u63a5\u4e0b\u6765\u7528AABB\u7684\u534a\u8fb9\u957f(half-extents) w \u548c \\bar{h} \u6765 \u9650\u5236(clamp) \u77e2\u91cf \\bar{D} \u3002\u957f\u65b9\u5f62\u7684\u534a\u8fb9\u957f\u662f\u6307\u957f\u65b9\u5f62\u7684\u4e2d\u5fc3\u5230\u5b83\u7684\u8fb9\u7684\u8ddd\u79bb\uff1b\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u5b83\u7684\u5c3a\u5bf8\u9664\u4ee52\u3002\u8fd9\u4e00\u8fc7\u7a0b\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u603b\u662f\u4f4d\u4e8eAABB\u7684\u8fb9\u4e0a\u7684\u4f4d\u7f6e\u77e2\u91cf\uff08\u9664\u975e\u5706\u5fc3\u5728AABB\u5185\u90e8\uff09\u3002 Important \u9650\u5236\u8fd0\u7b97\u628a\u4e00\u4e2a\u503c \u9650\u5236 \u5728\u7ed9\u5b9a\u8303\u56f4\u5185\uff0c\u5e76\u8fd4\u56de\u9650\u5236\u540e\u7684\u503c\u3002\u901a\u5e38\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a float clamp(float value, float min, float max) { return std::max(min, std::min(max, value)); } \u4f8b\u5982\uff0c\u503c 42.0f \u88ab\u9650\u5236\u5230 6.0f \u548c 3.0f \u4e4b\u95f4\u4f1a\u5f97\u5230 6.0f \uff1b\u800c 4.20f \u4f1a\u88ab\u9650\u5236\u4e3a 4.20f \u3002 \u9650\u5236\u4e00\u4e2a2D\u7684\u77e2\u91cf\u8868\u793a\u5c06\u5176 x \u548c y \u5206\u91cf\u90fd\u9650\u5236\u5728\u7ed9\u5b9a\u7684\u8303\u56f4\u5185\u3002 \u8fd9\u4e2a\u9650\u5236\u540e\u77e2\u91cf \\bar{P} \u5c31\u662fAABB\u4e0a\u8ddd\u79bb\u5706\u6700\u8fd1\u7684\u70b9\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u505a\u7684\u5c31\u662f\u8ba1\u7b97\u4e00\u4e2a\u65b0\u7684\u5dee\u77e2\u91cf \\bar{D'} \uff0c\u5b83\u662f\u5706\u5fc3 \\bar{C} \u548c \\bar{P} \u7684\u5dee\u77e2\u91cf\u3002 \u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u77e2\u91cf \\bar{D'} \uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6bd4\u8f83\u5b83\u7684\u957f\u5ea6\u548c\u5706\u7684\u534a\u5f84\u4ee5\u5224\u65ad\u662f\u5426\u53d1\u751f\u4e86\u78b0\u649e\u3002 \u8fd9\u4e00\u8fc7\u7a0b\u901a\u8fc7\u4e0b\u8fb9\u7684\u4ee3\u7801\u6765\u8868\u793a\uff1a GLboolean CheckCollision(BallObject &one, GameObject &two) // AABB - Circle collision { // \u83b7\u53d6\u5706\u7684\u4e2d\u5fc3 glm::vec2 center(one.Position + one.Radius); // \u8ba1\u7b97AABB\u7684\u4fe1\u606f\uff08\u4e2d\u5fc3\u3001\u534a\u8fb9\u957f\uff09 glm::vec2 aabb_half_extents(two.Size.x / 2, two.Size.y / 2); glm::vec2 aabb_center( two.Position.x + aabb_half_extents.x, two.Position.y + aabb_half_extents.y ); // \u83b7\u53d6\u4e24\u4e2a\u4e2d\u5fc3\u7684\u5dee\u77e2\u91cf glm::vec2 difference = center - aabb_center; glm::vec2 clamped = glm::clamp(difference, -aabb_half_extents, aabb_half_extents); // AABB_center\u52a0\u4e0aclamped\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u78b0\u649e\u7bb1\u4e0a\u8ddd\u79bb\u5706\u6700\u8fd1\u7684\u70b9closest glm::vec2 closest = aabb_center + clamped; // \u83b7\u5f97\u5706\u5fc3center\u548c\u6700\u8fd1\u70b9closest\u7684\u77e2\u91cf\u5e76\u5224\u65ad\u662f\u5426 length <= radius difference = closest - center; return glm::length(difference) < one.Radius; } \u6211\u4eec\u521b\u5efa\u4e86 CheckCollision \u7684\u4e00\u4e2a\u91cd\u8f7d\u51fd\u6570\u7528\u4e8e\u4e13\u95e8\u5904\u7406\u4e00\u4e2a BallObject \u548c\u4e00\u4e2a GameObject \u7684\u60c5\u51b5\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u6ca1\u6709\u5728\u5bf9\u8c61\u4e2d\u4fdd\u5b58\u78b0\u649e\u5916\u5f62\u7684\u4fe1\u606f\uff0c\u56e0\u6b64\u6211\u4eec\u5fc5\u987b\u4e3a\u5176\u8ba1\u7b97\uff1a\u9996\u5148\u8ba1\u7b97\u7403\u5fc3\uff0c\u7136\u540e\u662fAABB\u7684\u534a\u8fb9\u957f\u53ca\u4e2d\u5fc3\u3002 \u4f7f\u7528\u8fd9\u4e9b\u78b0\u649e\u5916\u5f62\u7684\u53c2\u6570\uff0c\u6211\u4eec\u8ba1\u7b97\u51fa difference \\bar{D} \u7136\u540e\u5f97\u5230\u9650\u5236\u540e\u7684\u503c clamped \uff0c\u5e76\u4e0eAABB\u4e2d\u5fc3\u76f8\u52a0\u5f97\u5230 closest \\bar{P} \u3002\u7136\u540e\u8ba1\u7b97\u51fa center \u548c closest \u7684\u77e2\u91cf\u5dee \\bar{D'} \u5e76\u8fd4\u56de\u4e24\u4e2a\u5916\u5f62\u662f\u5426\u78b0\u649e\u3002 \u4e4b\u524d\u6211\u4eec\u8c03\u7528 CheckCollision \u65f6\u5c06\u7403\u5bf9\u8c61\u4f5c\u4e3a\u5176\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u56e0\u6b64\u73b0\u5728 CheckCollision \u7684\u91cd\u8f7d\u53d8\u91cf\u4f1a\u81ea\u52a8\u751f\u6548\uff0c\u6211\u4eec\u65e0\u9700\u4fee\u6539\u4efb\u4f55\u4ee3\u7801\u3002\u73b0\u5728\u7684\u7ed3\u679c\u4f1a\u6bd4\u4e4b\u524d\u7684\u78b0\u649e\u68c0\u6d4b\u7b97\u6cd5\u66f4\u51c6\u786e\u3002 \u770b\u8d77\u6765\u751f\u6548\u4e86\uff0c\u4f46\u4ecd\u7f3a\u5c11\u4e00\u4e9b\u4e1c\u897f\u3002\u6211\u4eec\u51c6\u786e\u5730\u68c0\u6d4b\u4e86\u6240\u6709\u78b0\u649e\uff0c\u4f46\u78b0\u649e\u5e76\u6ca1\u6709\u5bf9\u7403\u4ea7\u751f\u4efb\u4f55\u53cd\u4f5c\u7528\u3002\u6211\u4eec\u9700\u8981\u5728\u78b0\u649e\u65f6\u4ea7\u751f\u4e00\u4e9b \u53cd\u4f5c\u7528 \uff0c\u4f8b\u5982\u5f53\u78b0\u649e\u53d1\u751f\u65f6\uff0c\u66f4\u65b0\u7403\u7684\u4f4d\u7f6e\u548c/\u6216\u901f\u5ea6\u3002\u8fd9\u5c06\u662f \u4e0b\u4e00\u4e2a \u6559\u7a0b\u7684\u4e3b\u9898\u3002","title":"\u78b0\u649e\u68c0\u6d4b"},{"location":"06%20In%20Practice/2D-Game/05%20Collisions/02%20Collision%20detection/#_1","text":"\u539f\u6587 Collision detection \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 aillieo \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u5f53\u8bd5\u56fe\u5224\u65ad\u4e24\u4e2a\u7269\u4f53\u4e4b\u95f4\u662f\u5426\u6709\u78b0\u649e\u53d1\u751f\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u4e0d\u4f7f\u7528\u7269\u4f53\u672c\u8eab\u7684\u6570\u636e\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u7269\u4f53\u5e38\u5e38\u4f1a\u5f88\u590d\u6742\uff0c\u8fd9\u5c06\u5bfc\u81f4\u78b0\u649e\u68c0\u6d4b\u53d8\u5f97\u5f88\u590d\u6742\u3002\u6b63\u56e0\u8fd9\u4e00\u70b9\uff0c\u4f7f\u7528 \u91cd\u53e0 \u5728\u7269\u4f53\u4e0a\u7684\u66f4\u7b80\u5355\u7684\u5916\u5f62\uff08\u901a\u5e38\u6709\u8f83\u7b80\u5355\u660e\u786e\u7684\u6570\u5b66\u5b9a\u4e49\uff09\u6765\u8fdb\u884c\u78b0\u649e\u68c0\u6d4b\u6210\u4e3a\u5e38\u7528\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u57fa\u4e8e\u8fd9\u4e9b\u7b80\u5355\u7684\u5916\u5f62\u6765\u68c0\u6d4b\u78b0\u649e\uff0c\u8fd9\u6837\u4ee3\u7801\u4f1a\u53d8\u5f97\u66f4\u7b80\u5355\u4e14\u8282\u7701\u4e86\u5f88\u591a\u6027\u80fd\u3002\u8fd9\u4e9b \u78b0\u649e\u5916\u5f62 \u4f8b\u5982\u5706\u3001\u7403\u4f53\u3001\u957f\u65b9\u5f62\u548c\u7acb\u65b9\u4f53\u7b49\uff0c\u4e0e\u62e5\u6709\u4e0a\u767e\u4e2a\u4e09\u89d2\u5f62\u7684\u7f51\u683c\u76f8\u6bd4\u7b80\u5355\u4e86\u5f88\u591a\u3002 \u867d\u7136\u5b83\u4eec\u786e\u5b9e\u63d0\u4f9b\u4e86\u66f4\u7b80\u5355\u66f4\u9ad8\u6548\u7684\u78b0\u649e\u68c0\u6d4b\u7b97\u6cd5\uff0c\u4f46\u8fd9\u4e9b\u7b80\u5355\u7684\u78b0\u649e\u5916\u5f62\u62e5\u6709\u4e00\u4e2a\u5171\u540c\u7684\u7f3a\u70b9\uff0c\u8fd9\u4e9b\u5916\u5f62\u901a\u5e38\u65e0\u6cd5\u5b8c\u5168\u5305\u88f9\u7269\u4f53\u3002\u4ea7\u751f\u7684\u5f71\u54cd\u5c31\u662f\u5f53\u68c0\u6d4b\u5230\u78b0\u649e\u65f6\uff0c\u5b9e\u9645\u7684\u7269\u4f53\u5e76\u6ca1\u6709\u771f\u6b63\u7684\u78b0\u649e\u3002\u5fc5\u987b\u8bb0\u4f4f\u7684\u662f\u8fd9\u4e9b\u5916\u5f62\u4ec5\u4ec5\u662f\u771f\u5b9e\u5916\u5f62\u7684\u8fd1\u4f3c\u3002","title":"\u78b0\u649e\u68c0\u6d4b"},{"location":"06%20In%20Practice/2D-Game/05%20Collisions/02%20Collision%20detection/#aabb-aabb","text":"AABB\u4ee3\u8868\u7684\u662f \u8f74\u5bf9\u9f50\u78b0\u649e\u7bb1 (Axis-aligned Bounding Box)\uff0c\u78b0\u649e\u7bb1\u662f\u6307\u4e0e\u573a\u666f\u57fa\u7840\u5750\u6807\u8f74\uff082D\u4e2d\u7684\u662fx\u548cy\u8f74\uff09\u5bf9\u9f50\u7684\u957f\u65b9\u5f62\u7684\u78b0\u649e\u5916\u5f62\u3002\u4e0e\u5750\u6807\u8f74\u5bf9\u9f50\u610f\u5473\u7740\u8fd9\u4e2a\u957f\u65b9\u5f62\u6ca1\u6709\u7ecf\u8fc7\u65cb\u8f6c\u5e76\u4e14\u5b83\u7684\u8fb9\u7ebf\u548c\u573a\u666f\u4e2d\u57fa\u7840\u5750\u6807\u8f74\u5e73\u884c\uff08\u4f8b\u5982\uff0c\u5de6\u53f3\u8fb9\u7ebf\u548cy\u8f74\u5e73\u884c\uff09\u3002\u8fd9\u4e9b\u78b0\u649e\u7bb1\u603b\u662f\u548c\u573a\u666f\u7684\u5750\u6807\u8f74\u5e73\u884c\uff0c\u8fd9\u4f7f\u5f97\u6240\u6709\u7684\u8ba1\u7b97\u90fd\u53d8\u5f97\u66f4\u7b80\u5355\u3002\u4e0b\u8fb9\u662f\u6211\u4eec\u7528\u4e00\u4e2aAABB\u5305\u88f9\u4e00\u4e2a\u7403\u5bf9\u8c61\uff08\u7269\u4f53\uff09\uff1a Breakout\u4e2d\u51e0\u4e4e\u6240\u6709\u7684\u7269\u4f53\u90fd\u662f\u57fa\u4e8e\u957f\u65b9\u5f62\u7684\u7269\u4f53\uff0c\u56e0\u6b64\u5f88\u7406\u6240\u5e94\u5f53\u5730\u4f7f\u7528\u8f74\u5bf9\u9f50\u78b0\u649e\u7bb1\u6765\u8fdb\u884c\u78b0\u649e\u68c0\u6d4b\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u505a\u7684\u3002 \u6709\u591a\u79cd\u65b9\u5f0f\u6765\u5b9a\u4e49\u4e0e\u5750\u6807\u8f74\u5bf9\u9f50\u7684\u78b0\u649e\u7bb1\u3002\u5176\u4e2d\u4e00\u79cd\u5b9a\u4e49AABB\u7684\u65b9\u5f0f\u662f\u83b7\u53d6\u5de6\u4e0a\u89d2\u70b9\u548c\u53f3\u4e0b\u89d2\u70b9\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u5b9a\u4e49\u7684 GameObject \u7c7b\u5df2\u7ecf\u5305\u542b\u4e86\u4e00\u4e2a\u5de6\u4e0a\u89d2\u70b9\u4f4d\u7f6e\uff08\u5b83\u7684Position vector\uff09\u5e76\u4e14\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u628a\u5de6\u4e0a\u89d2\u70b9\u7684\u77e2\u91cf\u52a0\u4e0a\u5b83\u7684\u5c3a\u5bf8\uff08 Position + Size \uff09\u5f88\u5bb9\u6613\u5730\u8ba1\u7b97\u51fa\u53f3\u4e0b\u89d2\u70b9\u3002\u6bcf\u4e2a GameObject \u90fd\u5305\u542b\u4e00\u4e2aAABB\u6211\u4eec\u53ef\u4ee5\u9ad8\u6548\u5730\u4f7f\u7528\u5b83\u4eec\u78b0\u649e\u3002 \u90a3\u4e48\u6211\u4eec\u5982\u4f55\u5224\u65ad\u78b0\u649e\u5462\uff1f\u5f53\u4e24\u4e2a\u78b0\u649e\u5916\u5f62\u8fdb\u5165\u5bf9\u65b9\u7684\u533a\u57df\u65f6\u5c31\u4f1a\u53d1\u751f\u78b0\u649e\uff0c\u4f8b\u5982\u5b9a\u4e49\u4e86\u7b2c\u4e00\u4e2a\u7269\u4f53\u7684\u78b0\u649e\u5916\u5f62\u4ee5\u67d0\u79cd\u5f62\u5f0f\u8fdb\u5165\u4e86\u7b2c\u4e8c\u4e2a\u7269\u4f53\u7684\u78b0\u649e\u5916\u5f62\u3002\u5bf9\u4e8eAABB\u6765\u8bf4\u5f88\u5bb9\u6613\u5224\u65ad\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u4e0e\u5750\u6807\u8f74\u5bf9\u9f50\u7684\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u8f74\u6211\u4eec\u8981\u68c0\u6d4b\u4e24\u4e2a\u7269\u4f53\u7684\u8fb9\u754c\u5728\u6b64\u8f74\u5411\u662f\u5426\u6709\u91cd\u53e0\u3002\u56e0\u6b64\u6211\u4eec\u53ea\u662f\u7b80\u5355\u5730\u68c0\u67e5\u4e24\u4e2a\u7269\u4f53\u7684\u6c34\u5e73\u8fb9\u754c\u662f\u5426\u91cd\u5408\u4ee5\u53ca\u5782\u76f4\u8fb9\u754c\u662f\u5426\u91cd\u5408\u3002\u5982\u679c\u6c34\u5e73\u8fb9\u754c \u548c \u5782\u76f4\u8fb9\u754c\u90fd\u6709\u91cd\u53e0\u90a3\u4e48\u6211\u4eec\u5c31\u68c0\u6d4b\u5230\u4e00\u6b21\u78b0\u649e\u3002 \u5c06\u8fd9\u4e00\u6982\u5ff5\u8f6c\u5316\u4e3a\u4ee3\u7801\u4e5f\u662f\u5f88\u76f4\u767d\u7684\u3002\u6211\u4eec\u5bf9\u4e24\u4e2a\u8f74\u90fd\u68c0\u6d4b\u662f\u5426\u91cd\u53e0\uff0c\u5982\u679c\u90fd\u91cd\u53e0\u5c31\u8fd4\u56de\u78b0\u649e\uff1a GLboolean CheckCollision(GameObject &one, GameObject &two) // AABB - AABB collision { // x\u8f74\u65b9\u5411\u78b0\u649e\uff1f bool collisionX = one.Position.x + one.Size.x >= two.Position.x && two.Position.x + two.Size.x >= one.Position.x; // y\u8f74\u65b9\u5411\u78b0\u649e\uff1f bool collisionY = one.Position.y + one.Size.y >= two.Position.y && two.Position.y + two.Size.y >= one.Position.y; // \u53ea\u6709\u4e24\u4e2a\u8f74\u5411\u90fd\u6709\u78b0\u649e\u65f6\u624d\u78b0\u649e return collisionX && collisionY; } \u6211\u4eec\u68c0\u67e5\u7b2c\u4e00\u4e2a\u7269\u4f53\u7684\u6700\u53f3\u4fa7\u662f\u5426\u5927\u4e8e\u7b2c\u4e8c\u4e2a\u7269\u4f53\u7684\u6700\u5de6\u4fa7 \u5e76\u4e14 \u7b2c\u4e8c\u4e2a\u7269\u4f53\u7684\u6700\u53f3\u4fa7\u662f\u5426\u5927\u4e8e\u7b2c\u4e00\u4e2a\u7269\u4f53\u7684\u6700\u5de6\u4fa7\uff1b\u5782\u76f4\u7684\u8f74\u5411\u4e0e\u6b64\u76f8\u4f3c\u3002\u5982\u679c\u60a8\u65e0\u6cd5\u987a\u5229\u5730\u5c06\u8fd9\u4e00\u8fc7\u7a0b\u53ef\u89c6\u5316\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5728\u7eb8\u4e0a\u753b\u8fb9\u754c\u7ebf/\u957f\u65b9\u5f62\u6765\u81ea\u884c\u5224\u65ad\u3002 \u4e3a\u66f4\u597d\u5730\u7ec4\u7ec7\u78b0\u649e\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u5728 Game \u7c7b\u4e2d\u52a0\u5165\u4e00\u4e2a\u989d\u5916\u7684\u51fd\u6570\uff1a class Game { public: [...] void DoCollisions(); }; \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 DoCollisions \u6765\u68c0\u67e5\u7403\u4e0e\u5173\u5361\u4e2d\u7684\u7816\u5757\u662f\u5426\u53d1\u751f\u78b0\u649e\u3002\u5982\u679c\u68c0\u6d4b\u5230\u78b0\u649e\uff0c\u5c31\u5c06\u7816\u5757\u7684 Destroyed \u5c5e\u6027\u8bbe\u4e3a true \uff0c\u6b64\u4e3e\u4f1a\u505c\u6b62\u5173\u5361\u4e2d\u5bf9\u6b64\u7816\u5757\u7684\u6e32\u67d3\u3002 void Game::DoCollisions() { for (GameObject &box : this->Levels[this->Level].Bricks) { if (!box.Destroyed) { if (CheckCollision(*Ball, box)) { if (!box.IsSolid) box.Destroyed = GL_TRUE; } } } } \u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u66f4\u65b0 Game \u7684 Update \u51fd\u6570\uff1a void Game::Update(GLfloat dt) { // \u66f4\u65b0\u5bf9\u8c61 Ball->Move(dt, this->Width); // \u68c0\u6d4b\u78b0\u649e this->DoCollisions(); } \u6b64\u65f6\u5982\u679c\u6211\u4eec\u8fd0\u884c\u4ee3\u7801\uff0c\u7403\u4f1a\u4e0e\u6bcf\u4e2a\u7816\u5757\u8fdb\u884c\u78b0\u649e\u68c0\u6d4b\uff0c\u5982\u679c\u7816\u5757\u4e0d\u662f\u5b9e\u5fc3\u7684\uff0c\u5219\u8868\u793a\u7816\u5757\u88ab\u9500\u6bc1\u3002\u5982\u679c\u8fd0\u884c\u6e38\u620f\u4ee5\u4e0b\u662f\u4f60\u4f1a\u770b\u5230\u7684\uff1a \u867d\u7136\u78b0\u649e\u68c0\u6d4b\u786e\u5b9e\u751f\u6548\uff0c\u4f46\u5e76\u4e0d\u662f\u975e\u5e38\u51c6\u786e\uff0c\u56e0\u4e3a\u7403\u4f1a\u5728\u4e0d\u76f4\u63a5\u63a5\u89e6\u5230\u5927\u591a\u6570\u7816\u5757\u65f6\u4e0e\u5b83\u4eec\u53d1\u751f\u78b0\u649e\u3002\u6211\u4eec\u6765\u5b9e\u73b0\u53e6\u4e00\u79cd\u78b0\u649e\u68c0\u6d4b\u6280\u672f\u3002","title":"AABB - AABB \u78b0\u649e"},{"location":"06%20In%20Practice/2D-Game/05%20Collisions/02%20Collision%20detection/#aabb-","text":"\u7531\u4e8e\u7403\u662f\u4e00\u4e2a\u5706\u5f62\u7684\u7269\u4f53\uff0cAABB\u6216\u8bb8\u4e0d\u662f\u7403\u7684\u6700\u4f73\u78b0\u649e\u5916\u5f62\u3002\u78b0\u649e\u7684\u4ee3\u7801\u4e2d\u5c06\u7403\u89c6\u4e3a\u957f\u65b9\u5f62\u6846\uff0c\u56e0\u6b64\u5e38\u5e38\u4f1a\u51fa\u73b0\u7403\u78b0\u649e\u4e86\u7816\u5757\u4f46\u6b64\u65f6\u7403\u7cbe\u7075\u8fd8\u6ca1\u6709\u63a5\u89e6\u5230\u7816\u5757\u3002 \u4f7f\u7528\u5706\u5f62\u78b0\u649e\u5916\u5f62\u800c\u4e0d\u662fAABB\u6765\u4ee3\u8868\u7403\u4f1a\u66f4\u5408\u4e4e\u5e38\u7406\u3002\u56e0\u6b64\u6211\u4eec\u5728\u7403\u5bf9\u8c61\u4e2d\u5305\u542b\u4e86 Radius \u53d8\u91cf\uff0c\u4e3a\u4e86\u5b9a\u4e49\u5706\u5f62\u78b0\u649e\u5916\u5f62\uff0c\u6211\u4eec\u9700\u8981\u7684\u662f\u4e00\u4e2a\u4f4d\u7f6e\u77e2\u91cf\u548c\u4e00\u4e2a\u534a\u5f84\u3002 \u8fd9\u610f\u5473\u7740\u6211\u4eec\u4e0d\u5f97\u4e0d\u4fee\u6539\u68c0\u6d4b\u7b97\u6cd5\uff0c\u56e0\u4e3a\u5f53\u524d\u7684\u7b97\u6cd5\u53ea\u9002\u7528\u4e8e\u4e24\u4e2aAABB\u7684\u78b0\u649e\u3002\u68c0\u6d4b\u5706\u548cAABB\u78b0\u649e\u7684\u7b97\u6cd5\u4f1a\u7a0d\u7a0d\u590d\u6742\uff0c\u5173\u952e\u70b9\u5982\u4e0b\uff1a\u6211\u4eec\u4f1a\u627e\u5230AABB\u4e0a\u8ddd\u79bb\u5706\u6700\u8fd1\u7684\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u5706\u5230\u8fd9\u4e00\u70b9\u7684\u8ddd\u79bb\u5c0f\u4e8e\u5b83\u7684\u534a\u5f84\uff0c\u90a3\u4e48\u5c31\u4ea7\u751f\u4e86\u78b0\u649e\u3002 \u96be\u70b9\u5728\u4e8e\u83b7\u53d6AABB\u4e0a\u7684\u6700\u8fd1\u70b9 \\bar{P} \u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u5bf9\u4e8e\u4efb\u610f\u7684AABB\u548c\u5706\u6211\u4eec\u5982\u4f55\u8ba1\u7b97\u8be5\u70b9\uff1a \u9996\u5148\u6211\u4eec\u8981\u83b7\u53d6\u7403\u5fc3 \\bar{C} \u4e0eAABB\u4e2d\u5fc3 \\bar{B} \u7684\u77e2\u91cf\u5dee \\bar{D} \u3002\u63a5\u4e0b\u6765\u7528AABB\u7684\u534a\u8fb9\u957f(half-extents) w \u548c \\bar{h} \u6765 \u9650\u5236(clamp) \u77e2\u91cf \\bar{D} \u3002\u957f\u65b9\u5f62\u7684\u534a\u8fb9\u957f\u662f\u6307\u957f\u65b9\u5f62\u7684\u4e2d\u5fc3\u5230\u5b83\u7684\u8fb9\u7684\u8ddd\u79bb\uff1b\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u5b83\u7684\u5c3a\u5bf8\u9664\u4ee52\u3002\u8fd9\u4e00\u8fc7\u7a0b\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u603b\u662f\u4f4d\u4e8eAABB\u7684\u8fb9\u4e0a\u7684\u4f4d\u7f6e\u77e2\u91cf\uff08\u9664\u975e\u5706\u5fc3\u5728AABB\u5185\u90e8\uff09\u3002 Important \u9650\u5236\u8fd0\u7b97\u628a\u4e00\u4e2a\u503c \u9650\u5236 \u5728\u7ed9\u5b9a\u8303\u56f4\u5185\uff0c\u5e76\u8fd4\u56de\u9650\u5236\u540e\u7684\u503c\u3002\u901a\u5e38\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a float clamp(float value, float min, float max) { return std::max(min, std::min(max, value)); } \u4f8b\u5982\uff0c\u503c 42.0f \u88ab\u9650\u5236\u5230 6.0f \u548c 3.0f \u4e4b\u95f4\u4f1a\u5f97\u5230 6.0f \uff1b\u800c 4.20f \u4f1a\u88ab\u9650\u5236\u4e3a 4.20f \u3002 \u9650\u5236\u4e00\u4e2a2D\u7684\u77e2\u91cf\u8868\u793a\u5c06\u5176 x \u548c y \u5206\u91cf\u90fd\u9650\u5236\u5728\u7ed9\u5b9a\u7684\u8303\u56f4\u5185\u3002 \u8fd9\u4e2a\u9650\u5236\u540e\u77e2\u91cf \\bar{P} \u5c31\u662fAABB\u4e0a\u8ddd\u79bb\u5706\u6700\u8fd1\u7684\u70b9\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u505a\u7684\u5c31\u662f\u8ba1\u7b97\u4e00\u4e2a\u65b0\u7684\u5dee\u77e2\u91cf \\bar{D'} \uff0c\u5b83\u662f\u5706\u5fc3 \\bar{C} \u548c \\bar{P} \u7684\u5dee\u77e2\u91cf\u3002 \u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u77e2\u91cf \\bar{D'} \uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6bd4\u8f83\u5b83\u7684\u957f\u5ea6\u548c\u5706\u7684\u534a\u5f84\u4ee5\u5224\u65ad\u662f\u5426\u53d1\u751f\u4e86\u78b0\u649e\u3002 \u8fd9\u4e00\u8fc7\u7a0b\u901a\u8fc7\u4e0b\u8fb9\u7684\u4ee3\u7801\u6765\u8868\u793a\uff1a GLboolean CheckCollision(BallObject &one, GameObject &two) // AABB - Circle collision { // \u83b7\u53d6\u5706\u7684\u4e2d\u5fc3 glm::vec2 center(one.Position + one.Radius); // \u8ba1\u7b97AABB\u7684\u4fe1\u606f\uff08\u4e2d\u5fc3\u3001\u534a\u8fb9\u957f\uff09 glm::vec2 aabb_half_extents(two.Size.x / 2, two.Size.y / 2); glm::vec2 aabb_center( two.Position.x + aabb_half_extents.x, two.Position.y + aabb_half_extents.y ); // \u83b7\u53d6\u4e24\u4e2a\u4e2d\u5fc3\u7684\u5dee\u77e2\u91cf glm::vec2 difference = center - aabb_center; glm::vec2 clamped = glm::clamp(difference, -aabb_half_extents, aabb_half_extents); // AABB_center\u52a0\u4e0aclamped\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u78b0\u649e\u7bb1\u4e0a\u8ddd\u79bb\u5706\u6700\u8fd1\u7684\u70b9closest glm::vec2 closest = aabb_center + clamped; // \u83b7\u5f97\u5706\u5fc3center\u548c\u6700\u8fd1\u70b9closest\u7684\u77e2\u91cf\u5e76\u5224\u65ad\u662f\u5426 length <= radius difference = closest - center; return glm::length(difference) < one.Radius; } \u6211\u4eec\u521b\u5efa\u4e86 CheckCollision \u7684\u4e00\u4e2a\u91cd\u8f7d\u51fd\u6570\u7528\u4e8e\u4e13\u95e8\u5904\u7406\u4e00\u4e2a BallObject \u548c\u4e00\u4e2a GameObject \u7684\u60c5\u51b5\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u6ca1\u6709\u5728\u5bf9\u8c61\u4e2d\u4fdd\u5b58\u78b0\u649e\u5916\u5f62\u7684\u4fe1\u606f\uff0c\u56e0\u6b64\u6211\u4eec\u5fc5\u987b\u4e3a\u5176\u8ba1\u7b97\uff1a\u9996\u5148\u8ba1\u7b97\u7403\u5fc3\uff0c\u7136\u540e\u662fAABB\u7684\u534a\u8fb9\u957f\u53ca\u4e2d\u5fc3\u3002 \u4f7f\u7528\u8fd9\u4e9b\u78b0\u649e\u5916\u5f62\u7684\u53c2\u6570\uff0c\u6211\u4eec\u8ba1\u7b97\u51fa difference \\bar{D} \u7136\u540e\u5f97\u5230\u9650\u5236\u540e\u7684\u503c clamped \uff0c\u5e76\u4e0eAABB\u4e2d\u5fc3\u76f8\u52a0\u5f97\u5230 closest \\bar{P} \u3002\u7136\u540e\u8ba1\u7b97\u51fa center \u548c closest \u7684\u77e2\u91cf\u5dee \\bar{D'} \u5e76\u8fd4\u56de\u4e24\u4e2a\u5916\u5f62\u662f\u5426\u78b0\u649e\u3002 \u4e4b\u524d\u6211\u4eec\u8c03\u7528 CheckCollision \u65f6\u5c06\u7403\u5bf9\u8c61\u4f5c\u4e3a\u5176\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u56e0\u6b64\u73b0\u5728 CheckCollision \u7684\u91cd\u8f7d\u53d8\u91cf\u4f1a\u81ea\u52a8\u751f\u6548\uff0c\u6211\u4eec\u65e0\u9700\u4fee\u6539\u4efb\u4f55\u4ee3\u7801\u3002\u73b0\u5728\u7684\u7ed3\u679c\u4f1a\u6bd4\u4e4b\u524d\u7684\u78b0\u649e\u68c0\u6d4b\u7b97\u6cd5\u66f4\u51c6\u786e\u3002 \u770b\u8d77\u6765\u751f\u6548\u4e86\uff0c\u4f46\u4ecd\u7f3a\u5c11\u4e00\u4e9b\u4e1c\u897f\u3002\u6211\u4eec\u51c6\u786e\u5730\u68c0\u6d4b\u4e86\u6240\u6709\u78b0\u649e\uff0c\u4f46\u78b0\u649e\u5e76\u6ca1\u6709\u5bf9\u7403\u4ea7\u751f\u4efb\u4f55\u53cd\u4f5c\u7528\u3002\u6211\u4eec\u9700\u8981\u5728\u78b0\u649e\u65f6\u4ea7\u751f\u4e00\u4e9b \u53cd\u4f5c\u7528 \uff0c\u4f8b\u5982\u5f53\u78b0\u649e\u53d1\u751f\u65f6\uff0c\u66f4\u65b0\u7403\u7684\u4f4d\u7f6e\u548c/\u6216\u901f\u5ea6\u3002\u8fd9\u5c06\u662f \u4e0b\u4e00\u4e2a \u6559\u7a0b\u7684\u4e3b\u9898\u3002","title":"AABB - \u5706\u78b0\u649e\u68c0\u6d4b"},{"location":"06%20In%20Practice/2D-Game/05%20Collisions/03%20Collision%20resolution/","text":"\u78b0\u649e\u5904\u7406 \u539f\u6587 Collision resolution \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 aillieo \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u4e0a\u4e2a\u6559\u7a0b\u7684\u6700\u540e\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u79cd\u6709\u6548\u7684\u78b0\u649e\u68c0\u6d4b\u65b9\u6848\u3002\u4f46\u662f\u7403\u5bf9\u68c0\u6d4b\u5230\u7684\u78b0\u649e\u4e0d\u4f1a\u6709\u53cd\u4f5c\u7528\uff1b\u5b83\u4ec5\u4ec5\u662f\u5f84\u76f4\u7a7f\u8fc7\u6240\u6709\u7684\u7816\u5757\u3002\u6211\u4eec\u5e0c\u671b\u7403\u4f1a\u4ece\u649e\u51fb\u5230\u7684\u7816\u5757 \u53cd\u5f39 \u3002\u6b64\u6559\u7a0b\u5c06\u8ba8\u8bba\u5982\u4f55\u4f7f\u7528AABB-\u5706\u78b0\u649e\u65b9\u6848\u5b9e\u73b0\u8fd9\u9879\u79f0\u4e3a \u78b0\u649e\u5904\u7406 (Collision Resolution)\u7684\u529f\u80fd\u3002 \u5f53\u78b0\u649e\u53d1\u751f\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u51fa\u73b0\u4e24\u4e2a\u73b0\u8c61\uff1a\u91cd\u65b0\u5b9a\u4f4d\u7403\uff0c\u4ee5\u514d\u5b83\u8fdb\u5165\u53e6\u4e00\u4e2a\u7269\u4f53\uff0c\u5176\u6b21\u662f\u6539\u53d8\u7403\u7684\u901f\u5ea6\u65b9\u5411\uff0c\u4f7f\u5b83\u770b\u8d77\u6765\u50cf\u662f\u7269\u4f53\u7684\u53cd\u5f39\u3002 \u78b0\u649e\u91cd\u5b9a\u4f4d \u4e3a\u4e86\u628a\u7403\u5bf9\u8c61\u5b9a\u4f4d\u5230\u78b0\u649e\u7684AABB\u7684\u5916\u90e8\uff0c\u6211\u4eec\u5fc5\u987b\u660e\u786e\u7403\u4fb5\u5165\u78b0\u649e\u6846\u7684\u8ddd\u79bb\u3002\u4e3a\u6b64\u6211\u4eec\u8981\u56de\u987e\u4e0a\u4e00\u8282\u6559\u7a0b\u4e2d\u7684\u793a\u610f\u56fe\uff1a \u6b64\u65f6\u7403\u5c11\u91cf\u8fdb\u5165\u4e86AABB\uff0c\u6240\u4ee5\u68c0\u6d4b\u5230\u4e86\u78b0\u649e\u3002\u6211\u4eec\u73b0\u5728\u5e0c\u671b\u5c06\u7403\u4ece\u79fb\u51faAABB\u7684\u5916\u5f62\u4f7f\u5176\u4ec5\u4ec5\u78b0\u89e6\u5230AABB\uff0c\u50cf\u662f\u6ca1\u6709\u78b0\u649e\u4e00\u6837\u3002\u4e3a\u4e86\u786e\u5b9a\u9700\u8981\u5c06\u7403\u4eceAABB\u4e2d\u79fb\u51fa\u591a\u5c11\u8ddd\u79bb\uff0c\u6211\u4eec\u9700\u8981\u627e\u56de\u77e2\u91cf \\bar{R} \uff0c\u5b83\u4ee3\u8868\u7684\u662f\u4fb5\u5165AABB\u7684\u7a0b\u5ea6\u3002\u4e3a\u5f97\u5230 \\bar{R} \u6211\u4eec\u7528\u7403\u7684\u534a\u5f84\u51cf\u53bb \\bar{V} \u3002\u77e2\u91cf \\bar{V} \u662f\u6700\u8fd1\u70b9 \\bar{P} \u548c\u7403\u5fc3 \\bar{C} \u7684\u5dee\u77e2\u91cf\u3002 \u6709\u4e86 \\bar{R} \u4e4b\u540e\u6211\u4eec\u5c06\u7403\u7684\u4f4d\u7f6e\u504f\u79fb \\bar{R} \u5c31\u5c06\u7403\u76f4\u63a5\u653e\u7f6e\u5728\u4e0eAABB\u7d27\u90bb\u7684\u4f4d\u7f6e\uff1b\u6b64\u65f6\u7403\u5df2\u7ecf\u88ab\u91cd\u5b9a\u4f4d\u5230\u5408\u9002\u7684\u4f4d\u7f6e\u3002 \u78b0\u649e\u65b9\u5411 \u4e0b\u4e00\u6b65\u6211\u4eec\u9700\u8981\u786e\u5b9a\u78b0\u649e\u4e4b\u540e\u5982\u4f55\u66f4\u65b0\u7403\u7684\u901f\u5ea6\u3002\u5bf9\u4e8eBreakout\u6211\u4eec\u4f7f\u7528\u4ee5\u4e0b\u89c4\u5219\u6765\u6539\u53d8\u7403\u7684\u901f\u5ea6\uff1a \u5982\u679c\u7403\u649e\u51fbAABB\u7684\u53f3\u4fa7\u6216\u5de6\u4fa7\uff0c\u5b83\u7684\u6c34\u5e73\u901f\u5ea6\uff08 x \uff09\u5c06\u4f1a\u53cd\u8f6c\u3002 \u5982\u679c\u7403\u649e\u51fbAABB\u7684\u4e0a\u4fa7\u6216\u4e0b\u4fa7\uff0c\u5b83\u7684\u5782\u76f4\u901f\u5ea6\uff08 y \uff09\u5c06\u4f1a\u53cd\u8f6c\u3002 \u4f46\u662f\u5982\u4f55\u5224\u65ad\u7403\u649e\u51fbAABB\u7684\u65b9\u5411\u5462\uff1f\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u6709\u5f88\u591a\u79cd\u65b9\u6cd5\uff0c\u5176\u4e2d\u4e4b\u4e00\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u7816\u5757\u4f7f\u75284\u4e2aAABB\u800c\u4e0d\u662f1\u4e2aAABB\uff0c\u5e76\u628a\u5b83\u4eec\u653e\u7f6e\u5230\u7816\u5757\u7684\u6bcf\u4e2a\u8fb9\u4e0a\u3002\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u88ab\u78b0\u649e\u7684\u662f\u54ea\u4e2aAABB\u548c\u54ea\u4e2a\u8fb9\u3002\u4f46\u662f\u6709\u4e00\u79cd\u4f7f\u7528\u70b9\u4e58(dot product)\u7684\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\u3002 \u60a8\u6216\u8bb8\u8fd8\u8bb0\u5f97 \u53d8\u6362 \u6559\u7a0b\u4e2d\u70b9\u4e58\u53ef\u4ee5\u5f97\u5230\u4e24\u4e2a\u6b63\u4ea4\u5316\u7684\u77e2\u91cf\u7684\u5939\u89d2\u3002\u5982\u679c\u6211\u4eec\u5b9a\u4e49\u6307\u5411\u5317\u3001\u5357\u3001\u897f\u548c\u4e1c\u7684\u56db\u4e2a\u77e2\u91cf\uff0c\u7136\u540e\u8ba1\u7b97\u5b83\u4eec\u548c\u7ed9\u5b9a\u77e2\u91cf\u7684\u5939\u89d2\u4f1a\u600e\u4e48\u6837\uff1f\u7531\u8fd9\u56db\u4e2a\u65b9\u5411\u77e2\u91cf\u548c\u7ed9\u5b9a\u7684\u77e2\u91cf\u70b9\u4e58\u79ef\u7684\u7ed3\u679c\u4e2d\u7684\u6700\u9ad8\u503c\uff08\u70b9\u4e58\u79ef\u7684\u6700\u5927\u503c\u4e3a 1.0f \uff0c\u4ee3\u8868 0 \u5ea6\u89d2\uff09\u5373\u662f\u77e2\u91cf\u7684\u65b9\u5411\u3002 \u8fd9\u4e00\u8fc7\u7a0b\u5982\u4e0b\u4ee3\u7801\u6240\u793a\uff1a Direction VectorDirection(glm::vec2 target) { glm::vec2 compass[] = { glm::vec2(0.0f, 1.0f), // \u4e0a glm::vec2(1.0f, 0.0f), // \u53f3 glm::vec2(0.0f, -1.0f), // \u4e0b glm::vec2(-1.0f, 0.0f) // \u5de6 }; GLfloat max = 0.0f; GLuint best_match = -1; for (GLuint i = 0; i < 4; i++) { GLfloat dot_product = glm::dot(glm::normalize(target), compass[i]); if (dot_product > max) { max = dot_product; best_match = i; } } return (Direction)best_match; } \u6b64\u51fd\u6570\u6bd4\u8f83\u4e86 target \u77e2\u91cf\u548c compass \u6570\u7ec4\u4e2d\u5404\u65b9\u5411\u77e2\u91cf\u3002 compass \u6570\u7ec4\u4e2d\u4e0e target \u89d2\u5ea6\u6700\u63a5\u8fd1\u7684\u77e2\u91cf\uff0c\u5373\u662f\u8fd4\u56de\u7ed9\u51fd\u6570\u8c03\u7528\u8005\u7684 Direction \u3002\u8fd9\u91cc\u7684 Direction \u662f\u4e00\u4e2a Game \u7c7b\u7684\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u679a\u4e3e\u7c7b\u578b\uff1a enum Direction { UP, RIGHT, DOWN, LEFT }; \u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u5982\u4f55\u83b7\u5f97 \\bar{R} \u4ee5\u53ca\u5982\u4f55\u5224\u65ad\u7403\u649e\u51fbAABB\u7684\u65b9\u5411\uff0c\u6211\u4eec\u5f00\u59cb\u7f16\u5199\u78b0\u649e\u5904\u7406\u7684\u4ee3\u7801\u3002 AABB - \u5706\u78b0\u649e\u68c0\u6d4b \u4e3a\u4e86\u8ba1\u7b97\u78b0\u649e\u5904\u7406\u6240\u9700\u7684\u6570\u503c\u6211\u4eec\u8981\u4ece\u78b0\u649e\u7684\u51fd\u6570\u4e2d\u83b7\u53d6\u66f4\u591a\u7684\u4fe1\u606f\u800c\u4e0d\u53ea\u53ea\u662f\u4e00\u4e2a true \u6216 false \uff0c\u56e0\u6b64\u6211\u4eec\u8981\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u66f4\u591a\u4fe1\u606f\u7684 tuple \uff0c\u8fd9\u4e9b\u4fe1\u606f\u5373\u662f\u78b0\u649e\u53d1\u751f\u65f6\u7684\u65b9\u5411\u53ca\u5dee\u77e2\u91cf\uff08 \\bar{R} \uff09\u3002\u4f60\u53ef\u4ee5\u5728\u5934\u6587\u4ef6 \u4e2d\u627e\u5230 tuple \u3002 \u4e3a\u4e86\u66f4\u597d\u7ec4\u7ec7\u4ee3\u7801\uff0c\u6211\u4eec\u628a\u78b0\u649e\u76f8\u5173\u7684\u6570\u636e\u4f7f\u7528typedef\u5b9a\u4e49\u4e3a Collision \uff1a typedef std::tuple<GLboolean, Direction, glm::vec2> Collision; \u63a5\u4e0b\u6765\u6211\u4eec\u8fd8\u9700\u8981\u4fee\u6539 CheckCollision \u51fd\u6570\u7684\u4ee3\u7801\uff0c\u4f7f\u5176\u4e0d\u4ec5\u4ec5\u8fd4\u56de true \u6216 false \u800c\u662f\u8fd8\u5305\u542b\u65b9\u5411\u548c\u5dee\u77e2\u91cf\uff1a Collision CheckCollision(BallObject &one, GameObject &two) // AABB - AABB \u78b0\u649e { [...] if (glm::length(difference) <= one.Radius) return std::make_tuple(GL_TRUE, VectorDirection(difference), difference); else return std::make_tuple(GL_FALSE, UP, glm::vec2(0, 0)); } Game \u7c7b\u7684 DoCollision \u51fd\u6570\u73b0\u5728\u4e0d\u4ec5\u4ec5\u53ea\u68c0\u6d4b\u662f\u5426\u51fa\u73b0\u4e86\u78b0\u649e\uff0c\u800c\u4e14\u5728\u78b0\u649e\u53d1\u751f\u65f6\u4f1a\u6709\u9002\u5f53\u7684\u52a8\u4f5c\u3002\u6b64\u51fd\u6570\u73b0\u5728\u4f1a\u8ba1\u7b97\u78b0\u649e\u4fb5\u5165\u7684\u7a0b\u5ea6\uff08\u5982\u672c\u6559\u7a0b\u4e00\u5f00\u59cb\u8ba1\u65f6\u7684\u793a\u610f\u56fe\u4e2d\u6240\u793a\uff09\u5e76\u4e14\u57fa\u4e8e\u78b0\u649e\u65b9\u5411\u4f7f\u7403\u7684\u4f4d\u7f6e\u77e2\u91cf\u4e0e\u5176\u76f8\u52a0\u6216\u76f8\u51cf\u3002 void Game::DoCollisions() { for (GameObject &box : this->Levels[this->Level].Bricks) { if (!box.Destroyed) { Collision collision = CheckCollision(*Ball, box); if (std::get<0>(collision)) // \u5982\u679ccollision \u662f true { // \u5982\u679c\u7816\u5757\u4e0d\u662f\u5b9e\u5fc3\u5c31\u9500\u6bc1\u7816\u5757 if (!box.IsSolid) box.Destroyed = GL_TRUE; // \u78b0\u649e\u5904\u7406 Direction dir = std::get<1>(collision); glm::vec2 diff_vector = std::get<2>(collision); if (dir == LEFT || dir == RIGHT) // \u6c34\u5e73\u65b9\u5411\u78b0\u649e { Ball->Velocity.x = -Ball->Velocity.x; // \u53cd\u8f6c\u6c34\u5e73\u901f\u5ea6 // \u91cd\u5b9a\u4f4d GLfloat penetration = Ball->Radius - std::abs(diff_vector.x); if (dir == LEFT) Ball->Position.x += penetration; // \u5c06\u7403\u53f3\u79fb else Ball->Position.x -= penetration; // \u5c06\u7403\u5de6\u79fb } else // \u5782\u76f4\u65b9\u5411\u78b0\u649e { Ball->Velocity.y = -Ball->Velocity.y; // \u53cd\u8f6c\u5782\u76f4\u901f\u5ea6 // \u91cd\u5b9a\u4f4d GLfloat penetration = Ball->Radius - std::abs(diff_vector.y); if (dir == UP) Ball->Position.y -= penetration; // \u5c06\u7403\u4e0a\u79fb else Ball->Position.y += penetration; // \u5c06\u7403\u4e0b\u79fb } } } } } \u4e0d\u8981\u88ab\u51fd\u6570\u7684\u590d\u6742\u5ea6\u7ed9\u5413\u5230\uff0c\u56e0\u4e3a\u5b83\u4ec5\u4ec5\u662f\u6211\u4eec\u76ee\u524d\u4e3a\u6b62\u7684\u6982\u5ff5\u7684\u76f4\u63a5\u8f6c\u5316\u3002\u9996\u5148\u6211\u4eec\u4f1a\u68c0\u6d4b\u78b0\u649e\u5982\u679c\u53d1\u751f\u4e86\u78b0\u649e\u4e14\u7816\u5757\u4e0d\u662f\u5b9e\u5fc3\u7684\u90a3\u4e48\u5c31\u9500\u6bc1\u7816\u5757\u3002\u7136\u540e\u6211\u4eec\u4ecetuple\u4e2d\u83b7\u53d6\u5230\u4e86\u78b0\u649e\u7684\u65b9\u5411 dir \u4ee5\u53ca\u8868\u793a \\bar{V} \u7684\u5dee\u77e2\u91cf diff_vector \uff0c\u6700\u7ec8\u5b8c\u6210\u78b0\u649e\u5904\u7406\u3002 \u6211\u4eec\u9996\u5148\u68c0\u67e5\u78b0\u649e\u65b9\u5411\u662f\u6c34\u5e73\u8fd8\u662f\u5782\u76f4\uff0c\u5e76\u636e\u6b64\u53cd\u8f6c\u901f\u5ea6\u3002\u5982\u679c\u662f\u6c34\u5e73\u65b9\u5411\uff0c\u6211\u4eec\u4ece diff_vector \u7684x\u5206\u91cf\u8ba1\u7b97\u4fb5\u5165\u91cfRR\u5e76\u6839\u636e\u78b0\u649e\u65b9\u5411\u7528\u7403\u7684\u4f4d\u7f6e\u77e2\u91cf\u52a0\u4e0a\u6216\u51cf\u53bb\u5b83\u3002\u5782\u76f4\u65b9\u5411\u7684\u78b0\u649e\u4e5f\u662f\u5982\u6b64\uff0c\u4f46\u662f\u6211\u4eec\u8981\u64cd\u4f5c\u5404\u77e2\u91cf\u7684y\u5206\u91cf\u3002 \u73b0\u5728\u8fd0\u884c\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e94\u8be5\u4f1a\u5411\u4f60\u5c55\u793a\u4e00\u5957\u594f\u6548\u7684\u78b0\u649e\u65b9\u6848\uff0c\u4f46\u53ef\u80fd\u4f1a\u5f88\u96be\u771f\u6b63\u770b\u5230\u5b83\u7684\u6548\u679c\uff0c\u56e0\u4e3a\u4e00\u65e6\u7403\u78b0\u649e\u5230\u4e86\u4e00\u4e2a\u7816\u5757\u5c31\u4f1a\u5f39\u5411\u5e95\u90e8\u5e76\u6c38\u8fdc\u4e22\u5931\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5904\u7406\u73a9\u5bb6\u6321\u677f\u7684\u78b0\u649e\u6765\u4fee\u590d\u8fd9\u4e00\u95ee\u9898\u3002 \u73a9\u5bb6 - \u7403\u78b0\u649e \u7403\u548c\u73a9\u5bb6\u4e4b\u95f4\u7684\u78b0\u649e\u4e0e\u6211\u4eec\u4e4b\u524d\u8ba8\u8bba\u7684\u78b0\u649e\u7a0d\u6709\u4e0d\u540c\uff0c\u56e0\u4e3a\u8fd9\u91cc\u5e94\u5f53\u57fa\u4e8e\u649e\u51fb\u6321\u677f\u7684\u70b9\u4e0e\uff08\u6321\u677f\uff09\u4e2d\u5fc3\u7684\u8ddd\u79bb\u6765\u6539\u53d8\u7403\u7684\u6c34\u5e73\u901f\u5ea6\u3002\u649e\u51fb\u70b9\u8ddd\u79bb\u6321\u677f\u7684\u4e2d\u5fc3\u70b9\u8d8a\u8fdc\uff0c\u5219\u6c34\u5e73\u65b9\u5411\u7684\u901f\u5ea6\u5c31\u4f1a\u8d8a\u5927\u3002 void Game::DoCollisions() { [...] Collision result = CheckCollision(*Ball, *Player); if (!Ball->Stuck && std::get<0>(result)) { // \u68c0\u67e5\u78b0\u5230\u4e86\u6321\u677f\u7684\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u5e76\u6839\u636e\u78b0\u5230\u54ea\u4e2a\u4f4d\u7f6e\u6765\u6539\u53d8\u901f\u5ea6 GLfloat centerBoard = Player->Position.x + Player->Size.x / 2; GLfloat distance = (Ball->Position.x + Ball->Radius) - centerBoard; GLfloat percentage = distance / (Player->Size.x / 2); // \u4f9d\u636e\u7ed3\u679c\u79fb\u52a8 GLfloat strength = 2.0f; glm::vec2 oldVelocity = Ball->Velocity; Ball->Velocity.x = INITIAL_BALL_VELOCITY.x * percentage * strength; Ball->Velocity.y = -Ball->Velocity.y; Ball->Velocity = glm::normalize(Ball->Velocity) * glm::length(oldVelocity); } } \u5728\u6211\u4eec\u5b8c\u6210\u4e86\u7403\u548c\u5404\u7816\u5757\u7684\u78b0\u649e\u68c0\u6d4b\u4e4b\u540e\uff0c\u6211\u4eec\u6765\u68c0\u6d4b\u7403\u548c\u73a9\u5bb6\u6321\u677f\u662f\u5426\u53d1\u751f\u78b0\u649e\u3002\u5982\u679c\u6709\u78b0\u649e\uff08\u5e76\u4e14\u7403\u4e0d\u662f\u88ab\u56fa\u5b9a\u5728\u6321\u677f\u4e0a\uff09\u6211\u4eec\u8981\u8ba1\u7b97\u7403\u7684\u4e2d\u5fc3\u4e0e\u6321\u677f\u4e2d\u5fc3\u7684\u8ddd\u79bb\u548c\u6321\u677f\u7684\u534a\u8fb9\u957f\u7684\u767e\u5206\u6bd4\u3002\u4e4b\u540e\u7403\u7684\u6c34\u5e73\u901f\u5ea6\u4f1a\u4f9d\u636e\u5b83\u649e\u51fb\u6321\u677f\u7684\u70b9\u5230\u6321\u677f\u4e2d\u5fc3\u7684\u8ddd\u79bb\u6765\u66f4\u65b0\u3002\u9664\u4e86\u66f4\u65b0\u6c34\u5e73\u901f\u5ea6\u4e4b\u5916\u6211\u4eec\u8fd8\u9700\u8981\u53cd\u8f6c\u5b83\u7684y\u65b9\u5411\u901f\u5ea6\u3002 \u6ce8\u610f\u65e7\u7684\u901f\u5ea6\u88ab\u5b58\u50a8\u4e3a oldVelocity \u3002\u4e4b\u6240\u4ee5\u8981\u5b58\u50a8\u65e7\u7684\u901f\u5ea6\u662f\u56e0\u4e3a\u6211\u4eec\u53ea\u66f4\u65b0\u7403\u7684\u901f\u5ea6\u77e2\u91cf\u4e2d\u6c34\u5e73\u65b9\u5411\u7684\u901f\u5ea6\u5e76\u4fdd\u6301\u5b83\u7684y\u901f\u5ea6\u4e0d\u53d8\u3002\u8fd9\u5c06\u610f\u5473\u7740\u77e2\u91cf\u7684\u957f\u5ea6\u4f1a\u6301\u7eed\u53d8\u5316\uff0c\u5176\u4ea7\u751f\u7684\u5f71\u54cd\u662f\u5982\u679c\u7403\u649e\u51fb\u5230\u6321\u677f\u7684\u8fb9\u7f18\u5219\u4f1a\u6bd4\u649e\u51fb\u5230\u6321\u677f\u4e2d\u5fc3\u6709\u66f4\u5927(\u4e5f\u56e0\u6b64\u66f4\u5f3a)\u7684\u901f\u5ea6\u77e2\u91cf\u3002\u4e3a\u6b64\u65b0\u7684\u901f\u5ea6\u77e2\u91cf\u4f1a\u6b63\u4ea4\u5316\u7136\u540e\u4e58\u4ee5\u65e7\u901f\u5ea6\u77e2\u91cf\u7684\u957f\u5ea6\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u7403\u7684\u529b\u91cf\u548c\u901f\u5ea6\u5c06\u603b\u662f\u4e00\u4e00\u81f4\u7684\uff0c\u65e0\u8bba\u5b83\u649e\u51fb\u5230\u6321\u677f\u7684\u54ea\u4e2a\u5730\u65b9\u3002 \u7c98\u677f \u65e0\u8bba\u4f60\u6709\u6ca1\u6709\u6ce8\u610f\u5230\uff0c\u4f46\u5f53\u8fd0\u884c\u4ee3\u7801\u65f6\uff0c\u7403\u548c\u73a9\u5bb6\u6321\u677f\u7684\u78b0\u649e\u5904\u7406\u4ecd\u65e7\u6709\u4e00\u4e2a\u5927\u95ee\u9898\u3002\u4ee5\u4e0b\u7684\u89c6\u9891\u6e05\u695a\u5730\u5c55\u793a\u4e86\u5c06\u4f1a\u51fa\u73b0\u7684\u73b0\u8c61\uff1a \u8fd9\u79cd\u95ee\u9898\u79f0\u4e3a \u7c98\u677f\u95ee\u9898 (Sticky Paddle Issue)\uff0c\u51fa\u73b0\u7684\u539f\u56e0\u662f\u73a9\u5bb6\u6321\u677f\u4ee5\u8f83\u9ad8\u7684\u901f\u5ea6\u79fb\u5411\u7403\uff0c\u5bfc\u81f4\u7403\u7684\u4e2d\u5fc3\u8fdb\u5165\u73a9\u5bb6\u6321\u677f\u3002\u7531\u4e8e\u6211\u4eec\u6ca1\u6709\u8003\u8651\u7403\u7684\u4e2d\u5fc3\u5728AABB\u5185\u90e8\u7684\u60c5\u51b5\uff0c\u6e38\u620f\u4f1a\u6301\u7eed\u8bd5\u56fe\u5bf9\u6240\u6709\u7684\u78b0\u649e\u505a\u51fa\u54cd\u5e94\uff0c\u5f53\u7403\u6700\u7ec8\u8131\u79bb\u65f6\uff0c\u5df2\u7ecf\u5bf9 y \u5411\u901f\u5ea6\u7ffb\u8f6c\u4e86\u591a\u6b21\uff0c\u4ee5\u81f3\u4e8e\u65e0\u6cd5\u786e\u5b9a\u7403\u5728\u8131\u79bb\u540e\u662f\u5411\u4e0a\u8fd8\u662f\u5411\u4e0b\u8fd0\u52a8\u3002 \u6211\u4eec\u53ef\u4ee5\u5f15\u5165\u4e00\u4e2a\u5c0f\u7684\u7279\u6b8a\u5904\u7406\u6765\u5f88\u5bb9\u6613\u5730\u4fee\u590d\u8fd9\u79cd\u884c\u4e3a\uff0c\u8fd9\u4e2a\u5904\u7406\u4e4b\u6240\u4ee5\u6210\u4e3a\u53ef\u80fd\u662f\u57fa\u4e8e\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u78b0\u649e\u603b\u662f\u53d1\u751f\u5728\u6321\u677f\u9876\u90e8\u7684\u4e8b\u5b9e\u3002\u6211\u4eec\u603b\u662f\u7b80\u5355\u5730\u8fd4\u56de\u6b63\u7684 y \u901f\u5ea6\u800c\u4e0d\u662f\u53cd\u8f6c y \u901f\u5ea6\uff0c\u8fd9\u6837\u5f53\u5b83\u88ab\u5361\u4f4f\u65f6\u4e5f\u53ef\u4ee5\u7acb\u5373\u8131\u79bb\u3002 //Ball->Velocity.y = -Ball->Velocity.y; Ball->Velocity.y = -1 * abs(Ball->Velocity.y); \u5982\u679c\u4f60\u8db3\u591f\u4ed4\u7ec6\u5c31\u4f1a\u89c9\u5f97\u8fd9\u4e00\u5f71\u54cd\u4ecd\u7136\u662f\u53ef\u4ee5\u88ab\u6ce8\u610f\u5230\u7684\uff0c\u4f46\u662f\u6211\u4e2a\u4eba\u5c06\u6b64\u65b9\u6cd5\u5f53\u4f5c\u4e00\u79cd\u53ef\u63a5\u53d7\u7684\u6298\u8877\u5904\u7406\u3002 \u5e95\u90e8\u8fb9\u754c \u4e0e\u7ecf\u5178\u7684Breakout\u5185\u5bb9\u76f8\u6bd4\u552f\u4e00\u7f3a\u5c11\u7684\u5c31\u662f\u5931\u8d25\u6761\u4ef6\u4e86\uff0c\u5931\u8d25\u4f1a\u91cd\u7f6e\u5173\u5361\u548c\u73a9\u5bb6\u3002\u5728 Game \u7c7b\u7684 Update \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u8981\u68c0\u67e5\u7403\u662f\u5426\u63a5\u89e6\u5230\u4e86\u5e95\u90e8\u8fb9\u754c\uff0c\u5982\u679c\u63a5\u89e6\u5230\u5c31\u91cd\u7f6e\u6e38\u620f\u3002 void Game::Update(GLfloat dt) { [...] if (Ball->Position.y >= this->Height) // \u7403\u662f\u5426\u63a5\u89e6\u5e95\u90e8\u8fb9\u754c\uff1f { this->ResetLevel(); this->ResetPlayer(); } } ResetLevel \u548c ResetPlayer \u51fd\u6570\u76f4\u63a5\u91cd\u65b0\u52a0\u8f7d\u5173\u5361\u5e76\u91cd\u7f6e\u5bf9\u8c61\u7684\u5404\u53d8\u91cf\u503c\u4e3a\u539f\u59cb\u7684\u503c\u3002\u73b0\u5728\u6e38\u620f\u770b\u8d77\u6765\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff1a \u5c31\u662f\u8fd9\u6837\u4e86\uff0c\u6211\u4eec\u521b\u5efa\u5b8c\u6210\u4e86\u4e00\u4e2a\u6709\u76f8\u4f3c\u673a\u5236\u7684\u7ecf\u5178Breakout\u6e38\u620f\u7684\u590d\u5236\u7248\u3002\u8fd9\u91cc\u4f60\u53ef\u4ee5\u627e\u5230Game\u7c7b\u7684\u6e90\u4ee3\u7801\uff1a header \uff0c code \u3002 \u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879 \u5728\u89c6\u9891\u6e38\u620f\u7684\u53d1\u5c55\u8fc7\u7a0b\u4e2d\uff0c\u78b0\u649e\u68c0\u6d4b\u662f\u4e00\u4e2a\u56f0\u96be\u7684\u8bdd\u9898\u751a\u81f3\u53ef\u80fd\u662f\u6700\u5927\u7684\u6311\u6218\u3002\u5927\u591a\u6570\u7684\u78b0\u649e\u68c0\u6d4b\u548c\u5904\u7406\u65b9\u6848\u662f\u548c\u7269\u7406\u5f15\u64ce\u5408\u5e76\u5728\u4e00\u8d77\u7684\uff0c\u6b63\u5982\u591a\u6570\u73b0\u4ee3\u7684\u6e38\u620f\u4e2d\u770b\u5230\u7684\u90a3\u6837\u3002\u6211\u4eec\u5728Breakout\u6e38\u620f\u4e2d\u4f7f\u7528\u7684\u78b0\u649e\u65b9\u6848\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u65b9\u6848\u5e76\u4e14\u662f\u4e13\u95e8\u7ed9\u8fd9\u7c7b\u6e38\u620f\u6240\u4e13\u7528\u7684\u3002 \u9700\u8981\u5f3a\u8c03\u7684\u662f\u8fd9\u7c7b\u78b0\u649e\u68c0\u6d4b\u548c\u5904\u7406\u65b9\u5f0f\u662f\u4e0d\u5b8c\u7f8e\u7684\u3002\u5b83\u53ea\u80fd\u8ba1\u7b97\u6bcf\u5e27\u5185\u53ef\u80fd\u53d1\u751f\u7684\u78b0\u649e\u5e76\u4e14\u53ea\u80fd\u8ba1\u7b97\u5728\u8be5\u65f6\u95f4\u6b65\u65f6\u7269\u4f53\u6240\u5728\u7684\u5404\u4f4d\u7f6e\uff1b\u8fd9\u610f\u5473\u7740\u5982\u679c\u4e00\u4e2a\u7269\u4f53\u62e5\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u901f\u5ea6\u4ee5\u81f4\u4e8e\u5728\u4e00\u5e27\u5185\u7a7f\u8fc7\u4e86\u53e6\u4e00\u4e2a\u7269\u4f53\uff0c\u5b83\u5c06\u770b\u8d77\u6765\u50cf\u662f\u4ece\u6765\u6ca1\u6709\u4e0e\u53e6\u4e00\u4e2a\u7269\u4f53\u78b0\u649e\u8fc7\u3002\u56e0\u6b64\u5982\u679c\u51fa\u73b0\u6389\u5e27\u6216\u51fa\u73b0\u4e86\u8db3\u591f\u9ad8\u7684\u901f\u5ea6\uff0c\u8fd9\u4e00\u78b0\u649e\u68c0\u6d4b\u65b9\u6848\u5c06\u65e0\u6cd5\u5e94\u5bf9\u3002 \uff08\u6211\u4eec\u4f7f\u7528\u7684\u78b0\u649e\u65b9\u6848\uff09\u4ecd\u7136\u4f1a\u51fa\u73b0\u8fd9\u51e0\u4e2a\u95ee\u9898\uff1a \u5982\u679c\u7403\u8fd0\u52a8\u5f97\u8db3\u591f\u5feb\uff0c\u5b83\u53ef\u80fd\u5728\u4e00\u5e27\u5185\u5b8c\u6574\u5730\u7a7f\u8fc7\u4e00\u4e2a\u7269\u4f53\uff0c\u800c\u4e0d\u4f1a\u68c0\u6d4b\u5230\u78b0\u649e\u3002 \u5982\u679c\u7403\u5728\u4e00\u5e27\u5185\u540c\u65f6\u649e\u51fb\u4e86\u4e00\u4e2a\u4ee5\u4e0a\u7684\u7269\u4f53\uff0c\u5b83\u5c06\u4f1a\u68c0\u6d4b\u5230\u4e24\u6b21\u78b0\u649e\u5e76\u4e24\u6b21\u53cd\u8f6c\u901f\u5ea6\uff1b\u8fd9\u6837\u4e0d\u6539\u53d8\u5b83\u7684\u539f\u59cb\u901f\u5ea6\u3002 \u649e\u51fb\u5230\u7816\u5757\u7684\u89d2\u65f6\u4f1a\u5728\u9519\u8bef\u7684\u65b9\u5411\u53cd\u8f6c\u901f\u5ea6\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b83\u5728\u4e00\u5e27\u5185\u7a7f\u8fc7\u7684\u8ddd\u79bb\u4f1a\u5f15\u53d1 VectorDirection \u8fd4\u56de\u6c34\u5e73\u65b9\u5411\u8fd8\u662f\u5782\u76f4\u65b9\u5411\u7684\u5dee\u522b\u3002 \u4f46\u662f\uff0c\u672c\u6559\u7a0b\u76ee\u7684\u5728\u4e8e\u6559\u4f1a\u8bfb\u8005\u4eec\u56fe\u5f62\u5b66\u548c\u6e38\u620f\u5f00\u53d1\u7684\u57fa\u7840\u77e5\u8bc6\u3002\u56e0\u6b64\uff0c\u8fd9\u91cc\u7684\u78b0\u649e\u65b9\u6848\u53ef\u4ee5\u670d\u52a1\u4e8e\u6b64\u76ee\u7684\uff1b\u5b83\u66f4\u5bb9\u6613\u7406\u89e3\u4e14\u5728\u6b63\u5e38\u7684\u573a\u666f\u4e2d\u53ef\u4ee5\u8f83\u597d\u5730\u8fd0\u4f5c\u3002\u9700\u8981\u8bb0\u4f4f\u7684\u662f\u5b58\u5728\u6709\u66f4\u597d\u7684\uff08\u66f4\u590d\u6742\uff09\u78b0\u649e\u65b9\u6848\uff0c\u5728\u51e0\u4e4e\u6240\u6709\u7684\u573a\u666f\u4e2d\u90fd\u53ef\u4ee5\u5f88\u597d\u5730\u8fd0\u4f5c\uff08\u5305\u62ec\u53ef\u79fb\u52a8\u7684\u7269\u4f53\uff09\u5982 \u5206\u79bb\u8f74\u5b9a\u7406 (Separating Axis Theorem)\u3002 \u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0c\u6709\u5927\u91cf\u5b9e\u7528\u5e76\u4e14\u5e38\u5e38\u5f88\u9ad8\u6548\u7684\u7269\u7406\u5f15\u64ce\uff08\u4f7f\u7528\u65f6\u95f4\u6b65\u65e0\u5173\u7684\u78b0\u649e\u65b9\u6848\uff09\u53ef\u4f9b\u60a8\u5728\u6e38\u620f\u4e2d\u4f7f\u7528\u3002\u5982\u679c\u60a8\u5e0c\u671b\u5728\u8fd9\u4e00\u7cfb\u7edf\u4e2d\u6709\u66f4\u6df1\u5165\u7684\u63a2\u7d22\u6216\u9700\u8981\u66f4\u9ad8\u7ea7\u7684\u7269\u7406\u7cfb\u7edf\u53c8\u4e0d\u7406\u89e3\u5176\u4e2d\u7684\u6570\u5b66\u673a\u7406\uff0c Box2D \u662f\u4e00\u4e2a\u5b9e\u73b0\u4e86\u7269\u7406\u7cfb\u7edf\u548c\u78b0\u649e\u68c0\u6d4b\u7684\u53ef\u4ee5\u7528\u5728\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u5b8c\u7f8e\u76842D\u7269\u7406\u5e93\u3002","title":"\u78b0\u649e\u5904\u7406"},{"location":"06%20In%20Practice/2D-Game/05%20Collisions/03%20Collision%20resolution/#_1","text":"\u539f\u6587 Collision resolution \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 aillieo \u6821\u5bf9 \u6682\u672a\u6821\u5bf9 Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 \u4e0a\u4e2a\u6559\u7a0b\u7684\u6700\u540e\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u79cd\u6709\u6548\u7684\u78b0\u649e\u68c0\u6d4b\u65b9\u6848\u3002\u4f46\u662f\u7403\u5bf9\u68c0\u6d4b\u5230\u7684\u78b0\u649e\u4e0d\u4f1a\u6709\u53cd\u4f5c\u7528\uff1b\u5b83\u4ec5\u4ec5\u662f\u5f84\u76f4\u7a7f\u8fc7\u6240\u6709\u7684\u7816\u5757\u3002\u6211\u4eec\u5e0c\u671b\u7403\u4f1a\u4ece\u649e\u51fb\u5230\u7684\u7816\u5757 \u53cd\u5f39 \u3002\u6b64\u6559\u7a0b\u5c06\u8ba8\u8bba\u5982\u4f55\u4f7f\u7528AABB-\u5706\u78b0\u649e\u65b9\u6848\u5b9e\u73b0\u8fd9\u9879\u79f0\u4e3a \u78b0\u649e\u5904\u7406 (Collision Resolution)\u7684\u529f\u80fd\u3002 \u5f53\u78b0\u649e\u53d1\u751f\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u51fa\u73b0\u4e24\u4e2a\u73b0\u8c61\uff1a\u91cd\u65b0\u5b9a\u4f4d\u7403\uff0c\u4ee5\u514d\u5b83\u8fdb\u5165\u53e6\u4e00\u4e2a\u7269\u4f53\uff0c\u5176\u6b21\u662f\u6539\u53d8\u7403\u7684\u901f\u5ea6\u65b9\u5411\uff0c\u4f7f\u5b83\u770b\u8d77\u6765\u50cf\u662f\u7269\u4f53\u7684\u53cd\u5f39\u3002","title":"\u78b0\u649e\u5904\u7406"},{"location":"06%20In%20Practice/2D-Game/05%20Collisions/03%20Collision%20resolution/#_2","text":"\u4e3a\u4e86\u628a\u7403\u5bf9\u8c61\u5b9a\u4f4d\u5230\u78b0\u649e\u7684AABB\u7684\u5916\u90e8\uff0c\u6211\u4eec\u5fc5\u987b\u660e\u786e\u7403\u4fb5\u5165\u78b0\u649e\u6846\u7684\u8ddd\u79bb\u3002\u4e3a\u6b64\u6211\u4eec\u8981\u56de\u987e\u4e0a\u4e00\u8282\u6559\u7a0b\u4e2d\u7684\u793a\u610f\u56fe\uff1a \u6b64\u65f6\u7403\u5c11\u91cf\u8fdb\u5165\u4e86AABB\uff0c\u6240\u4ee5\u68c0\u6d4b\u5230\u4e86\u78b0\u649e\u3002\u6211\u4eec\u73b0\u5728\u5e0c\u671b\u5c06\u7403\u4ece\u79fb\u51faAABB\u7684\u5916\u5f62\u4f7f\u5176\u4ec5\u4ec5\u78b0\u89e6\u5230AABB\uff0c\u50cf\u662f\u6ca1\u6709\u78b0\u649e\u4e00\u6837\u3002\u4e3a\u4e86\u786e\u5b9a\u9700\u8981\u5c06\u7403\u4eceAABB\u4e2d\u79fb\u51fa\u591a\u5c11\u8ddd\u79bb\uff0c\u6211\u4eec\u9700\u8981\u627e\u56de\u77e2\u91cf \\bar{R} \uff0c\u5b83\u4ee3\u8868\u7684\u662f\u4fb5\u5165AABB\u7684\u7a0b\u5ea6\u3002\u4e3a\u5f97\u5230 \\bar{R} \u6211\u4eec\u7528\u7403\u7684\u534a\u5f84\u51cf\u53bb \\bar{V} \u3002\u77e2\u91cf \\bar{V} \u662f\u6700\u8fd1\u70b9 \\bar{P} \u548c\u7403\u5fc3 \\bar{C} \u7684\u5dee\u77e2\u91cf\u3002 \u6709\u4e86 \\bar{R} \u4e4b\u540e\u6211\u4eec\u5c06\u7403\u7684\u4f4d\u7f6e\u504f\u79fb \\bar{R} \u5c31\u5c06\u7403\u76f4\u63a5\u653e\u7f6e\u5728\u4e0eAABB\u7d27\u90bb\u7684\u4f4d\u7f6e\uff1b\u6b64\u65f6\u7403\u5df2\u7ecf\u88ab\u91cd\u5b9a\u4f4d\u5230\u5408\u9002\u7684\u4f4d\u7f6e\u3002","title":"\u78b0\u649e\u91cd\u5b9a\u4f4d"},{"location":"06%20In%20Practice/2D-Game/05%20Collisions/03%20Collision%20resolution/#_3","text":"\u4e0b\u4e00\u6b65\u6211\u4eec\u9700\u8981\u786e\u5b9a\u78b0\u649e\u4e4b\u540e\u5982\u4f55\u66f4\u65b0\u7403\u7684\u901f\u5ea6\u3002\u5bf9\u4e8eBreakout\u6211\u4eec\u4f7f\u7528\u4ee5\u4e0b\u89c4\u5219\u6765\u6539\u53d8\u7403\u7684\u901f\u5ea6\uff1a \u5982\u679c\u7403\u649e\u51fbAABB\u7684\u53f3\u4fa7\u6216\u5de6\u4fa7\uff0c\u5b83\u7684\u6c34\u5e73\u901f\u5ea6\uff08 x \uff09\u5c06\u4f1a\u53cd\u8f6c\u3002 \u5982\u679c\u7403\u649e\u51fbAABB\u7684\u4e0a\u4fa7\u6216\u4e0b\u4fa7\uff0c\u5b83\u7684\u5782\u76f4\u901f\u5ea6\uff08 y \uff09\u5c06\u4f1a\u53cd\u8f6c\u3002 \u4f46\u662f\u5982\u4f55\u5224\u65ad\u7403\u649e\u51fbAABB\u7684\u65b9\u5411\u5462\uff1f\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u6709\u5f88\u591a\u79cd\u65b9\u6cd5\uff0c\u5176\u4e2d\u4e4b\u4e00\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u7816\u5757\u4f7f\u75284\u4e2aAABB\u800c\u4e0d\u662f1\u4e2aAABB\uff0c\u5e76\u628a\u5b83\u4eec\u653e\u7f6e\u5230\u7816\u5757\u7684\u6bcf\u4e2a\u8fb9\u4e0a\u3002\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u88ab\u78b0\u649e\u7684\u662f\u54ea\u4e2aAABB\u548c\u54ea\u4e2a\u8fb9\u3002\u4f46\u662f\u6709\u4e00\u79cd\u4f7f\u7528\u70b9\u4e58(dot product)\u7684\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\u3002 \u60a8\u6216\u8bb8\u8fd8\u8bb0\u5f97 \u53d8\u6362 \u6559\u7a0b\u4e2d\u70b9\u4e58\u53ef\u4ee5\u5f97\u5230\u4e24\u4e2a\u6b63\u4ea4\u5316\u7684\u77e2\u91cf\u7684\u5939\u89d2\u3002\u5982\u679c\u6211\u4eec\u5b9a\u4e49\u6307\u5411\u5317\u3001\u5357\u3001\u897f\u548c\u4e1c\u7684\u56db\u4e2a\u77e2\u91cf\uff0c\u7136\u540e\u8ba1\u7b97\u5b83\u4eec\u548c\u7ed9\u5b9a\u77e2\u91cf\u7684\u5939\u89d2\u4f1a\u600e\u4e48\u6837\uff1f\u7531\u8fd9\u56db\u4e2a\u65b9\u5411\u77e2\u91cf\u548c\u7ed9\u5b9a\u7684\u77e2\u91cf\u70b9\u4e58\u79ef\u7684\u7ed3\u679c\u4e2d\u7684\u6700\u9ad8\u503c\uff08\u70b9\u4e58\u79ef\u7684\u6700\u5927\u503c\u4e3a 1.0f \uff0c\u4ee3\u8868 0 \u5ea6\u89d2\uff09\u5373\u662f\u77e2\u91cf\u7684\u65b9\u5411\u3002 \u8fd9\u4e00\u8fc7\u7a0b\u5982\u4e0b\u4ee3\u7801\u6240\u793a\uff1a Direction VectorDirection(glm::vec2 target) { glm::vec2 compass[] = { glm::vec2(0.0f, 1.0f), // \u4e0a glm::vec2(1.0f, 0.0f), // \u53f3 glm::vec2(0.0f, -1.0f), // \u4e0b glm::vec2(-1.0f, 0.0f) // \u5de6 }; GLfloat max = 0.0f; GLuint best_match = -1; for (GLuint i = 0; i < 4; i++) { GLfloat dot_product = glm::dot(glm::normalize(target), compass[i]); if (dot_product > max) { max = dot_product; best_match = i; } } return (Direction)best_match; } \u6b64\u51fd\u6570\u6bd4\u8f83\u4e86 target \u77e2\u91cf\u548c compass \u6570\u7ec4\u4e2d\u5404\u65b9\u5411\u77e2\u91cf\u3002 compass \u6570\u7ec4\u4e2d\u4e0e target \u89d2\u5ea6\u6700\u63a5\u8fd1\u7684\u77e2\u91cf\uff0c\u5373\u662f\u8fd4\u56de\u7ed9\u51fd\u6570\u8c03\u7528\u8005\u7684 Direction \u3002\u8fd9\u91cc\u7684 Direction \u662f\u4e00\u4e2a Game \u7c7b\u7684\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u679a\u4e3e\u7c7b\u578b\uff1a enum Direction { UP, RIGHT, DOWN, LEFT }; \u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u5982\u4f55\u83b7\u5f97 \\bar{R} \u4ee5\u53ca\u5982\u4f55\u5224\u65ad\u7403\u649e\u51fbAABB\u7684\u65b9\u5411\uff0c\u6211\u4eec\u5f00\u59cb\u7f16\u5199\u78b0\u649e\u5904\u7406\u7684\u4ee3\u7801\u3002","title":"\u78b0\u649e\u65b9\u5411"},{"location":"06%20In%20Practice/2D-Game/05%20Collisions/03%20Collision%20resolution/#aabb-","text":"\u4e3a\u4e86\u8ba1\u7b97\u78b0\u649e\u5904\u7406\u6240\u9700\u7684\u6570\u503c\u6211\u4eec\u8981\u4ece\u78b0\u649e\u7684\u51fd\u6570\u4e2d\u83b7\u53d6\u66f4\u591a\u7684\u4fe1\u606f\u800c\u4e0d\u53ea\u53ea\u662f\u4e00\u4e2a true \u6216 false \uff0c\u56e0\u6b64\u6211\u4eec\u8981\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u66f4\u591a\u4fe1\u606f\u7684 tuple \uff0c\u8fd9\u4e9b\u4fe1\u606f\u5373\u662f\u78b0\u649e\u53d1\u751f\u65f6\u7684\u65b9\u5411\u53ca\u5dee\u77e2\u91cf\uff08 \\bar{R} \uff09\u3002\u4f60\u53ef\u4ee5\u5728\u5934\u6587\u4ef6 \u4e2d\u627e\u5230 tuple \u3002 \u4e3a\u4e86\u66f4\u597d\u7ec4\u7ec7\u4ee3\u7801\uff0c\u6211\u4eec\u628a\u78b0\u649e\u76f8\u5173\u7684\u6570\u636e\u4f7f\u7528typedef\u5b9a\u4e49\u4e3a Collision \uff1a typedef std::tuple<GLboolean, Direction, glm::vec2> Collision; \u63a5\u4e0b\u6765\u6211\u4eec\u8fd8\u9700\u8981\u4fee\u6539 CheckCollision \u51fd\u6570\u7684\u4ee3\u7801\uff0c\u4f7f\u5176\u4e0d\u4ec5\u4ec5\u8fd4\u56de true \u6216 false \u800c\u662f\u8fd8\u5305\u542b\u65b9\u5411\u548c\u5dee\u77e2\u91cf\uff1a Collision CheckCollision(BallObject &one, GameObject &two) // AABB - AABB \u78b0\u649e { [...] if (glm::length(difference) <= one.Radius) return std::make_tuple(GL_TRUE, VectorDirection(difference), difference); else return std::make_tuple(GL_FALSE, UP, glm::vec2(0, 0)); } Game \u7c7b\u7684 DoCollision \u51fd\u6570\u73b0\u5728\u4e0d\u4ec5\u4ec5\u53ea\u68c0\u6d4b\u662f\u5426\u51fa\u73b0\u4e86\u78b0\u649e\uff0c\u800c\u4e14\u5728\u78b0\u649e\u53d1\u751f\u65f6\u4f1a\u6709\u9002\u5f53\u7684\u52a8\u4f5c\u3002\u6b64\u51fd\u6570\u73b0\u5728\u4f1a\u8ba1\u7b97\u78b0\u649e\u4fb5\u5165\u7684\u7a0b\u5ea6\uff08\u5982\u672c\u6559\u7a0b\u4e00\u5f00\u59cb\u8ba1\u65f6\u7684\u793a\u610f\u56fe\u4e2d\u6240\u793a\uff09\u5e76\u4e14\u57fa\u4e8e\u78b0\u649e\u65b9\u5411\u4f7f\u7403\u7684\u4f4d\u7f6e\u77e2\u91cf\u4e0e\u5176\u76f8\u52a0\u6216\u76f8\u51cf\u3002 void Game::DoCollisions() { for (GameObject &box : this->Levels[this->Level].Bricks) { if (!box.Destroyed) { Collision collision = CheckCollision(*Ball, box); if (std::get<0>(collision)) // \u5982\u679ccollision \u662f true { // \u5982\u679c\u7816\u5757\u4e0d\u662f\u5b9e\u5fc3\u5c31\u9500\u6bc1\u7816\u5757 if (!box.IsSolid) box.Destroyed = GL_TRUE; // \u78b0\u649e\u5904\u7406 Direction dir = std::get<1>(collision); glm::vec2 diff_vector = std::get<2>(collision); if (dir == LEFT || dir == RIGHT) // \u6c34\u5e73\u65b9\u5411\u78b0\u649e { Ball->Velocity.x = -Ball->Velocity.x; // \u53cd\u8f6c\u6c34\u5e73\u901f\u5ea6 // \u91cd\u5b9a\u4f4d GLfloat penetration = Ball->Radius - std::abs(diff_vector.x); if (dir == LEFT) Ball->Position.x += penetration; // \u5c06\u7403\u53f3\u79fb else Ball->Position.x -= penetration; // \u5c06\u7403\u5de6\u79fb } else // \u5782\u76f4\u65b9\u5411\u78b0\u649e { Ball->Velocity.y = -Ball->Velocity.y; // \u53cd\u8f6c\u5782\u76f4\u901f\u5ea6 // \u91cd\u5b9a\u4f4d GLfloat penetration = Ball->Radius - std::abs(diff_vector.y); if (dir == UP) Ball->Position.y -= penetration; // \u5c06\u7403\u4e0a\u79fb else Ball->Position.y += penetration; // \u5c06\u7403\u4e0b\u79fb } } } } } \u4e0d\u8981\u88ab\u51fd\u6570\u7684\u590d\u6742\u5ea6\u7ed9\u5413\u5230\uff0c\u56e0\u4e3a\u5b83\u4ec5\u4ec5\u662f\u6211\u4eec\u76ee\u524d\u4e3a\u6b62\u7684\u6982\u5ff5\u7684\u76f4\u63a5\u8f6c\u5316\u3002\u9996\u5148\u6211\u4eec\u4f1a\u68c0\u6d4b\u78b0\u649e\u5982\u679c\u53d1\u751f\u4e86\u78b0\u649e\u4e14\u7816\u5757\u4e0d\u662f\u5b9e\u5fc3\u7684\u90a3\u4e48\u5c31\u9500\u6bc1\u7816\u5757\u3002\u7136\u540e\u6211\u4eec\u4ecetuple\u4e2d\u83b7\u53d6\u5230\u4e86\u78b0\u649e\u7684\u65b9\u5411 dir \u4ee5\u53ca\u8868\u793a \\bar{V} \u7684\u5dee\u77e2\u91cf diff_vector \uff0c\u6700\u7ec8\u5b8c\u6210\u78b0\u649e\u5904\u7406\u3002 \u6211\u4eec\u9996\u5148\u68c0\u67e5\u78b0\u649e\u65b9\u5411\u662f\u6c34\u5e73\u8fd8\u662f\u5782\u76f4\uff0c\u5e76\u636e\u6b64\u53cd\u8f6c\u901f\u5ea6\u3002\u5982\u679c\u662f\u6c34\u5e73\u65b9\u5411\uff0c\u6211\u4eec\u4ece diff_vector \u7684x\u5206\u91cf\u8ba1\u7b97\u4fb5\u5165\u91cfRR\u5e76\u6839\u636e\u78b0\u649e\u65b9\u5411\u7528\u7403\u7684\u4f4d\u7f6e\u77e2\u91cf\u52a0\u4e0a\u6216\u51cf\u53bb\u5b83\u3002\u5782\u76f4\u65b9\u5411\u7684\u78b0\u649e\u4e5f\u662f\u5982\u6b64\uff0c\u4f46\u662f\u6211\u4eec\u8981\u64cd\u4f5c\u5404\u77e2\u91cf\u7684y\u5206\u91cf\u3002 \u73b0\u5728\u8fd0\u884c\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e94\u8be5\u4f1a\u5411\u4f60\u5c55\u793a\u4e00\u5957\u594f\u6548\u7684\u78b0\u649e\u65b9\u6848\uff0c\u4f46\u53ef\u80fd\u4f1a\u5f88\u96be\u771f\u6b63\u770b\u5230\u5b83\u7684\u6548\u679c\uff0c\u56e0\u4e3a\u4e00\u65e6\u7403\u78b0\u649e\u5230\u4e86\u4e00\u4e2a\u7816\u5757\u5c31\u4f1a\u5f39\u5411\u5e95\u90e8\u5e76\u6c38\u8fdc\u4e22\u5931\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5904\u7406\u73a9\u5bb6\u6321\u677f\u7684\u78b0\u649e\u6765\u4fee\u590d\u8fd9\u4e00\u95ee\u9898\u3002","title":"AABB - \u5706\u78b0\u649e\u68c0\u6d4b"},{"location":"06%20In%20Practice/2D-Game/05%20Collisions/03%20Collision%20resolution/#-","text":"\u7403\u548c\u73a9\u5bb6\u4e4b\u95f4\u7684\u78b0\u649e\u4e0e\u6211\u4eec\u4e4b\u524d\u8ba8\u8bba\u7684\u78b0\u649e\u7a0d\u6709\u4e0d\u540c\uff0c\u56e0\u4e3a\u8fd9\u91cc\u5e94\u5f53\u57fa\u4e8e\u649e\u51fb\u6321\u677f\u7684\u70b9\u4e0e\uff08\u6321\u677f\uff09\u4e2d\u5fc3\u7684\u8ddd\u79bb\u6765\u6539\u53d8\u7403\u7684\u6c34\u5e73\u901f\u5ea6\u3002\u649e\u51fb\u70b9\u8ddd\u79bb\u6321\u677f\u7684\u4e2d\u5fc3\u70b9\u8d8a\u8fdc\uff0c\u5219\u6c34\u5e73\u65b9\u5411\u7684\u901f\u5ea6\u5c31\u4f1a\u8d8a\u5927\u3002 void Game::DoCollisions() { [...] Collision result = CheckCollision(*Ball, *Player); if (!Ball->Stuck && std::get<0>(result)) { // \u68c0\u67e5\u78b0\u5230\u4e86\u6321\u677f\u7684\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u5e76\u6839\u636e\u78b0\u5230\u54ea\u4e2a\u4f4d\u7f6e\u6765\u6539\u53d8\u901f\u5ea6 GLfloat centerBoard = Player->Position.x + Player->Size.x / 2; GLfloat distance = (Ball->Position.x + Ball->Radius) - centerBoard; GLfloat percentage = distance / (Player->Size.x / 2); // \u4f9d\u636e\u7ed3\u679c\u79fb\u52a8 GLfloat strength = 2.0f; glm::vec2 oldVelocity = Ball->Velocity; Ball->Velocity.x = INITIAL_BALL_VELOCITY.x * percentage * strength; Ball->Velocity.y = -Ball->Velocity.y; Ball->Velocity = glm::normalize(Ball->Velocity) * glm::length(oldVelocity); } } \u5728\u6211\u4eec\u5b8c\u6210\u4e86\u7403\u548c\u5404\u7816\u5757\u7684\u78b0\u649e\u68c0\u6d4b\u4e4b\u540e\uff0c\u6211\u4eec\u6765\u68c0\u6d4b\u7403\u548c\u73a9\u5bb6\u6321\u677f\u662f\u5426\u53d1\u751f\u78b0\u649e\u3002\u5982\u679c\u6709\u78b0\u649e\uff08\u5e76\u4e14\u7403\u4e0d\u662f\u88ab\u56fa\u5b9a\u5728\u6321\u677f\u4e0a\uff09\u6211\u4eec\u8981\u8ba1\u7b97\u7403\u7684\u4e2d\u5fc3\u4e0e\u6321\u677f\u4e2d\u5fc3\u7684\u8ddd\u79bb\u548c\u6321\u677f\u7684\u534a\u8fb9\u957f\u7684\u767e\u5206\u6bd4\u3002\u4e4b\u540e\u7403\u7684\u6c34\u5e73\u901f\u5ea6\u4f1a\u4f9d\u636e\u5b83\u649e\u51fb\u6321\u677f\u7684\u70b9\u5230\u6321\u677f\u4e2d\u5fc3\u7684\u8ddd\u79bb\u6765\u66f4\u65b0\u3002\u9664\u4e86\u66f4\u65b0\u6c34\u5e73\u901f\u5ea6\u4e4b\u5916\u6211\u4eec\u8fd8\u9700\u8981\u53cd\u8f6c\u5b83\u7684y\u65b9\u5411\u901f\u5ea6\u3002 \u6ce8\u610f\u65e7\u7684\u901f\u5ea6\u88ab\u5b58\u50a8\u4e3a oldVelocity \u3002\u4e4b\u6240\u4ee5\u8981\u5b58\u50a8\u65e7\u7684\u901f\u5ea6\u662f\u56e0\u4e3a\u6211\u4eec\u53ea\u66f4\u65b0\u7403\u7684\u901f\u5ea6\u77e2\u91cf\u4e2d\u6c34\u5e73\u65b9\u5411\u7684\u901f\u5ea6\u5e76\u4fdd\u6301\u5b83\u7684y\u901f\u5ea6\u4e0d\u53d8\u3002\u8fd9\u5c06\u610f\u5473\u7740\u77e2\u91cf\u7684\u957f\u5ea6\u4f1a\u6301\u7eed\u53d8\u5316\uff0c\u5176\u4ea7\u751f\u7684\u5f71\u54cd\u662f\u5982\u679c\u7403\u649e\u51fb\u5230\u6321\u677f\u7684\u8fb9\u7f18\u5219\u4f1a\u6bd4\u649e\u51fb\u5230\u6321\u677f\u4e2d\u5fc3\u6709\u66f4\u5927(\u4e5f\u56e0\u6b64\u66f4\u5f3a)\u7684\u901f\u5ea6\u77e2\u91cf\u3002\u4e3a\u6b64\u65b0\u7684\u901f\u5ea6\u77e2\u91cf\u4f1a\u6b63\u4ea4\u5316\u7136\u540e\u4e58\u4ee5\u65e7\u901f\u5ea6\u77e2\u91cf\u7684\u957f\u5ea6\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u7403\u7684\u529b\u91cf\u548c\u901f\u5ea6\u5c06\u603b\u662f\u4e00\u4e00\u81f4\u7684\uff0c\u65e0\u8bba\u5b83\u649e\u51fb\u5230\u6321\u677f\u7684\u54ea\u4e2a\u5730\u65b9\u3002","title":"\u73a9\u5bb6 - \u7403\u78b0\u649e"},{"location":"06%20In%20Practice/2D-Game/05%20Collisions/03%20Collision%20resolution/#_4","text":"\u65e0\u8bba\u4f60\u6709\u6ca1\u6709\u6ce8\u610f\u5230\uff0c\u4f46\u5f53\u8fd0\u884c\u4ee3\u7801\u65f6\uff0c\u7403\u548c\u73a9\u5bb6\u6321\u677f\u7684\u78b0\u649e\u5904\u7406\u4ecd\u65e7\u6709\u4e00\u4e2a\u5927\u95ee\u9898\u3002\u4ee5\u4e0b\u7684\u89c6\u9891\u6e05\u695a\u5730\u5c55\u793a\u4e86\u5c06\u4f1a\u51fa\u73b0\u7684\u73b0\u8c61\uff1a \u8fd9\u79cd\u95ee\u9898\u79f0\u4e3a \u7c98\u677f\u95ee\u9898 (Sticky Paddle Issue)\uff0c\u51fa\u73b0\u7684\u539f\u56e0\u662f\u73a9\u5bb6\u6321\u677f\u4ee5\u8f83\u9ad8\u7684\u901f\u5ea6\u79fb\u5411\u7403\uff0c\u5bfc\u81f4\u7403\u7684\u4e2d\u5fc3\u8fdb\u5165\u73a9\u5bb6\u6321\u677f\u3002\u7531\u4e8e\u6211\u4eec\u6ca1\u6709\u8003\u8651\u7403\u7684\u4e2d\u5fc3\u5728AABB\u5185\u90e8\u7684\u60c5\u51b5\uff0c\u6e38\u620f\u4f1a\u6301\u7eed\u8bd5\u56fe\u5bf9\u6240\u6709\u7684\u78b0\u649e\u505a\u51fa\u54cd\u5e94\uff0c\u5f53\u7403\u6700\u7ec8\u8131\u79bb\u65f6\uff0c\u5df2\u7ecf\u5bf9 y \u5411\u901f\u5ea6\u7ffb\u8f6c\u4e86\u591a\u6b21\uff0c\u4ee5\u81f3\u4e8e\u65e0\u6cd5\u786e\u5b9a\u7403\u5728\u8131\u79bb\u540e\u662f\u5411\u4e0a\u8fd8\u662f\u5411\u4e0b\u8fd0\u52a8\u3002 \u6211\u4eec\u53ef\u4ee5\u5f15\u5165\u4e00\u4e2a\u5c0f\u7684\u7279\u6b8a\u5904\u7406\u6765\u5f88\u5bb9\u6613\u5730\u4fee\u590d\u8fd9\u79cd\u884c\u4e3a\uff0c\u8fd9\u4e2a\u5904\u7406\u4e4b\u6240\u4ee5\u6210\u4e3a\u53ef\u80fd\u662f\u57fa\u4e8e\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u78b0\u649e\u603b\u662f\u53d1\u751f\u5728\u6321\u677f\u9876\u90e8\u7684\u4e8b\u5b9e\u3002\u6211\u4eec\u603b\u662f\u7b80\u5355\u5730\u8fd4\u56de\u6b63\u7684 y \u901f\u5ea6\u800c\u4e0d\u662f\u53cd\u8f6c y \u901f\u5ea6\uff0c\u8fd9\u6837\u5f53\u5b83\u88ab\u5361\u4f4f\u65f6\u4e5f\u53ef\u4ee5\u7acb\u5373\u8131\u79bb\u3002 //Ball->Velocity.y = -Ball->Velocity.y; Ball->Velocity.y = -1 * abs(Ball->Velocity.y); \u5982\u679c\u4f60\u8db3\u591f\u4ed4\u7ec6\u5c31\u4f1a\u89c9\u5f97\u8fd9\u4e00\u5f71\u54cd\u4ecd\u7136\u662f\u53ef\u4ee5\u88ab\u6ce8\u610f\u5230\u7684\uff0c\u4f46\u662f\u6211\u4e2a\u4eba\u5c06\u6b64\u65b9\u6cd5\u5f53\u4f5c\u4e00\u79cd\u53ef\u63a5\u53d7\u7684\u6298\u8877\u5904\u7406\u3002","title":"\u7c98\u677f"},{"location":"06%20In%20Practice/2D-Game/05%20Collisions/03%20Collision%20resolution/#_5","text":"\u4e0e\u7ecf\u5178\u7684Breakout\u5185\u5bb9\u76f8\u6bd4\u552f\u4e00\u7f3a\u5c11\u7684\u5c31\u662f\u5931\u8d25\u6761\u4ef6\u4e86\uff0c\u5931\u8d25\u4f1a\u91cd\u7f6e\u5173\u5361\u548c\u73a9\u5bb6\u3002\u5728 Game \u7c7b\u7684 Update \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u8981\u68c0\u67e5\u7403\u662f\u5426\u63a5\u89e6\u5230\u4e86\u5e95\u90e8\u8fb9\u754c\uff0c\u5982\u679c\u63a5\u89e6\u5230\u5c31\u91cd\u7f6e\u6e38\u620f\u3002 void Game::Update(GLfloat dt) { [...] if (Ball->Position.y >= this->Height) // \u7403\u662f\u5426\u63a5\u89e6\u5e95\u90e8\u8fb9\u754c\uff1f { this->ResetLevel(); this->ResetPlayer(); } } ResetLevel \u548c ResetPlayer \u51fd\u6570\u76f4\u63a5\u91cd\u65b0\u52a0\u8f7d\u5173\u5361\u5e76\u91cd\u7f6e\u5bf9\u8c61\u7684\u5404\u53d8\u91cf\u503c\u4e3a\u539f\u59cb\u7684\u503c\u3002\u73b0\u5728\u6e38\u620f\u770b\u8d77\u6765\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff1a \u5c31\u662f\u8fd9\u6837\u4e86\uff0c\u6211\u4eec\u521b\u5efa\u5b8c\u6210\u4e86\u4e00\u4e2a\u6709\u76f8\u4f3c\u673a\u5236\u7684\u7ecf\u5178Breakout\u6e38\u620f\u7684\u590d\u5236\u7248\u3002\u8fd9\u91cc\u4f60\u53ef\u4ee5\u627e\u5230Game\u7c7b\u7684\u6e90\u4ee3\u7801\uff1a header \uff0c code \u3002","title":"\u5e95\u90e8\u8fb9\u754c"},{"location":"06%20In%20Practice/2D-Game/05%20Collisions/03%20Collision%20resolution/#_6","text":"\u5728\u89c6\u9891\u6e38\u620f\u7684\u53d1\u5c55\u8fc7\u7a0b\u4e2d\uff0c\u78b0\u649e\u68c0\u6d4b\u662f\u4e00\u4e2a\u56f0\u96be\u7684\u8bdd\u9898\u751a\u81f3\u53ef\u80fd\u662f\u6700\u5927\u7684\u6311\u6218\u3002\u5927\u591a\u6570\u7684\u78b0\u649e\u68c0\u6d4b\u548c\u5904\u7406\u65b9\u6848\u662f\u548c\u7269\u7406\u5f15\u64ce\u5408\u5e76\u5728\u4e00\u8d77\u7684\uff0c\u6b63\u5982\u591a\u6570\u73b0\u4ee3\u7684\u6e38\u620f\u4e2d\u770b\u5230\u7684\u90a3\u6837\u3002\u6211\u4eec\u5728Breakout\u6e38\u620f\u4e2d\u4f7f\u7528\u7684\u78b0\u649e\u65b9\u6848\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u65b9\u6848\u5e76\u4e14\u662f\u4e13\u95e8\u7ed9\u8fd9\u7c7b\u6e38\u620f\u6240\u4e13\u7528\u7684\u3002 \u9700\u8981\u5f3a\u8c03\u7684\u662f\u8fd9\u7c7b\u78b0\u649e\u68c0\u6d4b\u548c\u5904\u7406\u65b9\u5f0f\u662f\u4e0d\u5b8c\u7f8e\u7684\u3002\u5b83\u53ea\u80fd\u8ba1\u7b97\u6bcf\u5e27\u5185\u53ef\u80fd\u53d1\u751f\u7684\u78b0\u649e\u5e76\u4e14\u53ea\u80fd\u8ba1\u7b97\u5728\u8be5\u65f6\u95f4\u6b65\u65f6\u7269\u4f53\u6240\u5728\u7684\u5404\u4f4d\u7f6e\uff1b\u8fd9\u610f\u5473\u7740\u5982\u679c\u4e00\u4e2a\u7269\u4f53\u62e5\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u901f\u5ea6\u4ee5\u81f4\u4e8e\u5728\u4e00\u5e27\u5185\u7a7f\u8fc7\u4e86\u53e6\u4e00\u4e2a\u7269\u4f53\uff0c\u5b83\u5c06\u770b\u8d77\u6765\u50cf\u662f\u4ece\u6765\u6ca1\u6709\u4e0e\u53e6\u4e00\u4e2a\u7269\u4f53\u78b0\u649e\u8fc7\u3002\u56e0\u6b64\u5982\u679c\u51fa\u73b0\u6389\u5e27\u6216\u51fa\u73b0\u4e86\u8db3\u591f\u9ad8\u7684\u901f\u5ea6\uff0c\u8fd9\u4e00\u78b0\u649e\u68c0\u6d4b\u65b9\u6848\u5c06\u65e0\u6cd5\u5e94\u5bf9\u3002 \uff08\u6211\u4eec\u4f7f\u7528\u7684\u78b0\u649e\u65b9\u6848\uff09\u4ecd\u7136\u4f1a\u51fa\u73b0\u8fd9\u51e0\u4e2a\u95ee\u9898\uff1a \u5982\u679c\u7403\u8fd0\u52a8\u5f97\u8db3\u591f\u5feb\uff0c\u5b83\u53ef\u80fd\u5728\u4e00\u5e27\u5185\u5b8c\u6574\u5730\u7a7f\u8fc7\u4e00\u4e2a\u7269\u4f53\uff0c\u800c\u4e0d\u4f1a\u68c0\u6d4b\u5230\u78b0\u649e\u3002 \u5982\u679c\u7403\u5728\u4e00\u5e27\u5185\u540c\u65f6\u649e\u51fb\u4e86\u4e00\u4e2a\u4ee5\u4e0a\u7684\u7269\u4f53\uff0c\u5b83\u5c06\u4f1a\u68c0\u6d4b\u5230\u4e24\u6b21\u78b0\u649e\u5e76\u4e24\u6b21\u53cd\u8f6c\u901f\u5ea6\uff1b\u8fd9\u6837\u4e0d\u6539\u53d8\u5b83\u7684\u539f\u59cb\u901f\u5ea6\u3002 \u649e\u51fb\u5230\u7816\u5757\u7684\u89d2\u65f6\u4f1a\u5728\u9519\u8bef\u7684\u65b9\u5411\u53cd\u8f6c\u901f\u5ea6\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b83\u5728\u4e00\u5e27\u5185\u7a7f\u8fc7\u7684\u8ddd\u79bb\u4f1a\u5f15\u53d1 VectorDirection \u8fd4\u56de\u6c34\u5e73\u65b9\u5411\u8fd8\u662f\u5782\u76f4\u65b9\u5411\u7684\u5dee\u522b\u3002 \u4f46\u662f\uff0c\u672c\u6559\u7a0b\u76ee\u7684\u5728\u4e8e\u6559\u4f1a\u8bfb\u8005\u4eec\u56fe\u5f62\u5b66\u548c\u6e38\u620f\u5f00\u53d1\u7684\u57fa\u7840\u77e5\u8bc6\u3002\u56e0\u6b64\uff0c\u8fd9\u91cc\u7684\u78b0\u649e\u65b9\u6848\u53ef\u4ee5\u670d\u52a1\u4e8e\u6b64\u76ee\u7684\uff1b\u5b83\u66f4\u5bb9\u6613\u7406\u89e3\u4e14\u5728\u6b63\u5e38\u7684\u573a\u666f\u4e2d\u53ef\u4ee5\u8f83\u597d\u5730\u8fd0\u4f5c\u3002\u9700\u8981\u8bb0\u4f4f\u7684\u662f\u5b58\u5728\u6709\u66f4\u597d\u7684\uff08\u66f4\u590d\u6742\uff09\u78b0\u649e\u65b9\u6848\uff0c\u5728\u51e0\u4e4e\u6240\u6709\u7684\u573a\u666f\u4e2d\u90fd\u53ef\u4ee5\u5f88\u597d\u5730\u8fd0\u4f5c\uff08\u5305\u62ec\u53ef\u79fb\u52a8\u7684\u7269\u4f53\uff09\u5982 \u5206\u79bb\u8f74\u5b9a\u7406 (Separating Axis Theorem)\u3002 \u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0c\u6709\u5927\u91cf\u5b9e\u7528\u5e76\u4e14\u5e38\u5e38\u5f88\u9ad8\u6548\u7684\u7269\u7406\u5f15\u64ce\uff08\u4f7f\u7528\u65f6\u95f4\u6b65\u65e0\u5173\u7684\u78b0\u649e\u65b9\u6848\uff09\u53ef\u4f9b\u60a8\u5728\u6e38\u620f\u4e2d\u4f7f\u7528\u3002\u5982\u679c\u60a8\u5e0c\u671b\u5728\u8fd9\u4e00\u7cfb\u7edf\u4e2d\u6709\u66f4\u6df1\u5165\u7684\u63a2\u7d22\u6216\u9700\u8981\u66f4\u9ad8\u7ea7\u7684\u7269\u7406\u7cfb\u7edf\u53c8\u4e0d\u7406\u89e3\u5176\u4e2d\u7684\u6570\u5b66\u673a\u7406\uff0c Box2D \u662f\u4e00\u4e2a\u5b9e\u73b0\u4e86\u7269\u7406\u7cfb\u7edf\u548c\u78b0\u649e\u68c0\u6d4b\u7684\u53ef\u4ee5\u7528\u5728\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u5b8c\u7f8e\u76842D\u7269\u7406\u5e93\u3002","title":"\u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879"},{"location":"07%20PBR/01%20Theory/","text":"\u7406\u8bba \u539f\u6587 Theory \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 J.moons \u6821\u5bf9 Krasjet, JeremyYvv Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 PBR\uff0c\u6216\u8005\u7528\u66f4\u901a\u4fd7\u4e00\u4e9b\u7684\u79f0\u547c\u662f\u6307 \u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3 (Physically Based Rendering)\uff0c\u5b83\u6307\u7684\u662f\u4e00\u4e9b\u5728\u4e0d\u540c\u7a0b\u5ea6\u4e0a\u90fd\u57fa\u4e8e\u4e0e\u73b0\u5b9e\u4e16\u754c\u7684\u7269\u7406\u539f\u7406\u66f4\u76f8\u7b26\u7684\u57fa\u672c\u7406\u8bba\u6240\u6784\u6210\u7684\u6e32\u67d3\u6280\u672f\u7684\u96c6\u5408\u3002\u6b63\u56e0\u4e3a\u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3\u76ee\u7684\u4fbf\u662f\u4e3a\u4e86\u4f7f\u7528\u4e00\u79cd\u66f4\u7b26\u5408\u7269\u7406\u5b66\u89c4\u5f8b\u7684\u65b9\u5f0f\u6765\u6a21\u62df\u5149\u7ebf\uff0c\u56e0\u6b64\u8fd9\u79cd\u6e32\u67d3\u65b9\u5f0f\u4e0e\u6211\u4eec\u539f\u6765\u7684Phong\u6216\u8005Blinn-Phong\u5149\u7167\u7b97\u6cd5\u76f8\u6bd4\u603b\u4f53\u4e0a\u770b\u8d77\u6765\u8981\u66f4\u771f\u5b9e\u4e00\u4e9b\u3002\u9664\u4e86\u770b\u8d77\u6765\u66f4\u597d\u4e9b\u4ee5\u5916\uff0c\u7531\u4e8e\u5b83\u4e0e\u7269\u7406\u6027\u8d28\u975e\u5e38\u63a5\u8fd1\uff0c\u56e0\u6b64\u6211\u4eec\uff08\u5c24\u5176\u662f\u7f8e\u672f\u5e08\u4eec\uff09\u53ef\u4ee5\u76f4\u63a5\u4ee5\u7269\u7406\u53c2\u6570\u4e3a\u4f9d\u636e\u6765\u7f16\u5199\u8868\u9762\u6750\u8d28\uff0c\u800c\u4e0d\u5fc5\u4f9d\u9760\u7c97\u52a3\u7684\u4fee\u6539\u4e0e\u8c03\u6574\u6765\u8ba9\u5149\u7167\u6548\u679c\u770b\u4e0a\u53bb\u6b63\u5e38\u3002\u4f7f\u7528\u57fa\u4e8e\u7269\u7406\u53c2\u6570\u7684\u65b9\u6cd5\u6765\u7f16\u5199\u6750\u8d28\u8fd8\u6709\u4e00\u4e2a\u66f4\u5927\u7684\u597d\u5904\uff0c\u5c31\u662f\u4e0d\u8bba\u5149\u7167\u6761\u4ef6\u5982\u4f55\uff0c\u8fd9\u4e9b\u6750\u8d28\u770b\u4e0a\u53bb\u90fd\u4f1a\u662f\u6b63\u786e\u7684\uff0c\u800c\u5728\u975ePBR\u7684\u6e32\u67d3\u7ba1\u7ebf\u5f53\u4e2d\u6709\u4e9b\u4e1c\u897f\u5c31\u4e0d\u4f1a\u90a3\u4e48\u771f\u5b9e\u4e86\u3002 \u867d\u7136\u5982\u6b64\uff0c\u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3\u4ecd\u7136\u53ea\u662f\u5bf9\u57fa\u4e8e\u7269\u7406\u539f\u7406\u7684\u73b0\u5b9e\u4e16\u754c\u7684\u4e00\u79cd\u8fd1\u4f3c\uff0c\u8fd9\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u5b83\u88ab\u79f0\u4e3a \u57fa\u4e8e \u7269\u7406\u7684\u7740\u8272(Physically based Shading) \u800c\u975e\u7269\u7406\u7740\u8272(Physical Shading)\u7684\u539f\u56e0\u3002\u5224\u65ad\u4e00\u79cdPBR\u5149\u7167\u6a21\u578b\u662f\u5426\u662f\u57fa\u4e8e\u7269\u7406\u7684\uff0c\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u4e09\u4e2a\u6761\u4ef6\uff08\u4e0d\u7528\u62c5\u5fc3\uff0c\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u4e86\u89e3\u5b83\u4eec\u7684\uff09\uff1a \u57fa\u4e8e\u5fae\u5e73\u9762(Microfacet)\u7684\u8868\u9762\u6a21\u578b\u3002 \u80fd\u91cf\u5b88\u6052\u3002 \u5e94\u7528\u57fa\u4e8e\u7269\u7406\u7684BRDF\u3002 \u5728\u8fd9\u6b21\u7684PBR\u7cfb\u5217\u6559\u7a0b\u4e4b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u628a\u91cd\u70b9\u653e\u5728\u6700\u5148\u7531\u8fea\u58eb\u5c3c(Disney)\u63d0\u51fa\u63a2\u8ba8\u5e76\u88abEpic Games\u9996\u5148\u5e94\u7528\u4e8e\u5b9e\u65f6\u6e32\u67d3\u7684PBR\u65b9\u6848\u3002\u4ed6\u4eec\u57fa\u4e8e \u91d1\u5c5e\u8d28\u5730\u5de5\u4f5c\u6d41 (Metallic Workflow)\u7684\u65b9\u6848\u6709\u975e\u5e38\u5b8c\u5907\u7684\u6587\u732e\u8bb0\u5f55\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u5404\u79cd\u6d41\u884c\u7684\u5f15\u64ce\u4e4b\u4e2d\u5e76\u4e14\u6709\u7740\u975e\u5e38\u4ee4\u4eba\u60ca\u53f9\u7684\u89c6\u89c9\u6548\u679c\u3002\u5b8c\u6210\u8fd9\u6b21\u7684\u6559\u7a0b\u4e4b\u540e\u6211\u4eec\u5c06\u4f1a\u5236\u4f5c\u51fa\u7c7b\u4f3c\u4e8e\u8fd9\u6837\u7684\u4e00\u4e9b\u4e1c\u897f\uff1a \u8bf7\u6ce8\u610f\u8fd9\u4e2a\u7cfb\u5217\u7684\u6559\u7a0b\u6240\u63a2\u8ba8\u7684\u5185\u5bb9\u5c5e\u4e8e\u76f8\u5f53\u9ad8\u7aef\u7684\u9886\u57df\uff0c\u56e0\u6b64\u8981\u6c42\u8bfb\u8005\u5bf9OpenGL\u548c\u7740\u8272\u5668\u5149\u7167\u6709\u8f83\u597d\u7684\u7406\u89e3\u3002\u8bfb\u8005\u5c06\u4f1a\u9700\u8981\u8fd9\u4e9b\u76f8\u5173\u7684\u77e5\u8bc6\uff1a \u5e27\u7f13\u51b2 \uff0c \u7acb\u65b9\u4f53\u8d34\u56fe \uff0c Gamma\u6821\u6b63 \uff0c HDR \u548c \u6cd5\u7ebf\u8d34\u56fe \u3002\u6211\u4eec\u8fd8\u4f1a\u6df1\u5165\u63a2\u8ba8\u4e00\u4e9b\u9ad8\u7b49\u6570\u5b66\u7684\u5185\u5bb9\uff0c\u6211\u4f1a\u5c3d\u6211\u6240\u80fd\u5c06\u76f8\u5173\u7684\u6982\u5ff5\u9610\u8ff0\u6e05\u695a\u3002 \u5fae\u5e73\u9762\u6a21\u578b \u6240\u6709\u7684PBR\u6280\u672f\u90fd\u57fa\u4e8e\u5fae\u5e73\u9762\u7406\u8bba\u3002\u8fd9\u9879\u7406\u8bba\u8ba4\u4e3a\uff0c\u8fbe\u5230\u5fae\u89c2\u5c3a\u5ea6\u4e4b\u540e\u4efb\u4f55\u5e73\u9762\u90fd\u53ef\u4ee5\u7528\u88ab\u79f0\u4e3a \u5fae\u5e73\u9762 (Microfacets)\u7684\u7ec6\u5c0f\u955c\u9762\u6765\u8fdb\u884c\u63cf\u7ed8\u3002\u6839\u636e\u5e73\u9762\u7c97\u7cd9\u7a0b\u5ea6\u7684\u4e0d\u540c\uff0c\u8fd9\u4e9b\u7ec6\u5c0f\u955c\u9762\u7684\u53d6\u5411\u6392\u5217\u53ef\u4ee5\u76f8\u5f53\u4e0d\u4e00\u81f4\uff1a \u4ea7\u751f\u7684\u6548\u679c\u5c31\u662f\uff1a\u4e00\u4e2a\u5e73\u9762\u8d8a\u662f\u7c97\u7cd9\uff0c\u8fd9\u4e2a\u5e73\u9762\u4e0a\u7684\u5fae\u5e73\u9762\u7684\u6392\u5217\u5c31\u8d8a\u6df7\u4e71\u3002\u8fd9\u4e9b\u5fae\u5c0f\u955c\u9762\u8fd9\u6837\u65e0\u5e8f\u53d6\u5411\u6392\u5217\u7684\u5f71\u54cd\u5c31\u662f\uff0c\u5f53\u6211\u4eec\u7279\u6307\u955c\u9762\u5149/\u955c\u9762\u53cd\u5c04\u65f6\uff0c\u5165\u5c04\u5149\u7ebf\u66f4\u8d8b\u5411\u4e8e\u5411\u5b8c\u5168\u4e0d\u540c\u7684\u65b9\u5411 \u53d1\u6563 (Scatter)\u5f00\u6765\uff0c\u8fdb\u800c\u4ea7\u751f\u51fa\u5206\u5e03\u8303\u56f4\u66f4\u5e7f\u6cdb\u7684\u955c\u9762\u53cd\u5c04\u3002\u800c\u4e0e\u4e4b\u76f8\u53cd\u7684\u662f\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5149\u6ed1\u7684\u5e73\u9762\uff0c\u5149\u7ebf\u5927\u4f53\u4e0a\u4f1a\u66f4\u8d8b\u5411\u4e8e\u5411\u540c\u4e00\u4e2a\u65b9\u5411\u53cd\u5c04\uff0c\u9020\u6210\u66f4\u5c0f\u66f4\u9510\u5229\u7684\u53cd\u5c04\uff1a \u5728\u5fae\u89c2\u5c3a\u5ea6\u4e0b\uff0c\u6ca1\u6709\u4efb\u4f55\u5e73\u9762\u662f\u5b8c\u5168\u5149\u6ed1\u7684\u3002\u7136\u800c\u7531\u4e8e\u8fd9\u4e9b\u5fae\u5e73\u9762\u5df2\u7ecf\u5fae\u5c0f\u5230\u65e0\u6cd5\u9010\u50cf\u7d20\u5730\u7ee7\u7eed\u5bf9\u5176\u8fdb\u884c\u533a\u5206\uff0c\u56e0\u6b64\u6211\u4eec\u5047\u8bbe\u4e00\u4e2a \u7c97\u7cd9\u5ea6 (Roughness)\u53c2\u6570\uff0c\u7136\u540e\u7528\u7edf\u8ba1\u5b66\u7684\u65b9\u6cd5\u6765\u4f30\u8ba1\u5fae\u5e73\u9762\u7684\u7c97\u7cd9\u7a0b\u5ea6\u3002\u6211\u4eec\u53ef\u4ee5\u57fa\u4e8e\u4e00\u4e2a\u5e73\u9762\u7684\u7c97\u7cd9\u5ea6\u6765\u8ba1\u7b97\u51fa\u4f17\u591a\u5fae\u5e73\u9762\u4e2d\uff0c\u671d\u5411\u65b9\u5411\u6cbf\u7740\u67d0\u4e2a\u5411\u91cf h \u65b9\u5411\u7684\u6bd4\u4f8b\u3002\u8fd9\u4e2a\u5411\u91cf h \u4fbf\u662f\u4f4d\u4e8e\u5149\u7ebf\u5411\u91cf l \u548c\u89c6\u7ebf\u5411\u91cf v \u4e4b\u95f4\u7684 \u534a\u7a0b\u5411\u91cf (Halfway Vector)\u3002\u6211\u4eec\u66fe\u7ecf\u5728\u4e4b\u524d\u7684 \u9ad8\u7ea7\u5149\u7167 \u6559\u7a0b\u4e2d\u8c08\u5230\u8fc7\u4e2d\u95f4\u5411\u91cf\uff0c\u5b83\u7684\u8ba1\u7b97\u65b9\u6cd5\u5982\u4e0b\uff1a h = \\frac{l + v}{\\|l + v\\|} \u5fae\u5e73\u9762\u7684\u671d\u5411\u65b9\u5411\u4e0e\u534a\u7a0b\u5411\u91cf\u7684\u65b9\u5411\u8d8a\u662f\u4e00\u81f4\uff0c\u955c\u9762\u53cd\u5c04\u7684\u6548\u679c\u5c31\u8d8a\u662f\u5f3a\u70c8\u8d8a\u662f\u9510\u5229\u3002\u901a\u8fc7\u4f7f\u7528\u4e00\u4e2a\u4ecb\u4e8e0\u52301\u4e4b\u95f4\u7684\u7c97\u7cd9\u5ea6\u53c2\u6570\uff0c\u6211\u4eec\u5c31\u80fd\u6982\u7565\u5730\u4f30\u7b97\u5fae\u5e73\u9762\u7684\u53d6\u5411\u60c5\u51b5\u4e86\uff1a \u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u8f83\u9ad8\u7684\u7c97\u7cd9\u5ea6\u663e\u793a\u51fa\u6765\u7684\u955c\u9762\u53cd\u5c04\u7684\u8f6e\u5ed3\u8981\u66f4\u5927\u4e00\u4e9b\u3002\u4e0e\u4e4b\u76f8\u53cd\uff0c\u8f83\u5c0f\u7684\u7c97\u7cd9\u5ea6\u663e\u793a\u51fa\u7684\u955c\u9762\u53cd\u5c04\u8f6e\u5ed3\u5219\u66f4\u5c0f\u66f4\u9510\u5229\u3002 \u80fd\u91cf\u5b88\u6052 \u5fae\u5e73\u9762\u8fd1\u4f3c\u6cd5\u4f7f\u7528\u4e86\u8fd9\u6837\u4e00\u79cd\u5f62\u5f0f\u7684 \u80fd\u91cf\u5b88\u6052 (Energy Conservation)\uff1a\u51fa\u5c04\u5149\u7ebf\u7684\u80fd\u91cf\u6c38\u8fdc\u4e0d\u80fd\u8d85\u8fc7\u5165\u5c04\u5149\u7ebf\u7684\u80fd\u91cf\uff08\u53d1\u5149\u9762\u9664\u5916\uff09\u3002\u5982\u4e0a\u56fe\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u968f\u7740\u7c97\u7cd9\u5ea6\u7684\u4e0a\u5347\uff0c\u955c\u9762\u53cd\u5c04\u533a\u57df\u4f1a\u589e\u52a0\uff0c\u4f46\u662f\u955c\u9762\u53cd\u5c04\u7684\u4eae\u5ea6\u5374\u4f1a\u4e0b\u964d\u3002\u5982\u679c\u6bcf\u4e2a\u50cf\u7d20\u7684\u955c\u9762\u53cd\u5c04\u5f3a\u5ea6\u90fd\u4e00\u6837\uff08\u4e0d\u7ba1\u53cd\u5c04\u8f6e\u5ed3\u7684\u5927\u5c0f\uff09\uff0c\u90a3\u4e48\u7c97\u7cd9\u7684\u5e73\u9762\u5c31\u4f1a\u653e\u5c04\u51fa\u8fc7\u591a\u7684\u80fd\u91cf\uff0c\u800c\u8fd9\u6837\u5c31\u8fdd\u80cc\u4e86\u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b\u3002\u8fd9\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u6b63\u5982\u6211\u4eec\u770b\u5230\u7684\u4e00\u6837\uff0c\u5149\u6ed1\u5e73\u9762\u7684\u955c\u9762\u53cd\u5c04\u66f4\u5f3a\u70c8\u800c\u7c97\u7cd9\u5e73\u9762\u7684\u53cd\u5c04\u66f4\u660f\u6697\u3002 \u4e3a\u4e86\u9075\u5b88\u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6f2b\u53cd\u5c04\u5149\u548c\u955c\u9762\u53cd\u5c04\u5149\u505a\u51fa\u660e\u786e\u7684\u533a\u5206\u3002\u5f53\u4e00\u675f\u5149\u7ebf\u78b0\u649e\u5230\u4e00\u4e2a\u8868\u9762\u7684\u65f6\u5019\uff0c\u5b83\u5c31\u4f1a\u5206\u79bb\u6210\u4e00\u4e2a \u6298\u5c04 \u90e8\u5206\u548c\u4e00\u4e2a \u53cd\u5c04 \u90e8\u5206\u3002\u53cd\u5c04\u90e8\u5206\u5c31\u662f\u4f1a\u76f4\u63a5\u53cd\u5c04\u5f00\u800c\u4e0d\u8fdb\u5165\u5e73\u9762\u7684\u90a3\u90e8\u5206\u5149\u7ebf\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u955c\u9762\u5149\u7167\u3002\u800c\u6298\u5c04\u90e8\u5206\u5c31\u662f\u4f59\u4e0b\u7684\u4f1a\u8fdb\u5165\u8868\u9762\u5e76\u88ab\u5438\u6536\u7684\u90a3\u90e8\u5206\u5149\u7ebf\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u6f2b\u53cd\u5c04\u5149\u7167\u3002 \u8fd9\u91cc\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u9700\u8981\u5904\u7406\uff0c\u56e0\u4e3a\u5f53\u5149\u7ebf\u63a5\u89e6\u5230\u4e00\u4e2a\u8868\u9762\u7684\u65f6\u5019\u6298\u5c04\u5149\u662f\u4e0d\u4f1a\u7acb\u5373\u5c31\u88ab\u5438\u6536\u7684\u3002\u901a\u8fc7\u7269\u7406\u5b66\u6211\u4eec\u53ef\u4ee5\u5f97\u77e5\uff0c\u5149\u7ebf\u5b9e\u9645\u4e0a\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e00\u675f\u6ca1\u6709\u8017\u5c3d\u5c31\u4e0d\u505c\u5411\u524d\u8fd0\u52a8\u7684\u80fd\u91cf\uff0c\u800c\u5149\u675f\u662f\u901a\u8fc7\u78b0\u649e\u7684\u65b9\u5f0f\u6765\u6d88\u8017\u80fd\u91cf\u3002\u6bcf\u4e00\u79cd\u6750\u6599\u90fd\u662f\u7531\u65e0\u6570\u5fae\u5c0f\u7684\u7c92\u5b50\u6240\u7ec4\u6210\uff0c\u8fd9\u4e9b\u7c92\u5b50\u90fd\u80fd\u5982\u4e0b\u56fe\u6240\u793a\u4e00\u6837\u4e0e\u5149\u7ebf\u53d1\u751f\u78b0\u649e\u3002\u8fd9\u4e9b\u7c92\u5b50\u5728\u6bcf\u6b21\u7684\u78b0\u649e\u4e2d\u90fd\u53ef\u4ee5\u5438\u6536\u5149\u7ebf\u6240\u643a\u5e26\u7684\u4e00\u90e8\u5206\u6216\u8005\u662f\u5168\u90e8\u7684\u80fd\u91cf\u800c\u540e\u8f6c\u53d8\u6210\u4e3a\u70ed\u91cf\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u5e76\u975e\u5168\u90e8\u80fd\u91cf\u90fd\u4f1a\u88ab\u5438\u6536\uff0c\u800c\u5149\u7ebf\u4e5f\u4f1a\u7ee7\u7eed\u6cbf\u7740\uff08\u57fa\u672c\u4e0a\uff09\u968f\u673a\u7684\u65b9\u5411 \u53d1\u6563 \uff0c\u7136\u540e\u518d\u548c\u5176\u4ed6\u7684\u7c92\u5b50\u78b0\u649e\u76f4\u81f3\u80fd\u91cf\u5b8c\u5168\u8017\u5c3d\u6216\u8005\u518d\u6b21\u79bb\u5f00\u8fd9\u4e2a\u8868\u9762\u3002\u800c\u5149\u7ebf\u8131\u79bb\u7269\u4f53\u8868\u9762\u540e\u5c06\u4f1a\u534f\u540c\u6784\u6210\u8be5\u8868\u9762\u7684\uff08\u6f2b\u53cd\u5c04\uff09\u989c\u8272\u3002\u4e0d\u8fc7\u5728\u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3\u4e4b\u4e2d\u6211\u4eec\u8fdb\u884c\u4e86\u7b80\u5316\uff0c\u5047\u8bbe\u5bf9\u5e73\u9762\u4e0a\u7684\u6bcf\u4e00\u70b9\u6240\u6709\u7684\u6298\u5c04\u5149\u90fd\u4f1a\u88ab\u5b8c\u5168\u5438\u6536\u800c\u4e0d\u4f1a\u6563\u5f00\u3002\u800c\u6709\u4e00\u4e9b\u88ab\u79f0\u4e3a \u6b21\u8868\u9762\u6563\u5c04 (Subsurface Scattering)\u6280\u672f\u7684\u7740\u8272\u5668\u6280\u672f\u5c06\u8fd9\u4e2a\u95ee\u9898\u8003\u8651\u4e86\u8fdb\u53bb\uff0c\u5b83\u4eec\u663e\u8457\u5730\u63d0\u5347\u4e86\u4e00\u4e9b\u8bf8\u5982\u76ae\u80a4\uff0c\u5927\u7406\u77f3\u6216\u8005\u8721\u8d28\u8fd9\u6837\u6750\u8d28\u7684\u89c6\u89c9\u6548\u679c\uff0c\u4e0d\u8fc7\u4f34\u968f\u800c\u6765\u7684\u4ee3\u4ef7\u662f\u6027\u80fd\u7684\u4e0b\u964d\u3002 \u5bf9\u4e8e \u91d1\u5c5e (Metallic)\u8868\u9762\uff0c\u5f53\u8ba8\u8bba\u5230\u53cd\u5c04\u4e0e\u6298\u5c04\u7684\u65f6\u5019\u8fd8\u6709\u4e00\u4e2a\u7ec6\u8282\u9700\u8981\u6ce8\u610f\u3002\u91d1\u5c5e\u8868\u9762\u5bf9\u5149\u7684\u53cd\u5e94\u4e0e\u975e\u91d1\u5c5e\uff08\u4e5f\u88ab\u79f0\u4e3a \u4ecb\u7535\u8d28 (Dielectrics)\uff09\u8868\u9762\u76f8\u6bd4\u662f\u4e0d\u540c\u7684\u3002\u5b83\u4eec\u9075\u4ece\u7684\u53cd\u5c04\u4e0e\u6298\u5c04\u539f\u7406\u662f\u76f8\u540c\u7684\uff0c\u4f46\u662f \u6240\u6709\u7684 \u6298\u5c04\u5149\u90fd\u4f1a\u88ab\u76f4\u63a5\u5438\u6536\u800c\u4e0d\u4f1a\u6563\u5f00\uff0c\u53ea\u7559\u4e0b\u53cd\u5c04\u5149\u6216\u8005\u8bf4\u955c\u9762\u53cd\u5c04\u5149\u3002\u4ea6\u5373\u662f\u8bf4\uff0c\u91d1\u5c5e\u8868\u9762\u53ea\u4f1a\u663e\u793a\u955c\u9762\u53cd\u5c04\u989c\u8272\uff0c\u800c\u4e0d\u4f1a\u663e\u793a\u51fa\u6f2b\u53cd\u5c04\u989c\u8272\u3002\u7531\u4e8e\u91d1\u5c5e\u4e0e\u7535\u4ecb\u8d28\u4e4b\u95f4\u5b58\u5728\u8fd9\u6837\u660e\u663e\u7684\u533a\u522b\uff0c\u56e0\u6b64\u5b83\u4eec\u4e24\u8005\u5728PBR\u6e32\u67d3\u7ba1\u7ebf\u4e2d\u88ab\u533a\u522b\u5904\u7406\uff0c\u800c\u6211\u4eec\u5c06\u5728\u6587\u7ae0\u7684\u540e\u9762\u8fdb\u4e00\u6b65\u8be6\u7ec6\u63a2\u8ba8\u8fd9\u4e2a\u95ee\u9898\u3002 \u53cd\u5c04\u5149\u4e0e\u6298\u5c04\u5149\u4e4b\u95f4\u7684\u8fd9\u4e2a\u533a\u522b\u4f7f\u6211\u4eec\u5f97\u5230\u4e86\u53e6\u4e00\u6761\u5173\u4e8e\u80fd\u91cf\u5b88\u6052\u7684\u7ecf\u9a8c\u7ed3\u8bba\uff1a\u53cd\u5c04\u5149\u4e0e\u6298\u5c04\u5149\u5b83\u4eec\u4e8c\u8005\u4e4b\u95f4\u662f \u4e92\u65a5 \u7684\u5173\u7cfb\u3002\u65e0\u8bba\u4f55\u79cd\u5149\u7ebf\uff0c\u5176\u88ab\u6750\u8d28\u8868\u9762\u6240\u53cd\u5c04\u7684\u80fd\u91cf\u5c06\u65e0\u6cd5\u518d\u88ab\u6750\u8d28\u5438\u6536\u3002\u56e0\u6b64\uff0c\u8bf8\u5982\u6298\u5c04\u5149\u8fd9\u6837\u7684\u4f59\u4e0b\u7684\u8fdb\u5165\u8868\u9762\u4e4b\u4e2d\u7684\u80fd\u91cf\u6b63\u597d\u5c31\u662f\u6211\u4eec\u8ba1\u7b97\u5b8c\u53cd\u5c04\u4e4b\u540e\u4f59\u4e0b\u7684\u80fd\u91cf\u3002 \u6211\u4eec\u6309\u7167\u80fd\u91cf\u5b88\u6052\u7684\u5173\u7cfb\uff0c\u9996\u5148\u8ba1\u7b97\u955c\u9762\u53cd\u5c04\u90e8\u5206\uff0c\u5b83\u7684\u503c\u7b49\u4e8e\u5165\u5c04\u5149\u7ebf\u88ab\u53cd\u5c04\u7684\u80fd\u91cf\u6240\u5360\u7684\u767e\u5206\u6bd4\u3002\u7136\u540e\u6298\u5c04\u5149\u90e8\u5206\u5c31\u53ef\u4ee5\u76f4\u63a5\u7531\u955c\u9762\u53cd\u5c04\u90e8\u5206\u8ba1\u7b97\u5f97\u51fa\uff1a float kS = calculateSpecularComponent(...); // \u53cd\u5c04/\u955c\u9762 \u90e8\u5206 float kD = 1.0 - ks; // \u6298\u5c04/\u6f2b\u53cd\u5c04 \u90e8\u5206 \u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u5728\u9075\u5b88\u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b\u7684\u524d\u63d0\u4e0b\u77e5\u9053\u5165\u5c04\u5149\u7ebf\u7684\u53cd\u5c04\u90e8\u5206\u4e0e\u6298\u5c04\u90e8\u5206\u6240\u5360\u7684\u603b\u91cf\u4e86\u3002\u6309\u7167\u8fd9\u79cd\u65b9\u6cd5\u6298\u5c04/\u6f2b\u53cd\u5c04\u4e0e\u53cd\u5c04/\u955c\u9762\u53cd\u5c04\u6240\u5360\u7684\u4efd\u989d\u90fd\u4e0d\u4f1a\u8d85\u8fc71.0\uff0c\u5982\u6b64\u5c31\u80fd\u4fdd\u8bc1\u5b83\u4eec\u7684\u80fd\u91cf\u603b\u548c\u6c38\u8fdc\u4e0d\u4f1a\u8d85\u8fc7\u5165\u5c04\u5149\u7ebf\u7684\u80fd\u91cf\u3002\u800c\u8fd9\u4e9b\u90fd\u662f\u6211\u4eec\u5728\u524d\u9762\u7684\u5149\u7167\u6559\u7a0b\u4e2d\u6ca1\u6709\u8003\u8651\u7684\u95ee\u9898\u3002 \u53cd\u5c04\u7387\u65b9\u7a0b \u5728\u8fd9\u91cc\u6211\u4eec\u5f15\u5165\u4e86\u4e00\u79cd\u88ab\u79f0\u4e3a \u6e32\u67d3\u65b9\u7a0b (Render Equation)\u7684\u4e1c\u897f\u3002\u5b83\u662f\u67d0\u4e9b\u806a\u660e\u7edd\u9876\u7684\u4eba\u6240\u6784\u60f3\u51fa\u6765\u7684\u4e00\u4e2a\u7cbe\u5999\u7684\u65b9\u7a0b\u5f0f\uff0c\u662f\u5982\u4eca\u6211\u4eec\u6240\u62e5\u6709\u7684\u7528\u6765\u6a21\u62df\u5149\u7684\u89c6\u89c9\u6548\u679c\u6700\u597d\u7684\u6a21\u578b\u3002\u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3\u6240\u575a\u5b9a\u9075\u5faa\u7684\u662f\u4e00\u79cd\u88ab\u79f0\u4e3a \u53cd\u5c04\u7387\u65b9\u7a0b (The Reflectance Equation)\u7684\u6e32\u67d3\u65b9\u7a0b\u7684\u7279\u5316\u7248\u672c\u3002\u8981\u6b63\u786e\u5730\u7406\u89e3PBR\uff0c\u5f88\u91cd\u8981\u7684\u4e00\u70b9\u5c31\u662f\u8981\u9996\u5148\u900f\u5f7b\u5730\u7406\u89e3\u53cd\u5c04\u7387\u65b9\u7a0b\uff1a L_o(p,\\omega_o) = \\int\\limits_{\\Omega} f_r(p,\\omega_i,\\omega_o) L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \u53cd\u5c04\u7387\u65b9\u7a0b\u4e00\u5f00\u59cb\u53ef\u80fd\u4f1a\u663e\u5f97\u6709\u4e9b\u5413\u4eba\uff0c\u4e0d\u8fc7\u968f\u7740\u6211\u4eec\u6162\u6162\u5bf9\u5176\u8fdb\u884c\u5256\u6790\uff0c\u8bfb\u8005\u6700\u7ec8\u4f1a\u9010\u6e10\u7406\u89e3\u5b83\u7684\u3002\u8981\u6b63\u786e\u5730\u7406\u89e3\u8fd9\u4e2a\u65b9\u7a0b\u5f0f\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u7a0d\u5fae\u6d89\u8db3\u4e00\u4e9b \u8f90\u5c04\u5ea6\u91cf\u5b66 (Radiometry)\u7684\u5185\u5bb9\u3002\u8f90\u5c04\u5ea6\u91cf\u5b66\u662f\u4e00\u79cd\u7528\u6765\u5ea6\u91cf\u7535\u78c1\u573a\u8f90\u5c04\uff08\u5305\u62ec\u53ef\u89c1\u5149\uff09\u7684\u624b\u6bb5\u3002\u6709\u5f88\u591a\u79cd\u8f90\u5c04\u5ea6\u91cf(radiometric quantities)\u53ef\u4ee5\u7528\u6765\u6d4b\u91cf\u66f2\u9762\u6216\u8005\u67d0\u4e2a\u65b9\u5411\u4e0a\u7684\u5149\uff0c\u4f46\u662f\u6211\u4eec\u5c06\u53ea\u4f1a\u8ba8\u8bba\u5176\u4e2d\u548c\u53cd\u5c04\u7387\u65b9\u7a0b\u6709\u5173\u7684\u4e00\u79cd\u3002\u5b83\u88ab\u79f0\u4e3a \u8f90\u5c04\u7387 (Radiance)\uff0c\u5728\u8fd9\u91cc\u7528 L \u6765\u8868\u793a\u3002\u8f90\u5c04\u7387\u88ab\u7528\u6765\u91cf\u5316\u6765\u81ea\u5355\u4e00\u65b9\u5411\u4e0a\u7684\u5149\u7ebf\u7684\u5927\u5c0f\u6216\u8005\u5f3a\u5ea6\u3002\u7531\u4e8e\u8f90\u5c04\u7387\u662f\u7531\u8bb8\u591a\u7269\u7406\u53d8\u91cf\u96c6\u5408\u800c\u6210\u7684\uff0c\u4e00\u5f00\u59cb\u7406\u89e3\u8d77\u6765\u53ef\u80fd\u6709\u4e9b\u56f0\u96be\uff0c\u56e0\u6b64\u6211\u4eec\u9996\u5148\u5173\u6ce8\u4e00\u4e0b\u8fd9\u4e9b\u7269\u7406\u91cf\uff1a \u8f90\u5c04\u901a\u91cf \uff1a\u8f90\u5c04\u901a\u91cf \\Phi \u8868\u793a\u7684\u662f\u4e00\u4e2a\u5149\u6e90\u6240\u8f93\u51fa\u7684\u80fd\u91cf\uff0c\u4ee5\u74e6\u7279\u4e3a\u5355\u4f4d\u3002\u5149\u662f\u7531\u591a\u79cd\u4e0d\u540c\u6ce2\u957f\u7684\u80fd\u91cf\u6240\u96c6\u5408\u800c\u6210\u7684\uff0c\u800c\u6bcf\u79cd\u6ce2\u957f\u5219\u4e0e\u4e00\u79cd\u7279\u5b9a\u7684\uff08\u53ef\u89c1\u7684\uff09\u989c\u8272\u76f8\u5173\u3002\u56e0\u6b64\u4e00\u4e2a\u5149\u6e90\u6240\u653e\u5c04\u51fa\u6765\u7684\u80fd\u91cf\u53ef\u4ee5\u88ab\u89c6\u4f5c\u8fd9\u4e2a\u5149\u6e90\u5305\u542b\u7684\u6240\u6709\u5404\u79cd\u6ce2\u957f\u7684\u4e00\u4e2a\u51fd\u6570\u3002\u6ce2\u957f\u4ecb\u4e8e390nm\u5230700nm\uff08\u7eb3\u7c73\uff09\u7684\u5149\u88ab\u8ba4\u4e3a\u662f\u5904\u4e8e\u53ef\u89c1\u5149\u5149\u8c31\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u4eec\u662f\u4eba\u773c\u53ef\u89c1\u7684\u6ce2\u957f\u3002\u5728\u4e0b\u9762\u4f60\u53ef\u4ee5\u770b\u5230\u4e00\u5e45\u56fe\u7247\uff0c\u91cc\u9762\u5c55\u793a\u4e86\u65e5\u5149\u4e2d\u4e0d\u540c\u6ce2\u957f\u7684\u5149\u6240\u5177\u6709\u7684\u80fd\u91cf\uff1a \u8f90\u5c04\u901a\u91cf\u5c06\u4f1a\u8ba1\u7b97\u8fd9\u4e2a\u7531\u4e0d\u540c\u6ce2\u957f\u6784\u6210\u7684\u51fd\u6570\u7684\u603b\u9762\u79ef\u3002\u76f4\u63a5\u5c06\u8fd9\u79cd\u5bf9\u4e0d\u540c\u6ce2\u957f\u7684\u8ba1\u91cf\u4f5c\u4e3a\u53c2\u6570\u8f93\u5165\u8ba1\u7b97\u673a\u56fe\u5f62\u6709\u4e00\u4e9b\u4e0d\u5207\u5b9e\u9645\uff0c\u56e0\u6b64\u6211\u4eec\u901a\u5e38\u4e0d\u76f4\u63a5\u4f7f\u7528\u6ce2\u957f\u7684\u5f3a\u5ea6\u800c\u662f\u4f7f\u7528\u4e09\u539f\u8272\u7f16\u7801\uff0c\u4e5f\u5c31\u662f RGB \uff08\u6216\u8005\u6309\u901a\u5e38\u7684\u79f0\u547c\uff1a\u5149\u8272\uff09\u6765\u4f5c\u4e3a\u8f90\u5c04\u901a\u91cf\u8868\u793a\u7684\u7b80\u5316\u3002\u8fd9\u5957\u7f16\u7801\u786e\u5b9e\u4f1a\u5e26\u6765\u4e00\u4e9b\u4fe1\u606f\u4e0a\u7684\u635f\u5931\uff0c\u4f46\u662f\u8fd9\u5bf9\u4e8e\u89c6\u89c9\u6548\u679c\u4e0a\u7684\u5f71\u54cd\u57fa\u672c\u53ef\u4ee5\u5ffd\u7565\u3002 \u7acb\u4f53\u89d2 \uff1a\u7acb\u4f53\u89d2\u7528 \\omega \u8868\u793a\uff0c\u5b83\u53ef\u4ee5\u4e3a\u6211\u4eec\u63cf\u8ff0\u6295\u5c04\u5230\u5355\u4f4d\u7403\u4f53\u4e0a\u7684\u4e00\u4e2a\u622a\u9762\u7684\u5927\u5c0f\u6216\u8005\u9762\u79ef\u3002\u6295\u5c04\u5230\u8fd9\u4e2a\u5355\u4f4d\u7403\u4f53\u4e0a\u7684\u622a\u9762\u7684\u9762\u79ef\u5c31\u88ab\u79f0\u4e3a \u7acb\u4f53\u89d2 (Solid Angle)\uff0c\u4f60\u53ef\u4ee5\u628a\u7acb\u4f53\u89d2\u60f3\u8c61\u6210\u4e3a\u4e00\u4e2a\u5e26\u6709\u4f53\u79ef\u7684\u65b9\u5411\uff1a \u53ef\u4ee5\u628a\u81ea\u5df1\u60f3\u8c61\u6210\u4e3a\u4e00\u4e2a\u7ad9\u5728\u5355\u4f4d\u7403\u9762\u7684\u4e2d\u5fc3\u7684\u89c2\u5bdf\u8005\uff0c\u5411\u7740\u6295\u5f71\u7684\u65b9\u5411\u770b\u3002\u8fd9\u4e2a\u6295\u5f71\u8f6e\u5ed3\u7684\u5927\u5c0f\u5c31\u662f\u7acb\u4f53\u89d2\u3002 \u8f90\u5c04\u5f3a\u5ea6 \uff1a\u8f90\u5c04\u5f3a\u5ea6(Radiant Intensity)\u8868\u793a\u7684\u662f\u5728\u5355\u4f4d\u7403\u9762\u4e0a\uff0c\u4e00\u4e2a\u5149\u6e90\u5411\u6bcf\u5355\u4f4d\u7acb\u4f53\u89d2\u6240\u6295\u9001\u7684\u8f90\u5c04\u901a\u91cf\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5047\u8bbe\u4e00\u4e2a\u5168\u5411\u5149\u6e90\u5411\u6240\u6709\u65b9\u5411\u5747\u5300\u7684\u8f90\u5c04\u80fd\u91cf\uff0c\u8f90\u5c04\u5f3a\u5ea6\u5c31\u80fd\u5e2e\u6211\u4eec\u8ba1\u7b97\u51fa\u5b83\u5728\u4e00\u4e2a\u5355\u4f4d\u9762\u79ef\uff08\u7acb\u4f53\u89d2\uff09\u5185\u7684\u80fd\u91cf\u5927\u5c0f\uff1a \u8ba1\u7b97\u8f90\u5c04\u5f3a\u5ea6\u7684\u516c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a I = \\frac{d\\Phi}{d\\omega} \u5176\u4e2d I \u8868\u793a\u8f90\u5c04\u901a\u91cf \\Phi \u9664\u4ee5\u7acb\u4f53\u89d2 \\omega \u3002 \u5728\u7406\u89e3\u4e86\u8f90\u5c04\u901a\u91cf\uff0c\u8f90\u5c04\u5f3a\u5ea6\u4e0e\u7acb\u4f53\u89d2\u7684\u6982\u5ff5\u4e4b\u540e\uff0c\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u5f00\u59cb\u8ba8\u8bba \u8f90\u5c04\u7387 \u7684\u65b9\u7a0b\u5f0f\u4e86\u3002\u8fd9\u4e2a\u65b9\u7a0b\u8868\u793a\u7684\u662f\uff0c\u4e00\u4e2a\u62e5\u6709\u8f90\u5c04\u5f3a\u5ea6 \\Phi \u7684\u5149\u6e90\u5728\u5355\u4f4d\u9762\u79ef A \uff0c\u5355\u4f4d\u7acb\u4f53\u89d2 \\omega \u4e0a\u7684\u8f90\u5c04\u51fa\u7684\u603b\u80fd\u91cf\uff1a L=\\frac{d^2\\Phi}{ dA d\\omega \\cos\\theta} \u8f90\u5c04\u7387\u662f\u8f90\u5c04\u5ea6\u91cf\u5b66\u4e0a\u8868\u793a\u4e00\u4e2a\u533a\u57df\u5e73\u9762\u4e0a\u5149\u7ebf\u603b\u91cf\u7684\u7269\u7406\u91cf\uff0c\u5b83\u53d7\u5230 \u5165\u5c04 (Incident)\uff08\u6216\u8005\u6765\u5c04\uff09\u5149\u7ebf\u4e0e\u5e73\u9762\u6cd5\u7ebf\u95f4\u7684\u5939\u89d2 \\theta \u7684\u4f59\u5f26\u503c \\cos \\theta \u7684\u5f71\u54cd\uff1a\u5f53\u76f4\u63a5\u8f90\u5c04\u5230\u5e73\u9762\u4e0a\u7684\u7a0b\u5ea6\u8d8a\u4f4e\u65f6\uff0c\u5149\u7ebf\u5c31\u8d8a\u5f31\uff0c\u800c\u5f53\u5149\u7ebf\u5b8c\u5168\u5782\u76f4\u4e8e\u5e73\u9762\u65f6\u5f3a\u5ea6\u6700\u9ad8\u3002\u8fd9\u548c\u6211\u4eec\u5728\u524d\u9762\u7684 \u57fa\u7840\u5149\u7167 \u6559\u7a0b\u4e2d\u5bf9\u4e8e\u6f2b\u53cd\u5c04\u5149\u7167\u7684\u6982\u5ff5\u76f8\u4f3c\uff0c\u5176\u4e2d \\cos \\theta \u5c31\u76f4\u63a5\u5bf9\u5e94\u4e8e\u5149\u7ebf\u7684\u65b9\u5411\u5411\u91cf\u548c\u5e73\u9762\u6cd5\u5411\u91cf\u7684\u70b9\u79ef\uff1a float cosTheta = dot(lightDir, N); \u8f90\u5c04\u7387\u65b9\u7a0b\u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u628a\u5927\u90e8\u5206\u6211\u4eec\u611f\u5174\u8da3\u7684\u7269\u7406\u91cf\u90fd\u5305\u542b\u4e86\u8fdb\u53bb\u3002\u5982\u679c\u6211\u4eec\u628a\u7acb\u4f53\u89d2 \\omega \u548c\u9762\u79ef A \u770b\u4f5c\u662f\u65e0\u7a77\u5c0f\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u80fd\u7528\u8f90\u5c04\u7387\u6765\u8868\u793a\u5355\u675f\u5149\u7ebf\u7a7f\u8fc7\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u70b9\u7684\u901a\u91cf\u3002\u8fd9\u5c31\u4f7f\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u5f97\u51fa\u4f5c\u7528\u4e8e\u5355\u4e2a\uff08\u7247\u6bb5\uff09\u70b9\u4e0a\u7684\u5355\u675f\u5149\u7ebf\u7684\u8f90\u5c04\u7387\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u628a\u7acb\u4f53\u89d2 \\omega \u8f6c\u53d8\u4e3a\u65b9\u5411\u5411\u91cf \\omega \u7136\u540e\u628a\u9762 A \u8f6c\u6362\u4e3a\u70b9 p \u3002\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u76f4\u63a5\u5728\u6211\u4eec\u7684\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u8f90\u5c04\u7387\u6765\u8ba1\u7b97\u5355\u675f\u5149\u7ebf\u5bf9\u6bcf\u4e2a\u7247\u6bb5\u7684\u4f5c\u7528\u4e86\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5f53\u6d89\u53ca\u5230\u8f90\u5c04\u7387\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u5173\u5fc3\u7684\u662f \u6240\u6709 \u6295\u5c04\u5230\u70b9 p \u4e0a\u7684\u5149\u7ebf\u7684\u603b\u548c\uff0c\u800c\u8fd9\u4e2a\u548c\u5c31\u79f0\u4e3a\u8f90\u5c04\u7167\u5ea6\u6216\u8005 \u8f90\u7167\u5ea6 (Irradiance)\u3002\u5728\u7406\u89e3\u4e86\u8f90\u5c04\u7387\u548c\u8f90\u7167\u5ea6\u7684\u6982\u5ff5\u4e4b\u540e\uff0c\u8ba9\u6211\u4eec\u518d\u56de\u8fc7\u5934\u6765\u770b\u770b\u53cd\u5c04\u7387\u65b9\u7a0b\uff1a L_o(p,\\omega_o) = \\int\\limits_{\\Omega} f_r(p,\\omega_i,\\omega_o) L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \u6211\u4eec\u77e5\u9053\u5728\u6e32\u67d3\u65b9\u7a0b\u4e2d L \u4ee3\u8868\u901a\u8fc7\u67d0\u4e2a\u65e0\u9650\u5c0f\u7684\u7acb\u4f53\u89d2 \\omega_i \u5728\u67d0\u4e2a\u70b9\u4e0a\u7684\u8f90\u5c04\u7387\uff0c\u800c\u7acb\u4f53\u89d2\u53ef\u4ee5\u89c6\u4f5c\u662f\u5165\u5c04\u65b9\u5411\u5411\u91cf \\omega_i \u3002\u6ce8\u610f\u6211\u4eec\u5229\u7528\u5149\u7ebf\u548c\u5e73\u9762\u95f4\u7684\u5165\u5c04\u89d2\u7684\u4f59\u5f26\u503c \\cos \\theta \u6765\u8ba1\u7b97\u80fd\u91cf\uff0c\u4ea6\u5373\u4ece\u8f90\u5c04\u7387\u516c\u5f0f L \u8f6c\u5316\u81f3\u53cd\u5c04\u7387\u516c\u5f0f\u65f6\u7684 n \\cdot \\omega_i \u3002\u7528 \\omega_o \u8868\u793a\u89c2\u5bdf\u65b9\u5411\uff0c\u4e5f\u5c31\u662f\u51fa\u5c04\u65b9\u5411\uff0c\u53cd\u5c04\u7387\u516c\u5f0f\u8ba1\u7b97\u4e86\u70b9 p \u5728 \\omega_o \u65b9\u5411\u4e0a\u88ab\u53cd\u5c04\u51fa\u6765\u7684\u8f90\u5c04\u7387 L_o(p, \\omega_o) \u7684\u603b\u548c\u3002\u6216\u8005\u6362\u53e5\u8bdd\u8bf4\uff1a L_o \u8868\u793a\u4e86\u4ece \\omega_o \u65b9\u5411\u4e0a\u89c2\u5bdf\uff0c\u5149\u7ebf\u6295\u5c04\u5230\u70b9 p \u4e0a\u53cd\u5c04\u51fa\u6765\u7684\u8f90\u7167\u5ea6\u3002 \u57fa\u4e8e\u53cd\u5c04\u7387\u516c\u5f0f\u662f\u56f4\u7ed5\u6240\u6709\u5165\u5c04\u8f90\u5c04\u7387\u7684\u603b\u548c\uff0c\u4e5f\u5c31\u662f\u8f90\u7167\u5ea6\u6765\u8ba1\u7b97\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u7684\u5c31\u4e0d\u53ea\u662f\u662f\u5355\u4e00\u7684\u4e00\u4e2a\u65b9\u5411\u4e0a\u7684\u5165\u5c04\u5149\uff0c\u800c\u662f\u4e00\u4e2a\u4ee5\u70b9 p \u4e3a\u7403\u5fc3\u7684\u534a\u7403\u9886\u57df \\Omega \u5185\u6240\u6709\u65b9\u5411\u4e0a\u7684\u5165\u5c04\u5149\u3002\u4e00\u4e2a \u534a\u7403\u9886\u57df (Hemisphere)\u53ef\u4ee5\u63cf\u8ff0\u4e3a\u4ee5\u5e73\u9762\u6cd5\u7ebf n \u4e3a\u8f74\u6240\u73af\u7ed5\u7684\u534a\u4e2a\u7403\u4f53\uff1a \u4e3a\u4e86\u8ba1\u7b97\u67d0\u4e9b\u9762\u79ef\u7684\u503c\uff0c\u6216\u8005\u50cf\u662f\u5728\u534a\u7403\u9886\u57df\u7684\u95ee\u9898\u4e2d\u8ba1\u7b97\u67d0\u4e00\u4e2a\u4f53\u79ef\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u9700\u8981\u7528\u5230\u4e00\u79cd\u79f0\u4e3a \u79ef\u5206 (Integral)\u7684\u6570\u5b66\u624b\u6bb5\uff0c\u4e5f\u5c31\u662f\u53cd\u5c04\u7387\u516c\u5f0f\u4e2d\u7684\u7b26\u53f7 \\int \uff0c\u5b83\u7684\u8fd0\u7b97\u5305\u542b\u4e86\u534a\u7403\u9886\u57df \\Omega \u5185\u6240\u6709\u5165\u5c04\u65b9\u5411\u4e0a\u7684 d\\omega_i \u3002\u79ef\u5206\u8fd0\u7b97\u7684\u503c\u7b49\u4e8e\u4e00\u4e2a\u51fd\u6570\u66f2\u7ebf\u7684\u9762\u79ef\uff0c\u5b83\u7684\u8ba1\u7b97\u7ed3\u679c\u8981\u4e48\u662f\u89e3\u6790\u89e3\u8981\u4e48\u5c31\u662f\u6570\u503c\u89e3\u3002\u7531\u4e8e\u6e32\u67d3\u65b9\u7a0b\u548c\u53cd\u5c04\u7387\u65b9\u7a0b\u90fd\u6ca1\u6709\u89e3\u6790\u89e3\uff0c\u6211\u4eec\u5c06\u4f1a\u7528\u79bb\u6563\u7684\u65b9\u6cd5\u6765\u6c42\u5f97\u8fd9\u4e2a\u79ef\u5206\u7684\u6570\u503c\u89e3\u3002\u8fd9\u4e2a\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\uff0c\u5728\u534a\u7403\u9886\u57df \\Omega \u4e2d\u6309\u4e00\u5b9a\u7684\u6b65\u957f\u5c06\u53cd\u5c04\u7387\u65b9\u7a0b\u5206\u6563\u6c42\u89e3\uff0c\u7136\u540e\u518d\u6309\u7167\u6b65\u957f\u5927\u5c0f\u5c06\u6240\u5f97\u5230\u7684\u7ed3\u679c\u5e73\u5747\u5316\u3002\u8fd9\u79cd\u65b9\u6cd5\u88ab\u79f0\u4e3a\u9ece\u66fc\u548c( Riemann sum ) \uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u7c97\u7565\u7684\u6f14\u793a\u4e00\u4e0b\uff1a int steps = 100; float sum = 0.0f; vec3 P = ...; vec3 Wo = ...; vec3 N = ...; float dW = 1.0f / steps; for(int i = 0; i < steps; ++i) { vec3 Wi = getNextIncomingLightDir(i); sum += Fr(p, Wi, Wo) * L(p, Wi) * dot(N, Wi) * dW; } \u901a\u8fc7\u5229\u7528 dW \u6765\u5bf9\u6240\u6709\u79bb\u6563\u90e8\u5206\u8fdb\u884c\u7f29\u653e\uff0c\u5176\u548c\u6700\u540e\u5c31\u7b49\u4e8e\u79ef\u5206\u51fd\u6570\u7684\u603b\u9762\u79ef\u6216\u8005\u603b\u4f53\u79ef\u3002\u8fd9\u4e2a\u7528\u6765\u5bf9\u6bcf\u4e2a\u79bb\u6563\u6b65\u957f\u8fdb\u884c\u7f29\u653e\u7684 dW \u53ef\u4ee5\u8ba4\u4e3a\u5c31\u662f\u53cd\u5c04\u7387\u65b9\u7a0b\u4e2d\u7684 d\\omega_i \u3002\u5728\u6570\u5b66\u4e0a\uff0c\u7528\u6765\u8ba1\u7b97\u79ef\u5206\u7684 d\\omega_i \u8868\u793a\u7684\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u7b26\u53f7\uff0c\u800c\u6211\u4eec\u4f7f\u7528\u7684 dW \u5728\u4ee3\u7801\u4e2d\u548c\u5b83\u5e76\u6ca1\u6709\u76f4\u63a5\u7684\u8054\u7cfb\uff08\u56e0\u4e3a\u5b83\u4ee3\u8868\u7684\u662f\u9ece\u66fc\u548c\u4e2d\u7684\u79bb\u6563\u6b65\u957f\uff09\uff0c\u8fd9\u6837\u8bf4\u662f\u4e3a\u4e86\u53ef\u4ee5\u5e2e\u52a9\u4f60\u7406\u89e3\u3002\u8bf7\u7262\u8bb0\uff0c\u4f7f\u7528\u79bb\u6563\u6b65\u957f\u5f97\u5230\u7684\u662f\u51fd\u6570\u603b\u9762\u79ef\u7684\u4e00\u4e2a\u8fd1\u4f3c\u503c\u3002\u7ec6\u5fc3\u7684\u8bfb\u8005\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u79bb\u6563\u90e8\u5206\u7684\u6570\u91cf\u6765\u63d0\u9ad8\u9ece\u66fc\u548c\u7684 \u51c6\u786e\u5ea6 (Accuracy)\u3002 \u53cd\u5c04\u7387\u65b9\u7a0b\u6982\u62ec\u4e86\u5728\u534a\u7403\u9886\u57df \\Omega \u5185\uff0c\u78b0\u649e\u5230\u4e86\u70b9 p \u4e0a\u7684\u6240\u6709\u5165\u5c04\u65b9\u5411 \\omega_i \u4e0a\u7684\u5149\u7ebf\u7684\u8f90\u5c04\u7387\uff0c\u5e76\u53d7\u5230 f_r \u7684\u7ea6\u675f\uff0c\u7136\u540e\u8fd4\u56de\u89c2\u5bdf\u65b9\u5411\u4e0a\u53cd\u5c04\u5149\u7684 L_o \u3002\u6b63\u5982\u6211\u4eec\u6240\u719f\u6089\u7684\u90a3\u6837\uff0c\u5165\u5c04\u5149\u8f90\u5c04\u7387\u53ef\u4ee5\u7531 \u5149\u6e90 \u5904\u83b7\u5f97\uff0c\u6b64\u5916\u8fd8\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u73af\u5883\u8d34\u56fe\u6765\u6d4b\u7b97\u6240\u6709\u5165\u5c04\u65b9\u5411\u4e0a\u7684\u8f90\u5c04\u7387\uff0c\u6211\u4eec\u5c06\u5728\u672a\u6765\u7684 IBL \u6559\u7a0b\u4e2d\u8ba8\u8bba\u8fd9\u4e2a\u65b9\u6cd5\u3002 \u73b0\u5728\u552f\u4e00\u5269\u4e0b\u7684\u672a\u77e5\u7b26\u53f7\u5c31\u662f f_r \u4e86\uff0c\u5b83\u88ab\u79f0\u4e3a BRDF \uff0c\u6216\u8005 \u53cc\u5411\u53cd\u5c04\u5206\u5e03\u51fd\u6570 (Bidirectional Reflective Distribution Function) \uff0c\u5b83\u7684\u4f5c\u7528\u662f\u57fa\u4e8e\u8868\u9762\u6750\u8d28\u5c5e\u6027\u6765\u5bf9\u5165\u5c04\u8f90\u5c04\u7387\u8fdb\u884c\u7f29\u653e\u6216\u8005\u52a0\u6743\u3002 BRDF BRDF \uff0c\u6216\u8005\u8bf4 \u53cc\u5411\u53cd\u5c04\u5206\u5e03\u51fd\u6570 \uff0c\u5b83\u63a5\u53d7\u5165\u5c04\uff08\u5149\uff09\u65b9\u5411 \\omega_i \uff0c\u51fa\u5c04\uff08\u89c2\u5bdf\uff09\u65b9\u5411 \\omega_o \uff0c\u5e73\u9762\u6cd5\u7ebf n \u4ee5\u53ca\u4e00\u4e2a\u7528\u6765\u8868\u793a\u5fae\u5e73\u9762\u7c97\u7cd9\u7a0b\u5ea6\u7684\u53c2\u6570 a \u4f5c\u4e3a\u51fd\u6570\u7684\u8f93\u5165\u53c2\u6570\u3002BRDF\u53ef\u4ee5\u8fd1\u4f3c\u7684\u6c42\u51fa\u6bcf\u675f\u5149\u7ebf\u5bf9\u4e00\u4e2a\u7ed9\u5b9a\u4e86\u6750\u8d28\u5c5e\u6027\u7684\u5e73\u9762\u4e0a\u6700\u7ec8\u53cd\u5c04\u51fa\u6765\u7684\u5149\u7ebf\u6240\u4f5c\u51fa\u7684\u8d21\u732e\u7a0b\u5ea6\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u5e73\u9762\u62e5\u6709\u5b8c\u5168\u5149\u6ed1\u7684\u8868\u9762\uff08\u6bd4\u5982\u955c\u9762\uff09\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6240\u6709\u7684\u5165\u5c04\u5149\u7ebf \\omega_i \uff08\u9664\u4e86\u4e00\u675f\u4ee5\u5916\uff09\u800c\u8a00BRDF\u51fd\u6570\u90fd\u4f1a\u8fd4\u56de0.0 \uff0c\u53ea\u6709\u4e00\u675f\u4e0e\u51fa\u5c04\u5149\u7ebf \\omega_o \u62e5\u6709\u76f8\u540c\uff08\u88ab\u53cd\u5c04\uff09\u89d2\u5ea6\u7684\u5149\u7ebf\u4f1a\u5f97\u52301.0\u8fd9\u4e2a\u8fd4\u56de\u503c\u3002 BRDF\u57fa\u4e8e\u6211\u4eec\u4e4b\u524d\u6240\u63a2\u8ba8\u8fc7\u7684\u5fae\u5e73\u9762\u7406\u8bba\u6765\u8fd1\u4f3c\u7684\u6c42\u5f97\u6750\u8d28\u7684\u53cd\u5c04\u4e0e\u6298\u5c04\u5c5e\u6027\u3002\u5bf9\u4e8e\u4e00\u4e2aBRDF\uff0c\u4e3a\u4e86\u5b9e\u73b0\u7269\u7406\u5b66\u4e0a\u7684\u53ef\u4fe1\u5ea6\uff0c\u5b83\u5fc5\u987b\u9075\u5b88\u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b\uff0c\u4e5f\u5c31\u662f\u8bf4\u53cd\u5c04\u5149\u7ebf\u7684\u603b\u548c\u6c38\u8fdc\u4e0d\u80fd\u8d85\u8fc7\u5165\u5c04\u5149\u7ebf\u7684\u603b\u91cf\u3002\u4e25\u683c\u4e0a\u6765\u8bf4\uff0c\u540c\u6837\u91c7\u7528 \\omega_i \u548c \\omega_o \u4f5c\u4e3a\u8f93\u5165\u53c2\u6570\u7684 Blinn-Phong\u5149\u7167\u6a21\u578b\u4e5f\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2aBRDF\u3002\u7136\u800c\u7531\u4e8eBlinn-Phong\u6a21\u578b\u5e76\u6ca1\u6709\u9075\u5faa\u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b\uff0c\u56e0\u6b64\u5b83\u4e0d\u88ab\u8ba4\u4e3a\u662f\u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3\u3002\u73b0\u5728\u5df2\u7ecf\u6709\u5f88\u597d\u51e0\u79cdBRDF\u90fd\u80fd\u8fd1\u4f3c\u7684\u5f97\u51fa\u7269\u4f53\u8868\u9762\u5bf9\u4e8e\u5149\u7684\u53cd\u5e94\uff0c\u4f46\u662f\u51e0\u4e4e\u6240\u6709\u5b9e\u65f6\u6e32\u67d3\u7ba1\u7ebf\u4f7f\u7528\u7684\u90fd\u662f\u4e00\u79cd\u88ab\u79f0\u4e3a Cook-Torrance BRDF \u6a21\u578b\u3002 Cook-Torrance BRDF\u517c\u6709\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u4e24\u4e2a\u90e8\u5206\uff1a f_r = k_d f_{lambert} + k_s f_{cook-torrance} \u8fd9\u91cc\u7684 k_d \u662f\u65e9\u5148\u63d0\u5230\u8fc7\u7684\u5165\u5c04\u5149\u7ebf\u4e2d \u88ab\u6298\u5c04 \u90e8\u5206\u7684\u80fd\u91cf\u6240\u5360\u7684\u6bd4\u7387\uff0c\u800c k_s \u662f \u88ab\u53cd\u5c04 \u90e8\u5206\u7684\u6bd4\u7387\u3002BRDF\u7684\u5de6\u4fa7\u8868\u793a\u7684\u662f\u6f2b\u53cd\u5c04\u90e8\u5206\uff0c\u8fd9\u91cc\u7528 f_{lambert} \u6765\u8868\u793a\u3002\u5b83\u88ab\u79f0\u4e3a Lambertian\u6f2b\u53cd\u5c04 \uff0c\u8fd9\u548c\u6211\u4eec\u4e4b\u524d\u5728\u6f2b\u53cd\u5c04\u7740\u8272\u4e2d\u4f7f\u7528\u7684\u5e38\u6570\u56e0\u5b50\u7c7b\u4f3c\uff0c\u7528\u5982\u4e0b\u7684\u516c\u5f0f\u6765\u8868\u793a\uff1a f_{lambert} = \\frac{c}{\\pi} c \u8868\u793a\u8868\u9762\u989c\u8272\uff08\u56de\u60f3\u4e00\u4e0b\u6f2b\u53cd\u5c04\u8868\u9762\u7eb9\u7406\uff09\u3002\u9664\u4ee5 \\pi \u662f\u4e3a\u4e86\u5bf9\u6f2b\u53cd\u5c04\u5149\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u56e0\u4e3a\u524d\u9762\u542b\u6709BRDF\u7684\u79ef\u5206\u65b9\u7a0b\u662f\u53d7 \\pi \u5f71\u54cd\u7684\uff08\u6211\u4eec\u4f1a\u5728 IBL \u7684\u6559\u7a0b\u4e2d\u63a2\u8ba8\u8fd9\u4e2a\u95ee\u9898\u7684\uff09\u3002 Important \u4f60\u4e5f\u8bb8\u4f1a\u611f\u5230\u597d\u5947\uff0c\u8fd9\u4e2aLambertian\u6f2b\u53cd\u5c04\u548c\u6211\u4eec\u4e4b\u524d\u7ecf\u5e38\u4f7f\u7528\u7684\u6f2b\u53cd\u5c04\u5230\u5e95\u6709\u4ec0\u4e48\u5173\u7cfb\uff1a\u4e4b\u524d\u6211\u4eec\u662f\u7528\u8868\u9762\u6cd5\u5411\u91cf\u4e0e\u5149\u7167\u65b9\u5411\u5411\u91cf\u8fdb\u884c\u70b9\u4e58\uff0c\u7136\u540e\u518d\u5c06\u7ed3\u679c\u4e0e\u5e73\u9762\u989c\u8272\u76f8\u4e58\u5f97\u5230\u6f2b\u53cd\u5c04\u53c2\u6570\u3002\u70b9\u4e58\u4f9d\u7136\u8fd8\u5728\uff0c\u4f46\u662f\u5374\u4e0d\u5728BRDF\u4e4b\u5185\uff0c\u800c\u662f\u8f6c\u53d8\u6210\u4e3a\u4e86 L_o \u79ef\u5206\u672b\u516c\u5f0f\u672b\u5c3e\u5904\u7684 n \\cdot \\omega_i \u3002 \u76ee\u524d\u5b58\u5728\u7740\u8bb8\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u6a21\u578b\u6765\u5b9e\u73b0BRDF\u7684\u6f2b\u53cd\u5c04\u90e8\u5206\uff0c\u5927\u591a\u770b\u4e0a\u53bb\u90fd\u76f8\u5f53\u771f\u5b9e\uff0c\u4f46\u662f\u76f8\u5e94\u7684\u8fd0\u7b97\u5f00\u9500\u4e5f\u975e\u5e38\u7684\u6602\u8d35\u3002\u4e0d\u8fc7\u6309\u7167Epic\u516c\u53f8\u7ed9\u51fa\u7684\u7ed3\u8bba\uff0cLambertian\u6f2b\u53cd\u5c04\u6a21\u578b\u5df2\u7ecf\u8db3\u591f\u5e94\u4ed8\u5927\u591a\u6570\u5b9e\u65f6\u6e32\u67d3\u7684\u7528\u9014\u4e86\u3002 BRDF\u7684\u955c\u9762\u53cd\u5c04\u90e8\u5206\u8981\u7a0d\u5fae\u66f4\u9ad8\u7ea7\u4e00\u4e9b\uff0c\u5b83\u7684\u5f62\u5f0f\u5982\u4e0b\u6240\u793a\uff1a f_{cook-torrance} = \\frac{DFG}{4(\\omega_o \\cdot n)(\\omega_i \\cdot n)} Cook-Torrance BRDF\u7684\u955c\u9762\u53cd\u5c04\u90e8\u5206\u5305\u542b\u4e09\u4e2a\u51fd\u6570\uff0c\u6b64\u5916\u5206\u6bcd\u90e8\u5206\u8fd8\u6709\u4e00\u4e2a\u6807\u51c6\u5316\u56e0\u5b50 \u3002\u5b57\u6bcdD\uff0cF\u4e0eG\u5206\u522b\u4ee3\u8868\u7740\u4e00\u79cd\u7c7b\u578b\u7684\u51fd\u6570\uff0c\u5404\u4e2a\u51fd\u6570\u5206\u522b\u7528\u6765\u8fd1\u4f3c\u7684\u8ba1\u7b97\u51fa\u8868\u9762\u53cd\u5c04\u7279\u6027\u7684\u4e00\u4e2a\u7279\u5b9a\u90e8\u5206\u3002\u4e09\u4e2a\u51fd\u6570\u5206\u522b\u4e3a\u6cd5\u7ebf\u5206\u5e03\u51fd\u6570(Normal D istribution Function)\uff0c\u83f2\u6d85\u5c14\u65b9\u7a0b( F resnel Rquation)\u548c\u51e0\u4f55\u51fd\u6570( G eometry Function)\uff1a \u6cd5\u7ebf\u5206\u5e03\u51fd\u6570 \uff1a\u4f30\u7b97\u5728\u53d7\u5230\u8868\u9762\u7c97\u7cd9\u5ea6\u7684\u5f71\u54cd\u4e0b\uff0c\u671d\u5411\u65b9\u5411\u4e0e\u534a\u7a0b\u5411\u91cf\u4e00\u81f4\u7684\u5fae\u5e73\u9762\u7684\u6570\u91cf\u3002\u8fd9\u662f\u7528\u6765\u4f30\u7b97\u5fae\u5e73\u9762\u7684\u4e3b\u8981\u51fd\u6570\u3002 \u51e0\u4f55\u51fd\u6570 \uff1a\u63cf\u8ff0\u4e86\u5fae\u5e73\u9762\u81ea\u6210\u9634\u5f71\u7684\u5c5e\u6027\u3002\u5f53\u4e00\u4e2a\u5e73\u9762\u76f8\u5bf9\u6bd4\u8f83\u7c97\u7cd9\u7684\u65f6\u5019\uff0c\u5e73\u9762\u8868\u9762\u4e0a\u7684\u5fae\u5e73\u9762\u6709\u53ef\u80fd\u6321\u4f4f\u5176\u4ed6\u7684\u5fae\u5e73\u9762\u4ece\u800c\u51cf\u5c11\u8868\u9762\u6240\u53cd\u5c04\u7684\u5149\u7ebf\u3002 \u83f2\u6d85\u5c14\u65b9\u7a0b \uff1a\u83f2\u6d85\u5c14\u65b9\u7a0b\u63cf\u8ff0\u7684\u662f\u5728\u4e0d\u540c\u7684\u8868\u9762\u89d2\u4e0b\u8868\u9762\u6240\u53cd\u5c04\u7684\u5149\u7ebf\u6240\u5360\u7684\u6bd4\u7387\u3002 \u4ee5\u4e0a\u7684\u6bcf\u4e00\u79cd\u51fd\u6570\u90fd\u662f\u7528\u6765\u4f30\u7b97\u76f8\u5e94\u7684\u7269\u7406\u53c2\u6570\u7684\uff0c\u800c\u4e14\u4f60\u4f1a\u53d1\u73b0\u7528\u6765\u5b9e\u73b0\u76f8\u5e94\u7269\u7406\u673a\u5236\u7684\u6bcf\u79cd\u51fd\u6570\u90fd\u6709\u4e0d\u6b62\u4e00\u79cd\u5f62\u5f0f\u3002\u5b83\u4eec\u6709\u7684\u975e\u5e38\u771f\u5b9e\uff0c\u6709\u7684\u5219\u6027\u80fd\u9ad8\u6548\u3002\u4f60\u53ef\u4ee5\u6309\u7167\u81ea\u5df1\u7684\u9700\u6c42\u4efb\u610f\u9009\u62e9\u81ea\u5df1\u60f3\u8981\u7684\u51fd\u6570\u7684\u5b9e\u73b0\u65b9\u6cd5\u3002\u82f1\u4f69\u6e38\u620f\u516c\u53f8\u7684Brian Karis\u5bf9\u4e8e\u8fd9\u4e9b\u51fd\u6570\u7684\u591a\u79cd\u8fd1\u4f3c\u5b9e\u73b0\u65b9\u5f0f\u8fdb\u884c\u4e86\u5927\u91cf\u7684 \u7814\u7a76 \u3002\u6211\u4eec\u5c06\u4f1a\u91c7\u7528Epic Games\u5728Unreal Engine 4\u4e2d\u6240\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u5176\u4e2dD\u4f7f\u7528Trowbridge-Reitz GGX\uff0cF\u4f7f\u7528Fresnel-Schlick\u8fd1\u4f3c(Fresnel-Schlick Approximation)\uff0c\u800cG\u4f7f\u7528Smith\u2019s Schlick-GGX\u3002 \u6cd5\u7ebf\u5206\u5e03\u51fd\u6570 \u6cd5\u7ebf\u5206\u5e03\u51fd\u6570 D \uff0c\u4ece\u7edf\u8ba1\u5b66\u4e0a\u8fd1\u4f3c\u5730\u8868\u793a\u4e86\u4e0e\u67d0\u4e9b\uff08\u534a\u7a0b\uff09\u5411\u91cf h \u53d6\u5411\u4e00\u81f4\u7684\u5fae\u5e73\u9762\u7684\u6bd4\u7387\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5047\u8bbe\u7ed9\u5b9a\u5411\u91cf h \uff0c\u5982\u679c\u6211\u4eec\u7684\u5fae\u5e73\u9762\u4e2d\u670935%\u4e0e\u5411\u91cf h \u53d6\u5411\u4e00\u81f4\uff0c\u5219\u6cd5\u7ebf\u5206\u5e03\u51fd\u6570\u6216\u8005\u8bf4NDF\u5c06\u4f1a\u8fd4\u56de0.35\u3002\u76ee\u524d\u6709\u5f88\u591a\u79cdNDF\u90fd\u53ef\u4ee5\u4ece\u7edf\u8ba1\u5b66\u4e0a\u6765\u4f30\u7b97\u5fae\u5e73\u9762\u7684\u603b\u4f53\u53d6\u5411\u5ea6\uff0c\u53ea\u8981\u7ed9\u5b9a\u4e00\u4e9b\u7c97\u7cd9\u5ea6\u7684\u53c2\u6570\u3002\u6211\u4eec\u9a6c\u4e0a\u5c06\u8981\u7528\u5230\u7684\u662fTrowbridge-Reitz GGX\uff1a NDF_{GGX TR}(n, h, \\alpha) = \\frac{\\alpha^2}{\\pi((n \\cdot h)^2 (\\alpha^2 - 1) + 1)^2} \u5728\u8fd9\u91cc h \u8868\u793a\u7528\u6765\u4e0e\u5e73\u9762\u4e0a\u5fae\u5e73\u9762\u505a\u6bd4\u8f83\u7528\u7684\u534a\u7a0b\u5411\u91cf\uff0c\u800c a \u8868\u793a\u8868\u9762\u7c97\u7cd9\u5ea6\u3002 \u5982\u679c\u6211\u4eec\u628a h \u5f53\u6210\u662f\u4e0d\u540c\u7c97\u7cd9\u5ea6\u53c2\u6570\u4e0b\uff0c\u5e73\u9762\u6cd5\u5411\u91cf\u548c\u5149\u7ebf\u65b9\u5411\u5411\u91cf\u4e4b\u95f4\u7684\u4e2d\u95f4\u5411\u91cf\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u56fe\u793a\u7684\u6548\u679c\uff1a \u5f53\u7c97\u7cd9\u5ea6\u5f88\u4f4e\uff08\u4e5f\u5c31\u662f\u8bf4\u8868\u9762\u5f88\u5149\u6ed1\uff09\u7684\u65f6\u5019\uff0c\u4e0e\u534a\u7a0b\u5411\u91cf\u53d6\u5411\u4e00\u81f4\u7684\u5fae\u5e73\u9762\u4f1a\u9ad8\u5ea6\u96c6\u4e2d\u5728\u4e00\u4e2a\u5f88\u5c0f\u7684\u534a\u5f84\u8303\u56f4\u5185\u3002\u7531\u4e8e\u8fd9\u79cd\u96c6\u4e2d\u6027\uff0cNDF\u6700\u7ec8\u4f1a\u751f\u6210\u4e00\u4e2a\u975e\u5e38\u660e\u4eae\u7684\u6591\u70b9\u3002\u4f46\u662f\u5f53\u8868\u9762\u6bd4\u8f83\u7c97\u7cd9\u7684\u65f6\u5019\uff0c\u5fae\u5e73\u9762\u7684\u53d6\u5411\u65b9\u5411\u4f1a\u66f4\u52a0\u7684\u968f\u673a\u3002\u4f60\u5c06\u4f1a\u53d1\u73b0\u4e0e h \u5411\u91cf\u53d6\u5411\u4e00\u81f4\u7684\u5fae\u5e73\u9762\u5206\u5e03\u5728\u4e00\u4e2a\u5927\u5f97\u591a\u7684\u534a\u5f84\u8303\u56f4\u5185\uff0c\u4f46\u662f\u540c\u65f6\u8f83\u4f4e\u7684\u96c6\u4e2d\u6027\u4e5f\u4f1a\u8ba9\u6211\u4eec\u7684\u6700\u7ec8\u6548\u679c\u663e\u5f97\u66f4\u52a0\u7070\u6697\u3002 \u4f7f\u7528GLSL\u4ee3\u7801\u7f16\u5199\u7684Trowbridge-Reitz GGX\u6cd5\u7ebf\u5206\u5e03\u51fd\u6570\u662f\u4e0b\u9762\u8fd9\u4e2a\u6837\u5b50\u7684\uff1a float D_GGX_TR(vec3 N, vec3 H, float a) { float a2 = a*a; float NdotH = max(dot(N, H), 0.0); float NdotH2 = NdotH*NdotH; float nom = a2; float denom = (NdotH2 * (a2 - 1.0) + 1.0); denom = PI * denom * denom; return nom / denom; } \u51e0\u4f55\u51fd\u6570 \u51e0\u4f55\u51fd\u6570\u4ece\u7edf\u8ba1\u5b66\u4e0a\u8fd1\u4f3c\u7684\u6c42\u5f97\u4e86\u5fae\u5e73\u9762\u95f4\u76f8\u4e92\u906e\u853d\u7684\u6bd4\u7387\uff0c\u8fd9\u79cd\u76f8\u4e92\u906e\u853d\u4f1a\u635f\u8017\u5149\u7ebf\u7684\u80fd\u91cf\u3002 \u4e0eNDF\u7c7b\u4f3c\uff0c\u51e0\u4f55\u51fd\u6570\u91c7\u7528\u4e00\u4e2a\u6750\u6599\u7684\u7c97\u7cd9\u5ea6\u53c2\u6570\u4f5c\u4e3a\u8f93\u5165\u53c2\u6570\uff0c\u7c97\u7cd9\u5ea6\u8f83\u9ad8\u7684\u8868\u9762\u5176\u5fae\u5e73\u9762\u95f4\u76f8\u4e92\u906e\u853d\u7684\u6982\u7387\u5c31\u8d8a\u9ad8\u3002\u6211\u4eec\u5c06\u8981\u4f7f\u7528\u7684\u51e0\u4f55\u51fd\u6570\u662fGGX\u4e0eSchlick-Beckmann\u8fd1\u4f3c\u7684\u7ed3\u5408\u4f53\uff0c\u56e0\u6b64\u53c8\u79f0\u4e3aSchlick-GGX\uff1a G_{SchlickGGX}(n, v, k) = \\frac{n \\cdot v}{(n \\cdot v)(1 - k) + k } \u8fd9\u91cc\u7684 k \u662f \\alpha \u7684\u91cd\u6620\u5c04(Remapping)\uff0c\u53d6\u51b3\u4e8e\u6211\u4eec\u8981\u7528\u7684\u662f\u9488\u5bf9\u76f4\u63a5\u5149\u7167\u8fd8\u662f\u9488\u5bf9IBL\u5149\u7167\u7684\u51e0\u4f55\u51fd\u6570: k_{direct} = \\frac{(\\alpha + 1)^2}{8} k_{IBL} = \\frac{\\alpha^2}{2} \u6ce8\u610f\uff0c\u6839\u636e\u4f60\u7684\u5f15\u64ce\u628a\u7c97\u7cd9\u5ea6\u8f6c\u5316\u4e3a \\alpha \u7684\u65b9\u5f0f\u4e0d\u540c\uff0c\u5f97\u5230 \\alpha \u7684\u503c\u4e5f\u6709\u53ef\u80fd\u4e0d\u540c\u3002\u5728\u63a5\u4e0b\u6765\u7684\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u5e7f\u6cdb\u7684\u8ba8\u8bba\u8fd9\u4e2a\u91cd\u6620\u5c04\u662f\u5982\u4f55\u8d77\u4f5c\u7528\u7684\u3002 \u4e3a\u4e86\u6709\u6548\u7684\u4f30\u7b97\u51e0\u4f55\u90e8\u5206\uff0c\u9700\u8981\u5c06\u89c2\u5bdf\u65b9\u5411\uff08\u51e0\u4f55\u906e\u853d(Geometry Obstruction)\uff09\u548c\u5149\u7ebf\u65b9\u5411\u5411\u91cf\uff08\u51e0\u4f55\u9634\u5f71(Geometry Shadowing)\uff09\u90fd\u8003\u8651\u8fdb\u53bb\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u53f2\u5bc6\u65af\u6cd5 (Smith\u2019s method)\u6765\u628a\u4e24\u8005\u90fd\u7eb3\u5165\u5176\u4e2d\uff1a G(n, v, l, k) = G_{sub}(n, v, k) G_{sub}(n, l, k) \u4f7f\u7528\u53f2\u5bc6\u65af\u6cd5\u4e0eSchlick-GGX\u4f5c\u4e3a G_{sub} \u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u6240\u793a\u4e0d\u540c\u7c97\u7cd9\u5ea6\u7684\u89c6\u89c9\u6548\u679c\uff1a \u51e0\u4f55\u51fd\u6570\u662f\u4e00\u4e2a\u503c\u57df\u4e3a[0.0, 1.0]\u7684\u4e58\u6570\uff0c\u5176\u4e2d\u767d\u8272\u6216\u8005\u8bf41.0\u8868\u793a\u6ca1\u6709\u5fae\u5e73\u9762\u9634\u5f71\uff0c\u800c\u9ed1\u8272\u6216\u8005\u8bf40.0\u5219\u8868\u793a\u5fae\u5e73\u9762\u5f7b\u5e95\u88ab\u906e\u853d\u3002 \u4f7f\u7528GLSL\u7f16\u5199\u7684\u51e0\u4f55\u51fd\u6570\u4ee3\u7801\u5982\u4e0b\uff1a float GeometrySchlickGGX(float NdotV, float k) { float nom = NdotV; float denom = NdotV * (1.0 - k) + k; return nom / denom; } float GeometrySmith(vec3 N, vec3 V, vec3 L, float k) { float NdotV = max(dot(N, V), 0.0); float NdotL = max(dot(N, L), 0.0); float ggx1 = GeometrySchlickGGX(NdotV, k); float ggx2 = GeometrySchlickGGX(NdotL, k); return ggx1 * ggx2; } \u83f2\u6d85\u5c14\u65b9\u7a0b \u83f2\u6d85\u5c14\uff08\u53d1\u97f3\u4e3aFreh-nel\uff09\u65b9\u7a0b\u63cf\u8ff0\u7684\u662f\u88ab\u53cd\u5c04\u7684\u5149\u7ebf\u5bf9\u6bd4\u5149\u7ebf\u88ab\u6298\u5c04\u7684\u90e8\u5206\u6240\u5360\u7684\u6bd4\u7387\uff0c\u8fd9\u4e2a\u6bd4\u7387\u4f1a\u968f\u7740\u6211\u4eec\u89c2\u5bdf\u7684\u89d2\u5ea6\u4e0d\u540c\u800c\u4e0d\u540c\u3002\u5f53\u5149\u7ebf\u78b0\u649e\u5230\u4e00\u4e2a\u8868\u9762\u7684\u65f6\u5019\uff0c\u83f2\u6d85\u5c14\u65b9\u7a0b\u4f1a\u6839\u636e\u89c2\u5bdf\u89d2\u5ea6\u544a\u8bc9\u6211\u4eec\u88ab\u53cd\u5c04\u7684\u5149\u7ebf\u6240\u5360\u7684\u767e\u5206\u6bd4\u3002\u5229\u7528\u8fd9\u4e2a\u53cd\u5c04\u6bd4\u7387\u548c\u80fd\u91cf\u5b88\u6052\u539f\u5219\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5f97\u51fa\u5149\u7ebf\u88ab\u6298\u5c04\u7684\u90e8\u5206\u4ee5\u53ca\u5149\u7ebf\u5269\u4f59\u7684\u80fd\u91cf\u3002 \u5f53\u5782\u76f4\u89c2\u5bdf\u7684\u65f6\u5019\uff0c\u4efb\u4f55\u7269\u4f53\u6216\u8005\u6750\u8d28\u8868\u9762\u90fd\u6709\u4e00\u4e2a \u57fa\u7840\u53cd\u5c04\u7387 (Base Reflectivity)\uff0c\u4f46\u662f\u5982\u679c\u4ee5\u4e00\u5b9a\u7684\u89d2\u5ea6\u5f80\u5e73\u9762\u4e0a\u770b\u7684\u65f6\u5019 \u6240\u6709 \u53cd\u5149\u90fd\u4f1a\u53d8\u5f97\u660e\u663e\u8d77\u6765\u3002\u4f60\u53ef\u4ee5\u81ea\u5df1\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u7528\u5782\u76f4\u7684\u89c6\u89d2\u89c2\u5bdf\u4f60\u81ea\u5df1\u7684\u6728\u5236/\u91d1\u5c5e\u684c\u9762\uff0c\u6b64\u65f6\u4e00\u5b9a\u53ea\u6709\u6700\u57fa\u672c\u7684\u53cd\u5c04\u6027\u3002\u4f46\u662f\u5982\u679c\u4f60\u4ece\u8fd1\u4e4e90\u5ea6\uff08\u8bd1\u6ce8\uff1a\u5e94\u8be5\u662f\u6307\u548c\u6cd5\u7ebf\u7684\u5939\u89d2\uff09\u7684\u89d2\u5ea6\u89c2\u5bdf\u7684\u8bdd\u53cd\u5149\u5c31\u4f1a\u53d8\u5f97\u660e\u663e\u7684\u591a\u3002\u5982\u679c\u4ece\u7406\u60f3\u768490\u5ea6\u89c6\u89d2\u89c2\u5bdf\uff0c\u6240\u6709\u7684\u5e73\u9762\u7406\u8bba\u4e0a\u6765\u8bf4\u90fd\u80fd\u5b8c\u5168\u7684\u53cd\u5c04\u5149\u7ebf\u3002\u8fd9\u79cd\u73b0\u8c61\u56e0 \u83f2\u6d85\u5c14 \u800c\u95fb\u540d\uff0c\u5e76\u4f53\u73b0\u5728\u4e86\u83f2\u6d85\u5c14\u65b9\u7a0b\u4e4b\u4e2d\u3002 \u83f2\u6d85\u5c14\u65b9\u7a0b\u662f\u4e00\u4e2a\u76f8\u5f53\u590d\u6742\u7684\u65b9\u7a0b\u5f0f\uff0c\u4e0d\u8fc7\u5e78\u8fd0\u7684\u662f\u83f2\u6d85\u5c14\u65b9\u7a0b\u53ef\u4ee5\u7528 Fresnel-Schlick \u8fd1\u4f3c\u6cd5\u6c42\u5f97\u8fd1\u4f3c\u89e3\uff1a F_{Schlick}(h, v, F_0) = F_0 + (1 - F_0) ( 1 - (h \\cdot v))^5 F_0 \u8868\u793a\u5e73\u9762\u7684\u57fa\u7840\u53cd\u5c04\u7387\uff0c\u5b83\u662f\u5229\u7528\u6240\u8c13 \u6298\u5c04\u6307\u6570 (Indices of Refraction)\u6216\u8005\u8bf4IOR\u8ba1\u7b97\u5f97\u51fa\u7684\u3002\u7136\u540e\u6b63\u5982\u4f60\u53ef\u4ee5\u4ece\u7403\u4f53\u8868\u9762\u770b\u5230\u7684\u90a3\u6837\uff0c\u6211\u4eec\u8d8a\u662f\u671d\u7403\u9762\u63a0\u89d2\u7684\u65b9\u5411\u4e0a\u770b\uff08\u6b64\u65f6\u89c6\u7ebf\u548c\u8868\u9762\u6cd5\u7ebf\u7684\u5939\u89d2\u63a5\u8fd190\u5ea6\uff09\u83f2\u6d85\u5c14\u73b0\u8c61\u5c31\u8d8a\u660e\u663e\uff0c\u53cd\u5149\u5c31\u8d8a\u5f3a\uff1a \u83f2\u6d85\u5c14\u65b9\u7a0b\u8fd8\u5b58\u5728\u4e00\u4e9b\u7ec6\u5fae\u7684\u95ee\u9898\u3002\u5176\u4e2d\u4e00\u4e2a\u95ee\u9898\u662fFresnel-Schlick\u8fd1\u4f3c\u4ec5\u4ec5\u5bf9 \u7535\u4ecb\u8d28 \u6216\u8005\u8bf4\u975e\u91d1\u5c5e\u8868\u9762\u6709\u5b9a\u4e49\u3002\u5bf9\u4e8e \u5bfc\u4f53 (Conductor)\u8868\u9762\uff08\u91d1\u5c5e\uff09\uff0c\u4f7f\u7528\u5b83\u4eec\u7684\u6298\u5c04\u6307\u6570\u8ba1\u7b97\u57fa\u7840\u6298\u5c04\u7387\u5e76\u4e0d\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u4e00\u79cd\u4e0d\u540c\u7684\u83f2\u6d85\u5c14\u65b9\u7a0b\u6765\u5bf9\u5bfc\u4f53\u8868\u9762\u8fdb\u884c\u8ba1\u7b97\u3002\u7531\u4e8e\u8fd9\u6837\u5f88\u4e0d\u65b9\u4fbf\uff0c\u6240\u4ee5\u6211\u4eec\u9884\u8ba1\u7b97\u51fa\u5e73\u9762\u5bf9\u4e8e \u6cd5\u5411\u5165\u5c04 \u7684\u7ed3\u679c\uff08 F_0 \uff0c\u5904\u4e8e0\u5ea6\u89d2\uff0c\u597d\u50cf\u76f4\u63a5\u770b\u5411\u8868\u9762\u4e00\u6837\uff09\uff0c\u7136\u540e\u57fa\u4e8e\u76f8\u5e94\u89c2\u5bdf\u89d2\u7684Fresnel-Schlick\u8fd1\u4f3c\u5bf9\u8fd9\u4e2a\u503c\u8fdb\u884c\u63d2\u503c\uff0c\u7528\u8fd9\u79cd\u65b9\u6cd5\u6765\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u4f30\u7b97\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u5bf9\u91d1\u5c5e\u548c\u975e\u91d1\u5c5e\u6750\u8d28\u4f7f\u7528\u540c\u4e00\u4e2a\u516c\u5f0f\u4e86\u3002 \u5e73\u9762\u5bf9\u4e8e\u6cd5\u5411\u5165\u5c04\u7684\u54cd\u5e94\u6216\u8005\u8bf4\u57fa\u7840\u53cd\u5c04\u7387\u53ef\u4ee5\u5728\u4e00\u4e9b\u5927\u578b\u6570\u636e\u5e93\u4e2d\u627e\u5230\uff0c\u6bd4\u5982 \u8fd9\u4e2a \u3002\u4e0b\u9762\u5217\u4e3e\u7684\u8fd9\u4e00\u4e9b\u5e38\u89c1\u6570\u503c\u5c31\u662f\u4eceNaty Hoffman\u7684\u8bfe\u7a0b\u8bb2\u4e49\u4e2d\u6240\u5f97\u5230\u7684\uff1a \u6750\u6599 \\(F_0\\) (\u7ebf\u6027) \\(F_0\\) (sRGB) \u989c\u8272 \u6c34 (0.02, 0.02, 0.02) (0.15, 0.15, 0.15) \u5851\u6599/\u73bb\u7483\uff08\u4f4e\uff09 (0.03, 0.03, 0.03) (0.21, 0.21, 0.21) \u5851\u6599\uff08\u9ad8\uff09 (0.05, 0.05, 0.05) (0.24, 0.24, 0.24) \u73bb\u7483\uff08\u9ad8\uff09/\u7ea2\u5b9d\u77f3 (0.08, 0.08, 0.08) (0.31, 0.31, 0.31) \u94bb\u77f3 (0.17, 0.17, 0.17) (0.45, 0.45, 0.45) \u94c1 (0.56, 0.57, 0.58) (0.77, 0.78, 0.78) \u94dc (0.95, 0.64, 0.54) (0.98, 0.82, 0.76) \u91d1 (1.00, 0.71, 0.29) (1.00, 0.86, 0.57) \u94dd (0.91, 0.92, 0.92) (0.96, 0.96, 0.97) \u94f6 (0.95, 0.93, 0.88) (0.98, 0.97, 0.95) \u8fd9\u91cc\u53ef\u4ee5\u89c2\u5bdf\u5230\u7684\u4e00\u4e2a\u6709\u8da3\u7684\u73b0\u8c61\uff0c\u6240\u6709\u7535\u4ecb\u8d28\u6750\u8d28\u8868\u9762\u7684\u57fa\u7840\u53cd\u5c04\u7387\u90fd\u4e0d\u4f1a\u9ad8\u4e8e0.17\uff0c\u8fd9\u5176\u5b9e\u662f\u4f8b\u5916\u800c\u975e\u666e\u904d\u60c5\u51b5\u3002\u5bfc\u4f53\u6750\u8d28\u8868\u9762\u7684\u57fa\u7840\u53cd\u5c04\u7387\u8d77\u70b9\u66f4\u9ad8\u4e00\u4e9b\u5e76\u4e14\uff08\u5927\u591a\uff09\u57280.5\u548c1.0\u4e4b\u95f4\u53d8\u5316\u3002\u6b64\u5916\uff0c\u5bf9\u4e8e\u5bfc\u4f53\u6216\u8005\u91d1\u5c5e\u8868\u9762\u800c\u8a00\u57fa\u7840\u53cd\u5c04\u7387\u4e00\u822c\u662f\u5e26\u6709\u8272\u5f69\u7684\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48 F_0 \u8981\u7528RGB\u4e09\u539f\u8272\u6765\u8868\u793a\u7684\u539f\u56e0\uff08\u6cd5\u5411\u5165\u5c04\u7684\u53cd\u5c04\u7387\u53ef\u968f\u6ce2\u957f\u4e0d\u540c\u800c\u4e0d\u540c\uff09\u3002\u8fd9\u79cd\u73b0\u8c61\u6211\u4eec \u53ea\u80fd \u5728\u91d1\u5c5e\u8868\u9762\u89c2\u5bdf\u7684\u5230\u3002 \u8fd9\u4e9b\u91d1\u5c5e\u8868\u9762\u76f8\u6bd4\u4e8e\u7535\u4ecb\u8d28\u8868\u9762\u6240\u72ec\u6709\u7684\u7279\u6027\u5f15\u51fa\u4e86\u6240\u8c13\u7684 \u91d1\u5c5e\u5de5\u4f5c\u6d41 \u7684\u6982\u5ff5\u3002\u4e5f\u5c31\u662f\u6211\u4eec\u9700\u8981\u989d\u5916\u4f7f\u7528\u4e00\u4e2a\u88ab\u79f0\u4e3a \u91d1\u5c5e\u5ea6 (Metalness)\u7684\u53c2\u6570\u6765\u53c2\u4e0e\u7f16\u5199\u8868\u9762\u6750\u8d28\u3002\u91d1\u5c5e\u5ea6\u7528\u6765\u63cf\u8ff0\u4e00\u4e2a\u6750\u8d28\u8868\u9762\u662f\u91d1\u5c5e\u8fd8\u662f\u975e\u91d1\u5c5e\u7684\u3002 Important \u7406\u8bba\u4e0a\u6765\u8bf4\uff0c\u4e00\u4e2a\u8868\u9762\u7684\u91d1\u5c5e\u5ea6\u5e94\u8be5\u662f\u4e8c\u5143\u7684\uff1a\u8981\u4e48\u662f\u91d1\u5c5e\u8981\u4e48\u4e0d\u662f\u91d1\u5c5e\uff0c\u4e0d\u80fd\u4e24\u8005\u7686\u662f\u3002\u4f46\u662f\uff0c\u5927\u591a\u6570\u7684\u6e32\u67d3\u7ba1\u7ebf\u90fd\u5141\u8bb8\u57280.0\u81f31.0\u4e4b\u95f4\u7ebf\u6027\u7684\u8c03\u914d\u91d1\u5c5e\u5ea6\u3002\u8fd9\u4e3b\u8981\u662f\u7531\u4e8e\u6750\u8d28\u7eb9\u7406\u7cbe\u5ea6\u4e0d\u8db3\u4ee5\u63cf\u8ff0\u4e00\u4e2a\u62e5\u6709\u8bf8\u5982\u7ec6\u6c99/\u6c99\u72b6\u7c92\u5b50/\u522e\u75d5\u7684\u91d1\u5c5e\u8868\u9762\u3002\u901a\u8fc7\u5bf9\u8fd9\u4e9b\u5c0f\u7684\u7c7b\u975e\u91d1\u5c5e\u7c92\u5b50/\u522e\u75d5\u8c03\u6574\u91d1\u5c5e\u5ea6\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u975e\u5e38\u597d\u770b\u7684\u89c6\u89c9\u6548\u679c\u3002 \u901a\u8fc7\u9884\u5148\u8ba1\u7b97\u7535\u4ecb\u8d28\u4e0e\u5bfc\u4f53\u7684 F_0 \u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e24\u79cd\u7c7b\u578b\u7684\u8868\u9762\u4f7f\u7528\u76f8\u540c\u7684Fresnel-Schlick\u8fd1\u4f3c\uff0c\u4f46\u662f\u5982\u679c\u662f\u91d1\u5c5e\u8868\u9762\u7684\u8bdd\u5c31\u9700\u8981\u5bf9\u57fa\u7840\u53cd\u5c04\u7387\u6dfb\u52a0\u8272\u5f69\u3002\u6211\u4eec\u4e00\u822c\u662f\u6309\u4e0b\u9762\u8fd9\u6837\u6765\u5b9e\u73b0\u7684\uff1a vec3 F0 = vec3(0.04); F0 = mix(F0, surfaceColor.rgb, metalness); \u6211\u4eec\u4e3a\u5927\u591a\u6570\u7535\u4ecb\u8d28\u8868\u9762\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8fd1\u4f3c\u7684\u57fa\u7840\u53cd\u5c04\u7387\u3002 F_0 \u53d6\u6700\u5e38\u89c1\u7684\u7535\u89e3\u8d28\u8868\u9762\u7684\u5e73\u5747\u503c\uff0c\u8fd9\u53c8\u662f\u4e00\u4e2a\u8fd1\u4f3c\u503c\u3002\u4e0d\u8fc7\u5bf9\u4e8e\u5927\u591a\u6570\u7535\u4ecb\u8d28\u8868\u9762\u800c\u8a00\u4f7f\u75280.04\u4f5c\u4e3a\u57fa\u7840\u53cd\u5c04\u7387\u5df2\u7ecf\u8db3\u591f\u597d\u4e86\uff0c\u800c\u4e14\u53ef\u4ee5\u5728\u4e0d\u9700\u8981\u8f93\u5165\u989d\u5916\u8868\u9762\u53c2\u6570\u7684\u60c5\u51b5\u4e0b\u5f97\u5230\u7269\u7406\u53ef\u4fe1\u7684\u7ed3\u679c\u3002\u7136\u540e\uff0c\u57fa\u4e8e\u91d1\u5c5e\u8868\u9762\u7279\u6027\uff0c\u6211\u4eec\u8981\u4e48\u4f7f\u7528\u7535\u4ecb\u8d28\u7684\u57fa\u7840\u53cd\u5c04\u7387\u8981\u4e48\u5c31\u4f7f\u7528 F_0 \u6765\u4f5c\u4e3a\u8868\u9762\u989c\u8272\u3002\u56e0\u4e3a\u91d1\u5c5e\u8868\u9762\u4f1a\u5438\u6536\u6240\u6709\u6298\u5c04\u5149\u7ebf\u800c\u6ca1\u6709\u6f2b\u53cd\u5c04\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8868\u9762\u989c\u8272\u7eb9\u7406\u6765\u4f5c\u4e3a\u5b83\u4eec\u7684\u57fa\u7840\u53cd\u5c04\u7387\u3002 Fresnel Schlick\u8fd1\u4f3c\u53ef\u4ee5\u7528\u4ee3\u7801\u8868\u793a\u4e3a\uff1a vec3 fresnelSchlick(float cosTheta, vec3 F0) { return F0 + (1.0 - F0) * pow(1.0 - cosTheta, 5.0); } \u5176\u4e2d cosTheta \u662f\u8868\u9762\u6cd5\u5411\u91cf n \u4e0e\u89c2\u5bdf\u65b9\u5411 v \u7684\u70b9\u4e58\u7684\u7ed3\u679c\u3002 Cook-Torrance\u53cd\u5c04\u7387\u65b9\u7a0b \u968f\u7740Cook-Torrance BRDF\u4e2d\u6240\u6709\u5143\u7d20\u90fd\u4ecb\u7ecd\u5b8c\u6bd5\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5c06\u57fa\u4e8e\u7269\u7406\u7684BRDF\u7eb3\u5165\u5230\u6700\u7ec8\u7684\u53cd\u5c04\u7387\u65b9\u7a0b\u5f53\u4e2d\u53bb\u4e86\uff1a L_o(p,\\omega_o) = \\int\\limits_{\\Omega} (k_d\\frac{c}{\\pi} + k_s\\frac{DFG}{4(\\omega_o \\cdot n)(\\omega_i \\cdot n)})L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \u8fd9\u4e2a\u65b9\u7a0b\u73b0\u5728\u5b8c\u6574\u7684\u63cf\u8ff0\u4e86\u4e00\u4e2a\u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3\u6a21\u578b\uff0c\u5b83\u73b0\u5728\u53ef\u4ee5\u8ba4\u4e3a\u5c31\u662f\u6211\u4eec\u4e00\u822c\u610f\u4e49\u4e0a\u7406\u89e3\u7684\u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3\u4e5f\u5c31\u662fPBR\u3002\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u80fd\u5b8c\u5168\u7406\u89e3\u6211\u4eec\u5c06\u5982\u4f55\u628a\u6240\u6709\u8fd9\u4e9b\u6570\u5b66\u8fd0\u7b97\u7ed3\u5408\u5230\u4e00\u8d77\u5e76\u878d\u5165\u5230\u4ee3\u7801\u5f53\u4e2d\u53bb\u7684\u8bdd\u4e5f\u4e0d\u5fc5\u62c5\u5fc3\u3002\u5728\u4e0b\u4e00\u4e2a\u6559\u7a0b\u5f53\u4e2d\uff0c\u6211\u4eec\u5c06\u63a2\u7d22\u5982\u4f55\u5b9e\u73b0\u53cd\u5c04\u7387\u65b9\u7a0b\u6765\u5728\u6211\u4eec\u6e32\u67d3\u7684\u5149\u7167\u5f53\u4e2d\u83b7\u5f97\u66f4\u52a0\u7269\u7406\u53ef\u4fe1\u7684\u7ed3\u679c\uff0c\u800c\u6240\u6709\u8fd9\u4e9b\u96f6\u96f6\u661f\u661f\u7684\u788e\u7247\u5c06\u4f1a\u6162\u6162\u7ec4\u5408\u5230\u4e00\u8d77\u6765\u3002 \u7f16\u5199PBR\u6750\u8d28 \u5728\u4e86\u89e3\u4e86PBR\u540e\u9762\u7684\u6570\u5b66\u6a21\u578b\u4e4b\u540e\uff0c\u6700\u540e\u6211\u4eec\u5c06\u901a\u8fc7\u8bf4\u660e\u7f8e\u672f\u5e08\u4e00\u822c\u662f\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8f93\u5165PBR\u7684\u5e73\u9762\u7269\u7406\u5c5e\u6027\u7684\u6765\u7ed3\u675f\u8fd9\u90e8\u5206\u7684\u8ba8\u8bba\u3002PBR\u6e32\u67d3\u7ba1\u7ebf\u6240\u9700\u8981\u7684\u6bcf\u4e00\u4e2a\u8868\u9762\u53c2\u6570\u90fd\u53ef\u4ee5\u7528\u7eb9\u7406\u6765\u5b9a\u4e49\u6216\u8005\u5efa\u6a21\u3002\u4f7f\u7528\u7eb9\u7406\u53ef\u4ee5\u8ba9\u6211\u4eec\u9010\u4e2a\u7247\u6bb5\u7684\u6765\u63a7\u5236\u6bcf\u4e2a\u8868\u9762\u4e0a\u7279\u5b9a\u7684\u70b9\u5bf9\u4e8e\u5149\u7ebf\u662f\u5982\u4f55\u54cd\u5e94\u7684\uff1a\u4e0d\u8bba\u90a3\u4e2a\u70b9\u662f\u4e0d\u662f\u91d1\u5c5e\uff0c\u7c97\u7cd9\u6216\u8005\u5e73\u6ed1\uff0c\u4e5f\u4e0d\u8bba\u8868\u9762\u5bf9\u4e8e\u4e0d\u540c\u6ce2\u957f\u7684\u5149\u4f1a\u6709\u5982\u4f55\u7684\u53cd\u5e94\u3002 \u5728\u4e0b\u9762\u4f60\u53ef\u4ee5\u770b\u5230\u5728\u4e00\u4e2aPBR\u6e32\u67d3\u7ba1\u7ebf\u5f53\u4e2d\u7ecf\u5e38\u4f1a\u78b0\u5230\u7684\u7eb9\u7406\u5217\u8868\uff0c\u8fd8\u6709\u5c06\u5b83\u4eec\u8f93\u5165PBR\u6e32\u67d3\u5668\u6240\u80fd\u5f97\u5230\u7684\u76f8\u5e94\u7684\u89c6\u89c9\u8f93\u51fa\uff1a \u53cd\u7167\u7387 \uff1a \u53cd\u7167\u7387 (Albedo)\u7eb9\u7406\u4e3a\u6bcf\u4e00\u4e2a\u91d1\u5c5e\u7684\u7eb9\u7d20(Texel)\uff08\u7eb9\u7406\u50cf\u7d20\uff09\u6307\u5b9a\u8868\u9762\u989c\u8272\u6216\u8005\u57fa\u7840\u53cd\u5c04\u7387\u3002\u8fd9\u548c\u6211\u4eec\u4e4b\u524d\u4f7f\u7528\u8fc7\u7684\u6f2b\u53cd\u5c04\u7eb9\u7406\u76f8\u5f53\u7c7b\u4f3c\uff0c\u4e0d\u540c\u7684\u662f\u6240\u6709\u5149\u7167\u4fe1\u606f\u90fd\u662f\u7531\u4e00\u4e2a\u7eb9\u7406\u4e2d\u63d0\u53d6\u7684\u3002\u6f2b\u53cd\u5c04\u7eb9\u7406\u7684\u56fe\u50cf\u5f53\u4e2d\u5e38\u5e38\u5305\u542b\u4e00\u4e9b\u7ec6\u5c0f\u7684\u9634\u5f71\u6216\u8005\u6df1\u8272\u7684\u88c2\u7eb9\uff0c\u800c\u53cd\u7167\u7387\u7eb9\u7406\u4e2d\u662f\u4e0d\u4f1a\u6709\u8fd9\u4e9b\u4e1c\u897f\u7684\u3002\u5b83\u5e94\u8be5\u53ea\u5305\u542b\u8868\u9762\u7684\u989c\u8272\uff08\u6216\u8005\u6298\u5c04\u5438\u6536\u7cfb\u6570\uff09\u3002 \u6cd5\u7ebf \uff1a\u6cd5\u7ebf\u8d34\u56fe\u7eb9\u7406\u548c\u6211\u4eec\u4e4b\u524d\u5728 \u6cd5\u7ebf\u8d34\u56fe \u6559\u7a0b\u4e2d\u6240\u4f7f\u7528\u7684\u8d34\u56fe\u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002\u6cd5\u7ebf\u8d34\u56fe\u4f7f\u6211\u4eec\u53ef\u4ee5\u9010\u7247\u6bb5\u7684\u6307\u5b9a\u72ec\u7279\u7684\u6cd5\u7ebf\uff0c\u6765\u4e3a\u8868\u9762\u5236\u9020\u51fa\u8d77\u4f0f\u4e0d\u5e73\u7684\u5047\u8c61\u3002 \u91d1\u5c5e\u5ea6 \uff1a\u91d1\u5c5e(Metallic)\u8d34\u56fe\u9010\u4e2a\u7eb9\u7d20\u7684\u6307\u5b9a\u8be5\u7eb9\u7d20\u662f\u4e0d\u662f\u91d1\u5c5e\u8d28\u5730\u7684\u3002\u6839\u636ePBR\u5f15\u64ce\u8bbe\u7f6e\u7684\u4e0d\u540c\uff0c\u7f8e\u672f\u5e08\u4eec\u65e2\u53ef\u4ee5\u5c06\u91d1\u5c5e\u5ea6\u7f16\u5199\u4e3a\u7070\u5ea6\u503c\u53c8\u53ef\u4ee5\u7f16\u5199\u4e3a1\u62160\u8fd9\u6837\u7684\u4e8c\u5143\u503c\u3002 \u7c97\u7cd9\u5ea6 \uff1a\u7c97\u7cd9\u5ea6(Roughness)\u8d34\u56fe\u53ef\u4ee5\u4ee5\u7eb9\u7d20\u4e3a\u5355\u4f4d\u6307\u5b9a\u67d0\u4e2a\u8868\u9762\u6709\u591a\u7c97\u7cd9\u3002\u91c7\u6837\u5f97\u6765\u7684\u7c97\u7cd9\u5ea6\u6570\u503c\u4f1a\u5f71\u54cd\u4e00\u4e2a\u8868\u9762\u7684\u5fae\u5e73\u9762\u7edf\u8ba1\u5b66\u4e0a\u7684\u53d6\u5411\u5ea6\u3002\u4e00\u4e2a\u6bd4\u8f83\u7c97\u7cd9\u7684\u8868\u9762\u4f1a\u5f97\u5230\u66f4\u5bbd\u9614\u66f4\u6a21\u7cca\u7684\u955c\u9762\u53cd\u5c04\uff08\u9ad8\u5149\uff09\uff0c\u800c\u4e00\u4e2a\u6bd4\u8f83\u5149\u6ed1\u7684\u8868\u9762\u5219\u4f1a\u5f97\u5230\u96c6\u4e2d\u800c\u6e05\u6670\u7684\u955c\u9762\u53cd\u5c04\u3002\u67d0\u4e9bPBR\u5f15\u64ce\u9884\u8bbe\u91c7\u7528\u7684\u662f\u5bf9\u67d0\u4e9b\u7f8e\u672f\u5e08\u6765\u8bf4\u66f4\u52a0\u76f4\u89c2\u7684 \u5149\u6ed1\u5ea6 (Smoothness)\u8d34\u56fe\u800c\u975e\u7c97\u7cd9\u5ea6\u8d34\u56fe\uff0c\u4e0d\u8fc7\u8fd9\u4e9b\u6570\u503c\u5728\u91c7\u6837\u4e4b\u65f6\u5c31\u9a6c\u4e0a\u7528\uff081.0 \u2013 \u5149\u6ed1\u5ea6\uff09\u8f6c\u6362\u6210\u4e86\u7c97\u7cd9\u5ea6\u3002 AO \uff1a \u73af\u5883\u5149\u906e\u853d (Ambient Occlusion)\u8d34\u56fe\u6216\u8005\u8bf4 AO \u8d34\u56fe\u4e3a\u8868\u9762\u548c\u5468\u56f4\u6f5c\u5728\u7684\u51e0\u4f55\u56fe\u5f62\u6307\u5b9a\u4e86\u4e00\u4e2a\u989d\u5916\u7684\u9634\u5f71\u56e0\u5b50\u3002\u6bd4\u5982\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u7816\u5757\u8868\u9762\uff0c\u53cd\u7167\u7387\u7eb9\u7406\u4e0a\u7684\u7816\u5757\u88c2\u7f1d\u90e8\u5206\u5e94\u8be5\u6ca1\u6709\u4efb\u4f55\u9634\u5f71\u4fe1\u606f\u3002\u7136\u800cAO\u8d34\u56fe\u5219\u4f1a\u628a\u90a3\u4e9b\u5149\u7ebf\u8f83\u96be\u9003\u9038\u51fa\u6765\u7684\u6697\u8272\u8fb9\u7f18\u6307\u5b9a\u51fa\u6765\u3002\u5728\u5149\u7167\u7684\u7ed3\u5c3e\u9636\u6bb5\u5f15\u5165\u73af\u5883\u906e\u853d\u53ef\u4ee5\u660e\u663e\u7684\u63d0\u5347\u4f60\u573a\u666f\u7684\u89c6\u89c9\u6548\u679c\u3002\u7f51\u683c/\u8868\u9762\u7684\u73af\u5883\u906e\u853d\u8d34\u56fe\u8981\u4e48\u901a\u8fc7\u624b\u52a8\u751f\u6210\uff0c\u8981\u4e48\u75313D\u5efa\u6a21\u8f6f\u4ef6\u81ea\u52a8\u751f\u6210\u3002 \u7f8e\u672f\u5e08\u4eec\u53ef\u4ee5\u5728\u7eb9\u7d20\u7ea7\u522b\u8bbe\u7f6e\u6216\u8c03\u6574\u8fd9\u4e9b\u57fa\u4e8e\u7269\u7406\u7684\u8f93\u5165\u503c\uff0c\u8fd8\u53ef\u4ee5\u4ee5\u73b0\u5b9e\u4e16\u754c\u6750\u6599\u7684\u8868\u9762\u7269\u7406\u6027\u8d28\u6765\u5efa\u7acb\u4ed6\u4eec\u7684\u6750\u8d28\u6570\u636e\u3002\u8fd9\u662fPBR\u6e32\u67d3\u7ba1\u7ebf\u6700\u5927\u7684\u4f18\u52bf\u4e4b\u4e00\uff0c\u56e0\u4e3a\u4e0d\u8bba\u73af\u5883\u6216\u8005\u5149\u7167\u7684\u8bbe\u7f6e\u5982\u4f55\u6539\u53d8\u8fd9\u4e9b\u8868\u9762\u7684\u6027\u8d28\u662f\u4e0d\u4f1a\u6539\u53d8\u7684\uff0c\u8fd9\u4f7f\u5f97\u7f8e\u672f\u5e08\u4eec\u53ef\u4ee5\u66f4\u4fbf\u6377\u5730\u83b7\u53d6\u7269\u7406\u53ef\u4fe1\u7684\u7ed3\u679c\u3002\u5728PBR\u6e32\u67d3\u7ba1\u7ebf\u4e2d\u7f16\u5199\u7684\u8868\u9762\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u7684\u5728\u4e0d\u540c\u7684PBR\u6e32\u67d3\u5f15\u64ce\u95f4\u5171\u4eab\u4f7f\u7528\uff0c\u4e0d\u8bba\u5904\u4e8e\u4f55\u79cd\u73af\u5883\u4e2d\u5b83\u4eec\u770b\u4e0a\u53bb\u90fd\u4f1a\u662f\u6b63\u786e\u7684\uff0c\u56e0\u6b64\u770b\u4e0a\u53bb\u4e5f\u4f1a\u66f4\u81ea\u7136\u3002 \u5ef6\u4f38\u9605\u8bfb Background: Physics and Math of Shading by Naty Hoffmann \uff1a\u7531\u4e8e\u5728\u8fd9\u4e00\u7bc7\u6587\u7ae0\u4e2d\u8981\u8c08\u8bba\u7684\u7406\u8bba\u70b9\u592a\u591a\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684\u7406\u8bba\u77e5\u8bc6\u90fd\u53ea\u662f\u6d89\u53ca\u5230\u4e86\u76ae\u6bdb\u3002\u5982\u679c\u4f60\u5e0c\u671b\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u5149\u7ebf\u80cc\u540e\u7684\u7269\u7406\u77e5\u8bc6\u4ee5\u53ca\u5b83\u4eec\u548cPBR\u7406\u8bba\u4e4b\u95f4\u6709\u4ec0\u4e48\u5173\u8054\u7684\u8bdd\uff0c \u8fd9 \u624d\u662f\u4f60\u9700\u8981\u9605\u8bfb\u7684\u8d44\u6e90\u3002 Real shading in Unreal Engine 4 \uff1a\u63a2\u8ba8\u4e86Epic Games\u5728\u4ed6\u4eec\u7684Unreal 4\u5f15\u64ce\u4e2d\u6240\u91c7\u7528\u7684PBR\u6a21\u578b\u3002\u6211\u4eec\u8fd9\u4e9b\u6559\u7a0b\u4e2d\u4e3b\u8981\u6d89\u53ca\u7684PBR\u7cfb\u7edf\u5c31\u662f\u57fa\u4e8e\u4ed6\u4eec\u7684PBR\u6a21\u578b\u3002 Marmoset: PBR Theory \uff1a\u4e3b\u8981\u9488\u5bf9\u7f8e\u672f\u5e08\u7684PBR\u4ecb\u7ecd\uff0c\u4e0d\u8fc7\u4ecd\u7136\u662f\u5f88\u597d\u7684\u8bfb\u7269\u3002 Coding Labs: Physically based rendering \uff1a\u4ecb\u7ecd\u6e32\u67d3\u65b9\u7a0b\u4ee5\u53ca\u5b83\u548cPBR\u76f4\u63a5\u7684\u5173\u7cfb\u3002 Coding Labs: Physically Based Rendering - Cook\u2013Torrance \uff1a\u4ecb\u7ecd\u4e86Cook-Torrance BRDF. Wolfire Games - Physically based rendering \uff1a\u4ecb\u7ecd\u4e86PBR\uff0c\u7531Lukas Orsv\u00e4rn\u6240\u8457\u3002","title":"\u7406\u8bba"},{"location":"07%20PBR/01%20Theory/#_1","text":"\u539f\u6587 Theory \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 J.moons \u6821\u5bf9 Krasjet, JeremyYvv Note \u672c\u8282\u6682\u672a\u8fdb\u884c\u5b8c\u5168\u7684\u91cd\u5199\uff0c\u9519\u8bef\u53ef\u80fd\u4f1a\u5f88\u591a\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7\u5bf9\u7167\u539f\u6587\u8fdb\u884c\u9605\u8bfb\u3002\u5982\u679c\u6709\u62a5\u544a\u672c\u8282\u7684\u9519\u8bef\uff0c\u5c06\u4f1a\u5ef6\u8fdf\u81f3\u91cd\u5199\u4e4b\u540e\u8fdb\u884c\u5904\u7406\u3002 PBR\uff0c\u6216\u8005\u7528\u66f4\u901a\u4fd7\u4e00\u4e9b\u7684\u79f0\u547c\u662f\u6307 \u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3 (Physically Based Rendering)\uff0c\u5b83\u6307\u7684\u662f\u4e00\u4e9b\u5728\u4e0d\u540c\u7a0b\u5ea6\u4e0a\u90fd\u57fa\u4e8e\u4e0e\u73b0\u5b9e\u4e16\u754c\u7684\u7269\u7406\u539f\u7406\u66f4\u76f8\u7b26\u7684\u57fa\u672c\u7406\u8bba\u6240\u6784\u6210\u7684\u6e32\u67d3\u6280\u672f\u7684\u96c6\u5408\u3002\u6b63\u56e0\u4e3a\u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3\u76ee\u7684\u4fbf\u662f\u4e3a\u4e86\u4f7f\u7528\u4e00\u79cd\u66f4\u7b26\u5408\u7269\u7406\u5b66\u89c4\u5f8b\u7684\u65b9\u5f0f\u6765\u6a21\u62df\u5149\u7ebf\uff0c\u56e0\u6b64\u8fd9\u79cd\u6e32\u67d3\u65b9\u5f0f\u4e0e\u6211\u4eec\u539f\u6765\u7684Phong\u6216\u8005Blinn-Phong\u5149\u7167\u7b97\u6cd5\u76f8\u6bd4\u603b\u4f53\u4e0a\u770b\u8d77\u6765\u8981\u66f4\u771f\u5b9e\u4e00\u4e9b\u3002\u9664\u4e86\u770b\u8d77\u6765\u66f4\u597d\u4e9b\u4ee5\u5916\uff0c\u7531\u4e8e\u5b83\u4e0e\u7269\u7406\u6027\u8d28\u975e\u5e38\u63a5\u8fd1\uff0c\u56e0\u6b64\u6211\u4eec\uff08\u5c24\u5176\u662f\u7f8e\u672f\u5e08\u4eec\uff09\u53ef\u4ee5\u76f4\u63a5\u4ee5\u7269\u7406\u53c2\u6570\u4e3a\u4f9d\u636e\u6765\u7f16\u5199\u8868\u9762\u6750\u8d28\uff0c\u800c\u4e0d\u5fc5\u4f9d\u9760\u7c97\u52a3\u7684\u4fee\u6539\u4e0e\u8c03\u6574\u6765\u8ba9\u5149\u7167\u6548\u679c\u770b\u4e0a\u53bb\u6b63\u5e38\u3002\u4f7f\u7528\u57fa\u4e8e\u7269\u7406\u53c2\u6570\u7684\u65b9\u6cd5\u6765\u7f16\u5199\u6750\u8d28\u8fd8\u6709\u4e00\u4e2a\u66f4\u5927\u7684\u597d\u5904\uff0c\u5c31\u662f\u4e0d\u8bba\u5149\u7167\u6761\u4ef6\u5982\u4f55\uff0c\u8fd9\u4e9b\u6750\u8d28\u770b\u4e0a\u53bb\u90fd\u4f1a\u662f\u6b63\u786e\u7684\uff0c\u800c\u5728\u975ePBR\u7684\u6e32\u67d3\u7ba1\u7ebf\u5f53\u4e2d\u6709\u4e9b\u4e1c\u897f\u5c31\u4e0d\u4f1a\u90a3\u4e48\u771f\u5b9e\u4e86\u3002 \u867d\u7136\u5982\u6b64\uff0c\u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3\u4ecd\u7136\u53ea\u662f\u5bf9\u57fa\u4e8e\u7269\u7406\u539f\u7406\u7684\u73b0\u5b9e\u4e16\u754c\u7684\u4e00\u79cd\u8fd1\u4f3c\uff0c\u8fd9\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u5b83\u88ab\u79f0\u4e3a \u57fa\u4e8e \u7269\u7406\u7684\u7740\u8272(Physically based Shading) \u800c\u975e\u7269\u7406\u7740\u8272(Physical Shading)\u7684\u539f\u56e0\u3002\u5224\u65ad\u4e00\u79cdPBR\u5149\u7167\u6a21\u578b\u662f\u5426\u662f\u57fa\u4e8e\u7269\u7406\u7684\uff0c\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u4e09\u4e2a\u6761\u4ef6\uff08\u4e0d\u7528\u62c5\u5fc3\uff0c\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u4e86\u89e3\u5b83\u4eec\u7684\uff09\uff1a \u57fa\u4e8e\u5fae\u5e73\u9762(Microfacet)\u7684\u8868\u9762\u6a21\u578b\u3002 \u80fd\u91cf\u5b88\u6052\u3002 \u5e94\u7528\u57fa\u4e8e\u7269\u7406\u7684BRDF\u3002 \u5728\u8fd9\u6b21\u7684PBR\u7cfb\u5217\u6559\u7a0b\u4e4b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u628a\u91cd\u70b9\u653e\u5728\u6700\u5148\u7531\u8fea\u58eb\u5c3c(Disney)\u63d0\u51fa\u63a2\u8ba8\u5e76\u88abEpic Games\u9996\u5148\u5e94\u7528\u4e8e\u5b9e\u65f6\u6e32\u67d3\u7684PBR\u65b9\u6848\u3002\u4ed6\u4eec\u57fa\u4e8e \u91d1\u5c5e\u8d28\u5730\u5de5\u4f5c\u6d41 (Metallic Workflow)\u7684\u65b9\u6848\u6709\u975e\u5e38\u5b8c\u5907\u7684\u6587\u732e\u8bb0\u5f55\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u5404\u79cd\u6d41\u884c\u7684\u5f15\u64ce\u4e4b\u4e2d\u5e76\u4e14\u6709\u7740\u975e\u5e38\u4ee4\u4eba\u60ca\u53f9\u7684\u89c6\u89c9\u6548\u679c\u3002\u5b8c\u6210\u8fd9\u6b21\u7684\u6559\u7a0b\u4e4b\u540e\u6211\u4eec\u5c06\u4f1a\u5236\u4f5c\u51fa\u7c7b\u4f3c\u4e8e\u8fd9\u6837\u7684\u4e00\u4e9b\u4e1c\u897f\uff1a \u8bf7\u6ce8\u610f\u8fd9\u4e2a\u7cfb\u5217\u7684\u6559\u7a0b\u6240\u63a2\u8ba8\u7684\u5185\u5bb9\u5c5e\u4e8e\u76f8\u5f53\u9ad8\u7aef\u7684\u9886\u57df\uff0c\u56e0\u6b64\u8981\u6c42\u8bfb\u8005\u5bf9OpenGL\u548c\u7740\u8272\u5668\u5149\u7167\u6709\u8f83\u597d\u7684\u7406\u89e3\u3002\u8bfb\u8005\u5c06\u4f1a\u9700\u8981\u8fd9\u4e9b\u76f8\u5173\u7684\u77e5\u8bc6\uff1a \u5e27\u7f13\u51b2 \uff0c \u7acb\u65b9\u4f53\u8d34\u56fe \uff0c Gamma\u6821\u6b63 \uff0c HDR \u548c \u6cd5\u7ebf\u8d34\u56fe \u3002\u6211\u4eec\u8fd8\u4f1a\u6df1\u5165\u63a2\u8ba8\u4e00\u4e9b\u9ad8\u7b49\u6570\u5b66\u7684\u5185\u5bb9\uff0c\u6211\u4f1a\u5c3d\u6211\u6240\u80fd\u5c06\u76f8\u5173\u7684\u6982\u5ff5\u9610\u8ff0\u6e05\u695a\u3002","title":"\u7406\u8bba"},{"location":"07%20PBR/01%20Theory/#_2","text":"\u6240\u6709\u7684PBR\u6280\u672f\u90fd\u57fa\u4e8e\u5fae\u5e73\u9762\u7406\u8bba\u3002\u8fd9\u9879\u7406\u8bba\u8ba4\u4e3a\uff0c\u8fbe\u5230\u5fae\u89c2\u5c3a\u5ea6\u4e4b\u540e\u4efb\u4f55\u5e73\u9762\u90fd\u53ef\u4ee5\u7528\u88ab\u79f0\u4e3a \u5fae\u5e73\u9762 (Microfacets)\u7684\u7ec6\u5c0f\u955c\u9762\u6765\u8fdb\u884c\u63cf\u7ed8\u3002\u6839\u636e\u5e73\u9762\u7c97\u7cd9\u7a0b\u5ea6\u7684\u4e0d\u540c\uff0c\u8fd9\u4e9b\u7ec6\u5c0f\u955c\u9762\u7684\u53d6\u5411\u6392\u5217\u53ef\u4ee5\u76f8\u5f53\u4e0d\u4e00\u81f4\uff1a \u4ea7\u751f\u7684\u6548\u679c\u5c31\u662f\uff1a\u4e00\u4e2a\u5e73\u9762\u8d8a\u662f\u7c97\u7cd9\uff0c\u8fd9\u4e2a\u5e73\u9762\u4e0a\u7684\u5fae\u5e73\u9762\u7684\u6392\u5217\u5c31\u8d8a\u6df7\u4e71\u3002\u8fd9\u4e9b\u5fae\u5c0f\u955c\u9762\u8fd9\u6837\u65e0\u5e8f\u53d6\u5411\u6392\u5217\u7684\u5f71\u54cd\u5c31\u662f\uff0c\u5f53\u6211\u4eec\u7279\u6307\u955c\u9762\u5149/\u955c\u9762\u53cd\u5c04\u65f6\uff0c\u5165\u5c04\u5149\u7ebf\u66f4\u8d8b\u5411\u4e8e\u5411\u5b8c\u5168\u4e0d\u540c\u7684\u65b9\u5411 \u53d1\u6563 (Scatter)\u5f00\u6765\uff0c\u8fdb\u800c\u4ea7\u751f\u51fa\u5206\u5e03\u8303\u56f4\u66f4\u5e7f\u6cdb\u7684\u955c\u9762\u53cd\u5c04\u3002\u800c\u4e0e\u4e4b\u76f8\u53cd\u7684\u662f\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5149\u6ed1\u7684\u5e73\u9762\uff0c\u5149\u7ebf\u5927\u4f53\u4e0a\u4f1a\u66f4\u8d8b\u5411\u4e8e\u5411\u540c\u4e00\u4e2a\u65b9\u5411\u53cd\u5c04\uff0c\u9020\u6210\u66f4\u5c0f\u66f4\u9510\u5229\u7684\u53cd\u5c04\uff1a \u5728\u5fae\u89c2\u5c3a\u5ea6\u4e0b\uff0c\u6ca1\u6709\u4efb\u4f55\u5e73\u9762\u662f\u5b8c\u5168\u5149\u6ed1\u7684\u3002\u7136\u800c\u7531\u4e8e\u8fd9\u4e9b\u5fae\u5e73\u9762\u5df2\u7ecf\u5fae\u5c0f\u5230\u65e0\u6cd5\u9010\u50cf\u7d20\u5730\u7ee7\u7eed\u5bf9\u5176\u8fdb\u884c\u533a\u5206\uff0c\u56e0\u6b64\u6211\u4eec\u5047\u8bbe\u4e00\u4e2a \u7c97\u7cd9\u5ea6 (Roughness)\u53c2\u6570\uff0c\u7136\u540e\u7528\u7edf\u8ba1\u5b66\u7684\u65b9\u6cd5\u6765\u4f30\u8ba1\u5fae\u5e73\u9762\u7684\u7c97\u7cd9\u7a0b\u5ea6\u3002\u6211\u4eec\u53ef\u4ee5\u57fa\u4e8e\u4e00\u4e2a\u5e73\u9762\u7684\u7c97\u7cd9\u5ea6\u6765\u8ba1\u7b97\u51fa\u4f17\u591a\u5fae\u5e73\u9762\u4e2d\uff0c\u671d\u5411\u65b9\u5411\u6cbf\u7740\u67d0\u4e2a\u5411\u91cf h \u65b9\u5411\u7684\u6bd4\u4f8b\u3002\u8fd9\u4e2a\u5411\u91cf h \u4fbf\u662f\u4f4d\u4e8e\u5149\u7ebf\u5411\u91cf l \u548c\u89c6\u7ebf\u5411\u91cf v \u4e4b\u95f4\u7684 \u534a\u7a0b\u5411\u91cf (Halfway Vector)\u3002\u6211\u4eec\u66fe\u7ecf\u5728\u4e4b\u524d\u7684 \u9ad8\u7ea7\u5149\u7167 \u6559\u7a0b\u4e2d\u8c08\u5230\u8fc7\u4e2d\u95f4\u5411\u91cf\uff0c\u5b83\u7684\u8ba1\u7b97\u65b9\u6cd5\u5982\u4e0b\uff1a h = \\frac{l + v}{\\|l + v\\|} \u5fae\u5e73\u9762\u7684\u671d\u5411\u65b9\u5411\u4e0e\u534a\u7a0b\u5411\u91cf\u7684\u65b9\u5411\u8d8a\u662f\u4e00\u81f4\uff0c\u955c\u9762\u53cd\u5c04\u7684\u6548\u679c\u5c31\u8d8a\u662f\u5f3a\u70c8\u8d8a\u662f\u9510\u5229\u3002\u901a\u8fc7\u4f7f\u7528\u4e00\u4e2a\u4ecb\u4e8e0\u52301\u4e4b\u95f4\u7684\u7c97\u7cd9\u5ea6\u53c2\u6570\uff0c\u6211\u4eec\u5c31\u80fd\u6982\u7565\u5730\u4f30\u7b97\u5fae\u5e73\u9762\u7684\u53d6\u5411\u60c5\u51b5\u4e86\uff1a \u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u8f83\u9ad8\u7684\u7c97\u7cd9\u5ea6\u663e\u793a\u51fa\u6765\u7684\u955c\u9762\u53cd\u5c04\u7684\u8f6e\u5ed3\u8981\u66f4\u5927\u4e00\u4e9b\u3002\u4e0e\u4e4b\u76f8\u53cd\uff0c\u8f83\u5c0f\u7684\u7c97\u7cd9\u5ea6\u663e\u793a\u51fa\u7684\u955c\u9762\u53cd\u5c04\u8f6e\u5ed3\u5219\u66f4\u5c0f\u66f4\u9510\u5229\u3002","title":"\u5fae\u5e73\u9762\u6a21\u578b"},{"location":"07%20PBR/01%20Theory/#_3","text":"\u5fae\u5e73\u9762\u8fd1\u4f3c\u6cd5\u4f7f\u7528\u4e86\u8fd9\u6837\u4e00\u79cd\u5f62\u5f0f\u7684 \u80fd\u91cf\u5b88\u6052 (Energy Conservation)\uff1a\u51fa\u5c04\u5149\u7ebf\u7684\u80fd\u91cf\u6c38\u8fdc\u4e0d\u80fd\u8d85\u8fc7\u5165\u5c04\u5149\u7ebf\u7684\u80fd\u91cf\uff08\u53d1\u5149\u9762\u9664\u5916\uff09\u3002\u5982\u4e0a\u56fe\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u968f\u7740\u7c97\u7cd9\u5ea6\u7684\u4e0a\u5347\uff0c\u955c\u9762\u53cd\u5c04\u533a\u57df\u4f1a\u589e\u52a0\uff0c\u4f46\u662f\u955c\u9762\u53cd\u5c04\u7684\u4eae\u5ea6\u5374\u4f1a\u4e0b\u964d\u3002\u5982\u679c\u6bcf\u4e2a\u50cf\u7d20\u7684\u955c\u9762\u53cd\u5c04\u5f3a\u5ea6\u90fd\u4e00\u6837\uff08\u4e0d\u7ba1\u53cd\u5c04\u8f6e\u5ed3\u7684\u5927\u5c0f\uff09\uff0c\u90a3\u4e48\u7c97\u7cd9\u7684\u5e73\u9762\u5c31\u4f1a\u653e\u5c04\u51fa\u8fc7\u591a\u7684\u80fd\u91cf\uff0c\u800c\u8fd9\u6837\u5c31\u8fdd\u80cc\u4e86\u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b\u3002\u8fd9\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u6b63\u5982\u6211\u4eec\u770b\u5230\u7684\u4e00\u6837\uff0c\u5149\u6ed1\u5e73\u9762\u7684\u955c\u9762\u53cd\u5c04\u66f4\u5f3a\u70c8\u800c\u7c97\u7cd9\u5e73\u9762\u7684\u53cd\u5c04\u66f4\u660f\u6697\u3002 \u4e3a\u4e86\u9075\u5b88\u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6f2b\u53cd\u5c04\u5149\u548c\u955c\u9762\u53cd\u5c04\u5149\u505a\u51fa\u660e\u786e\u7684\u533a\u5206\u3002\u5f53\u4e00\u675f\u5149\u7ebf\u78b0\u649e\u5230\u4e00\u4e2a\u8868\u9762\u7684\u65f6\u5019\uff0c\u5b83\u5c31\u4f1a\u5206\u79bb\u6210\u4e00\u4e2a \u6298\u5c04 \u90e8\u5206\u548c\u4e00\u4e2a \u53cd\u5c04 \u90e8\u5206\u3002\u53cd\u5c04\u90e8\u5206\u5c31\u662f\u4f1a\u76f4\u63a5\u53cd\u5c04\u5f00\u800c\u4e0d\u8fdb\u5165\u5e73\u9762\u7684\u90a3\u90e8\u5206\u5149\u7ebf\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u955c\u9762\u5149\u7167\u3002\u800c\u6298\u5c04\u90e8\u5206\u5c31\u662f\u4f59\u4e0b\u7684\u4f1a\u8fdb\u5165\u8868\u9762\u5e76\u88ab\u5438\u6536\u7684\u90a3\u90e8\u5206\u5149\u7ebf\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u6f2b\u53cd\u5c04\u5149\u7167\u3002 \u8fd9\u91cc\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u9700\u8981\u5904\u7406\uff0c\u56e0\u4e3a\u5f53\u5149\u7ebf\u63a5\u89e6\u5230\u4e00\u4e2a\u8868\u9762\u7684\u65f6\u5019\u6298\u5c04\u5149\u662f\u4e0d\u4f1a\u7acb\u5373\u5c31\u88ab\u5438\u6536\u7684\u3002\u901a\u8fc7\u7269\u7406\u5b66\u6211\u4eec\u53ef\u4ee5\u5f97\u77e5\uff0c\u5149\u7ebf\u5b9e\u9645\u4e0a\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e00\u675f\u6ca1\u6709\u8017\u5c3d\u5c31\u4e0d\u505c\u5411\u524d\u8fd0\u52a8\u7684\u80fd\u91cf\uff0c\u800c\u5149\u675f\u662f\u901a\u8fc7\u78b0\u649e\u7684\u65b9\u5f0f\u6765\u6d88\u8017\u80fd\u91cf\u3002\u6bcf\u4e00\u79cd\u6750\u6599\u90fd\u662f\u7531\u65e0\u6570\u5fae\u5c0f\u7684\u7c92\u5b50\u6240\u7ec4\u6210\uff0c\u8fd9\u4e9b\u7c92\u5b50\u90fd\u80fd\u5982\u4e0b\u56fe\u6240\u793a\u4e00\u6837\u4e0e\u5149\u7ebf\u53d1\u751f\u78b0\u649e\u3002\u8fd9\u4e9b\u7c92\u5b50\u5728\u6bcf\u6b21\u7684\u78b0\u649e\u4e2d\u90fd\u53ef\u4ee5\u5438\u6536\u5149\u7ebf\u6240\u643a\u5e26\u7684\u4e00\u90e8\u5206\u6216\u8005\u662f\u5168\u90e8\u7684\u80fd\u91cf\u800c\u540e\u8f6c\u53d8\u6210\u4e3a\u70ed\u91cf\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u5e76\u975e\u5168\u90e8\u80fd\u91cf\u90fd\u4f1a\u88ab\u5438\u6536\uff0c\u800c\u5149\u7ebf\u4e5f\u4f1a\u7ee7\u7eed\u6cbf\u7740\uff08\u57fa\u672c\u4e0a\uff09\u968f\u673a\u7684\u65b9\u5411 \u53d1\u6563 \uff0c\u7136\u540e\u518d\u548c\u5176\u4ed6\u7684\u7c92\u5b50\u78b0\u649e\u76f4\u81f3\u80fd\u91cf\u5b8c\u5168\u8017\u5c3d\u6216\u8005\u518d\u6b21\u79bb\u5f00\u8fd9\u4e2a\u8868\u9762\u3002\u800c\u5149\u7ebf\u8131\u79bb\u7269\u4f53\u8868\u9762\u540e\u5c06\u4f1a\u534f\u540c\u6784\u6210\u8be5\u8868\u9762\u7684\uff08\u6f2b\u53cd\u5c04\uff09\u989c\u8272\u3002\u4e0d\u8fc7\u5728\u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3\u4e4b\u4e2d\u6211\u4eec\u8fdb\u884c\u4e86\u7b80\u5316\uff0c\u5047\u8bbe\u5bf9\u5e73\u9762\u4e0a\u7684\u6bcf\u4e00\u70b9\u6240\u6709\u7684\u6298\u5c04\u5149\u90fd\u4f1a\u88ab\u5b8c\u5168\u5438\u6536\u800c\u4e0d\u4f1a\u6563\u5f00\u3002\u800c\u6709\u4e00\u4e9b\u88ab\u79f0\u4e3a \u6b21\u8868\u9762\u6563\u5c04 (Subsurface Scattering)\u6280\u672f\u7684\u7740\u8272\u5668\u6280\u672f\u5c06\u8fd9\u4e2a\u95ee\u9898\u8003\u8651\u4e86\u8fdb\u53bb\uff0c\u5b83\u4eec\u663e\u8457\u5730\u63d0\u5347\u4e86\u4e00\u4e9b\u8bf8\u5982\u76ae\u80a4\uff0c\u5927\u7406\u77f3\u6216\u8005\u8721\u8d28\u8fd9\u6837\u6750\u8d28\u7684\u89c6\u89c9\u6548\u679c\uff0c\u4e0d\u8fc7\u4f34\u968f\u800c\u6765\u7684\u4ee3\u4ef7\u662f\u6027\u80fd\u7684\u4e0b\u964d\u3002 \u5bf9\u4e8e \u91d1\u5c5e (Metallic)\u8868\u9762\uff0c\u5f53\u8ba8\u8bba\u5230\u53cd\u5c04\u4e0e\u6298\u5c04\u7684\u65f6\u5019\u8fd8\u6709\u4e00\u4e2a\u7ec6\u8282\u9700\u8981\u6ce8\u610f\u3002\u91d1\u5c5e\u8868\u9762\u5bf9\u5149\u7684\u53cd\u5e94\u4e0e\u975e\u91d1\u5c5e\uff08\u4e5f\u88ab\u79f0\u4e3a \u4ecb\u7535\u8d28 (Dielectrics)\uff09\u8868\u9762\u76f8\u6bd4\u662f\u4e0d\u540c\u7684\u3002\u5b83\u4eec\u9075\u4ece\u7684\u53cd\u5c04\u4e0e\u6298\u5c04\u539f\u7406\u662f\u76f8\u540c\u7684\uff0c\u4f46\u662f \u6240\u6709\u7684 \u6298\u5c04\u5149\u90fd\u4f1a\u88ab\u76f4\u63a5\u5438\u6536\u800c\u4e0d\u4f1a\u6563\u5f00\uff0c\u53ea\u7559\u4e0b\u53cd\u5c04\u5149\u6216\u8005\u8bf4\u955c\u9762\u53cd\u5c04\u5149\u3002\u4ea6\u5373\u662f\u8bf4\uff0c\u91d1\u5c5e\u8868\u9762\u53ea\u4f1a\u663e\u793a\u955c\u9762\u53cd\u5c04\u989c\u8272\uff0c\u800c\u4e0d\u4f1a\u663e\u793a\u51fa\u6f2b\u53cd\u5c04\u989c\u8272\u3002\u7531\u4e8e\u91d1\u5c5e\u4e0e\u7535\u4ecb\u8d28\u4e4b\u95f4\u5b58\u5728\u8fd9\u6837\u660e\u663e\u7684\u533a\u522b\uff0c\u56e0\u6b64\u5b83\u4eec\u4e24\u8005\u5728PBR\u6e32\u67d3\u7ba1\u7ebf\u4e2d\u88ab\u533a\u522b\u5904\u7406\uff0c\u800c\u6211\u4eec\u5c06\u5728\u6587\u7ae0\u7684\u540e\u9762\u8fdb\u4e00\u6b65\u8be6\u7ec6\u63a2\u8ba8\u8fd9\u4e2a\u95ee\u9898\u3002 \u53cd\u5c04\u5149\u4e0e\u6298\u5c04\u5149\u4e4b\u95f4\u7684\u8fd9\u4e2a\u533a\u522b\u4f7f\u6211\u4eec\u5f97\u5230\u4e86\u53e6\u4e00\u6761\u5173\u4e8e\u80fd\u91cf\u5b88\u6052\u7684\u7ecf\u9a8c\u7ed3\u8bba\uff1a\u53cd\u5c04\u5149\u4e0e\u6298\u5c04\u5149\u5b83\u4eec\u4e8c\u8005\u4e4b\u95f4\u662f \u4e92\u65a5 \u7684\u5173\u7cfb\u3002\u65e0\u8bba\u4f55\u79cd\u5149\u7ebf\uff0c\u5176\u88ab\u6750\u8d28\u8868\u9762\u6240\u53cd\u5c04\u7684\u80fd\u91cf\u5c06\u65e0\u6cd5\u518d\u88ab\u6750\u8d28\u5438\u6536\u3002\u56e0\u6b64\uff0c\u8bf8\u5982\u6298\u5c04\u5149\u8fd9\u6837\u7684\u4f59\u4e0b\u7684\u8fdb\u5165\u8868\u9762\u4e4b\u4e2d\u7684\u80fd\u91cf\u6b63\u597d\u5c31\u662f\u6211\u4eec\u8ba1\u7b97\u5b8c\u53cd\u5c04\u4e4b\u540e\u4f59\u4e0b\u7684\u80fd\u91cf\u3002 \u6211\u4eec\u6309\u7167\u80fd\u91cf\u5b88\u6052\u7684\u5173\u7cfb\uff0c\u9996\u5148\u8ba1\u7b97\u955c\u9762\u53cd\u5c04\u90e8\u5206\uff0c\u5b83\u7684\u503c\u7b49\u4e8e\u5165\u5c04\u5149\u7ebf\u88ab\u53cd\u5c04\u7684\u80fd\u91cf\u6240\u5360\u7684\u767e\u5206\u6bd4\u3002\u7136\u540e\u6298\u5c04\u5149\u90e8\u5206\u5c31\u53ef\u4ee5\u76f4\u63a5\u7531\u955c\u9762\u53cd\u5c04\u90e8\u5206\u8ba1\u7b97\u5f97\u51fa\uff1a float kS = calculateSpecularComponent(...); // \u53cd\u5c04/\u955c\u9762 \u90e8\u5206 float kD = 1.0 - ks; // \u6298\u5c04/\u6f2b\u53cd\u5c04 \u90e8\u5206 \u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u5728\u9075\u5b88\u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b\u7684\u524d\u63d0\u4e0b\u77e5\u9053\u5165\u5c04\u5149\u7ebf\u7684\u53cd\u5c04\u90e8\u5206\u4e0e\u6298\u5c04\u90e8\u5206\u6240\u5360\u7684\u603b\u91cf\u4e86\u3002\u6309\u7167\u8fd9\u79cd\u65b9\u6cd5\u6298\u5c04/\u6f2b\u53cd\u5c04\u4e0e\u53cd\u5c04/\u955c\u9762\u53cd\u5c04\u6240\u5360\u7684\u4efd\u989d\u90fd\u4e0d\u4f1a\u8d85\u8fc71.0\uff0c\u5982\u6b64\u5c31\u80fd\u4fdd\u8bc1\u5b83\u4eec\u7684\u80fd\u91cf\u603b\u548c\u6c38\u8fdc\u4e0d\u4f1a\u8d85\u8fc7\u5165\u5c04\u5149\u7ebf\u7684\u80fd\u91cf\u3002\u800c\u8fd9\u4e9b\u90fd\u662f\u6211\u4eec\u5728\u524d\u9762\u7684\u5149\u7167\u6559\u7a0b\u4e2d\u6ca1\u6709\u8003\u8651\u7684\u95ee\u9898\u3002","title":"\u80fd\u91cf\u5b88\u6052"},{"location":"07%20PBR/01%20Theory/#_4","text":"\u5728\u8fd9\u91cc\u6211\u4eec\u5f15\u5165\u4e86\u4e00\u79cd\u88ab\u79f0\u4e3a \u6e32\u67d3\u65b9\u7a0b (Render Equation)\u7684\u4e1c\u897f\u3002\u5b83\u662f\u67d0\u4e9b\u806a\u660e\u7edd\u9876\u7684\u4eba\u6240\u6784\u60f3\u51fa\u6765\u7684\u4e00\u4e2a\u7cbe\u5999\u7684\u65b9\u7a0b\u5f0f\uff0c\u662f\u5982\u4eca\u6211\u4eec\u6240\u62e5\u6709\u7684\u7528\u6765\u6a21\u62df\u5149\u7684\u89c6\u89c9\u6548\u679c\u6700\u597d\u7684\u6a21\u578b\u3002\u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3\u6240\u575a\u5b9a\u9075\u5faa\u7684\u662f\u4e00\u79cd\u88ab\u79f0\u4e3a \u53cd\u5c04\u7387\u65b9\u7a0b (The Reflectance Equation)\u7684\u6e32\u67d3\u65b9\u7a0b\u7684\u7279\u5316\u7248\u672c\u3002\u8981\u6b63\u786e\u5730\u7406\u89e3PBR\uff0c\u5f88\u91cd\u8981\u7684\u4e00\u70b9\u5c31\u662f\u8981\u9996\u5148\u900f\u5f7b\u5730\u7406\u89e3\u53cd\u5c04\u7387\u65b9\u7a0b\uff1a L_o(p,\\omega_o) = \\int\\limits_{\\Omega} f_r(p,\\omega_i,\\omega_o) L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \u53cd\u5c04\u7387\u65b9\u7a0b\u4e00\u5f00\u59cb\u53ef\u80fd\u4f1a\u663e\u5f97\u6709\u4e9b\u5413\u4eba\uff0c\u4e0d\u8fc7\u968f\u7740\u6211\u4eec\u6162\u6162\u5bf9\u5176\u8fdb\u884c\u5256\u6790\uff0c\u8bfb\u8005\u6700\u7ec8\u4f1a\u9010\u6e10\u7406\u89e3\u5b83\u7684\u3002\u8981\u6b63\u786e\u5730\u7406\u89e3\u8fd9\u4e2a\u65b9\u7a0b\u5f0f\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u7a0d\u5fae\u6d89\u8db3\u4e00\u4e9b \u8f90\u5c04\u5ea6\u91cf\u5b66 (Radiometry)\u7684\u5185\u5bb9\u3002\u8f90\u5c04\u5ea6\u91cf\u5b66\u662f\u4e00\u79cd\u7528\u6765\u5ea6\u91cf\u7535\u78c1\u573a\u8f90\u5c04\uff08\u5305\u62ec\u53ef\u89c1\u5149\uff09\u7684\u624b\u6bb5\u3002\u6709\u5f88\u591a\u79cd\u8f90\u5c04\u5ea6\u91cf(radiometric quantities)\u53ef\u4ee5\u7528\u6765\u6d4b\u91cf\u66f2\u9762\u6216\u8005\u67d0\u4e2a\u65b9\u5411\u4e0a\u7684\u5149\uff0c\u4f46\u662f\u6211\u4eec\u5c06\u53ea\u4f1a\u8ba8\u8bba\u5176\u4e2d\u548c\u53cd\u5c04\u7387\u65b9\u7a0b\u6709\u5173\u7684\u4e00\u79cd\u3002\u5b83\u88ab\u79f0\u4e3a \u8f90\u5c04\u7387 (Radiance)\uff0c\u5728\u8fd9\u91cc\u7528 L \u6765\u8868\u793a\u3002\u8f90\u5c04\u7387\u88ab\u7528\u6765\u91cf\u5316\u6765\u81ea\u5355\u4e00\u65b9\u5411\u4e0a\u7684\u5149\u7ebf\u7684\u5927\u5c0f\u6216\u8005\u5f3a\u5ea6\u3002\u7531\u4e8e\u8f90\u5c04\u7387\u662f\u7531\u8bb8\u591a\u7269\u7406\u53d8\u91cf\u96c6\u5408\u800c\u6210\u7684\uff0c\u4e00\u5f00\u59cb\u7406\u89e3\u8d77\u6765\u53ef\u80fd\u6709\u4e9b\u56f0\u96be\uff0c\u56e0\u6b64\u6211\u4eec\u9996\u5148\u5173\u6ce8\u4e00\u4e0b\u8fd9\u4e9b\u7269\u7406\u91cf\uff1a \u8f90\u5c04\u901a\u91cf \uff1a\u8f90\u5c04\u901a\u91cf \\Phi \u8868\u793a\u7684\u662f\u4e00\u4e2a\u5149\u6e90\u6240\u8f93\u51fa\u7684\u80fd\u91cf\uff0c\u4ee5\u74e6\u7279\u4e3a\u5355\u4f4d\u3002\u5149\u662f\u7531\u591a\u79cd\u4e0d\u540c\u6ce2\u957f\u7684\u80fd\u91cf\u6240\u96c6\u5408\u800c\u6210\u7684\uff0c\u800c\u6bcf\u79cd\u6ce2\u957f\u5219\u4e0e\u4e00\u79cd\u7279\u5b9a\u7684\uff08\u53ef\u89c1\u7684\uff09\u989c\u8272\u76f8\u5173\u3002\u56e0\u6b64\u4e00\u4e2a\u5149\u6e90\u6240\u653e\u5c04\u51fa\u6765\u7684\u80fd\u91cf\u53ef\u4ee5\u88ab\u89c6\u4f5c\u8fd9\u4e2a\u5149\u6e90\u5305\u542b\u7684\u6240\u6709\u5404\u79cd\u6ce2\u957f\u7684\u4e00\u4e2a\u51fd\u6570\u3002\u6ce2\u957f\u4ecb\u4e8e390nm\u5230700nm\uff08\u7eb3\u7c73\uff09\u7684\u5149\u88ab\u8ba4\u4e3a\u662f\u5904\u4e8e\u53ef\u89c1\u5149\u5149\u8c31\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u4eec\u662f\u4eba\u773c\u53ef\u89c1\u7684\u6ce2\u957f\u3002\u5728\u4e0b\u9762\u4f60\u53ef\u4ee5\u770b\u5230\u4e00\u5e45\u56fe\u7247\uff0c\u91cc\u9762\u5c55\u793a\u4e86\u65e5\u5149\u4e2d\u4e0d\u540c\u6ce2\u957f\u7684\u5149\u6240\u5177\u6709\u7684\u80fd\u91cf\uff1a \u8f90\u5c04\u901a\u91cf\u5c06\u4f1a\u8ba1\u7b97\u8fd9\u4e2a\u7531\u4e0d\u540c\u6ce2\u957f\u6784\u6210\u7684\u51fd\u6570\u7684\u603b\u9762\u79ef\u3002\u76f4\u63a5\u5c06\u8fd9\u79cd\u5bf9\u4e0d\u540c\u6ce2\u957f\u7684\u8ba1\u91cf\u4f5c\u4e3a\u53c2\u6570\u8f93\u5165\u8ba1\u7b97\u673a\u56fe\u5f62\u6709\u4e00\u4e9b\u4e0d\u5207\u5b9e\u9645\uff0c\u56e0\u6b64\u6211\u4eec\u901a\u5e38\u4e0d\u76f4\u63a5\u4f7f\u7528\u6ce2\u957f\u7684\u5f3a\u5ea6\u800c\u662f\u4f7f\u7528\u4e09\u539f\u8272\u7f16\u7801\uff0c\u4e5f\u5c31\u662f RGB \uff08\u6216\u8005\u6309\u901a\u5e38\u7684\u79f0\u547c\uff1a\u5149\u8272\uff09\u6765\u4f5c\u4e3a\u8f90\u5c04\u901a\u91cf\u8868\u793a\u7684\u7b80\u5316\u3002\u8fd9\u5957\u7f16\u7801\u786e\u5b9e\u4f1a\u5e26\u6765\u4e00\u4e9b\u4fe1\u606f\u4e0a\u7684\u635f\u5931\uff0c\u4f46\u662f\u8fd9\u5bf9\u4e8e\u89c6\u89c9\u6548\u679c\u4e0a\u7684\u5f71\u54cd\u57fa\u672c\u53ef\u4ee5\u5ffd\u7565\u3002 \u7acb\u4f53\u89d2 \uff1a\u7acb\u4f53\u89d2\u7528 \\omega \u8868\u793a\uff0c\u5b83\u53ef\u4ee5\u4e3a\u6211\u4eec\u63cf\u8ff0\u6295\u5c04\u5230\u5355\u4f4d\u7403\u4f53\u4e0a\u7684\u4e00\u4e2a\u622a\u9762\u7684\u5927\u5c0f\u6216\u8005\u9762\u79ef\u3002\u6295\u5c04\u5230\u8fd9\u4e2a\u5355\u4f4d\u7403\u4f53\u4e0a\u7684\u622a\u9762\u7684\u9762\u79ef\u5c31\u88ab\u79f0\u4e3a \u7acb\u4f53\u89d2 (Solid Angle)\uff0c\u4f60\u53ef\u4ee5\u628a\u7acb\u4f53\u89d2\u60f3\u8c61\u6210\u4e3a\u4e00\u4e2a\u5e26\u6709\u4f53\u79ef\u7684\u65b9\u5411\uff1a \u53ef\u4ee5\u628a\u81ea\u5df1\u60f3\u8c61\u6210\u4e3a\u4e00\u4e2a\u7ad9\u5728\u5355\u4f4d\u7403\u9762\u7684\u4e2d\u5fc3\u7684\u89c2\u5bdf\u8005\uff0c\u5411\u7740\u6295\u5f71\u7684\u65b9\u5411\u770b\u3002\u8fd9\u4e2a\u6295\u5f71\u8f6e\u5ed3\u7684\u5927\u5c0f\u5c31\u662f\u7acb\u4f53\u89d2\u3002 \u8f90\u5c04\u5f3a\u5ea6 \uff1a\u8f90\u5c04\u5f3a\u5ea6(Radiant Intensity)\u8868\u793a\u7684\u662f\u5728\u5355\u4f4d\u7403\u9762\u4e0a\uff0c\u4e00\u4e2a\u5149\u6e90\u5411\u6bcf\u5355\u4f4d\u7acb\u4f53\u89d2\u6240\u6295\u9001\u7684\u8f90\u5c04\u901a\u91cf\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5047\u8bbe\u4e00\u4e2a\u5168\u5411\u5149\u6e90\u5411\u6240\u6709\u65b9\u5411\u5747\u5300\u7684\u8f90\u5c04\u80fd\u91cf\uff0c\u8f90\u5c04\u5f3a\u5ea6\u5c31\u80fd\u5e2e\u6211\u4eec\u8ba1\u7b97\u51fa\u5b83\u5728\u4e00\u4e2a\u5355\u4f4d\u9762\u79ef\uff08\u7acb\u4f53\u89d2\uff09\u5185\u7684\u80fd\u91cf\u5927\u5c0f\uff1a \u8ba1\u7b97\u8f90\u5c04\u5f3a\u5ea6\u7684\u516c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a I = \\frac{d\\Phi}{d\\omega} \u5176\u4e2d I \u8868\u793a\u8f90\u5c04\u901a\u91cf \\Phi \u9664\u4ee5\u7acb\u4f53\u89d2 \\omega \u3002 \u5728\u7406\u89e3\u4e86\u8f90\u5c04\u901a\u91cf\uff0c\u8f90\u5c04\u5f3a\u5ea6\u4e0e\u7acb\u4f53\u89d2\u7684\u6982\u5ff5\u4e4b\u540e\uff0c\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u5f00\u59cb\u8ba8\u8bba \u8f90\u5c04\u7387 \u7684\u65b9\u7a0b\u5f0f\u4e86\u3002\u8fd9\u4e2a\u65b9\u7a0b\u8868\u793a\u7684\u662f\uff0c\u4e00\u4e2a\u62e5\u6709\u8f90\u5c04\u5f3a\u5ea6 \\Phi \u7684\u5149\u6e90\u5728\u5355\u4f4d\u9762\u79ef A \uff0c\u5355\u4f4d\u7acb\u4f53\u89d2 \\omega \u4e0a\u7684\u8f90\u5c04\u51fa\u7684\u603b\u80fd\u91cf\uff1a L=\\frac{d^2\\Phi}{ dA d\\omega \\cos\\theta} \u8f90\u5c04\u7387\u662f\u8f90\u5c04\u5ea6\u91cf\u5b66\u4e0a\u8868\u793a\u4e00\u4e2a\u533a\u57df\u5e73\u9762\u4e0a\u5149\u7ebf\u603b\u91cf\u7684\u7269\u7406\u91cf\uff0c\u5b83\u53d7\u5230 \u5165\u5c04 (Incident)\uff08\u6216\u8005\u6765\u5c04\uff09\u5149\u7ebf\u4e0e\u5e73\u9762\u6cd5\u7ebf\u95f4\u7684\u5939\u89d2 \\theta \u7684\u4f59\u5f26\u503c \\cos \\theta \u7684\u5f71\u54cd\uff1a\u5f53\u76f4\u63a5\u8f90\u5c04\u5230\u5e73\u9762\u4e0a\u7684\u7a0b\u5ea6\u8d8a\u4f4e\u65f6\uff0c\u5149\u7ebf\u5c31\u8d8a\u5f31\uff0c\u800c\u5f53\u5149\u7ebf\u5b8c\u5168\u5782\u76f4\u4e8e\u5e73\u9762\u65f6\u5f3a\u5ea6\u6700\u9ad8\u3002\u8fd9\u548c\u6211\u4eec\u5728\u524d\u9762\u7684 \u57fa\u7840\u5149\u7167 \u6559\u7a0b\u4e2d\u5bf9\u4e8e\u6f2b\u53cd\u5c04\u5149\u7167\u7684\u6982\u5ff5\u76f8\u4f3c\uff0c\u5176\u4e2d \\cos \\theta \u5c31\u76f4\u63a5\u5bf9\u5e94\u4e8e\u5149\u7ebf\u7684\u65b9\u5411\u5411\u91cf\u548c\u5e73\u9762\u6cd5\u5411\u91cf\u7684\u70b9\u79ef\uff1a float cosTheta = dot(lightDir, N); \u8f90\u5c04\u7387\u65b9\u7a0b\u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u628a\u5927\u90e8\u5206\u6211\u4eec\u611f\u5174\u8da3\u7684\u7269\u7406\u91cf\u90fd\u5305\u542b\u4e86\u8fdb\u53bb\u3002\u5982\u679c\u6211\u4eec\u628a\u7acb\u4f53\u89d2 \\omega \u548c\u9762\u79ef A \u770b\u4f5c\u662f\u65e0\u7a77\u5c0f\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u80fd\u7528\u8f90\u5c04\u7387\u6765\u8868\u793a\u5355\u675f\u5149\u7ebf\u7a7f\u8fc7\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u70b9\u7684\u901a\u91cf\u3002\u8fd9\u5c31\u4f7f\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u5f97\u51fa\u4f5c\u7528\u4e8e\u5355\u4e2a\uff08\u7247\u6bb5\uff09\u70b9\u4e0a\u7684\u5355\u675f\u5149\u7ebf\u7684\u8f90\u5c04\u7387\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u628a\u7acb\u4f53\u89d2 \\omega \u8f6c\u53d8\u4e3a\u65b9\u5411\u5411\u91cf \\omega \u7136\u540e\u628a\u9762 A \u8f6c\u6362\u4e3a\u70b9 p \u3002\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u76f4\u63a5\u5728\u6211\u4eec\u7684\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u8f90\u5c04\u7387\u6765\u8ba1\u7b97\u5355\u675f\u5149\u7ebf\u5bf9\u6bcf\u4e2a\u7247\u6bb5\u7684\u4f5c\u7528\u4e86\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5f53\u6d89\u53ca\u5230\u8f90\u5c04\u7387\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u5173\u5fc3\u7684\u662f \u6240\u6709 \u6295\u5c04\u5230\u70b9 p \u4e0a\u7684\u5149\u7ebf\u7684\u603b\u548c\uff0c\u800c\u8fd9\u4e2a\u548c\u5c31\u79f0\u4e3a\u8f90\u5c04\u7167\u5ea6\u6216\u8005 \u8f90\u7167\u5ea6 (Irradiance)\u3002\u5728\u7406\u89e3\u4e86\u8f90\u5c04\u7387\u548c\u8f90\u7167\u5ea6\u7684\u6982\u5ff5\u4e4b\u540e\uff0c\u8ba9\u6211\u4eec\u518d\u56de\u8fc7\u5934\u6765\u770b\u770b\u53cd\u5c04\u7387\u65b9\u7a0b\uff1a L_o(p,\\omega_o) = \\int\\limits_{\\Omega} f_r(p,\\omega_i,\\omega_o) L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \u6211\u4eec\u77e5\u9053\u5728\u6e32\u67d3\u65b9\u7a0b\u4e2d L \u4ee3\u8868\u901a\u8fc7\u67d0\u4e2a\u65e0\u9650\u5c0f\u7684\u7acb\u4f53\u89d2 \\omega_i \u5728\u67d0\u4e2a\u70b9\u4e0a\u7684\u8f90\u5c04\u7387\uff0c\u800c\u7acb\u4f53\u89d2\u53ef\u4ee5\u89c6\u4f5c\u662f\u5165\u5c04\u65b9\u5411\u5411\u91cf \\omega_i \u3002\u6ce8\u610f\u6211\u4eec\u5229\u7528\u5149\u7ebf\u548c\u5e73\u9762\u95f4\u7684\u5165\u5c04\u89d2\u7684\u4f59\u5f26\u503c \\cos \\theta \u6765\u8ba1\u7b97\u80fd\u91cf\uff0c\u4ea6\u5373\u4ece\u8f90\u5c04\u7387\u516c\u5f0f L \u8f6c\u5316\u81f3\u53cd\u5c04\u7387\u516c\u5f0f\u65f6\u7684 n \\cdot \\omega_i \u3002\u7528 \\omega_o \u8868\u793a\u89c2\u5bdf\u65b9\u5411\uff0c\u4e5f\u5c31\u662f\u51fa\u5c04\u65b9\u5411\uff0c\u53cd\u5c04\u7387\u516c\u5f0f\u8ba1\u7b97\u4e86\u70b9 p \u5728 \\omega_o \u65b9\u5411\u4e0a\u88ab\u53cd\u5c04\u51fa\u6765\u7684\u8f90\u5c04\u7387 L_o(p, \\omega_o) \u7684\u603b\u548c\u3002\u6216\u8005\u6362\u53e5\u8bdd\u8bf4\uff1a L_o \u8868\u793a\u4e86\u4ece \\omega_o \u65b9\u5411\u4e0a\u89c2\u5bdf\uff0c\u5149\u7ebf\u6295\u5c04\u5230\u70b9 p \u4e0a\u53cd\u5c04\u51fa\u6765\u7684\u8f90\u7167\u5ea6\u3002 \u57fa\u4e8e\u53cd\u5c04\u7387\u516c\u5f0f\u662f\u56f4\u7ed5\u6240\u6709\u5165\u5c04\u8f90\u5c04\u7387\u7684\u603b\u548c\uff0c\u4e5f\u5c31\u662f\u8f90\u7167\u5ea6\u6765\u8ba1\u7b97\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u7684\u5c31\u4e0d\u53ea\u662f\u662f\u5355\u4e00\u7684\u4e00\u4e2a\u65b9\u5411\u4e0a\u7684\u5165\u5c04\u5149\uff0c\u800c\u662f\u4e00\u4e2a\u4ee5\u70b9 p \u4e3a\u7403\u5fc3\u7684\u534a\u7403\u9886\u57df \\Omega \u5185\u6240\u6709\u65b9\u5411\u4e0a\u7684\u5165\u5c04\u5149\u3002\u4e00\u4e2a \u534a\u7403\u9886\u57df (Hemisphere)\u53ef\u4ee5\u63cf\u8ff0\u4e3a\u4ee5\u5e73\u9762\u6cd5\u7ebf n \u4e3a\u8f74\u6240\u73af\u7ed5\u7684\u534a\u4e2a\u7403\u4f53\uff1a \u4e3a\u4e86\u8ba1\u7b97\u67d0\u4e9b\u9762\u79ef\u7684\u503c\uff0c\u6216\u8005\u50cf\u662f\u5728\u534a\u7403\u9886\u57df\u7684\u95ee\u9898\u4e2d\u8ba1\u7b97\u67d0\u4e00\u4e2a\u4f53\u79ef\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u9700\u8981\u7528\u5230\u4e00\u79cd\u79f0\u4e3a \u79ef\u5206 (Integral)\u7684\u6570\u5b66\u624b\u6bb5\uff0c\u4e5f\u5c31\u662f\u53cd\u5c04\u7387\u516c\u5f0f\u4e2d\u7684\u7b26\u53f7 \\int \uff0c\u5b83\u7684\u8fd0\u7b97\u5305\u542b\u4e86\u534a\u7403\u9886\u57df \\Omega \u5185\u6240\u6709\u5165\u5c04\u65b9\u5411\u4e0a\u7684 d\\omega_i \u3002\u79ef\u5206\u8fd0\u7b97\u7684\u503c\u7b49\u4e8e\u4e00\u4e2a\u51fd\u6570\u66f2\u7ebf\u7684\u9762\u79ef\uff0c\u5b83\u7684\u8ba1\u7b97\u7ed3\u679c\u8981\u4e48\u662f\u89e3\u6790\u89e3\u8981\u4e48\u5c31\u662f\u6570\u503c\u89e3\u3002\u7531\u4e8e\u6e32\u67d3\u65b9\u7a0b\u548c\u53cd\u5c04\u7387\u65b9\u7a0b\u90fd\u6ca1\u6709\u89e3\u6790\u89e3\uff0c\u6211\u4eec\u5c06\u4f1a\u7528\u79bb\u6563\u7684\u65b9\u6cd5\u6765\u6c42\u5f97\u8fd9\u4e2a\u79ef\u5206\u7684\u6570\u503c\u89e3\u3002\u8fd9\u4e2a\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\uff0c\u5728\u534a\u7403\u9886\u57df \\Omega \u4e2d\u6309\u4e00\u5b9a\u7684\u6b65\u957f\u5c06\u53cd\u5c04\u7387\u65b9\u7a0b\u5206\u6563\u6c42\u89e3\uff0c\u7136\u540e\u518d\u6309\u7167\u6b65\u957f\u5927\u5c0f\u5c06\u6240\u5f97\u5230\u7684\u7ed3\u679c\u5e73\u5747\u5316\u3002\u8fd9\u79cd\u65b9\u6cd5\u88ab\u79f0\u4e3a\u9ece\u66fc\u548c( Riemann sum ) \uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u7c97\u7565\u7684\u6f14\u793a\u4e00\u4e0b\uff1a int steps = 100; float sum = 0.0f; vec3 P = ...; vec3 Wo = ...; vec3 N = ...; float dW = 1.0f / steps; for(int i = 0; i < steps; ++i) { vec3 Wi = getNextIncomingLightDir(i); sum += Fr(p, Wi, Wo) * L(p, Wi) * dot(N, Wi) * dW; } \u901a\u8fc7\u5229\u7528 dW \u6765\u5bf9\u6240\u6709\u79bb\u6563\u90e8\u5206\u8fdb\u884c\u7f29\u653e\uff0c\u5176\u548c\u6700\u540e\u5c31\u7b49\u4e8e\u79ef\u5206\u51fd\u6570\u7684\u603b\u9762\u79ef\u6216\u8005\u603b\u4f53\u79ef\u3002\u8fd9\u4e2a\u7528\u6765\u5bf9\u6bcf\u4e2a\u79bb\u6563\u6b65\u957f\u8fdb\u884c\u7f29\u653e\u7684 dW \u53ef\u4ee5\u8ba4\u4e3a\u5c31\u662f\u53cd\u5c04\u7387\u65b9\u7a0b\u4e2d\u7684 d\\omega_i \u3002\u5728\u6570\u5b66\u4e0a\uff0c\u7528\u6765\u8ba1\u7b97\u79ef\u5206\u7684 d\\omega_i \u8868\u793a\u7684\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u7b26\u53f7\uff0c\u800c\u6211\u4eec\u4f7f\u7528\u7684 dW \u5728\u4ee3\u7801\u4e2d\u548c\u5b83\u5e76\u6ca1\u6709\u76f4\u63a5\u7684\u8054\u7cfb\uff08\u56e0\u4e3a\u5b83\u4ee3\u8868\u7684\u662f\u9ece\u66fc\u548c\u4e2d\u7684\u79bb\u6563\u6b65\u957f\uff09\uff0c\u8fd9\u6837\u8bf4\u662f\u4e3a\u4e86\u53ef\u4ee5\u5e2e\u52a9\u4f60\u7406\u89e3\u3002\u8bf7\u7262\u8bb0\uff0c\u4f7f\u7528\u79bb\u6563\u6b65\u957f\u5f97\u5230\u7684\u662f\u51fd\u6570\u603b\u9762\u79ef\u7684\u4e00\u4e2a\u8fd1\u4f3c\u503c\u3002\u7ec6\u5fc3\u7684\u8bfb\u8005\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u79bb\u6563\u90e8\u5206\u7684\u6570\u91cf\u6765\u63d0\u9ad8\u9ece\u66fc\u548c\u7684 \u51c6\u786e\u5ea6 (Accuracy)\u3002 \u53cd\u5c04\u7387\u65b9\u7a0b\u6982\u62ec\u4e86\u5728\u534a\u7403\u9886\u57df \\Omega \u5185\uff0c\u78b0\u649e\u5230\u4e86\u70b9 p \u4e0a\u7684\u6240\u6709\u5165\u5c04\u65b9\u5411 \\omega_i \u4e0a\u7684\u5149\u7ebf\u7684\u8f90\u5c04\u7387\uff0c\u5e76\u53d7\u5230 f_r \u7684\u7ea6\u675f\uff0c\u7136\u540e\u8fd4\u56de\u89c2\u5bdf\u65b9\u5411\u4e0a\u53cd\u5c04\u5149\u7684 L_o \u3002\u6b63\u5982\u6211\u4eec\u6240\u719f\u6089\u7684\u90a3\u6837\uff0c\u5165\u5c04\u5149\u8f90\u5c04\u7387\u53ef\u4ee5\u7531 \u5149\u6e90 \u5904\u83b7\u5f97\uff0c\u6b64\u5916\u8fd8\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u73af\u5883\u8d34\u56fe\u6765\u6d4b\u7b97\u6240\u6709\u5165\u5c04\u65b9\u5411\u4e0a\u7684\u8f90\u5c04\u7387\uff0c\u6211\u4eec\u5c06\u5728\u672a\u6765\u7684 IBL \u6559\u7a0b\u4e2d\u8ba8\u8bba\u8fd9\u4e2a\u65b9\u6cd5\u3002 \u73b0\u5728\u552f\u4e00\u5269\u4e0b\u7684\u672a\u77e5\u7b26\u53f7\u5c31\u662f f_r \u4e86\uff0c\u5b83\u88ab\u79f0\u4e3a BRDF \uff0c\u6216\u8005 \u53cc\u5411\u53cd\u5c04\u5206\u5e03\u51fd\u6570 (Bidirectional Reflective Distribution Function) \uff0c\u5b83\u7684\u4f5c\u7528\u662f\u57fa\u4e8e\u8868\u9762\u6750\u8d28\u5c5e\u6027\u6765\u5bf9\u5165\u5c04\u8f90\u5c04\u7387\u8fdb\u884c\u7f29\u653e\u6216\u8005\u52a0\u6743\u3002","title":"\u53cd\u5c04\u7387\u65b9\u7a0b"},{"location":"07%20PBR/01%20Theory/#brdf","text":"BRDF \uff0c\u6216\u8005\u8bf4 \u53cc\u5411\u53cd\u5c04\u5206\u5e03\u51fd\u6570 \uff0c\u5b83\u63a5\u53d7\u5165\u5c04\uff08\u5149\uff09\u65b9\u5411 \\omega_i \uff0c\u51fa\u5c04\uff08\u89c2\u5bdf\uff09\u65b9\u5411 \\omega_o \uff0c\u5e73\u9762\u6cd5\u7ebf n \u4ee5\u53ca\u4e00\u4e2a\u7528\u6765\u8868\u793a\u5fae\u5e73\u9762\u7c97\u7cd9\u7a0b\u5ea6\u7684\u53c2\u6570 a \u4f5c\u4e3a\u51fd\u6570\u7684\u8f93\u5165\u53c2\u6570\u3002BRDF\u53ef\u4ee5\u8fd1\u4f3c\u7684\u6c42\u51fa\u6bcf\u675f\u5149\u7ebf\u5bf9\u4e00\u4e2a\u7ed9\u5b9a\u4e86\u6750\u8d28\u5c5e\u6027\u7684\u5e73\u9762\u4e0a\u6700\u7ec8\u53cd\u5c04\u51fa\u6765\u7684\u5149\u7ebf\u6240\u4f5c\u51fa\u7684\u8d21\u732e\u7a0b\u5ea6\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u5e73\u9762\u62e5\u6709\u5b8c\u5168\u5149\u6ed1\u7684\u8868\u9762\uff08\u6bd4\u5982\u955c\u9762\uff09\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6240\u6709\u7684\u5165\u5c04\u5149\u7ebf \\omega_i \uff08\u9664\u4e86\u4e00\u675f\u4ee5\u5916\uff09\u800c\u8a00BRDF\u51fd\u6570\u90fd\u4f1a\u8fd4\u56de0.0 \uff0c\u53ea\u6709\u4e00\u675f\u4e0e\u51fa\u5c04\u5149\u7ebf \\omega_o \u62e5\u6709\u76f8\u540c\uff08\u88ab\u53cd\u5c04\uff09\u89d2\u5ea6\u7684\u5149\u7ebf\u4f1a\u5f97\u52301.0\u8fd9\u4e2a\u8fd4\u56de\u503c\u3002 BRDF\u57fa\u4e8e\u6211\u4eec\u4e4b\u524d\u6240\u63a2\u8ba8\u8fc7\u7684\u5fae\u5e73\u9762\u7406\u8bba\u6765\u8fd1\u4f3c\u7684\u6c42\u5f97\u6750\u8d28\u7684\u53cd\u5c04\u4e0e\u6298\u5c04\u5c5e\u6027\u3002\u5bf9\u4e8e\u4e00\u4e2aBRDF\uff0c\u4e3a\u4e86\u5b9e\u73b0\u7269\u7406\u5b66\u4e0a\u7684\u53ef\u4fe1\u5ea6\uff0c\u5b83\u5fc5\u987b\u9075\u5b88\u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b\uff0c\u4e5f\u5c31\u662f\u8bf4\u53cd\u5c04\u5149\u7ebf\u7684\u603b\u548c\u6c38\u8fdc\u4e0d\u80fd\u8d85\u8fc7\u5165\u5c04\u5149\u7ebf\u7684\u603b\u91cf\u3002\u4e25\u683c\u4e0a\u6765\u8bf4\uff0c\u540c\u6837\u91c7\u7528 \\omega_i \u548c \\omega_o \u4f5c\u4e3a\u8f93\u5165\u53c2\u6570\u7684 Blinn-Phong\u5149\u7167\u6a21\u578b\u4e5f\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2aBRDF\u3002\u7136\u800c\u7531\u4e8eBlinn-Phong\u6a21\u578b\u5e76\u6ca1\u6709\u9075\u5faa\u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b\uff0c\u56e0\u6b64\u5b83\u4e0d\u88ab\u8ba4\u4e3a\u662f\u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3\u3002\u73b0\u5728\u5df2\u7ecf\u6709\u5f88\u597d\u51e0\u79cdBRDF\u90fd\u80fd\u8fd1\u4f3c\u7684\u5f97\u51fa\u7269\u4f53\u8868\u9762\u5bf9\u4e8e\u5149\u7684\u53cd\u5e94\uff0c\u4f46\u662f\u51e0\u4e4e\u6240\u6709\u5b9e\u65f6\u6e32\u67d3\u7ba1\u7ebf\u4f7f\u7528\u7684\u90fd\u662f\u4e00\u79cd\u88ab\u79f0\u4e3a Cook-Torrance BRDF \u6a21\u578b\u3002 Cook-Torrance BRDF\u517c\u6709\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u4e24\u4e2a\u90e8\u5206\uff1a f_r = k_d f_{lambert} + k_s f_{cook-torrance} \u8fd9\u91cc\u7684 k_d \u662f\u65e9\u5148\u63d0\u5230\u8fc7\u7684\u5165\u5c04\u5149\u7ebf\u4e2d \u88ab\u6298\u5c04 \u90e8\u5206\u7684\u80fd\u91cf\u6240\u5360\u7684\u6bd4\u7387\uff0c\u800c k_s \u662f \u88ab\u53cd\u5c04 \u90e8\u5206\u7684\u6bd4\u7387\u3002BRDF\u7684\u5de6\u4fa7\u8868\u793a\u7684\u662f\u6f2b\u53cd\u5c04\u90e8\u5206\uff0c\u8fd9\u91cc\u7528 f_{lambert} \u6765\u8868\u793a\u3002\u5b83\u88ab\u79f0\u4e3a Lambertian\u6f2b\u53cd\u5c04 \uff0c\u8fd9\u548c\u6211\u4eec\u4e4b\u524d\u5728\u6f2b\u53cd\u5c04\u7740\u8272\u4e2d\u4f7f\u7528\u7684\u5e38\u6570\u56e0\u5b50\u7c7b\u4f3c\uff0c\u7528\u5982\u4e0b\u7684\u516c\u5f0f\u6765\u8868\u793a\uff1a f_{lambert} = \\frac{c}{\\pi} c \u8868\u793a\u8868\u9762\u989c\u8272\uff08\u56de\u60f3\u4e00\u4e0b\u6f2b\u53cd\u5c04\u8868\u9762\u7eb9\u7406\uff09\u3002\u9664\u4ee5 \\pi \u662f\u4e3a\u4e86\u5bf9\u6f2b\u53cd\u5c04\u5149\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u56e0\u4e3a\u524d\u9762\u542b\u6709BRDF\u7684\u79ef\u5206\u65b9\u7a0b\u662f\u53d7 \\pi \u5f71\u54cd\u7684\uff08\u6211\u4eec\u4f1a\u5728 IBL \u7684\u6559\u7a0b\u4e2d\u63a2\u8ba8\u8fd9\u4e2a\u95ee\u9898\u7684\uff09\u3002 Important \u4f60\u4e5f\u8bb8\u4f1a\u611f\u5230\u597d\u5947\uff0c\u8fd9\u4e2aLambertian\u6f2b\u53cd\u5c04\u548c\u6211\u4eec\u4e4b\u524d\u7ecf\u5e38\u4f7f\u7528\u7684\u6f2b\u53cd\u5c04\u5230\u5e95\u6709\u4ec0\u4e48\u5173\u7cfb\uff1a\u4e4b\u524d\u6211\u4eec\u662f\u7528\u8868\u9762\u6cd5\u5411\u91cf\u4e0e\u5149\u7167\u65b9\u5411\u5411\u91cf\u8fdb\u884c\u70b9\u4e58\uff0c\u7136\u540e\u518d\u5c06\u7ed3\u679c\u4e0e\u5e73\u9762\u989c\u8272\u76f8\u4e58\u5f97\u5230\u6f2b\u53cd\u5c04\u53c2\u6570\u3002\u70b9\u4e58\u4f9d\u7136\u8fd8\u5728\uff0c\u4f46\u662f\u5374\u4e0d\u5728BRDF\u4e4b\u5185\uff0c\u800c\u662f\u8f6c\u53d8\u6210\u4e3a\u4e86 L_o \u79ef\u5206\u672b\u516c\u5f0f\u672b\u5c3e\u5904\u7684 n \\cdot \\omega_i \u3002 \u76ee\u524d\u5b58\u5728\u7740\u8bb8\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u6a21\u578b\u6765\u5b9e\u73b0BRDF\u7684\u6f2b\u53cd\u5c04\u90e8\u5206\uff0c\u5927\u591a\u770b\u4e0a\u53bb\u90fd\u76f8\u5f53\u771f\u5b9e\uff0c\u4f46\u662f\u76f8\u5e94\u7684\u8fd0\u7b97\u5f00\u9500\u4e5f\u975e\u5e38\u7684\u6602\u8d35\u3002\u4e0d\u8fc7\u6309\u7167Epic\u516c\u53f8\u7ed9\u51fa\u7684\u7ed3\u8bba\uff0cLambertian\u6f2b\u53cd\u5c04\u6a21\u578b\u5df2\u7ecf\u8db3\u591f\u5e94\u4ed8\u5927\u591a\u6570\u5b9e\u65f6\u6e32\u67d3\u7684\u7528\u9014\u4e86\u3002 BRDF\u7684\u955c\u9762\u53cd\u5c04\u90e8\u5206\u8981\u7a0d\u5fae\u66f4\u9ad8\u7ea7\u4e00\u4e9b\uff0c\u5b83\u7684\u5f62\u5f0f\u5982\u4e0b\u6240\u793a\uff1a f_{cook-torrance} = \\frac{DFG}{4(\\omega_o \\cdot n)(\\omega_i \\cdot n)} Cook-Torrance BRDF\u7684\u955c\u9762\u53cd\u5c04\u90e8\u5206\u5305\u542b\u4e09\u4e2a\u51fd\u6570\uff0c\u6b64\u5916\u5206\u6bcd\u90e8\u5206\u8fd8\u6709\u4e00\u4e2a\u6807\u51c6\u5316\u56e0\u5b50 \u3002\u5b57\u6bcdD\uff0cF\u4e0eG\u5206\u522b\u4ee3\u8868\u7740\u4e00\u79cd\u7c7b\u578b\u7684\u51fd\u6570\uff0c\u5404\u4e2a\u51fd\u6570\u5206\u522b\u7528\u6765\u8fd1\u4f3c\u7684\u8ba1\u7b97\u51fa\u8868\u9762\u53cd\u5c04\u7279\u6027\u7684\u4e00\u4e2a\u7279\u5b9a\u90e8\u5206\u3002\u4e09\u4e2a\u51fd\u6570\u5206\u522b\u4e3a\u6cd5\u7ebf\u5206\u5e03\u51fd\u6570(Normal D istribution Function)\uff0c\u83f2\u6d85\u5c14\u65b9\u7a0b( F resnel Rquation)\u548c\u51e0\u4f55\u51fd\u6570( G eometry Function)\uff1a \u6cd5\u7ebf\u5206\u5e03\u51fd\u6570 \uff1a\u4f30\u7b97\u5728\u53d7\u5230\u8868\u9762\u7c97\u7cd9\u5ea6\u7684\u5f71\u54cd\u4e0b\uff0c\u671d\u5411\u65b9\u5411\u4e0e\u534a\u7a0b\u5411\u91cf\u4e00\u81f4\u7684\u5fae\u5e73\u9762\u7684\u6570\u91cf\u3002\u8fd9\u662f\u7528\u6765\u4f30\u7b97\u5fae\u5e73\u9762\u7684\u4e3b\u8981\u51fd\u6570\u3002 \u51e0\u4f55\u51fd\u6570 \uff1a\u63cf\u8ff0\u4e86\u5fae\u5e73\u9762\u81ea\u6210\u9634\u5f71\u7684\u5c5e\u6027\u3002\u5f53\u4e00\u4e2a\u5e73\u9762\u76f8\u5bf9\u6bd4\u8f83\u7c97\u7cd9\u7684\u65f6\u5019\uff0c\u5e73\u9762\u8868\u9762\u4e0a\u7684\u5fae\u5e73\u9762\u6709\u53ef\u80fd\u6321\u4f4f\u5176\u4ed6\u7684\u5fae\u5e73\u9762\u4ece\u800c\u51cf\u5c11\u8868\u9762\u6240\u53cd\u5c04\u7684\u5149\u7ebf\u3002 \u83f2\u6d85\u5c14\u65b9\u7a0b \uff1a\u83f2\u6d85\u5c14\u65b9\u7a0b\u63cf\u8ff0\u7684\u662f\u5728\u4e0d\u540c\u7684\u8868\u9762\u89d2\u4e0b\u8868\u9762\u6240\u53cd\u5c04\u7684\u5149\u7ebf\u6240\u5360\u7684\u6bd4\u7387\u3002 \u4ee5\u4e0a\u7684\u6bcf\u4e00\u79cd\u51fd\u6570\u90fd\u662f\u7528\u6765\u4f30\u7b97\u76f8\u5e94\u7684\u7269\u7406\u53c2\u6570\u7684\uff0c\u800c\u4e14\u4f60\u4f1a\u53d1\u73b0\u7528\u6765\u5b9e\u73b0\u76f8\u5e94\u7269\u7406\u673a\u5236\u7684\u6bcf\u79cd\u51fd\u6570\u90fd\u6709\u4e0d\u6b62\u4e00\u79cd\u5f62\u5f0f\u3002\u5b83\u4eec\u6709\u7684\u975e\u5e38\u771f\u5b9e\uff0c\u6709\u7684\u5219\u6027\u80fd\u9ad8\u6548\u3002\u4f60\u53ef\u4ee5\u6309\u7167\u81ea\u5df1\u7684\u9700\u6c42\u4efb\u610f\u9009\u62e9\u81ea\u5df1\u60f3\u8981\u7684\u51fd\u6570\u7684\u5b9e\u73b0\u65b9\u6cd5\u3002\u82f1\u4f69\u6e38\u620f\u516c\u53f8\u7684Brian Karis\u5bf9\u4e8e\u8fd9\u4e9b\u51fd\u6570\u7684\u591a\u79cd\u8fd1\u4f3c\u5b9e\u73b0\u65b9\u5f0f\u8fdb\u884c\u4e86\u5927\u91cf\u7684 \u7814\u7a76 \u3002\u6211\u4eec\u5c06\u4f1a\u91c7\u7528Epic Games\u5728Unreal Engine 4\u4e2d\u6240\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u5176\u4e2dD\u4f7f\u7528Trowbridge-Reitz GGX\uff0cF\u4f7f\u7528Fresnel-Schlick\u8fd1\u4f3c(Fresnel-Schlick Approximation)\uff0c\u800cG\u4f7f\u7528Smith\u2019s Schlick-GGX\u3002","title":"BRDF"},{"location":"07%20PBR/01%20Theory/#_5","text":"\u6cd5\u7ebf\u5206\u5e03\u51fd\u6570 D \uff0c\u4ece\u7edf\u8ba1\u5b66\u4e0a\u8fd1\u4f3c\u5730\u8868\u793a\u4e86\u4e0e\u67d0\u4e9b\uff08\u534a\u7a0b\uff09\u5411\u91cf h \u53d6\u5411\u4e00\u81f4\u7684\u5fae\u5e73\u9762\u7684\u6bd4\u7387\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5047\u8bbe\u7ed9\u5b9a\u5411\u91cf h \uff0c\u5982\u679c\u6211\u4eec\u7684\u5fae\u5e73\u9762\u4e2d\u670935%\u4e0e\u5411\u91cf h \u53d6\u5411\u4e00\u81f4\uff0c\u5219\u6cd5\u7ebf\u5206\u5e03\u51fd\u6570\u6216\u8005\u8bf4NDF\u5c06\u4f1a\u8fd4\u56de0.35\u3002\u76ee\u524d\u6709\u5f88\u591a\u79cdNDF\u90fd\u53ef\u4ee5\u4ece\u7edf\u8ba1\u5b66\u4e0a\u6765\u4f30\u7b97\u5fae\u5e73\u9762\u7684\u603b\u4f53\u53d6\u5411\u5ea6\uff0c\u53ea\u8981\u7ed9\u5b9a\u4e00\u4e9b\u7c97\u7cd9\u5ea6\u7684\u53c2\u6570\u3002\u6211\u4eec\u9a6c\u4e0a\u5c06\u8981\u7528\u5230\u7684\u662fTrowbridge-Reitz GGX\uff1a NDF_{GGX TR}(n, h, \\alpha) = \\frac{\\alpha^2}{\\pi((n \\cdot h)^2 (\\alpha^2 - 1) + 1)^2} \u5728\u8fd9\u91cc h \u8868\u793a\u7528\u6765\u4e0e\u5e73\u9762\u4e0a\u5fae\u5e73\u9762\u505a\u6bd4\u8f83\u7528\u7684\u534a\u7a0b\u5411\u91cf\uff0c\u800c a \u8868\u793a\u8868\u9762\u7c97\u7cd9\u5ea6\u3002 \u5982\u679c\u6211\u4eec\u628a h \u5f53\u6210\u662f\u4e0d\u540c\u7c97\u7cd9\u5ea6\u53c2\u6570\u4e0b\uff0c\u5e73\u9762\u6cd5\u5411\u91cf\u548c\u5149\u7ebf\u65b9\u5411\u5411\u91cf\u4e4b\u95f4\u7684\u4e2d\u95f4\u5411\u91cf\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u56fe\u793a\u7684\u6548\u679c\uff1a \u5f53\u7c97\u7cd9\u5ea6\u5f88\u4f4e\uff08\u4e5f\u5c31\u662f\u8bf4\u8868\u9762\u5f88\u5149\u6ed1\uff09\u7684\u65f6\u5019\uff0c\u4e0e\u534a\u7a0b\u5411\u91cf\u53d6\u5411\u4e00\u81f4\u7684\u5fae\u5e73\u9762\u4f1a\u9ad8\u5ea6\u96c6\u4e2d\u5728\u4e00\u4e2a\u5f88\u5c0f\u7684\u534a\u5f84\u8303\u56f4\u5185\u3002\u7531\u4e8e\u8fd9\u79cd\u96c6\u4e2d\u6027\uff0cNDF\u6700\u7ec8\u4f1a\u751f\u6210\u4e00\u4e2a\u975e\u5e38\u660e\u4eae\u7684\u6591\u70b9\u3002\u4f46\u662f\u5f53\u8868\u9762\u6bd4\u8f83\u7c97\u7cd9\u7684\u65f6\u5019\uff0c\u5fae\u5e73\u9762\u7684\u53d6\u5411\u65b9\u5411\u4f1a\u66f4\u52a0\u7684\u968f\u673a\u3002\u4f60\u5c06\u4f1a\u53d1\u73b0\u4e0e h \u5411\u91cf\u53d6\u5411\u4e00\u81f4\u7684\u5fae\u5e73\u9762\u5206\u5e03\u5728\u4e00\u4e2a\u5927\u5f97\u591a\u7684\u534a\u5f84\u8303\u56f4\u5185\uff0c\u4f46\u662f\u540c\u65f6\u8f83\u4f4e\u7684\u96c6\u4e2d\u6027\u4e5f\u4f1a\u8ba9\u6211\u4eec\u7684\u6700\u7ec8\u6548\u679c\u663e\u5f97\u66f4\u52a0\u7070\u6697\u3002 \u4f7f\u7528GLSL\u4ee3\u7801\u7f16\u5199\u7684Trowbridge-Reitz GGX\u6cd5\u7ebf\u5206\u5e03\u51fd\u6570\u662f\u4e0b\u9762\u8fd9\u4e2a\u6837\u5b50\u7684\uff1a float D_GGX_TR(vec3 N, vec3 H, float a) { float a2 = a*a; float NdotH = max(dot(N, H), 0.0); float NdotH2 = NdotH*NdotH; float nom = a2; float denom = (NdotH2 * (a2 - 1.0) + 1.0); denom = PI * denom * denom; return nom / denom; }","title":"\u6cd5\u7ebf\u5206\u5e03\u51fd\u6570"},{"location":"07%20PBR/01%20Theory/#_6","text":"\u51e0\u4f55\u51fd\u6570\u4ece\u7edf\u8ba1\u5b66\u4e0a\u8fd1\u4f3c\u7684\u6c42\u5f97\u4e86\u5fae\u5e73\u9762\u95f4\u76f8\u4e92\u906e\u853d\u7684\u6bd4\u7387\uff0c\u8fd9\u79cd\u76f8\u4e92\u906e\u853d\u4f1a\u635f\u8017\u5149\u7ebf\u7684\u80fd\u91cf\u3002 \u4e0eNDF\u7c7b\u4f3c\uff0c\u51e0\u4f55\u51fd\u6570\u91c7\u7528\u4e00\u4e2a\u6750\u6599\u7684\u7c97\u7cd9\u5ea6\u53c2\u6570\u4f5c\u4e3a\u8f93\u5165\u53c2\u6570\uff0c\u7c97\u7cd9\u5ea6\u8f83\u9ad8\u7684\u8868\u9762\u5176\u5fae\u5e73\u9762\u95f4\u76f8\u4e92\u906e\u853d\u7684\u6982\u7387\u5c31\u8d8a\u9ad8\u3002\u6211\u4eec\u5c06\u8981\u4f7f\u7528\u7684\u51e0\u4f55\u51fd\u6570\u662fGGX\u4e0eSchlick-Beckmann\u8fd1\u4f3c\u7684\u7ed3\u5408\u4f53\uff0c\u56e0\u6b64\u53c8\u79f0\u4e3aSchlick-GGX\uff1a G_{SchlickGGX}(n, v, k) = \\frac{n \\cdot v}{(n \\cdot v)(1 - k) + k } \u8fd9\u91cc\u7684 k \u662f \\alpha \u7684\u91cd\u6620\u5c04(Remapping)\uff0c\u53d6\u51b3\u4e8e\u6211\u4eec\u8981\u7528\u7684\u662f\u9488\u5bf9\u76f4\u63a5\u5149\u7167\u8fd8\u662f\u9488\u5bf9IBL\u5149\u7167\u7684\u51e0\u4f55\u51fd\u6570: k_{direct} = \\frac{(\\alpha + 1)^2}{8} k_{IBL} = \\frac{\\alpha^2}{2} \u6ce8\u610f\uff0c\u6839\u636e\u4f60\u7684\u5f15\u64ce\u628a\u7c97\u7cd9\u5ea6\u8f6c\u5316\u4e3a \\alpha \u7684\u65b9\u5f0f\u4e0d\u540c\uff0c\u5f97\u5230 \\alpha \u7684\u503c\u4e5f\u6709\u53ef\u80fd\u4e0d\u540c\u3002\u5728\u63a5\u4e0b\u6765\u7684\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u5e7f\u6cdb\u7684\u8ba8\u8bba\u8fd9\u4e2a\u91cd\u6620\u5c04\u662f\u5982\u4f55\u8d77\u4f5c\u7528\u7684\u3002 \u4e3a\u4e86\u6709\u6548\u7684\u4f30\u7b97\u51e0\u4f55\u90e8\u5206\uff0c\u9700\u8981\u5c06\u89c2\u5bdf\u65b9\u5411\uff08\u51e0\u4f55\u906e\u853d(Geometry Obstruction)\uff09\u548c\u5149\u7ebf\u65b9\u5411\u5411\u91cf\uff08\u51e0\u4f55\u9634\u5f71(Geometry Shadowing)\uff09\u90fd\u8003\u8651\u8fdb\u53bb\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u53f2\u5bc6\u65af\u6cd5 (Smith\u2019s method)\u6765\u628a\u4e24\u8005\u90fd\u7eb3\u5165\u5176\u4e2d\uff1a G(n, v, l, k) = G_{sub}(n, v, k) G_{sub}(n, l, k) \u4f7f\u7528\u53f2\u5bc6\u65af\u6cd5\u4e0eSchlick-GGX\u4f5c\u4e3a G_{sub} \u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u6240\u793a\u4e0d\u540c\u7c97\u7cd9\u5ea6\u7684\u89c6\u89c9\u6548\u679c\uff1a \u51e0\u4f55\u51fd\u6570\u662f\u4e00\u4e2a\u503c\u57df\u4e3a[0.0, 1.0]\u7684\u4e58\u6570\uff0c\u5176\u4e2d\u767d\u8272\u6216\u8005\u8bf41.0\u8868\u793a\u6ca1\u6709\u5fae\u5e73\u9762\u9634\u5f71\uff0c\u800c\u9ed1\u8272\u6216\u8005\u8bf40.0\u5219\u8868\u793a\u5fae\u5e73\u9762\u5f7b\u5e95\u88ab\u906e\u853d\u3002 \u4f7f\u7528GLSL\u7f16\u5199\u7684\u51e0\u4f55\u51fd\u6570\u4ee3\u7801\u5982\u4e0b\uff1a float GeometrySchlickGGX(float NdotV, float k) { float nom = NdotV; float denom = NdotV * (1.0 - k) + k; return nom / denom; } float GeometrySmith(vec3 N, vec3 V, vec3 L, float k) { float NdotV = max(dot(N, V), 0.0); float NdotL = max(dot(N, L), 0.0); float ggx1 = GeometrySchlickGGX(NdotV, k); float ggx2 = GeometrySchlickGGX(NdotL, k); return ggx1 * ggx2; }","title":"\u51e0\u4f55\u51fd\u6570"},{"location":"07%20PBR/01%20Theory/#_7","text":"\u83f2\u6d85\u5c14\uff08\u53d1\u97f3\u4e3aFreh-nel\uff09\u65b9\u7a0b\u63cf\u8ff0\u7684\u662f\u88ab\u53cd\u5c04\u7684\u5149\u7ebf\u5bf9\u6bd4\u5149\u7ebf\u88ab\u6298\u5c04\u7684\u90e8\u5206\u6240\u5360\u7684\u6bd4\u7387\uff0c\u8fd9\u4e2a\u6bd4\u7387\u4f1a\u968f\u7740\u6211\u4eec\u89c2\u5bdf\u7684\u89d2\u5ea6\u4e0d\u540c\u800c\u4e0d\u540c\u3002\u5f53\u5149\u7ebf\u78b0\u649e\u5230\u4e00\u4e2a\u8868\u9762\u7684\u65f6\u5019\uff0c\u83f2\u6d85\u5c14\u65b9\u7a0b\u4f1a\u6839\u636e\u89c2\u5bdf\u89d2\u5ea6\u544a\u8bc9\u6211\u4eec\u88ab\u53cd\u5c04\u7684\u5149\u7ebf\u6240\u5360\u7684\u767e\u5206\u6bd4\u3002\u5229\u7528\u8fd9\u4e2a\u53cd\u5c04\u6bd4\u7387\u548c\u80fd\u91cf\u5b88\u6052\u539f\u5219\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5f97\u51fa\u5149\u7ebf\u88ab\u6298\u5c04\u7684\u90e8\u5206\u4ee5\u53ca\u5149\u7ebf\u5269\u4f59\u7684\u80fd\u91cf\u3002 \u5f53\u5782\u76f4\u89c2\u5bdf\u7684\u65f6\u5019\uff0c\u4efb\u4f55\u7269\u4f53\u6216\u8005\u6750\u8d28\u8868\u9762\u90fd\u6709\u4e00\u4e2a \u57fa\u7840\u53cd\u5c04\u7387 (Base Reflectivity)\uff0c\u4f46\u662f\u5982\u679c\u4ee5\u4e00\u5b9a\u7684\u89d2\u5ea6\u5f80\u5e73\u9762\u4e0a\u770b\u7684\u65f6\u5019 \u6240\u6709 \u53cd\u5149\u90fd\u4f1a\u53d8\u5f97\u660e\u663e\u8d77\u6765\u3002\u4f60\u53ef\u4ee5\u81ea\u5df1\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u7528\u5782\u76f4\u7684\u89c6\u89d2\u89c2\u5bdf\u4f60\u81ea\u5df1\u7684\u6728\u5236/\u91d1\u5c5e\u684c\u9762\uff0c\u6b64\u65f6\u4e00\u5b9a\u53ea\u6709\u6700\u57fa\u672c\u7684\u53cd\u5c04\u6027\u3002\u4f46\u662f\u5982\u679c\u4f60\u4ece\u8fd1\u4e4e90\u5ea6\uff08\u8bd1\u6ce8\uff1a\u5e94\u8be5\u662f\u6307\u548c\u6cd5\u7ebf\u7684\u5939\u89d2\uff09\u7684\u89d2\u5ea6\u89c2\u5bdf\u7684\u8bdd\u53cd\u5149\u5c31\u4f1a\u53d8\u5f97\u660e\u663e\u7684\u591a\u3002\u5982\u679c\u4ece\u7406\u60f3\u768490\u5ea6\u89c6\u89d2\u89c2\u5bdf\uff0c\u6240\u6709\u7684\u5e73\u9762\u7406\u8bba\u4e0a\u6765\u8bf4\u90fd\u80fd\u5b8c\u5168\u7684\u53cd\u5c04\u5149\u7ebf\u3002\u8fd9\u79cd\u73b0\u8c61\u56e0 \u83f2\u6d85\u5c14 \u800c\u95fb\u540d\uff0c\u5e76\u4f53\u73b0\u5728\u4e86\u83f2\u6d85\u5c14\u65b9\u7a0b\u4e4b\u4e2d\u3002 \u83f2\u6d85\u5c14\u65b9\u7a0b\u662f\u4e00\u4e2a\u76f8\u5f53\u590d\u6742\u7684\u65b9\u7a0b\u5f0f\uff0c\u4e0d\u8fc7\u5e78\u8fd0\u7684\u662f\u83f2\u6d85\u5c14\u65b9\u7a0b\u53ef\u4ee5\u7528 Fresnel-Schlick \u8fd1\u4f3c\u6cd5\u6c42\u5f97\u8fd1\u4f3c\u89e3\uff1a F_{Schlick}(h, v, F_0) = F_0 + (1 - F_0) ( 1 - (h \\cdot v))^5 F_0 \u8868\u793a\u5e73\u9762\u7684\u57fa\u7840\u53cd\u5c04\u7387\uff0c\u5b83\u662f\u5229\u7528\u6240\u8c13 \u6298\u5c04\u6307\u6570 (Indices of Refraction)\u6216\u8005\u8bf4IOR\u8ba1\u7b97\u5f97\u51fa\u7684\u3002\u7136\u540e\u6b63\u5982\u4f60\u53ef\u4ee5\u4ece\u7403\u4f53\u8868\u9762\u770b\u5230\u7684\u90a3\u6837\uff0c\u6211\u4eec\u8d8a\u662f\u671d\u7403\u9762\u63a0\u89d2\u7684\u65b9\u5411\u4e0a\u770b\uff08\u6b64\u65f6\u89c6\u7ebf\u548c\u8868\u9762\u6cd5\u7ebf\u7684\u5939\u89d2\u63a5\u8fd190\u5ea6\uff09\u83f2\u6d85\u5c14\u73b0\u8c61\u5c31\u8d8a\u660e\u663e\uff0c\u53cd\u5149\u5c31\u8d8a\u5f3a\uff1a \u83f2\u6d85\u5c14\u65b9\u7a0b\u8fd8\u5b58\u5728\u4e00\u4e9b\u7ec6\u5fae\u7684\u95ee\u9898\u3002\u5176\u4e2d\u4e00\u4e2a\u95ee\u9898\u662fFresnel-Schlick\u8fd1\u4f3c\u4ec5\u4ec5\u5bf9 \u7535\u4ecb\u8d28 \u6216\u8005\u8bf4\u975e\u91d1\u5c5e\u8868\u9762\u6709\u5b9a\u4e49\u3002\u5bf9\u4e8e \u5bfc\u4f53 (Conductor)\u8868\u9762\uff08\u91d1\u5c5e\uff09\uff0c\u4f7f\u7528\u5b83\u4eec\u7684\u6298\u5c04\u6307\u6570\u8ba1\u7b97\u57fa\u7840\u6298\u5c04\u7387\u5e76\u4e0d\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u4e00\u79cd\u4e0d\u540c\u7684\u83f2\u6d85\u5c14\u65b9\u7a0b\u6765\u5bf9\u5bfc\u4f53\u8868\u9762\u8fdb\u884c\u8ba1\u7b97\u3002\u7531\u4e8e\u8fd9\u6837\u5f88\u4e0d\u65b9\u4fbf\uff0c\u6240\u4ee5\u6211\u4eec\u9884\u8ba1\u7b97\u51fa\u5e73\u9762\u5bf9\u4e8e \u6cd5\u5411\u5165\u5c04 \u7684\u7ed3\u679c\uff08 F_0 \uff0c\u5904\u4e8e0\u5ea6\u89d2\uff0c\u597d\u50cf\u76f4\u63a5\u770b\u5411\u8868\u9762\u4e00\u6837\uff09\uff0c\u7136\u540e\u57fa\u4e8e\u76f8\u5e94\u89c2\u5bdf\u89d2\u7684Fresnel-Schlick\u8fd1\u4f3c\u5bf9\u8fd9\u4e2a\u503c\u8fdb\u884c\u63d2\u503c\uff0c\u7528\u8fd9\u79cd\u65b9\u6cd5\u6765\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u4f30\u7b97\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u5bf9\u91d1\u5c5e\u548c\u975e\u91d1\u5c5e\u6750\u8d28\u4f7f\u7528\u540c\u4e00\u4e2a\u516c\u5f0f\u4e86\u3002 \u5e73\u9762\u5bf9\u4e8e\u6cd5\u5411\u5165\u5c04\u7684\u54cd\u5e94\u6216\u8005\u8bf4\u57fa\u7840\u53cd\u5c04\u7387\u53ef\u4ee5\u5728\u4e00\u4e9b\u5927\u578b\u6570\u636e\u5e93\u4e2d\u627e\u5230\uff0c\u6bd4\u5982 \u8fd9\u4e2a \u3002\u4e0b\u9762\u5217\u4e3e\u7684\u8fd9\u4e00\u4e9b\u5e38\u89c1\u6570\u503c\u5c31\u662f\u4eceNaty Hoffman\u7684\u8bfe\u7a0b\u8bb2\u4e49\u4e2d\u6240\u5f97\u5230\u7684\uff1a \u6750\u6599 \\(F_0\\) (\u7ebf\u6027) \\(F_0\\) (sRGB) \u989c\u8272 \u6c34 (0.02, 0.02, 0.02) (0.15, 0.15, 0.15) \u5851\u6599/\u73bb\u7483\uff08\u4f4e\uff09 (0.03, 0.03, 0.03) (0.21, 0.21, 0.21) \u5851\u6599\uff08\u9ad8\uff09 (0.05, 0.05, 0.05) (0.24, 0.24, 0.24) \u73bb\u7483\uff08\u9ad8\uff09/\u7ea2\u5b9d\u77f3 (0.08, 0.08, 0.08) (0.31, 0.31, 0.31) \u94bb\u77f3 (0.17, 0.17, 0.17) (0.45, 0.45, 0.45) \u94c1 (0.56, 0.57, 0.58) (0.77, 0.78, 0.78) \u94dc (0.95, 0.64, 0.54) (0.98, 0.82, 0.76) \u91d1 (1.00, 0.71, 0.29) (1.00, 0.86, 0.57) \u94dd (0.91, 0.92, 0.92) (0.96, 0.96, 0.97) \u94f6 (0.95, 0.93, 0.88) (0.98, 0.97, 0.95) \u8fd9\u91cc\u53ef\u4ee5\u89c2\u5bdf\u5230\u7684\u4e00\u4e2a\u6709\u8da3\u7684\u73b0\u8c61\uff0c\u6240\u6709\u7535\u4ecb\u8d28\u6750\u8d28\u8868\u9762\u7684\u57fa\u7840\u53cd\u5c04\u7387\u90fd\u4e0d\u4f1a\u9ad8\u4e8e0.17\uff0c\u8fd9\u5176\u5b9e\u662f\u4f8b\u5916\u800c\u975e\u666e\u904d\u60c5\u51b5\u3002\u5bfc\u4f53\u6750\u8d28\u8868\u9762\u7684\u57fa\u7840\u53cd\u5c04\u7387\u8d77\u70b9\u66f4\u9ad8\u4e00\u4e9b\u5e76\u4e14\uff08\u5927\u591a\uff09\u57280.5\u548c1.0\u4e4b\u95f4\u53d8\u5316\u3002\u6b64\u5916\uff0c\u5bf9\u4e8e\u5bfc\u4f53\u6216\u8005\u91d1\u5c5e\u8868\u9762\u800c\u8a00\u57fa\u7840\u53cd\u5c04\u7387\u4e00\u822c\u662f\u5e26\u6709\u8272\u5f69\u7684\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48 F_0 \u8981\u7528RGB\u4e09\u539f\u8272\u6765\u8868\u793a\u7684\u539f\u56e0\uff08\u6cd5\u5411\u5165\u5c04\u7684\u53cd\u5c04\u7387\u53ef\u968f\u6ce2\u957f\u4e0d\u540c\u800c\u4e0d\u540c\uff09\u3002\u8fd9\u79cd\u73b0\u8c61\u6211\u4eec \u53ea\u80fd \u5728\u91d1\u5c5e\u8868\u9762\u89c2\u5bdf\u7684\u5230\u3002 \u8fd9\u4e9b\u91d1\u5c5e\u8868\u9762\u76f8\u6bd4\u4e8e\u7535\u4ecb\u8d28\u8868\u9762\u6240\u72ec\u6709\u7684\u7279\u6027\u5f15\u51fa\u4e86\u6240\u8c13\u7684 \u91d1\u5c5e\u5de5\u4f5c\u6d41 \u7684\u6982\u5ff5\u3002\u4e5f\u5c31\u662f\u6211\u4eec\u9700\u8981\u989d\u5916\u4f7f\u7528\u4e00\u4e2a\u88ab\u79f0\u4e3a \u91d1\u5c5e\u5ea6 (Metalness)\u7684\u53c2\u6570\u6765\u53c2\u4e0e\u7f16\u5199\u8868\u9762\u6750\u8d28\u3002\u91d1\u5c5e\u5ea6\u7528\u6765\u63cf\u8ff0\u4e00\u4e2a\u6750\u8d28\u8868\u9762\u662f\u91d1\u5c5e\u8fd8\u662f\u975e\u91d1\u5c5e\u7684\u3002 Important \u7406\u8bba\u4e0a\u6765\u8bf4\uff0c\u4e00\u4e2a\u8868\u9762\u7684\u91d1\u5c5e\u5ea6\u5e94\u8be5\u662f\u4e8c\u5143\u7684\uff1a\u8981\u4e48\u662f\u91d1\u5c5e\u8981\u4e48\u4e0d\u662f\u91d1\u5c5e\uff0c\u4e0d\u80fd\u4e24\u8005\u7686\u662f\u3002\u4f46\u662f\uff0c\u5927\u591a\u6570\u7684\u6e32\u67d3\u7ba1\u7ebf\u90fd\u5141\u8bb8\u57280.0\u81f31.0\u4e4b\u95f4\u7ebf\u6027\u7684\u8c03\u914d\u91d1\u5c5e\u5ea6\u3002\u8fd9\u4e3b\u8981\u662f\u7531\u4e8e\u6750\u8d28\u7eb9\u7406\u7cbe\u5ea6\u4e0d\u8db3\u4ee5\u63cf\u8ff0\u4e00\u4e2a\u62e5\u6709\u8bf8\u5982\u7ec6\u6c99/\u6c99\u72b6\u7c92\u5b50/\u522e\u75d5\u7684\u91d1\u5c5e\u8868\u9762\u3002\u901a\u8fc7\u5bf9\u8fd9\u4e9b\u5c0f\u7684\u7c7b\u975e\u91d1\u5c5e\u7c92\u5b50/\u522e\u75d5\u8c03\u6574\u91d1\u5c5e\u5ea6\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u975e\u5e38\u597d\u770b\u7684\u89c6\u89c9\u6548\u679c\u3002 \u901a\u8fc7\u9884\u5148\u8ba1\u7b97\u7535\u4ecb\u8d28\u4e0e\u5bfc\u4f53\u7684 F_0 \u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e24\u79cd\u7c7b\u578b\u7684\u8868\u9762\u4f7f\u7528\u76f8\u540c\u7684Fresnel-Schlick\u8fd1\u4f3c\uff0c\u4f46\u662f\u5982\u679c\u662f\u91d1\u5c5e\u8868\u9762\u7684\u8bdd\u5c31\u9700\u8981\u5bf9\u57fa\u7840\u53cd\u5c04\u7387\u6dfb\u52a0\u8272\u5f69\u3002\u6211\u4eec\u4e00\u822c\u662f\u6309\u4e0b\u9762\u8fd9\u6837\u6765\u5b9e\u73b0\u7684\uff1a vec3 F0 = vec3(0.04); F0 = mix(F0, surfaceColor.rgb, metalness); \u6211\u4eec\u4e3a\u5927\u591a\u6570\u7535\u4ecb\u8d28\u8868\u9762\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8fd1\u4f3c\u7684\u57fa\u7840\u53cd\u5c04\u7387\u3002 F_0 \u53d6\u6700\u5e38\u89c1\u7684\u7535\u89e3\u8d28\u8868\u9762\u7684\u5e73\u5747\u503c\uff0c\u8fd9\u53c8\u662f\u4e00\u4e2a\u8fd1\u4f3c\u503c\u3002\u4e0d\u8fc7\u5bf9\u4e8e\u5927\u591a\u6570\u7535\u4ecb\u8d28\u8868\u9762\u800c\u8a00\u4f7f\u75280.04\u4f5c\u4e3a\u57fa\u7840\u53cd\u5c04\u7387\u5df2\u7ecf\u8db3\u591f\u597d\u4e86\uff0c\u800c\u4e14\u53ef\u4ee5\u5728\u4e0d\u9700\u8981\u8f93\u5165\u989d\u5916\u8868\u9762\u53c2\u6570\u7684\u60c5\u51b5\u4e0b\u5f97\u5230\u7269\u7406\u53ef\u4fe1\u7684\u7ed3\u679c\u3002\u7136\u540e\uff0c\u57fa\u4e8e\u91d1\u5c5e\u8868\u9762\u7279\u6027\uff0c\u6211\u4eec\u8981\u4e48\u4f7f\u7528\u7535\u4ecb\u8d28\u7684\u57fa\u7840\u53cd\u5c04\u7387\u8981\u4e48\u5c31\u4f7f\u7528 F_0 \u6765\u4f5c\u4e3a\u8868\u9762\u989c\u8272\u3002\u56e0\u4e3a\u91d1\u5c5e\u8868\u9762\u4f1a\u5438\u6536\u6240\u6709\u6298\u5c04\u5149\u7ebf\u800c\u6ca1\u6709\u6f2b\u53cd\u5c04\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8868\u9762\u989c\u8272\u7eb9\u7406\u6765\u4f5c\u4e3a\u5b83\u4eec\u7684\u57fa\u7840\u53cd\u5c04\u7387\u3002 Fresnel Schlick\u8fd1\u4f3c\u53ef\u4ee5\u7528\u4ee3\u7801\u8868\u793a\u4e3a\uff1a vec3 fresnelSchlick(float cosTheta, vec3 F0) { return F0 + (1.0 - F0) * pow(1.0 - cosTheta, 5.0); } \u5176\u4e2d cosTheta \u662f\u8868\u9762\u6cd5\u5411\u91cf n \u4e0e\u89c2\u5bdf\u65b9\u5411 v \u7684\u70b9\u4e58\u7684\u7ed3\u679c\u3002","title":"\u83f2\u6d85\u5c14\u65b9\u7a0b"},{"location":"07%20PBR/01%20Theory/#cook-torrance","text":"\u968f\u7740Cook-Torrance BRDF\u4e2d\u6240\u6709\u5143\u7d20\u90fd\u4ecb\u7ecd\u5b8c\u6bd5\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5c06\u57fa\u4e8e\u7269\u7406\u7684BRDF\u7eb3\u5165\u5230\u6700\u7ec8\u7684\u53cd\u5c04\u7387\u65b9\u7a0b\u5f53\u4e2d\u53bb\u4e86\uff1a L_o(p,\\omega_o) = \\int\\limits_{\\Omega} (k_d\\frac{c}{\\pi} + k_s\\frac{DFG}{4(\\omega_o \\cdot n)(\\omega_i \\cdot n)})L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \u8fd9\u4e2a\u65b9\u7a0b\u73b0\u5728\u5b8c\u6574\u7684\u63cf\u8ff0\u4e86\u4e00\u4e2a\u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3\u6a21\u578b\uff0c\u5b83\u73b0\u5728\u53ef\u4ee5\u8ba4\u4e3a\u5c31\u662f\u6211\u4eec\u4e00\u822c\u610f\u4e49\u4e0a\u7406\u89e3\u7684\u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3\u4e5f\u5c31\u662fPBR\u3002\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u80fd\u5b8c\u5168\u7406\u89e3\u6211\u4eec\u5c06\u5982\u4f55\u628a\u6240\u6709\u8fd9\u4e9b\u6570\u5b66\u8fd0\u7b97\u7ed3\u5408\u5230\u4e00\u8d77\u5e76\u878d\u5165\u5230\u4ee3\u7801\u5f53\u4e2d\u53bb\u7684\u8bdd\u4e5f\u4e0d\u5fc5\u62c5\u5fc3\u3002\u5728\u4e0b\u4e00\u4e2a\u6559\u7a0b\u5f53\u4e2d\uff0c\u6211\u4eec\u5c06\u63a2\u7d22\u5982\u4f55\u5b9e\u73b0\u53cd\u5c04\u7387\u65b9\u7a0b\u6765\u5728\u6211\u4eec\u6e32\u67d3\u7684\u5149\u7167\u5f53\u4e2d\u83b7\u5f97\u66f4\u52a0\u7269\u7406\u53ef\u4fe1\u7684\u7ed3\u679c\uff0c\u800c\u6240\u6709\u8fd9\u4e9b\u96f6\u96f6\u661f\u661f\u7684\u788e\u7247\u5c06\u4f1a\u6162\u6162\u7ec4\u5408\u5230\u4e00\u8d77\u6765\u3002","title":"Cook-Torrance\u53cd\u5c04\u7387\u65b9\u7a0b"},{"location":"07%20PBR/01%20Theory/#pbr","text":"\u5728\u4e86\u89e3\u4e86PBR\u540e\u9762\u7684\u6570\u5b66\u6a21\u578b\u4e4b\u540e\uff0c\u6700\u540e\u6211\u4eec\u5c06\u901a\u8fc7\u8bf4\u660e\u7f8e\u672f\u5e08\u4e00\u822c\u662f\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8f93\u5165PBR\u7684\u5e73\u9762\u7269\u7406\u5c5e\u6027\u7684\u6765\u7ed3\u675f\u8fd9\u90e8\u5206\u7684\u8ba8\u8bba\u3002PBR\u6e32\u67d3\u7ba1\u7ebf\u6240\u9700\u8981\u7684\u6bcf\u4e00\u4e2a\u8868\u9762\u53c2\u6570\u90fd\u53ef\u4ee5\u7528\u7eb9\u7406\u6765\u5b9a\u4e49\u6216\u8005\u5efa\u6a21\u3002\u4f7f\u7528\u7eb9\u7406\u53ef\u4ee5\u8ba9\u6211\u4eec\u9010\u4e2a\u7247\u6bb5\u7684\u6765\u63a7\u5236\u6bcf\u4e2a\u8868\u9762\u4e0a\u7279\u5b9a\u7684\u70b9\u5bf9\u4e8e\u5149\u7ebf\u662f\u5982\u4f55\u54cd\u5e94\u7684\uff1a\u4e0d\u8bba\u90a3\u4e2a\u70b9\u662f\u4e0d\u662f\u91d1\u5c5e\uff0c\u7c97\u7cd9\u6216\u8005\u5e73\u6ed1\uff0c\u4e5f\u4e0d\u8bba\u8868\u9762\u5bf9\u4e8e\u4e0d\u540c\u6ce2\u957f\u7684\u5149\u4f1a\u6709\u5982\u4f55\u7684\u53cd\u5e94\u3002 \u5728\u4e0b\u9762\u4f60\u53ef\u4ee5\u770b\u5230\u5728\u4e00\u4e2aPBR\u6e32\u67d3\u7ba1\u7ebf\u5f53\u4e2d\u7ecf\u5e38\u4f1a\u78b0\u5230\u7684\u7eb9\u7406\u5217\u8868\uff0c\u8fd8\u6709\u5c06\u5b83\u4eec\u8f93\u5165PBR\u6e32\u67d3\u5668\u6240\u80fd\u5f97\u5230\u7684\u76f8\u5e94\u7684\u89c6\u89c9\u8f93\u51fa\uff1a \u53cd\u7167\u7387 \uff1a \u53cd\u7167\u7387 (Albedo)\u7eb9\u7406\u4e3a\u6bcf\u4e00\u4e2a\u91d1\u5c5e\u7684\u7eb9\u7d20(Texel)\uff08\u7eb9\u7406\u50cf\u7d20\uff09\u6307\u5b9a\u8868\u9762\u989c\u8272\u6216\u8005\u57fa\u7840\u53cd\u5c04\u7387\u3002\u8fd9\u548c\u6211\u4eec\u4e4b\u524d\u4f7f\u7528\u8fc7\u7684\u6f2b\u53cd\u5c04\u7eb9\u7406\u76f8\u5f53\u7c7b\u4f3c\uff0c\u4e0d\u540c\u7684\u662f\u6240\u6709\u5149\u7167\u4fe1\u606f\u90fd\u662f\u7531\u4e00\u4e2a\u7eb9\u7406\u4e2d\u63d0\u53d6\u7684\u3002\u6f2b\u53cd\u5c04\u7eb9\u7406\u7684\u56fe\u50cf\u5f53\u4e2d\u5e38\u5e38\u5305\u542b\u4e00\u4e9b\u7ec6\u5c0f\u7684\u9634\u5f71\u6216\u8005\u6df1\u8272\u7684\u88c2\u7eb9\uff0c\u800c\u53cd\u7167\u7387\u7eb9\u7406\u4e2d\u662f\u4e0d\u4f1a\u6709\u8fd9\u4e9b\u4e1c\u897f\u7684\u3002\u5b83\u5e94\u8be5\u53ea\u5305\u542b\u8868\u9762\u7684\u989c\u8272\uff08\u6216\u8005\u6298\u5c04\u5438\u6536\u7cfb\u6570\uff09\u3002 \u6cd5\u7ebf \uff1a\u6cd5\u7ebf\u8d34\u56fe\u7eb9\u7406\u548c\u6211\u4eec\u4e4b\u524d\u5728 \u6cd5\u7ebf\u8d34\u56fe \u6559\u7a0b\u4e2d\u6240\u4f7f\u7528\u7684\u8d34\u56fe\u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002\u6cd5\u7ebf\u8d34\u56fe\u4f7f\u6211\u4eec\u53ef\u4ee5\u9010\u7247\u6bb5\u7684\u6307\u5b9a\u72ec\u7279\u7684\u6cd5\u7ebf\uff0c\u6765\u4e3a\u8868\u9762\u5236\u9020\u51fa\u8d77\u4f0f\u4e0d\u5e73\u7684\u5047\u8c61\u3002 \u91d1\u5c5e\u5ea6 \uff1a\u91d1\u5c5e(Metallic)\u8d34\u56fe\u9010\u4e2a\u7eb9\u7d20\u7684\u6307\u5b9a\u8be5\u7eb9\u7d20\u662f\u4e0d\u662f\u91d1\u5c5e\u8d28\u5730\u7684\u3002\u6839\u636ePBR\u5f15\u64ce\u8bbe\u7f6e\u7684\u4e0d\u540c\uff0c\u7f8e\u672f\u5e08\u4eec\u65e2\u53ef\u4ee5\u5c06\u91d1\u5c5e\u5ea6\u7f16\u5199\u4e3a\u7070\u5ea6\u503c\u53c8\u53ef\u4ee5\u7f16\u5199\u4e3a1\u62160\u8fd9\u6837\u7684\u4e8c\u5143\u503c\u3002 \u7c97\u7cd9\u5ea6 \uff1a\u7c97\u7cd9\u5ea6(Roughness)\u8d34\u56fe\u53ef\u4ee5\u4ee5\u7eb9\u7d20\u4e3a\u5355\u4f4d\u6307\u5b9a\u67d0\u4e2a\u8868\u9762\u6709\u591a\u7c97\u7cd9\u3002\u91c7\u6837\u5f97\u6765\u7684\u7c97\u7cd9\u5ea6\u6570\u503c\u4f1a\u5f71\u54cd\u4e00\u4e2a\u8868\u9762\u7684\u5fae\u5e73\u9762\u7edf\u8ba1\u5b66\u4e0a\u7684\u53d6\u5411\u5ea6\u3002\u4e00\u4e2a\u6bd4\u8f83\u7c97\u7cd9\u7684\u8868\u9762\u4f1a\u5f97\u5230\u66f4\u5bbd\u9614\u66f4\u6a21\u7cca\u7684\u955c\u9762\u53cd\u5c04\uff08\u9ad8\u5149\uff09\uff0c\u800c\u4e00\u4e2a\u6bd4\u8f83\u5149\u6ed1\u7684\u8868\u9762\u5219\u4f1a\u5f97\u5230\u96c6\u4e2d\u800c\u6e05\u6670\u7684\u955c\u9762\u53cd\u5c04\u3002\u67d0\u4e9bPBR\u5f15\u64ce\u9884\u8bbe\u91c7\u7528\u7684\u662f\u5bf9\u67d0\u4e9b\u7f8e\u672f\u5e08\u6765\u8bf4\u66f4\u52a0\u76f4\u89c2\u7684 \u5149\u6ed1\u5ea6 (Smoothness)\u8d34\u56fe\u800c\u975e\u7c97\u7cd9\u5ea6\u8d34\u56fe\uff0c\u4e0d\u8fc7\u8fd9\u4e9b\u6570\u503c\u5728\u91c7\u6837\u4e4b\u65f6\u5c31\u9a6c\u4e0a\u7528\uff081.0 \u2013 \u5149\u6ed1\u5ea6\uff09\u8f6c\u6362\u6210\u4e86\u7c97\u7cd9\u5ea6\u3002 AO \uff1a \u73af\u5883\u5149\u906e\u853d (Ambient Occlusion)\u8d34\u56fe\u6216\u8005\u8bf4 AO \u8d34\u56fe\u4e3a\u8868\u9762\u548c\u5468\u56f4\u6f5c\u5728\u7684\u51e0\u4f55\u56fe\u5f62\u6307\u5b9a\u4e86\u4e00\u4e2a\u989d\u5916\u7684\u9634\u5f71\u56e0\u5b50\u3002\u6bd4\u5982\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u7816\u5757\u8868\u9762\uff0c\u53cd\u7167\u7387\u7eb9\u7406\u4e0a\u7684\u7816\u5757\u88c2\u7f1d\u90e8\u5206\u5e94\u8be5\u6ca1\u6709\u4efb\u4f55\u9634\u5f71\u4fe1\u606f\u3002\u7136\u800cAO\u8d34\u56fe\u5219\u4f1a\u628a\u90a3\u4e9b\u5149\u7ebf\u8f83\u96be\u9003\u9038\u51fa\u6765\u7684\u6697\u8272\u8fb9\u7f18\u6307\u5b9a\u51fa\u6765\u3002\u5728\u5149\u7167\u7684\u7ed3\u5c3e\u9636\u6bb5\u5f15\u5165\u73af\u5883\u906e\u853d\u53ef\u4ee5\u660e\u663e\u7684\u63d0\u5347\u4f60\u573a\u666f\u7684\u89c6\u89c9\u6548\u679c\u3002\u7f51\u683c/\u8868\u9762\u7684\u73af\u5883\u906e\u853d\u8d34\u56fe\u8981\u4e48\u901a\u8fc7\u624b\u52a8\u751f\u6210\uff0c\u8981\u4e48\u75313D\u5efa\u6a21\u8f6f\u4ef6\u81ea\u52a8\u751f\u6210\u3002 \u7f8e\u672f\u5e08\u4eec\u53ef\u4ee5\u5728\u7eb9\u7d20\u7ea7\u522b\u8bbe\u7f6e\u6216\u8c03\u6574\u8fd9\u4e9b\u57fa\u4e8e\u7269\u7406\u7684\u8f93\u5165\u503c\uff0c\u8fd8\u53ef\u4ee5\u4ee5\u73b0\u5b9e\u4e16\u754c\u6750\u6599\u7684\u8868\u9762\u7269\u7406\u6027\u8d28\u6765\u5efa\u7acb\u4ed6\u4eec\u7684\u6750\u8d28\u6570\u636e\u3002\u8fd9\u662fPBR\u6e32\u67d3\u7ba1\u7ebf\u6700\u5927\u7684\u4f18\u52bf\u4e4b\u4e00\uff0c\u56e0\u4e3a\u4e0d\u8bba\u73af\u5883\u6216\u8005\u5149\u7167\u7684\u8bbe\u7f6e\u5982\u4f55\u6539\u53d8\u8fd9\u4e9b\u8868\u9762\u7684\u6027\u8d28\u662f\u4e0d\u4f1a\u6539\u53d8\u7684\uff0c\u8fd9\u4f7f\u5f97\u7f8e\u672f\u5e08\u4eec\u53ef\u4ee5\u66f4\u4fbf\u6377\u5730\u83b7\u53d6\u7269\u7406\u53ef\u4fe1\u7684\u7ed3\u679c\u3002\u5728PBR\u6e32\u67d3\u7ba1\u7ebf\u4e2d\u7f16\u5199\u7684\u8868\u9762\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u7684\u5728\u4e0d\u540c\u7684PBR\u6e32\u67d3\u5f15\u64ce\u95f4\u5171\u4eab\u4f7f\u7528\uff0c\u4e0d\u8bba\u5904\u4e8e\u4f55\u79cd\u73af\u5883\u4e2d\u5b83\u4eec\u770b\u4e0a\u53bb\u90fd\u4f1a\u662f\u6b63\u786e\u7684\uff0c\u56e0\u6b64\u770b\u4e0a\u53bb\u4e5f\u4f1a\u66f4\u81ea\u7136\u3002","title":"\u7f16\u5199PBR\u6750\u8d28"},{"location":"07%20PBR/01%20Theory/#_8","text":"Background: Physics and Math of Shading by Naty Hoffmann \uff1a\u7531\u4e8e\u5728\u8fd9\u4e00\u7bc7\u6587\u7ae0\u4e2d\u8981\u8c08\u8bba\u7684\u7406\u8bba\u70b9\u592a\u591a\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684\u7406\u8bba\u77e5\u8bc6\u90fd\u53ea\u662f\u6d89\u53ca\u5230\u4e86\u76ae\u6bdb\u3002\u5982\u679c\u4f60\u5e0c\u671b\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u5149\u7ebf\u80cc\u540e\u7684\u7269\u7406\u77e5\u8bc6\u4ee5\u53ca\u5b83\u4eec\u548cPBR\u7406\u8bba\u4e4b\u95f4\u6709\u4ec0\u4e48\u5173\u8054\u7684\u8bdd\uff0c \u8fd9 \u624d\u662f\u4f60\u9700\u8981\u9605\u8bfb\u7684\u8d44\u6e90\u3002 Real shading in Unreal Engine 4 \uff1a\u63a2\u8ba8\u4e86Epic Games\u5728\u4ed6\u4eec\u7684Unreal 4\u5f15\u64ce\u4e2d\u6240\u91c7\u7528\u7684PBR\u6a21\u578b\u3002\u6211\u4eec\u8fd9\u4e9b\u6559\u7a0b\u4e2d\u4e3b\u8981\u6d89\u53ca\u7684PBR\u7cfb\u7edf\u5c31\u662f\u57fa\u4e8e\u4ed6\u4eec\u7684PBR\u6a21\u578b\u3002 Marmoset: PBR Theory \uff1a\u4e3b\u8981\u9488\u5bf9\u7f8e\u672f\u5e08\u7684PBR\u4ecb\u7ecd\uff0c\u4e0d\u8fc7\u4ecd\u7136\u662f\u5f88\u597d\u7684\u8bfb\u7269\u3002 Coding Labs: Physically based rendering \uff1a\u4ecb\u7ecd\u6e32\u67d3\u65b9\u7a0b\u4ee5\u53ca\u5b83\u548cPBR\u76f4\u63a5\u7684\u5173\u7cfb\u3002 Coding Labs: Physically Based Rendering - Cook\u2013Torrance \uff1a\u4ecb\u7ecd\u4e86Cook-Torrance BRDF. Wolfire Games - Physically based rendering \uff1a\u4ecb\u7ecd\u4e86PBR\uff0c\u7531Lukas Orsv\u00e4rn\u6240\u8457\u3002","title":"\u5ef6\u4f38\u9605\u8bfb"},{"location":"07%20PBR/02%20Lighting/","text":"\u5149\u7167 \u539f\u6587 Lighting \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 KenLee \u6821\u5bf9 JeremyYvv \u5728 \u4e0a\u4e00\u4e2a\u6559\u7a0b \u4e2d\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u4e00\u4e9bPBR\u7684\u57fa\u7840\u77e5\u8bc6\u3002\u5728\u672c\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u628a\u91cd\u70b9\u653e\u5728\u5c06\u4e4b\u524d\u8ba8\u8bba\u7684\u7406\u8bba\u8f6c\u5316\u4e3a\u5b9e\u9645\u7684\u6e32\u67d3\u5668\uff0c\u8fd9\u4e2a\u6e32\u67d3\u5668\u5c06\u4f7f\u7528\u76f4\u63a5\u7684\uff08\u6216\u89e3\u6790\u7684\uff09\u5149\u6e90\uff1a\u6bd4\u5982\u70b9\u5149\u6e90\uff0c\u5b9a\u5411\u706f\u6216\u805a\u5149\u706f\u3002 \u6211\u4eec\u5148\u6765\u770b\u770b\u4e0a\u4e00\u4e2a\u7ae0\u63d0\u5230\u7684\u53cd\u5c04\u65b9\u7a0b\u7684\u6700\u7ec8\u7248\uff1a L_o(p,\\omega_o) = \\int\\limits_{\\Omega} (k_d\\frac{c}{\\pi} + k_s\\frac{DFG}{4(\\omega_o \\cdot n)(\\omega_i \\cdot n)}) L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \u6211\u4eec\u5927\u81f4\u4e0a\u6e05\u695a\u8fd9\u4e2a\u53cd\u5c04\u65b9\u7a0b\u5728\u5e72\u4ec0\u4e48\uff0c\u4f46\u6211\u4eec\u4ecd\u7136\u7559\u6709\u4e00\u4e9b\u8ff7\u96fe\u5c1a\u672a\u63ed\u5f00\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u7a76\u7adf\u5c06\u600e\u6837\u8868\u793a\u573a\u666f\u4e0a\u7684\u8f90\u7167\u5ea6(Irradiance), \u8f90\u5c04\u7387(Radiance) L \uff1f\u6211\u4eec\u77e5\u9053\u8f90\u5c04\u7387 L \uff08\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u9886\u57df\u4e2d\uff09\u8868\u793a\u5149\u6e90\u7684\u8f90\u5c04\u901a\u91cf(Radiant flux) \\phi \uff0c\u6216\u5149\u6e90\u5728\u7ed9\u5b9a\u7acb\u4f53\u89d2 \\omega \u4e0b\u53d1\u51fa\u7684\u5149\u80fd\u3002\u5728\u6211\u4eec\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u59a8\u5047\u8bbe\u7acb\u4f53\u89d2 \\omega \u65e0\u9650\u5c0f\uff0c\u8fd9\u6837\u8f90\u5c04\u5ea6\u5c31\u8868\u793a\u5149\u6e90\u5728\u4e00\u6761\u5149\u7ebf\u6216\u5355\u4e2a\u65b9\u5411\u5411\u91cf\u4e0a\u7684\u8f90\u5c04\u901a\u91cf\u3002 \u57fa\u4e8e\u4ee5\u4e0a\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u5982\u4f55\u5c06\u5176\u8f6c\u5316\u4e3a\u4e4b\u524d\u7684\u6559\u7a0b\u4e2d\u6240\u79ef\u7d2f\u7684\u4e00\u4e9b\u5149\u7167\u77e5\u8bc6\u5462\uff1f \u90a3\u4e48\u60f3\u8c61\u4e00\u4e0b\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u70b9\u5149\u6e90\uff08\u4e00\u4e2a\u5728\u6240\u6709\u65b9\u5411\u90fd\u5177\u6709\u76f8\u540c\u4eae\u5ea6\u7684\u5149\u6e90\uff09\uff0c\u5b83\u7684\u8f90\u5c04\u901a\u91cf\u4e3a\u7528RGB\u8868\u793a\u4e3a \uff0823.47, 21.31, 20.79\uff09 \u3002\u8be5\u5149\u6e90\u7684\u8f90\u5c04\u5f3a\u5ea6(Radiant Intensity)\u7b49\u4e8e\u5176\u5728\u6240\u6709\u51fa\u5c04\u5149\u7ebf\u7684\u8f90\u5c04\u901a\u91cf\u3002 \u7136\u800c\uff0c\u5f53\u6211\u4eec\u4e3a\u4e00\u4e2a\u8868\u9762\u4e0a\u7684\u7279\u5b9a\u7684\u70b9 p \u7740\u8272\u65f6\uff0c\u5728\u5176\u534a\u7403\u9886\u57df \\Omega \u7684\u6240\u6709\u53ef\u80fd\u7684\u5165\u5c04\u65b9\u5411\u4e0a\uff0c\u53ea\u6709\u4e00\u4e2a\u5165\u5c04\u65b9\u5411\u5411\u91cf \\omega_i \u76f4\u63a5\u6765\u81ea\u4e8e\u8be5\u70b9\u5149\u6e90\u3002 \u5047\u8bbe\u6211\u4eec\u5728\u573a\u666f\u4e2d\u53ea\u6709\u4e00\u4e2a\u5149\u6e90\uff0c\u4f4d\u4e8e\u7a7a\u95f4\u4e2d\u7684\u67d0\u4e00\u4e2a\u70b9\uff0c\u56e0\u800c\u5bf9\u4e8e p \u70b9\u7684\u5176\u4ed6\u53ef\u80fd\u7684\u5165\u5c04\u5149\u7ebf\u65b9\u5411\u4e0a\u7684\u8f90\u5c04\u7387\u4e3a0\uff1a \u5982\u679c\u4ece\u4e00\u5f00\u59cb\uff0c\u6211\u4eec\u5c31\u5047\u8bbe\u70b9\u5149\u6e90\u4e0d\u53d7\u5149\u7ebf\u8870\u51cf\uff08\u5149\u7167\u5f3a\u5ea6\u4f1a\u968f\u7740\u8ddd\u79bb\u53d8\u6697\uff09\u7684\u5f71\u54cd\uff0c\u90a3\u4e48\u65e0\u8bba\u6211\u4eec\u628a\u5149\u6e90\u653e\u5728\u54ea\uff0c\u5165\u5c04\u5149\u7ebf\u7684\u8f90\u5c04\u7387\u603b\u662f\u4e00\u6837\u7684\uff08\u9664\u53bb\u5165\u5c04\u89d2 cos\\theta \u5bf9\u8f90\u5c04\u7387\u7684\u5f71\u54cd\u4e4b\u5916\uff09\u3002 \u8fd9\u662f\u56e0\u4e3a\u65e0\u8bba\u6211\u4eec\u4ece\u54ea\u4e2a\u89d2\u5ea6\u89c2\u5bdf\u5b83\uff0c\u70b9\u5149\u6e90\u603b\u5177\u6709\u76f8\u540c\u7684\u8f90\u5c04\u5f3a\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u6709\u6548\u5730\u5c06\u5176\u8f90\u5c04\u5f3a\u5ea6\u5efa\u6a21\u4e3a\u5176\u8f90\u5c04\u901a\u91cf: \u4e00\u4e2a\u5e38\u91cf\u5411\u91cf \uff0823.47, 21.31, 20.79\uff09 \u3002 \u7136\u800c\uff0c\u8f90\u5c04\u7387\u4e5f\u9700\u8981\u5c06\u4f4d\u7f6e p \u4f5c\u4e3a\u8f93\u5165\uff0c\u6b63\u5982\u6240\u6709\u73b0\u5b9e\u7684\u70b9\u5149\u6e90\u90fd\u4f1a\u53d7\u5149\u7ebf\u8870\u51cf\u5f71\u54cd\u4e00\u6837\uff0c\u70b9\u5149\u6e90\u7684\u8f90\u5c04\u5f3a\u5ea6\u5e94\u8be5\u6839\u636e\u70b9 p \u6240\u5728\u7684\u4f4d\u7f6e\u548c\u5149\u6e90\u7684\u4f4d\u7f6e\u4ee5\u53ca\u4ed6\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb\u800c\u505a\u4e00\u4e9b\u7f29\u653e\u3002 \u56e0\u6b64\uff0c\u6839\u636e\u539f\u59cb\u7684\u8f90\u5c04\u65b9\u7a0b\uff0c\u6211\u4eec\u4f1a\u6839\u636e\u8868\u9762\u6cd5\u5411\u91cf n \u548c\u5165\u5c04\u89d2\u5ea6 w_i \u6765\u7f29\u653e\u5149\u6e90\u7684\u8f90\u5c04\u5f3a\u5ea6\u3002 \u5728\u5b9e\u73b0\u4e0a\u6765\u8bf4\uff1a\u5bf9\u4e8e\u76f4\u63a5\u70b9\u5149\u6e90\u7684\u60c5\u51b5\uff0c\u8f90\u5c04\u7387\u51fd\u6570 L \u5148\u83b7\u53d6\u5149\u6e90\u7684\u989c\u8272\u503c\uff0c \u7136\u540e\u5149\u6e90\u548c\u67d0\u70b9 p \u7684\u8ddd\u79bb\u8870\u51cf\uff0c\u63a5\u7740\u6309\u7167 n \\cdot w_i \u7f29\u653e\uff0c\u4f46\u662f\u4ec5\u4ec5\u6709\u4e00\u6761\u5165\u5c04\u89d2\u4e3a w_i \u7684\u5149\u7ebf\u6253\u5728\u70b9 p \u4e0a\uff0c \u8fd9\u4e2a w_i \u540c\u65f6\u4e5f\u7b49\u4e8e\u5728 p \u70b9\u5149\u6e90\u7684\u65b9\u5411\u5411\u91cf\u3002\u5199\u6210\u4ee3\u7801\u7684\u8bdd\u4f1a\u662f\u8fd9\u6837\uff1a vec3 lightColor = vec3(23.47, 21.31, 20.79); vec3 wi = normalize(lightPos - fragPos); float cosTheta = max(dot(N, Wi), 0.0); float attenuation = calculateAttenuation(fragPos, lightPos); float radiance = lightColor * attenuation * cosTheta; \u9664\u4e86\u4e00\u4e9b\u672f\u8bed\u4e0a\u7684\u5dee\u5f02\u5916\uff0c\u8fd9\u6bb5\u4ee3\u7801\u5bf9\u4f60\u4eec\u6765\u8bf4\u5e94\u8be5\u5f88\u719f\u6089\uff1a\u8fd9\u6b63\u662f\u6211\u4eec\u4e00\u76f4\u4ee5\u6765\u600e\u4e48\u8ba1\u7b97\u6f2b\u53cd\u5c04\u5149\u7167\u7684\uff01\u5f53\u6d89\u53ca\u5230\u76f4\u63a5\u5149\u7167(direct lighting)\u65f6\uff0c\u8f90\u5c04\u7387\u7684\u8ba1\u7b97\u65b9\u5f0f\u548c\u6211\u4eec\u4e4b\u524d\u8ba1\u7b97\u53ea\u6709\u4e00\u4e2a\u5149\u6e90\u7167\u5c04\u5728\u7269\u4f53\u8868\u9762\u7684\u65f6\u5019\u975e\u5e38\u76f8\u4f3c\u3002 Important \u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e2a\u5047\u8bbe\u6210\u7acb\u7684\u6761\u4ef6\u662f\u70b9\u5149\u6e90\u4f53\u79ef\u65e0\u9650\u5c0f\uff0c\u76f8\u5f53\u4e8e\u5728\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u70b9\u3002\u5982\u679c\u6211\u4eec\u8ba4\u4e3a\u8be5\u5149\u6e90\u662f\u5177\u6709\u4f53\u79ef\u7684\uff0c\u5b83\u7684\u8f90\u5c04\u7387\u4f1a\u5728\u4e0d\u53ea\u4e00\u4e2a\u5165\u5c04\u5149\u65b9\u5411\u4e0a\u975e\u96f6\u3002 \u5bf9\u4e8e\u5176\u5b83\u7c7b\u578b\u7684\u4ece\u5355\u70b9\u53d1\u51fa\u6765\u7684\u5149\u6e90\u6211\u4eec\u7c7b\u4f3c\u5730\u8ba1\u7b97\u51fa\u8f90\u5c04\u7387\u3002\u6bd4\u5982\uff0c\u5b9a\u5411\u5149(directional light)\u62e5\u6709\u6052\u5b9a\u7684 w_i \u800c\u4e0d\u4f1a\u6709\u8870\u51cf\u56e0\u5b50\uff1b\u800c\u4e00\u4e2a\u805a\u5149\u706f\u5149\u6e90\u5219\u6ca1\u6709\u6052\u5b9a\u7684\u8f90\u5c04\u5f3a\u5ea6\uff0c\u5176\u8f90\u5c04\u5f3a\u5ea6\u662f\u6839\u636e\u805a\u5149\u706f\u7684\u65b9\u5411\u5411\u91cf\u6765\u7f29\u653e\u7684\u3002 \u8fd9\u4e5f\u8ba9\u6211\u4eec\u56de\u5230\u4e86\u5bf9\u4e8e\u8868\u9762\u7684\u534a\u7403\u9886\u57df(hemisphere) \\Omega \u7684\u79ef\u5206 \\int \u4e0a\u3002\u7531\u4e8e\u6211\u4eec\u4e8b\u5148\u77e5\u9053\u7684\u6240\u6709\u8d21\u732e\u5149\u6e90\u7684\u4f4d\u7f6e\uff0c\u56e0\u6b64\u5bf9\u7269\u4f53\u8868\u9762\u4e0a\u7684\u4e00\u4e2a\u70b9\u7740\u8272\u5e76\u4e0d\u9700\u8981\u6211\u4eec\u5c1d\u8bd5\u53bb\u6c42\u89e3\u79ef\u5206\u3002\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u62ff\u5149\u6e90\u7684\uff08\u5df2\u77e5\u7684\uff09\u6570\u76ee\uff0c\u53bb\u8ba1\u7b97\u5b83\u4eec\u7684\u603b\u8f90\u7167\u5ea6\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5149\u6e90\u4ec5\u4ec5\u53ea\u6709\u4e00\u4e2a\u65b9\u5411\u4e0a\u7684\u5149\u7ebf\u4f1a\u5f71\u54cd\u7269\u4f53\u8868\u9762\u7684\u8f90\u5c04\u7387\u3002\u8fd9\u4f7f\u5f97PBR\u5bf9\u76f4\u63a5\u5149\u6e90\u7684\u8ba1\u7b97\u76f8\u5bf9\u7b80\u5355\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u8981\u6709\u6548\u5730\u904d\u5386\u6240\u6709\u6709\u8d21\u732e\u7684\u5149\u6e90\u3002\u800c\u5f53\u6211\u4eec\u4e4b\u540e\u628a\u73af\u5883\u7167\u660e\u4e5f\u8003\u8651\u5728\u5185\u7684 IBL \u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c31\u5fc5\u987b\u91c7\u53d6\u79ef\u5206\u53bb\u8ba1\u7b97\u4e86\uff0c\u8fd9\u662f\u56e0\u4e3a\u5149\u7ebf\u53ef\u80fd\u4f1a\u5728\u4efb\u4f55\u4e00\u4e2a\u65b9\u5411\u5165\u5c04\u3002 \u4e00\u4e2aPBR\u8868\u9762\u6a21\u578b \u73b0\u5728\u8ba9\u6211\u4eec\u5f00\u59cb\u5199\u7247\u6bb5\u7740\u8272\u5668\u6765\u5b9e\u73b0\u4e0a\u8ff0\u7684PBR\u6a21\u578b\u5427~ \u9996\u5148\u6211\u4eec\u9700\u8981\u628aPBR\u76f8\u5173\u7684\u8f93\u5165\u653e\u8fdb\u7247\u6bb5\u7740\u8272\u5668\u3002 #version 330 core out vec4 FragColor; in vec2 TexCoords; in vec3 WorldPos; in vec3 Normal; uniform vec3 camPos; uniform vec3 albedo; uniform float metallic; uniform float roughness; uniform float ao; \u6211\u4eec\u628a\u901a\u7528\u7684\u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u51fa\u4f5c\u4e3a\u8f93\u5165\u7684\u4e00\u90e8\u5206\u3002\u53e6\u4e00\u90e8\u5206\u8f93\u5165\u5219\u662f\u7269\u4f53\u8868\u9762\u6a21\u578b\u7684\u4e00\u4e9b\u6750\u8d28\u53c2\u6570\u3002 \u7136\u540e\u5728\u7247\u6bb5\u7740\u8272\u5668\u7684\u5f00\u59cb\u90e8\u5206\u6211\u4eec\u505a\u4e00\u4e0b\u4efb\u4f55\u5149\u7167\u7b97\u6cd5\u90fd\u9700\u8981\u505a\u7684\u8ba1\u7b97: void main() { vec3 N = normalize(Normal); vec3 V = normalize(camPos - WorldPos); [...] } \u76f4\u63a5\u5149\u7167 \u5728\u672c\u6559\u7a0b\u7684\u4f8b\u5b50\u4e2d\u6211\u4eec\u4f1a\u91c7\u7528\u603b\u51714\u4e2a\u70b9\u5149\u6e90\u6765\u76f4\u63a5\u8868\u793a\u573a\u666f\u7684\u8f90\u7167\u5ea6\u3002\u4e3a\u4e86\u6ee1\u8db3\u53cd\u5c04\u7387\u65b9\u7a0b\uff0c\u6211\u4eec\u5faa\u73af\u904d\u5386\u6bcf\u4e00\u4e2a\u5149\u6e90\uff0c\u8ba1\u7b97\u4ed6\u4eec\u5404\u81ea\u7684\u8f90\u5c04\u7387\u7136\u540e\u6c42\u548c\uff0c\u63a5\u7740\u6839\u636eBRDF\u548c\u5149\u6e90\u7684\u5165\u5c04\u89d2\u6765\u7f29\u653e\u8be5\u8f90\u5c04\u7387\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u5faa\u73af\u5f53\u4f5c\u5728\u7269\u4f53\u7684\u534a\u7403\u9886\u57df\u5185\u5bf9\u6240\u6709\u76f4\u63a5\u5149\u6e90\u6c42\u79ef\u5206\u3002\u9996\u5148\u6211\u4eec\u6765\u8ba1\u7b97\u4e00\u4e9b\u53ef\u4ee5\u9884\u8ba1\u7b97\u7684\u5149\u7167\u53d8\u91cf\uff1a vec3 Lo = vec3(0.0); for(int i = 0; i < 4; ++i) { vec3 L = normalize(lightPositions[i] - WorldPos); vec3 H = normalize(V + L); float distance = length(lightPositions[i] - WorldPos); float attenuation = 1.0 / (distance * distance); vec3 radiance = lightColors[i] * attenuation; [...] \u7531\u4e8e\u6211\u4eec\u5728\u7ebf\u6027\u7a7a\u95f4\u5185\u8ba1\u7b97\u5149\u7167\uff08\u6211\u4eec\u4f1a\u5728\u7740\u8272\u5668\u7684\u6700\u540e\u8fdb\u884cGamma\u6821\u6b63\uff09\uff0c\u6211\u4eec\u4f7f\u7528\u5728\u7269\u7406\u4e0a\u66f4\u4e3a\u51c6\u786e\u7684\u5e73\u65b9\u5012\u6570\u4f5c\u4e3a\u8870\u51cf\u3002 Important \u76f8\u5bf9\u4e8e\u7269\u7406\u4e0a\u6b63\u786e\u6765\u8bf4\uff0c\u4f60\u53ef\u80fd\u4ecd\u7136\u60f3\u4f7f\u7528\u5e38\u91cf\uff0c\u7ebf\u6027\u6216\u8005\u4e8c\u6b21\u8870\u51cf\u65b9\u7a0b\uff08\u4ed6\u4eec\u5728\u7269\u7406\u4e0a\u76f8\u5bf9\u4e0d\u51c6\u786e\uff09\uff0c\u5374\u53ef\u4ee5\u4e3a\u60a8\u63d0\u4f9b\u5728\u5149\u7684\u80fd\u91cf\u8870\u51cf\u66f4\u591a\u7684\u63a7\u5236\u3002 \u7136\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5149\u6e90\u6211\u4eec\u90fd\u60f3\u8ba1\u7b97\u5b8c\u6574\u7684 Cook-Torrance specular BRDF\u9879\uff1a \\frac{DFG}{4(\\omega_o \\cdot n)(\\omega_i \\cdot n)} \u9996\u5148\u6211\u4eec\u60f3\u8ba1\u7b97\u7684\u662f\u955c\u9762\u53cd\u5c04\u548c\u6f2b\u53cd\u5c04\u4e4b\u95f4\u7684\u6bd4\u503c\uff0c\u6216\u8005\u8bf4\u4e0e\u8868\u9762\u6298\u5c04\u7684\u5149\u7ebf\u76f8\u6bd4\uff0c\u5b83\u53cd\u5c04\u4e86\u591a\u5c11\u5149\u7ebf\u3002 \u6211\u4eec\u4ece \u4e0a\u4e00\u4e2a\u6559\u7a0b \u77e5\u9053\u53ef\u4ee5\u4f7f\u7528\u83f2\u6d85\u5c14\u65b9\u7a0b\u8ba1\u7b97\uff08\u6ce8\u610f\u8fd9\u91cc\u7528\u7684 clamp \u662f\u4e3a\u4e86\u907f\u514d\u9ed1\u70b9\uff09\uff1a vec3 fresnelSchlick(float cosTheta, vec3 F0) { return F0 + (1.0 - F0) * pow(clamp(1.0 - cosTheta, 0.0, 1.0), 5.0); } Fresnel-Schlick\u8fd1\u4f3c\u6cd5\u63a5\u6536\u4e00\u4e2a\u53c2\u6570 F0 \uff0c\u88ab\u79f0\u4e3a0\u00b0\u5165\u5c04\u89d2\u7684\u53cd\u5c04\u7387\uff0c\u6216\u8005\u8bf4\u662f\u76f4\u63a5(\u5782\u76f4)\u89c2\u5bdf\u8868\u9762\u65f6\u6709\u591a\u5c11\u5149\u7ebf\u4f1a\u88ab\u53cd\u5c04\u3002 \u8fd9\u4e2a\u53c2\u6570 F0 \u4f1a\u56e0\u4e3a\u6750\u6599\u4e0d\u540c\u800c\u4e0d\u540c\uff0c\u800c\u4e14\u5bf9\u4e8e\u91d1\u5c5e\u6750\u8d28\u4f1a\u5e26\u6709\u989c\u8272\u3002\u5728PBR\u91d1\u5c5e\u6d41\u4e2d\u6211\u4eec\u7b80\u5355\u5730\u8ba4\u4e3a\u5927\u591a\u6570\u7684\u7edd\u7f18\u4f53\u5728 F0 \u4e3a0.04\u7684\u65f6\u5019\u770b\u8d77\u6765\u89c6\u89c9\u4e0a\u662f\u6b63\u786e\u7684\uff0c\u5bf9\u4e8e\u91d1\u5c5e\u8868\u9762\u6211\u4eec\u6839\u636e\u53cd\u5c04\u7387\u7279\u522b\u5730\u6307\u5b9a F0 \u3002 \u56e0\u6b64\u4ee3\u7801\u4e0a\u770b\u8d77\u6765\u4f1a\u50cf\u662f\u8fd9\u6837\uff1a vec3 F0 = vec3(0.04); F0 = mix(F0, albedo, metallic); vec3 F = fresnelSchlick(max(dot(H, V), 0.0), F0); \u53ef\u4ee5\u770b\u5230\uff0c\u5bf9\u4e8e\u975e\u91d1\u5c5e\u8868\u9762 F0 \u59cb\u7ec8\u4e3a0.04\u3002\u5bf9\u4e8e\u91d1\u5c5e\u8868\u9762\uff0c\u6211\u4eec\u6839\u636e\u521d\u59cb\u7684 F0 \u548c\u8868\u73b0\u91d1\u5c5e\u5c5e\u6027\u7684\u53cd\u5c04\u7387\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\u3002 \u6211\u4eec\u5df2\u7ecf\u7b97\u51fa F \uff0c \u5269\u4e0b\u7684\u9879\u5c31\u662f\u8ba1\u7b97\u6cd5\u7ebf\u5206\u5e03\u51fd\u6570 D \u548c\u51e0\u4f55\u906e\u853d\u51fd\u6570 G \u4e86\u3002 \u5728\u76f4\u63a5PBR\u5149\u7167\u7740\u8272\u5668\u4e2d D \u548c G \u7684\u8ba1\u7b97\u4ee3\u7801\u7c7b\u4f3c\u4e8e\uff1a float DistributionGGX(vec3 N, vec3 H, float roughness) { float a = roughness*roughness; float a2 = a*a; float NdotH = max(dot(N, H), 0.0); float NdotH2 = NdotH*NdotH; float num = a2; float denom = (NdotH2 * (a2 - 1.0) + 1.0); denom = PI * denom * denom; return num / denom; } float GeometrySchlickGGX(float NdotV, float roughness) { float r = (roughness + 1.0); float k = (r*r) / 8.0; float num = NdotV; float denom = NdotV * (1.0 - k) + k; return num / denom; } float GeometrySmith(vec3 N, vec3 V, vec3 L, float roughness) { float NdotV = max(dot(N, V), 0.0); float NdotL = max(dot(N, L), 0.0); float ggx2 = GeometrySchlickGGX(NdotV, roughness); float ggx1 = GeometrySchlickGGX(NdotL, roughness); return ggx1 * ggx2; } \u8fd9\u91cc\u6bd4\u8f83\u91cd\u8981\u7684\u662f\u548c \u7406\u8bba\u7ae0\u8282 \u76f8\u6bd4\uff0c\u6211\u4eec\u76f4\u63a5\u628a\u7c97\u7cd9\u5ea6(roughness)\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9\u4e86\u4e0a\u8ff0\u51fd\u6570\uff1b\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u9488\u5bf9\u6bcf\u4e00\u4e2a\u4e0d\u540c\u7684\u9879\u5bf9\u7c97\u7cd9\u5ea6\u505a\u4e00\u4e9b\u4fee\u6539\u3002\u6839\u636e\u8fea\u58eb\u5c3c\u516c\u53f8\u7ed9\u51fa\u7684\u89c2\u5bdf\u4ee5\u53ca\u540e\u6765\u88abEpic Games\u516c\u53f8\u91c7\u7528\u7684\u5149\u7167\u6a21\u578b\uff0c\u5728\u51e0\u4f55\u906e\u853d\u51fd\u6570\u548c\u6cd5\u7ebf\u5206\u5e03\u51fd\u6570\u4e2d\u91c7\u7528\u7c97\u7cd9\u5ea6\u7684\u5e73\u65b9\u4f1a\u8ba9\u5149\u7167\u770b\u8d77\u6765\u66f4\u52a0\u81ea\u7136\u3002 \u73b0\u5728\u4e24\u4e2a\u51fd\u6570\u90fd\u7ed9\u51fa\u4e86\u5b9a\u4e49\uff0c\u5728\u8ba1\u7b97\u53cd\u5c04\u7684\u5faa\u73af\u4e2d\u8ba1\u7b97NDF\u548cG\u9879\u5c31\u53d8\u5f97\u5f88\u7b80\u5355\uff1a float NDF = DistributionGGX(N, H, roughness); float G = GeometrySmith(N, V, L, roughness); \u8fd9\u6837\u6211\u4eec\u5c31\u51d1\u591f\u4e86\u8db3\u591f\u7684\u9879\u6765\u8ba1\u7b97Cook-Torrance BRDF: vec3 nominator = NDF * G * F; float denominator = 4.0 * max(dot(N, V), 0.0) * max(dot(N, L), 0.0) + 0.001; vec3 specular = nominator / denominator; \u6ce8\u610f\u6211\u4eec\u5728\u5206\u6bcd\u9879\u4e2d\u52a0\u4e86\u4e00\u4e2a0.001\u4e3a\u4e86\u907f\u514d\u51fa\u73b0\u9664\u96f6\u9519\u8bef\u3002 \u73b0\u5728\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u8ba1\u7b97\u6bcf\u4e2a\u5149\u6e90\u5728\u53cd\u5c04\u7387\u65b9\u7a0b\u4e2d\u7684\u8d21\u732e\u503c\u4e86\uff01\u56e0\u4e3a\u83f2\u6d85\u5c14\u65b9\u7a0b\u76f4\u63a5\u7ed9\u51fa\u4e86 k_S \uff0c \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 F \u8868\u793a\u6240\u6709\u6253\u5728\u7269\u4f53\u8868\u9762\u4e0a\u7684\u955c\u9762\u53cd\u5c04\u5149\u7684\u8d21\u732e\u3002 \u4ece k_S \u6211\u4eec\u5f88\u5bb9\u6613\u8ba1\u7b97\u6298\u5c04\u7684\u6bd4\u503c k_D \uff1a vec3 kS = F; vec3 kD = vec3(1.0) - kS; kD *= 1.0 - metallic; \u6211\u4eec\u53ef\u4ee5\u770b\u4f5c k_S \u8868\u793a\u5149\u80fd\u4e2d\u88ab\u53cd\u5c04\u7684\u80fd\u91cf\u7684\u6bd4\u4f8b\uff0c \u800c\u5269\u4e0b\u7684\u5149\u80fd\u4f1a\u88ab\u6298\u5c04\uff0c \u6bd4\u503c\u5373\u4e3a k_D \u3002\u66f4\u8fdb\u4e00\u6b65\u6765\u8bf4\uff0c\u56e0\u4e3a\u91d1\u5c5e\u4e0d\u4f1a\u6298\u5c04\u5149\u7ebf\uff0c\u56e0\u6b64\u4e0d\u4f1a\u6709\u6f2b\u53cd\u5c04\u3002\u6240\u4ee5\u5982\u679c\u8868\u9762\u662f\u91d1\u5c5e\u7684\uff0c\u6211\u4eec\u4f1a\u628a\u7cfb\u6570 k_D \u53d8\u4e3a0\u3002 \u8fd9\u6837\uff0c\u6211\u4eec\u7ec8\u4e8e\u96c6\u9f50\u6240\u6709\u53d8\u91cf\u6765\u8ba1\u7b97\u6211\u4eec\u51fa\u5c04\u5149\u7ebf\u7684\u503c\uff1a const float PI = 3.14159265359; float NdotL = max(dot(N, L), 0.0); Lo += (kD * albedo / PI + specular) * radiance * NdotL; } \u6700\u7ec8\u7684\u7ed3\u679c Lo \uff0c\u6216\u8005\u8bf4\u662f\u51fa\u5c04\u5149\u7ebf\u7684\u8f90\u5c04\u7387\uff0c\u5b9e\u9645\u4e0a\u662f\u53cd\u5c04\u7387\u65b9\u7a0b\u7684\u5728\u534a\u7403\u9886\u57df \\Omega \u7684\u79ef\u5206\u7684\u7ed3\u679c\u3002\u4f46\u662f\u6211\u4eec\u5b9e\u9645\u4e0a\u4e0d\u9700\u8981\u53bb\u6c42\u79ef\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u6240\u6709\u53ef\u80fd\u7684\u5165\u5c04\u5149\u7ebf\u65b9\u5411\u6211\u4eec\u77e5\u9053\u53ea\u67094\u4e2a\u65b9\u5411\u7684\u5165\u5c04\u5149\u7ebf\u4f1a\u5f71\u54cd\u7247\u6bb5\u7684\u7740\u8272\u3002\u56e0\u4e3a\u8fd9\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5faa\u73afN\u6b21\u8ba1\u7b97\u8fd9\u4e9b\u5165\u5c04\u5149\u7ebf\u7684\u65b9\u5411(N\u4e5f\u5c31\u662f\u573a\u666f\u4e2d\u5149\u6e90\u7684\u6570\u76ee)\u3002 \u5269\u4e0b\u7684\u5de5\u4f5c\u5c31\u662f\u52a0\u4e00\u4e2a\u73af\u5883\u5149\u7167\u9879\u7ed9 Lo \uff0c\u7136\u540e\u6211\u4eec\u5c31\u62e5\u6709\u4e86\u7247\u6bb5\u7684\u6700\u540e\u989c\u8272\uff1a vec3 ambient = vec3(0.03) * albedo * ao; vec3 color = ambient + Lo; \u7ebf\u6027\u7a7a\u95f4\u548cHDR\u6e32\u67d3 \u76f4\u5230\u73b0\u5728\uff0c\u6211\u4eec\u5047\u8bbe\u7684\u6240\u6709\u8ba1\u7b97\u90fd\u5728\u7ebf\u6027\u7684\u989c\u8272\u7a7a\u95f4\u4e2d\u8fdb\u884c\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728\u7740\u8272\u5668\u6700\u540e\u505a \u4f3d\u9a6c\u77eb\u6b63 \u3002 \u5728\u7ebf\u6027\u7a7a\u95f4\u4e2d\u8ba1\u7b97\u5149\u7167\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u56e0\u4e3aPBR\u8981\u6c42\u6240\u6709\u8f93\u5165\u90fd\u662f\u7ebf\u6027\u7684\uff0c\u5982\u679c\u4e0d\u662f\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u4f1a\u5f97\u5230\u4e0d\u6b63\u5e38\u7684\u5149\u7167\u3002\u53e6\u5916\uff0c\u6211\u4eec\u5e0c\u671b\u6240\u6709\u5149\u7167\u7684\u8f93\u5165\u90fd\u5c3d\u53ef\u80fd\u7684\u63a5\u8fd1\u4ed6\u4eec\u5728\u7269\u7406\u4e0a\u7684\u53d6\u503c\uff0c\u8fd9\u6837\u4ed6\u4eec\u7684\u53cd\u5c04\u7387\u6216\u8005\u8bf4\u989c\u8272\u503c\u5c31\u4f1a\u5728\u8272\u8c31\u4e0a\u6709\u6bd4\u8f83\u5927\u7684\u53d8\u5316\u7a7a\u95f4\u3002 Lo \u4f5c\u4e3a\u7ed3\u679c\u53ef\u80fd\u4f1a\u53d8\u5927\u5f97\u5f88\u5feb(\u8d85\u8fc71)\uff0c\u4f46\u662f\u56e0\u4e3a\u9ed8\u8ba4\u7684\u4f4e\u52a8\u6001\u8303\u56f4\uff08LDR\uff09\u800c\u53d6\u503c\u88ab\u622a\u65ad\u3002\u6240\u4ee5\u5728\u4f3d\u9a6c\u77eb\u6b63\u4e4b\u524d\u6211\u4eec\u91c7\u7528\u8272\u8c03\u6620\u5c04\u4f7f Lo \u4eceLDR\u7684\u503c\u6620\u5c04\u4e3aHDR\u7684\u503c\u3002 color = color / (color + vec3(1.0)); color = pow(color, vec3(1.0/2.2)); \u8fd9\u91cc\u6211\u4eec\u91c7\u7528\u7684\u8272\u8c03\u6620\u5c04\u65b9\u6cd5\u4e3aReinhard \u64cd\u4f5c\uff0c\u4f7f\u5f97\u6211\u4eec\u5728\u4f3d\u9a6c\u77eb\u6b63\u540e\u53ef\u4ee5\u4fdd\u7559\u5c3d\u53ef\u80fd\u591a\u7684\u8f90\u7167\u5ea6\u53d8\u5316\u3002 \u6211\u4eec\u6ca1\u6709\u4f7f\u7528\u4e00\u4e2a\u72ec\u7acb\u7684\u5e27\u7f13\u51b2\u6216\u8005\u91c7\u7528\u540e\u671f\u5904\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u76f4\u63a5\u5728\u6bcf\u4e00\u6b65\u5149\u7167\u8ba1\u7b97\u540e\u91c7\u7528\u8272\u8c03\u6620\u5c04\u548c\u4f3d\u9a6c\u77eb\u6b63\u3002 \u91c7\u7528\u7ebf\u6027\u989c\u8272\u7a7a\u95f4\u548cHDR\u5728PBR\u6e32\u67d3\u7ba1\u7ebf\u4e2d\u975e\u5e38\u91cd\u8981\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u6b63\u786e\u5730\u6355\u83b7\u5230\u56e0\u5149\u7167\u5f3a\u5ea6\u53d8\u5316\u7684\u7ec6\u8282\uff0c\u8fd9\u6700\u7ec8\u4f1a\u5bfc\u81f4\u4f60\u7684\u8ba1\u7b97\u53d8\u5f97\u4e0d\u6b63\u786e\uff0c\u5728\u89c6\u89c9\u4e0a\u770b\u4e0a\u53bb\u975e\u5e38\u4e0d\u81ea\u7136\u3002 \u5b8c\u6574\u7684\u76f4\u63a5\u5149\u7167PBR\u7740\u8272\u5668 \u73b0\u5728\u5269\u4e0b\u7684\u4e8b\u60c5\u5c31\u662f\u628a\u505a\u597d\u8272\u8c03\u6620\u5c04\u548c\u4f3d\u9a6c\u77eb\u6b63\u7684\u989c\u8272\u503c\u4f20\u7ed9\u7247\u6bb5\u7740\u8272\u5668\u7684\u8f93\u51fa\uff0c\u7136\u540e\u6211\u4eec\u5c31\u62e5\u6709\u4e86\u81ea\u5df1\u7684\u76f4\u63a5\u5149\u7167PBR\u7740\u8272\u5668\u3002 \u4e3a\u4e86\u5b8c\u6574\u6027\uff0c\u8fd9\u91cc\u7ed9\u51fa\u4e86\u5b8c\u6574\u7684\u4ee3\u7801\uff1a #version 330 core out vec4 FragColor; in vec2 TexCoords; in vec3 WorldPos; in vec3 Normal; // material parameters uniform vec3 albedo; uniform float metallic; uniform float roughness; uniform float ao; // lights uniform vec3 lightPositions[4]; uniform vec3 lightColors[4]; uniform vec3 camPos; const float PI = 3.14159265359; float DistributionGGX(vec3 N, vec3 H, float roughness); float GeometrySchlickGGX(float NdotV, float roughness); float GeometrySmith(vec3 N, vec3 V, vec3 L, float roughness); vec3 fresnelSchlickRoughness(float cosTheta, vec3 F0, float roughness); void main() { vec3 N = normalize(Normal); vec3 V = normalize(camPos - WorldPos); vec3 F0 = vec3(0.04); F0 = mix(F0, albedo, metallic); // reflectance equation vec3 Lo = vec3(0.0); for(int i = 0; i < 4; ++i) { // calculate per-light radiance vec3 L = normalize(lightPositions[i] - WorldPos); vec3 H = normalize(V + L); float distance = length(lightPositions[i] - WorldPos); float attenuation = 1.0 / (distance * distance); vec3 radiance = lightColors[i] * attenuation; // cook-torrance brdf float NDF = DistributionGGX(N, H, roughness); float G = GeometrySmith(N, V, L, roughness); vec3 F = fresnelSchlick(max(dot(H, V), 0.0), F0); vec3 kS = F; vec3 kD = vec3(1.0) - kS; kD *= 1.0 - metallic; vec3 nominator = NDF * G * F; float denominator = 4.0 * max(dot(N, V), 0.0) * max(dot(N, L), 0.0) + 0.001; vec3 specular = nominator / denominator; // add to outgoing radiance Lo float NdotL = max(dot(N, L), 0.0); Lo += (kD * albedo / PI + specular) * radiance * NdotL; } vec3 ambient = vec3(0.03) * albedo * ao; vec3 color = ambient + Lo; color = color / (color + vec3(1.0)); color = pow(color, vec3(1.0/2.2)); FragColor = vec4(color, 1.0); } \u5e0c\u671b\u7ecf\u8fc7\u4e0a\u4e00\u4e2a\u6559\u7a0b\u7684 \u7406\u8bba\u77e5\u8bc6 \u4ee5\u53ca\u5b66\u4e60\u8fc7\u5173\u4e8e\u6e32\u67d3\u65b9\u7a0b\u7684\u4e00\u4e9b\u77e5\u8bc6\u540e\uff0c\u8fd9\u4e2a\u7740\u8272\u5668\u770b\u8d77\u6765\u4e0d\u4f1a\u592a\u53ef\u6015\u3002\u5982\u679c\u6211\u4eec\u91c7\u7528\u8fd9\u4e2a\u7740\u8272\u5668\uff0c\u52a0\u4e0a4\u4e2a\u70b9\u5149\u6e90\u548c\u4e00\u4e9b\u7403\u4f53\uff0c\u540c\u65f6\u4ee4\u8fd9\u4e9b\u7403\u4f53\u7684\u91d1\u5c5e\u6027(metallic)\u548c\u7c97\u7cd9\u5ea6(roughness)\u6cbf\u5782\u76f4\u548c\u6c34\u5e73\u65b9\u5411\u5206\u522b\u53d8\u5316\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u8fd9\u6837\u7684\u7ed3\u679c\uff1a (\u4e0a\u8ff0\u56fe\u7247)\u4ece\u4e0b\u5f80\u4e0a\u7403\u4f53\u7684\u91d1\u5c5e\u6027\u4ece0.0\u53d8\u52301.0\uff0c \u4ece\u5de6\u5230\u53f3\u7403\u4f53\u7684\u7c97\u7cd9\u5ea6\u4ece0.0\u53d8\u52301.0\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u4ec5\u4ec5\u6539\u53d8\u8fd9\u4e24\u4e2a\u503c\uff0c\u663e\u793a\u7684\u6548\u679c\u4f1a\u53d1\u751f\u5de8\u5927\u7684\u6539\u53d8\uff01 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u6574\u4e2ademo\u7684\u5b8c\u6574\u4ee3\u7801\u3002 \u5e26\u8d34\u56fe\u7684PBR \u628a\u6211\u4eec\u7cfb\u7edf\u6269\u5c55\u6210\u53ef\u4ee5\u63a5\u53d7\u7eb9\u7406\u4f5c\u4e3a\u53c2\u6570\u53ef\u4ee5\u8ba9\u6211\u4eec\u5bf9\u7269\u4f53\u7684\u6750\u8d28\u6709\u66f4\u591a\u7684\u81ea\u5b9a\u4e49\u7a7a\u95f4\uff1a [...] uniform sampler2D albedoMap; uniform sampler2D normalMap; uniform sampler2D metallicMap; uniform sampler2D roughnessMap; uniform sampler2D aoMap; void main() { vec3 albedo = pow(texture(albedoMap, TexCoords).rgb, 2.2); vec3 normal = getNormalFromNormalMap(); float metallic = texture(metallicMap, TexCoords).r; float roughness = texture(roughnessMap, TexCoords).r; float ao = texture(aoMap, TexCoords).r; [...] } \u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\u4e00\u822c\u6765\u8bf4\u53cd\u5c04\u7387(albedo)\u7eb9\u7406\u5728\u7f8e\u672f\u4eba\u5458\u521b\u5efa\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u5728sRGB\u7a7a\u95f4\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728\u5149\u7167\u8ba1\u7b97\u4e4b\u524d\u5148\u628a\u4ed6\u4eec\u8f6c\u6362\u5230\u7ebf\u6027\u7a7a\u95f4\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u73af\u5883\u5149\u906e\u853d\u8d34\u56fe(ambient occlusion maps)\u4e5f\u9700\u8981\u6211\u4eec\u8f6c\u6362\u5230\u7ebf\u6027\u7a7a\u95f4\u3002\u4e0d\u8fc7\u91d1\u5c5e\u6027(Metallic)\u548c\u7c97\u7cd9\u5ea6(Roughness)\u8d34\u56fe\u5927\u591a\u6570\u65f6\u95f4\u90fd\u4f1a\u4fdd\u8bc1\u5728\u7ebf\u6027\u7a7a\u95f4\u4e2d\u3002 \u53ea\u662f\u628a\u4e4b\u524d\u7684\u7403\u4f53\u7684\u6750\u8d28\u6027\u8d28\u6362\u6210\u7eb9\u7406\u5c5e\u6027\uff0c\u5c31\u5728\u89c6\u89c9\u4e0a\u6709\u5de8\u5927\u7684\u63d0\u5347\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u7eb9\u7406\u8d34\u56fe\u793a\u4f8b\u7684\u5168\u90e8\u4ee3\u7801\uff0c\u4ee5\u53ca\u6211\u7528\u7684 \u7eb9\u7406 (\u8bb0\u5f97\u52a0\u4e0a\u4e00\u5f20\u5168\u767d\u8272\u7684\u73af\u5883\u5149\u906e\u853d\u8d34\u56fe)\u3002\u6ce8\u610f\u91d1\u5c5e\u8868\u9762\u4f1a\u5728\u573a\u666f\u4e2d\u770b\u8d77\u6765\u6709\u70b9\u9ed1\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6ca1\u6709\u6f2b\u53cd\u5c04\u3002\u5b83\u4eec\u4f1a\u5728\u8003\u8651\u73af\u5883\u955c\u9762\u5149\u7167\u7684\u65f6\u5019\u770b\u8d77\u6765\u66f4\u52a0\u81ea\u7136\uff0c\u4e0d\u8fc7\u8fd9\u662f\u6211\u4eec\u4e0b\u4e00\u4e2a\u6559\u7a0b\u7684\u4e8b\u60c5\u4e86\u3002 \u76f8\u6bd4\u8d77\u5728\u7f51\u4e0a\u627e\u5230\u7684\u5176\u4ed6PBR\u6e32\u67d3\u7ed3\u679c\u6765\u8bf4\uff0c\u5c3d\u7ba1\u5728\u89c6\u89c9\u4e0a\u4e0d\u7b97\u662f\u975e\u5e38\u9707\u64bc\uff0c\u56e0\u4e3a\u6211\u4eec\u8fd8\u6ca1\u8003\u8651\u5230 \u57fa\u4e8e\u56fe\u7247\u7684\u5149\u7167(IBL) \uff0c\u4f46\u6211\u4eec\u73b0\u5728\u4e5f\u7b97\u662f\u6709\u4e86\u4e00\u4e2a\u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3\u5668\u4e86\uff0c\u867d\u7136\u8fd8\u6ca1\u8003\u8651IBL\uff0c\u4f46\u4f60\u4f1a\u53d1\u73b0\u4f60\u7684\u5149\u7167\u770b\u8d77\u6765\u66f4\u52a0\u771f\u5b9e\u4e86\u3002","title":"\u5149\u7167"},{"location":"07%20PBR/02%20Lighting/#_1","text":"\u539f\u6587 Lighting \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 KenLee \u6821\u5bf9 JeremyYvv \u5728 \u4e0a\u4e00\u4e2a\u6559\u7a0b \u4e2d\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u4e00\u4e9bPBR\u7684\u57fa\u7840\u77e5\u8bc6\u3002\u5728\u672c\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u628a\u91cd\u70b9\u653e\u5728\u5c06\u4e4b\u524d\u8ba8\u8bba\u7684\u7406\u8bba\u8f6c\u5316\u4e3a\u5b9e\u9645\u7684\u6e32\u67d3\u5668\uff0c\u8fd9\u4e2a\u6e32\u67d3\u5668\u5c06\u4f7f\u7528\u76f4\u63a5\u7684\uff08\u6216\u89e3\u6790\u7684\uff09\u5149\u6e90\uff1a\u6bd4\u5982\u70b9\u5149\u6e90\uff0c\u5b9a\u5411\u706f\u6216\u805a\u5149\u706f\u3002 \u6211\u4eec\u5148\u6765\u770b\u770b\u4e0a\u4e00\u4e2a\u7ae0\u63d0\u5230\u7684\u53cd\u5c04\u65b9\u7a0b\u7684\u6700\u7ec8\u7248\uff1a L_o(p,\\omega_o) = \\int\\limits_{\\Omega} (k_d\\frac{c}{\\pi} + k_s\\frac{DFG}{4(\\omega_o \\cdot n)(\\omega_i \\cdot n)}) L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \u6211\u4eec\u5927\u81f4\u4e0a\u6e05\u695a\u8fd9\u4e2a\u53cd\u5c04\u65b9\u7a0b\u5728\u5e72\u4ec0\u4e48\uff0c\u4f46\u6211\u4eec\u4ecd\u7136\u7559\u6709\u4e00\u4e9b\u8ff7\u96fe\u5c1a\u672a\u63ed\u5f00\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u7a76\u7adf\u5c06\u600e\u6837\u8868\u793a\u573a\u666f\u4e0a\u7684\u8f90\u7167\u5ea6(Irradiance), \u8f90\u5c04\u7387(Radiance) L \uff1f\u6211\u4eec\u77e5\u9053\u8f90\u5c04\u7387 L \uff08\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u9886\u57df\u4e2d\uff09\u8868\u793a\u5149\u6e90\u7684\u8f90\u5c04\u901a\u91cf(Radiant flux) \\phi \uff0c\u6216\u5149\u6e90\u5728\u7ed9\u5b9a\u7acb\u4f53\u89d2 \\omega \u4e0b\u53d1\u51fa\u7684\u5149\u80fd\u3002\u5728\u6211\u4eec\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u59a8\u5047\u8bbe\u7acb\u4f53\u89d2 \\omega \u65e0\u9650\u5c0f\uff0c\u8fd9\u6837\u8f90\u5c04\u5ea6\u5c31\u8868\u793a\u5149\u6e90\u5728\u4e00\u6761\u5149\u7ebf\u6216\u5355\u4e2a\u65b9\u5411\u5411\u91cf\u4e0a\u7684\u8f90\u5c04\u901a\u91cf\u3002 \u57fa\u4e8e\u4ee5\u4e0a\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u5982\u4f55\u5c06\u5176\u8f6c\u5316\u4e3a\u4e4b\u524d\u7684\u6559\u7a0b\u4e2d\u6240\u79ef\u7d2f\u7684\u4e00\u4e9b\u5149\u7167\u77e5\u8bc6\u5462\uff1f \u90a3\u4e48\u60f3\u8c61\u4e00\u4e0b\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u70b9\u5149\u6e90\uff08\u4e00\u4e2a\u5728\u6240\u6709\u65b9\u5411\u90fd\u5177\u6709\u76f8\u540c\u4eae\u5ea6\u7684\u5149\u6e90\uff09\uff0c\u5b83\u7684\u8f90\u5c04\u901a\u91cf\u4e3a\u7528RGB\u8868\u793a\u4e3a \uff0823.47, 21.31, 20.79\uff09 \u3002\u8be5\u5149\u6e90\u7684\u8f90\u5c04\u5f3a\u5ea6(Radiant Intensity)\u7b49\u4e8e\u5176\u5728\u6240\u6709\u51fa\u5c04\u5149\u7ebf\u7684\u8f90\u5c04\u901a\u91cf\u3002 \u7136\u800c\uff0c\u5f53\u6211\u4eec\u4e3a\u4e00\u4e2a\u8868\u9762\u4e0a\u7684\u7279\u5b9a\u7684\u70b9 p \u7740\u8272\u65f6\uff0c\u5728\u5176\u534a\u7403\u9886\u57df \\Omega \u7684\u6240\u6709\u53ef\u80fd\u7684\u5165\u5c04\u65b9\u5411\u4e0a\uff0c\u53ea\u6709\u4e00\u4e2a\u5165\u5c04\u65b9\u5411\u5411\u91cf \\omega_i \u76f4\u63a5\u6765\u81ea\u4e8e\u8be5\u70b9\u5149\u6e90\u3002 \u5047\u8bbe\u6211\u4eec\u5728\u573a\u666f\u4e2d\u53ea\u6709\u4e00\u4e2a\u5149\u6e90\uff0c\u4f4d\u4e8e\u7a7a\u95f4\u4e2d\u7684\u67d0\u4e00\u4e2a\u70b9\uff0c\u56e0\u800c\u5bf9\u4e8e p \u70b9\u7684\u5176\u4ed6\u53ef\u80fd\u7684\u5165\u5c04\u5149\u7ebf\u65b9\u5411\u4e0a\u7684\u8f90\u5c04\u7387\u4e3a0\uff1a \u5982\u679c\u4ece\u4e00\u5f00\u59cb\uff0c\u6211\u4eec\u5c31\u5047\u8bbe\u70b9\u5149\u6e90\u4e0d\u53d7\u5149\u7ebf\u8870\u51cf\uff08\u5149\u7167\u5f3a\u5ea6\u4f1a\u968f\u7740\u8ddd\u79bb\u53d8\u6697\uff09\u7684\u5f71\u54cd\uff0c\u90a3\u4e48\u65e0\u8bba\u6211\u4eec\u628a\u5149\u6e90\u653e\u5728\u54ea\uff0c\u5165\u5c04\u5149\u7ebf\u7684\u8f90\u5c04\u7387\u603b\u662f\u4e00\u6837\u7684\uff08\u9664\u53bb\u5165\u5c04\u89d2 cos\\theta \u5bf9\u8f90\u5c04\u7387\u7684\u5f71\u54cd\u4e4b\u5916\uff09\u3002 \u8fd9\u662f\u56e0\u4e3a\u65e0\u8bba\u6211\u4eec\u4ece\u54ea\u4e2a\u89d2\u5ea6\u89c2\u5bdf\u5b83\uff0c\u70b9\u5149\u6e90\u603b\u5177\u6709\u76f8\u540c\u7684\u8f90\u5c04\u5f3a\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u6709\u6548\u5730\u5c06\u5176\u8f90\u5c04\u5f3a\u5ea6\u5efa\u6a21\u4e3a\u5176\u8f90\u5c04\u901a\u91cf: \u4e00\u4e2a\u5e38\u91cf\u5411\u91cf \uff0823.47, 21.31, 20.79\uff09 \u3002 \u7136\u800c\uff0c\u8f90\u5c04\u7387\u4e5f\u9700\u8981\u5c06\u4f4d\u7f6e p \u4f5c\u4e3a\u8f93\u5165\uff0c\u6b63\u5982\u6240\u6709\u73b0\u5b9e\u7684\u70b9\u5149\u6e90\u90fd\u4f1a\u53d7\u5149\u7ebf\u8870\u51cf\u5f71\u54cd\u4e00\u6837\uff0c\u70b9\u5149\u6e90\u7684\u8f90\u5c04\u5f3a\u5ea6\u5e94\u8be5\u6839\u636e\u70b9 p \u6240\u5728\u7684\u4f4d\u7f6e\u548c\u5149\u6e90\u7684\u4f4d\u7f6e\u4ee5\u53ca\u4ed6\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb\u800c\u505a\u4e00\u4e9b\u7f29\u653e\u3002 \u56e0\u6b64\uff0c\u6839\u636e\u539f\u59cb\u7684\u8f90\u5c04\u65b9\u7a0b\uff0c\u6211\u4eec\u4f1a\u6839\u636e\u8868\u9762\u6cd5\u5411\u91cf n \u548c\u5165\u5c04\u89d2\u5ea6 w_i \u6765\u7f29\u653e\u5149\u6e90\u7684\u8f90\u5c04\u5f3a\u5ea6\u3002 \u5728\u5b9e\u73b0\u4e0a\u6765\u8bf4\uff1a\u5bf9\u4e8e\u76f4\u63a5\u70b9\u5149\u6e90\u7684\u60c5\u51b5\uff0c\u8f90\u5c04\u7387\u51fd\u6570 L \u5148\u83b7\u53d6\u5149\u6e90\u7684\u989c\u8272\u503c\uff0c \u7136\u540e\u5149\u6e90\u548c\u67d0\u70b9 p \u7684\u8ddd\u79bb\u8870\u51cf\uff0c\u63a5\u7740\u6309\u7167 n \\cdot w_i \u7f29\u653e\uff0c\u4f46\u662f\u4ec5\u4ec5\u6709\u4e00\u6761\u5165\u5c04\u89d2\u4e3a w_i \u7684\u5149\u7ebf\u6253\u5728\u70b9 p \u4e0a\uff0c \u8fd9\u4e2a w_i \u540c\u65f6\u4e5f\u7b49\u4e8e\u5728 p \u70b9\u5149\u6e90\u7684\u65b9\u5411\u5411\u91cf\u3002\u5199\u6210\u4ee3\u7801\u7684\u8bdd\u4f1a\u662f\u8fd9\u6837\uff1a vec3 lightColor = vec3(23.47, 21.31, 20.79); vec3 wi = normalize(lightPos - fragPos); float cosTheta = max(dot(N, Wi), 0.0); float attenuation = calculateAttenuation(fragPos, lightPos); float radiance = lightColor * attenuation * cosTheta; \u9664\u4e86\u4e00\u4e9b\u672f\u8bed\u4e0a\u7684\u5dee\u5f02\u5916\uff0c\u8fd9\u6bb5\u4ee3\u7801\u5bf9\u4f60\u4eec\u6765\u8bf4\u5e94\u8be5\u5f88\u719f\u6089\uff1a\u8fd9\u6b63\u662f\u6211\u4eec\u4e00\u76f4\u4ee5\u6765\u600e\u4e48\u8ba1\u7b97\u6f2b\u53cd\u5c04\u5149\u7167\u7684\uff01\u5f53\u6d89\u53ca\u5230\u76f4\u63a5\u5149\u7167(direct lighting)\u65f6\uff0c\u8f90\u5c04\u7387\u7684\u8ba1\u7b97\u65b9\u5f0f\u548c\u6211\u4eec\u4e4b\u524d\u8ba1\u7b97\u53ea\u6709\u4e00\u4e2a\u5149\u6e90\u7167\u5c04\u5728\u7269\u4f53\u8868\u9762\u7684\u65f6\u5019\u975e\u5e38\u76f8\u4f3c\u3002 Important \u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e2a\u5047\u8bbe\u6210\u7acb\u7684\u6761\u4ef6\u662f\u70b9\u5149\u6e90\u4f53\u79ef\u65e0\u9650\u5c0f\uff0c\u76f8\u5f53\u4e8e\u5728\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u70b9\u3002\u5982\u679c\u6211\u4eec\u8ba4\u4e3a\u8be5\u5149\u6e90\u662f\u5177\u6709\u4f53\u79ef\u7684\uff0c\u5b83\u7684\u8f90\u5c04\u7387\u4f1a\u5728\u4e0d\u53ea\u4e00\u4e2a\u5165\u5c04\u5149\u65b9\u5411\u4e0a\u975e\u96f6\u3002 \u5bf9\u4e8e\u5176\u5b83\u7c7b\u578b\u7684\u4ece\u5355\u70b9\u53d1\u51fa\u6765\u7684\u5149\u6e90\u6211\u4eec\u7c7b\u4f3c\u5730\u8ba1\u7b97\u51fa\u8f90\u5c04\u7387\u3002\u6bd4\u5982\uff0c\u5b9a\u5411\u5149(directional light)\u62e5\u6709\u6052\u5b9a\u7684 w_i \u800c\u4e0d\u4f1a\u6709\u8870\u51cf\u56e0\u5b50\uff1b\u800c\u4e00\u4e2a\u805a\u5149\u706f\u5149\u6e90\u5219\u6ca1\u6709\u6052\u5b9a\u7684\u8f90\u5c04\u5f3a\u5ea6\uff0c\u5176\u8f90\u5c04\u5f3a\u5ea6\u662f\u6839\u636e\u805a\u5149\u706f\u7684\u65b9\u5411\u5411\u91cf\u6765\u7f29\u653e\u7684\u3002 \u8fd9\u4e5f\u8ba9\u6211\u4eec\u56de\u5230\u4e86\u5bf9\u4e8e\u8868\u9762\u7684\u534a\u7403\u9886\u57df(hemisphere) \\Omega \u7684\u79ef\u5206 \\int \u4e0a\u3002\u7531\u4e8e\u6211\u4eec\u4e8b\u5148\u77e5\u9053\u7684\u6240\u6709\u8d21\u732e\u5149\u6e90\u7684\u4f4d\u7f6e\uff0c\u56e0\u6b64\u5bf9\u7269\u4f53\u8868\u9762\u4e0a\u7684\u4e00\u4e2a\u70b9\u7740\u8272\u5e76\u4e0d\u9700\u8981\u6211\u4eec\u5c1d\u8bd5\u53bb\u6c42\u89e3\u79ef\u5206\u3002\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u62ff\u5149\u6e90\u7684\uff08\u5df2\u77e5\u7684\uff09\u6570\u76ee\uff0c\u53bb\u8ba1\u7b97\u5b83\u4eec\u7684\u603b\u8f90\u7167\u5ea6\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5149\u6e90\u4ec5\u4ec5\u53ea\u6709\u4e00\u4e2a\u65b9\u5411\u4e0a\u7684\u5149\u7ebf\u4f1a\u5f71\u54cd\u7269\u4f53\u8868\u9762\u7684\u8f90\u5c04\u7387\u3002\u8fd9\u4f7f\u5f97PBR\u5bf9\u76f4\u63a5\u5149\u6e90\u7684\u8ba1\u7b97\u76f8\u5bf9\u7b80\u5355\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u8981\u6709\u6548\u5730\u904d\u5386\u6240\u6709\u6709\u8d21\u732e\u7684\u5149\u6e90\u3002\u800c\u5f53\u6211\u4eec\u4e4b\u540e\u628a\u73af\u5883\u7167\u660e\u4e5f\u8003\u8651\u5728\u5185\u7684 IBL \u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c31\u5fc5\u987b\u91c7\u53d6\u79ef\u5206\u53bb\u8ba1\u7b97\u4e86\uff0c\u8fd9\u662f\u56e0\u4e3a\u5149\u7ebf\u53ef\u80fd\u4f1a\u5728\u4efb\u4f55\u4e00\u4e2a\u65b9\u5411\u5165\u5c04\u3002","title":"\u5149\u7167"},{"location":"07%20PBR/02%20Lighting/#pbr","text":"\u73b0\u5728\u8ba9\u6211\u4eec\u5f00\u59cb\u5199\u7247\u6bb5\u7740\u8272\u5668\u6765\u5b9e\u73b0\u4e0a\u8ff0\u7684PBR\u6a21\u578b\u5427~ \u9996\u5148\u6211\u4eec\u9700\u8981\u628aPBR\u76f8\u5173\u7684\u8f93\u5165\u653e\u8fdb\u7247\u6bb5\u7740\u8272\u5668\u3002 #version 330 core out vec4 FragColor; in vec2 TexCoords; in vec3 WorldPos; in vec3 Normal; uniform vec3 camPos; uniform vec3 albedo; uniform float metallic; uniform float roughness; uniform float ao; \u6211\u4eec\u628a\u901a\u7528\u7684\u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u51fa\u4f5c\u4e3a\u8f93\u5165\u7684\u4e00\u90e8\u5206\u3002\u53e6\u4e00\u90e8\u5206\u8f93\u5165\u5219\u662f\u7269\u4f53\u8868\u9762\u6a21\u578b\u7684\u4e00\u4e9b\u6750\u8d28\u53c2\u6570\u3002 \u7136\u540e\u5728\u7247\u6bb5\u7740\u8272\u5668\u7684\u5f00\u59cb\u90e8\u5206\u6211\u4eec\u505a\u4e00\u4e0b\u4efb\u4f55\u5149\u7167\u7b97\u6cd5\u90fd\u9700\u8981\u505a\u7684\u8ba1\u7b97: void main() { vec3 N = normalize(Normal); vec3 V = normalize(camPos - WorldPos); [...] }","title":"\u4e00\u4e2aPBR\u8868\u9762\u6a21\u578b"},{"location":"07%20PBR/02%20Lighting/#_2","text":"\u5728\u672c\u6559\u7a0b\u7684\u4f8b\u5b50\u4e2d\u6211\u4eec\u4f1a\u91c7\u7528\u603b\u51714\u4e2a\u70b9\u5149\u6e90\u6765\u76f4\u63a5\u8868\u793a\u573a\u666f\u7684\u8f90\u7167\u5ea6\u3002\u4e3a\u4e86\u6ee1\u8db3\u53cd\u5c04\u7387\u65b9\u7a0b\uff0c\u6211\u4eec\u5faa\u73af\u904d\u5386\u6bcf\u4e00\u4e2a\u5149\u6e90\uff0c\u8ba1\u7b97\u4ed6\u4eec\u5404\u81ea\u7684\u8f90\u5c04\u7387\u7136\u540e\u6c42\u548c\uff0c\u63a5\u7740\u6839\u636eBRDF\u548c\u5149\u6e90\u7684\u5165\u5c04\u89d2\u6765\u7f29\u653e\u8be5\u8f90\u5c04\u7387\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u5faa\u73af\u5f53\u4f5c\u5728\u7269\u4f53\u7684\u534a\u7403\u9886\u57df\u5185\u5bf9\u6240\u6709\u76f4\u63a5\u5149\u6e90\u6c42\u79ef\u5206\u3002\u9996\u5148\u6211\u4eec\u6765\u8ba1\u7b97\u4e00\u4e9b\u53ef\u4ee5\u9884\u8ba1\u7b97\u7684\u5149\u7167\u53d8\u91cf\uff1a vec3 Lo = vec3(0.0); for(int i = 0; i < 4; ++i) { vec3 L = normalize(lightPositions[i] - WorldPos); vec3 H = normalize(V + L); float distance = length(lightPositions[i] - WorldPos); float attenuation = 1.0 / (distance * distance); vec3 radiance = lightColors[i] * attenuation; [...] \u7531\u4e8e\u6211\u4eec\u5728\u7ebf\u6027\u7a7a\u95f4\u5185\u8ba1\u7b97\u5149\u7167\uff08\u6211\u4eec\u4f1a\u5728\u7740\u8272\u5668\u7684\u6700\u540e\u8fdb\u884cGamma\u6821\u6b63\uff09\uff0c\u6211\u4eec\u4f7f\u7528\u5728\u7269\u7406\u4e0a\u66f4\u4e3a\u51c6\u786e\u7684\u5e73\u65b9\u5012\u6570\u4f5c\u4e3a\u8870\u51cf\u3002 Important \u76f8\u5bf9\u4e8e\u7269\u7406\u4e0a\u6b63\u786e\u6765\u8bf4\uff0c\u4f60\u53ef\u80fd\u4ecd\u7136\u60f3\u4f7f\u7528\u5e38\u91cf\uff0c\u7ebf\u6027\u6216\u8005\u4e8c\u6b21\u8870\u51cf\u65b9\u7a0b\uff08\u4ed6\u4eec\u5728\u7269\u7406\u4e0a\u76f8\u5bf9\u4e0d\u51c6\u786e\uff09\uff0c\u5374\u53ef\u4ee5\u4e3a\u60a8\u63d0\u4f9b\u5728\u5149\u7684\u80fd\u91cf\u8870\u51cf\u66f4\u591a\u7684\u63a7\u5236\u3002 \u7136\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5149\u6e90\u6211\u4eec\u90fd\u60f3\u8ba1\u7b97\u5b8c\u6574\u7684 Cook-Torrance specular BRDF\u9879\uff1a \\frac{DFG}{4(\\omega_o \\cdot n)(\\omega_i \\cdot n)} \u9996\u5148\u6211\u4eec\u60f3\u8ba1\u7b97\u7684\u662f\u955c\u9762\u53cd\u5c04\u548c\u6f2b\u53cd\u5c04\u4e4b\u95f4\u7684\u6bd4\u503c\uff0c\u6216\u8005\u8bf4\u4e0e\u8868\u9762\u6298\u5c04\u7684\u5149\u7ebf\u76f8\u6bd4\uff0c\u5b83\u53cd\u5c04\u4e86\u591a\u5c11\u5149\u7ebf\u3002 \u6211\u4eec\u4ece \u4e0a\u4e00\u4e2a\u6559\u7a0b \u77e5\u9053\u53ef\u4ee5\u4f7f\u7528\u83f2\u6d85\u5c14\u65b9\u7a0b\u8ba1\u7b97\uff08\u6ce8\u610f\u8fd9\u91cc\u7528\u7684 clamp \u662f\u4e3a\u4e86\u907f\u514d\u9ed1\u70b9\uff09\uff1a vec3 fresnelSchlick(float cosTheta, vec3 F0) { return F0 + (1.0 - F0) * pow(clamp(1.0 - cosTheta, 0.0, 1.0), 5.0); } Fresnel-Schlick\u8fd1\u4f3c\u6cd5\u63a5\u6536\u4e00\u4e2a\u53c2\u6570 F0 \uff0c\u88ab\u79f0\u4e3a0\u00b0\u5165\u5c04\u89d2\u7684\u53cd\u5c04\u7387\uff0c\u6216\u8005\u8bf4\u662f\u76f4\u63a5(\u5782\u76f4)\u89c2\u5bdf\u8868\u9762\u65f6\u6709\u591a\u5c11\u5149\u7ebf\u4f1a\u88ab\u53cd\u5c04\u3002 \u8fd9\u4e2a\u53c2\u6570 F0 \u4f1a\u56e0\u4e3a\u6750\u6599\u4e0d\u540c\u800c\u4e0d\u540c\uff0c\u800c\u4e14\u5bf9\u4e8e\u91d1\u5c5e\u6750\u8d28\u4f1a\u5e26\u6709\u989c\u8272\u3002\u5728PBR\u91d1\u5c5e\u6d41\u4e2d\u6211\u4eec\u7b80\u5355\u5730\u8ba4\u4e3a\u5927\u591a\u6570\u7684\u7edd\u7f18\u4f53\u5728 F0 \u4e3a0.04\u7684\u65f6\u5019\u770b\u8d77\u6765\u89c6\u89c9\u4e0a\u662f\u6b63\u786e\u7684\uff0c\u5bf9\u4e8e\u91d1\u5c5e\u8868\u9762\u6211\u4eec\u6839\u636e\u53cd\u5c04\u7387\u7279\u522b\u5730\u6307\u5b9a F0 \u3002 \u56e0\u6b64\u4ee3\u7801\u4e0a\u770b\u8d77\u6765\u4f1a\u50cf\u662f\u8fd9\u6837\uff1a vec3 F0 = vec3(0.04); F0 = mix(F0, albedo, metallic); vec3 F = fresnelSchlick(max(dot(H, V), 0.0), F0); \u53ef\u4ee5\u770b\u5230\uff0c\u5bf9\u4e8e\u975e\u91d1\u5c5e\u8868\u9762 F0 \u59cb\u7ec8\u4e3a0.04\u3002\u5bf9\u4e8e\u91d1\u5c5e\u8868\u9762\uff0c\u6211\u4eec\u6839\u636e\u521d\u59cb\u7684 F0 \u548c\u8868\u73b0\u91d1\u5c5e\u5c5e\u6027\u7684\u53cd\u5c04\u7387\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\u3002 \u6211\u4eec\u5df2\u7ecf\u7b97\u51fa F \uff0c \u5269\u4e0b\u7684\u9879\u5c31\u662f\u8ba1\u7b97\u6cd5\u7ebf\u5206\u5e03\u51fd\u6570 D \u548c\u51e0\u4f55\u906e\u853d\u51fd\u6570 G \u4e86\u3002 \u5728\u76f4\u63a5PBR\u5149\u7167\u7740\u8272\u5668\u4e2d D \u548c G \u7684\u8ba1\u7b97\u4ee3\u7801\u7c7b\u4f3c\u4e8e\uff1a float DistributionGGX(vec3 N, vec3 H, float roughness) { float a = roughness*roughness; float a2 = a*a; float NdotH = max(dot(N, H), 0.0); float NdotH2 = NdotH*NdotH; float num = a2; float denom = (NdotH2 * (a2 - 1.0) + 1.0); denom = PI * denom * denom; return num / denom; } float GeometrySchlickGGX(float NdotV, float roughness) { float r = (roughness + 1.0); float k = (r*r) / 8.0; float num = NdotV; float denom = NdotV * (1.0 - k) + k; return num / denom; } float GeometrySmith(vec3 N, vec3 V, vec3 L, float roughness) { float NdotV = max(dot(N, V), 0.0); float NdotL = max(dot(N, L), 0.0); float ggx2 = GeometrySchlickGGX(NdotV, roughness); float ggx1 = GeometrySchlickGGX(NdotL, roughness); return ggx1 * ggx2; } \u8fd9\u91cc\u6bd4\u8f83\u91cd\u8981\u7684\u662f\u548c \u7406\u8bba\u7ae0\u8282 \u76f8\u6bd4\uff0c\u6211\u4eec\u76f4\u63a5\u628a\u7c97\u7cd9\u5ea6(roughness)\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9\u4e86\u4e0a\u8ff0\u51fd\u6570\uff1b\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u9488\u5bf9\u6bcf\u4e00\u4e2a\u4e0d\u540c\u7684\u9879\u5bf9\u7c97\u7cd9\u5ea6\u505a\u4e00\u4e9b\u4fee\u6539\u3002\u6839\u636e\u8fea\u58eb\u5c3c\u516c\u53f8\u7ed9\u51fa\u7684\u89c2\u5bdf\u4ee5\u53ca\u540e\u6765\u88abEpic Games\u516c\u53f8\u91c7\u7528\u7684\u5149\u7167\u6a21\u578b\uff0c\u5728\u51e0\u4f55\u906e\u853d\u51fd\u6570\u548c\u6cd5\u7ebf\u5206\u5e03\u51fd\u6570\u4e2d\u91c7\u7528\u7c97\u7cd9\u5ea6\u7684\u5e73\u65b9\u4f1a\u8ba9\u5149\u7167\u770b\u8d77\u6765\u66f4\u52a0\u81ea\u7136\u3002 \u73b0\u5728\u4e24\u4e2a\u51fd\u6570\u90fd\u7ed9\u51fa\u4e86\u5b9a\u4e49\uff0c\u5728\u8ba1\u7b97\u53cd\u5c04\u7684\u5faa\u73af\u4e2d\u8ba1\u7b97NDF\u548cG\u9879\u5c31\u53d8\u5f97\u5f88\u7b80\u5355\uff1a float NDF = DistributionGGX(N, H, roughness); float G = GeometrySmith(N, V, L, roughness); \u8fd9\u6837\u6211\u4eec\u5c31\u51d1\u591f\u4e86\u8db3\u591f\u7684\u9879\u6765\u8ba1\u7b97Cook-Torrance BRDF: vec3 nominator = NDF * G * F; float denominator = 4.0 * max(dot(N, V), 0.0) * max(dot(N, L), 0.0) + 0.001; vec3 specular = nominator / denominator; \u6ce8\u610f\u6211\u4eec\u5728\u5206\u6bcd\u9879\u4e2d\u52a0\u4e86\u4e00\u4e2a0.001\u4e3a\u4e86\u907f\u514d\u51fa\u73b0\u9664\u96f6\u9519\u8bef\u3002 \u73b0\u5728\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u8ba1\u7b97\u6bcf\u4e2a\u5149\u6e90\u5728\u53cd\u5c04\u7387\u65b9\u7a0b\u4e2d\u7684\u8d21\u732e\u503c\u4e86\uff01\u56e0\u4e3a\u83f2\u6d85\u5c14\u65b9\u7a0b\u76f4\u63a5\u7ed9\u51fa\u4e86 k_S \uff0c \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 F \u8868\u793a\u6240\u6709\u6253\u5728\u7269\u4f53\u8868\u9762\u4e0a\u7684\u955c\u9762\u53cd\u5c04\u5149\u7684\u8d21\u732e\u3002 \u4ece k_S \u6211\u4eec\u5f88\u5bb9\u6613\u8ba1\u7b97\u6298\u5c04\u7684\u6bd4\u503c k_D \uff1a vec3 kS = F; vec3 kD = vec3(1.0) - kS; kD *= 1.0 - metallic; \u6211\u4eec\u53ef\u4ee5\u770b\u4f5c k_S \u8868\u793a\u5149\u80fd\u4e2d\u88ab\u53cd\u5c04\u7684\u80fd\u91cf\u7684\u6bd4\u4f8b\uff0c \u800c\u5269\u4e0b\u7684\u5149\u80fd\u4f1a\u88ab\u6298\u5c04\uff0c \u6bd4\u503c\u5373\u4e3a k_D \u3002\u66f4\u8fdb\u4e00\u6b65\u6765\u8bf4\uff0c\u56e0\u4e3a\u91d1\u5c5e\u4e0d\u4f1a\u6298\u5c04\u5149\u7ebf\uff0c\u56e0\u6b64\u4e0d\u4f1a\u6709\u6f2b\u53cd\u5c04\u3002\u6240\u4ee5\u5982\u679c\u8868\u9762\u662f\u91d1\u5c5e\u7684\uff0c\u6211\u4eec\u4f1a\u628a\u7cfb\u6570 k_D \u53d8\u4e3a0\u3002 \u8fd9\u6837\uff0c\u6211\u4eec\u7ec8\u4e8e\u96c6\u9f50\u6240\u6709\u53d8\u91cf\u6765\u8ba1\u7b97\u6211\u4eec\u51fa\u5c04\u5149\u7ebf\u7684\u503c\uff1a const float PI = 3.14159265359; float NdotL = max(dot(N, L), 0.0); Lo += (kD * albedo / PI + specular) * radiance * NdotL; } \u6700\u7ec8\u7684\u7ed3\u679c Lo \uff0c\u6216\u8005\u8bf4\u662f\u51fa\u5c04\u5149\u7ebf\u7684\u8f90\u5c04\u7387\uff0c\u5b9e\u9645\u4e0a\u662f\u53cd\u5c04\u7387\u65b9\u7a0b\u7684\u5728\u534a\u7403\u9886\u57df \\Omega \u7684\u79ef\u5206\u7684\u7ed3\u679c\u3002\u4f46\u662f\u6211\u4eec\u5b9e\u9645\u4e0a\u4e0d\u9700\u8981\u53bb\u6c42\u79ef\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u6240\u6709\u53ef\u80fd\u7684\u5165\u5c04\u5149\u7ebf\u65b9\u5411\u6211\u4eec\u77e5\u9053\u53ea\u67094\u4e2a\u65b9\u5411\u7684\u5165\u5c04\u5149\u7ebf\u4f1a\u5f71\u54cd\u7247\u6bb5\u7684\u7740\u8272\u3002\u56e0\u4e3a\u8fd9\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5faa\u73afN\u6b21\u8ba1\u7b97\u8fd9\u4e9b\u5165\u5c04\u5149\u7ebf\u7684\u65b9\u5411(N\u4e5f\u5c31\u662f\u573a\u666f\u4e2d\u5149\u6e90\u7684\u6570\u76ee)\u3002 \u5269\u4e0b\u7684\u5de5\u4f5c\u5c31\u662f\u52a0\u4e00\u4e2a\u73af\u5883\u5149\u7167\u9879\u7ed9 Lo \uff0c\u7136\u540e\u6211\u4eec\u5c31\u62e5\u6709\u4e86\u7247\u6bb5\u7684\u6700\u540e\u989c\u8272\uff1a vec3 ambient = vec3(0.03) * albedo * ao; vec3 color = ambient + Lo;","title":"\u76f4\u63a5\u5149\u7167"},{"location":"07%20PBR/02%20Lighting/#hdr","text":"\u76f4\u5230\u73b0\u5728\uff0c\u6211\u4eec\u5047\u8bbe\u7684\u6240\u6709\u8ba1\u7b97\u90fd\u5728\u7ebf\u6027\u7684\u989c\u8272\u7a7a\u95f4\u4e2d\u8fdb\u884c\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728\u7740\u8272\u5668\u6700\u540e\u505a \u4f3d\u9a6c\u77eb\u6b63 \u3002 \u5728\u7ebf\u6027\u7a7a\u95f4\u4e2d\u8ba1\u7b97\u5149\u7167\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u56e0\u4e3aPBR\u8981\u6c42\u6240\u6709\u8f93\u5165\u90fd\u662f\u7ebf\u6027\u7684\uff0c\u5982\u679c\u4e0d\u662f\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u4f1a\u5f97\u5230\u4e0d\u6b63\u5e38\u7684\u5149\u7167\u3002\u53e6\u5916\uff0c\u6211\u4eec\u5e0c\u671b\u6240\u6709\u5149\u7167\u7684\u8f93\u5165\u90fd\u5c3d\u53ef\u80fd\u7684\u63a5\u8fd1\u4ed6\u4eec\u5728\u7269\u7406\u4e0a\u7684\u53d6\u503c\uff0c\u8fd9\u6837\u4ed6\u4eec\u7684\u53cd\u5c04\u7387\u6216\u8005\u8bf4\u989c\u8272\u503c\u5c31\u4f1a\u5728\u8272\u8c31\u4e0a\u6709\u6bd4\u8f83\u5927\u7684\u53d8\u5316\u7a7a\u95f4\u3002 Lo \u4f5c\u4e3a\u7ed3\u679c\u53ef\u80fd\u4f1a\u53d8\u5927\u5f97\u5f88\u5feb(\u8d85\u8fc71)\uff0c\u4f46\u662f\u56e0\u4e3a\u9ed8\u8ba4\u7684\u4f4e\u52a8\u6001\u8303\u56f4\uff08LDR\uff09\u800c\u53d6\u503c\u88ab\u622a\u65ad\u3002\u6240\u4ee5\u5728\u4f3d\u9a6c\u77eb\u6b63\u4e4b\u524d\u6211\u4eec\u91c7\u7528\u8272\u8c03\u6620\u5c04\u4f7f Lo \u4eceLDR\u7684\u503c\u6620\u5c04\u4e3aHDR\u7684\u503c\u3002 color = color / (color + vec3(1.0)); color = pow(color, vec3(1.0/2.2)); \u8fd9\u91cc\u6211\u4eec\u91c7\u7528\u7684\u8272\u8c03\u6620\u5c04\u65b9\u6cd5\u4e3aReinhard \u64cd\u4f5c\uff0c\u4f7f\u5f97\u6211\u4eec\u5728\u4f3d\u9a6c\u77eb\u6b63\u540e\u53ef\u4ee5\u4fdd\u7559\u5c3d\u53ef\u80fd\u591a\u7684\u8f90\u7167\u5ea6\u53d8\u5316\u3002 \u6211\u4eec\u6ca1\u6709\u4f7f\u7528\u4e00\u4e2a\u72ec\u7acb\u7684\u5e27\u7f13\u51b2\u6216\u8005\u91c7\u7528\u540e\u671f\u5904\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u76f4\u63a5\u5728\u6bcf\u4e00\u6b65\u5149\u7167\u8ba1\u7b97\u540e\u91c7\u7528\u8272\u8c03\u6620\u5c04\u548c\u4f3d\u9a6c\u77eb\u6b63\u3002 \u91c7\u7528\u7ebf\u6027\u989c\u8272\u7a7a\u95f4\u548cHDR\u5728PBR\u6e32\u67d3\u7ba1\u7ebf\u4e2d\u975e\u5e38\u91cd\u8981\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u6b63\u786e\u5730\u6355\u83b7\u5230\u56e0\u5149\u7167\u5f3a\u5ea6\u53d8\u5316\u7684\u7ec6\u8282\uff0c\u8fd9\u6700\u7ec8\u4f1a\u5bfc\u81f4\u4f60\u7684\u8ba1\u7b97\u53d8\u5f97\u4e0d\u6b63\u786e\uff0c\u5728\u89c6\u89c9\u4e0a\u770b\u4e0a\u53bb\u975e\u5e38\u4e0d\u81ea\u7136\u3002","title":"\u7ebf\u6027\u7a7a\u95f4\u548cHDR\u6e32\u67d3"},{"location":"07%20PBR/02%20Lighting/#pbr_1","text":"\u73b0\u5728\u5269\u4e0b\u7684\u4e8b\u60c5\u5c31\u662f\u628a\u505a\u597d\u8272\u8c03\u6620\u5c04\u548c\u4f3d\u9a6c\u77eb\u6b63\u7684\u989c\u8272\u503c\u4f20\u7ed9\u7247\u6bb5\u7740\u8272\u5668\u7684\u8f93\u51fa\uff0c\u7136\u540e\u6211\u4eec\u5c31\u62e5\u6709\u4e86\u81ea\u5df1\u7684\u76f4\u63a5\u5149\u7167PBR\u7740\u8272\u5668\u3002 \u4e3a\u4e86\u5b8c\u6574\u6027\uff0c\u8fd9\u91cc\u7ed9\u51fa\u4e86\u5b8c\u6574\u7684\u4ee3\u7801\uff1a #version 330 core out vec4 FragColor; in vec2 TexCoords; in vec3 WorldPos; in vec3 Normal; // material parameters uniform vec3 albedo; uniform float metallic; uniform float roughness; uniform float ao; // lights uniform vec3 lightPositions[4]; uniform vec3 lightColors[4]; uniform vec3 camPos; const float PI = 3.14159265359; float DistributionGGX(vec3 N, vec3 H, float roughness); float GeometrySchlickGGX(float NdotV, float roughness); float GeometrySmith(vec3 N, vec3 V, vec3 L, float roughness); vec3 fresnelSchlickRoughness(float cosTheta, vec3 F0, float roughness); void main() { vec3 N = normalize(Normal); vec3 V = normalize(camPos - WorldPos); vec3 F0 = vec3(0.04); F0 = mix(F0, albedo, metallic); // reflectance equation vec3 Lo = vec3(0.0); for(int i = 0; i < 4; ++i) { // calculate per-light radiance vec3 L = normalize(lightPositions[i] - WorldPos); vec3 H = normalize(V + L); float distance = length(lightPositions[i] - WorldPos); float attenuation = 1.0 / (distance * distance); vec3 radiance = lightColors[i] * attenuation; // cook-torrance brdf float NDF = DistributionGGX(N, H, roughness); float G = GeometrySmith(N, V, L, roughness); vec3 F = fresnelSchlick(max(dot(H, V), 0.0), F0); vec3 kS = F; vec3 kD = vec3(1.0) - kS; kD *= 1.0 - metallic; vec3 nominator = NDF * G * F; float denominator = 4.0 * max(dot(N, V), 0.0) * max(dot(N, L), 0.0) + 0.001; vec3 specular = nominator / denominator; // add to outgoing radiance Lo float NdotL = max(dot(N, L), 0.0); Lo += (kD * albedo / PI + specular) * radiance * NdotL; } vec3 ambient = vec3(0.03) * albedo * ao; vec3 color = ambient + Lo; color = color / (color + vec3(1.0)); color = pow(color, vec3(1.0/2.2)); FragColor = vec4(color, 1.0); } \u5e0c\u671b\u7ecf\u8fc7\u4e0a\u4e00\u4e2a\u6559\u7a0b\u7684 \u7406\u8bba\u77e5\u8bc6 \u4ee5\u53ca\u5b66\u4e60\u8fc7\u5173\u4e8e\u6e32\u67d3\u65b9\u7a0b\u7684\u4e00\u4e9b\u77e5\u8bc6\u540e\uff0c\u8fd9\u4e2a\u7740\u8272\u5668\u770b\u8d77\u6765\u4e0d\u4f1a\u592a\u53ef\u6015\u3002\u5982\u679c\u6211\u4eec\u91c7\u7528\u8fd9\u4e2a\u7740\u8272\u5668\uff0c\u52a0\u4e0a4\u4e2a\u70b9\u5149\u6e90\u548c\u4e00\u4e9b\u7403\u4f53\uff0c\u540c\u65f6\u4ee4\u8fd9\u4e9b\u7403\u4f53\u7684\u91d1\u5c5e\u6027(metallic)\u548c\u7c97\u7cd9\u5ea6(roughness)\u6cbf\u5782\u76f4\u548c\u6c34\u5e73\u65b9\u5411\u5206\u522b\u53d8\u5316\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u8fd9\u6837\u7684\u7ed3\u679c\uff1a (\u4e0a\u8ff0\u56fe\u7247)\u4ece\u4e0b\u5f80\u4e0a\u7403\u4f53\u7684\u91d1\u5c5e\u6027\u4ece0.0\u53d8\u52301.0\uff0c \u4ece\u5de6\u5230\u53f3\u7403\u4f53\u7684\u7c97\u7cd9\u5ea6\u4ece0.0\u53d8\u52301.0\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u4ec5\u4ec5\u6539\u53d8\u8fd9\u4e24\u4e2a\u503c\uff0c\u663e\u793a\u7684\u6548\u679c\u4f1a\u53d1\u751f\u5de8\u5927\u7684\u6539\u53d8\uff01 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u6574\u4e2ademo\u7684\u5b8c\u6574\u4ee3\u7801\u3002","title":"\u5b8c\u6574\u7684\u76f4\u63a5\u5149\u7167PBR\u7740\u8272\u5668"},{"location":"07%20PBR/02%20Lighting/#pbr_2","text":"\u628a\u6211\u4eec\u7cfb\u7edf\u6269\u5c55\u6210\u53ef\u4ee5\u63a5\u53d7\u7eb9\u7406\u4f5c\u4e3a\u53c2\u6570\u53ef\u4ee5\u8ba9\u6211\u4eec\u5bf9\u7269\u4f53\u7684\u6750\u8d28\u6709\u66f4\u591a\u7684\u81ea\u5b9a\u4e49\u7a7a\u95f4\uff1a [...] uniform sampler2D albedoMap; uniform sampler2D normalMap; uniform sampler2D metallicMap; uniform sampler2D roughnessMap; uniform sampler2D aoMap; void main() { vec3 albedo = pow(texture(albedoMap, TexCoords).rgb, 2.2); vec3 normal = getNormalFromNormalMap(); float metallic = texture(metallicMap, TexCoords).r; float roughness = texture(roughnessMap, TexCoords).r; float ao = texture(aoMap, TexCoords).r; [...] } \u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\u4e00\u822c\u6765\u8bf4\u53cd\u5c04\u7387(albedo)\u7eb9\u7406\u5728\u7f8e\u672f\u4eba\u5458\u521b\u5efa\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u5728sRGB\u7a7a\u95f4\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728\u5149\u7167\u8ba1\u7b97\u4e4b\u524d\u5148\u628a\u4ed6\u4eec\u8f6c\u6362\u5230\u7ebf\u6027\u7a7a\u95f4\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u73af\u5883\u5149\u906e\u853d\u8d34\u56fe(ambient occlusion maps)\u4e5f\u9700\u8981\u6211\u4eec\u8f6c\u6362\u5230\u7ebf\u6027\u7a7a\u95f4\u3002\u4e0d\u8fc7\u91d1\u5c5e\u6027(Metallic)\u548c\u7c97\u7cd9\u5ea6(Roughness)\u8d34\u56fe\u5927\u591a\u6570\u65f6\u95f4\u90fd\u4f1a\u4fdd\u8bc1\u5728\u7ebf\u6027\u7a7a\u95f4\u4e2d\u3002 \u53ea\u662f\u628a\u4e4b\u524d\u7684\u7403\u4f53\u7684\u6750\u8d28\u6027\u8d28\u6362\u6210\u7eb9\u7406\u5c5e\u6027\uff0c\u5c31\u5728\u89c6\u89c9\u4e0a\u6709\u5de8\u5927\u7684\u63d0\u5347\uff1a \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u7eb9\u7406\u8d34\u56fe\u793a\u4f8b\u7684\u5168\u90e8\u4ee3\u7801\uff0c\u4ee5\u53ca\u6211\u7528\u7684 \u7eb9\u7406 (\u8bb0\u5f97\u52a0\u4e0a\u4e00\u5f20\u5168\u767d\u8272\u7684\u73af\u5883\u5149\u906e\u853d\u8d34\u56fe)\u3002\u6ce8\u610f\u91d1\u5c5e\u8868\u9762\u4f1a\u5728\u573a\u666f\u4e2d\u770b\u8d77\u6765\u6709\u70b9\u9ed1\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6ca1\u6709\u6f2b\u53cd\u5c04\u3002\u5b83\u4eec\u4f1a\u5728\u8003\u8651\u73af\u5883\u955c\u9762\u5149\u7167\u7684\u65f6\u5019\u770b\u8d77\u6765\u66f4\u52a0\u81ea\u7136\uff0c\u4e0d\u8fc7\u8fd9\u662f\u6211\u4eec\u4e0b\u4e00\u4e2a\u6559\u7a0b\u7684\u4e8b\u60c5\u4e86\u3002 \u76f8\u6bd4\u8d77\u5728\u7f51\u4e0a\u627e\u5230\u7684\u5176\u4ed6PBR\u6e32\u67d3\u7ed3\u679c\u6765\u8bf4\uff0c\u5c3d\u7ba1\u5728\u89c6\u89c9\u4e0a\u4e0d\u7b97\u662f\u975e\u5e38\u9707\u64bc\uff0c\u56e0\u4e3a\u6211\u4eec\u8fd8\u6ca1\u8003\u8651\u5230 \u57fa\u4e8e\u56fe\u7247\u7684\u5149\u7167(IBL) \uff0c\u4f46\u6211\u4eec\u73b0\u5728\u4e5f\u7b97\u662f\u6709\u4e86\u4e00\u4e2a\u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3\u5668\u4e86\uff0c\u867d\u7136\u8fd8\u6ca1\u8003\u8651IBL\uff0c\u4f46\u4f60\u4f1a\u53d1\u73b0\u4f60\u7684\u5149\u7167\u770b\u8d77\u6765\u66f4\u52a0\u771f\u5b9e\u4e86\u3002","title":"\u5e26\u8d34\u56fe\u7684PBR"},{"location":"07%20PBR/03%20IBL/01%20Diffuse%20irradiance/","text":"\u6f2b\u53cd\u5c04\u8f90\u7167\u5ea6 \u539f\u6587 Diffuse irradiance \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 flyingSnow \u6821\u5bf9 \u57fa\u4e8e\u56fe\u50cf\u7684\u5149\u7167 (Image based lighting, IBL)\u662f\u4e00\u7c7b\u5149\u7167\u6280\u672f\u7684\u96c6\u5408\u3002\u5176\u5149\u6e90\u4e0d\u662f\u5982 \u524d\u4e00\u8282\u6559\u7a0b \u4e2d\u63cf\u8ff0\u7684\u53ef\u5206\u89e3\u7684\u76f4\u63a5\u5149\u6e90\uff0c\u800c\u662f\u5c06\u5468\u56f4\u73af\u5883\u6574\u4f53\u89c6\u4e3a\u4e00\u4e2a\u5927\u5149\u6e90\u3002IBL \u901a\u5e38\u4f7f\u7528\uff08\u53d6\u81ea\u73b0\u5b9e\u4e16\u754c\u6216\u4ece3D\u573a\u666f\u751f\u6210\u7684\uff09\u73af\u5883\u7acb\u65b9\u4f53\u8d34\u56fe (Cubemap) \uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6bcf\u4e2a\u50cf\u7d20\u89c6\u4e3a\u5149\u6e90\uff0c\u5728\u6e32\u67d3\u65b9\u7a0b\u4e2d\u76f4\u63a5\u4f7f\u7528\u5b83\u3002\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u6709\u6548\u5730\u6355\u6349\u73af\u5883\u7684\u5168\u5c40\u5149\u7167\u548c\u6c1b\u56f4\uff0c\u4f7f\u7269\u4f53 \u66f4\u597d\u5730\u878d\u5165 \u5176\u73af\u5883\u3002 \u7531\u4e8e\u57fa\u4e8e\u56fe\u50cf\u7684\u5149\u7167\u7b97\u6cd5\u4f1a\u6355\u6349\u90e8\u5206\u751a\u81f3\u5168\u90e8\u7684\u73af\u5883\u5149\u7167\uff0c\u901a\u5e38\u8ba4\u4e3a\u5b83\u662f\u4e00\u79cd\u66f4\u7cbe\u786e\u7684\u73af\u5883\u5149\u7167\u8f93\u5165\u683c\u5f0f\uff0c\u751a\u81f3\u4e5f\u53ef\u4ee5\u8bf4\u662f\u4e00\u79cd\u5168\u5c40\u5149\u7167\u7684\u7c97\u7565\u8fd1\u4f3c\u3002\u57fa\u4e8e\u6b64\u7279\u6027\uff0cIBL \u5bf9 PBR \u5f88\u6709\u610f\u4e49\uff0c\u56e0\u4e3a\u5f53\u6211\u4eec\u5c06\u73af\u5883\u5149\u7eb3\u5165\u8ba1\u7b97\u4e4b\u540e\uff0c\u7269\u4f53\u5728\u7269\u7406\u65b9\u9762\u770b\u8d77\u6765\u4f1a\u66f4\u52a0\u51c6\u786e\u3002 \u8981\u5f00\u59cb\u5c06 IBL \u5f15\u5165\u6211\u4eec\u7684 PBR \u7cfb\u7edf\uff0c\u8ba9\u6211\u4eec\u518d\u6b21\u5feb\u901f\u770b\u4e00\u4e0b\u53cd\u5c04\u65b9\u7a0b\uff1a L_o(p,\\omega_o) = \\int\\limits_{\\Omega} (k_d\\frac{c}{\\pi} + k_s\\frac{DFG}{4(\\omega_o \\cdot n)(\\omega_i \\cdot n)}) L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \u5982\u524d\u6240\u8ff0\uff0c\u6211\u4eec\u7684\u4e3b\u8981\u76ee\u6807\u662f\u8ba1\u7b97\u534a\u7403 \\Omega \u4e0a\u6240\u6709\u5165\u5c04\u5149\u65b9\u5411 w_i \u7684\u79ef\u5206\u3002\u89e3\u51b3\u4e0a\u4e00\u8282\u6559\u7a0b\u4e2d\u7684\u79ef\u5206\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a\u6211\u4eec\u4e8b\u5148\u5df2\u7ecf\u77e5\u9053\u4e86\u5bf9\u79ef\u5206\u6709\u8d21\u732e\u7684\u3001\u82e5\u5e72\u7cbe\u786e\u7684\u5149\u7ebf\u65b9\u5411 w_i \u3002\u7136\u800c\u8fd9\u6b21\uff0c\u6765\u81ea\u5468\u56f4\u73af\u5883\u7684 \u6bcf\u4e2a \u65b9\u5411 w_i \u7684\u5165\u5c04\u5149\u90fd\u53ef\u80fd\u5177\u6709\u4e00\u4e9b\u8f90\u5c04\u5ea6\uff0c\u4f7f\u5f97\u89e3\u51b3\u79ef\u5206\u53d8\u5f97\u4e0d\u90a3\u4e48\u7b80\u5355\u3002\u8fd9\u4e3a\u89e3\u51b3\u79ef\u5206\u63d0\u51fa\u4e86\u4e24\u4e2a\u8981\u6c42\uff1a \u7ed9\u5b9a\u4efb\u4f55\u65b9\u5411\u5411\u91cf w_i \uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u65b9\u6cd5\u6765\u83b7\u53d6\u8fd9\u4e2a\u65b9\u5411\u4e0a\u573a\u666f\u7684\u8f90\u5c04\u5ea6\u3002 \u89e3\u51b3\u79ef\u5206\u9700\u8981\u5feb\u901f\u4e14\u5b9e\u65f6\u3002 \u73b0\u5728\u770b\uff0c\u7b2c\u4e00\u4e2a\u8981\u6c42\u76f8\u5bf9\u5bb9\u6613\u4e9b\u3002\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e9b\u601d\u8def\uff1a\u8868\u793a\u73af\u5883\u6216\u573a\u666f\u8f90\u7167\u5ea6\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\uff08\u9884\u5904\u7406\u8fc7\u7684\uff09\u73af\u5883\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u7ed9\u5b9a\u8fd9\u6837\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6bcf\u4e2a\u7eb9\u7d20\u89c6\u4e3a\u4e00\u4e2a\u5149\u6e90\u3002\u4f7f\u7528\u4e00\u4e2a\u65b9\u5411\u5411\u91cf w_i \u5bf9\u6b64\u7acb\u65b9\u4f53\u8d34\u56fe\u8fdb\u884c\u91c7\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u83b7\u53d6\u8be5\u65b9\u5411\u4e0a\u7684\u573a\u666f\u8f90\u7167\u5ea6\u3002 \u5982\u6b64\uff0c\u7ed9\u5b9a\u65b9\u5411\u5411\u91cf w_i \uff0c\u83b7\u53d6\u6b64\u65b9\u5411\u4e0a\u573a\u666f\u8f90\u5c04\u5ea6\u7684\u65b9\u6cd5\u5c31\u7b80\u5316\u4e3a\uff1a vec3 radiance = texture(_cubemapEnvironment, w_i).rgb; \u4e3a\u4e86\u4ee5\u66f4\u6709\u6548\u7684\u65b9\u5f0f\u89e3\u51b3\u79ef\u5206\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u5176\u5927\u90e8\u5206\u7ed3\u679c\u8fdb\u884c\u9884\u5904\u7406\u2014\u2014\u6216\u79f0 \u9884\u8ba1\u7b97 \u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5fc5\u987b\u6df1\u5165\u7814\u7a76\u53cd\u5c04\u65b9\u7a0b\uff1a L_o(p,\\omega_o) = \\int\\limits_{\\Omega} (k_d\\frac{c}{\\pi} + k_s\\frac{DFG}{4(\\omega_o \\cdot n)(\\omega_i \\cdot n)}) L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \u4ed4\u7ec6\u7814\u7a76\u53cd\u5c04\u65b9\u7a0b\uff0c\u6211\u4eec\u53d1\u73b0 BRDF \u7684\u6f2b\u53cd\u5c04 k_d \u548c\u955c\u9762 k_s \u9879\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u79ef\u5206\u5206\u6210\u4e24\u90e8\u5206\uff1a L_o(p,\\omega_o) = \\int\\limits_{\\Omega} (k_d\\frac{c}{\\pi}) L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i + \\int\\limits_{\\Omega} (k_s\\frac{DFG}{4(\\omega_o \\cdot n)(\\omega_i \\cdot n)}) L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \u901a\u8fc7\u5c06\u79ef\u5206\u5206\u6210\u4e24\u90e8\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u5f00\u7814\u7a76\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u90e8\u5206\uff0c\u672c\u6559\u7a0b\u7684\u91cd\u70b9\u662f\u6f2b\u53cd\u5c04\u79ef\u5206\u90e8\u5206\u3002 \u4ed4\u7ec6\u89c2\u5bdf\u6f2b\u53cd\u5c04\u79ef\u5206\uff0c\u6211\u4eec\u53d1\u73b0\u6f2b\u53cd\u5c04\u5170\u4f2f\u7279\u9879\u662f\u4e00\u4e2a\u5e38\u6570\u9879\uff08\u989c\u8272 c \u3001\u6298\u5c04\u7387 k_d \u548c \\pi \u5728\u6574\u4e2a\u79ef\u5206\u662f\u5e38\u6570\uff09\uff0c\u4e0d\u4f9d\u8d56\u4e8e\u4efb\u4f55\u79ef\u5206\u53d8\u91cf\u3002\u57fa\u4e8e\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5e38\u6570\u9879\u79fb\u51fa\u6f2b\u53cd\u5c04\u79ef\u5206\uff1a L_o(p,\\omega_o) = k_d\\frac{c}{\\pi} \\int\\limits_{\\Omega} L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \u8fd9\u7ed9\u4e86\u6211\u4eec\u4e00\u4e2a\u53ea\u4f9d\u8d56\u4e8e w_i \u7684\u79ef\u5206\uff08\u5047\u8bbe p \u4f4d\u4e8e\u73af\u5883\u8d34\u56fe\u7684\u4e2d\u5fc3\uff09\u3002\u6709\u4e86\u8fd9\u4e9b\u77e5\u8bc6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba1\u7b97\u6216\u9884\u8ba1\u7b97\u4e00\u4e2a\u65b0\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u5b83\u5728\u6bcf\u4e2a\u91c7\u6837\u65b9\u5411\u2014\u2014\u4e5f\u5c31\u662f\u7eb9\u7d20\u2014\u2014\u4e2d\u5b58\u50a8\u6f2b\u53cd\u5c04\u79ef\u5206\u7684\u7ed3\u679c\uff0c\u8fd9\u4e9b\u7ed3\u679c\u662f\u901a\u8fc7 \u5377\u79ef \u8ba1\u7b97\u51fa\u6765\u7684\u3002 \u5377\u79ef\u7684\u7279\u6027\u662f\uff0c\u5bf9\u6570\u636e\u96c6\u4e2d\u7684\u4e00\u4e2a\u6761\u76ee\u505a\u4e00\u4e9b\u8ba1\u7b97\u65f6\uff0c\u8981\u8003\u8651\u5230\u6570\u636e\u96c6\u4e2d\u7684\u6240\u6709\u5176\u4ed6\u6761\u76ee\u3002\u8fd9\u91cc\u7684\u6570\u636e\u96c6\u5c31\u662f\u573a\u666f\u7684\u8f90\u5c04\u5ea6\u6216\u73af\u5883\u8d34\u56fe\u3002\u56e0\u6b64\uff0c\u8981\u5bf9\u7acb\u65b9\u4f53\u8d34\u56fe\u4e2d\u7684\u6bcf\u4e2a\u91c7\u6837\u65b9\u5411\u505a\u8ba1\u7b97\uff0c\u6211\u4eec\u90fd\u4f1a\u8003\u8651\u534a\u7403 \\Omega \u4e0a\u7684\u6240\u6709\u5176\u4ed6\u91c7\u6837\u65b9\u5411\u3002 \u4e3a\u4e86\u5bf9\u73af\u5883\u8d34\u56fe\u8fdb\u884c\u5377\u79ef\uff0c\u6211\u4eec\u901a\u8fc7\u5bf9\u534a\u7403 \\Omega \u4e0a\u7684\u5927\u91cf\u65b9\u5411\u8fdb\u884c\u79bb\u6563\u91c7\u6837\u5e76\u5bf9\u5176\u8f90\u5c04\u5ea6\u53d6\u5e73\u5747\u503c\uff0c\u6765\u8ba1\u7b97\u6bcf\u4e2a\u8f93\u51fa\u91c7\u6837\u65b9\u5411 w_o \u7684\u79ef\u5206\u3002\u7528\u6765\u91c7\u6837\u65b9\u5411 w_i \u7684\u534a\u7403\uff0c\u8981\u9762\u5411\u5377\u79ef\u7684\u8f93\u51fa\u91c7\u6837\u65b9\u5411 w_o \u3002 \u8fd9\u4e2a\u9884\u8ba1\u7b97\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u5728\u6bcf\u4e2a\u91c7\u6837\u65b9\u5411 w_o \u4e0a\u5b58\u50a8\u5176\u79ef\u5206\u7ed3\u679c\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u573a\u666f\u4e2d\u6240\u6709\u80fd\u591f\u51fb\u4e2d\u9762\u5411 w_o \u7684\u8868\u9762\u7684\u95f4\u63a5\u6f2b\u53cd\u5c04\u5149\u7684\u9884\u8ba1\u7b97\u603b\u548c\u3002\u8fd9\u6837\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u88ab\u79f0\u4e3a \u8f90\u7167\u5ea6\u56fe \uff0c\u56e0\u4e3a\u7ecf\u8fc7\u5377\u79ef\u8ba1\u7b97\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u80fd\u8ba9\u6211\u4eec\u4ece\u4efb\u4f55\u65b9\u5411\u6709\u6548\u5730\u76f4\u63a5\u91c7\u6837\u573a\u666f\uff08\u9884\u8ba1\u7b97\u597d\u7684\uff09\u8f90\u7167\u5ea6\u3002 Important \u8f90\u5c04\u65b9\u7a0b\u4e5f\u4f9d\u8d56\u4e86\u4f4d\u7f6e p \uff0c\u4e0d\u8fc7\u8fd9\u91cc\u6211\u4eec\u5047\u8bbe\u5b83\u4f4d\u4e8e\u8f90\u7167\u5ea6\u56fe\u7684\u4e2d\u5fc3\u3002\u8fd9\u5c31\u610f\u5473\u7740\u6240\u6709\u6f2b\u53cd\u5c04\u95f4\u63a5\u5149\u53ea\u80fd\u6765\u81ea\u540c\u4e00\u4e2a\u73af\u5883\u8d34\u56fe\uff0c\u8fd9\u6837\u53ef\u80fd\u4f1a\u7834\u574f\u73b0\u5b9e\u611f\uff08\u7279\u522b\u662f\u5728\u5ba4\u5185\uff09\u3002\u6e32\u67d3\u5f15\u64ce\u901a\u8fc7\u5728\u573a\u666f\u4e2d\u653e\u7f6e\u591a\u4e2a \u53cd\u5c04\u63a2\u9488 \u6765\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u6bcf\u4e2a\u53cd\u5c04\u63a2\u9488\u5355\u72ec\u9884\u8ba1\u7b97\u5176\u5468\u56f4\u73af\u5883\u7684\u8f90\u7167\u5ea6\u56fe\u3002\u8fd9\u6837\uff0c\u4f4d\u7f6e p \u5904\u7684\u8f90\u7167\u5ea6\uff08\u4ee5\u53ca\u8f90\u5c04\u5ea6\uff09\u662f\u53d6\u79bb\u5176\u6700\u8fd1\u7684\u53cd\u5c04\u63a2\u9488\u4e4b\u95f4\u7684\u8f90\u7167\u5ea6\uff08\u8f90\u5c04\u5ea6\uff09\u5185\u63d2\u503c\u3002\u76ee\u524d\uff0c\u6211\u4eec\u5047\u8bbe\u603b\u662f\u4ece\u4e2d\u5fc3\u91c7\u6837\u73af\u5883\u8d34\u56fe\uff0c\u628a\u53cd\u5c04\u63a2\u9488\u7684\u8ba8\u8bba\u7559\u7ed9\u540e\u9762\u7684\u6559\u7a0b\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u73af\u5883\u7acb\u65b9\u4f53\u8d34\u56fe\u53ca\u5176\u751f\u6210\u7684\u8f90\u7167\u5ea6\u56fe\u7684\u793a\u4f8b\uff08\u7531 Wave \u5f15\u64ce \u63d0\u4f9b\uff09\uff0c\u6bcf\u4e2a\u65b9\u5411 w_o \u7684\u573a\u666f\u8f90\u5c04\u5ea6\u53d6\u5e73\u5747\u503c\u3002 \u7531\u4e8e\u7acb\u65b9\u4f53\u8d34\u56fe\u6bcf\u4e2a\u7eb9\u7d20\u4e2d\u5b58\u50a8\u4e86\uff08 w_o \u65b9\u5411\u7684\uff09\u5377\u79ef\u7ed3\u679c\uff0c\u8f90\u7167\u5ea6\u56fe\u770b\u8d77\u6765\u6709\u70b9\u50cf\u73af\u5883\u7684\u5e73\u5747\u989c\u8272\u6216\u5149\u7167\u56fe\u3002\u4f7f\u7528\u4efb\u4f55\u4e00\u4e2a\u5411\u91cf\u5bf9\u7acb\u65b9\u4f53\u8d34\u56fe\u8fdb\u884c\u91c7\u6837\uff0c\u5c31\u53ef\u4ee5\u83b7\u53d6\u8be5\u65b9\u5411\u4e0a\u7684\u573a\u666f\u8f90\u7167\u5ea6\u3002 PBR \u548c HDR \u6211\u4eec\u5728 \u5149\u7167\u6559\u7a0b \u4e2d\u7b80\u5355\u63d0\u5230\u8fc7\uff1a\u5728 PBR \u6e32\u67d3\u7ba1\u7ebf\u4e2d\u8003\u8651\u9ad8\u52a8\u6001\u8303\u56f4(High Dynamic Range, HDR)\u7684\u573a\u666f\u5149\u7167\u975e\u5e38\u91cd\u8981\u3002\u7531\u4e8e PBR \u7684\u5927\u90e8\u5206\u8f93\u5165\u57fa\u4e8e\u5b9e\u9645\u7269\u7406\u5c5e\u6027\u548c\u6d4b\u91cf\uff0c\u56e0\u6b64\u4e3a\u5165\u5c04\u5149\u503c\u627e\u5230\u5176 \u7269\u7406\u7b49\u6548\u503c \u662f\u5f88\u91cd\u8981\u7684\u3002\u65e0\u8bba\u6211\u4eec\u662f\u5bf9\u5149\u7ebf\u7684\u8f90\u5c04\u901a\u91cf\u8fdb\u884c\u7814\u7a76\u6027\u731c\u6d4b\uff0c\u8fd8\u662f\u4f7f\u7528\u5b83\u4eec\u7684\u76f4\u63a5\u7269\u7406\u7b49\u6548\u503c\uff0c\u8bf8\u5982\u4e00\u4e2a\u7b80\u5355\u706f\u6ce1\u548c\u592a\u9633\u4e4b\u95f4\u7684\u8fd9\u79cd\u5dee\u5f02\u90fd\u662f\u5f88\u91cd\u8981\u7684\uff0c\u5982\u679c\u4e0d\u5728 HDR \u6e32\u67d3\u73af\u5883\u4e2d\u5de5\u4f5c\uff0c\u5c31\u65e0\u6cd5\u6b63\u786e\u6307\u5b9a\u6bcf\u4e2a\u5149\u7684\u76f8\u5bf9\u5f3a\u5ea6\u3002 \u56e0\u6b64\uff0cPBR \u548c HDR \u9700\u8981\u5bc6\u5207\u5408\u4f5c\uff0c\u4f46\u8fd9\u4e9b\u4e0e\u57fa\u4e8e\u56fe\u50cf\u7684\u5149\u7167\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f\u6211\u4eec\u5728\u4e4b\u524d\u7684\u6559\u7a0b\u4e2d\u5df2\u7ecf\u770b\u5230\uff0c\u8ba9 PBR \u5728 HDR \u4e0b\u5de5\u4f5c\u8fd8\u6bd4\u8f83\u5bb9\u6613\u3002\u7136\u800c\uff0c\u56de\u60f3\u4e00\u4e0b\u57fa\u4e8e\u56fe\u50cf\u7684\u5149\u7167\uff0c\u6211\u4eec\u5c06\u73af\u5883\u7684\u95f4\u63a5\u5149\u5f3a\u5ea6\u5efa\u7acb\u5728\u73af\u5883\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u989c\u8272\u503c\u4e0a\uff0c\u6211\u4eec\u9700\u8981\u67d0\u79cd\u65b9\u5f0f\u5c06\u5149\u7167\u7684\u9ad8\u52a8\u6001\u8303\u56f4\u5b58\u50a8\u5230\u73af\u5883\u8d34\u56fe\u4e2d\u3002 \u6211\u4eec\u4e00\u76f4\u4f7f\u7528\u7684\u73af\u5883\u8d34\u56fe\u662f\u4ee5\u7acb\u65b9\u4f53\u8d34\u56fe\u5f62\u5f0f\u50a8\u5b58\u2014\u2014\u5982\u540c\u4e00\u4e2a \u5929\u7a7a\u76d2 \u2014\u2014\u5c5e\u4e8e\u4f4e\u52a8\u6001\u8303\u56f4(Low Dynamic Range, LDR)\u3002\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u5404\u4e2a\u9762\u7684\u56fe\u50cf\u7684\u989c\u8272\u503c\uff0c\u5176\u8303\u56f4\u4ecb\u4e8e 0.0 \u548c 1.0 \u4e4b\u95f4\uff0c\u8ba1\u7b97\u8fc7\u7a0b\u4e5f\u662f\u7167\u503c\u5904\u7406\u3002\u8fd9\u6837\u867d\u7136\u53ef\u80fd\u9002\u5408\u89c6\u89c9\u8f93\u51fa\uff0c\u4f46\u4f5c\u4e3a\u7269\u7406\u8f93\u5165\u53c2\u6570\uff0c\u6ca1\u6709\u4ec0\u4e48\u7528\u5904\u3002 \u8f90\u5c04\u5ea6\u7684 HDR \u6587\u4ef6\u683c\u5f0f \u8c08\u53ca\u8f90\u5c04\u5ea6\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u8f90\u5c04\u5ea6\u6587\u4ef6\u7684\u683c\u5f0f\uff08\u6269\u5c55\u540d\u4e3a .hdr\uff09\u5b58\u50a8\u4e86\u4e00\u5f20\u5b8c\u6574\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u6240\u6709\u516d\u4e2a\u9762\u6570\u636e\u90fd\u662f\u6d6e\u70b9\u6570\uff0c\u5141\u8bb8\u6307\u5b9a 0.0 \u5230 1.0 \u8303\u56f4\u4e4b\u5916\u7684\u989c\u8272\u503c\uff0c\u4ee5\u4f7f\u5149\u7ebf\u5177\u6709\u6b63\u786e\u7684\u989c\u8272\u5f3a\u5ea6\u3002\u8fd9\u4e2a\u6587\u4ef6\u683c\u5f0f\u4f7f\u7528\u4e86\u4e00\u4e2a\u806a\u660e\u7684\u6280\u5de7\u6765\u5b58\u50a8\u6bcf\u4e2a\u6d6e\u70b9\u503c\uff1a\u5b83\u5e76\u975e\u76f4\u63a5\u5b58\u50a8\u6bcf\u4e2a\u901a\u9053\u7684 32 \u4f4d\u6570\u636e\uff0c\u800c\u662f\u6bcf\u4e2a\u901a\u9053\u5b58\u50a8 8 \u4f4d\uff0c\u518d\u4ee5 alpha \u901a\u9053\u5b58\u653e\u6307\u6570\u2014\u2014\u867d\u7136\u786e\u5b9e\u4f1a\u5bfc\u81f4\u7cbe\u5ea6\u635f\u5931\uff0c\u4f46\u662f\u975e\u5e38\u6709\u6548\u7387\uff0c\u4e0d\u8fc7\u9700\u8981\u89e3\u6790\u7a0b\u5e8f\u5c06\u6bcf\u79cd\u989c\u8272\u91cd\u65b0\u8f6c\u6362\u4e3a\u5b83\u4eec\u7684\u6d6e\u70b9\u6570\u7b49\u6548\u503c\u3002 sIBL \u6863\u6848 \u4e2d\u6709\u5f88\u591a\u53ef\u4ee5\u514d\u8d39\u83b7\u53d6\u7684\u8f90\u5c04\u5ea6 HDR \u73af\u5883\u8d34\u56fe\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\uff1a \u53ef\u80fd\u4e0e\u60a8\u671f\u671b\u7684\u5b8c\u5168\u4e0d\u540c\uff0c\u56e0\u4e3a\u56fe\u50cf\u975e\u5e38\u626d\u66f2\uff0c\u5e76\u4e14\u6ca1\u6709\u6211\u4eec\u4e4b\u524d\u770b\u5230\u7684\u73af\u5883\u8d34\u56fe\u7684\u516d\u4e2a\u7acb\u65b9\u4f53\u8d34\u56fe\u9762\u3002\u8fd9\u5f20\u73af\u5883\u8d34\u56fe\u662f\u4ece\u7403\u4f53\u6295\u5f71\u5230\u5e73\u9762\u4e0a\uff0c\u4ee5\u4f7f\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u73af\u5883\u4fe1\u606f\u5b58\u50a8\u5230\u4e00\u5f20 \u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u56fe (Equirectangular Map) \u4e2d\u3002\u6709\u4e00\u70b9\u786e\u5b9e\u9700\u8981\u8bf4\u660e\uff1a\u6c34\u5e73\u89c6\u89d2\u9644\u8fd1\u5206\u8fa8\u7387\u8f83\u9ad8\uff0c\u800c\u5e95\u90e8\u548c\u9876\u90e8\u65b9\u5411\u5206\u8fa8\u7387\u8f83\u4f4e,\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u6298\u8877\u65b9\u6848\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u51e0\u4e4e\u6240\u6709\u6e32\u67d3\u5668\u6765\u8bf4\uff0c\u5927\u90e8\u5206\u6709\u610f\u4e49\u7684\u5149\u7167\u548c\u73af\u5883\u4fe1\u606f\u90fd\u5728\u6c34\u5e73\u89c6\u89d2\u9644\u8fd1\u65b9\u5411\u3002 HDR \u548c stb_image.h \u76f4\u63a5\u52a0\u8f7d\u8f90\u5c04\u5ea6 HDR \u56fe\u50cf\u9700\u8981\u4e00\u4e9b \u6587\u4ef6\u683c\u5f0f \u7684\u77e5\u8bc6\uff0c\u867d\u7136\u4e0d\u662f\u5f88\u56f0\u96be\uff0c\u4f46\u4ecd\u7136\u5f88\u9ebb\u70e6\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u4e00\u4e2a\u5e38\u7528\u7684\u5934\u6587\u4ef6\u5e93 stb_image.h \u652f\u6301\u5c06\u8f90\u5c04\u5ea6 HDR \u56fe\u50cf\u76f4\u63a5\u52a0\u8f7d\u4e3a\u4e00\u4e2a\u6d6e\u70b9\u6570\u6570\u7ec4\uff0c\u5b8c\u5168\u7b26\u5408\u6211\u4eec\u7684\u9700\u8981\u3002\u5c06 stb_image \u6dfb\u52a0\u5230\u9879\u76ee\u4e2d\u4e4b\u540e\uff0c\u52a0\u8f7dHDR\u56fe\u50cf\u975e\u5e38\u7b80\u5355\uff0c\u5982\u4e0b\uff1a #include \"stb_image.h\" [...] stbi_set_flip_vertically_on_load(true); int width, height, nrComponents; float *data = stbi_loadf(\"newport_loft.hdr\", &width, &height, &nrComponents, 0); unsigned int hdrTexture; if (data) { glGenTextures(1, &hdrTexture); glBindTexture(GL_TEXTURE_2D, hdrTexture); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB16F, width, height, 0, GL_RGB, GL_FLOAT, data); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR); stbi_image_free(data); } else { std::cout << \"Failed to load HDR image.\" << std::endl; } stb_image.h \u81ea\u52a8\u5c06 HDR \u503c\u6620\u5c04\u5230\u4e00\u4e2a\u6d6e\u70b9\u6570\u5217\u8868\uff1a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u901a\u905332\u4f4d\uff0c\u6bcf\u4e2a\u989c\u8272 3 \u4e2a\u901a\u9053\u3002\u6211\u4eec\u8981\u5c06\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71 HDR \u73af\u5883\u8d34\u56fe\u8f6c\u5b58\u5230 2D \u6d6e\u70b9\u7eb9\u7406\u4e2d\uff0c\u8fd9\u5c31\u662f\u6240\u8981\u505a\u7684\u5168\u90e8\u5de5\u4f5c\u3002 \u4ece\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u5230\u7acb\u65b9\u4f53\u8d34\u56fe \u5f53\u7136\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u56fe\u83b7\u53d6\u73af\u5883\u4fe1\u606f\uff0c\u4f46\u662f\u8fd9\u4e9b\u64cd\u4f5c\u8fd8\u662f\u663e\u5f97\u76f8\u5bf9\u6602\u8d35\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u91c7\u6837\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6027\u80fd\u66f4\u9ad8\u3002\u56e0\u6b64\uff0c\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5c06\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u56fe\u8f6c\u6362\u4e3a\u7acb\u65b9\u4f53\u8d34\u56fe\u4ee5\u5907\u8fdb\u4e00\u6b65\u5904\u7406\u3002\u8bf7\u6ce8\u610f\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u8fd8\u5c06\u5c55\u793a\u5982\u4f55\u5bf9\u7b49\u8ddd\u67f1\u72b6\u683c\u5f0f\u7684\u6295\u5f71\u56fe\u91c7\u6837\uff0c\u5982\u540c\u91c7\u6837 3D \u73af\u5883\u8d34\u56fe\u4e00\u6837\uff0c\u60a8\u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u60a8\u559c\u6b22\u7684\u4efb\u4f55\u89e3\u51b3\u65b9\u6848\u3002 \u8981\u5c06\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u56fe\u8f6c\u6362\u4e3a\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u6211\u4eec\u9700\u8981\u6e32\u67d3\u4e00\u4e2a\uff08\u5355\u4f4d\uff09\u7acb\u65b9\u4f53\uff0c\u5e76\u4ece\u5185\u90e8\u5c06\u7b49\u8ddd\u67f1\u72b6\u56fe\u6295\u5f71\u5230\u7acb\u65b9\u4f53\u7684\u6bcf\u4e2a\u9762\uff0c\u5e76\u5c06\u7acb\u65b9\u4f53\u7684\u516d\u4e2a\u9762\u7684\u56fe\u50cf\u6784\u9020\u6210\u7acb\u65b9\u4f53\u8d34\u56fe\u3002\u6b64\u7acb\u65b9\u4f53\u7684\u9876\u70b9\u7740\u8272\u5668\u53ea\u662f\u6309\u539f\u6837\u6e32\u67d3\u7acb\u65b9\u4f53\uff0c\u5e76\u5c06\u5176\u5c40\u90e8\u5750\u6807\u4f5c\u4e3a 3D \u91c7\u6837\u5411\u91cf\u4f20\u9012\u7ed9\u7247\u6bb5\u7740\u8272\u5668\uff1a #version 330 core layout (location = 0) in vec3 aPos; out vec3 localPos; uniform mat4 projection; uniform mat4 view; void main() { localPos = aPos; gl_Position = projection * view * vec4(localPos, 1.0); } \u800c\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u4e3a\u7acb\u65b9\u4f53\u7684\u6bcf\u4e2a\u90e8\u5206\u7740\u8272\uff0c\u65b9\u6cd5\u7c7b\u4f3c\u4e8e\u5c06\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u56fe\u6574\u9f50\u5730\u6298\u53e0\u5230\u7acb\u65b9\u4f53\u7684\u6bcf\u4e2a\u9762\u4e00\u6837\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5148\u83b7\u53d6\u7247\u6bb5\u7684\u91c7\u6837\u65b9\u5411\uff0c\u8fd9\u4e2a\u65b9\u5411\u662f\u4ece\u7acb\u65b9\u4f53\u7684\u5c40\u90e8\u5750\u6807\u8fdb\u884c\u63d2\u503c\u5f97\u5230\u7684\uff0c\u7136\u540e\u4f7f\u7528\u6b64\u65b9\u5411\u5411\u91cf\u548c\u4e00\u4e9b\u4e09\u89d2\u5b66\u9b54\u6cd5\u5bf9\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u56fe\u8fdb\u884c\u91c7\u6837\uff0c\u5982\u540c\u7acb\u65b9\u4f53\u56fe\u672c\u8eab\u4e00\u6837\u3002\u6211\u4eec\u76f4\u63a5\u5c06\u7ed3\u679c\u5b58\u50a8\u5230\u7acb\u65b9\u4f53\u6bcf\u4e2a\u9762\u7684\u7247\u6bb5\u4e2d\uff0c\u4ee5\u4e0b\u5c31\u662f\u6211\u4eec\u9700\u8981\u505a\u7684\uff1a #version 330 core out vec4 FragColor; in vec3 localPos; uniform sampler2D equirectangularMap; const vec2 invAtan = vec2(0.1591, 0.3183); vec2 SampleSphericalMap(vec3 v) { vec2 uv = vec2(atan(v.z, v.x), asin(v.y)); uv *= invAtan; uv += 0.5; return uv; } void main() { vec2 uv = SampleSphericalMap(normalize(localPos)); // make sure to normalize localPos vec3 color = texture(equirectangularMap, uv).rgb; FragColor = vec4(color, 1.0); } \u5982\u679c\u7ed9\u5b9aHDR\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u56fe\uff0c\u5728\u573a\u666f\u7684\u4e2d\u5fc3\u6e32\u67d3\u4e00\u4e2a\u7acb\u65b9\u4f53\uff0c\u5c06\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u5185\u5bb9\uff1a \u8fd9\u8868\u660e\u6211\u4eec\u6709\u6548\u5730\u5c06\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u56fe\u6620\u5c04\u5230\u4e86\u7acb\u65b9\u4f53\uff0c\u4f46\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u6e90HDR\u56fe\u50cf\u8f6c\u6362\u4e3a\u7acb\u65b9\u4f53\u8d34\u56fe\u7eb9\u7406\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5fc5\u987b\u5bf9\u540c\u4e00\u4e2a\u7acb\u65b9\u4f53\u6e32\u67d3\u516d\u6b21\uff0c\u6bcf\u6b21\u9762\u5bf9\u7acb\u65b9\u4f53\u7684\u4e00\u4e2a\u9762\uff0c\u5e76\u7528 \u5e27\u7f13\u51b2 \u5bf9\u8c61\u8bb0\u5f55\u5176\u7ed3\u679c\uff1a unsigned int captureFBO, captureRBO; glGenFramebuffers(1, &captureFBO); glGenRenderbuffers(1, &captureRBO); glBindFramebuffer(GL_FRAMEBUFFER, captureFBO); glBindRenderbuffer(GL_RENDERBUFFER, captureRBO); glRenderbufferStorage(GL_RENDERBUFFER, GL_DEPTH_COMPONENT24, 512, 512); glFramebufferRenderbuffer(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, GL_RENDERBUFFER, captureRBO); \u5f53\u7136\uff0c\u6211\u4eec\u6b64\u65f6\u5c31\u53ef\u4ee5\u751f\u6210\u76f8\u5e94\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u4e86\uff0c\u9996\u5148\u4e3a\u5176\u516d\u4e2a\u9762\u9884\u5148\u5206\u914d\u5185\u5b58\uff1a unsigned int envCubemap; glGenTextures(1, &envCubemap); glBindTexture(GL_TEXTURE_CUBE_MAP, envCubemap); for (unsigned int i = 0; i < 6; ++i) { // note that we store each face with 16 bit floating point values glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, GL_RGB16F, 512, 512, 0, GL_RGB, GL_FLOAT, nullptr); } glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_R, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MIN_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MAG_FILTER, GL_LINEAR); \u90a3\u5269\u4e0b\u8981\u505a\u7684\u5c31\u662f\u5c06\u7b49\u8ddd\u67f1\u72b6 2D \u7eb9\u7406\u6355\u6349\u5230\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u9762\u4e0a\u3002 \u4e4b\u524d\u5728 \u5e27\u7f13\u51b2 \u548c \u70b9\u9634\u5f71 \u6559\u7a0b\u4e2d\u8ba8\u8bba\u8fc7\u7684\u4ee3\u7801\u7ec6\u8282\uff0c\u6211\u5c31\u4e0d\u518d\u6b21\u8be6\u7ec6\u8bf4\u660e\uff0c\u5b9e\u9645\u8fc7\u7a0b\u53ef\u4ee5\u6982\u62ec\u4e3a\uff1a\u9762\u5411\u7acb\u65b9\u4f53\u516d\u4e2a\u9762\u8bbe\u7f6e\u516d\u4e2a\u4e0d\u540c\u7684\u89c6\u56fe\u77e9\u9635\uff0c\u7ed9\u5b9a\u6295\u5f71\u77e9\u9635\u7684 fov \u4e3a 90 \u5ea6\u4ee5\u6355\u6349\u6574\u4e2a\u9762\uff0c\u5e76\u6e32\u67d3\u7acb\u65b9\u4f53\u516d\u6b21\uff0c\u5c06\u7ed3\u679c\u5b58\u50a8\u5728\u6d6e\u70b9\u5e27\u7f13\u51b2\u4e2d\uff1a glm::mat4 captureProjection = glm::perspective(glm::radians(90.0f), 1.0f, 0.1f, 10.0f); glm::mat4 captureViews[] = { glm::lookAt(glm::vec3(0.0f, 0.0f, 0.0f), glm::vec3( 1.0f, 0.0f, 0.0f), glm::vec3(0.0f, -1.0f, 0.0f)), glm::lookAt(glm::vec3(0.0f, 0.0f, 0.0f), glm::vec3(-1.0f, 0.0f, 0.0f), glm::vec3(0.0f, -1.0f, 0.0f)), glm::lookAt(glm::vec3(0.0f, 0.0f, 0.0f), glm::vec3( 0.0f, 1.0f, 0.0f), glm::vec3(0.0f, 0.0f, 1.0f)), glm::lookAt(glm::vec3(0.0f, 0.0f, 0.0f), glm::vec3( 0.0f, -1.0f, 0.0f), glm::vec3(0.0f, 0.0f, -1.0f)), glm::lookAt(glm::vec3(0.0f, 0.0f, 0.0f), glm::vec3( 0.0f, 0.0f, 1.0f), glm::vec3(0.0f, -1.0f, 0.0f)), glm::lookAt(glm::vec3(0.0f, 0.0f, 0.0f), glm::vec3( 0.0f, 0.0f, -1.0f), glm::vec3(0.0f, -1.0f, 0.0f)) }; // convert HDR equirectangular environment map to cubemap equivalent equirectangularToCubemapShader.use(); equirectangularToCubemapShader.setInt(\"equirectangularMap\", 0); equirectangularToCubemapShader.setMat4(\"projection\", captureProjection); glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_2D, hdrTexture); glViewport(0, 0, 512, 512); // don't forget to configure the viewport to the capture dimensions. glBindFramebuffer(GL_FRAMEBUFFER, captureFBO); for (unsigned int i = 0; i < 6; ++i) { equirectangularToCubemapShader.setMat4(\"view\", captureViews[i]); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_CUBE_MAP_POSITIVE_X + i, envCubemap, 0); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); renderCube(); // renders a 1x1 cube } glBindFramebuffer(GL_FRAMEBUFFER, 0); \u6211\u4eec\u91c7\u7528\u5e27\u7f13\u51b2\u7684\u989c\u8272\u503c\u5e76\u56f4\u7ed5\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6bcf\u4e2a\u9762\u5207\u6362\u7eb9\u7406\u76ee\u6807\uff0c\u76f4\u63a5\u5c06\u573a\u666f\u6e32\u67d3\u5230\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u4e00\u4e2a\u9762\u4e0a\u3002\u4e00\u65e6\u8fd9\u4e2a\u6d41\u7a0b\u5b8c\u6bd5\u2014\u2014\u6211\u4eec\u53ea\u9700\u505a\u4e00\u6b21\u2014\u2014\u7acb\u65b9\u4f53\u8d34\u56fe envCubemap \u5c31\u5e94\u8be5\u662f\u539f HDR \u56fe\u7684\u73af\u5883\u7acb\u65b9\u4f53\u8d34\u56fe\u7248\u3002 \u8ba9\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u5929\u7a7a\u76d2\u7740\u8272\u5668\u6765\u6d4b\u8bd5\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u7528\u6765\u663e\u793a\u5468\u56f4\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\uff1a #version 330 core layout (location = 0) in vec3 aPos; uniform mat4 projection; uniform mat4 view; out vec3 localPos; void main() { localPos = aPos; mat4 rotView = mat4(mat3(view)); // remove translation from the view matrix vec4 clipPos = projection * rotView * vec4(localPos, 1.0); gl_Position = clipPos.xyww; } \u6ce8\u610f\u8fd9\u91cc\u7684\u5c0f\u6280\u5de7 xyww \u53ef\u4ee5\u786e\u4fdd\u6e32\u67d3\u7684\u7acb\u65b9\u4f53\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u603b\u662f 1.0\uff0c\u5373\u6700\u5927\u6df1\u5ea6\uff0c\u5982 \u7acb\u65b9\u4f53\u8d34\u56fe \u6559\u7a0b\u4e2d\u6240\u8ff0\u3002\u6ce8\u610f\u6211\u4eec\u9700\u8981\u5c06\u6df1\u5ea6\u6bd4\u8f83\u51fd\u6570\u66f4\u6539\u4e3a GL_LEQUAL\uff1a glDepthFunc(GL_LEQUAL); \u8fd9\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u76f4\u63a5\u4f7f\u7528\u7acb\u65b9\u4f53\u7684\u7247\u6bb5\u5c40\u90e8\u5750\u6807\uff0c\u5bf9\u73af\u5883\u7acb\u65b9\u4f53\u8d34\u56fe\u91c7\u6837\uff1a #version 330 core out vec4 FragColor; in vec3 localPos; uniform samplerCube environmentMap; void main() { vec3 envColor = texture(environmentMap, localPos).rgb; envColor = envColor / (envColor + vec3(1.0)); envColor = pow(envColor, vec3(1.0/2.2)); FragColor = vec4(envColor, 1.0); } \u6211\u4eec\u4f7f\u7528\u63d2\u503c\u7684\u7acb\u65b9\u4f53\u9876\u70b9\u5750\u6807\u5bf9\u73af\u5883\u8d34\u56fe\u8fdb\u884c\u91c7\u6837\uff0c\u8fd9\u4e9b\u5750\u6807\u76f4\u63a5\u5bf9\u5e94\u4e8e\u6b63\u786e\u7684\u91c7\u6837\u65b9\u5411\u5411\u91cf\u3002\u6ce8\u610f\uff0c\u76f8\u673a\u7684\u5e73\u79fb\u5206\u91cf\u88ab\u5ffd\u7565\u6389\u4e86\uff0c\u5728\u7acb\u65b9\u4f53\u4e0a\u6e32\u67d3\u6b64\u7740\u8272\u5668\u4f1a\u5f97\u5230\u975e\u79fb\u52a8\u72b6\u6001\u4e0b\u7684\u73af\u5883\u8d34\u56fe\u3002\u53e6\u5916\u8fd8\u8bf7\u6ce8\u610f\uff0c\u5f53\u6211\u4eec\u5c06\u73af\u5883\u8d34\u56fe\u7684 HDR \u503c\u76f4\u63a5\u8f93\u51fa\u5230\u9ed8\u8ba4\u7684 LDR \u5e27\u7f13\u51b2\u65f6\uff0c\u5e0c\u671b\u5bf9\u989c\u8272\u503c\u8fdb\u884c\u6b63\u786e\u7684\u8272\u8c03\u6620\u5c04\u3002\u6b64\u5916\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u51e0\u4e4e\u6240\u6709 HDR \u56fe\u90fd\u5904\u4e8e\u7ebf\u6027\u989c\u8272\u7a7a\u95f4\u4e2d\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728\u5199\u5165\u9ed8\u8ba4\u5e27\u7f13\u51b2\u4e4b\u524d\u5e94\u7528 \u4f3d\u9a6c\u6821\u6b63 \u3002 \u73b0\u5728\uff0c\u5728\u4e4b\u524d\u6e32\u67d3\u7684\u7403\u4f53\u4e0a\u6e32\u67d3\u73af\u5883\u8d34\u56fe\uff0c\u6548\u679c\u5e94\u8be5\u5982\u4e0b\u56fe\uff1a \u597d\u7684\u2026\u6211\u4eec\u7528\u4e86\u76f8\u5f53\u591a\u7684\u8bbe\u7f6e\u7ec8\u4e8e\u6765\u5230\u4e86\u8fd9\u91cc\uff0c\u6211\u4eec\u8bbe\u6cd5\u6210\u529f\u5730\u8bfb\u53d6\u4e86 HDR \u73af\u5883\u8d34\u56fe\uff0c\u5c06\u5b83\u4ece\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u56fe\u8f6c\u6362\u4e3a\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u5e76\u5c06 HDR \u7acb\u65b9\u4f53\u8d34\u56fe\u4f5c\u4e3a\u5929\u7a7a\u76d2\u6e32\u67d3\u5230\u4e86\u573a\u666f\u4e2d\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u5c0f\u7cfb\u7edf\u6765\u6e32\u67d3\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6240\u6709\u516d\u4e2a\u9762\uff0c\u6211\u4eec\u5728\u8ba1\u7b97\u73af\u5883\u8d34\u56fe\u5377\u79ef\u65f6\u8fd8\u4f1a\u9700\u8981\u5b83\u3002\u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6574\u4e2a\u8f6c\u5316\u8fc7\u7a0b\u7684\u6e90\u4ee3\u7801\u3002 \u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u5377\u79ef \u5982\u672c\u8282\u6559\u7a0b\u5f00\u5934\u6240\u8ff0\uff0c\u6211\u4eec\u7684\u4e3b\u8981\u76ee\u6807\u662f\u8ba1\u7b97\u6240\u6709\u95f4\u63a5\u6f2b\u53cd\u5c04\u5149\u7684\u79ef\u5206\uff0c\u5176\u4e2d\u5149\u7167\u7684\u8f90\u7167\u5ea6\u4ee5\u73af\u5883\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u5f62\u5f0f\u7ed9\u51fa\u3002\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0c\u5728\u65b9\u5411 w_i \u4e0a\u91c7\u6837 HDR \u73af\u5883\u8d34\u56fe\uff0c\u53ef\u4ee5\u83b7\u5f97\u573a\u666f\u5728\u6b64\u65b9\u5411\u4e0a\u7684\u8f90\u5c04\u5ea6 L(p, w_i) \u3002\u867d\u7136\u5982\u6b64\uff0c\u8981\u89e3\u51b3\u79ef\u5206\uff0c\u6211\u4eec\u4ecd\u7136\u4e0d\u80fd\u4ec5\u4ece\u4e00\u4e2a\u65b9\u5411\u5bf9\u73af\u5883\u8d34\u56fe\u91c7\u6837\uff0c\u800c\u8981\u4ece\u534a\u7403 \\Omega \u4e0a\u6240\u6709\u53ef\u80fd\u7684\u65b9\u5411\u8fdb\u884c\u91c7\u6837\uff0c\u8fd9\u5bf9\u4e8e\u7247\u6bb5\u7740\u8272\u5668\u800c\u8a00\u8fd8\u662f\u8fc7\u4e8e\u6602\u8d35\u3002 \u7136\u800c\uff0c\u8ba1\u7b97\u4e0a\u53c8\u4e0d\u53ef\u80fd\u4ece \\Omega \u7684\u6bcf\u4e2a\u53ef\u80fd\u7684\u65b9\u5411\u91c7\u6837\u73af\u5883\u5149\u7167\uff0c\u7406\u8bba\u4e0a\u53ef\u80fd\u7684\u65b9\u5411\u6570\u91cf\u662f\u65e0\u9650\u7684\u3002\u4e0d\u8fc7\u6211\u4eec\u53ef\u4ee5\u5bf9\u6709\u9650\u6570\u91cf\u7684\u65b9\u5411\u91c7\u6837\u4ee5\u8fd1\u4f3c\u6c42\u89e3\uff0c\u5728\u534a\u7403\u5185\u5747\u5300\u95f4\u9694\u6216\u968f\u673a\u53d6\u65b9\u5411\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u76f8\u5f53\u7cbe\u786e\u7684\u8f90\u7167\u5ea6\u8fd1\u4f3c\u503c\uff0c\u4ece\u800c\u79bb\u6563\u5730\u8ba1\u7b97\u79ef\u5206 \\int \u3002 \u7136\u800c\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u7247\u6bb5\u5b9e\u65f6\u6267\u884c\u6b64\u64cd\u4f5c\u4ecd\u7136\u592a\u6602\u8d35\uff0c\u56e0\u4e3a\u4ecd\u7136\u9700\u8981\u975e\u5e38\u5927\u7684\u6837\u672c\u6570\u91cf\u624d\u80fd\u83b7\u5f97\u4e0d\u9519\u7684\u7ed3\u679c\uff0c\u56e0\u6b64\u6211\u4eec\u5e0c\u671b\u53ef\u4ee5 \u9884\u8ba1\u7b97 \u3002\u65e2\u7136\u534a\u7403\u7684\u671d\u5411\u51b3\u5b9a\u4e86\u6211\u4eec\u6355\u6349\u8f90\u7167\u5ea6\u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u5148\u8ba1\u7b97\u6bcf\u4e2a\u53ef\u80fd\u7684\u534a\u7403\u671d\u5411\u7684\u8f90\u7167\u5ea6\uff0c\u8fd9\u4e9b\u534a\u7403\u671d\u5411\u6db5\u76d6\u4e86\u6240\u6709\u53ef\u80fd\u7684\u51fa\u5c04\u65b9\u5411 w_o \uff1a L_o(p,\\omega_o) = k_d\\frac{c}{\\pi} \\int\\limits_{\\Omega} L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \u7ed9\u5b9a\u4efb\u4f55\u65b9\u5411\u5411\u91cf w_i \uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u9884\u8ba1\u7b97\u7684\u8f90\u7167\u5ea6\u56fe\u91c7\u6837\u4ee5\u83b7\u53d6\u65b9\u5411 w_i \u7684\u603b\u6f2b\u53cd\u5c04\u8f90\u7167\u5ea6\u3002\u4e3a\u4e86\u786e\u5b9a\u7247\u6bb5\u4e0a\u95f4\u63a5\u6f2b\u53cd\u5c04\u5149\u7684\u6570\u91cf\uff08\u8f90\u7167\u5ea6\uff09\uff0c\u6211\u4eec\u83b7\u53d6\u4ee5\u8868\u9762\u6cd5\u7ebf\u4e3a\u4e2d\u5fc3\u7684\u534a\u7403\u7684\u603b\u8f90\u7167\u5ea6\u3002\u83b7\u53d6\u573a\u666f\u8f90\u7167\u5ea6\u7684\u65b9\u6cd5\u5c31\u7b80\u5316\u4e3a\uff1a vec3 irradiance = texture(irradianceMap, N); \u73b0\u5728\uff0c\u4e3a\u4e86\u751f\u6210\u8f90\u7167\u5ea6\u8d34\u56fe\uff0c\u6211\u4eec\u9700\u8981\u5c06\u73af\u5883\u5149\u7167\u6c42\u5377\u79ef\uff0c\u8f6c\u6362\u4e3a\u7acb\u65b9\u4f53\u8d34\u56fe\u3002\u5047\u8bbe\u5bf9\u4e8e\u6bcf\u4e2a\u7247\u6bb5\uff0c\u8868\u9762\u7684\u534a\u7403\u671d\u5411\u6cd5\u5411\u91cf N \uff0c\u5bf9\u7acb\u65b9\u4f53\u8d34\u56fe\u8fdb\u884c\u5377\u79ef\u7b49\u4e8e\u8ba1\u7b97\u671d\u5411 N \u7684\u534a\u7403 \\Omega \u4e2d\u6bcf\u4e2a\u65b9\u5411 w_i \u7684\u603b\u5e73\u5747\u8f90\u5c04\u7387\u3002 \u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0c\u672c\u8282\u6559\u7a0b\u4e2d\u6240\u6709\u7e41\u7410\u7684\u8bbe\u7f6e\u5e76\u975e\u6beb\u65e0\u7528\u5904\uff0c\u56e0\u4e3a\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6\u8f6c\u6362\u540e\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u5bf9\u5176\u8fdb\u884c\u5377\u79ef\uff0c\u6e32\u67d3\u6240\u6709\u516d\u4e2a\u9762\uff0c\u5c06\u5176\u7ed3\u679c\u7528\u5e27\u7f13\u51b2\u6355\u6349\u5230\u65b0\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u4e2d\u3002\u4e4b\u524d\u5df2\u7ecf\u5c06\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u56fe\u8f6c\u6362\u4e3a\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u8fd9\u6b21\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u5b8c\u5168\u76f8\u540c\u7684\u65b9\u6cd5\uff0c\u4f46\u4f7f\u7528\u4e0d\u540c\u7684\u7247\u6bb5\u7740\u8272\u5668\uff1a #version 330 core out vec4 FragColor; in vec3 localPos; uniform samplerCube environmentMap; const float PI = 3.14159265359; void main() { // the sample direction equals the hemisphere's orientation vec3 normal = normalize(localPos); vec3 irradiance = vec3(0.0); [...] // convolution code FragColor = vec4(irradiance, 1.0); } environmentMap \u662f\u4ece\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u56fe\u8f6c\u6362\u800c\u6765\u7684 HDR \u7acb\u65b9\u4f53\u8d34\u56fe\u3002 \u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u5bf9\u73af\u5883\u8d34\u56fe\u8fdb\u884c\u5377\u79ef\uff0c\u4f46\u662f\u5bf9\u4e8e\u672c\u6559\u7a0b\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u662f\uff1a\u5bf9\u4e8e\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6bcf\u4e2a\u7eb9\u7d20\uff0c\u5728\u7eb9\u7d20\u6240\u4ee3\u8868\u7684\u65b9\u5411\u7684\u534a\u7403 \\Omega \u5185\u751f\u6210\u56fa\u5b9a\u6570\u91cf\u7684\u91c7\u6837\u5411\u91cf\uff0c\u5e76\u5bf9\u91c7\u6837\u7ed3\u679c\u53d6\u5e73\u5747\u503c\u3002\u6570\u91cf\u56fa\u5b9a\u7684\u91c7\u6837\u5411\u91cf\u5c06\u5747\u5300\u5730\u5206\u5e03\u5728\u534a\u7403\u5185\u90e8\u3002\u6ce8\u610f\uff0c\u79ef\u5206\u662f\u8fde\u7eed\u51fd\u6570\uff0c\u5728\u91c7\u6837\u5411\u91cf\u6570\u91cf\u56fa\u5b9a\u7684\u60c5\u51b5\u4e0b\u79bb\u6563\u5730\u91c7\u6837\u53ea\u662f\u4e00\u79cd\u8fd1\u4f3c\u8ba1\u7b97\u65b9\u6cd5\uff0c\u6211\u4eec\u91c7\u6837\u7684\u5411\u91cf\u8d8a\u591a\uff0c\u5c31\u8d8a\u63a5\u8fd1\u6b63\u786e\u7684\u7ed3\u679c\u3002 \u53cd\u5c04\u65b9\u7a0b\u7684\u79ef\u5206 \\int \u662f\u56f4\u7ed5\u7acb\u4f53\u89d2 dw \u65cb\u8f6c\uff0c\u800c\u8fd9\u4e2a\u7acb\u4f53\u89d2\u76f8\u5f53\u96be\u4ee5\u5904\u7406\u3002\u4e3a\u4e86\u907f\u514d\u5bf9\u96be\u5904\u7406\u7684\u7acb\u4f53\u89d2\u6c42\u79ef\u5206\uff0c\u6211\u4eec\u4f7f\u7528\u7403\u5750\u6807 \\theta \u548c \\phi \u6765\u4ee3\u66ff\u7acb\u4f53\u89d2\u3002 \u5bf9\u4e8e\u56f4\u7ed5\u534a\u7403\u5927\u5706\u7684\u822a\u5411\u89d2 \\phi \uff0c\u6211\u4eec\u5728 0 \u5230 2\\pi \u5185\u91c7\u6837\uff0c\u800c\u4ece\u534a\u7403\u9876\u70b9\u51fa\u53d1\u7684\u503e\u659c\u89d2 \\theta \uff0c\u91c7\u6837\u8303\u56f4\u662f 0 \u5230 \\frac{1}{2}\\pi \u3002\u4e8e\u662f\u6211\u4eec\u66f4\u65b0\u4e00\u4e0b\u53cd\u5c04\u79ef\u5206\u65b9\u7a0b\uff1a L_o(p,\\phi_o, \\theta_o) = k_d\\frac{c}{\\pi} \\int_{\\phi = 0}^{2\\pi} \\int_{\\theta = 0}^{\\frac{1}{2}\\pi} L_i(p,\\phi_i, \\theta_i) \\cos(\\theta) \\sin(\\theta) d\\phi d\\theta \u6c42\u89e3\u79ef\u5206\u9700\u8981\u6211\u4eec\u5728\u534a\u7403 \\Omega \u5185\u91c7\u96c6\u56fa\u5b9a\u6570\u91cf\u7684\u79bb\u6563\u6837\u672c\u5e76\u5bf9\u5176\u7ed3\u679c\u6c42\u5e73\u5747\u503c\u3002\u5206\u522b\u7ed9\u6bcf\u4e2a\u7403\u5750\u6807\u8f74\u6307\u5b9a\u79bb\u6563\u6837\u672c\u6570\u91cf n_1 \u548c n_2 \u4ee5\u6c42\u5176 \u9ece\u66fc\u548c \uff0c\u79ef\u5206\u5f0f\u4f1a\u8f6c\u6362\u4e3a\u4ee5\u4e0b\u79bb\u6563\u7248\u672c\uff1a L_o(p,\\phi_o, \\theta_o) = k_d \\frac{c\\pi}{n1 n2} \\sum_{\\phi = 0}^{n1} \\sum_{\\theta = 0}^{n2} L_i(p,\\phi_i, \\theta_i) \\cos(\\theta) \\sin(\\theta) d\\phi d\\theta \u5f53\u6211\u4eec\u79bb\u6563\u5730\u5bf9\u4e24\u4e2a\u7403\u5750\u6807\u8f74\u8fdb\u884c\u91c7\u6837\u65f6\uff0c\u6bcf\u4e2a\u91c7\u6837\u8fd1\u4f3c\u4ee3\u8868\u4e86\u534a\u7403\u4e0a\u7684\u4e00\u5c0f\u5757\u533a\u57df\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u3002\u6ce8\u610f\uff0c\u7531\u4e8e\u7403\u7684\u4e00\u822c\u6027\u8d28\uff0c\u5f53\u91c7\u6837\u533a\u57df\u671d\u5411\u4e2d\u5fc3\u9876\u90e8\u4f1a\u805a\u65f6\uff0c\u5929\u9876\u89d2 \\theta \u53d8\u9ad8\uff0c\u534a\u7403\u7684\u79bb\u6563\u91c7\u6837\u533a\u57df\u53d8\u5c0f\u3002\u4e3a\u4e86\u5e73\u8861\u8f83\u5c0f\u7684\u533a\u57df\u8d21\u732e\u5ea6\uff0c\u6211\u4eec\u4f7f\u7528 sin\\theta \u6765\u6743\u8861\u533a\u57df\u8d21\u732e\u5ea6\uff0c\u8fd9\u5c31\u662f\u591a\u51fa\u6765\u7684 sin \u7684\u4f5c\u7528\u3002 \u7ed9\u5b9a\u6bcf\u4e2a\u7247\u6bb5\u7684\u79ef\u5206\u7403\u5750\u6807\uff0c\u5bf9\u534a\u7403\u8fdb\u884c\u79bb\u6563\u91c7\u6837\uff0c\u8fc7\u7a0b\u4ee3\u7801\u5982\u4e0b\uff1a vec3 irradiance = vec3(0.0); vec3 up = vec3(0.0, 1.0, 0.0); vec3 right = normalize(cross(up, normal)); up = normalize(cross(normal, right)); float sampleDelta = 0.025; float nrSamples = 0.0; for(float phi = 0.0; phi < 2.0 * PI; phi += sampleDelta) { for(float theta = 0.0; theta < 0.5 * PI; theta += sampleDelta) { // spherical to cartesian (in tangent space) vec3 tangentSample = vec3(sin(theta) * cos(phi), sin(theta) * sin(phi), cos(theta)); // tangent space to world vec3 sampleVec = tangentSample.x * right + tangentSample.y * up + tangentSample.z * N; irradiance += texture(environmentMap, sampleVec).rgb * cos(theta) * sin(theta); nrSamples++; } } irradiance = PI * irradiance * (1.0 / float(nrSamples)); \u6211\u4eec\u4ee5\u4e00\u4e2a\u56fa\u5b9a\u7684 sampleDelta \u589e\u91cf\u503c\u904d\u5386\u534a\u7403\uff0c\u51cf\u5c0f\uff08\u6216\u589e\u52a0\uff09\u8fd9\u4e2a\u589e\u91cf\u5c06\u4f1a\u589e\u52a0\uff08\u6216\u51cf\u5c11\uff09\u7cbe\u786e\u5ea6\u3002 \u5728\u4e24\u5c42\u5faa\u73af\u5185\uff0c\u6211\u4eec\u83b7\u53d6\u4e00\u4e2a\u7403\u9762\u5750\u6807\u5e76\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3a 3D \u76f4\u89d2\u5750\u6807\u5411\u91cf\uff0c\u5c06\u5411\u91cf\u4ece\u5207\u7ebf\u7a7a\u95f4\u8f6c\u6362\u4e3a\u4e16\u754c\u7a7a\u95f4\uff0c\u5e76\u4f7f\u7528\u6b64\u5411\u91cf\u76f4\u63a5\u91c7\u6837 HDR \u73af\u5883\u8d34\u56fe\u3002\u6211\u4eec\u5c06\u6bcf\u4e2a\u91c7\u6837\u7ed3\u679c\u52a0\u5230 irradiance \uff0c\u6700\u540e\u9664\u4ee5\u91c7\u6837\u7684\u603b\u6570\uff0c\u5f97\u5230\u5e73\u5747\u91c7\u6837\u8f90\u7167\u5ea6\u3002\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u5c06\u91c7\u6837\u7684\u989c\u8272\u503c\u4e58\u4ee5\u7cfb\u6570 cos(\u03b8) \uff0c\u56e0\u4e3a\u8f83\u5927\u89d2\u5ea6\u7684\u5149\u8f83\u5f31\uff0c\u800c\u7cfb\u6570 sin(\u03b8) \u5219\u7528\u4e8e\u6743\u8861\u8f83\u9ad8\u534a\u7403\u533a\u57df\u7684\u8f83\u5c0f\u91c7\u6837\u533a\u57df\u7684\u8d21\u732e\u5ea6\u3002 \u73b0\u5728\u5269\u4e0b\u8981\u505a\u7684\u5c31\u662f\u8bbe\u7f6e OpenGL \u6e32\u67d3\u4ee3\u7801\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e4b\u524d\u6355\u6349\u7684 envCubemap \u6c42\u5377\u79ef\u3002\u9996\u5148\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u8f90\u7167\u5ea6\u7acb\u65b9\u4f53\u8d34\u56fe\uff08\u91cd\u590d\u4e00\u904d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u6e32\u67d3\u5faa\u73af\u4e4b\u524d\u6267\u884c\u4e00\u6b21\uff09\uff1a unsigned int irradianceMap; glGenTextures(1, &irradianceMap); glBindTexture(GL_TEXTURE_CUBE_MAP, irradianceMap); for (unsigned int i = 0; i < 6; ++i) { glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, GL_RGB16F, 32, 32, 0, GL_RGB, GL_FLOAT, nullptr); } glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_R, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MIN_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MAG_FILTER, GL_LINEAR); \u7531\u4e8e\u8f90\u7167\u5ea6\u56fe\u5bf9\u6240\u6709\u5468\u56f4\u7684\u8f90\u5c04\u503c\u53d6\u4e86\u5e73\u5747\u503c\uff0c\u56e0\u6b64\u5b83\u4e22\u5931\u4e86\u5927\u90e8\u5206\u9ad8\u9891\u7ec6\u8282\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ee5\u8f83\u4f4e\u7684\u5206\u8fa8\u7387\uff0832x32\uff09\u5b58\u50a8\uff0c\u5e76\u8ba9 OpenGL \u7684\u7ebf\u6027\u6ee4\u6ce2\u5b8c\u6210\u5927\u90e8\u5206\u5de5\u4f5c\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u6355\u6349\u5230\u7684\u5e27\u7f13\u51b2\u56fe\u50cf\u7f29\u653e\u5230\u65b0\u7684\u5206\u8fa8\u7387\uff1a glBindFramebuffer(GL_FRAMEBUFFER, captureFBO); glBindRenderbuffer(GL_RENDERBUFFER, captureRBO); glRenderbufferStorage(GL_RENDERBUFFER, GL_DEPTH_COMPONENT24, 32, 32); \u6211\u4eec\u4f7f\u7528\u5377\u79ef\u7740\u8272\u5668\u2014\u2014\u548c\u6355\u6349\u73af\u5883\u7acb\u65b9\u4f53\u8d34\u56fe\u7c7b\u4f3c\u7684\u65b9\u5f0f\u2014\u2014\u6765\u5bf9\u73af\u5883\u8d34\u56fe\u6c42\u5377\u79ef\uff1a irradianceShader.use(); irradianceShader.setInt(\"environmentMap\", 0); irradianceShader.setMat4(\"projection\", captureProjection); glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_CUBE_MAP, envCubemap); glViewport(0, 0, 32, 32); // don't forget to configure the viewport to the capture dimensions. glBindFramebuffer(GL_FRAMEBUFFER, captureFBO); for (unsigned int i = 0; i < 6; ++i) { irradianceShader.setMat4(\"view\", captureViews[i]); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_CUBE_MAP_POSITIVE_X + i, irradianceMap, 0); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); renderCube(); } glBindFramebuffer(GL_FRAMEBUFFER, 0); \u73b0\u5728\uff0c\u5b8c\u6210\u8fd9\u4e2a\u6d41\u7a0b\u4e4b\u540e\uff0c\u6211\u4eec\u5e94\u8be5\u5f97\u5230\u4e86\u4e00\u4e2a\u9884\u8ba1\u7b97\u597d\u7684\u8f90\u7167\u5ea6\u56fe\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u5176\u7528\u4e8eIBL \u8ba1\u7b97\u3002\u4e3a\u4e86\u67e5\u770b\u6211\u4eec\u662f\u5426\u6210\u529f\u5730\u5bf9\u73af\u5883\u8d34\u56fe\u8fdb\u884c\u4e86\u5377\u79ef\uff0c\u8ba9\u6211\u4eec\u5c06\u5929\u7a7a\u76d2\u7684\u73af\u5883\u91c7\u6837\u8d34\u56fe\u66ff\u6362\u4e3a\u8f90\u7167\u5ea6\u8d34\u56fe\uff1a \u5982\u679c\u5b83\u770b\u8d77\u6765\u50cf\u6a21\u7cca\u7684\u73af\u5883\u8d34\u56fe\uff0c\u8bf4\u660e\u60a8\u5df2\u7ecf\u6210\u529f\u5730\u5bf9\u73af\u5883\u8d34\u56fe\u8fdb\u884c\u4e86\u5377\u79ef\u3002 PBR \u548c\u95f4\u63a5\u8f90\u7167\u5ea6\u5149\u7167 \u8f90\u7167\u5ea6\u56fe\u8868\u793a\u6240\u6709\u5468\u56f4\u7684\u95f4\u63a5\u5149\u7d2f\u79ef\u7684\u53cd\u5c04\u7387\u7684\u6f2b\u53cd\u5c04\u90e8\u5206\u7684\u79ef\u5206\u3002\u6ce8\u610f\u5149\u4e0d\u662f\u6765\u81ea\u4efb\u4f55\u76f4\u63a5\u5149\u6e90\uff0c\u800c\u662f\u6765\u81ea\u5468\u56f4\u73af\u5883\uff0c\u6211\u4eec\u5c06\u95f4\u63a5\u6f2b\u53cd\u5c04\u548c\u95f4\u63a5\u955c\u9762\u53cd\u5c04\u89c6\u4e3a\u73af\u5883\u5149\uff0c\u53d6\u4ee3\u4e86\u6211\u4eec\u4e4b\u524d\u8bbe\u5b9a\u7684\u5e38\u6570\u9879\u3002 \u9996\u5148\uff0c\u52a1\u5fc5\u5c06\u9884\u8ba1\u7b97\u7684\u8f90\u7167\u5ea6\u56fe\u6dfb\u52a0\u4e3a\u4e00\u4e2a\u7acb\u65b9\u4f53\u91c7\u6837\u5668\uff1a uniform samplerCube irradianceMap; \u7ed9\u5b9a\u4e00\u5f20\u8f90\u7167\u5ea6\u56fe\uff0c\u5b83\u5b58\u50a8\u4e86\u573a\u666f\u4e2d\u7684\u6240\u6709\u95f4\u63a5\u6f2b\u53cd\u5c04\u5149\uff0c\u83b7\u53d6\u7247\u6bb5\u7684\u8f90\u7167\u5ea6\u5c31\u7b80\u5316\u4e3a\u7ed9\u5b9a\u6cd5\u7ebf\u7684\u4e00\u6b21\u7eb9\u7406\u91c7\u6837\uff1a // vec3 ambient = vec3(0.03); vec3 ambient = texture(irradianceMap, N).rgb; \u7136\u800c\uff0c\u7531\u4e8e\u95f4\u63a5\u5149\u7167\u5305\u62ec\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u4e24\u90e8\u5206\uff0c\u6b63\u5982\u6211\u4eec\u4ece\u5206\u5272\u7248\u7684\u53cd\u5c04\u65b9\u7a0b\u4e2d\u770b\u5230\u7684\u90a3\u6837\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6f2b\u53cd\u5c04\u90e8\u5206\u8fdb\u884c\u76f8\u5e94\u7684\u52a0\u6743\u3002\u4e0e\u6211\u4eec\u5728\u524d\u4e00\u8282\u6559\u7a0b\u4e2d\u6240\u505a\u7684\u7c7b\u4f3c\uff0c\u6211\u4eec\u4f7f\u7528\u83f2\u6d85\u8033\u516c\u5f0f\u6765\u8ba1\u7b97\u8868\u9762\u7684\u95f4\u63a5\u53cd\u5c04\u7387\uff0c\u6211\u4eec\u4ece\u4e2d\u5f97\u51fa\u6298\u5c04\u7387\u6216\u79f0\u6f2b\u53cd\u5c04\u7387\uff1a vec3 kS = fresnelSchlick(max(dot(N, V), 0.0), F0); vec3 kD = 1.0 - kS; vec3 irradiance = texture(irradianceMap, N).rgb; vec3 diffuse = irradiance * albedo; vec3 ambient = (kD * diffuse) * ao; \u7531\u4e8e\u73af\u5883\u5149\u6765\u81ea\u534a\u7403\u5185\u56f4\u7ed5\u6cd5\u7ebf N \u7684\u6240\u6709\u65b9\u5411\uff0c\u56e0\u6b64\u6ca1\u6709\u4e00\u4e2a\u786e\u5b9a\u7684\u534a\u5411\u91cf\u6765\u8ba1\u7b97\u83f2\u6d85\u8033\u6548\u5e94\u3002\u4e3a\u4e86\u6a21\u62df\u83f2\u6d85\u8033\u6548\u5e94\uff0c\u6211\u4eec\u7528\u6cd5\u7ebf\u548c\u89c6\u7ebf\u4e4b\u95f4\u7684\u5939\u89d2\u8ba1\u7b97\u83f2\u6d85\u8033\u7cfb\u6570\u3002\u7136\u800c\uff0c\u4e4b\u524d\u6211\u4eec\u662f\u4ee5\u53d7\u7c97\u7cd9\u5ea6\u5f71\u54cd\u7684\u5fae\u8868\u9762\u534a\u5411\u91cf\u4f5c\u4e3a\u83f2\u6d85\u8033\u516c\u5f0f\u7684\u8f93\u5165\uff0c\u4f46\u6211\u4eec\u76ee\u524d\u6ca1\u6709\u8003\u8651\u4efb\u4f55\u7c97\u7cd9\u5ea6\uff0c\u8868\u9762\u7684\u53cd\u5c04\u7387\u603b\u662f\u4f1a\u76f8\u5bf9\u8f83\u9ad8\u3002\u95f4\u63a5\u5149\u548c\u76f4\u5c04\u5149\u9075\u5faa\u76f8\u540c\u7684\u5c5e\u6027\uff0c\u56e0\u6b64\u6211\u4eec\u671f\u671b\u8f83\u7c97\u7cd9\u7684\u8868\u9762\u5728\u8fb9\u7f18\u53cd\u5c04\u8f83\u5f31\u3002\u7531\u4e8e\u6211\u4eec\u6ca1\u6709\u8003\u8651\u8868\u9762\u7684\u7c97\u7cd9\u5ea6\uff0c\u95f4\u63a5\u83f2\u6d85\u8033\u53cd\u5c04\u5728\u7c97\u7cd9\u975e\u91d1\u5c5e\u8868\u9762\u4e0a\u770b\u8d77\u6765\u6709\u70b9\u8fc7\u5f3a\uff08\u4e3a\u4e86\u6f14\u793a\u76ee\u7684\u7565\u5fae\u5938\u5927\uff09\uff1a \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728 S\u00e9bastien Lagarde \u63d0\u51fa\u7684 Fresnel-Schlick \u65b9\u7a0b\u4e2d\u52a0\u5165\u7c97\u7cd9\u5ea6\u9879\u6765\u7f13\u89e3\u8fd9\u4e2a\u95ee\u9898\uff1a vec3 fresnelSchlickRoughness(float cosTheta, vec3 F0, float roughness) { return F0 + (max(vec3(1.0 - roughness), F0) - F0) * pow(1.0 - cosTheta, 5.0); } \u5728\u8ba1\u7b97\u83f2\u6d85\u8033\u6548\u5e94\u65f6\u7eb3\u5165\u8868\u9762\u7c97\u7cd9\u5ea6\uff0c\u73af\u5883\u5149\u4ee3\u7801\u6700\u7ec8\u786e\u5b9a\u4e3a\uff1a vec3 kS = fresnelSchlickRoughness(max(dot(N, V), 0.0), F0, roughness); vec3 kD = 1.0 - kS; vec3 irradiance = texture(irradianceMap, N).rgb; vec3 diffuse = irradiance * albedo; vec3 ambient = (kD * diffuse) * ao; \u5982\u60a8\u6240\u89c1\uff0c\u5b9e\u8df5\u4e0a\u57fa\u4e8e\u56fe\u50cf\u7684\u5149\u7167\u8ba1\u7b97\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u91c7\u6837\u4e00\u6b21\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u5927\u90e8\u5206\u7684\u5de5\u4f5c\u91cf\u5728\u4e8e\u5c06\u73af\u5883\u8d34\u56fe\u9884\u8ba1\u7b97\u6216\u5377\u79ef\u6210\u8f90\u7167\u5ea6\u56fe\u3002 \u56de\u5230\u6211\u4eec\u5728 \u5149\u7167\u6559\u7a0b \u4e2d\u5efa\u7acb\u7684\u521d\u59cb\u573a\u666f\uff0c\u573a\u666f\u4e2d\u6392\u5217\u7684\u7403\u4f53\u91d1\u5c5e\u5ea6\u6cbf\u5782\u76f4\u65b9\u5411\u9012\u589e\uff0c\u7c97\u7cd9\u5ea6\u6cbf\u6c34\u5e73\u65b9\u5411\u9012\u589e\u3002\u5411\u573a\u666f\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u6f2b\u53cd\u5c04\u56fe\u50cf\u7684\u5149\u7167\u4e4b\u540e\uff0c\u5b83\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a \u73b0\u5728\u770b\u8d77\u6765\u4ecd\u7136\u6709\u70b9\u5947\u602a\uff0c\u56e0\u4e3a\u91d1\u5c5e\u5ea6\u8f83\u9ad8\u7684\u7403\u4f53 \u9700\u8981 \u67d0\u79cd\u5f62\u5f0f\u7684\u53cd\u5c04\u4ee5\u4fbf\u770b\u8d77\u6765\u66f4\u50cf\u91d1\u5c5e\u8868\u9762\uff08\u56e0\u4e3a\u91d1\u5c5e\u8868\u9762\u6ca1\u6709\u6f2b\u53cd\u5c04\uff09\uff0c\u4e0d\u8fc7\u76ee\u524d\u53ea\u6709\u6765\u81ea\u70b9\u5149\u6e90\u7684\u53cd\u5c04\u2014\u2014\u800c\u4e14\u53ef\u4ee5\u8bf4\u51e0\u4e4e\u6ca1\u6709\u3002\u4e0d\u8fc7\u5c3d\u7ba1\u5982\u6b64\uff0c\u60a8\u4e5f\u53ef\u4ee5\u770b\u51fa\uff0c\u7403\u4f53\u5728\u73af\u5883\u4e2d\u7684\u611f\u89c9\u66f4\u52a0\u548c\u8c10\u4e86\uff08\u7279\u522b\u662f\u5728\u73af\u5883\u8d34\u56fe\u4e4b\u95f4\u5207\u6362\u7684\u65f6\u5019\uff09\uff0c\u56e0\u4e3a\u8868\u9762\u4f1a\u6b63\u786e\u5730\u54cd\u5e94\u73af\u5883\u5149\u7167\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u4ee5\u4e0a\u8ba8\u8bba\u8fc7\u7684\u6574\u5957\u6e90\u4ee3\u7801\u3002\u5728 \u4e0b\u4e00\u8282\u6559\u7a0b \u4e2d\uff0c\u6211\u4eec\u5c06\u6dfb\u52a0\u53cd\u5c04\u79ef\u5206\u7684\u95f4\u63a5\u955c\u9762\u53cd\u5c04\u90e8\u5206\uff0c\u6b64\u65f6\u6211\u4eec\u5c06\u771f\u6b63\u770b\u5230 PBR \u7684\u529b\u91cf\u3002 \u8fdb\u9636\u9605\u8bfb Coding Labs: Physically based rendering \uff1a\u4ecb\u7ecd PBR \uff0c\u5982\u4f55\u4ee5\u53ca\u4e3a\u4f55\u8981\u751f\u6210\u8f90\u7167\u5ea6\u56fe\u3002 The Mathematics of Shading \uff1a\u501f\u52a9 ScratchAPixel\uff0c\u5bf9\u672c\u6559\u7a0b\u4e2d\u6d89\u53ca\u7684\u4e00\u4e9b\u6570\u5b66\u77e5\u8bc6\u7684\u7b80\u8981\u4ecb\u7ecd\uff0c\u7279\u522b\u662f\u5173\u4e8e\u6781\u5750\u6807\u548c\u79ef\u5206\u3002","title":"\u6f2b\u53cd\u5c04\u8f90\u7167"},{"location":"07%20PBR/03%20IBL/01%20Diffuse%20irradiance/#_1","text":"\u539f\u6587 Diffuse irradiance \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 flyingSnow \u6821\u5bf9 \u57fa\u4e8e\u56fe\u50cf\u7684\u5149\u7167 (Image based lighting, IBL)\u662f\u4e00\u7c7b\u5149\u7167\u6280\u672f\u7684\u96c6\u5408\u3002\u5176\u5149\u6e90\u4e0d\u662f\u5982 \u524d\u4e00\u8282\u6559\u7a0b \u4e2d\u63cf\u8ff0\u7684\u53ef\u5206\u89e3\u7684\u76f4\u63a5\u5149\u6e90\uff0c\u800c\u662f\u5c06\u5468\u56f4\u73af\u5883\u6574\u4f53\u89c6\u4e3a\u4e00\u4e2a\u5927\u5149\u6e90\u3002IBL \u901a\u5e38\u4f7f\u7528\uff08\u53d6\u81ea\u73b0\u5b9e\u4e16\u754c\u6216\u4ece3D\u573a\u666f\u751f\u6210\u7684\uff09\u73af\u5883\u7acb\u65b9\u4f53\u8d34\u56fe (Cubemap) \uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6bcf\u4e2a\u50cf\u7d20\u89c6\u4e3a\u5149\u6e90\uff0c\u5728\u6e32\u67d3\u65b9\u7a0b\u4e2d\u76f4\u63a5\u4f7f\u7528\u5b83\u3002\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u6709\u6548\u5730\u6355\u6349\u73af\u5883\u7684\u5168\u5c40\u5149\u7167\u548c\u6c1b\u56f4\uff0c\u4f7f\u7269\u4f53 \u66f4\u597d\u5730\u878d\u5165 \u5176\u73af\u5883\u3002 \u7531\u4e8e\u57fa\u4e8e\u56fe\u50cf\u7684\u5149\u7167\u7b97\u6cd5\u4f1a\u6355\u6349\u90e8\u5206\u751a\u81f3\u5168\u90e8\u7684\u73af\u5883\u5149\u7167\uff0c\u901a\u5e38\u8ba4\u4e3a\u5b83\u662f\u4e00\u79cd\u66f4\u7cbe\u786e\u7684\u73af\u5883\u5149\u7167\u8f93\u5165\u683c\u5f0f\uff0c\u751a\u81f3\u4e5f\u53ef\u4ee5\u8bf4\u662f\u4e00\u79cd\u5168\u5c40\u5149\u7167\u7684\u7c97\u7565\u8fd1\u4f3c\u3002\u57fa\u4e8e\u6b64\u7279\u6027\uff0cIBL \u5bf9 PBR \u5f88\u6709\u610f\u4e49\uff0c\u56e0\u4e3a\u5f53\u6211\u4eec\u5c06\u73af\u5883\u5149\u7eb3\u5165\u8ba1\u7b97\u4e4b\u540e\uff0c\u7269\u4f53\u5728\u7269\u7406\u65b9\u9762\u770b\u8d77\u6765\u4f1a\u66f4\u52a0\u51c6\u786e\u3002 \u8981\u5f00\u59cb\u5c06 IBL \u5f15\u5165\u6211\u4eec\u7684 PBR \u7cfb\u7edf\uff0c\u8ba9\u6211\u4eec\u518d\u6b21\u5feb\u901f\u770b\u4e00\u4e0b\u53cd\u5c04\u65b9\u7a0b\uff1a L_o(p,\\omega_o) = \\int\\limits_{\\Omega} (k_d\\frac{c}{\\pi} + k_s\\frac{DFG}{4(\\omega_o \\cdot n)(\\omega_i \\cdot n)}) L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \u5982\u524d\u6240\u8ff0\uff0c\u6211\u4eec\u7684\u4e3b\u8981\u76ee\u6807\u662f\u8ba1\u7b97\u534a\u7403 \\Omega \u4e0a\u6240\u6709\u5165\u5c04\u5149\u65b9\u5411 w_i \u7684\u79ef\u5206\u3002\u89e3\u51b3\u4e0a\u4e00\u8282\u6559\u7a0b\u4e2d\u7684\u79ef\u5206\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a\u6211\u4eec\u4e8b\u5148\u5df2\u7ecf\u77e5\u9053\u4e86\u5bf9\u79ef\u5206\u6709\u8d21\u732e\u7684\u3001\u82e5\u5e72\u7cbe\u786e\u7684\u5149\u7ebf\u65b9\u5411 w_i \u3002\u7136\u800c\u8fd9\u6b21\uff0c\u6765\u81ea\u5468\u56f4\u73af\u5883\u7684 \u6bcf\u4e2a \u65b9\u5411 w_i \u7684\u5165\u5c04\u5149\u90fd\u53ef\u80fd\u5177\u6709\u4e00\u4e9b\u8f90\u5c04\u5ea6\uff0c\u4f7f\u5f97\u89e3\u51b3\u79ef\u5206\u53d8\u5f97\u4e0d\u90a3\u4e48\u7b80\u5355\u3002\u8fd9\u4e3a\u89e3\u51b3\u79ef\u5206\u63d0\u51fa\u4e86\u4e24\u4e2a\u8981\u6c42\uff1a \u7ed9\u5b9a\u4efb\u4f55\u65b9\u5411\u5411\u91cf w_i \uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u65b9\u6cd5\u6765\u83b7\u53d6\u8fd9\u4e2a\u65b9\u5411\u4e0a\u573a\u666f\u7684\u8f90\u5c04\u5ea6\u3002 \u89e3\u51b3\u79ef\u5206\u9700\u8981\u5feb\u901f\u4e14\u5b9e\u65f6\u3002 \u73b0\u5728\u770b\uff0c\u7b2c\u4e00\u4e2a\u8981\u6c42\u76f8\u5bf9\u5bb9\u6613\u4e9b\u3002\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e9b\u601d\u8def\uff1a\u8868\u793a\u73af\u5883\u6216\u573a\u666f\u8f90\u7167\u5ea6\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\uff08\u9884\u5904\u7406\u8fc7\u7684\uff09\u73af\u5883\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u7ed9\u5b9a\u8fd9\u6837\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6bcf\u4e2a\u7eb9\u7d20\u89c6\u4e3a\u4e00\u4e2a\u5149\u6e90\u3002\u4f7f\u7528\u4e00\u4e2a\u65b9\u5411\u5411\u91cf w_i \u5bf9\u6b64\u7acb\u65b9\u4f53\u8d34\u56fe\u8fdb\u884c\u91c7\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u83b7\u53d6\u8be5\u65b9\u5411\u4e0a\u7684\u573a\u666f\u8f90\u7167\u5ea6\u3002 \u5982\u6b64\uff0c\u7ed9\u5b9a\u65b9\u5411\u5411\u91cf w_i \uff0c\u83b7\u53d6\u6b64\u65b9\u5411\u4e0a\u573a\u666f\u8f90\u5c04\u5ea6\u7684\u65b9\u6cd5\u5c31\u7b80\u5316\u4e3a\uff1a vec3 radiance = texture(_cubemapEnvironment, w_i).rgb; \u4e3a\u4e86\u4ee5\u66f4\u6709\u6548\u7684\u65b9\u5f0f\u89e3\u51b3\u79ef\u5206\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u5176\u5927\u90e8\u5206\u7ed3\u679c\u8fdb\u884c\u9884\u5904\u7406\u2014\u2014\u6216\u79f0 \u9884\u8ba1\u7b97 \u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5fc5\u987b\u6df1\u5165\u7814\u7a76\u53cd\u5c04\u65b9\u7a0b\uff1a L_o(p,\\omega_o) = \\int\\limits_{\\Omega} (k_d\\frac{c}{\\pi} + k_s\\frac{DFG}{4(\\omega_o \\cdot n)(\\omega_i \\cdot n)}) L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \u4ed4\u7ec6\u7814\u7a76\u53cd\u5c04\u65b9\u7a0b\uff0c\u6211\u4eec\u53d1\u73b0 BRDF \u7684\u6f2b\u53cd\u5c04 k_d \u548c\u955c\u9762 k_s \u9879\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u79ef\u5206\u5206\u6210\u4e24\u90e8\u5206\uff1a L_o(p,\\omega_o) = \\int\\limits_{\\Omega} (k_d\\frac{c}{\\pi}) L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i + \\int\\limits_{\\Omega} (k_s\\frac{DFG}{4(\\omega_o \\cdot n)(\\omega_i \\cdot n)}) L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \u901a\u8fc7\u5c06\u79ef\u5206\u5206\u6210\u4e24\u90e8\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u5f00\u7814\u7a76\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u90e8\u5206\uff0c\u672c\u6559\u7a0b\u7684\u91cd\u70b9\u662f\u6f2b\u53cd\u5c04\u79ef\u5206\u90e8\u5206\u3002 \u4ed4\u7ec6\u89c2\u5bdf\u6f2b\u53cd\u5c04\u79ef\u5206\uff0c\u6211\u4eec\u53d1\u73b0\u6f2b\u53cd\u5c04\u5170\u4f2f\u7279\u9879\u662f\u4e00\u4e2a\u5e38\u6570\u9879\uff08\u989c\u8272 c \u3001\u6298\u5c04\u7387 k_d \u548c \\pi \u5728\u6574\u4e2a\u79ef\u5206\u662f\u5e38\u6570\uff09\uff0c\u4e0d\u4f9d\u8d56\u4e8e\u4efb\u4f55\u79ef\u5206\u53d8\u91cf\u3002\u57fa\u4e8e\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5e38\u6570\u9879\u79fb\u51fa\u6f2b\u53cd\u5c04\u79ef\u5206\uff1a L_o(p,\\omega_o) = k_d\\frac{c}{\\pi} \\int\\limits_{\\Omega} L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \u8fd9\u7ed9\u4e86\u6211\u4eec\u4e00\u4e2a\u53ea\u4f9d\u8d56\u4e8e w_i \u7684\u79ef\u5206\uff08\u5047\u8bbe p \u4f4d\u4e8e\u73af\u5883\u8d34\u56fe\u7684\u4e2d\u5fc3\uff09\u3002\u6709\u4e86\u8fd9\u4e9b\u77e5\u8bc6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba1\u7b97\u6216\u9884\u8ba1\u7b97\u4e00\u4e2a\u65b0\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u5b83\u5728\u6bcf\u4e2a\u91c7\u6837\u65b9\u5411\u2014\u2014\u4e5f\u5c31\u662f\u7eb9\u7d20\u2014\u2014\u4e2d\u5b58\u50a8\u6f2b\u53cd\u5c04\u79ef\u5206\u7684\u7ed3\u679c\uff0c\u8fd9\u4e9b\u7ed3\u679c\u662f\u901a\u8fc7 \u5377\u79ef \u8ba1\u7b97\u51fa\u6765\u7684\u3002 \u5377\u79ef\u7684\u7279\u6027\u662f\uff0c\u5bf9\u6570\u636e\u96c6\u4e2d\u7684\u4e00\u4e2a\u6761\u76ee\u505a\u4e00\u4e9b\u8ba1\u7b97\u65f6\uff0c\u8981\u8003\u8651\u5230\u6570\u636e\u96c6\u4e2d\u7684\u6240\u6709\u5176\u4ed6\u6761\u76ee\u3002\u8fd9\u91cc\u7684\u6570\u636e\u96c6\u5c31\u662f\u573a\u666f\u7684\u8f90\u5c04\u5ea6\u6216\u73af\u5883\u8d34\u56fe\u3002\u56e0\u6b64\uff0c\u8981\u5bf9\u7acb\u65b9\u4f53\u8d34\u56fe\u4e2d\u7684\u6bcf\u4e2a\u91c7\u6837\u65b9\u5411\u505a\u8ba1\u7b97\uff0c\u6211\u4eec\u90fd\u4f1a\u8003\u8651\u534a\u7403 \\Omega \u4e0a\u7684\u6240\u6709\u5176\u4ed6\u91c7\u6837\u65b9\u5411\u3002 \u4e3a\u4e86\u5bf9\u73af\u5883\u8d34\u56fe\u8fdb\u884c\u5377\u79ef\uff0c\u6211\u4eec\u901a\u8fc7\u5bf9\u534a\u7403 \\Omega \u4e0a\u7684\u5927\u91cf\u65b9\u5411\u8fdb\u884c\u79bb\u6563\u91c7\u6837\u5e76\u5bf9\u5176\u8f90\u5c04\u5ea6\u53d6\u5e73\u5747\u503c\uff0c\u6765\u8ba1\u7b97\u6bcf\u4e2a\u8f93\u51fa\u91c7\u6837\u65b9\u5411 w_o \u7684\u79ef\u5206\u3002\u7528\u6765\u91c7\u6837\u65b9\u5411 w_i \u7684\u534a\u7403\uff0c\u8981\u9762\u5411\u5377\u79ef\u7684\u8f93\u51fa\u91c7\u6837\u65b9\u5411 w_o \u3002 \u8fd9\u4e2a\u9884\u8ba1\u7b97\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u5728\u6bcf\u4e2a\u91c7\u6837\u65b9\u5411 w_o \u4e0a\u5b58\u50a8\u5176\u79ef\u5206\u7ed3\u679c\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u573a\u666f\u4e2d\u6240\u6709\u80fd\u591f\u51fb\u4e2d\u9762\u5411 w_o \u7684\u8868\u9762\u7684\u95f4\u63a5\u6f2b\u53cd\u5c04\u5149\u7684\u9884\u8ba1\u7b97\u603b\u548c\u3002\u8fd9\u6837\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u88ab\u79f0\u4e3a \u8f90\u7167\u5ea6\u56fe \uff0c\u56e0\u4e3a\u7ecf\u8fc7\u5377\u79ef\u8ba1\u7b97\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u80fd\u8ba9\u6211\u4eec\u4ece\u4efb\u4f55\u65b9\u5411\u6709\u6548\u5730\u76f4\u63a5\u91c7\u6837\u573a\u666f\uff08\u9884\u8ba1\u7b97\u597d\u7684\uff09\u8f90\u7167\u5ea6\u3002 Important \u8f90\u5c04\u65b9\u7a0b\u4e5f\u4f9d\u8d56\u4e86\u4f4d\u7f6e p \uff0c\u4e0d\u8fc7\u8fd9\u91cc\u6211\u4eec\u5047\u8bbe\u5b83\u4f4d\u4e8e\u8f90\u7167\u5ea6\u56fe\u7684\u4e2d\u5fc3\u3002\u8fd9\u5c31\u610f\u5473\u7740\u6240\u6709\u6f2b\u53cd\u5c04\u95f4\u63a5\u5149\u53ea\u80fd\u6765\u81ea\u540c\u4e00\u4e2a\u73af\u5883\u8d34\u56fe\uff0c\u8fd9\u6837\u53ef\u80fd\u4f1a\u7834\u574f\u73b0\u5b9e\u611f\uff08\u7279\u522b\u662f\u5728\u5ba4\u5185\uff09\u3002\u6e32\u67d3\u5f15\u64ce\u901a\u8fc7\u5728\u573a\u666f\u4e2d\u653e\u7f6e\u591a\u4e2a \u53cd\u5c04\u63a2\u9488 \u6765\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u6bcf\u4e2a\u53cd\u5c04\u63a2\u9488\u5355\u72ec\u9884\u8ba1\u7b97\u5176\u5468\u56f4\u73af\u5883\u7684\u8f90\u7167\u5ea6\u56fe\u3002\u8fd9\u6837\uff0c\u4f4d\u7f6e p \u5904\u7684\u8f90\u7167\u5ea6\uff08\u4ee5\u53ca\u8f90\u5c04\u5ea6\uff09\u662f\u53d6\u79bb\u5176\u6700\u8fd1\u7684\u53cd\u5c04\u63a2\u9488\u4e4b\u95f4\u7684\u8f90\u7167\u5ea6\uff08\u8f90\u5c04\u5ea6\uff09\u5185\u63d2\u503c\u3002\u76ee\u524d\uff0c\u6211\u4eec\u5047\u8bbe\u603b\u662f\u4ece\u4e2d\u5fc3\u91c7\u6837\u73af\u5883\u8d34\u56fe\uff0c\u628a\u53cd\u5c04\u63a2\u9488\u7684\u8ba8\u8bba\u7559\u7ed9\u540e\u9762\u7684\u6559\u7a0b\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u73af\u5883\u7acb\u65b9\u4f53\u8d34\u56fe\u53ca\u5176\u751f\u6210\u7684\u8f90\u7167\u5ea6\u56fe\u7684\u793a\u4f8b\uff08\u7531 Wave \u5f15\u64ce \u63d0\u4f9b\uff09\uff0c\u6bcf\u4e2a\u65b9\u5411 w_o \u7684\u573a\u666f\u8f90\u5c04\u5ea6\u53d6\u5e73\u5747\u503c\u3002 \u7531\u4e8e\u7acb\u65b9\u4f53\u8d34\u56fe\u6bcf\u4e2a\u7eb9\u7d20\u4e2d\u5b58\u50a8\u4e86\uff08 w_o \u65b9\u5411\u7684\uff09\u5377\u79ef\u7ed3\u679c\uff0c\u8f90\u7167\u5ea6\u56fe\u770b\u8d77\u6765\u6709\u70b9\u50cf\u73af\u5883\u7684\u5e73\u5747\u989c\u8272\u6216\u5149\u7167\u56fe\u3002\u4f7f\u7528\u4efb\u4f55\u4e00\u4e2a\u5411\u91cf\u5bf9\u7acb\u65b9\u4f53\u8d34\u56fe\u8fdb\u884c\u91c7\u6837\uff0c\u5c31\u53ef\u4ee5\u83b7\u53d6\u8be5\u65b9\u5411\u4e0a\u7684\u573a\u666f\u8f90\u7167\u5ea6\u3002","title":"\u6f2b\u53cd\u5c04\u8f90\u7167\u5ea6"},{"location":"07%20PBR/03%20IBL/01%20Diffuse%20irradiance/#pbr-hdr","text":"\u6211\u4eec\u5728 \u5149\u7167\u6559\u7a0b \u4e2d\u7b80\u5355\u63d0\u5230\u8fc7\uff1a\u5728 PBR \u6e32\u67d3\u7ba1\u7ebf\u4e2d\u8003\u8651\u9ad8\u52a8\u6001\u8303\u56f4(High Dynamic Range, HDR)\u7684\u573a\u666f\u5149\u7167\u975e\u5e38\u91cd\u8981\u3002\u7531\u4e8e PBR \u7684\u5927\u90e8\u5206\u8f93\u5165\u57fa\u4e8e\u5b9e\u9645\u7269\u7406\u5c5e\u6027\u548c\u6d4b\u91cf\uff0c\u56e0\u6b64\u4e3a\u5165\u5c04\u5149\u503c\u627e\u5230\u5176 \u7269\u7406\u7b49\u6548\u503c \u662f\u5f88\u91cd\u8981\u7684\u3002\u65e0\u8bba\u6211\u4eec\u662f\u5bf9\u5149\u7ebf\u7684\u8f90\u5c04\u901a\u91cf\u8fdb\u884c\u7814\u7a76\u6027\u731c\u6d4b\uff0c\u8fd8\u662f\u4f7f\u7528\u5b83\u4eec\u7684\u76f4\u63a5\u7269\u7406\u7b49\u6548\u503c\uff0c\u8bf8\u5982\u4e00\u4e2a\u7b80\u5355\u706f\u6ce1\u548c\u592a\u9633\u4e4b\u95f4\u7684\u8fd9\u79cd\u5dee\u5f02\u90fd\u662f\u5f88\u91cd\u8981\u7684\uff0c\u5982\u679c\u4e0d\u5728 HDR \u6e32\u67d3\u73af\u5883\u4e2d\u5de5\u4f5c\uff0c\u5c31\u65e0\u6cd5\u6b63\u786e\u6307\u5b9a\u6bcf\u4e2a\u5149\u7684\u76f8\u5bf9\u5f3a\u5ea6\u3002 \u56e0\u6b64\uff0cPBR \u548c HDR \u9700\u8981\u5bc6\u5207\u5408\u4f5c\uff0c\u4f46\u8fd9\u4e9b\u4e0e\u57fa\u4e8e\u56fe\u50cf\u7684\u5149\u7167\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f\u6211\u4eec\u5728\u4e4b\u524d\u7684\u6559\u7a0b\u4e2d\u5df2\u7ecf\u770b\u5230\uff0c\u8ba9 PBR \u5728 HDR \u4e0b\u5de5\u4f5c\u8fd8\u6bd4\u8f83\u5bb9\u6613\u3002\u7136\u800c\uff0c\u56de\u60f3\u4e00\u4e0b\u57fa\u4e8e\u56fe\u50cf\u7684\u5149\u7167\uff0c\u6211\u4eec\u5c06\u73af\u5883\u7684\u95f4\u63a5\u5149\u5f3a\u5ea6\u5efa\u7acb\u5728\u73af\u5883\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u989c\u8272\u503c\u4e0a\uff0c\u6211\u4eec\u9700\u8981\u67d0\u79cd\u65b9\u5f0f\u5c06\u5149\u7167\u7684\u9ad8\u52a8\u6001\u8303\u56f4\u5b58\u50a8\u5230\u73af\u5883\u8d34\u56fe\u4e2d\u3002 \u6211\u4eec\u4e00\u76f4\u4f7f\u7528\u7684\u73af\u5883\u8d34\u56fe\u662f\u4ee5\u7acb\u65b9\u4f53\u8d34\u56fe\u5f62\u5f0f\u50a8\u5b58\u2014\u2014\u5982\u540c\u4e00\u4e2a \u5929\u7a7a\u76d2 \u2014\u2014\u5c5e\u4e8e\u4f4e\u52a8\u6001\u8303\u56f4(Low Dynamic Range, LDR)\u3002\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u5404\u4e2a\u9762\u7684\u56fe\u50cf\u7684\u989c\u8272\u503c\uff0c\u5176\u8303\u56f4\u4ecb\u4e8e 0.0 \u548c 1.0 \u4e4b\u95f4\uff0c\u8ba1\u7b97\u8fc7\u7a0b\u4e5f\u662f\u7167\u503c\u5904\u7406\u3002\u8fd9\u6837\u867d\u7136\u53ef\u80fd\u9002\u5408\u89c6\u89c9\u8f93\u51fa\uff0c\u4f46\u4f5c\u4e3a\u7269\u7406\u8f93\u5165\u53c2\u6570\uff0c\u6ca1\u6709\u4ec0\u4e48\u7528\u5904\u3002","title":"PBR \u548c HDR"},{"location":"07%20PBR/03%20IBL/01%20Diffuse%20irradiance/#hdr","text":"\u8c08\u53ca\u8f90\u5c04\u5ea6\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u8f90\u5c04\u5ea6\u6587\u4ef6\u7684\u683c\u5f0f\uff08\u6269\u5c55\u540d\u4e3a .hdr\uff09\u5b58\u50a8\u4e86\u4e00\u5f20\u5b8c\u6574\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u6240\u6709\u516d\u4e2a\u9762\u6570\u636e\u90fd\u662f\u6d6e\u70b9\u6570\uff0c\u5141\u8bb8\u6307\u5b9a 0.0 \u5230 1.0 \u8303\u56f4\u4e4b\u5916\u7684\u989c\u8272\u503c\uff0c\u4ee5\u4f7f\u5149\u7ebf\u5177\u6709\u6b63\u786e\u7684\u989c\u8272\u5f3a\u5ea6\u3002\u8fd9\u4e2a\u6587\u4ef6\u683c\u5f0f\u4f7f\u7528\u4e86\u4e00\u4e2a\u806a\u660e\u7684\u6280\u5de7\u6765\u5b58\u50a8\u6bcf\u4e2a\u6d6e\u70b9\u503c\uff1a\u5b83\u5e76\u975e\u76f4\u63a5\u5b58\u50a8\u6bcf\u4e2a\u901a\u9053\u7684 32 \u4f4d\u6570\u636e\uff0c\u800c\u662f\u6bcf\u4e2a\u901a\u9053\u5b58\u50a8 8 \u4f4d\uff0c\u518d\u4ee5 alpha \u901a\u9053\u5b58\u653e\u6307\u6570\u2014\u2014\u867d\u7136\u786e\u5b9e\u4f1a\u5bfc\u81f4\u7cbe\u5ea6\u635f\u5931\uff0c\u4f46\u662f\u975e\u5e38\u6709\u6548\u7387\uff0c\u4e0d\u8fc7\u9700\u8981\u89e3\u6790\u7a0b\u5e8f\u5c06\u6bcf\u79cd\u989c\u8272\u91cd\u65b0\u8f6c\u6362\u4e3a\u5b83\u4eec\u7684\u6d6e\u70b9\u6570\u7b49\u6548\u503c\u3002 sIBL \u6863\u6848 \u4e2d\u6709\u5f88\u591a\u53ef\u4ee5\u514d\u8d39\u83b7\u53d6\u7684\u8f90\u5c04\u5ea6 HDR \u73af\u5883\u8d34\u56fe\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\uff1a \u53ef\u80fd\u4e0e\u60a8\u671f\u671b\u7684\u5b8c\u5168\u4e0d\u540c\uff0c\u56e0\u4e3a\u56fe\u50cf\u975e\u5e38\u626d\u66f2\uff0c\u5e76\u4e14\u6ca1\u6709\u6211\u4eec\u4e4b\u524d\u770b\u5230\u7684\u73af\u5883\u8d34\u56fe\u7684\u516d\u4e2a\u7acb\u65b9\u4f53\u8d34\u56fe\u9762\u3002\u8fd9\u5f20\u73af\u5883\u8d34\u56fe\u662f\u4ece\u7403\u4f53\u6295\u5f71\u5230\u5e73\u9762\u4e0a\uff0c\u4ee5\u4f7f\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u73af\u5883\u4fe1\u606f\u5b58\u50a8\u5230\u4e00\u5f20 \u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u56fe (Equirectangular Map) \u4e2d\u3002\u6709\u4e00\u70b9\u786e\u5b9e\u9700\u8981\u8bf4\u660e\uff1a\u6c34\u5e73\u89c6\u89d2\u9644\u8fd1\u5206\u8fa8\u7387\u8f83\u9ad8\uff0c\u800c\u5e95\u90e8\u548c\u9876\u90e8\u65b9\u5411\u5206\u8fa8\u7387\u8f83\u4f4e,\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u6298\u8877\u65b9\u6848\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u51e0\u4e4e\u6240\u6709\u6e32\u67d3\u5668\u6765\u8bf4\uff0c\u5927\u90e8\u5206\u6709\u610f\u4e49\u7684\u5149\u7167\u548c\u73af\u5883\u4fe1\u606f\u90fd\u5728\u6c34\u5e73\u89c6\u89d2\u9644\u8fd1\u65b9\u5411\u3002","title":"\u8f90\u5c04\u5ea6\u7684 HDR \u6587\u4ef6\u683c\u5f0f"},{"location":"07%20PBR/03%20IBL/01%20Diffuse%20irradiance/#hdr-stb_imageh","text":"\u76f4\u63a5\u52a0\u8f7d\u8f90\u5c04\u5ea6 HDR \u56fe\u50cf\u9700\u8981\u4e00\u4e9b \u6587\u4ef6\u683c\u5f0f \u7684\u77e5\u8bc6\uff0c\u867d\u7136\u4e0d\u662f\u5f88\u56f0\u96be\uff0c\u4f46\u4ecd\u7136\u5f88\u9ebb\u70e6\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u4e00\u4e2a\u5e38\u7528\u7684\u5934\u6587\u4ef6\u5e93 stb_image.h \u652f\u6301\u5c06\u8f90\u5c04\u5ea6 HDR \u56fe\u50cf\u76f4\u63a5\u52a0\u8f7d\u4e3a\u4e00\u4e2a\u6d6e\u70b9\u6570\u6570\u7ec4\uff0c\u5b8c\u5168\u7b26\u5408\u6211\u4eec\u7684\u9700\u8981\u3002\u5c06 stb_image \u6dfb\u52a0\u5230\u9879\u76ee\u4e2d\u4e4b\u540e\uff0c\u52a0\u8f7dHDR\u56fe\u50cf\u975e\u5e38\u7b80\u5355\uff0c\u5982\u4e0b\uff1a #include \"stb_image.h\" [...] stbi_set_flip_vertically_on_load(true); int width, height, nrComponents; float *data = stbi_loadf(\"newport_loft.hdr\", &width, &height, &nrComponents, 0); unsigned int hdrTexture; if (data) { glGenTextures(1, &hdrTexture); glBindTexture(GL_TEXTURE_2D, hdrTexture); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB16F, width, height, 0, GL_RGB, GL_FLOAT, data); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR); stbi_image_free(data); } else { std::cout << \"Failed to load HDR image.\" << std::endl; } stb_image.h \u81ea\u52a8\u5c06 HDR \u503c\u6620\u5c04\u5230\u4e00\u4e2a\u6d6e\u70b9\u6570\u5217\u8868\uff1a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u901a\u905332\u4f4d\uff0c\u6bcf\u4e2a\u989c\u8272 3 \u4e2a\u901a\u9053\u3002\u6211\u4eec\u8981\u5c06\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71 HDR \u73af\u5883\u8d34\u56fe\u8f6c\u5b58\u5230 2D \u6d6e\u70b9\u7eb9\u7406\u4e2d\uff0c\u8fd9\u5c31\u662f\u6240\u8981\u505a\u7684\u5168\u90e8\u5de5\u4f5c\u3002","title":"HDR \u548c stb_image.h"},{"location":"07%20PBR/03%20IBL/01%20Diffuse%20irradiance/#_2","text":"\u5f53\u7136\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u56fe\u83b7\u53d6\u73af\u5883\u4fe1\u606f\uff0c\u4f46\u662f\u8fd9\u4e9b\u64cd\u4f5c\u8fd8\u662f\u663e\u5f97\u76f8\u5bf9\u6602\u8d35\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u91c7\u6837\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6027\u80fd\u66f4\u9ad8\u3002\u56e0\u6b64\uff0c\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5c06\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u56fe\u8f6c\u6362\u4e3a\u7acb\u65b9\u4f53\u8d34\u56fe\u4ee5\u5907\u8fdb\u4e00\u6b65\u5904\u7406\u3002\u8bf7\u6ce8\u610f\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u8fd8\u5c06\u5c55\u793a\u5982\u4f55\u5bf9\u7b49\u8ddd\u67f1\u72b6\u683c\u5f0f\u7684\u6295\u5f71\u56fe\u91c7\u6837\uff0c\u5982\u540c\u91c7\u6837 3D \u73af\u5883\u8d34\u56fe\u4e00\u6837\uff0c\u60a8\u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u60a8\u559c\u6b22\u7684\u4efb\u4f55\u89e3\u51b3\u65b9\u6848\u3002 \u8981\u5c06\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u56fe\u8f6c\u6362\u4e3a\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u6211\u4eec\u9700\u8981\u6e32\u67d3\u4e00\u4e2a\uff08\u5355\u4f4d\uff09\u7acb\u65b9\u4f53\uff0c\u5e76\u4ece\u5185\u90e8\u5c06\u7b49\u8ddd\u67f1\u72b6\u56fe\u6295\u5f71\u5230\u7acb\u65b9\u4f53\u7684\u6bcf\u4e2a\u9762\uff0c\u5e76\u5c06\u7acb\u65b9\u4f53\u7684\u516d\u4e2a\u9762\u7684\u56fe\u50cf\u6784\u9020\u6210\u7acb\u65b9\u4f53\u8d34\u56fe\u3002\u6b64\u7acb\u65b9\u4f53\u7684\u9876\u70b9\u7740\u8272\u5668\u53ea\u662f\u6309\u539f\u6837\u6e32\u67d3\u7acb\u65b9\u4f53\uff0c\u5e76\u5c06\u5176\u5c40\u90e8\u5750\u6807\u4f5c\u4e3a 3D \u91c7\u6837\u5411\u91cf\u4f20\u9012\u7ed9\u7247\u6bb5\u7740\u8272\u5668\uff1a #version 330 core layout (location = 0) in vec3 aPos; out vec3 localPos; uniform mat4 projection; uniform mat4 view; void main() { localPos = aPos; gl_Position = projection * view * vec4(localPos, 1.0); } \u800c\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u4e3a\u7acb\u65b9\u4f53\u7684\u6bcf\u4e2a\u90e8\u5206\u7740\u8272\uff0c\u65b9\u6cd5\u7c7b\u4f3c\u4e8e\u5c06\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u56fe\u6574\u9f50\u5730\u6298\u53e0\u5230\u7acb\u65b9\u4f53\u7684\u6bcf\u4e2a\u9762\u4e00\u6837\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5148\u83b7\u53d6\u7247\u6bb5\u7684\u91c7\u6837\u65b9\u5411\uff0c\u8fd9\u4e2a\u65b9\u5411\u662f\u4ece\u7acb\u65b9\u4f53\u7684\u5c40\u90e8\u5750\u6807\u8fdb\u884c\u63d2\u503c\u5f97\u5230\u7684\uff0c\u7136\u540e\u4f7f\u7528\u6b64\u65b9\u5411\u5411\u91cf\u548c\u4e00\u4e9b\u4e09\u89d2\u5b66\u9b54\u6cd5\u5bf9\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u56fe\u8fdb\u884c\u91c7\u6837\uff0c\u5982\u540c\u7acb\u65b9\u4f53\u56fe\u672c\u8eab\u4e00\u6837\u3002\u6211\u4eec\u76f4\u63a5\u5c06\u7ed3\u679c\u5b58\u50a8\u5230\u7acb\u65b9\u4f53\u6bcf\u4e2a\u9762\u7684\u7247\u6bb5\u4e2d\uff0c\u4ee5\u4e0b\u5c31\u662f\u6211\u4eec\u9700\u8981\u505a\u7684\uff1a #version 330 core out vec4 FragColor; in vec3 localPos; uniform sampler2D equirectangularMap; const vec2 invAtan = vec2(0.1591, 0.3183); vec2 SampleSphericalMap(vec3 v) { vec2 uv = vec2(atan(v.z, v.x), asin(v.y)); uv *= invAtan; uv += 0.5; return uv; } void main() { vec2 uv = SampleSphericalMap(normalize(localPos)); // make sure to normalize localPos vec3 color = texture(equirectangularMap, uv).rgb; FragColor = vec4(color, 1.0); } \u5982\u679c\u7ed9\u5b9aHDR\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u56fe\uff0c\u5728\u573a\u666f\u7684\u4e2d\u5fc3\u6e32\u67d3\u4e00\u4e2a\u7acb\u65b9\u4f53\uff0c\u5c06\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u5185\u5bb9\uff1a \u8fd9\u8868\u660e\u6211\u4eec\u6709\u6548\u5730\u5c06\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u56fe\u6620\u5c04\u5230\u4e86\u7acb\u65b9\u4f53\uff0c\u4f46\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u6e90HDR\u56fe\u50cf\u8f6c\u6362\u4e3a\u7acb\u65b9\u4f53\u8d34\u56fe\u7eb9\u7406\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5fc5\u987b\u5bf9\u540c\u4e00\u4e2a\u7acb\u65b9\u4f53\u6e32\u67d3\u516d\u6b21\uff0c\u6bcf\u6b21\u9762\u5bf9\u7acb\u65b9\u4f53\u7684\u4e00\u4e2a\u9762\uff0c\u5e76\u7528 \u5e27\u7f13\u51b2 \u5bf9\u8c61\u8bb0\u5f55\u5176\u7ed3\u679c\uff1a unsigned int captureFBO, captureRBO; glGenFramebuffers(1, &captureFBO); glGenRenderbuffers(1, &captureRBO); glBindFramebuffer(GL_FRAMEBUFFER, captureFBO); glBindRenderbuffer(GL_RENDERBUFFER, captureRBO); glRenderbufferStorage(GL_RENDERBUFFER, GL_DEPTH_COMPONENT24, 512, 512); glFramebufferRenderbuffer(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, GL_RENDERBUFFER, captureRBO); \u5f53\u7136\uff0c\u6211\u4eec\u6b64\u65f6\u5c31\u53ef\u4ee5\u751f\u6210\u76f8\u5e94\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u4e86\uff0c\u9996\u5148\u4e3a\u5176\u516d\u4e2a\u9762\u9884\u5148\u5206\u914d\u5185\u5b58\uff1a unsigned int envCubemap; glGenTextures(1, &envCubemap); glBindTexture(GL_TEXTURE_CUBE_MAP, envCubemap); for (unsigned int i = 0; i < 6; ++i) { // note that we store each face with 16 bit floating point values glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, GL_RGB16F, 512, 512, 0, GL_RGB, GL_FLOAT, nullptr); } glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_R, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MIN_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MAG_FILTER, GL_LINEAR); \u90a3\u5269\u4e0b\u8981\u505a\u7684\u5c31\u662f\u5c06\u7b49\u8ddd\u67f1\u72b6 2D \u7eb9\u7406\u6355\u6349\u5230\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u9762\u4e0a\u3002 \u4e4b\u524d\u5728 \u5e27\u7f13\u51b2 \u548c \u70b9\u9634\u5f71 \u6559\u7a0b\u4e2d\u8ba8\u8bba\u8fc7\u7684\u4ee3\u7801\u7ec6\u8282\uff0c\u6211\u5c31\u4e0d\u518d\u6b21\u8be6\u7ec6\u8bf4\u660e\uff0c\u5b9e\u9645\u8fc7\u7a0b\u53ef\u4ee5\u6982\u62ec\u4e3a\uff1a\u9762\u5411\u7acb\u65b9\u4f53\u516d\u4e2a\u9762\u8bbe\u7f6e\u516d\u4e2a\u4e0d\u540c\u7684\u89c6\u56fe\u77e9\u9635\uff0c\u7ed9\u5b9a\u6295\u5f71\u77e9\u9635\u7684 fov \u4e3a 90 \u5ea6\u4ee5\u6355\u6349\u6574\u4e2a\u9762\uff0c\u5e76\u6e32\u67d3\u7acb\u65b9\u4f53\u516d\u6b21\uff0c\u5c06\u7ed3\u679c\u5b58\u50a8\u5728\u6d6e\u70b9\u5e27\u7f13\u51b2\u4e2d\uff1a glm::mat4 captureProjection = glm::perspective(glm::radians(90.0f), 1.0f, 0.1f, 10.0f); glm::mat4 captureViews[] = { glm::lookAt(glm::vec3(0.0f, 0.0f, 0.0f), glm::vec3( 1.0f, 0.0f, 0.0f), glm::vec3(0.0f, -1.0f, 0.0f)), glm::lookAt(glm::vec3(0.0f, 0.0f, 0.0f), glm::vec3(-1.0f, 0.0f, 0.0f), glm::vec3(0.0f, -1.0f, 0.0f)), glm::lookAt(glm::vec3(0.0f, 0.0f, 0.0f), glm::vec3( 0.0f, 1.0f, 0.0f), glm::vec3(0.0f, 0.0f, 1.0f)), glm::lookAt(glm::vec3(0.0f, 0.0f, 0.0f), glm::vec3( 0.0f, -1.0f, 0.0f), glm::vec3(0.0f, 0.0f, -1.0f)), glm::lookAt(glm::vec3(0.0f, 0.0f, 0.0f), glm::vec3( 0.0f, 0.0f, 1.0f), glm::vec3(0.0f, -1.0f, 0.0f)), glm::lookAt(glm::vec3(0.0f, 0.0f, 0.0f), glm::vec3( 0.0f, 0.0f, -1.0f), glm::vec3(0.0f, -1.0f, 0.0f)) }; // convert HDR equirectangular environment map to cubemap equivalent equirectangularToCubemapShader.use(); equirectangularToCubemapShader.setInt(\"equirectangularMap\", 0); equirectangularToCubemapShader.setMat4(\"projection\", captureProjection); glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_2D, hdrTexture); glViewport(0, 0, 512, 512); // don't forget to configure the viewport to the capture dimensions. glBindFramebuffer(GL_FRAMEBUFFER, captureFBO); for (unsigned int i = 0; i < 6; ++i) { equirectangularToCubemapShader.setMat4(\"view\", captureViews[i]); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_CUBE_MAP_POSITIVE_X + i, envCubemap, 0); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); renderCube(); // renders a 1x1 cube } glBindFramebuffer(GL_FRAMEBUFFER, 0); \u6211\u4eec\u91c7\u7528\u5e27\u7f13\u51b2\u7684\u989c\u8272\u503c\u5e76\u56f4\u7ed5\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6bcf\u4e2a\u9762\u5207\u6362\u7eb9\u7406\u76ee\u6807\uff0c\u76f4\u63a5\u5c06\u573a\u666f\u6e32\u67d3\u5230\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u4e00\u4e2a\u9762\u4e0a\u3002\u4e00\u65e6\u8fd9\u4e2a\u6d41\u7a0b\u5b8c\u6bd5\u2014\u2014\u6211\u4eec\u53ea\u9700\u505a\u4e00\u6b21\u2014\u2014\u7acb\u65b9\u4f53\u8d34\u56fe envCubemap \u5c31\u5e94\u8be5\u662f\u539f HDR \u56fe\u7684\u73af\u5883\u7acb\u65b9\u4f53\u8d34\u56fe\u7248\u3002 \u8ba9\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u5929\u7a7a\u76d2\u7740\u8272\u5668\u6765\u6d4b\u8bd5\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u7528\u6765\u663e\u793a\u5468\u56f4\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\uff1a #version 330 core layout (location = 0) in vec3 aPos; uniform mat4 projection; uniform mat4 view; out vec3 localPos; void main() { localPos = aPos; mat4 rotView = mat4(mat3(view)); // remove translation from the view matrix vec4 clipPos = projection * rotView * vec4(localPos, 1.0); gl_Position = clipPos.xyww; } \u6ce8\u610f\u8fd9\u91cc\u7684\u5c0f\u6280\u5de7 xyww \u53ef\u4ee5\u786e\u4fdd\u6e32\u67d3\u7684\u7acb\u65b9\u4f53\u7247\u6bb5\u7684\u6df1\u5ea6\u503c\u603b\u662f 1.0\uff0c\u5373\u6700\u5927\u6df1\u5ea6\uff0c\u5982 \u7acb\u65b9\u4f53\u8d34\u56fe \u6559\u7a0b\u4e2d\u6240\u8ff0\u3002\u6ce8\u610f\u6211\u4eec\u9700\u8981\u5c06\u6df1\u5ea6\u6bd4\u8f83\u51fd\u6570\u66f4\u6539\u4e3a GL_LEQUAL\uff1a glDepthFunc(GL_LEQUAL); \u8fd9\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u76f4\u63a5\u4f7f\u7528\u7acb\u65b9\u4f53\u7684\u7247\u6bb5\u5c40\u90e8\u5750\u6807\uff0c\u5bf9\u73af\u5883\u7acb\u65b9\u4f53\u8d34\u56fe\u91c7\u6837\uff1a #version 330 core out vec4 FragColor; in vec3 localPos; uniform samplerCube environmentMap; void main() { vec3 envColor = texture(environmentMap, localPos).rgb; envColor = envColor / (envColor + vec3(1.0)); envColor = pow(envColor, vec3(1.0/2.2)); FragColor = vec4(envColor, 1.0); } \u6211\u4eec\u4f7f\u7528\u63d2\u503c\u7684\u7acb\u65b9\u4f53\u9876\u70b9\u5750\u6807\u5bf9\u73af\u5883\u8d34\u56fe\u8fdb\u884c\u91c7\u6837\uff0c\u8fd9\u4e9b\u5750\u6807\u76f4\u63a5\u5bf9\u5e94\u4e8e\u6b63\u786e\u7684\u91c7\u6837\u65b9\u5411\u5411\u91cf\u3002\u6ce8\u610f\uff0c\u76f8\u673a\u7684\u5e73\u79fb\u5206\u91cf\u88ab\u5ffd\u7565\u6389\u4e86\uff0c\u5728\u7acb\u65b9\u4f53\u4e0a\u6e32\u67d3\u6b64\u7740\u8272\u5668\u4f1a\u5f97\u5230\u975e\u79fb\u52a8\u72b6\u6001\u4e0b\u7684\u73af\u5883\u8d34\u56fe\u3002\u53e6\u5916\u8fd8\u8bf7\u6ce8\u610f\uff0c\u5f53\u6211\u4eec\u5c06\u73af\u5883\u8d34\u56fe\u7684 HDR \u503c\u76f4\u63a5\u8f93\u51fa\u5230\u9ed8\u8ba4\u7684 LDR \u5e27\u7f13\u51b2\u65f6\uff0c\u5e0c\u671b\u5bf9\u989c\u8272\u503c\u8fdb\u884c\u6b63\u786e\u7684\u8272\u8c03\u6620\u5c04\u3002\u6b64\u5916\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u51e0\u4e4e\u6240\u6709 HDR \u56fe\u90fd\u5904\u4e8e\u7ebf\u6027\u989c\u8272\u7a7a\u95f4\u4e2d\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728\u5199\u5165\u9ed8\u8ba4\u5e27\u7f13\u51b2\u4e4b\u524d\u5e94\u7528 \u4f3d\u9a6c\u6821\u6b63 \u3002 \u73b0\u5728\uff0c\u5728\u4e4b\u524d\u6e32\u67d3\u7684\u7403\u4f53\u4e0a\u6e32\u67d3\u73af\u5883\u8d34\u56fe\uff0c\u6548\u679c\u5e94\u8be5\u5982\u4e0b\u56fe\uff1a \u597d\u7684\u2026\u6211\u4eec\u7528\u4e86\u76f8\u5f53\u591a\u7684\u8bbe\u7f6e\u7ec8\u4e8e\u6765\u5230\u4e86\u8fd9\u91cc\uff0c\u6211\u4eec\u8bbe\u6cd5\u6210\u529f\u5730\u8bfb\u53d6\u4e86 HDR \u73af\u5883\u8d34\u56fe\uff0c\u5c06\u5b83\u4ece\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u56fe\u8f6c\u6362\u4e3a\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u5e76\u5c06 HDR \u7acb\u65b9\u4f53\u8d34\u56fe\u4f5c\u4e3a\u5929\u7a7a\u76d2\u6e32\u67d3\u5230\u4e86\u573a\u666f\u4e2d\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u5c0f\u7cfb\u7edf\u6765\u6e32\u67d3\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6240\u6709\u516d\u4e2a\u9762\uff0c\u6211\u4eec\u5728\u8ba1\u7b97\u73af\u5883\u8d34\u56fe\u5377\u79ef\u65f6\u8fd8\u4f1a\u9700\u8981\u5b83\u3002\u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6574\u4e2a\u8f6c\u5316\u8fc7\u7a0b\u7684\u6e90\u4ee3\u7801\u3002","title":"\u4ece\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u5230\u7acb\u65b9\u4f53\u8d34\u56fe"},{"location":"07%20PBR/03%20IBL/01%20Diffuse%20irradiance/#_3","text":"\u5982\u672c\u8282\u6559\u7a0b\u5f00\u5934\u6240\u8ff0\uff0c\u6211\u4eec\u7684\u4e3b\u8981\u76ee\u6807\u662f\u8ba1\u7b97\u6240\u6709\u95f4\u63a5\u6f2b\u53cd\u5c04\u5149\u7684\u79ef\u5206\uff0c\u5176\u4e2d\u5149\u7167\u7684\u8f90\u7167\u5ea6\u4ee5\u73af\u5883\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u5f62\u5f0f\u7ed9\u51fa\u3002\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0c\u5728\u65b9\u5411 w_i \u4e0a\u91c7\u6837 HDR \u73af\u5883\u8d34\u56fe\uff0c\u53ef\u4ee5\u83b7\u5f97\u573a\u666f\u5728\u6b64\u65b9\u5411\u4e0a\u7684\u8f90\u5c04\u5ea6 L(p, w_i) \u3002\u867d\u7136\u5982\u6b64\uff0c\u8981\u89e3\u51b3\u79ef\u5206\uff0c\u6211\u4eec\u4ecd\u7136\u4e0d\u80fd\u4ec5\u4ece\u4e00\u4e2a\u65b9\u5411\u5bf9\u73af\u5883\u8d34\u56fe\u91c7\u6837\uff0c\u800c\u8981\u4ece\u534a\u7403 \\Omega \u4e0a\u6240\u6709\u53ef\u80fd\u7684\u65b9\u5411\u8fdb\u884c\u91c7\u6837\uff0c\u8fd9\u5bf9\u4e8e\u7247\u6bb5\u7740\u8272\u5668\u800c\u8a00\u8fd8\u662f\u8fc7\u4e8e\u6602\u8d35\u3002 \u7136\u800c\uff0c\u8ba1\u7b97\u4e0a\u53c8\u4e0d\u53ef\u80fd\u4ece \\Omega \u7684\u6bcf\u4e2a\u53ef\u80fd\u7684\u65b9\u5411\u91c7\u6837\u73af\u5883\u5149\u7167\uff0c\u7406\u8bba\u4e0a\u53ef\u80fd\u7684\u65b9\u5411\u6570\u91cf\u662f\u65e0\u9650\u7684\u3002\u4e0d\u8fc7\u6211\u4eec\u53ef\u4ee5\u5bf9\u6709\u9650\u6570\u91cf\u7684\u65b9\u5411\u91c7\u6837\u4ee5\u8fd1\u4f3c\u6c42\u89e3\uff0c\u5728\u534a\u7403\u5185\u5747\u5300\u95f4\u9694\u6216\u968f\u673a\u53d6\u65b9\u5411\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u76f8\u5f53\u7cbe\u786e\u7684\u8f90\u7167\u5ea6\u8fd1\u4f3c\u503c\uff0c\u4ece\u800c\u79bb\u6563\u5730\u8ba1\u7b97\u79ef\u5206 \\int \u3002 \u7136\u800c\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u7247\u6bb5\u5b9e\u65f6\u6267\u884c\u6b64\u64cd\u4f5c\u4ecd\u7136\u592a\u6602\u8d35\uff0c\u56e0\u4e3a\u4ecd\u7136\u9700\u8981\u975e\u5e38\u5927\u7684\u6837\u672c\u6570\u91cf\u624d\u80fd\u83b7\u5f97\u4e0d\u9519\u7684\u7ed3\u679c\uff0c\u56e0\u6b64\u6211\u4eec\u5e0c\u671b\u53ef\u4ee5 \u9884\u8ba1\u7b97 \u3002\u65e2\u7136\u534a\u7403\u7684\u671d\u5411\u51b3\u5b9a\u4e86\u6211\u4eec\u6355\u6349\u8f90\u7167\u5ea6\u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u5148\u8ba1\u7b97\u6bcf\u4e2a\u53ef\u80fd\u7684\u534a\u7403\u671d\u5411\u7684\u8f90\u7167\u5ea6\uff0c\u8fd9\u4e9b\u534a\u7403\u671d\u5411\u6db5\u76d6\u4e86\u6240\u6709\u53ef\u80fd\u7684\u51fa\u5c04\u65b9\u5411 w_o \uff1a L_o(p,\\omega_o) = k_d\\frac{c}{\\pi} \\int\\limits_{\\Omega} L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \u7ed9\u5b9a\u4efb\u4f55\u65b9\u5411\u5411\u91cf w_i \uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u9884\u8ba1\u7b97\u7684\u8f90\u7167\u5ea6\u56fe\u91c7\u6837\u4ee5\u83b7\u53d6\u65b9\u5411 w_i \u7684\u603b\u6f2b\u53cd\u5c04\u8f90\u7167\u5ea6\u3002\u4e3a\u4e86\u786e\u5b9a\u7247\u6bb5\u4e0a\u95f4\u63a5\u6f2b\u53cd\u5c04\u5149\u7684\u6570\u91cf\uff08\u8f90\u7167\u5ea6\uff09\uff0c\u6211\u4eec\u83b7\u53d6\u4ee5\u8868\u9762\u6cd5\u7ebf\u4e3a\u4e2d\u5fc3\u7684\u534a\u7403\u7684\u603b\u8f90\u7167\u5ea6\u3002\u83b7\u53d6\u573a\u666f\u8f90\u7167\u5ea6\u7684\u65b9\u6cd5\u5c31\u7b80\u5316\u4e3a\uff1a vec3 irradiance = texture(irradianceMap, N); \u73b0\u5728\uff0c\u4e3a\u4e86\u751f\u6210\u8f90\u7167\u5ea6\u8d34\u56fe\uff0c\u6211\u4eec\u9700\u8981\u5c06\u73af\u5883\u5149\u7167\u6c42\u5377\u79ef\uff0c\u8f6c\u6362\u4e3a\u7acb\u65b9\u4f53\u8d34\u56fe\u3002\u5047\u8bbe\u5bf9\u4e8e\u6bcf\u4e2a\u7247\u6bb5\uff0c\u8868\u9762\u7684\u534a\u7403\u671d\u5411\u6cd5\u5411\u91cf N \uff0c\u5bf9\u7acb\u65b9\u4f53\u8d34\u56fe\u8fdb\u884c\u5377\u79ef\u7b49\u4e8e\u8ba1\u7b97\u671d\u5411 N \u7684\u534a\u7403 \\Omega \u4e2d\u6bcf\u4e2a\u65b9\u5411 w_i \u7684\u603b\u5e73\u5747\u8f90\u5c04\u7387\u3002 \u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0c\u672c\u8282\u6559\u7a0b\u4e2d\u6240\u6709\u7e41\u7410\u7684\u8bbe\u7f6e\u5e76\u975e\u6beb\u65e0\u7528\u5904\uff0c\u56e0\u4e3a\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6\u8f6c\u6362\u540e\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u5bf9\u5176\u8fdb\u884c\u5377\u79ef\uff0c\u6e32\u67d3\u6240\u6709\u516d\u4e2a\u9762\uff0c\u5c06\u5176\u7ed3\u679c\u7528\u5e27\u7f13\u51b2\u6355\u6349\u5230\u65b0\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u4e2d\u3002\u4e4b\u524d\u5df2\u7ecf\u5c06\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u56fe\u8f6c\u6362\u4e3a\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u8fd9\u6b21\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u5b8c\u5168\u76f8\u540c\u7684\u65b9\u6cd5\uff0c\u4f46\u4f7f\u7528\u4e0d\u540c\u7684\u7247\u6bb5\u7740\u8272\u5668\uff1a #version 330 core out vec4 FragColor; in vec3 localPos; uniform samplerCube environmentMap; const float PI = 3.14159265359; void main() { // the sample direction equals the hemisphere's orientation vec3 normal = normalize(localPos); vec3 irradiance = vec3(0.0); [...] // convolution code FragColor = vec4(irradiance, 1.0); } environmentMap \u662f\u4ece\u7b49\u8ddd\u67f1\u72b6\u6295\u5f71\u56fe\u8f6c\u6362\u800c\u6765\u7684 HDR \u7acb\u65b9\u4f53\u8d34\u56fe\u3002 \u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u5bf9\u73af\u5883\u8d34\u56fe\u8fdb\u884c\u5377\u79ef\uff0c\u4f46\u662f\u5bf9\u4e8e\u672c\u6559\u7a0b\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u662f\uff1a\u5bf9\u4e8e\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u6bcf\u4e2a\u7eb9\u7d20\uff0c\u5728\u7eb9\u7d20\u6240\u4ee3\u8868\u7684\u65b9\u5411\u7684\u534a\u7403 \\Omega \u5185\u751f\u6210\u56fa\u5b9a\u6570\u91cf\u7684\u91c7\u6837\u5411\u91cf\uff0c\u5e76\u5bf9\u91c7\u6837\u7ed3\u679c\u53d6\u5e73\u5747\u503c\u3002\u6570\u91cf\u56fa\u5b9a\u7684\u91c7\u6837\u5411\u91cf\u5c06\u5747\u5300\u5730\u5206\u5e03\u5728\u534a\u7403\u5185\u90e8\u3002\u6ce8\u610f\uff0c\u79ef\u5206\u662f\u8fde\u7eed\u51fd\u6570\uff0c\u5728\u91c7\u6837\u5411\u91cf\u6570\u91cf\u56fa\u5b9a\u7684\u60c5\u51b5\u4e0b\u79bb\u6563\u5730\u91c7\u6837\u53ea\u662f\u4e00\u79cd\u8fd1\u4f3c\u8ba1\u7b97\u65b9\u6cd5\uff0c\u6211\u4eec\u91c7\u6837\u7684\u5411\u91cf\u8d8a\u591a\uff0c\u5c31\u8d8a\u63a5\u8fd1\u6b63\u786e\u7684\u7ed3\u679c\u3002 \u53cd\u5c04\u65b9\u7a0b\u7684\u79ef\u5206 \\int \u662f\u56f4\u7ed5\u7acb\u4f53\u89d2 dw \u65cb\u8f6c\uff0c\u800c\u8fd9\u4e2a\u7acb\u4f53\u89d2\u76f8\u5f53\u96be\u4ee5\u5904\u7406\u3002\u4e3a\u4e86\u907f\u514d\u5bf9\u96be\u5904\u7406\u7684\u7acb\u4f53\u89d2\u6c42\u79ef\u5206\uff0c\u6211\u4eec\u4f7f\u7528\u7403\u5750\u6807 \\theta \u548c \\phi \u6765\u4ee3\u66ff\u7acb\u4f53\u89d2\u3002 \u5bf9\u4e8e\u56f4\u7ed5\u534a\u7403\u5927\u5706\u7684\u822a\u5411\u89d2 \\phi \uff0c\u6211\u4eec\u5728 0 \u5230 2\\pi \u5185\u91c7\u6837\uff0c\u800c\u4ece\u534a\u7403\u9876\u70b9\u51fa\u53d1\u7684\u503e\u659c\u89d2 \\theta \uff0c\u91c7\u6837\u8303\u56f4\u662f 0 \u5230 \\frac{1}{2}\\pi \u3002\u4e8e\u662f\u6211\u4eec\u66f4\u65b0\u4e00\u4e0b\u53cd\u5c04\u79ef\u5206\u65b9\u7a0b\uff1a L_o(p,\\phi_o, \\theta_o) = k_d\\frac{c}{\\pi} \\int_{\\phi = 0}^{2\\pi} \\int_{\\theta = 0}^{\\frac{1}{2}\\pi} L_i(p,\\phi_i, \\theta_i) \\cos(\\theta) \\sin(\\theta) d\\phi d\\theta \u6c42\u89e3\u79ef\u5206\u9700\u8981\u6211\u4eec\u5728\u534a\u7403 \\Omega \u5185\u91c7\u96c6\u56fa\u5b9a\u6570\u91cf\u7684\u79bb\u6563\u6837\u672c\u5e76\u5bf9\u5176\u7ed3\u679c\u6c42\u5e73\u5747\u503c\u3002\u5206\u522b\u7ed9\u6bcf\u4e2a\u7403\u5750\u6807\u8f74\u6307\u5b9a\u79bb\u6563\u6837\u672c\u6570\u91cf n_1 \u548c n_2 \u4ee5\u6c42\u5176 \u9ece\u66fc\u548c \uff0c\u79ef\u5206\u5f0f\u4f1a\u8f6c\u6362\u4e3a\u4ee5\u4e0b\u79bb\u6563\u7248\u672c\uff1a L_o(p,\\phi_o, \\theta_o) = k_d \\frac{c\\pi}{n1 n2} \\sum_{\\phi = 0}^{n1} \\sum_{\\theta = 0}^{n2} L_i(p,\\phi_i, \\theta_i) \\cos(\\theta) \\sin(\\theta) d\\phi d\\theta \u5f53\u6211\u4eec\u79bb\u6563\u5730\u5bf9\u4e24\u4e2a\u7403\u5750\u6807\u8f74\u8fdb\u884c\u91c7\u6837\u65f6\uff0c\u6bcf\u4e2a\u91c7\u6837\u8fd1\u4f3c\u4ee3\u8868\u4e86\u534a\u7403\u4e0a\u7684\u4e00\u5c0f\u5757\u533a\u57df\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u3002\u6ce8\u610f\uff0c\u7531\u4e8e\u7403\u7684\u4e00\u822c\u6027\u8d28\uff0c\u5f53\u91c7\u6837\u533a\u57df\u671d\u5411\u4e2d\u5fc3\u9876\u90e8\u4f1a\u805a\u65f6\uff0c\u5929\u9876\u89d2 \\theta \u53d8\u9ad8\uff0c\u534a\u7403\u7684\u79bb\u6563\u91c7\u6837\u533a\u57df\u53d8\u5c0f\u3002\u4e3a\u4e86\u5e73\u8861\u8f83\u5c0f\u7684\u533a\u57df\u8d21\u732e\u5ea6\uff0c\u6211\u4eec\u4f7f\u7528 sin\\theta \u6765\u6743\u8861\u533a\u57df\u8d21\u732e\u5ea6\uff0c\u8fd9\u5c31\u662f\u591a\u51fa\u6765\u7684 sin \u7684\u4f5c\u7528\u3002 \u7ed9\u5b9a\u6bcf\u4e2a\u7247\u6bb5\u7684\u79ef\u5206\u7403\u5750\u6807\uff0c\u5bf9\u534a\u7403\u8fdb\u884c\u79bb\u6563\u91c7\u6837\uff0c\u8fc7\u7a0b\u4ee3\u7801\u5982\u4e0b\uff1a vec3 irradiance = vec3(0.0); vec3 up = vec3(0.0, 1.0, 0.0); vec3 right = normalize(cross(up, normal)); up = normalize(cross(normal, right)); float sampleDelta = 0.025; float nrSamples = 0.0; for(float phi = 0.0; phi < 2.0 * PI; phi += sampleDelta) { for(float theta = 0.0; theta < 0.5 * PI; theta += sampleDelta) { // spherical to cartesian (in tangent space) vec3 tangentSample = vec3(sin(theta) * cos(phi), sin(theta) * sin(phi), cos(theta)); // tangent space to world vec3 sampleVec = tangentSample.x * right + tangentSample.y * up + tangentSample.z * N; irradiance += texture(environmentMap, sampleVec).rgb * cos(theta) * sin(theta); nrSamples++; } } irradiance = PI * irradiance * (1.0 / float(nrSamples)); \u6211\u4eec\u4ee5\u4e00\u4e2a\u56fa\u5b9a\u7684 sampleDelta \u589e\u91cf\u503c\u904d\u5386\u534a\u7403\uff0c\u51cf\u5c0f\uff08\u6216\u589e\u52a0\uff09\u8fd9\u4e2a\u589e\u91cf\u5c06\u4f1a\u589e\u52a0\uff08\u6216\u51cf\u5c11\uff09\u7cbe\u786e\u5ea6\u3002 \u5728\u4e24\u5c42\u5faa\u73af\u5185\uff0c\u6211\u4eec\u83b7\u53d6\u4e00\u4e2a\u7403\u9762\u5750\u6807\u5e76\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3a 3D \u76f4\u89d2\u5750\u6807\u5411\u91cf\uff0c\u5c06\u5411\u91cf\u4ece\u5207\u7ebf\u7a7a\u95f4\u8f6c\u6362\u4e3a\u4e16\u754c\u7a7a\u95f4\uff0c\u5e76\u4f7f\u7528\u6b64\u5411\u91cf\u76f4\u63a5\u91c7\u6837 HDR \u73af\u5883\u8d34\u56fe\u3002\u6211\u4eec\u5c06\u6bcf\u4e2a\u91c7\u6837\u7ed3\u679c\u52a0\u5230 irradiance \uff0c\u6700\u540e\u9664\u4ee5\u91c7\u6837\u7684\u603b\u6570\uff0c\u5f97\u5230\u5e73\u5747\u91c7\u6837\u8f90\u7167\u5ea6\u3002\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u5c06\u91c7\u6837\u7684\u989c\u8272\u503c\u4e58\u4ee5\u7cfb\u6570 cos(\u03b8) \uff0c\u56e0\u4e3a\u8f83\u5927\u89d2\u5ea6\u7684\u5149\u8f83\u5f31\uff0c\u800c\u7cfb\u6570 sin(\u03b8) \u5219\u7528\u4e8e\u6743\u8861\u8f83\u9ad8\u534a\u7403\u533a\u57df\u7684\u8f83\u5c0f\u91c7\u6837\u533a\u57df\u7684\u8d21\u732e\u5ea6\u3002 \u73b0\u5728\u5269\u4e0b\u8981\u505a\u7684\u5c31\u662f\u8bbe\u7f6e OpenGL \u6e32\u67d3\u4ee3\u7801\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e4b\u524d\u6355\u6349\u7684 envCubemap \u6c42\u5377\u79ef\u3002\u9996\u5148\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u8f90\u7167\u5ea6\u7acb\u65b9\u4f53\u8d34\u56fe\uff08\u91cd\u590d\u4e00\u904d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u6e32\u67d3\u5faa\u73af\u4e4b\u524d\u6267\u884c\u4e00\u6b21\uff09\uff1a unsigned int irradianceMap; glGenTextures(1, &irradianceMap); glBindTexture(GL_TEXTURE_CUBE_MAP, irradianceMap); for (unsigned int i = 0; i < 6; ++i) { glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, GL_RGB16F, 32, 32, 0, GL_RGB, GL_FLOAT, nullptr); } glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_R, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MIN_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MAG_FILTER, GL_LINEAR); \u7531\u4e8e\u8f90\u7167\u5ea6\u56fe\u5bf9\u6240\u6709\u5468\u56f4\u7684\u8f90\u5c04\u503c\u53d6\u4e86\u5e73\u5747\u503c\uff0c\u56e0\u6b64\u5b83\u4e22\u5931\u4e86\u5927\u90e8\u5206\u9ad8\u9891\u7ec6\u8282\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ee5\u8f83\u4f4e\u7684\u5206\u8fa8\u7387\uff0832x32\uff09\u5b58\u50a8\uff0c\u5e76\u8ba9 OpenGL \u7684\u7ebf\u6027\u6ee4\u6ce2\u5b8c\u6210\u5927\u90e8\u5206\u5de5\u4f5c\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u6355\u6349\u5230\u7684\u5e27\u7f13\u51b2\u56fe\u50cf\u7f29\u653e\u5230\u65b0\u7684\u5206\u8fa8\u7387\uff1a glBindFramebuffer(GL_FRAMEBUFFER, captureFBO); glBindRenderbuffer(GL_RENDERBUFFER, captureRBO); glRenderbufferStorage(GL_RENDERBUFFER, GL_DEPTH_COMPONENT24, 32, 32); \u6211\u4eec\u4f7f\u7528\u5377\u79ef\u7740\u8272\u5668\u2014\u2014\u548c\u6355\u6349\u73af\u5883\u7acb\u65b9\u4f53\u8d34\u56fe\u7c7b\u4f3c\u7684\u65b9\u5f0f\u2014\u2014\u6765\u5bf9\u73af\u5883\u8d34\u56fe\u6c42\u5377\u79ef\uff1a irradianceShader.use(); irradianceShader.setInt(\"environmentMap\", 0); irradianceShader.setMat4(\"projection\", captureProjection); glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_CUBE_MAP, envCubemap); glViewport(0, 0, 32, 32); // don't forget to configure the viewport to the capture dimensions. glBindFramebuffer(GL_FRAMEBUFFER, captureFBO); for (unsigned int i = 0; i < 6; ++i) { irradianceShader.setMat4(\"view\", captureViews[i]); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_CUBE_MAP_POSITIVE_X + i, irradianceMap, 0); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); renderCube(); } glBindFramebuffer(GL_FRAMEBUFFER, 0); \u73b0\u5728\uff0c\u5b8c\u6210\u8fd9\u4e2a\u6d41\u7a0b\u4e4b\u540e\uff0c\u6211\u4eec\u5e94\u8be5\u5f97\u5230\u4e86\u4e00\u4e2a\u9884\u8ba1\u7b97\u597d\u7684\u8f90\u7167\u5ea6\u56fe\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u5176\u7528\u4e8eIBL \u8ba1\u7b97\u3002\u4e3a\u4e86\u67e5\u770b\u6211\u4eec\u662f\u5426\u6210\u529f\u5730\u5bf9\u73af\u5883\u8d34\u56fe\u8fdb\u884c\u4e86\u5377\u79ef\uff0c\u8ba9\u6211\u4eec\u5c06\u5929\u7a7a\u76d2\u7684\u73af\u5883\u91c7\u6837\u8d34\u56fe\u66ff\u6362\u4e3a\u8f90\u7167\u5ea6\u8d34\u56fe\uff1a \u5982\u679c\u5b83\u770b\u8d77\u6765\u50cf\u6a21\u7cca\u7684\u73af\u5883\u8d34\u56fe\uff0c\u8bf4\u660e\u60a8\u5df2\u7ecf\u6210\u529f\u5730\u5bf9\u73af\u5883\u8d34\u56fe\u8fdb\u884c\u4e86\u5377\u79ef\u3002","title":"\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u5377\u79ef"},{"location":"07%20PBR/03%20IBL/01%20Diffuse%20irradiance/#pbr","text":"\u8f90\u7167\u5ea6\u56fe\u8868\u793a\u6240\u6709\u5468\u56f4\u7684\u95f4\u63a5\u5149\u7d2f\u79ef\u7684\u53cd\u5c04\u7387\u7684\u6f2b\u53cd\u5c04\u90e8\u5206\u7684\u79ef\u5206\u3002\u6ce8\u610f\u5149\u4e0d\u662f\u6765\u81ea\u4efb\u4f55\u76f4\u63a5\u5149\u6e90\uff0c\u800c\u662f\u6765\u81ea\u5468\u56f4\u73af\u5883\uff0c\u6211\u4eec\u5c06\u95f4\u63a5\u6f2b\u53cd\u5c04\u548c\u95f4\u63a5\u955c\u9762\u53cd\u5c04\u89c6\u4e3a\u73af\u5883\u5149\uff0c\u53d6\u4ee3\u4e86\u6211\u4eec\u4e4b\u524d\u8bbe\u5b9a\u7684\u5e38\u6570\u9879\u3002 \u9996\u5148\uff0c\u52a1\u5fc5\u5c06\u9884\u8ba1\u7b97\u7684\u8f90\u7167\u5ea6\u56fe\u6dfb\u52a0\u4e3a\u4e00\u4e2a\u7acb\u65b9\u4f53\u91c7\u6837\u5668\uff1a uniform samplerCube irradianceMap; \u7ed9\u5b9a\u4e00\u5f20\u8f90\u7167\u5ea6\u56fe\uff0c\u5b83\u5b58\u50a8\u4e86\u573a\u666f\u4e2d\u7684\u6240\u6709\u95f4\u63a5\u6f2b\u53cd\u5c04\u5149\uff0c\u83b7\u53d6\u7247\u6bb5\u7684\u8f90\u7167\u5ea6\u5c31\u7b80\u5316\u4e3a\u7ed9\u5b9a\u6cd5\u7ebf\u7684\u4e00\u6b21\u7eb9\u7406\u91c7\u6837\uff1a // vec3 ambient = vec3(0.03); vec3 ambient = texture(irradianceMap, N).rgb; \u7136\u800c\uff0c\u7531\u4e8e\u95f4\u63a5\u5149\u7167\u5305\u62ec\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u4e24\u90e8\u5206\uff0c\u6b63\u5982\u6211\u4eec\u4ece\u5206\u5272\u7248\u7684\u53cd\u5c04\u65b9\u7a0b\u4e2d\u770b\u5230\u7684\u90a3\u6837\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6f2b\u53cd\u5c04\u90e8\u5206\u8fdb\u884c\u76f8\u5e94\u7684\u52a0\u6743\u3002\u4e0e\u6211\u4eec\u5728\u524d\u4e00\u8282\u6559\u7a0b\u4e2d\u6240\u505a\u7684\u7c7b\u4f3c\uff0c\u6211\u4eec\u4f7f\u7528\u83f2\u6d85\u8033\u516c\u5f0f\u6765\u8ba1\u7b97\u8868\u9762\u7684\u95f4\u63a5\u53cd\u5c04\u7387\uff0c\u6211\u4eec\u4ece\u4e2d\u5f97\u51fa\u6298\u5c04\u7387\u6216\u79f0\u6f2b\u53cd\u5c04\u7387\uff1a vec3 kS = fresnelSchlick(max(dot(N, V), 0.0), F0); vec3 kD = 1.0 - kS; vec3 irradiance = texture(irradianceMap, N).rgb; vec3 diffuse = irradiance * albedo; vec3 ambient = (kD * diffuse) * ao; \u7531\u4e8e\u73af\u5883\u5149\u6765\u81ea\u534a\u7403\u5185\u56f4\u7ed5\u6cd5\u7ebf N \u7684\u6240\u6709\u65b9\u5411\uff0c\u56e0\u6b64\u6ca1\u6709\u4e00\u4e2a\u786e\u5b9a\u7684\u534a\u5411\u91cf\u6765\u8ba1\u7b97\u83f2\u6d85\u8033\u6548\u5e94\u3002\u4e3a\u4e86\u6a21\u62df\u83f2\u6d85\u8033\u6548\u5e94\uff0c\u6211\u4eec\u7528\u6cd5\u7ebf\u548c\u89c6\u7ebf\u4e4b\u95f4\u7684\u5939\u89d2\u8ba1\u7b97\u83f2\u6d85\u8033\u7cfb\u6570\u3002\u7136\u800c\uff0c\u4e4b\u524d\u6211\u4eec\u662f\u4ee5\u53d7\u7c97\u7cd9\u5ea6\u5f71\u54cd\u7684\u5fae\u8868\u9762\u534a\u5411\u91cf\u4f5c\u4e3a\u83f2\u6d85\u8033\u516c\u5f0f\u7684\u8f93\u5165\uff0c\u4f46\u6211\u4eec\u76ee\u524d\u6ca1\u6709\u8003\u8651\u4efb\u4f55\u7c97\u7cd9\u5ea6\uff0c\u8868\u9762\u7684\u53cd\u5c04\u7387\u603b\u662f\u4f1a\u76f8\u5bf9\u8f83\u9ad8\u3002\u95f4\u63a5\u5149\u548c\u76f4\u5c04\u5149\u9075\u5faa\u76f8\u540c\u7684\u5c5e\u6027\uff0c\u56e0\u6b64\u6211\u4eec\u671f\u671b\u8f83\u7c97\u7cd9\u7684\u8868\u9762\u5728\u8fb9\u7f18\u53cd\u5c04\u8f83\u5f31\u3002\u7531\u4e8e\u6211\u4eec\u6ca1\u6709\u8003\u8651\u8868\u9762\u7684\u7c97\u7cd9\u5ea6\uff0c\u95f4\u63a5\u83f2\u6d85\u8033\u53cd\u5c04\u5728\u7c97\u7cd9\u975e\u91d1\u5c5e\u8868\u9762\u4e0a\u770b\u8d77\u6765\u6709\u70b9\u8fc7\u5f3a\uff08\u4e3a\u4e86\u6f14\u793a\u76ee\u7684\u7565\u5fae\u5938\u5927\uff09\uff1a \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728 S\u00e9bastien Lagarde \u63d0\u51fa\u7684 Fresnel-Schlick \u65b9\u7a0b\u4e2d\u52a0\u5165\u7c97\u7cd9\u5ea6\u9879\u6765\u7f13\u89e3\u8fd9\u4e2a\u95ee\u9898\uff1a vec3 fresnelSchlickRoughness(float cosTheta, vec3 F0, float roughness) { return F0 + (max(vec3(1.0 - roughness), F0) - F0) * pow(1.0 - cosTheta, 5.0); } \u5728\u8ba1\u7b97\u83f2\u6d85\u8033\u6548\u5e94\u65f6\u7eb3\u5165\u8868\u9762\u7c97\u7cd9\u5ea6\uff0c\u73af\u5883\u5149\u4ee3\u7801\u6700\u7ec8\u786e\u5b9a\u4e3a\uff1a vec3 kS = fresnelSchlickRoughness(max(dot(N, V), 0.0), F0, roughness); vec3 kD = 1.0 - kS; vec3 irradiance = texture(irradianceMap, N).rgb; vec3 diffuse = irradiance * albedo; vec3 ambient = (kD * diffuse) * ao; \u5982\u60a8\u6240\u89c1\uff0c\u5b9e\u8df5\u4e0a\u57fa\u4e8e\u56fe\u50cf\u7684\u5149\u7167\u8ba1\u7b97\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u91c7\u6837\u4e00\u6b21\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u5927\u90e8\u5206\u7684\u5de5\u4f5c\u91cf\u5728\u4e8e\u5c06\u73af\u5883\u8d34\u56fe\u9884\u8ba1\u7b97\u6216\u5377\u79ef\u6210\u8f90\u7167\u5ea6\u56fe\u3002 \u56de\u5230\u6211\u4eec\u5728 \u5149\u7167\u6559\u7a0b \u4e2d\u5efa\u7acb\u7684\u521d\u59cb\u573a\u666f\uff0c\u573a\u666f\u4e2d\u6392\u5217\u7684\u7403\u4f53\u91d1\u5c5e\u5ea6\u6cbf\u5782\u76f4\u65b9\u5411\u9012\u589e\uff0c\u7c97\u7cd9\u5ea6\u6cbf\u6c34\u5e73\u65b9\u5411\u9012\u589e\u3002\u5411\u573a\u666f\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u6f2b\u53cd\u5c04\u56fe\u50cf\u7684\u5149\u7167\u4e4b\u540e\uff0c\u5b83\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a \u73b0\u5728\u770b\u8d77\u6765\u4ecd\u7136\u6709\u70b9\u5947\u602a\uff0c\u56e0\u4e3a\u91d1\u5c5e\u5ea6\u8f83\u9ad8\u7684\u7403\u4f53 \u9700\u8981 \u67d0\u79cd\u5f62\u5f0f\u7684\u53cd\u5c04\u4ee5\u4fbf\u770b\u8d77\u6765\u66f4\u50cf\u91d1\u5c5e\u8868\u9762\uff08\u56e0\u4e3a\u91d1\u5c5e\u8868\u9762\u6ca1\u6709\u6f2b\u53cd\u5c04\uff09\uff0c\u4e0d\u8fc7\u76ee\u524d\u53ea\u6709\u6765\u81ea\u70b9\u5149\u6e90\u7684\u53cd\u5c04\u2014\u2014\u800c\u4e14\u53ef\u4ee5\u8bf4\u51e0\u4e4e\u6ca1\u6709\u3002\u4e0d\u8fc7\u5c3d\u7ba1\u5982\u6b64\uff0c\u60a8\u4e5f\u53ef\u4ee5\u770b\u51fa\uff0c\u7403\u4f53\u5728\u73af\u5883\u4e2d\u7684\u611f\u89c9\u66f4\u52a0\u548c\u8c10\u4e86\uff08\u7279\u522b\u662f\u5728\u73af\u5883\u8d34\u56fe\u4e4b\u95f4\u5207\u6362\u7684\u65f6\u5019\uff09\uff0c\u56e0\u4e3a\u8868\u9762\u4f1a\u6b63\u786e\u5730\u54cd\u5e94\u73af\u5883\u5149\u7167\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u4ee5\u4e0a\u8ba8\u8bba\u8fc7\u7684\u6574\u5957\u6e90\u4ee3\u7801\u3002\u5728 \u4e0b\u4e00\u8282\u6559\u7a0b \u4e2d\uff0c\u6211\u4eec\u5c06\u6dfb\u52a0\u53cd\u5c04\u79ef\u5206\u7684\u95f4\u63a5\u955c\u9762\u53cd\u5c04\u90e8\u5206\uff0c\u6b64\u65f6\u6211\u4eec\u5c06\u771f\u6b63\u770b\u5230 PBR \u7684\u529b\u91cf\u3002","title":"PBR \u548c\u95f4\u63a5\u8f90\u7167\u5ea6\u5149\u7167"},{"location":"07%20PBR/03%20IBL/01%20Diffuse%20irradiance/#_4","text":"Coding Labs: Physically based rendering \uff1a\u4ecb\u7ecd PBR \uff0c\u5982\u4f55\u4ee5\u53ca\u4e3a\u4f55\u8981\u751f\u6210\u8f90\u7167\u5ea6\u56fe\u3002 The Mathematics of Shading \uff1a\u501f\u52a9 ScratchAPixel\uff0c\u5bf9\u672c\u6559\u7a0b\u4e2d\u6d89\u53ca\u7684\u4e00\u4e9b\u6570\u5b66\u77e5\u8bc6\u7684\u7b80\u8981\u4ecb\u7ecd\uff0c\u7279\u522b\u662f\u5173\u4e8e\u6781\u5750\u6807\u548c\u79ef\u5206\u3002","title":"\u8fdb\u9636\u9605\u8bfb"},{"location":"07%20PBR/03%20IBL/02%20Specular%20IBL/","text":"\u955c\u9762\u53cd\u5c04 IBL \u539f\u6587 Specular IBL \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 flyingSnow \u6821\u5bf9 \u5728 \u4e0a\u4e00\u8282\u6559\u7a0b \u4e2d\uff0c\u6211\u4eec\u9884\u8ba1\u7b97\u4e86\u8f90\u7167\u5ea6\u56fe\u4f5c\u4e3a\u5149\u7167\u7684\u95f4\u63a5\u6f2b\u53cd\u5c04\u90e8\u5206\uff0c\u4ee5\u5c06 PBR \u4e0e\u57fa\u4e8e\u56fe\u50cf\u7684\u7167\u660e\u76f8\u7ed3\u5408\u3002\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u91cd\u70b9\u5173\u6ce8\u53cd\u5c04\u65b9\u7a0b\u7684\u955c\u9762\u90e8\u5206\uff1a L_o(p,\\omega_o) = \\int\\limits_{\\Omega} (k_d\\frac{c}{\\pi} + k_s\\frac{DFG}{4(\\omega_o \\cdot n)(\\omega_i \\cdot n)}) L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \u4f60\u4f1a\u6ce8\u610f\u5230 Cook-Torrance \u955c\u9762\u90e8\u5206\uff08\u4e58\u4ee5 k_s \uff09\u5728\u6574\u4e2a\u79ef\u5206\u4e0a\u4e0d\u662f\u5e38\u6570\uff0c\u4e0d\u4ec5\u53d7\u5165\u5c04\u5149\u65b9\u5411\u5f71\u54cd\uff0c \u8fd8 \u53d7\u89c6\u89d2\u5f71\u54cd\u3002\u5982\u679c\u8bd5\u56fe\u89e3\u7b97\u6240\u6709\u5165\u5c04\u5149\u65b9\u5411\u52a0\u6240\u6709\u53ef\u80fd\u7684\u89c6\u89d2\u65b9\u5411\u7684\u79ef\u5206\uff0c\u4e8c\u8005\u7ec4\u5408\u6570\u4f1a\u6781\u5176\u5e9e\u5927\uff0c\u5b9e\u65f6\u8ba1\u7b97\u592a\u6602\u8d35\u3002Epic Games \u63d0\u51fa\u4e86\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u4ed6\u4eec\u9884\u8ba1\u7b97\u955c\u9762\u90e8\u5206\u7684\u5377\u79ef\uff0c\u4e3a\u5b9e\u65f6\u8ba1\u7b97\u4f5c\u4e86\u4e00\u4e9b\u59a5\u534f\uff0c\u8fd9\u79cd\u65b9\u6848\u88ab\u79f0\u4e3a \u5206\u5272\u6c42\u548c\u8fd1\u4f3c\u6cd5 \uff08split sum approximation\uff09\u3002 \u5206\u5272\u6c42\u548c\u8fd1\u4f3c\u5c06\u65b9\u7a0b\u7684\u955c\u9762\u90e8\u5206\u5206\u5272\u6210\u4e24\u4e2a\u72ec\u7acb\u7684\u90e8\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u5355\u72ec\u6c42\u5377\u79ef\uff0c\u7136\u540e\u5728 PBR \u7740\u8272\u5668\u4e2d\u6c42\u548c\uff0c\u4ee5\u7528\u4e8e\u95f4\u63a5\u955c\u9762\u53cd\u5c04\u90e8\u5206 IBL\u3002\u5206\u5272\u6c42\u548c\u8fd1\u4f3c\u6cd5\u7c7b\u4f3c\u4e8e\u6211\u4eec\u4e4b\u524d\u6c42\u8f90\u7167\u56fe\u9884\u5377\u79ef\u7684\u65b9\u6cd5\uff0c\u9700\u8981 HDR \u73af\u5883\u8d34\u56fe\u4f5c\u4e3a\u5176\u5377\u79ef\u8f93\u5165\u3002\u4e3a\u4e86\u7406\u89e3\uff0c\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u53cd\u5c04\u65b9\u7a0b\uff0c\u4f46\u8fd9\u6b21\u53ea\u5173\u6ce8\u955c\u9762\u53cd\u5c04\u90e8\u5206\uff08\u5728 \u4e0a\u4e00\u8282\u6559\u7a0b \u4e2d\u5df2\u7ecf\u5265\u79bb\u4e86\u6f2b\u53cd\u5c04\u90e8\u5206\uff09\uff1a L_o(p,\\omega_o) = \\int\\limits_{\\Omega} (k_s\\frac{DFG}{4(\\omega_o \\cdot n)(\\omega_i \\cdot n)} L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i = \\int\\limits_{\\Omega} f_r(p, \\omega_i, \\omega_o) L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \u7531\u4e8e\u4e0e\u8f90\u7167\u5ea6\u5377\u79ef\u76f8\u540c\u7684\uff08\u6027\u80fd\uff09\u539f\u56e0\uff0c\u6211\u4eec\u65e0\u6cd5\u4ee5\u5408\u7406\u7684\u6027\u80fd\u5b9e\u65f6\u6c42\u89e3\u79ef\u5206\u7684\u955c\u9762\u53cd\u5c04\u90e8\u5206\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u6700\u597d\u9884\u8ba1\u7b97\u8fd9\u4e2a\u79ef\u5206\uff0c\u4ee5\u5f97\u5230\u50cf\u955c\u9762 IBL \u8d34\u56fe\u8fd9\u6837\u7684\u4e1c\u897f\uff0c\u7528\u7247\u6bb5\u7684\u6cd5\u7ebf\u5bf9\u8fd9\u5f20\u56fe\u91c7\u6837\u5e76\u8ba1\u7b97\u3002\u4f46\u662f\uff0c\u6709\u4e00\u4e2a\u5730\u65b9\u6709\u70b9\u68d8\u624b\uff1a\u6211\u4eec\u80fd\u591f\u9884\u8ba1\u7b97\u8f90\u7167\u5ea6\u56fe\uff0c\u662f\u56e0\u4e3a\u5176\u79ef\u5206\u4ec5\u4f9d\u8d56\u4e8e \\omega_i \uff0c\u5e76\u4e14\u53ef\u4ee5\u5c06\u6f2b\u53cd\u5c04\u53cd\u5c04\u7387\u5e38\u6570\u9879\u79fb\u51fa\u79ef\u5206\uff0c\u4f46\u8fd9\u4e00\u6b21\uff0c\u79ef\u5206\u4e0d\u4ec5\u4ec5\u53d6\u51b3\u4e8e \\omega_i \uff0c\u4ece BRDF \u53ef\u4ee5\u770b\u51fa\uff1a f_r(p, w_i, w_o) = \\frac{DFG}{4(\\omega_o \\cdot n)(\\omega_i \\cdot n)} \u8fd9\u6b21\u79ef\u5206\u8fd8\u4f9d\u8d56 \\omega_o \uff0c\u6211\u4eec\u65e0\u6cd5\u7528\u4e24\u4e2a\u65b9\u5411\u5411\u91cf\u91c7\u6837\u9884\u8ba1\u7b97\u7684\u7acb\u65b9\u4f53\u56fe\u3002\u5982\u524d\u4e00\u4e2a\u6559\u7a0b\u4e2d\u6240\u8ff0\uff0c\u4f4d\u7f6e p \u4e0e\u6b64\u5904\u65e0\u5173\u3002\u5728\u5b9e\u65f6\u72b6\u6001\u4e0b\uff0c\u5bf9\u6bcf\u79cd\u53ef\u80fd\u7684 \\omega_i \u548c \\omega_o \u7684\u7ec4\u5408\u9884\u8ba1\u7b97\u8be5\u79ef\u5206\u662f\u4e0d\u53ef\u884c\u7684\u3002 Epic Games \u7684\u5206\u5272\u6c42\u548c\u8fd1\u4f3c\u6cd5\u5c06\u9884\u8ba1\u7b97\u5206\u6210\u4e24\u4e2a\u5355\u72ec\u7684\u90e8\u5206\u6c42\u89e3\uff0c\u518d\u5c06\u4e24\u90e8\u5206\u7ec4\u5408\u8d77\u6765\u5f97\u5230\u540e\u6587\u7ed9\u51fa\u7684\u9884\u8ba1\u7b97\u7ed3\u679c\u3002\u5206\u5272\u6c42\u548c\u8fd1\u4f3c\u6cd5\u5c06\u955c\u9762\u53cd\u5c04\u79ef\u5206\u62c6\u6210\u4e24\u4e2a\u72ec\u7acb\u7684\u79ef\u5206\uff1a L_o(p,\\omega_o) = \\int\\limits_{\\Omega} L_i(p,\\omega_i) d\\omega_i * \\int\\limits_{\\Omega} f_r(p, \\omega_i, \\omega_o) n \\cdot \\omega_i d\\omega_i \u5377\u79ef\u7684\u7b2c\u4e00\u90e8\u5206\u88ab\u79f0\u4e3a \u9884\u6ee4\u6ce2\u73af\u5883\u8d34\u56fe \uff0c\u5b83\u7c7b\u4f3c\u4e8e\u8f90\u7167\u5ea6\u56fe\uff0c\u662f\u9884\u5148\u8ba1\u7b97\u7684\u73af\u5883\u5377\u79ef\u8d34\u56fe\uff0c\u4f46\u8fd9\u6b21\u8003\u8651\u4e86\u7c97\u7cd9\u5ea6\u3002\u56e0\u4e3a\u968f\u7740\u7c97\u7cd9\u5ea6\u7684\u589e\u52a0\uff0c\u53c2\u4e0e\u73af\u5883\u8d34\u56fe\u5377\u79ef\u7684\u91c7\u6837\u5411\u91cf\u4f1a\u66f4\u5206\u6563\uff0c\u5bfc\u81f4\u53cd\u5c04\u66f4\u6a21\u7cca\uff0c\u6240\u4ee5\u5bf9\u4e8e\u5377\u79ef\u7684\u6bcf\u4e2a\u7c97\u7cd9\u5ea6\u7ea7\u522b\uff0c\u6211\u4eec\u5c06\u6309\u987a\u5e8f\u628a\u6a21\u7cca\u540e\u7684\u7ed3\u679c\u5b58\u50a8\u5728\u9884\u6ee4\u6ce2\u8d34\u56fe\u7684 mipmap \u4e2d\u3002\u4f8b\u5982\uff0c\u9884\u8fc7\u6ee4\u7684\u73af\u5883\u8d34\u56fe\u5728\u5176 5 \u4e2a mipmap \u7ea7\u522b\u4e2d\u5b58\u50a8 5 \u4e2a\u4e0d\u540c\u7c97\u7cd9\u5ea6\u503c\u7684\u9884\u5377\u79ef\u7ed3\u679c\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u6211\u4eec\u4f7f\u7528 Cook-Torrance BRDF \u7684\u6cd5\u7ebf\u5206\u5e03\u51fd\u6570(NDF)\u751f\u6210\u91c7\u6837\u5411\u91cf\u53ca\u5176\u6563\u5c04\u5f3a\u5ea6\uff0c\u8be5\u51fd\u6570\u5c06\u6cd5\u7ebf\u548c\u89c6\u89d2\u65b9\u5411\u4f5c\u4e3a\u8f93\u5165\u3002\u7531\u4e8e\u6211\u4eec\u5728\u5377\u79ef\u73af\u5883\u8d34\u56fe\u65f6\u4e8b\u5148\u4e0d\u77e5\u9053\u89c6\u89d2\u65b9\u5411\uff0c\u56e0\u6b64 Epic Games \u5047\u8bbe\u89c6\u89d2\u65b9\u5411\u2014\u2014\u4e5f\u5c31\u662f\u955c\u9762\u53cd\u5c04\u65b9\u5411\u2014\u2014\u603b\u662f\u7b49\u4e8e\u8f93\u51fa\u91c7\u6837\u65b9\u5411 \\omega_o \uff0c\u4ee5\u4f5c\u8fdb\u4e00\u6b65\u8fd1\u4f3c\u3002\u7ffb\u8bd1\u6210\u4ee3\u7801\u5982\u4e0b\uff1a vec3 N = normalize(w_o); vec3 R = N; vec3 V = R; \u8fd9\u6837\uff0c\u9884\u8fc7\u6ee4\u7684\u73af\u5883\u5377\u79ef\u5c31\u4e0d\u9700\u8981\u5173\u5fc3\u89c6\u89d2\u65b9\u5411\u4e86\u3002\u8fd9\u610f\u5473\u7740\u5f53\u4ece\u5982\u4e0b\u56fe\u7684\u89d2\u5ea6\u89c2\u5bdf\u8868\u9762\u7684\u955c\u9762\u53cd\u5c04\u65f6\uff0c\u5f97\u5230\u7684\u63a0\u89d2\u955c\u9762\u53cd\u5c04\u6548\u679c\u4e0d\u662f\u5f88\u597d\uff08\u56fe\u7247\u6765\u81ea\u6587\u7ae0\u300aMoving Frostbite to PBR\u300b\uff09\u3002\u7136\u800c\uff0c\u901a\u5e38\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u4f53\u9762\u7684\u59a5\u534f\uff1a \u7b49\u5f0f\u7684\u7b2c\u4e8c\u90e8\u5206\u7b49\u4e8e\u955c\u9762\u53cd\u5c04\u79ef\u5206\u7684 BRDF \u90e8\u5206\u3002\u5982\u679c\u6211\u4eec\u5047\u8bbe\u6bcf\u4e2a\u65b9\u5411\u7684\u5165\u5c04\u8f90\u5c04\u5ea6\u90fd\u662f\u767d\u8272\u7684\uff08\u56e0\u6b64 L(p, x) = 1.0 \uff09\uff0c\u5c31\u53ef\u4ee5\u5728\u7ed9\u5b9a\u7c97\u7cd9\u5ea6\u3001\u5149\u7ebf \\omega_i \u6cd5\u7ebf n \u5939\u89d2 n \\cdot \\omega_i \u7684\u60c5\u51b5\u4e0b\uff0c\u9884\u8ba1\u7b97 BRDF \u7684\u54cd\u5e94\u7ed3\u679c\u3002Epic Games \u5c06\u9884\u8ba1\u7b97\u597d\u7684 BRDF \u5bf9\u6bcf\u4e2a\u7c97\u7cd9\u5ea6\u548c\u5165\u5c04\u89d2\u7684\u7ec4\u5408\u7684\u54cd\u5e94\u7ed3\u679c\u5b58\u50a8\u5728\u4e00\u5f20 2D \u67e5\u627e\u7eb9\u7406(LUT)\u4e0a\uff0c\u79f0\u4e3a BRDF\u79ef\u5206\u8d34\u56fe \u30022D \u67e5\u627e\u7eb9\u7406\u5b58\u50a8\u662f\u83f2\u6d85\u8033\u54cd\u5e94\u7684\u7cfb\u6570\uff08R \u901a\u9053\uff09\u548c\u504f\u5dee\u503c\uff08G \u901a\u9053\uff09\uff0c\u5b83\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u5206\u5272\u7248\u955c\u9762\u53cd\u5c04\u79ef\u5206\u7684\u7b2c\u4e8c\u4e2a\u90e8\u5206\uff1a \u751f\u6210\u67e5\u627e\u7eb9\u7406\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4ee5 BRDF \u7684\u8f93\u5165 n\u22c5\\omega_i \uff08\u8303\u56f4\u5728 0.0 \u548c 1.0 \u4e4b\u95f4\uff09\u4f5c\u4e3a\u6a2a\u5750\u6807\uff0c\u4ee5\u7c97\u7cd9\u5ea6\u4f5c\u4e3a\u7eb5\u5750\u6807\u3002\u6709\u4e86\u6b64 BRDF \u79ef\u5206\u8d34\u56fe\u548c\u9884\u8fc7\u6ee4\u7684\u73af\u5883\u8d34\u56fe\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u4e24\u8005\u7ed3\u5408\u8d77\u6765\uff0c\u4ee5\u83b7\u5f97\u955c\u9762\u53cd\u5c04\u79ef\u5206\u7684\u7ed3\u679c\uff1a float lod = getMipLevelFromRoughness(roughness); vec3 prefilteredColor = textureCubeLod(PrefilteredEnvMap, refVec, lod); vec2 envBRDF = texture2D(BRDFIntegrationMap, vec2(NdotV, roughness)).xy; vec3 indirectSpecular = prefilteredColor * (F * envBRDF.x + envBRDF.y) \u81f3\u6b64\uff0c\u4f60\u5e94\u8be5\u5bf9 Epic Games \u7684\u5206\u5272\u6c42\u548c\u8fd1\u4f3c\u6cd5\u7684\u539f\u7406\uff0c\u4ee5\u53ca\u5b83\u5982\u4f55\u8fd1\u4f3c\u6c42\u89e3\u53cd\u5c04\u65b9\u7a0b\u7684\u95f4\u63a5\u955c\u9762\u53cd\u5c04\u90e8\u5206\u6709\u4e86\u4e00\u4e9b\u57fa\u672c\u5370\u8c61\u3002\u8ba9\u6211\u4eec\u73b0\u5728\u5c1d\u8bd5\u4e00\u4e0b\u81ea\u5df1\u6784\u5efa\u9884\u5377\u79ef\u90e8\u5206\u3002 \u9884\u6ee4\u6ce2HDR\u73af\u5883\u8d34\u56fe \u9884\u6ee4\u6ce2\u73af\u5883\u8d34\u56fe\u7684\u65b9\u6cd5\u4e0e\u6211\u4eec\u5bf9\u8f90\u5c04\u5ea6\u8d34\u56fe\u6c42\u5377\u79ef\u7684\u65b9\u6cd5\u975e\u5e38\u76f8\u4f3c\u3002\u5bf9\u4e8e\u5377\u79ef\u7684\u6bcf\u4e2a\u7c97\u7cd9\u5ea6\u7ea7\u522b\uff0c\u6211\u4eec\u5c06\u6309\u987a\u5e8f\u628a\u6a21\u7cca\u540e\u7684\u7ed3\u679c\u5b58\u50a8\u5728\u9884\u6ee4\u6ce2\u8d34\u56fe\u7684 mipmap \u4e2d\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u6765\u4fdd\u5b58\u9884\u8fc7\u6ee4\u7684\u73af\u5883\u8d34\u56fe\u6570\u636e\u3002\u4e3a\u4e86\u786e\u4fdd\u4e3a\u5176 mip \u7ea7\u522b\u5206\u914d\u8db3\u591f\u7684\u5185\u5b58\uff0c\u4e00\u4e2a\u7b80\u5355\u65b9\u6cd5\u662f\u8c03\u7528 glGenerateMipmap \u3002 unsigned int prefilterMap; glGenTextures(1, &prefilterMap); glBindTexture(GL_TEXTURE_CUBE_MAP, prefilterMap); for (unsigned int i = 0; i < 6; ++i) { glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, GL_RGB16F, 128, 128, 0, GL_RGB, GL_FLOAT, nullptr); } glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_R, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MAG_FILTER, GL_LINEAR); glGenerateMipmap(GL_TEXTURE_CUBE_MAP); \u6ce8\u610f\uff0c\u56e0\u4e3a\u6211\u4eec\u8ba1\u5212\u91c7\u6837 prefilterMap \u7684 mipmap\uff0c\u6240\u4ee5\u9700\u8981\u786e\u4fdd\u5c06\u5176\u7f29\u5c0f\u8fc7\u6ee4\u5668\u8bbe\u7f6e\u4e3a GL_LINEAR_MIPMAP_LINEAR \u4ee5\u542f\u7528\u4e09\u7ebf\u6027\u8fc7\u6ee4\u3002\u5b83\u5b58\u50a8\u7684\u662f\u9884\u6ee4\u6ce2\u7684\u955c\u9762\u53cd\u5c04\uff0c\u57fa\u7840 mip \u7ea7\u522b\u7684\u5206\u8fa8\u7387\u662f\u6bcf\u9762 128\u00d7128\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u53cd\u5c04\u6765\u8bf4\u53ef\u80fd\u5df2\u7ecf\u8db3\u591f\u4e86\uff0c\u4f46\u5982\u679c\u573a\u666f\u91cc\u6709\u5927\u91cf\u5149\u6ed1\u6750\u6599\uff08\u60f3\u60f3\u6c7d\u8f66\u4e0a\u7684\u53cd\u5c04\uff09\uff0c\u53ef\u80fd\u9700\u8981\u63d0\u9ad8\u5206\u8fa8\u7387\u3002 \u5728\u4e0a\u4e00\u8282\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u7403\u9762\u5750\u6807\u751f\u6210\u5747\u5300\u5206\u5e03\u5728\u534a\u7403 \\Omega \u4e0a\u7684\u91c7\u6837\u5411\u91cf\uff0c\u4ee5\u5bf9\u73af\u5883\u8d34\u56fe\u8fdb\u884c\u5377\u79ef\u3002\u867d\u7136\u8fd9\u4e2a\u65b9\u6cd5\u975e\u5e38\u9002\u7528\u4e8e\u8f90\u7167\u5ea6\uff0c\u4f46\u5bf9\u4e8e\u955c\u9762\u53cd\u5c04\u6548\u679c\u8f83\u5dee\u3002\u955c\u9762\u53cd\u5c04\u4f9d\u8d56\u4e8e\u8868\u9762\u7684\u7c97\u7cd9\u5ea6\uff0c\u53cd\u5c04\u5149\u7ebf\u53ef\u80fd\u6bd4\u8f83\u677e\u6563\uff0c\u4e5f\u53ef\u80fd\u6bd4\u8f83\u7d27\u5bc6\uff0c\u4f46\u662f\u4e00\u5b9a\u4f1a\u56f4\u7ed5\u7740\u53cd\u5c04\u5411\u91cf r \uff0c\u9664\u975e\u8868\u9762\u6781\u5ea6\u7c97\u7cd9\uff1a \u6240\u6709\u53ef\u80fd\u51fa\u5c04\u7684\u53cd\u5c04\u5149\u6784\u6210\u7684\u5f62\u72b6\u79f0\u4e3a \u955c\u9762\u6ce2\u74e3 \u3002\u968f\u7740\u7c97\u7cd9\u5ea6\u7684\u589e\u52a0\uff0c\u955c\u9762\u6ce2\u74e3\u7684\u5927\u5c0f\u589e\u52a0\uff1b\u968f\u7740\u5165\u5c04\u5149\u65b9\u5411\u4e0d\u540c\uff0c\u5f62\u72b6\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u56e0\u6b64\uff0c\u955c\u9762\u6ce2\u74e3\u7684\u5f62\u72b6\u9ad8\u5ea6\u4f9d\u8d56\u4e8e\u6750\u8d28\u3002 \u5728\u5fae\u8868\u9762\u6a21\u578b\u91cc\u7ed9\u5b9a\u5165\u5c04\u5149\u65b9\u5411\uff0c\u5219\u955c\u9762\u6ce2\u74e3\u6307\u5411\u5fae\u5e73\u9762\u7684\u534a\u5411\u91cf\u7684\u53cd\u5c04\u65b9\u5411\u3002\u8003\u8651\u5230\u5927\u591a\u6570\u5149\u7ebf\u6700\u7ec8\u4f1a\u53cd\u5c04\u5230\u4e00\u4e2a\u57fa\u4e8e\u534a\u5411\u91cf\u7684\u955c\u9762\u6ce2\u74e3\u5185\uff0c\u91c7\u6837\u65f6\u4ee5\u7c7b\u4f3c\u7684\u65b9\u5f0f\u9009\u53d6\u91c7\u6837\u5411\u91cf\u662f\u6709\u610f\u4e49\u7684\uff0c\u56e0\u4e3a\u5927\u90e8\u5206\u5176\u4f59\u7684\u5411\u91cf\u90fd\u88ab\u6d6a\u8d39\u6389\u4e86\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a \u91cd\u8981\u6027\u91c7\u6837 \u3002 \u8499\u7279\u5361\u6d1b\u79ef\u5206\u548c\u91cd\u8981\u6027\u91c7\u6837 \u4e3a\u4e86\u5145\u5206\u7406\u89e3\u91cd\u8981\u6027\u91c7\u6837\uff0c\u6211\u4eec\u9996\u5148\u8981\u4e86\u89e3\u4e00\u79cd\u6570\u5b66\u7ed3\u6784\uff0c\u79f0\u4e3a \u8499\u7279\u5361\u6d1b\u79ef\u5206 \u3002\u8499\u7279\u5361\u6d1b\u79ef\u5206\u4e3b\u8981\u662f\u7edf\u8ba1\u548c\u6982\u7387\u7406\u8bba\u7684\u7ec4\u5408\u3002\u8499\u7279\u5361\u6d1b\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u79bb\u6563\u5730\u89e3\u51b3\u4eba\u53e3\u7edf\u8ba1\u95ee\u9898\uff0c\u800c\u4e0d\u5fc5\u8003\u8651 \u6240\u6709 \u4eba\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u60a8\u60f3\u8981\u8ba1\u7b97\u4e00\u4e2a\u56fd\u5bb6\u6240\u6709\u516c\u6c11\u7684\u5e73\u5747\u8eab\u9ad8\u3002\u4e3a\u4e86\u5f97\u5230\u7ed3\u679c\uff0c\u4f60\u53ef\u4ee5\u6d4b\u91cf \u6bcf\u4e2a \u516c\u6c11\u5e76\u5bf9\u4ed6\u4eec\u7684\u8eab\u9ad8\u6c42\u5e73\u5747\uff0c\u8fd9\u6837\u4f1a\u5f97\u5230\u4f60\u9700\u8981\u7684 \u786e\u5207 \u7b54\u6848\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u5927\u591a\u6570\u56fd\u5bb6\u4eba\u6d77\u832b\u832b\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u73b0\u5b9e\uff1a\u9700\u8981\u82b1\u8d39\u592a\u591a\u7cbe\u529b\u548c\u65f6\u95f4\u3002 \u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u9009\u62e9\u4e00\u4e2a\u5c0f\u5f97\u591a\u7684 \u5b8c\u5168\u968f\u673a \uff08\u65e0\u504f\uff09\u7684\u4eba\u53e3\u5b50\u96c6\uff0c\u6d4b\u91cf\u4ed6\u4eec\u7684\u8eab\u9ad8\u5e76\u5bf9\u7ed3\u679c\u6c42\u5e73\u5747\u3002\u53ef\u80fd\u53ea\u6d4b\u91cf 100 \u4eba\uff0c\u867d\u7136\u7b54\u6848\u5e76\u975e\u7edd\u5bf9\u7cbe\u786e\uff0c\u4f46\u4f1a\u5f97\u5230\u4e00\u4e2a\u76f8\u5bf9\u63a5\u8fd1\u771f\u76f8\u7684\u7b54\u6848\uff0c\u8fd9\u4e2a\u7406\u8bba\u88ab\u79f0\u4f5c \u5927\u6570\u5b9a\u5f8b \u3002\u6211\u4eec\u7684\u60f3\u6cd5\u662f\uff0c\u5982\u679c\u4ece\u603b\u4eba\u53e3\u4e2d\u6d4b\u91cf\u4e00\u7ec4\u8f83\u5c0f\u7684\u771f\u6b63\u968f\u673a\u6837\u672c\u7684 N \uff0c\u7ed3\u679c\u5c06\u76f8\u5bf9\u63a5\u8fd1\u771f\u5b9e\u7b54\u6848\uff0c\u5e76\u968f\u7740\u6837\u672c\u6570 N \u7684\u589e\u52a0\u800c\u6108\u52a0\u63a5\u8fd1\u3002 \u8499\u7279\u5361\u7f57\u79ef\u5206\u5efa\u7acb\u5728\u5927\u6570\u5b9a\u5f8b\u7684\u57fa\u7840\u4e0a\uff0c\u5e76\u91c7\u7528\u76f8\u540c\u7684\u65b9\u6cd5\u6765\u6c42\u89e3\u79ef\u5206\u3002\u4e0d\u4e3a\u6240\u6709\u53ef\u80fd\u7684\uff08\u7406\u8bba\u4e0a\u662f\u65e0\u9650\u7684\uff09\u6837\u672c\u503c x \u6c42\u89e3\u79ef\u5206\uff0c\u800c\u662f\u7b80\u5355\u5730\u4ece\u603b\u4f53\u4e2d\u968f\u673a\u6311\u9009\u6837\u672c N \u751f\u6210\u91c7\u6837\u503c\u5e76\u6c42\u5e73\u5747\u3002\u968f\u7740 N \u7684\u589e\u52a0\uff0c\u6211\u4eec\u7684\u7ed3\u679c\u4f1a\u8d8a\u6765\u8d8a\u63a5\u8fd1\u79ef\u5206\u7684\u7cbe\u786e\u7ed3\u679c\uff1a O = \\int\\limits_{a}^{b} f(x) dx = \\frac{1}{N} \\sum_{i=0}^{N-1} \\frac{f(x)}{pdf(x)} \u4e3a\u4e86\u6c42\u89e3\u8fd9\u4e2a\u79ef\u5206\uff0c\u6211\u4eec\u5728 a \u5230 b \u4e0a\u91c7\u6837 N \u4e2a\u968f\u673a\u6837\u672c\uff0c\u5c06\u5b83\u4eec\u52a0\u5728\u4e00\u8d77\u5e76\u9664\u4ee5\u6837\u672c\u603b\u6570\u6765\u53d6\u5e73\u5747\u3002 pdf \u4ee3\u8868 \u6982\u7387\u5bc6\u5ea6\u51fd\u6570 (probability density function)\uff0c\u5b83\u7684\u542b\u4e49\u662f\u7279\u5b9a\u6837\u672c\u5728\u6574\u4e2a\u6837\u672c\u96c6\u4e0a\u53d1\u751f\u7684\u6982\u7387\u3002\u4f8b\u5982\uff0c\u4eba\u53e3\u8eab\u9ad8\u7684 pdf \u770b\u8d77\u6765\u5e94\u8be5\u50cf\u8fd9\u6837\uff1a \u4ece\u8be5\u56fe\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u5982\u679c\u6211\u4eec\u5bf9\u4eba\u53e3\u4efb\u610f\u968f\u673a\u91c7\u6837\uff0c\u90a3\u4e48\u6311\u9009\u8eab\u9ad8\u4e3a 1.70 \u7684\u4eba\u53e3\u6837\u672c\u7684\u53ef\u80fd\u6027\u66f4\u9ad8\uff0c\u800c\u6837\u672c\u8eab\u9ad8\u4e3a 1.50 \u7684\u6982\u7387\u8f83\u4f4e\u3002 \u5f53\u6d89\u53ca\u8499\u7279\u5361\u6d1b\u79ef\u5206\u65f6\uff0c\u67d0\u4e9b\u6837\u672c\u53ef\u80fd\u6bd4\u5176\u4ed6\u6837\u672c\u5177\u6709\u66f4\u9ad8\u7684\u751f\u6210\u6982\u7387\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5bf9\u4e8e\u4efb\u4f55\u4e00\u822c\u7684\u8499\u7279\u5361\u6d1b\u4f30\u8ba1\uff0c\u6211\u4eec\u90fd\u4f1a\u6839\u636e pdf \u5c06\u91c7\u6837\u503c\u9664\u4ee5\u6216\u4e58\u4ee5\u91c7\u6837\u6982\u7387\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u6bcf\u6b21\u9700\u8981\u4f30\u7b97\u79ef\u5206\u7684\u65f6\u5019\uff0c\u751f\u6210\u7684\u6837\u672c\u90fd\u662f\u5747\u5300\u5206\u5e03\u7684\uff0c\u6982\u7387\u5b8c\u5168\u76f8\u7b49\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u7684\u4f30\u8ba1\u662f \u65e0\u504f \u7684\uff0c\u8fd9\u610f\u5473\u7740\u968f\u7740\u6837\u672c\u6570\u91cf\u7684\u4e0d\u65ad\u589e\u52a0\uff0c\u6211\u4eec\u6700\u7ec8\u5c06 \u6536\u655b \u5230\u79ef\u5206\u7684 \u7cbe\u786e \u89e3\u3002 \u4f46\u662f\uff0c\u67d0\u4e9b\u8499\u7279\u5361\u6d1b\u4f30\u7b97\u662f \u6709\u504f \u7684\uff0c\u8fd9\u610f\u5473\u7740\u751f\u6210\u7684\u6837\u672c\u5e76\u4e0d\u662f\u5b8c\u5168\u968f\u673a\u7684\uff0c\u800c\u662f\u96c6\u4e2d\u4e8e\u7279\u5b9a\u7684\u503c\u6216\u65b9\u5411\u3002\u8fd9\u4e9b\u6709\u504f\u7684\u8499\u7279\u5361\u6d1b\u4f30\u7b97\u5177\u6709 \u66f4\u5feb\u7684\u6536\u655b\u901f\u5ea6 \uff0c\u5b83\u4eec\u4f1a\u4ee5\u66f4\u5feb\u7684\u901f\u5ea6\u6536\u655b\u5230\u7cbe\u786e\u89e3\uff0c\u4f46\u662f\u7531\u4e8e\u5176\u6709\u504f\u6027\uff0c\u53ef\u80fd\u6c38\u8fdc\u4e0d\u4f1a\u6536\u655b\u5230\u7cbe\u786e\u89e3\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u53ef\u4ee5\u63a5\u53d7\u7684\u6298\u8877\u65b9\u6848\uff0c\u5c24\u5176\u662f\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d\u3002\u56e0\u4e3a\u53ea\u8981\u7ed3\u679c\u5728\u89c6\u89c9\u4e0a\u53ef\u4ee5\u63a5\u53d7\uff0c\u89e3\u51b3\u65b9\u6848\u7684\u7cbe\u786e\u6027\u5c31\u4e0d\u592a\u91cd\u8981\u3002\u4e0b\u6587\u6211\u4eec\u5c06\u4f1a\u63d0\u5230\u4e00\u79cd\uff08\u6709\u504f\u7684\uff09\u91cd\u8981\u6027\u91c7\u6837\uff0c\u5176\u751f\u6210\u7684\u6837\u672c\u504f\u5411\u7279\u5b9a\u7684\u65b9\u5411\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u5c06\u6bcf\u4e2a\u6837\u672c\u4e58\u4ee5\u6216\u9664\u4ee5\u76f8\u5e94\u7684 pdf \u518d\u6c42\u548c\u3002 \u8499\u7279\u5361\u6d1b\u79ef\u5206\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d\u975e\u5e38\u666e\u904d\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u79cd\u4ee5\u9ad8\u6548\u7684\u79bb\u6563\u65b9\u5f0f\u5bf9\u8fde\u7eed\u7684\u79ef\u5206\u6c42\u8fd1\u4f3c\u800c\u4e14\u975e\u5e38\u76f4\u89c2\u7684\u65b9\u6cd5\uff1a\u5bf9\u4efb\u4f55\u9762\u79ef/\u4f53\u79ef\u8fdb\u884c\u91c7\u6837\u2014\u2014\u4f8b\u5982\u534a\u7403 \\Omega \u2014\u2014\u5728\u8be5\u9762\u79ef/\u4f53\u79ef\u5185\u751f\u6210\u6570\u91cf N \u7684\u968f\u673a\u91c7\u6837\uff0c\u6743\u8861\u6bcf\u4e2a\u6837\u672c\u5bf9\u6700\u7ec8\u7ed3\u679c\u7684\u8d21\u732e\u5e76\u6c42\u548c\u3002 \u8499\u7279\u5361\u6d1b\u79ef\u5206\u662f\u4e00\u4e2a\u5e9e\u5927\u7684\u6570\u5b66\u4e3b\u9898\uff0c\u5728\u6b64\u4e0d\u518d\u8d58\u8ff0\uff0c\u4f46\u6709\u4e00\u70b9\u9700\u8981\u63d0\u5230\uff1a\u751f\u6210\u968f\u673a\u6837\u672c\u7684\u65b9\u6cd5\u4e5f\u591a\u79cd\u591a\u6837\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6bcf\u6b21\u91c7\u6837\u90fd\u662f\u6211\u4eec\u719f\u6089\u7684\u5b8c\u5168\uff08\u4f2a\uff09\u968f\u673a\uff0c\u4e0d\u8fc7\u5229\u7528\u534a\u968f\u673a\u5e8f\u5217\u7684\u67d0\u4e9b\u5c5e\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u751f\u6210\u867d\u7136\u662f\u968f\u673a\u6837\u672c\u4f46\u5177\u6709\u4e00\u4e9b\u6709\u8da3\u6027\u8d28\u7684\u6837\u672c\u5411\u91cf\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e00\u79cd\u540d\u4e3a \u4f4e\u5dee\u5f02\u5e8f\u5217 \u7684\u4e1c\u897f\u8fdb\u884c\u8499\u7279\u5361\u6d1b\u79ef\u5206\uff0c\u8be5\u5e8f\u5217\u751f\u6210\u7684\u4ecd\u7136\u662f\u968f\u673a\u6837\u672c\uff0c\u4f46\u6837\u672c\u5206\u5e03\u66f4\u5747\u5300\uff1a \u5f53\u4f7f\u7528\u4f4e\u5dee\u5f02\u5e8f\u5217\u751f\u6210\u8499\u7279\u5361\u6d1b\u6837\u672c\u5411\u91cf\u65f6\uff0c\u8be5\u8fc7\u7a0b\u79f0\u4e3a \u62df\u8499\u7279\u5361\u6d1b\u79ef\u5206 \u3002\u62df\u8499\u7279\u5361\u6d1b\u65b9\u6cd5\u5177\u6709\u66f4\u5feb\u7684 \u6536\u655b\u901f\u5ea6 \uff0c\u8fd9\u4f7f\u5f97\u5b83\u5bf9\u4e8e\u6027\u80fd\u7e41\u91cd\u7684\u5e94\u7528\u5f88\u6709\u7528\u3002 \u9274\u4e8e\u6211\u4eec\u65b0\u83b7\u5f97\u7684\u6709\u5173\u8499\u7279\u5361\u6d1b\uff08Monte Carlo\uff09\u548c\u62df\u8499\u7279\u5361\u6d1b\uff08Quasi-Monte Carlo\uff09\u79ef\u5206\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6709\u8da3\u7684\u5c5e\u6027\u6765\u83b7\u5f97\u66f4\u5feb\u7684\u6536\u655b\u901f\u5ea6\uff0c\u8fd9\u5c31\u662f \u91cd\u8981\u6027\u91c7\u6837 \u3002\u6211\u4eec\u5728\u524d\u6587\u5df2\u7ecf\u63d0\u5230\u8fc7\u5b83\uff0c\u4f46\u662f\u5728\u955c\u9762\u53cd\u5c04\u7684\u60c5\u51b5\u4e0b\uff0c\u53cd\u5c04\u7684\u5149\u5411\u91cf\u88ab\u9650\u5236\u5728\u955c\u9762\u6ce2\u74e3\u4e2d\uff0c\u6ce2\u74e3\u7684\u5927\u5c0f\u53d6\u51b3\u4e8e\u8868\u9762\u7684\u7c97\u7cd9\u5ea6\u3002\u65e2\u7136\u955c\u9762\u6ce2\u74e3\u5916\u7684\u4efb\u4f55\uff08\u62df\uff09\u968f\u673a\u751f\u6210\u7684\u6837\u672c\u4e0e\u955c\u9762\u79ef\u5206\u65e0\u5173\uff0c\u56e0\u6b64\u5c06\u6837\u672c\u96c6\u4e2d\u5728\u955c\u9762\u6ce2\u74e3\u5185\u751f\u6210\u662f\u6709\u610f\u4e49\u7684\uff0c\u4f46\u4ee3\u4ef7\u662f\u8499\u7279\u5361\u6d1b\u4f30\u7b97\u4f1a\u4ea7\u751f\u504f\u5dee\u3002 \u672c\u8d28\u4e0a\u6765\u8bf4\uff0c\u8fd9\u5c31\u662f\u91cd\u8981\u6027\u91c7\u6837\u7684\u6838\u5fc3\uff1a\u53ea\u5728\u67d0\u4e9b\u533a\u57df\u751f\u6210\u91c7\u6837\u5411\u91cf\uff0c\u8be5\u533a\u57df\u56f4\u7ed5\u5fae\u8868\u9762\u534a\u5411\u91cf\uff0c\u53d7\u7c97\u7cd9\u5ea6\u9650\u5236\u3002\u901a\u8fc7\u5c06\u62df\u8499\u7279\u5361\u6d1b\u91c7\u6837\u4e0e\u4f4e\u5dee\u5f02\u5e8f\u5217\u76f8\u7ed3\u5408\uff0c\u5e76\u4f7f\u7528\u91cd\u8981\u6027\u91c7\u6837\u504f\u7f6e\u6837\u672c\u5411\u91cf\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u5f88\u9ad8\u7684\u6536\u655b\u901f\u5ea6\u3002\u56e0\u4e3a\u6211\u4eec\u6c42\u89e3\u7684\u901f\u5ea6\u66f4\u5feb\uff0c\u6240\u4ee5\u8981\u8fbe\u5230\u8db3\u591f\u7684\u8fd1\u4f3c\u5ea6\uff0c\u6211\u4eec\u6240\u9700\u8981\u7684\u6837\u672c\u66f4\u5c11\u3002\u56e0\u6b64\uff0c\u8fd9\u5957\u7ec4\u5408\u65b9\u6cd5\u751a\u81f3\u53ef\u4ee5\u5141\u8bb8\u56fe\u5f62\u5e94\u7528\u7a0b\u5e8f\u5b9e\u65f6\u6c42\u89e3\u955c\u9762\u79ef\u5206\uff0c\u867d\u7136\u6bd4\u9884\u8ba1\u7b97\u7ed3\u679c\u8fd8\u662f\u8981\u6162\u5f97\u591a\u3002 \u4f4e\u5dee\u5f02\u5e8f\u5217 \u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u91cd\u8981\u6027\u91c7\u6837\u6765\u9884\u8ba1\u7b97\u95f4\u63a5\u53cd\u5c04\u65b9\u7a0b\u7684\u955c\u9762\u53cd\u5c04\u90e8\u5206\uff0c\u8be5\u91c7\u6837\u57fa\u4e8e\u62df\u8499\u7279\u5361\u6d1b\u65b9\u6cd5\u7ed9\u51fa\u4e86\u968f\u673a\u7684\u4f4e\u5dee\u5f02\u5e8f\u5217\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u7684\u5e8f\u5217\u88ab\u79f0\u4e3a Hammersley \u5e8f\u5217 \uff0c Holger Dammertz \u66fe\u4ed4\u7ec6\u63cf\u8ff0\u8fc7\u5b83\u3002Hammersley \u5e8f\u5217\u662f\u57fa\u4e8e Van Der Corput \u5e8f\u5217 \uff0c\u8be5\u5e8f\u5217\u662f\u628a\u5341\u8fdb\u5236\u6570\u5b57\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u955c\u50cf\u7ffb\u8f6c\u5230\u5c0f\u6570\u70b9\u53f3\u8fb9\u800c\u5f97\u3002\uff08\u8bd1\u6ce8\uff1a\u539f\u6587\u4e3a Van Der Corpus \u7591\u4f3c\u7b14\u8bef\uff0c\u4e0b\u6587\u5404\u5904\u540c\uff09 \u7ed9\u51fa\u4e00\u4e9b\u5de7\u5999\u7684\u6280\u5de7\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7740\u8272\u5668\u7a0b\u5e8f\u4e2d\u975e\u5e38\u6709\u6548\u5730\u751f\u6210 Van Der Corput \u5e8f\u5217\uff0c\u6211\u4eec\u5c06\u7528\u5b83\u6765\u83b7\u5f97 Hammersley \u5e8f\u5217\uff0c\u8bbe\u603b\u6837\u672c\u6570\u4e3a N \uff0c\u6837\u672c\u7d22\u5f15\u4e3a i \uff1a float RadicalInverse_VdC(uint bits) { bits = (bits << 16u) | (bits >> 16u); bits = ((bits & 0x55555555u) << 1u) | ((bits & 0xAAAAAAAAu) >> 1u); bits = ((bits & 0x33333333u) << 2u) | ((bits & 0xCCCCCCCCu) >> 2u); bits = ((bits & 0x0F0F0F0Fu) << 4u) | ((bits & 0xF0F0F0F0u) >> 4u); bits = ((bits & 0x00FF00FFu) << 8u) | ((bits & 0xFF00FF00u) >> 8u); return float(bits) * 2.3283064365386963e-10; // / 0x100000000 } // ---------------------------------------------------------------------------- vec2 Hammersley(uint i, uint N) { return vec2(float(i)/float(N), RadicalInverse_VdC(i)); } GLSL \u7684 Hammersley \u51fd\u6570\u53ef\u4ee5\u83b7\u53d6\u5927\u5c0f\u4e3a N \u7684\u6837\u672c\u96c6\u4e2d\u7684\u4f4e\u5dee\u5f02\u6837\u672c i \u3002 Important \u65e0\u9700\u4f4d\u8fd0\u7b97\u7684 Hammersley \u5e8f\u5217 \u5e76\u975e\u6240\u6709 OpenGL \u76f8\u5173\u9a71\u52a8\u7a0b\u5e8f\u90fd\u652f\u6301\u4f4d\u8fd0\u7b97\u7b26\uff08\u4f8b\u5982WebGL\u548cOpenGL ES 2.0\uff09\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u4e0d\u4f9d\u8d56\u4f4d\u8fd0\u7b97\u7b26\u7684\u66ff\u4ee3\u7248\u672c Van Der Corput \u5e8f\u5217\uff1a float VanDerCorpus(uint n, uint base) { float invBase = 1.0 / float(base); float denom = 1.0; float result = 0.0; for(uint i = 0u; i < 32u; ++i) { if(n > 0u) { denom = mod(float(n), 2.0); result += denom * invBase; invBase = invBase / 2.0; n = uint(float(n) / 2.0); } } return result; } // ---------------------------------------------------------------------------- vec2 HammersleyNoBitOps(uint i, uint N) { return vec2(float(i)/float(N), VanDerCorpus(i, 2u)); } \u8bf7\u6ce8\u610f\uff0c\u7531\u4e8e\u65e7\u786c\u4ef6\u4e2d\u7684 GLSL \u5faa\u73af\u9650\u5236\uff0c\u8be5\u5e8f\u5217\u5faa\u73af\u904d\u5386\u4e86\u6240\u6709\u53ef\u80fd\u7684 32 \u4f4d\uff0c\u6027\u80fd\u7565\u5dee\u3002\u4f46\u662f\u5982\u679c\u4f60\u6ca1\u6709\u4f4d\u8fd0\u7b97\u7b26\u53ef\u7528\u7684\u8bdd\u53ef\u4ee5\u8003\u8651\u5b83\uff0c\u5b83\u53ef\u4ee5\u5728\u6240\u6709\u786c\u4ef6\u4e0a\u8fd0\u884c\u3002 GGX \u91cd\u8981\u6027\u91c7\u6837 \u6709\u522b\u4e8e\u5747\u5300\u6216\u7eaf\u968f\u673a\u5730\uff08\u6bd4\u5982\u8499\u7279\u5361\u6d1b\uff09\u5728\u79ef\u5206\u534a\u7403 \\Omega \u4ea7\u751f\u91c7\u6837\u5411\u91cf\uff0c\u6211\u4eec\u7684\u91c7\u6837\u4f1a\u6839\u636e\u7c97\u7cd9\u5ea6\uff0c\u504f\u5411\u5fae\u8868\u9762\u7684\u534a\u5411\u91cf\u7684\u5b8f\u89c2\u53cd\u5c04\u65b9\u5411\u3002\u91c7\u6837\u8fc7\u7a0b\u5c06\u4e0e\u6211\u4eec\u4e4b\u524d\u770b\u5230\u7684\u8fc7\u7a0b\u76f8\u4f3c\uff1a\u5f00\u59cb\u4e00\u4e2a\u5927\u5faa\u73af\uff0c\u751f\u6210\u4e00\u4e2a\u968f\u673a\uff08\u4f4e\u5dee\u5f02\uff09\u5e8f\u5217\u503c\uff0c\u7528\u8be5\u5e8f\u5217\u503c\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\u751f\u6210\u6837\u672c\u5411\u91cf\uff0c\u5c06\u6837\u672c\u5411\u91cf\u53d8\u6362\u5230\u4e16\u754c\u7a7a\u95f4\u5e76\u5bf9\u573a\u666f\u7684\u8f90\u5c04\u5ea6\u91c7\u6837\u3002\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u6211\u4eec\u73b0\u5728\u4f7f\u7528\u4f4e\u5dee\u5f02\u5e8f\u5217\u503c\u4f5c\u4e3a\u8f93\u5165\u6765\u751f\u6210\u91c7\u6837\u5411\u91cf\uff1a const uint SAMPLE_COUNT = 4096u; for(uint i = 0u; i < SAMPLE_COUNT; ++i) { vec2 Xi = Hammersley(i, SAMPLE_COUNT); } \u6b64\u5916\uff0c\u8981\u6784\u5efa\u91c7\u6837\u5411\u91cf\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u65b9\u6cd5\u5b9a\u5411\u548c\u504f\u79fb\u91c7\u6837\u5411\u91cf\uff0c\u4ee5\u4f7f\u5176\u671d\u5411\u7279\u5b9a\u7c97\u7cd9\u5ea6\u7684\u955c\u9762\u6ce2\u74e3\u65b9\u5411\u3002\u6211\u4eec\u53ef\u4ee5\u5982\u7406\u8bba\u6559\u7a0b\u4e2d\u6240\u8ff0\u4f7f\u7528 NDF\uff0c\u5e76\u5c06 GGX NDF \u7ed3\u5408\u5230 Epic Games \u6240\u8ff0\u7684\u7403\u5f62\u91c7\u6837\u5411\u91cf\u7684\u5904\u7406\u4e2d\uff1a vec3 ImportanceSampleGGX(vec2 Xi, vec3 N, float roughness) { float a = roughness*roughness; float phi = 2.0 * PI * Xi.x; float cosTheta = sqrt((1.0 - Xi.y) / (1.0 + (a*a - 1.0) * Xi.y)); float sinTheta = sqrt(1.0 - cosTheta*cosTheta); // from spherical coordinates to cartesian coordinates vec3 H; H.x = cos(phi) * sinTheta; H.y = sin(phi) * sinTheta; H.z = cosTheta; // from tangent-space vector to world-space sample vector vec3 up = abs(N.z) < 0.999 ? vec3(0.0, 0.0, 1.0) : vec3(1.0, 0.0, 0.0); vec3 tangent = normalize(cross(up, N)); vec3 bitangent = cross(N, tangent); vec3 sampleVec = tangent * H.x + bitangent * H.y + N * H.z; return normalize(sampleVec); } \u57fa\u4e8e\u7279\u5b9a\u7684\u7c97\u7cd9\u5ea6\u8f93\u5165\u548c\u4f4e\u5dee\u5f02\u5e8f\u5217\u503c Xi \uff0c\u6211\u4eec\u83b7\u5f97\u4e86\u4e00\u4e2a\u91c7\u6837\u5411\u91cf\uff0c\u8be5\u5411\u91cf\u5927\u4f53\u56f4\u7ed5\u7740\u9884\u4f30\u7684\u5fae\u8868\u9762\u7684\u534a\u5411\u91cf\u3002\u6ce8\u610f\uff0c\u6839\u636e\u8fea\u58eb\u5c3c\u5bf9 PBR \u7684\u7814\u7a76\uff0cEpic Games \u4f7f\u7528\u4e86\u5e73\u65b9\u7c97\u7cd9\u5ea6\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u89c6\u89c9\u6548\u679c\u3002 \u4f7f\u7528\u4f4e\u5dee\u5f02 Hammersley \u5e8f\u5217\u548c\u4e0a\u8ff0\u5b9a\u4e49\u7684\u6837\u672c\u751f\u6210\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u6700\u7ec8\u5b8c\u6210\u9884\u6ee4\u6ce2\u5668\u5377\u79ef\u7740\u8272\u5668\uff1a #version 330 core out vec4 FragColor; in vec3 localPos; uniform samplerCube environmentMap; uniform float roughness; const float PI = 3.14159265359; float RadicalInverse_VdC(uint bits); vec2 Hammersley(uint i, uint N); vec3 ImportanceSampleGGX(vec2 Xi, vec3 N, float roughness); void main() { vec3 N = normalize(localPos); vec3 R = N; vec3 V = R; const uint SAMPLE_COUNT = 1024u; float totalWeight = 0.0; vec3 prefilteredColor = vec3(0.0); for(uint i = 0u; i < SAMPLE_COUNT; ++i) { vec2 Xi = Hammersley(i, SAMPLE_COUNT); vec3 H = ImportanceSampleGGX(Xi, N, roughness); vec3 L = normalize(2.0 * dot(V, H) * H - V); float NdotL = max(dot(N, L), 0.0); if(NdotL > 0.0) { prefilteredColor += texture(environmentMap, L).rgb * NdotL; totalWeight += NdotL; } } prefilteredColor = prefilteredColor / totalWeight; FragColor = vec4(prefilteredColor, 1.0); } \u8f93\u5165\u7684\u7c97\u7cd9\u5ea6\u968f\u7740\u9884\u8fc7\u6ee4\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u7684 mipmap \u7ea7\u522b\u53d8\u5316\uff08\u4ece0.0\u52301.0\uff09\uff0c\u6211\u4eec\u6839\u636e\u636e\u7c97\u7cd9\u5ea6\u9884\u8fc7\u6ee4\u73af\u5883\u8d34\u56fe\uff0c\u628a\u7ed3\u679c\u5b58\u5728 prefilteredColor \u91cc\u3002\u518d\u7528 prefilteredColor \u9664\u4ee5\u91c7\u6837\u6743\u91cd\u603b\u548c\uff0c\u5176\u4e2d\u5bf9\u6700\u7ec8\u7ed3\u679c\u5f71\u54cd\u8f83\u5c0f\uff08 NdotL \u8f83\u5c0f\uff09\u7684\u91c7\u6837\u6700\u7ec8\u6743\u91cd\u4e5f\u8f83\u5c0f\u3002 \u6355\u83b7\u9884\u8fc7\u6ee4 mipmap \u7ea7\u522b \u5269\u4e0b\u8981\u505a\u7684\u5c31\u662f\u8ba9 OpenGL \u5728\u591a\u4e2a mipmap \u7ea7\u522b\u4e0a\u4ee5\u4e0d\u540c\u7684\u7c97\u7cd9\u5ea6\u503c\u9884\u8fc7\u6ee4\u73af\u5883\u8d34\u56fe\u3002\u6709\u4e86\u6700\u5f00\u59cb\u7684\u8f90\u7167\u5ea6\u6559\u7a0b\u4f5c\u4e3a\u57fa\u7840\uff0c\u5b9e\u9645\u4e0a\u5f88\u7b80\u5355\uff1a prefilterShader.use(); prefilterShader.setInt(\"environmentMap\", 0); prefilterShader.setMat4(\"projection\", captureProjection); glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_CUBE_MAP, envCubemap); glBindFramebuffer(GL_FRAMEBUFFER, captureFBO); unsigned int maxMipLevels = 5; for (unsigned int mip = 0; mip < maxMipLevels; ++mip) { // reisze framebuffer according to mip-level size. unsigned int mipWidth = 128 * std::pow(0.5, mip); unsigned int mipHeight = 128 * std::pow(0.5, mip); glBindRenderbuffer(GL_RENDERBUFFER, captureRBO); glRenderbufferStorage(GL_RENDERBUFFER, GL_DEPTH_COMPONENT24, mipWidth, mipHeight); glViewport(0, 0, mipWidth, mipHeight); float roughness = (float)mip / (float)(maxMipLevels - 1); prefilterShader.setFloat(\"roughness\", roughness); for (unsigned int i = 0; i < 6; ++i) { prefilterShader.setMat4(\"view\", captureViews[i]); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_CUBE_MAP_POSITIVE_X + i, prefilterMap, mip); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); renderCube(); } } glBindFramebuffer(GL_FRAMEBUFFER, 0); \u8fd9\u4e2a\u8fc7\u7a0b\u7c7b\u4f3c\u4e8e\u8f90\u7167\u5ea6\u8d34\u56fe\u5377\u79ef\uff0c\u4f46\u662f\u8fd9\u6b21\u6211\u4eec\u5c06\u5e27\u7f13\u51b2\u533a\u7f29\u653e\u5230\u9002\u5f53\u7684 mipmap \u5c3a\u5bf8\uff0c mip \u7ea7\u522b\u6bcf\u589e\u52a0\u4e00\u7ea7\uff0c\u5c3a\u5bf8\u7f29\u5c0f\u4e3a\u4e00\u534a\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5728 glFramebufferTexture2D \u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u4e2d\u6307\u5b9a\u8981\u6e32\u67d3\u7684\u76ee\u6807 mip \u7ea7\u522b\uff0c\u7136\u540e\u5c06\u8981\u9884\u8fc7\u6ee4\u7684\u7c97\u7cd9\u5ea6\u4f20\u7ed9\u9884\u8fc7\u6ee4\u7740\u8272\u5668\u3002 \u8fd9\u6837\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u5f20\u7ecf\u8fc7\u9002\u5f53\u9884\u8fc7\u6ee4\u7684\u73af\u5883\u8d34\u56fe\uff0c\u8bbf\u95ee\u8be5\u8d34\u56fe\u65f6\u6307\u5b9a\u7684 mip \u7b49\u7ea7\u8d8a\u9ad8\uff0c\u83b7\u5f97\u7684\u53cd\u5c04\u5c31\u8d8a\u6a21\u7cca\u3002\u5982\u679c\u6211\u4eec\u5728\u5929\u7a7a\u76d2\u7740\u8272\u5668\u4e2d\u663e\u793a\u8fd9\u5f20\u9884\u8fc7\u6ee4\u7684\u73af\u5883\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u5e76\u5728\u5176\u7740\u8272\u5668\u4e2d\u5f3a\u5236\u5728\u5176\u7b2c\u4e00\u4e2a mip \u7ea7\u522b\u4ee5\u4e0a\u91c7\u6837\uff0c\u5982\u4e0b\u6240\u793a\uff1a vec3 envColor = textureLod(environmentMap, WorldPos, 1.2).rgb; \u6211\u4eec\u5f97\u5230\u7684\u7ed3\u679c\u770b\u8d77\u6765\u786e\u5b9e\u50cf\u539f\u59cb\u73af\u5883\u7684\u6a21\u7cca\u7248\u672c\uff1a \u5982\u679c HDR \u73af\u5883\u8d34\u56fe\u7684\u9884\u8fc7\u6ee4\u770b\u8d77\u6765\u5dee\u4e0d\u591a\u6ca1\u95ee\u9898\uff0c\u5c1d\u8bd5\u4e00\u4e0b\u4e0d\u540c\u7684 mipmap \u7ea7\u522b\uff0c\u89c2\u5bdf\u9884\u8fc7\u6ee4\u8d34\u56fe\u968f\u7740 mip \u7ea7\u522b\u589e\u52a0\uff0c\u53cd\u5c04\u9010\u6e10\u4ece\u9510\u5229\u53d8\u6a21\u7cca\u7684\u8fc7\u7a0b\u3002 \u9884\u8fc7\u6ee4\u5377\u79ef\u7684\u4f2a\u50cf \u5f53\u524d\u7684\u9884\u8fc7\u6ee4\u8d34\u56fe\u53ef\u4ee5\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u6b63\u5e38\u5de5\u4f5c\uff0c\u4e0d\u8fc7\u4f60\u8fdf\u65e9\u4f1a\u9047\u5230\u51e0\u4e2a\u4e0e\u9884\u8fc7\u6ee4\u5377\u79ef\u76f4\u63a5\u76f8\u5173\u7684\u6e32\u67d3\u95ee\u9898\u3002\u6211\u5c06\u5728\u8fd9\u91cc\u5217\u51fa\u6700\u5e38\u89c1\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u4ee5\u53ca\u5982\u4f55\u4fee\u590d\u5b83\u4eec\u3002 \u9ad8\u7c97\u7cd9\u5ea6\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u63a5\u7f1d \u5728\u5177\u6709\u7c97\u7cd9\u8868\u9762\u7684\u8868\u9762\u4e0a\u5bf9\u9884\u8fc7\u6ee4\u8d34\u56fe\u91c7\u6837\uff0c\u4e5f\u5c31\u7b49\u540c\u4e8e\u5728\u8f83\u4f4e\u7684 mip \u7ea7\u522b\u4e0a\u5bf9\u9884\u8fc7\u6ee4\u8d34\u56fe\u91c7\u6837\u3002\u5728\u5bf9\u7acb\u65b9\u4f53\u8d34\u56fe\u8fdb\u884c\u91c7\u6837\u65f6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cOpenGL\u4e0d\u4f1a\u5728\u7acb\u65b9\u4f53\u9762 \u4e4b\u95f4 \u8fdb\u884c\u7ebf\u6027\u63d2\u503c\u3002\u7531\u4e8e\u8f83\u4f4e\u7684 mip \u7ea7\u522b\u5177\u6709\u66f4\u4f4e\u7684\u5206\u8fa8\u7387\uff0c\u5e76\u4e14\u9884\u8fc7\u6ee4\u8d34\u56fe\u4ee3\u8868\u4e86\u4e0e\u66f4\u5927\u7684\u91c7\u6837\u6ce2\u74e3\u5377\u79ef\uff0c\u56e0\u6b64\u7f3a\u4e4f \u7acb\u65b9\u4f53\u7684\u9762\u548c\u9762\u4e4b\u95f4\u7684\u6ee4\u6ce2 \u7684\u95ee\u9898\u5c31\u66f4\u660e\u663e\uff1a \u5e78\u8fd0\u7684\u662f\uff0cOpenGL \u53ef\u4ee5\u542f\u7528 GL_TEXTURE_CUBE_MAP_SEAMLESS \uff0c\u4ee5\u4e3a\u6211\u4eec\u63d0\u4f9b\u5728\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u9762\u4e4b\u95f4\u8fdb\u884c\u6b63\u786e\u8fc7\u6ee4\u7684\u9009\u9879\uff1a glEnable(GL_TEXTURE_CUBE_MAP_SEAMLESS); \u9884\u8fc7\u6ee4\u5377\u79ef\u7684\u4eae\u70b9 \u7531\u4e8e\u955c\u9762\u53cd\u5c04\u4e2d\u5149\u5f3a\u5ea6\u7684\u53d8\u5316\u5927\uff0c\u9ad8\u9891\u7ec6\u8282\u591a\uff0c\u6240\u4ee5\u5bf9\u955c\u9762\u53cd\u5c04\u8fdb\u884c\u5377\u79ef\u9700\u8981\u5927\u91cf\u91c7\u6837\uff0c\u624d\u80fd\u6b63\u786e\u53cd\u6620 HDR \u73af\u5883\u53cd\u5c04\u7684\u6df7\u4e71\u53d8\u5316\u3002\u6211\u4eec\u5df2\u7ecf\u8fdb\u884c\u4e86\u5927\u91cf\u7684\u91c7\u6837\uff0c\u4f46\u662f\u5728\u67d0\u4e9b\u73af\u5883\u4e0b\uff0c\u5728\u67d0\u4e9b\u8f83\u7c97\u7cd9\u7684 mip \u7ea7\u522b\u4e0a\u53ef\u80fd\u4ecd\u7136\u4e0d\u591f\uff0c\u5bfc\u81f4\u660e\u4eae\u533a\u57df\u5468\u56f4\u51fa\u73b0\u70b9\u72b6\u56fe\u6848\uff1a \u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u8fdb\u4e00\u6b65\u589e\u52a0\u6837\u672c\u6570\u91cf\uff0c\u4f46\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u8fd8\u662f\u4e0d\u591f\u3002\u53e6\u4e00\u79cd\u65b9\u6848\u5982 Chetan Jags \u6240\u8ff0\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u9884\u8fc7\u6ee4\u5377\u79ef\u65f6\uff0c\u4e0d\u76f4\u63a5\u91c7\u6837\u73af\u5883\u8d34\u56fe\uff0c\u800c\u662f\u57fa\u4e8e\u79ef\u5206\u7684 PDF \u548c\u7c97\u7cd9\u5ea6\u91c7\u6837\u73af\u5883\u8d34\u56fe\u7684 mipmap \uff0c\u4ee5\u51cf\u5c11\u4f2a\u50cf\uff1a float D = DistributionGGX(NdotH, roughness); float pdf = (D * NdotH / (4.0 * HdotV)) + 0.0001; float resolution = 512.0; // resolution of source cubemap (per face) float saTexel = 4.0 * PI / (6.0 * resolution * resolution); float saSample = 1.0 / (float(SAMPLE_COUNT) * pdf + 0.0001); float mipLevel = roughness == 0.0 ? 0.0 : 0.5 * log2(saSample / saTexel); \u65e2\u7136\u8981\u91c7\u6837 mipmap \uff0c\u4e0d\u8981\u5fd8\u8bb0\u5728\u73af\u5883\u8d34\u56fe\u4e0a\u5f00\u542f\u4e09\u7ebf\u6027\u8fc7\u6ee4\uff1a glBindTexture(GL_TEXTURE_CUBE_MAP, envCubemap); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR); \u8bbe\u7f6e\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u57fa\u672c\u7eb9\u7406\u540e\uff0c\u8ba9 OpenGL \u751f\u6210 mipmap\uff1a // convert HDR equirectangular environment map to cubemap equivalent [...] // then generate mipmaps glBindTexture(GL_TEXTURE_CUBE_MAP, envCubemap); glGenerateMipmap(GL_TEXTURE_CUBE_MAP); \u8fd9\u4e2a\u65b9\u6cd5\u6548\u679c\u975e\u5e38\u597d\uff0c\u53ef\u4ee5\u53bb\u9664\u9884\u8fc7\u6ee4\u8d34\u56fe\u4e2d\u8f83\u7c97\u7cd9\u8868\u9762\u4e0a\u7684\u5927\u591a\u6570\u751a\u81f3\u5168\u90e8\u4eae\u70b9\u3002 \u9884\u8ba1\u7b97 BRDF \u9884\u8fc7\u6ee4\u7684\u73af\u5883\u8d34\u56fe\u5df2\u7ecf\u53ef\u4ee5\u8bbe\u7f6e\u5e76\u8fd0\u884c\uff0c\u6211\u4eec\u53ef\u4ee5\u96c6\u4e2d\u7cbe\u529b\u4e8e\u6c42\u548c\u8fd1\u4f3c\u7684\u7b2c\u4e8c\u90e8\u5206\uff1aBRDF\u3002\u8ba9\u6211\u4eec\u518d\u6b21\u7b80\u8981\u56de\u987e\u4e00\u4e0b\u955c\u9762\u90e8\u5206\u7684\u5206\u5272\u6c42\u548c\u8fd1\u4f3c\u6cd5\uff1a L_o(p,\\omega_o) = \\int\\limits_{\\Omega} L_i(p,\\omega_i) d\\omega_i * \\int\\limits_{\\Omega} f_r(p, \\omega_i, \\omega_o) n \\cdot \\omega_i d\\omega_i \u6211\u4eec\u5df2\u7ecf\u5728\u9884\u8fc7\u6ee4\u8d34\u56fe\u7684\u5404\u4e2a\u7c97\u7cd9\u5ea6\u7ea7\u522b\u4e0a\u9884\u8ba1\u7b97\u4e86\u5206\u5272\u6c42\u548c\u8fd1\u4f3c\u7684\u5de6\u534a\u90e8\u5206\u3002\u53f3\u534a\u90e8\u5206\u8981\u6c42\u6211\u4eec\u5728 n \\cdot \\omega_o \u3001\u8868\u9762\u7c97\u7cd9\u5ea6\u3001\u83f2\u6d85\u5c14\u7cfb\u6570 F_0 \u4e0a\u8ba1\u7b97 BRDF \u65b9\u7a0b\u7684\u5377\u79ef\u3002\u8fd9\u7b49\u540c\u4e8e\u5728\u7eaf\u767d\u7684\u73af\u5883\u5149\u6216\u8005\u8f90\u5c04\u5ea6\u6052\u5b9a\u4e3a L_i =1.0 \u7684\u8bbe\u7f6e\u4e0b\uff0c\u5bf9\u955c\u9762 BRDF \u6c42\u79ef\u5206\u3002\u5bf93\u4e2a\u53d8\u91cf\u505a\u5377\u79ef\u6709\u70b9\u590d\u6742\uff0c\u4e0d\u8fc7\u6211\u4eec\u53ef\u4ee5\u628a F_0 \u79fb\u51fa\u955c\u9762 BRDF \u65b9\u7a0b\uff1a \\int\\limits_{\\Omega} f_r(p, \\omega_i, \\omega_o) n \\cdot \\omega_i d\\omega_i = \\int\\limits_{\\Omega} f_r(p, \\omega_i, \\omega_o) \\frac{F(\\omega_o, h)}{F(\\omega_o, h)} n \\cdot \\omega_i d\\omega_i F \u4e3a\u83f2\u6d85\u8033\u65b9\u7a0b\u3002\u5c06\u83f2\u6d85\u8033\u5206\u6bcd\u79fb\u5230 BRDF \u4e0b\u9762\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u7b49\u5f0f\uff1a \\int\\limits_{\\Omega} \\frac{f_r(p, \\omega_i, \\omega_o)}{F(\\omega_o, h)} F(\\omega_o, h) n \\cdot \\omega_i d\\omega_i \u7528 Fresnel-Schlick \u8fd1\u4f3c\u516c\u5f0f\u66ff\u6362\u53f3\u8fb9\u7684 F \u53ef\u4ee5\u5f97\u5230\uff1a \\int\\limits_{\\Omega} \\frac{f_r(p, \\omega_i, \\omega_o)}{F(\\omega_o, h)} (F_0 + (1 - F_0){(1 - \\omega_o \\cdot h)}^5) n \\cdot \\omega_i d\\omega_i \u8ba9\u6211\u4eec\u7528 \\alpha \u66ff\u6362 {(1 - \\omega_o \\cdot h)}^5 \u4ee5\u4fbf\u66f4\u8f7b\u677e\u5730\u6c42\u89e3 F_0 \uff1a \\int\\limits_{\\Omega} \\frac{f_r(p, \\omega_i, \\omega_o)}{F(\\omega_o, h)} (F_0 + (1 - F_0)\\alpha) n \\cdot \\omega_i d\\omega_i \\int\\limits_{\\Omega} \\frac{f_r(p, \\omega_i, \\omega_o)}{F(\\omega_o, h)} (F_0 + 1*\\alpha - F_0*\\alpha) n \\cdot \\omega_i d\\omega_i \\int\\limits_{\\Omega} \\frac{f_r(p, \\omega_i, \\omega_o)}{F(\\omega_o, h)} (F_0 * (1 - \\alpha) + \\alpha) n \\cdot \\omega_i d\\omega_i \u7136\u540e\u6211\u4eec\u5c06\u83f2\u6d85\u8033\u51fd\u6570 F \u5206\u62c6\u5230\u4e24\u4e2a\u79ef\u5206\u91cc\uff1a \\int\\limits_{\\Omega} \\frac{f_r(p, \\omega_i, \\omega_o)}{F(\\omega_o, h)} (F_0 * (1 - \\alpha)) n \\cdot \\omega_i d\\omega_i + \\int\\limits_{\\Omega} \\frac{f_r(p, \\omega_i, \\omega_o)}{F(\\omega_o, h)} (\\alpha) n \\cdot \\omega_i d\\omega_i \u8fd9\u6837\uff0c F_0 \u5728\u6574\u4e2a\u79ef\u5206\u4e0a\u662f\u6052\u5b9a\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u79ef\u5206\u4e2d\u63d0\u53d6\u51fa F_0 \u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06 \\alpha \u66ff\u6362\u56de\u5176\u539f\u59cb\u5f62\u5f0f\uff0c\u4ece\u800c\u5f97\u5230\u6700\u7ec8\u5206\u5272\u6c42\u548c\u7684 BRDF \u65b9\u7a0b\uff1a F_0 \\int\\limits_{\\Omega} f_r(p, \\omega_i, \\omega_o)(1 - {(1 - \\omega_o \\cdot h)}^5) n \\cdot \\omega_i d\\omega_i + \\int\\limits_{\\Omega} f_r(p, \\omega_i, \\omega_o) {(1 - \\omega_o \\cdot h)}^5 n \\cdot \\omega_i d\\omega_i \u516c\u5f0f\u4e2d\u7684\u4e24\u4e2a\u79ef\u5206\u5206\u522b\u8868\u793a F_0 \u7684\u6bd4\u4f8b\u548c\u504f\u5dee\u3002\u6ce8\u610f\uff0c\u7531\u4e8e f(p, \\omega_i, \\omega_o) \u5df2\u7ecf\u5305\u542b F \u9879\uff0c\u5b83\u4eec\u88ab\u7ea6\u5206\u4e86\uff0c\u8fd9\u91cc\u7684 f \u4e2d\u4e0d\u8ba1\u7b97 F \u9879\u3002 \u548c\u4e4b\u524d\u5377\u79ef\u73af\u5883\u8d34\u56fe\u7c7b\u4f3c\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9 BRDF \u65b9\u7a0b\u6c42\u5377\u79ef\uff0c\u5176\u8f93\u5165\u662f n \u548c \\omega_o \u7684\u5939\u89d2\uff0c\u4ee5\u53ca\u7c97\u7cd9\u5ea6\uff0c\u5e76\u5c06\u5377\u79ef\u7684\u7ed3\u679c\u5b58\u50a8\u5728\u7eb9\u7406\u4e2d\u3002\u6211\u4eec\u5c06\u5377\u79ef\u540e\u7684\u7ed3\u679c\u5b58\u50a8\u5728 2D \u67e5\u627e\u7eb9\u7406\uff08Look Up Texture, LUT\uff09\u4e2d\uff0c\u8fd9\u5f20\u7eb9\u7406\u88ab\u79f0\u4e3a BRDF \u79ef\u5206\u8d34\u56fe \uff0c\u7a0d\u540e\u4f1a\u5c06\u5176\u7528\u4e8e PBR \u5149\u7167\u7740\u8272\u5668\u4e2d\uff0c\u4ee5\u83b7\u5f97\u95f4\u63a5\u955c\u9762\u53cd\u5c04\u7684\u6700\u7ec8\u5377\u79ef\u7ed3\u679c\u3002 BRDF \u5377\u79ef\u7740\u8272\u5668\u5728 2D \u5e73\u9762\u4e0a\u6267\u884c\u8ba1\u7b97\uff0c\u76f4\u63a5\u4f7f\u7528\u5176 2D \u7eb9\u7406\u5750\u6807\u4f5c\u4e3a\u5377\u79ef\u8f93\u5165\uff08 NdotV \u548c roughness \uff09\u3002\u4ee3\u7801\u4e0e\u9884\u6ee4\u6ce2\u5668\u7684\u5377\u79ef\u4ee3\u7801\u5927\u4f53\u76f8\u4f3c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u5b83\u73b0\u5728\u6839\u636e BRDF \u7684\u51e0\u4f55\u51fd\u6570\u548c Fresnel-Schlick \u8fd1\u4f3c\u6765\u5904\u7406\u91c7\u6837\u5411\u91cf\uff1a vec2 IntegrateBRDF(float NdotV, float roughness) { vec3 V; V.x = sqrt(1.0 - NdotV*NdotV); V.y = 0.0; V.z = NdotV; float A = 0.0; float B = 0.0; vec3 N = vec3(0.0, 0.0, 1.0); const uint SAMPLE_COUNT = 1024u; for(uint i = 0u; i < SAMPLE_COUNT; ++i) { vec2 Xi = Hammersley(i, SAMPLE_COUNT); vec3 H = ImportanceSampleGGX(Xi, N, roughness); vec3 L = normalize(2.0 * dot(V, H) * H - V); float NdotL = max(L.z, 0.0); float NdotH = max(H.z, 0.0); float VdotH = max(dot(V, H), 0.0); if(NdotL > 0.0) { float G = GeometrySmith(N, V, L, roughness); float G_Vis = (G * VdotH) / (NdotH * NdotV); float Fc = pow(1.0 - VdotH, 5.0); A += (1.0 - Fc) * G_Vis; B += Fc * G_Vis; } } A /= float(SAMPLE_COUNT); B /= float(SAMPLE_COUNT); return vec2(A, B); } // ---------------------------------------------------------------------------- void main() { vec2 integratedBRDF = IntegrateBRDF(TexCoords.x, TexCoords.y); FragColor = integratedBRDF; } \u5982\u4f60\u6240\u89c1\uff0cBRDF \u5377\u79ef\u90e8\u5206\u662f\u4ece\u6570\u5b66\u5230\u4ee3\u7801\u7684\u76f4\u63a5\u8f6c\u6362\u3002\u6211\u4eec\u5c06\u89d2\u5ea6 \\theta \u548c\u7c97\u7cd9\u5ea6\u4f5c\u4e3a\u8f93\u5165\uff0c\u4ee5\u91cd\u8981\u6027\u91c7\u6837\u4ea7\u751f\u91c7\u6837\u5411\u91cf\uff0c\u5728\u6574\u4e2a\u51e0\u4f55\u4f53\u4e0a\u7ed3\u5408 BRDF \u7684\u83f2\u6d85\u8033\u9879\u5bf9\u5411\u91cf\u8fdb\u884c\u5904\u7406\uff0c\u7136\u540e\u8f93\u51fa\u6bcf\u4e2a\u6837\u672c\u4e0a F_0 \u7684\u7cfb\u6570\u548c\u504f\u5dee\uff0c\u6700\u540e\u53d6\u5e73\u5747\u503c\u3002 \u4f60\u53ef\u80fd\u56de\u60f3\u8d77 \u7406\u8bba \u6559\u7a0b\u4e2d\u7684\u4e00\u4e2a\u7ec6\u8282\uff1a\u4e0e IBL \u4e00\u8d77\u4f7f\u7528\u65f6\uff0cBRDF \u7684\u51e0\u4f55\u9879\u7565\u6709\u4e0d\u540c\uff0c\u56e0\u4e3a k \u53d8\u91cf\u7684\u542b\u4e49\u7a0d\u6709\u4e0d\u540c\uff1a k_{direct} = \\frac{(\\alpha + 1)^2}{8} k_{IBL} = \\frac{\\alpha^2}{2} \u7531\u4e8e BRDF \u5377\u79ef\u662f\u955c\u9762 IBL \u79ef\u5206\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u5728 Schlick-GGX \u51e0\u4f55\u51fd\u6570\u4e2d\u4f7f\u7528 k_{IBL} \uff1a float GeometrySchlickGGX(float NdotV, float roughness) { float a = roughness; float k = (a * a) / 2.0; float nom = NdotV; float denom = NdotV * (1.0 - k) + k; return nom / denom; } // ---------------------------------------------------------------------------- float GeometrySmith(vec3 N, vec3 V, vec3 L, float roughness) { float NdotV = max(dot(N, V), 0.0); float NdotL = max(dot(N, L), 0.0); float ggx2 = GeometrySchlickGGX(NdotV, roughness); float ggx1 = GeometrySchlickGGX(NdotL, roughness); return ggx1 * ggx2; } \u8bf7\u6ce8\u610f\uff0c\u867d\u7136 k \u8fd8\u662f\u4ece a \u8ba1\u7b97\u51fa\u6765\u7684\uff0c\u4f46\u8fd9\u91cc\u7684 a \u4e0d\u662f roughness \u7684\u5e73\u65b9\u2014\u2014\u5982\u540c\u6700\u521d\u5bf9 a \u7684\u5176\u4ed6\u89e3\u91ca\u90a3\u6837\u2014\u2014\u5728\u8fd9\u91cc\u6211\u4eec\u5047\u88c5\u5e73\u65b9\u8fc7\u4e86\u3002\u6211\u4e0d\u786e\u5b9a\u8fd9\u6837\u5904\u7406\u662f\u5426\u4e0e Epic Games \u6216\u8fea\u58eb\u5c3c\u539f\u59cb\u8bba\u6587\u4e0d\u4e00\u81f4\uff0c\u4f46\u662f\u76f4\u63a5\u5c06 roughness \u8d4b\u7ed9 a \u5f97\u5230\u7684 BRDF \u79ef\u5206\u8d34\u56fe\u4e0e Epic Games \u7684\u7248\u672c\u5b8c\u5168\u4e00\u81f4\u3002 \u6700\u540e\uff0c\u4e3a\u4e86\u5b58\u50a8 BRDF \u5377\u79ef\u7ed3\u679c\uff0c\u6211\u4eec\u9700\u8981\u751f\u6210\u4e00\u5f20 512 \u00d7 512 \u5206\u8fa8\u7387\u7684 2D \u7eb9\u7406\u3002 unsigned int brdfLUTTexture; glGenTextures(1, &brdfLUTTexture); // pre-allocate enough memory for the LUT texture. glBindTexture(GL_TEXTURE_2D, brdfLUTTexture); glTexImage2D(GL_TEXTURE_2D, 0, GL_RG16F, 512, 512, 0, GL_RG, GL_FLOAT, 0); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR); \u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f Epic Games \u63a8\u8350\u768416\u4f4d\u7cbe\u5ea6\u6d6e\u70b9\u683c\u5f0f\u3002\u5c06\u73af\u7ed5\u6a21\u5f0f\u8bbe\u7f6e\u4e3a GL_CLAMP_TO_EDGE \u4ee5\u9632\u6b62\u8fb9\u7f18\u91c7\u6837\u7684\u4f2a\u50cf\u3002 \u7136\u540e\uff0c\u6211\u4eec\u590d\u7528\u540c\u4e00\u4e2a\u5e27\u7f13\u51b2\u533a\u5bf9\u8c61\uff0c\u5e76\u5728 NDC (\u8bd1\u6ce8\uff1aNormalized Device Coordinates) \u5c4f\u5e55\u7a7a\u95f4\u56db\u8fb9\u5f62\u4e0a\u8fd0\u884c\u6b64\u7740\u8272\u5668\uff1a glBindFramebuffer(GL_FRAMEBUFFER, captureFBO); glBindRenderbuffer(GL_RENDERBUFFER, captureRBO); glRenderbufferStorage(GL_RENDERBUFFER, GL_DEPTH_COMPONENT24, 512, 512); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, brdfLUTTexture, 0); glViewport(0, 0, 512, 512); brdfShader.use(); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); RenderQuad(); glBindFramebuffer(GL_FRAMEBUFFER, 0); \u5206\u5272\u79ef\u5206\u548c\u7684 BRDF \u5377\u79ef\u90e8\u5206\u5e94\u8be5\u5f97\u5230\u4ee5\u4e0b\u7ed3\u679c\uff1a \u9884\u8fc7\u6ee4\u7684\u73af\u5883\u8d34\u56fe\u548c BRDF \u7684 2D LUT \u90fd\u5df2\u7ecf\u9f50\u5907\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5206\u5272\u6c42\u548c\u8fd1\u4f3c\u6cd5\u91cd\u5efa\u95f4\u63a5\u955c\u9762\u90e8\u5206\u79ef\u5206\u4e86\u3002\u6700\u540e\u5408\u5e76\u7684\u7ed3\u679c\u5c06\u88ab\u7528\u4f5c\u95f4\u63a5\u955c\u9762\u53cd\u5c04\u6216\u73af\u5883\u955c\u9762\u53cd\u5c04\u3002 \u5b8c\u6210 IBL \u53cd\u5c04 \u4e3a\u4e86\u4f7f\u53cd\u5c04\u65b9\u7a0b\u7684\u95f4\u63a5\u955c\u9762\u53cd\u5c04\u90e8\u5206\u6b63\u786e\u8fd0\u884c\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5206\u5272\u6c42\u548c\u8fd1\u4f3c\u6cd5\u7684\u4e24\u4e2a\u90e8\u5206\u7f1d\u5408\u5728\u4e00\u8d77\u3002\u7b2c\u4e00\u6b65\u662f\u5c06\u9884\u8ba1\u7b97\u7684\u5149\u7167\u6570\u636e\u58f0\u660e\u5230 PBR \u7740\u8272\u5668\u7684\u6700\u4e0a\u9762\uff1a uniform samplerCube prefilterMap; uniform sampler2D brdfLUT; \u9996\u5148\uff0c\u4f7f\u7528\u53cd\u5c04\u5411\u91cf\u91c7\u6837\u9884\u8fc7\u6ee4\u7684\u73af\u5883\u8d34\u56fe\uff0c\u83b7\u53d6\u8868\u9762\u7684\u95f4\u63a5\u955c\u9762\u53cd\u5c04\u3002\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u4f1a\u6839\u636e\u8868\u9762\u7c97\u7cd9\u5ea6\u5728\u5408\u9002\u7684 mip \u7ea7\u522b\u91c7\u6837\uff0c\u4ee5\u4f7f\u66f4\u7c97\u7cd9\u7684\u8868\u9762\u4ea7\u751f\u66f4\u6a21\u7cca\u7684\u955c\u9762\u53cd\u5c04\u3002 void main() { [...] vec3 R = reflect(-V, N); const float MAX_REFLECTION_LOD = 4.0; vec3 prefilteredColor = textureLod(prefilterMap, R, roughness * MAX_REFLECTION_LOD).rgb; [...] } \u5728\u9884\u8fc7\u6ee4\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u4ec5\u5c06\u73af\u5883\u8d34\u56fe\u5377\u79ef\u6700\u591a 5 \u4e2a mip \u7ea7\u522b\uff080\u52304\uff09\uff0c\u6b64\u5904\u8bb0\u4e3a MAX_REFLECTION_LOD \uff0c\u4ee5\u786e\u4fdd\u4e0d\u4f1a\u5bf9\u4e00\u4e2a\u6ca1\u6709\u6570\u636e\u7684 mip \u7ea7\u522b\u91c7\u6837\u3002 \u7136\u540e\u6211\u4eec\u7528\u5df2\u77e5\u7684\u6750\u8d28\u7c97\u7cd9\u5ea6\u548c\u89c6\u7ebf-\u6cd5\u7ebf\u5939\u89d2\u4f5c\u4e3a\u8f93\u5165\uff0c\u91c7\u6837 BRDF LUT\u3002 vec3 F = FresnelSchlickRoughness(max(dot(N, V), 0.0), F0, roughness); vec2 envBRDF = texture(brdfLUT, vec2(max(dot(N, V), 0.0), roughness)).rg; vec3 specular = prefilteredColor * (F * envBRDF.x + envBRDF.y); \u8fd9\u6837\u6211\u4eec\u5c31\u4ece BRDF LUT \u4e2d\u83b7\u5f97\u4e86 F_0 \u7684\u7cfb\u6570\u548c\u504f\u79fb\uff0c\u8fd9\u91cc\u6211\u4eec\u5c31\u76f4\u63a5\u7528\u95f4\u63a5\u5149\u83f2\u6d85\u5c14\u9879 F \u4ee3\u66ff F_0 \u3002\u628a\u8fd9\u4e2a\u7ed3\u679c\u548c IBL \u53cd\u5c04\u65b9\u7a0b\u5de6\u8fb9\u7684\u9884\u8fc7\u6ee4\u90e8\u5206\u7ed3\u5408\u8d77\u6765\uff0c\u4ee5\u91cd\u5efa\u6574\u4e2a\u8fd1\u4f3c\u79ef\u5206\uff0c\u5b58\u5165 specular \u3002 \u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e86\u53cd\u5c04\u65b9\u7a0b\u7684\u95f4\u63a5\u955c\u9762\u53cd\u5c04\u90e8\u5206\u3002\u73b0\u5728\uff0c\u5c06\u5176\u4e0e \u4e0a\u4e00\u8282\u6559\u7a0b \u4e2d\u7684\u53cd\u5c04\u65b9\u7a0b\u7684\u6f2b\u53cd\u5c04\u90e8\u5206\u7ed3\u5408\u8d77\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u5b8c\u6574\u7684 PBR IBL \u7ed3\u679c\uff1a vec3 F = FresnelSchlickRoughness(max(dot(N, V), 0.0), F0, roughness); vec3 kS = F; vec3 kD = 1.0 - kS; kD *= 1.0 - metallic; vec3 irradiance = texture(irradianceMap, N).rgb; vec3 diffuse = irradiance * albedo; const float MAX_REFLECTION_LOD = 4.0; vec3 prefilteredColor = textureLod(prefilterMap, R, roughness * MAX_REFLECTION_LOD).rgb; vec2 envBRDF = texture(brdfLUT, vec2(max(dot(N, V), 0.0), roughness)).rg; vec3 specular = prefilteredColor * (F * envBRDF.x + envBRDF.y); vec3 ambient = (kD * diffuse + specular) * ao; \u8bf7\u6ce8\u610f\uff0c specular \u6ca1\u6709\u4e58\u4ee5 kS \uff0c\u56e0\u4e3a\u5df2\u7ecf\u4e58\u8fc7\u4e86\u83f2\u6d85\u8033\u7cfb\u6570\u3002 \u73b0\u5728\uff0c\u5728\u4e00\u7cfb\u5217\u7c97\u7cd9\u5ea6\u548c\u91d1\u5c5e\u5ea6\u5404\u5f02\u7684\u7403\u4e0a\u8fd0\u884c\u6b64\u4ee3\u7801\uff0c\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u5728\u6700\u7ec8\u7684 PBR \u6e32\u67d3\u5668\u4e2d\u770b\u5230\u5176\u771f\u5b9e\u989c\u8272\uff1a \u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u518d\u75af\u72c2\u4e00\u70b9\uff0c\u4f7f\u7528\u4e00\u4e9b\u5e26\u9177\u70ab\u7eb9\u7406\u7684 PBR \u6750\u8d28 \uff1a \u6216\u52a0\u8f7d Andrew Maximov \u7684 \u8fd9\u6b3e\u51fa\u8272\u7684\u514d\u8d39 PBR 3D \u6a21\u578b \uff1a \u6211\u6562\u80af\u5b9a\u6211\u4eec\u90fd\u540c\u610f\u73b0\u5728\u7684\u5149\u7167\u770b\u8d77\u6765\u66f4\u5177\u8bf4\u670d\u529b\u3002\u66f4\u5999\u7684\u662f\uff0c\u65e0\u8bba\u6211\u4eec\u4f7f\u7528\u54ea\u79cd\u73af\u5883\u8d34\u56fe\uff0c\u6211\u4eec\u7684\u5149\u7167\u770b\u8d77\u6765\u90fd\u662f\u7269\u7406\u6b63\u786e\u7684\u3002\u4e0b\u9762\uff0c\u60a8\u5c06\u770b\u5230\u51e0\u5f20\u4e0d\u540c\u7684\u9884\u8ba1\u7b97 HDR \u8d34\u56fe\uff0c\u5b83\u4eec\u5b8c\u5168\u6539\u53d8\u4e86\u5149\u7167\u52a8\u6001\uff0c\u4f46\u662f\u4e0d\u9700\u8981\u8c03\u6574\u4efb\u4f55\u5149\u7167\u53d8\u91cf\uff0c\u5728\u5916\u89c2\u4e0a\u4f9d\u7136\u6b63\u786e\uff01 \u597d\u5427\uff0c\u8fd9\u662f\u4e00\u573a\u957f\u957f\u7684 PBR \u5192\u9669\u3002\u6709\u5f88\u591a\u6b65\u9aa4\u53ef\u80fd\u4f1a\u51fa\u9519\uff0c\u6240\u4ee5\u5982\u679c\u9047\u5230\u95ee\u9898\u5361\u4f4f\uff0c\u8bf7\u4ed4\u7ec6\u7814\u7a76 \u7403\u5f62\u573a\u666f \u6216 \u5e26\u7eb9\u7406\u7684\u573a\u666f\u4ee3\u7801 \u793a\u4f8b\u2014\u2014\u4e5f\u5305\u62ec\u6240\u6709\u7740\u8272\u5668\uff0c\u6216\u8005\u68c0\u67e5\u4e4b\u540e\u5728\u8bc4\u8bba\u4e2d\u63d0\u95ee\u3002 \u4e0b\u4e00\u6b65\u662f\uff1f \u5e0c\u671b\u5728\u672c\u6559\u7a0b\u7ed3\u675f\u65f6\uff0c\u4f60\u4f1a\u5bf9 PBR \u7684\u76f8\u5173\u5185\u5bb9\u6709\u4e00\u4e2a\u6e05\u6670\u7684\u4e86\u89e3\uff0c\u751a\u81f3\u53ef\u4ee5\u6784\u9020\u5e76\u8fd0\u884c\u4e00\u4e2a\u5b9e\u9645\u7684 PBR \u6e32\u67d3\u5668\u3002\u5728\u8fd9\u51e0\u8282\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u5728\u5e94\u7528\u7a0b\u5e8f\u5f00\u59cb\u9636\u6bb5\uff0c\u6e32\u67d3\u5faa\u73af\u4e4b\u524d\uff0c\u9884\u8ba1\u7b97\u4e86\u6240\u6709 PBR \u76f8\u5173\u7684\u57fa\u4e8e\u56fe\u50cf\u7684\u5149\u7167\u6570\u636e\u3002\u51fa\u4e8e\u6559\u80b2\u76ee\u7684\uff0c\u8fd9\u5f88\u597d\uff0c\u4f46\u5bf9\u4e8e\u4efb\u4f55 PBR \u7684\u5b9e\u8df5\u5e94\u7528\u6765\u8bf4\uff0c\u90fd\u4e0d\u662f\u5f88\u6f02\u4eae\u3002\u9996\u5148\uff0c\u9884\u8ba1\u7b97\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u6267\u884c\u4e00\u6b21\uff0c\u800c\u4e0d\u662f\u6bcf\u6b21\u542f\u52a8\u65f6\u90fd\u8981\u505a\u3002\u5176\u6b21\uff0c\u5f53\u4f7f\u7528\u591a\u4e2a\u73af\u5883\u8d34\u56fe\u65f6\uff0c\u4f60\u5fc5\u987b\u5728\u6bcf\u6b21\u7a0b\u5e8f\u542f\u52a8\u65f6\u5168\u90e8\u9884\u8ba1\u7b97\u4e00\u904d\uff0c\u8fd9\u662f\u4e2a\u5fc5\u987b\u6b65\u9aa4\u3002 \u56e0\u6b64\uff0c\u901a\u5e38\u53ea\u9700\u8981\u4e00\u6b21\u5c06\u73af\u5883\u8d34\u56fe\u9884\u8ba1\u7b97\u4e3a\u8f90\u7167\u5ea6\u8d34\u56fe\u548c\u9884\u8fc7\u6ee4\u8d34\u56fe\uff0c\u7136\u540e\u5c06\u5176\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\uff08\u6ce8\u610f\uff0cBRDF \u79ef\u5206\u8d34\u56fe\u4e0d\u4f9d\u8d56\u4e8e\u73af\u5883\u8d34\u56fe\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u8ba1\u7b97\u6216\u52a0\u8f7d\u4e00\u6b21\uff09\u3002\u8fd9\u610f\u5473\u7740\u60a8\u9700\u8981\u63d0\u51fa\u4e00\u79cd\u81ea\u5b9a\u4e49\u56fe\u50cf\u683c\u5f0f\u6765\u5b58\u50a8 HDR \u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u5305\u62ec\u5176 mip \u7ea7\u522b\u3002\u6216\u8005\u5c06\u56fe\u50cf\u5b58\u50a8\u4e3a\u67d0\u79cd\u53ef\u7528\u683c\u5f0f\u2014\u2014\u4f8b\u5982\u652f\u6301\u5b58\u50a8 mip \u7ea7\u522b\u7684 .dds\u2014\u2014\u5e76\u6309\u5176\u683c\u5f0f\u52a0\u8f7d\u3002 \u6b64\u5916\uff0c\u6211\u4eec\u4e5f\u5728\u6559\u7a0b\u4e2d\u63cf\u8ff0\u4e86 \u6574\u4e2a \u8fc7\u7a0b\uff0c\u5305\u62ec\u751f\u6210\u9884\u8ba1\u7b97\u7684 IBL \u56fe\u50cf\uff0c\u4ee5\u5e2e\u52a9\u6211\u4eec\u8fdb\u4e00\u6b65\u4e86\u89e3 PBR \u7ba1\u7ebf\u3002\u6b64\u5916\u8fd8\u53ef\u4ee5\u901a\u8fc7 cmftStudio \u6216 IBLBaker \u7b49\u4e00\u4e9b\u51fa\u8272\u7684\u5de5\u5177\u4e3a\u60a8\u751f\u6210\u8fd9\u4e9b\u9884\u8ba1\u7b97\u8d34\u56fe\uff0c\u4e5f\u5f88\u597d\u7528\u3002 \u6709\u4e00\u70b9\u5185\u5bb9\u6211\u4eec\u8df3\u8fc7\u4e86\uff0c\u5373\u5982\u4f55\u5c06\u9884\u8ba1\u7b97\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u4f5c\u4e3a \u53cd\u5c04\u63a2\u9488 \uff1a\u7acb\u65b9\u4f53\u8d34\u56fe\u63d2\u503c\u548c\u89c6\u5dee\u6821\u6b63\u3002\u8fd9\u662f\u4e00\u4e2a\u5728\u573a\u666f\u4e2d\u653e\u7f6e\u591a\u4e2a\u53cd\u5c04\u63a2\u9488\u7684\u8fc7\u7a0b\uff0c\u8fd9\u4e9b\u63a2\u9488\u5728\u7279\u5b9a\u4f4d\u7f6e\u62cd\u6444\u573a\u666f\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u5feb\u7167\uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5377\u79ef\uff0c\u4f5c\u4e3a\u76f8\u5e94\u90e8\u5206\u573a\u666f\u7684 IBL \u6570\u636e\u3002\u57fa\u4e8e\u76f8\u673a\u7684\u4f4d\u7f6e\u5bf9\u9644\u8fd1\u7684\u63a2\u9488\u63d2\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u5c40\u90e8\u7684\u7ec6\u8282\u4e30\u5bcc\u7684 IBL\uff0c\u53d7\u5230\u7684\u552f\u4e00\u9650\u5236\u5c31\u662f\u63a2\u9488\u653e\u7f6e\u7684\u6570\u91cf\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u4f8b\u5982\u4ece\u4e00\u4e2a\u660e\u4eae\u7684\u5ba4\u5916\u90e8\u5206\u79fb\u52a8\u5230\u8f83\u6697\u7684\u5ba4\u5185\u90e8\u5206\u65f6\uff0cIBL \u5c31\u80fd\u6b63\u786e\u66f4\u65b0\u3002\u6211\u5c06\u6765\u4f1a\u5728\u67d0\u4e2a\u5730\u65b9\u7f16\u5199\u6709\u5173\u53cd\u5c04\u63a2\u9488\u7684\u6559\u7a0b\uff0c\u4f46\u73b0\u5728\uff0c\u6211\u5efa\u8bae\u9605\u8bfb\u4e0b\u9762 Chetan Jags \u7684\u6587\u7ae0\u6765\u4f5c\u4e3a\u5165\u95e8\u3002 \u8fdb\u9636\u9605\u8bfb Real Shading in Unreal Engine 4 \uff1a\u8bb2\u89e3\u4e86 Epic Games \u7684\u5206\u5272\u6c42\u548c\u8fd1\u4f3c\u6cd5\u3002IBL PBR \u90e8\u5206\u7684\u4ee3\u7801\u5c31\u8131\u80ce\u4e8e\u6b64\u6587\u3002 Physically Based Shading and Image Based Lighting \uff1aTrent Reed \u7684\u7cbe\u5f69\u535a\u5ba2\u6587\u7ae0\uff0c\u4ecb\u7ecd\u4e86\u5982\u4f55\u5c06\u955c\u9762\u53cd\u5c04 IBL \u5b9e\u65f6\u96c6\u6210\u5230 PBR \u7ba1\u9053\u4e2d\u3002 Image Based Lighting \uff1aChetan Jags \u5bf9\u57fa\u4e8e\u955c\u9762\u53cd\u5c04\u7684 IBL \u53ca\u5176\u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879\uff08\u5305\u62ec\u5149\u7167\u63a2\u9488\u63d2\u503c\uff09\u8fdb\u884c\u4e86\u5e7f\u6cdb\u7684\u8bb2\u89e3\u3002 Moving Frostbite to PBR \uff1aS\u00e9bastien Lagarde \u548c Charles de Rousiers \u64b0\u5199\u7684\uff0c\u5bf9\u4e8e\u5982\u4f55\u5c06 PBR \u96c6\u6210\u5230 AAA \u6e38\u620f\u5f15\u64ce\u8fdb\u884c\u4e86\u8be6\u5c3d\u800c\u6df1\u5165\u7684\u6982\u8ff0\u3002 Physically Based Rendering \u2013 Part Three \uff1aJMonkeyEngine \u56e2\u961f\u5bf9 IBL \u548c PBR \u8fdb\u884c\u4e86\u8f83\u9ad8\u5c42\u6b21\u7684\u6982\u8ff0\u3002 Implementation Notes: Runtime Environment Map Filtering for Image Based Lighting \uff1aPadraic Hennessy \u64b0\u5199\u7684\u5927\u91cf\u6709\u5173\u9884\u8fc7\u6ee4 HDR \u73af\u5883\u8d34\u56fe\u5e76\u663e\u8457\u4f18\u5316\u91c7\u6837\u8fc7\u7a0b\u7684\u6587\u7ae0\u3002","title":"\u955c\u9762IBL"},{"location":"07%20PBR/03%20IBL/02%20Specular%20IBL/#ibl","text":"\u539f\u6587 Specular IBL \u4f5c\u8005 JoeyDeVries \u7ffb\u8bd1 flyingSnow \u6821\u5bf9 \u5728 \u4e0a\u4e00\u8282\u6559\u7a0b \u4e2d\uff0c\u6211\u4eec\u9884\u8ba1\u7b97\u4e86\u8f90\u7167\u5ea6\u56fe\u4f5c\u4e3a\u5149\u7167\u7684\u95f4\u63a5\u6f2b\u53cd\u5c04\u90e8\u5206\uff0c\u4ee5\u5c06 PBR \u4e0e\u57fa\u4e8e\u56fe\u50cf\u7684\u7167\u660e\u76f8\u7ed3\u5408\u3002\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u91cd\u70b9\u5173\u6ce8\u53cd\u5c04\u65b9\u7a0b\u7684\u955c\u9762\u90e8\u5206\uff1a L_o(p,\\omega_o) = \\int\\limits_{\\Omega} (k_d\\frac{c}{\\pi} + k_s\\frac{DFG}{4(\\omega_o \\cdot n)(\\omega_i \\cdot n)}) L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \u4f60\u4f1a\u6ce8\u610f\u5230 Cook-Torrance \u955c\u9762\u90e8\u5206\uff08\u4e58\u4ee5 k_s \uff09\u5728\u6574\u4e2a\u79ef\u5206\u4e0a\u4e0d\u662f\u5e38\u6570\uff0c\u4e0d\u4ec5\u53d7\u5165\u5c04\u5149\u65b9\u5411\u5f71\u54cd\uff0c \u8fd8 \u53d7\u89c6\u89d2\u5f71\u54cd\u3002\u5982\u679c\u8bd5\u56fe\u89e3\u7b97\u6240\u6709\u5165\u5c04\u5149\u65b9\u5411\u52a0\u6240\u6709\u53ef\u80fd\u7684\u89c6\u89d2\u65b9\u5411\u7684\u79ef\u5206\uff0c\u4e8c\u8005\u7ec4\u5408\u6570\u4f1a\u6781\u5176\u5e9e\u5927\uff0c\u5b9e\u65f6\u8ba1\u7b97\u592a\u6602\u8d35\u3002Epic Games \u63d0\u51fa\u4e86\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u4ed6\u4eec\u9884\u8ba1\u7b97\u955c\u9762\u90e8\u5206\u7684\u5377\u79ef\uff0c\u4e3a\u5b9e\u65f6\u8ba1\u7b97\u4f5c\u4e86\u4e00\u4e9b\u59a5\u534f\uff0c\u8fd9\u79cd\u65b9\u6848\u88ab\u79f0\u4e3a \u5206\u5272\u6c42\u548c\u8fd1\u4f3c\u6cd5 \uff08split sum approximation\uff09\u3002 \u5206\u5272\u6c42\u548c\u8fd1\u4f3c\u5c06\u65b9\u7a0b\u7684\u955c\u9762\u90e8\u5206\u5206\u5272\u6210\u4e24\u4e2a\u72ec\u7acb\u7684\u90e8\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u5355\u72ec\u6c42\u5377\u79ef\uff0c\u7136\u540e\u5728 PBR \u7740\u8272\u5668\u4e2d\u6c42\u548c\uff0c\u4ee5\u7528\u4e8e\u95f4\u63a5\u955c\u9762\u53cd\u5c04\u90e8\u5206 IBL\u3002\u5206\u5272\u6c42\u548c\u8fd1\u4f3c\u6cd5\u7c7b\u4f3c\u4e8e\u6211\u4eec\u4e4b\u524d\u6c42\u8f90\u7167\u56fe\u9884\u5377\u79ef\u7684\u65b9\u6cd5\uff0c\u9700\u8981 HDR \u73af\u5883\u8d34\u56fe\u4f5c\u4e3a\u5176\u5377\u79ef\u8f93\u5165\u3002\u4e3a\u4e86\u7406\u89e3\uff0c\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u53cd\u5c04\u65b9\u7a0b\uff0c\u4f46\u8fd9\u6b21\u53ea\u5173\u6ce8\u955c\u9762\u53cd\u5c04\u90e8\u5206\uff08\u5728 \u4e0a\u4e00\u8282\u6559\u7a0b \u4e2d\u5df2\u7ecf\u5265\u79bb\u4e86\u6f2b\u53cd\u5c04\u90e8\u5206\uff09\uff1a L_o(p,\\omega_o) = \\int\\limits_{\\Omega} (k_s\\frac{DFG}{4(\\omega_o \\cdot n)(\\omega_i \\cdot n)} L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i = \\int\\limits_{\\Omega} f_r(p, \\omega_i, \\omega_o) L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \u7531\u4e8e\u4e0e\u8f90\u7167\u5ea6\u5377\u79ef\u76f8\u540c\u7684\uff08\u6027\u80fd\uff09\u539f\u56e0\uff0c\u6211\u4eec\u65e0\u6cd5\u4ee5\u5408\u7406\u7684\u6027\u80fd\u5b9e\u65f6\u6c42\u89e3\u79ef\u5206\u7684\u955c\u9762\u53cd\u5c04\u90e8\u5206\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u6700\u597d\u9884\u8ba1\u7b97\u8fd9\u4e2a\u79ef\u5206\uff0c\u4ee5\u5f97\u5230\u50cf\u955c\u9762 IBL \u8d34\u56fe\u8fd9\u6837\u7684\u4e1c\u897f\uff0c\u7528\u7247\u6bb5\u7684\u6cd5\u7ebf\u5bf9\u8fd9\u5f20\u56fe\u91c7\u6837\u5e76\u8ba1\u7b97\u3002\u4f46\u662f\uff0c\u6709\u4e00\u4e2a\u5730\u65b9\u6709\u70b9\u68d8\u624b\uff1a\u6211\u4eec\u80fd\u591f\u9884\u8ba1\u7b97\u8f90\u7167\u5ea6\u56fe\uff0c\u662f\u56e0\u4e3a\u5176\u79ef\u5206\u4ec5\u4f9d\u8d56\u4e8e \\omega_i \uff0c\u5e76\u4e14\u53ef\u4ee5\u5c06\u6f2b\u53cd\u5c04\u53cd\u5c04\u7387\u5e38\u6570\u9879\u79fb\u51fa\u79ef\u5206\uff0c\u4f46\u8fd9\u4e00\u6b21\uff0c\u79ef\u5206\u4e0d\u4ec5\u4ec5\u53d6\u51b3\u4e8e \\omega_i \uff0c\u4ece BRDF \u53ef\u4ee5\u770b\u51fa\uff1a f_r(p, w_i, w_o) = \\frac{DFG}{4(\\omega_o \\cdot n)(\\omega_i \\cdot n)} \u8fd9\u6b21\u79ef\u5206\u8fd8\u4f9d\u8d56 \\omega_o \uff0c\u6211\u4eec\u65e0\u6cd5\u7528\u4e24\u4e2a\u65b9\u5411\u5411\u91cf\u91c7\u6837\u9884\u8ba1\u7b97\u7684\u7acb\u65b9\u4f53\u56fe\u3002\u5982\u524d\u4e00\u4e2a\u6559\u7a0b\u4e2d\u6240\u8ff0\uff0c\u4f4d\u7f6e p \u4e0e\u6b64\u5904\u65e0\u5173\u3002\u5728\u5b9e\u65f6\u72b6\u6001\u4e0b\uff0c\u5bf9\u6bcf\u79cd\u53ef\u80fd\u7684 \\omega_i \u548c \\omega_o \u7684\u7ec4\u5408\u9884\u8ba1\u7b97\u8be5\u79ef\u5206\u662f\u4e0d\u53ef\u884c\u7684\u3002 Epic Games \u7684\u5206\u5272\u6c42\u548c\u8fd1\u4f3c\u6cd5\u5c06\u9884\u8ba1\u7b97\u5206\u6210\u4e24\u4e2a\u5355\u72ec\u7684\u90e8\u5206\u6c42\u89e3\uff0c\u518d\u5c06\u4e24\u90e8\u5206\u7ec4\u5408\u8d77\u6765\u5f97\u5230\u540e\u6587\u7ed9\u51fa\u7684\u9884\u8ba1\u7b97\u7ed3\u679c\u3002\u5206\u5272\u6c42\u548c\u8fd1\u4f3c\u6cd5\u5c06\u955c\u9762\u53cd\u5c04\u79ef\u5206\u62c6\u6210\u4e24\u4e2a\u72ec\u7acb\u7684\u79ef\u5206\uff1a L_o(p,\\omega_o) = \\int\\limits_{\\Omega} L_i(p,\\omega_i) d\\omega_i * \\int\\limits_{\\Omega} f_r(p, \\omega_i, \\omega_o) n \\cdot \\omega_i d\\omega_i \u5377\u79ef\u7684\u7b2c\u4e00\u90e8\u5206\u88ab\u79f0\u4e3a \u9884\u6ee4\u6ce2\u73af\u5883\u8d34\u56fe \uff0c\u5b83\u7c7b\u4f3c\u4e8e\u8f90\u7167\u5ea6\u56fe\uff0c\u662f\u9884\u5148\u8ba1\u7b97\u7684\u73af\u5883\u5377\u79ef\u8d34\u56fe\uff0c\u4f46\u8fd9\u6b21\u8003\u8651\u4e86\u7c97\u7cd9\u5ea6\u3002\u56e0\u4e3a\u968f\u7740\u7c97\u7cd9\u5ea6\u7684\u589e\u52a0\uff0c\u53c2\u4e0e\u73af\u5883\u8d34\u56fe\u5377\u79ef\u7684\u91c7\u6837\u5411\u91cf\u4f1a\u66f4\u5206\u6563\uff0c\u5bfc\u81f4\u53cd\u5c04\u66f4\u6a21\u7cca\uff0c\u6240\u4ee5\u5bf9\u4e8e\u5377\u79ef\u7684\u6bcf\u4e2a\u7c97\u7cd9\u5ea6\u7ea7\u522b\uff0c\u6211\u4eec\u5c06\u6309\u987a\u5e8f\u628a\u6a21\u7cca\u540e\u7684\u7ed3\u679c\u5b58\u50a8\u5728\u9884\u6ee4\u6ce2\u8d34\u56fe\u7684 mipmap \u4e2d\u3002\u4f8b\u5982\uff0c\u9884\u8fc7\u6ee4\u7684\u73af\u5883\u8d34\u56fe\u5728\u5176 5 \u4e2a mipmap \u7ea7\u522b\u4e2d\u5b58\u50a8 5 \u4e2a\u4e0d\u540c\u7c97\u7cd9\u5ea6\u503c\u7684\u9884\u5377\u79ef\u7ed3\u679c\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u6211\u4eec\u4f7f\u7528 Cook-Torrance BRDF \u7684\u6cd5\u7ebf\u5206\u5e03\u51fd\u6570(NDF)\u751f\u6210\u91c7\u6837\u5411\u91cf\u53ca\u5176\u6563\u5c04\u5f3a\u5ea6\uff0c\u8be5\u51fd\u6570\u5c06\u6cd5\u7ebf\u548c\u89c6\u89d2\u65b9\u5411\u4f5c\u4e3a\u8f93\u5165\u3002\u7531\u4e8e\u6211\u4eec\u5728\u5377\u79ef\u73af\u5883\u8d34\u56fe\u65f6\u4e8b\u5148\u4e0d\u77e5\u9053\u89c6\u89d2\u65b9\u5411\uff0c\u56e0\u6b64 Epic Games \u5047\u8bbe\u89c6\u89d2\u65b9\u5411\u2014\u2014\u4e5f\u5c31\u662f\u955c\u9762\u53cd\u5c04\u65b9\u5411\u2014\u2014\u603b\u662f\u7b49\u4e8e\u8f93\u51fa\u91c7\u6837\u65b9\u5411 \\omega_o \uff0c\u4ee5\u4f5c\u8fdb\u4e00\u6b65\u8fd1\u4f3c\u3002\u7ffb\u8bd1\u6210\u4ee3\u7801\u5982\u4e0b\uff1a vec3 N = normalize(w_o); vec3 R = N; vec3 V = R; \u8fd9\u6837\uff0c\u9884\u8fc7\u6ee4\u7684\u73af\u5883\u5377\u79ef\u5c31\u4e0d\u9700\u8981\u5173\u5fc3\u89c6\u89d2\u65b9\u5411\u4e86\u3002\u8fd9\u610f\u5473\u7740\u5f53\u4ece\u5982\u4e0b\u56fe\u7684\u89d2\u5ea6\u89c2\u5bdf\u8868\u9762\u7684\u955c\u9762\u53cd\u5c04\u65f6\uff0c\u5f97\u5230\u7684\u63a0\u89d2\u955c\u9762\u53cd\u5c04\u6548\u679c\u4e0d\u662f\u5f88\u597d\uff08\u56fe\u7247\u6765\u81ea\u6587\u7ae0\u300aMoving Frostbite to PBR\u300b\uff09\u3002\u7136\u800c\uff0c\u901a\u5e38\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u4f53\u9762\u7684\u59a5\u534f\uff1a \u7b49\u5f0f\u7684\u7b2c\u4e8c\u90e8\u5206\u7b49\u4e8e\u955c\u9762\u53cd\u5c04\u79ef\u5206\u7684 BRDF \u90e8\u5206\u3002\u5982\u679c\u6211\u4eec\u5047\u8bbe\u6bcf\u4e2a\u65b9\u5411\u7684\u5165\u5c04\u8f90\u5c04\u5ea6\u90fd\u662f\u767d\u8272\u7684\uff08\u56e0\u6b64 L(p, x) = 1.0 \uff09\uff0c\u5c31\u53ef\u4ee5\u5728\u7ed9\u5b9a\u7c97\u7cd9\u5ea6\u3001\u5149\u7ebf \\omega_i \u6cd5\u7ebf n \u5939\u89d2 n \\cdot \\omega_i \u7684\u60c5\u51b5\u4e0b\uff0c\u9884\u8ba1\u7b97 BRDF \u7684\u54cd\u5e94\u7ed3\u679c\u3002Epic Games \u5c06\u9884\u8ba1\u7b97\u597d\u7684 BRDF \u5bf9\u6bcf\u4e2a\u7c97\u7cd9\u5ea6\u548c\u5165\u5c04\u89d2\u7684\u7ec4\u5408\u7684\u54cd\u5e94\u7ed3\u679c\u5b58\u50a8\u5728\u4e00\u5f20 2D \u67e5\u627e\u7eb9\u7406(LUT)\u4e0a\uff0c\u79f0\u4e3a BRDF\u79ef\u5206\u8d34\u56fe \u30022D \u67e5\u627e\u7eb9\u7406\u5b58\u50a8\u662f\u83f2\u6d85\u8033\u54cd\u5e94\u7684\u7cfb\u6570\uff08R \u901a\u9053\uff09\u548c\u504f\u5dee\u503c\uff08G \u901a\u9053\uff09\uff0c\u5b83\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u5206\u5272\u7248\u955c\u9762\u53cd\u5c04\u79ef\u5206\u7684\u7b2c\u4e8c\u4e2a\u90e8\u5206\uff1a \u751f\u6210\u67e5\u627e\u7eb9\u7406\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4ee5 BRDF \u7684\u8f93\u5165 n\u22c5\\omega_i \uff08\u8303\u56f4\u5728 0.0 \u548c 1.0 \u4e4b\u95f4\uff09\u4f5c\u4e3a\u6a2a\u5750\u6807\uff0c\u4ee5\u7c97\u7cd9\u5ea6\u4f5c\u4e3a\u7eb5\u5750\u6807\u3002\u6709\u4e86\u6b64 BRDF \u79ef\u5206\u8d34\u56fe\u548c\u9884\u8fc7\u6ee4\u7684\u73af\u5883\u8d34\u56fe\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u4e24\u8005\u7ed3\u5408\u8d77\u6765\uff0c\u4ee5\u83b7\u5f97\u955c\u9762\u53cd\u5c04\u79ef\u5206\u7684\u7ed3\u679c\uff1a float lod = getMipLevelFromRoughness(roughness); vec3 prefilteredColor = textureCubeLod(PrefilteredEnvMap, refVec, lod); vec2 envBRDF = texture2D(BRDFIntegrationMap, vec2(NdotV, roughness)).xy; vec3 indirectSpecular = prefilteredColor * (F * envBRDF.x + envBRDF.y) \u81f3\u6b64\uff0c\u4f60\u5e94\u8be5\u5bf9 Epic Games \u7684\u5206\u5272\u6c42\u548c\u8fd1\u4f3c\u6cd5\u7684\u539f\u7406\uff0c\u4ee5\u53ca\u5b83\u5982\u4f55\u8fd1\u4f3c\u6c42\u89e3\u53cd\u5c04\u65b9\u7a0b\u7684\u95f4\u63a5\u955c\u9762\u53cd\u5c04\u90e8\u5206\u6709\u4e86\u4e00\u4e9b\u57fa\u672c\u5370\u8c61\u3002\u8ba9\u6211\u4eec\u73b0\u5728\u5c1d\u8bd5\u4e00\u4e0b\u81ea\u5df1\u6784\u5efa\u9884\u5377\u79ef\u90e8\u5206\u3002","title":"\u955c\u9762\u53cd\u5c04 IBL"},{"location":"07%20PBR/03%20IBL/02%20Specular%20IBL/#hdr","text":"\u9884\u6ee4\u6ce2\u73af\u5883\u8d34\u56fe\u7684\u65b9\u6cd5\u4e0e\u6211\u4eec\u5bf9\u8f90\u5c04\u5ea6\u8d34\u56fe\u6c42\u5377\u79ef\u7684\u65b9\u6cd5\u975e\u5e38\u76f8\u4f3c\u3002\u5bf9\u4e8e\u5377\u79ef\u7684\u6bcf\u4e2a\u7c97\u7cd9\u5ea6\u7ea7\u522b\uff0c\u6211\u4eec\u5c06\u6309\u987a\u5e8f\u628a\u6a21\u7cca\u540e\u7684\u7ed3\u679c\u5b58\u50a8\u5728\u9884\u6ee4\u6ce2\u8d34\u56fe\u7684 mipmap \u4e2d\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u6765\u4fdd\u5b58\u9884\u8fc7\u6ee4\u7684\u73af\u5883\u8d34\u56fe\u6570\u636e\u3002\u4e3a\u4e86\u786e\u4fdd\u4e3a\u5176 mip \u7ea7\u522b\u5206\u914d\u8db3\u591f\u7684\u5185\u5b58\uff0c\u4e00\u4e2a\u7b80\u5355\u65b9\u6cd5\u662f\u8c03\u7528 glGenerateMipmap \u3002 unsigned int prefilterMap; glGenTextures(1, &prefilterMap); glBindTexture(GL_TEXTURE_CUBE_MAP, prefilterMap); for (unsigned int i = 0; i < 6; ++i) { glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, GL_RGB16F, 128, 128, 0, GL_RGB, GL_FLOAT, nullptr); } glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_WRAP_R, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MAG_FILTER, GL_LINEAR); glGenerateMipmap(GL_TEXTURE_CUBE_MAP); \u6ce8\u610f\uff0c\u56e0\u4e3a\u6211\u4eec\u8ba1\u5212\u91c7\u6837 prefilterMap \u7684 mipmap\uff0c\u6240\u4ee5\u9700\u8981\u786e\u4fdd\u5c06\u5176\u7f29\u5c0f\u8fc7\u6ee4\u5668\u8bbe\u7f6e\u4e3a GL_LINEAR_MIPMAP_LINEAR \u4ee5\u542f\u7528\u4e09\u7ebf\u6027\u8fc7\u6ee4\u3002\u5b83\u5b58\u50a8\u7684\u662f\u9884\u6ee4\u6ce2\u7684\u955c\u9762\u53cd\u5c04\uff0c\u57fa\u7840 mip \u7ea7\u522b\u7684\u5206\u8fa8\u7387\u662f\u6bcf\u9762 128\u00d7128\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u53cd\u5c04\u6765\u8bf4\u53ef\u80fd\u5df2\u7ecf\u8db3\u591f\u4e86\uff0c\u4f46\u5982\u679c\u573a\u666f\u91cc\u6709\u5927\u91cf\u5149\u6ed1\u6750\u6599\uff08\u60f3\u60f3\u6c7d\u8f66\u4e0a\u7684\u53cd\u5c04\uff09\uff0c\u53ef\u80fd\u9700\u8981\u63d0\u9ad8\u5206\u8fa8\u7387\u3002 \u5728\u4e0a\u4e00\u8282\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u7403\u9762\u5750\u6807\u751f\u6210\u5747\u5300\u5206\u5e03\u5728\u534a\u7403 \\Omega \u4e0a\u7684\u91c7\u6837\u5411\u91cf\uff0c\u4ee5\u5bf9\u73af\u5883\u8d34\u56fe\u8fdb\u884c\u5377\u79ef\u3002\u867d\u7136\u8fd9\u4e2a\u65b9\u6cd5\u975e\u5e38\u9002\u7528\u4e8e\u8f90\u7167\u5ea6\uff0c\u4f46\u5bf9\u4e8e\u955c\u9762\u53cd\u5c04\u6548\u679c\u8f83\u5dee\u3002\u955c\u9762\u53cd\u5c04\u4f9d\u8d56\u4e8e\u8868\u9762\u7684\u7c97\u7cd9\u5ea6\uff0c\u53cd\u5c04\u5149\u7ebf\u53ef\u80fd\u6bd4\u8f83\u677e\u6563\uff0c\u4e5f\u53ef\u80fd\u6bd4\u8f83\u7d27\u5bc6\uff0c\u4f46\u662f\u4e00\u5b9a\u4f1a\u56f4\u7ed5\u7740\u53cd\u5c04\u5411\u91cf r \uff0c\u9664\u975e\u8868\u9762\u6781\u5ea6\u7c97\u7cd9\uff1a \u6240\u6709\u53ef\u80fd\u51fa\u5c04\u7684\u53cd\u5c04\u5149\u6784\u6210\u7684\u5f62\u72b6\u79f0\u4e3a \u955c\u9762\u6ce2\u74e3 \u3002\u968f\u7740\u7c97\u7cd9\u5ea6\u7684\u589e\u52a0\uff0c\u955c\u9762\u6ce2\u74e3\u7684\u5927\u5c0f\u589e\u52a0\uff1b\u968f\u7740\u5165\u5c04\u5149\u65b9\u5411\u4e0d\u540c\uff0c\u5f62\u72b6\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u56e0\u6b64\uff0c\u955c\u9762\u6ce2\u74e3\u7684\u5f62\u72b6\u9ad8\u5ea6\u4f9d\u8d56\u4e8e\u6750\u8d28\u3002 \u5728\u5fae\u8868\u9762\u6a21\u578b\u91cc\u7ed9\u5b9a\u5165\u5c04\u5149\u65b9\u5411\uff0c\u5219\u955c\u9762\u6ce2\u74e3\u6307\u5411\u5fae\u5e73\u9762\u7684\u534a\u5411\u91cf\u7684\u53cd\u5c04\u65b9\u5411\u3002\u8003\u8651\u5230\u5927\u591a\u6570\u5149\u7ebf\u6700\u7ec8\u4f1a\u53cd\u5c04\u5230\u4e00\u4e2a\u57fa\u4e8e\u534a\u5411\u91cf\u7684\u955c\u9762\u6ce2\u74e3\u5185\uff0c\u91c7\u6837\u65f6\u4ee5\u7c7b\u4f3c\u7684\u65b9\u5f0f\u9009\u53d6\u91c7\u6837\u5411\u91cf\u662f\u6709\u610f\u4e49\u7684\uff0c\u56e0\u4e3a\u5927\u90e8\u5206\u5176\u4f59\u7684\u5411\u91cf\u90fd\u88ab\u6d6a\u8d39\u6389\u4e86\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a \u91cd\u8981\u6027\u91c7\u6837 \u3002","title":"\u9884\u6ee4\u6ce2HDR\u73af\u5883\u8d34\u56fe"},{"location":"07%20PBR/03%20IBL/02%20Specular%20IBL/#_1","text":"\u4e3a\u4e86\u5145\u5206\u7406\u89e3\u91cd\u8981\u6027\u91c7\u6837\uff0c\u6211\u4eec\u9996\u5148\u8981\u4e86\u89e3\u4e00\u79cd\u6570\u5b66\u7ed3\u6784\uff0c\u79f0\u4e3a \u8499\u7279\u5361\u6d1b\u79ef\u5206 \u3002\u8499\u7279\u5361\u6d1b\u79ef\u5206\u4e3b\u8981\u662f\u7edf\u8ba1\u548c\u6982\u7387\u7406\u8bba\u7684\u7ec4\u5408\u3002\u8499\u7279\u5361\u6d1b\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u79bb\u6563\u5730\u89e3\u51b3\u4eba\u53e3\u7edf\u8ba1\u95ee\u9898\uff0c\u800c\u4e0d\u5fc5\u8003\u8651 \u6240\u6709 \u4eba\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u60a8\u60f3\u8981\u8ba1\u7b97\u4e00\u4e2a\u56fd\u5bb6\u6240\u6709\u516c\u6c11\u7684\u5e73\u5747\u8eab\u9ad8\u3002\u4e3a\u4e86\u5f97\u5230\u7ed3\u679c\uff0c\u4f60\u53ef\u4ee5\u6d4b\u91cf \u6bcf\u4e2a \u516c\u6c11\u5e76\u5bf9\u4ed6\u4eec\u7684\u8eab\u9ad8\u6c42\u5e73\u5747\uff0c\u8fd9\u6837\u4f1a\u5f97\u5230\u4f60\u9700\u8981\u7684 \u786e\u5207 \u7b54\u6848\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u5927\u591a\u6570\u56fd\u5bb6\u4eba\u6d77\u832b\u832b\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u73b0\u5b9e\uff1a\u9700\u8981\u82b1\u8d39\u592a\u591a\u7cbe\u529b\u548c\u65f6\u95f4\u3002 \u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u9009\u62e9\u4e00\u4e2a\u5c0f\u5f97\u591a\u7684 \u5b8c\u5168\u968f\u673a \uff08\u65e0\u504f\uff09\u7684\u4eba\u53e3\u5b50\u96c6\uff0c\u6d4b\u91cf\u4ed6\u4eec\u7684\u8eab\u9ad8\u5e76\u5bf9\u7ed3\u679c\u6c42\u5e73\u5747\u3002\u53ef\u80fd\u53ea\u6d4b\u91cf 100 \u4eba\uff0c\u867d\u7136\u7b54\u6848\u5e76\u975e\u7edd\u5bf9\u7cbe\u786e\uff0c\u4f46\u4f1a\u5f97\u5230\u4e00\u4e2a\u76f8\u5bf9\u63a5\u8fd1\u771f\u76f8\u7684\u7b54\u6848\uff0c\u8fd9\u4e2a\u7406\u8bba\u88ab\u79f0\u4f5c \u5927\u6570\u5b9a\u5f8b \u3002\u6211\u4eec\u7684\u60f3\u6cd5\u662f\uff0c\u5982\u679c\u4ece\u603b\u4eba\u53e3\u4e2d\u6d4b\u91cf\u4e00\u7ec4\u8f83\u5c0f\u7684\u771f\u6b63\u968f\u673a\u6837\u672c\u7684 N \uff0c\u7ed3\u679c\u5c06\u76f8\u5bf9\u63a5\u8fd1\u771f\u5b9e\u7b54\u6848\uff0c\u5e76\u968f\u7740\u6837\u672c\u6570 N \u7684\u589e\u52a0\u800c\u6108\u52a0\u63a5\u8fd1\u3002 \u8499\u7279\u5361\u7f57\u79ef\u5206\u5efa\u7acb\u5728\u5927\u6570\u5b9a\u5f8b\u7684\u57fa\u7840\u4e0a\uff0c\u5e76\u91c7\u7528\u76f8\u540c\u7684\u65b9\u6cd5\u6765\u6c42\u89e3\u79ef\u5206\u3002\u4e0d\u4e3a\u6240\u6709\u53ef\u80fd\u7684\uff08\u7406\u8bba\u4e0a\u662f\u65e0\u9650\u7684\uff09\u6837\u672c\u503c x \u6c42\u89e3\u79ef\u5206\uff0c\u800c\u662f\u7b80\u5355\u5730\u4ece\u603b\u4f53\u4e2d\u968f\u673a\u6311\u9009\u6837\u672c N \u751f\u6210\u91c7\u6837\u503c\u5e76\u6c42\u5e73\u5747\u3002\u968f\u7740 N \u7684\u589e\u52a0\uff0c\u6211\u4eec\u7684\u7ed3\u679c\u4f1a\u8d8a\u6765\u8d8a\u63a5\u8fd1\u79ef\u5206\u7684\u7cbe\u786e\u7ed3\u679c\uff1a O = \\int\\limits_{a}^{b} f(x) dx = \\frac{1}{N} \\sum_{i=0}^{N-1} \\frac{f(x)}{pdf(x)} \u4e3a\u4e86\u6c42\u89e3\u8fd9\u4e2a\u79ef\u5206\uff0c\u6211\u4eec\u5728 a \u5230 b \u4e0a\u91c7\u6837 N \u4e2a\u968f\u673a\u6837\u672c\uff0c\u5c06\u5b83\u4eec\u52a0\u5728\u4e00\u8d77\u5e76\u9664\u4ee5\u6837\u672c\u603b\u6570\u6765\u53d6\u5e73\u5747\u3002 pdf \u4ee3\u8868 \u6982\u7387\u5bc6\u5ea6\u51fd\u6570 (probability density function)\uff0c\u5b83\u7684\u542b\u4e49\u662f\u7279\u5b9a\u6837\u672c\u5728\u6574\u4e2a\u6837\u672c\u96c6\u4e0a\u53d1\u751f\u7684\u6982\u7387\u3002\u4f8b\u5982\uff0c\u4eba\u53e3\u8eab\u9ad8\u7684 pdf \u770b\u8d77\u6765\u5e94\u8be5\u50cf\u8fd9\u6837\uff1a \u4ece\u8be5\u56fe\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u5982\u679c\u6211\u4eec\u5bf9\u4eba\u53e3\u4efb\u610f\u968f\u673a\u91c7\u6837\uff0c\u90a3\u4e48\u6311\u9009\u8eab\u9ad8\u4e3a 1.70 \u7684\u4eba\u53e3\u6837\u672c\u7684\u53ef\u80fd\u6027\u66f4\u9ad8\uff0c\u800c\u6837\u672c\u8eab\u9ad8\u4e3a 1.50 \u7684\u6982\u7387\u8f83\u4f4e\u3002 \u5f53\u6d89\u53ca\u8499\u7279\u5361\u6d1b\u79ef\u5206\u65f6\uff0c\u67d0\u4e9b\u6837\u672c\u53ef\u80fd\u6bd4\u5176\u4ed6\u6837\u672c\u5177\u6709\u66f4\u9ad8\u7684\u751f\u6210\u6982\u7387\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5bf9\u4e8e\u4efb\u4f55\u4e00\u822c\u7684\u8499\u7279\u5361\u6d1b\u4f30\u8ba1\uff0c\u6211\u4eec\u90fd\u4f1a\u6839\u636e pdf \u5c06\u91c7\u6837\u503c\u9664\u4ee5\u6216\u4e58\u4ee5\u91c7\u6837\u6982\u7387\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u6bcf\u6b21\u9700\u8981\u4f30\u7b97\u79ef\u5206\u7684\u65f6\u5019\uff0c\u751f\u6210\u7684\u6837\u672c\u90fd\u662f\u5747\u5300\u5206\u5e03\u7684\uff0c\u6982\u7387\u5b8c\u5168\u76f8\u7b49\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u7684\u4f30\u8ba1\u662f \u65e0\u504f \u7684\uff0c\u8fd9\u610f\u5473\u7740\u968f\u7740\u6837\u672c\u6570\u91cf\u7684\u4e0d\u65ad\u589e\u52a0\uff0c\u6211\u4eec\u6700\u7ec8\u5c06 \u6536\u655b \u5230\u79ef\u5206\u7684 \u7cbe\u786e \u89e3\u3002 \u4f46\u662f\uff0c\u67d0\u4e9b\u8499\u7279\u5361\u6d1b\u4f30\u7b97\u662f \u6709\u504f \u7684\uff0c\u8fd9\u610f\u5473\u7740\u751f\u6210\u7684\u6837\u672c\u5e76\u4e0d\u662f\u5b8c\u5168\u968f\u673a\u7684\uff0c\u800c\u662f\u96c6\u4e2d\u4e8e\u7279\u5b9a\u7684\u503c\u6216\u65b9\u5411\u3002\u8fd9\u4e9b\u6709\u504f\u7684\u8499\u7279\u5361\u6d1b\u4f30\u7b97\u5177\u6709 \u66f4\u5feb\u7684\u6536\u655b\u901f\u5ea6 \uff0c\u5b83\u4eec\u4f1a\u4ee5\u66f4\u5feb\u7684\u901f\u5ea6\u6536\u655b\u5230\u7cbe\u786e\u89e3\uff0c\u4f46\u662f\u7531\u4e8e\u5176\u6709\u504f\u6027\uff0c\u53ef\u80fd\u6c38\u8fdc\u4e0d\u4f1a\u6536\u655b\u5230\u7cbe\u786e\u89e3\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u53ef\u4ee5\u63a5\u53d7\u7684\u6298\u8877\u65b9\u6848\uff0c\u5c24\u5176\u662f\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d\u3002\u56e0\u4e3a\u53ea\u8981\u7ed3\u679c\u5728\u89c6\u89c9\u4e0a\u53ef\u4ee5\u63a5\u53d7\uff0c\u89e3\u51b3\u65b9\u6848\u7684\u7cbe\u786e\u6027\u5c31\u4e0d\u592a\u91cd\u8981\u3002\u4e0b\u6587\u6211\u4eec\u5c06\u4f1a\u63d0\u5230\u4e00\u79cd\uff08\u6709\u504f\u7684\uff09\u91cd\u8981\u6027\u91c7\u6837\uff0c\u5176\u751f\u6210\u7684\u6837\u672c\u504f\u5411\u7279\u5b9a\u7684\u65b9\u5411\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u5c06\u6bcf\u4e2a\u6837\u672c\u4e58\u4ee5\u6216\u9664\u4ee5\u76f8\u5e94\u7684 pdf \u518d\u6c42\u548c\u3002 \u8499\u7279\u5361\u6d1b\u79ef\u5206\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d\u975e\u5e38\u666e\u904d\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u79cd\u4ee5\u9ad8\u6548\u7684\u79bb\u6563\u65b9\u5f0f\u5bf9\u8fde\u7eed\u7684\u79ef\u5206\u6c42\u8fd1\u4f3c\u800c\u4e14\u975e\u5e38\u76f4\u89c2\u7684\u65b9\u6cd5\uff1a\u5bf9\u4efb\u4f55\u9762\u79ef/\u4f53\u79ef\u8fdb\u884c\u91c7\u6837\u2014\u2014\u4f8b\u5982\u534a\u7403 \\Omega \u2014\u2014\u5728\u8be5\u9762\u79ef/\u4f53\u79ef\u5185\u751f\u6210\u6570\u91cf N \u7684\u968f\u673a\u91c7\u6837\uff0c\u6743\u8861\u6bcf\u4e2a\u6837\u672c\u5bf9\u6700\u7ec8\u7ed3\u679c\u7684\u8d21\u732e\u5e76\u6c42\u548c\u3002 \u8499\u7279\u5361\u6d1b\u79ef\u5206\u662f\u4e00\u4e2a\u5e9e\u5927\u7684\u6570\u5b66\u4e3b\u9898\uff0c\u5728\u6b64\u4e0d\u518d\u8d58\u8ff0\uff0c\u4f46\u6709\u4e00\u70b9\u9700\u8981\u63d0\u5230\uff1a\u751f\u6210\u968f\u673a\u6837\u672c\u7684\u65b9\u6cd5\u4e5f\u591a\u79cd\u591a\u6837\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6bcf\u6b21\u91c7\u6837\u90fd\u662f\u6211\u4eec\u719f\u6089\u7684\u5b8c\u5168\uff08\u4f2a\uff09\u968f\u673a\uff0c\u4e0d\u8fc7\u5229\u7528\u534a\u968f\u673a\u5e8f\u5217\u7684\u67d0\u4e9b\u5c5e\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u751f\u6210\u867d\u7136\u662f\u968f\u673a\u6837\u672c\u4f46\u5177\u6709\u4e00\u4e9b\u6709\u8da3\u6027\u8d28\u7684\u6837\u672c\u5411\u91cf\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e00\u79cd\u540d\u4e3a \u4f4e\u5dee\u5f02\u5e8f\u5217 \u7684\u4e1c\u897f\u8fdb\u884c\u8499\u7279\u5361\u6d1b\u79ef\u5206\uff0c\u8be5\u5e8f\u5217\u751f\u6210\u7684\u4ecd\u7136\u662f\u968f\u673a\u6837\u672c\uff0c\u4f46\u6837\u672c\u5206\u5e03\u66f4\u5747\u5300\uff1a \u5f53\u4f7f\u7528\u4f4e\u5dee\u5f02\u5e8f\u5217\u751f\u6210\u8499\u7279\u5361\u6d1b\u6837\u672c\u5411\u91cf\u65f6\uff0c\u8be5\u8fc7\u7a0b\u79f0\u4e3a \u62df\u8499\u7279\u5361\u6d1b\u79ef\u5206 \u3002\u62df\u8499\u7279\u5361\u6d1b\u65b9\u6cd5\u5177\u6709\u66f4\u5feb\u7684 \u6536\u655b\u901f\u5ea6 \uff0c\u8fd9\u4f7f\u5f97\u5b83\u5bf9\u4e8e\u6027\u80fd\u7e41\u91cd\u7684\u5e94\u7528\u5f88\u6709\u7528\u3002 \u9274\u4e8e\u6211\u4eec\u65b0\u83b7\u5f97\u7684\u6709\u5173\u8499\u7279\u5361\u6d1b\uff08Monte Carlo\uff09\u548c\u62df\u8499\u7279\u5361\u6d1b\uff08Quasi-Monte Carlo\uff09\u79ef\u5206\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6709\u8da3\u7684\u5c5e\u6027\u6765\u83b7\u5f97\u66f4\u5feb\u7684\u6536\u655b\u901f\u5ea6\uff0c\u8fd9\u5c31\u662f \u91cd\u8981\u6027\u91c7\u6837 \u3002\u6211\u4eec\u5728\u524d\u6587\u5df2\u7ecf\u63d0\u5230\u8fc7\u5b83\uff0c\u4f46\u662f\u5728\u955c\u9762\u53cd\u5c04\u7684\u60c5\u51b5\u4e0b\uff0c\u53cd\u5c04\u7684\u5149\u5411\u91cf\u88ab\u9650\u5236\u5728\u955c\u9762\u6ce2\u74e3\u4e2d\uff0c\u6ce2\u74e3\u7684\u5927\u5c0f\u53d6\u51b3\u4e8e\u8868\u9762\u7684\u7c97\u7cd9\u5ea6\u3002\u65e2\u7136\u955c\u9762\u6ce2\u74e3\u5916\u7684\u4efb\u4f55\uff08\u62df\uff09\u968f\u673a\u751f\u6210\u7684\u6837\u672c\u4e0e\u955c\u9762\u79ef\u5206\u65e0\u5173\uff0c\u56e0\u6b64\u5c06\u6837\u672c\u96c6\u4e2d\u5728\u955c\u9762\u6ce2\u74e3\u5185\u751f\u6210\u662f\u6709\u610f\u4e49\u7684\uff0c\u4f46\u4ee3\u4ef7\u662f\u8499\u7279\u5361\u6d1b\u4f30\u7b97\u4f1a\u4ea7\u751f\u504f\u5dee\u3002 \u672c\u8d28\u4e0a\u6765\u8bf4\uff0c\u8fd9\u5c31\u662f\u91cd\u8981\u6027\u91c7\u6837\u7684\u6838\u5fc3\uff1a\u53ea\u5728\u67d0\u4e9b\u533a\u57df\u751f\u6210\u91c7\u6837\u5411\u91cf\uff0c\u8be5\u533a\u57df\u56f4\u7ed5\u5fae\u8868\u9762\u534a\u5411\u91cf\uff0c\u53d7\u7c97\u7cd9\u5ea6\u9650\u5236\u3002\u901a\u8fc7\u5c06\u62df\u8499\u7279\u5361\u6d1b\u91c7\u6837\u4e0e\u4f4e\u5dee\u5f02\u5e8f\u5217\u76f8\u7ed3\u5408\uff0c\u5e76\u4f7f\u7528\u91cd\u8981\u6027\u91c7\u6837\u504f\u7f6e\u6837\u672c\u5411\u91cf\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u5f88\u9ad8\u7684\u6536\u655b\u901f\u5ea6\u3002\u56e0\u4e3a\u6211\u4eec\u6c42\u89e3\u7684\u901f\u5ea6\u66f4\u5feb\uff0c\u6240\u4ee5\u8981\u8fbe\u5230\u8db3\u591f\u7684\u8fd1\u4f3c\u5ea6\uff0c\u6211\u4eec\u6240\u9700\u8981\u7684\u6837\u672c\u66f4\u5c11\u3002\u56e0\u6b64\uff0c\u8fd9\u5957\u7ec4\u5408\u65b9\u6cd5\u751a\u81f3\u53ef\u4ee5\u5141\u8bb8\u56fe\u5f62\u5e94\u7528\u7a0b\u5e8f\u5b9e\u65f6\u6c42\u89e3\u955c\u9762\u79ef\u5206\uff0c\u867d\u7136\u6bd4\u9884\u8ba1\u7b97\u7ed3\u679c\u8fd8\u662f\u8981\u6162\u5f97\u591a\u3002","title":"\u8499\u7279\u5361\u6d1b\u79ef\u5206\u548c\u91cd\u8981\u6027\u91c7\u6837"},{"location":"07%20PBR/03%20IBL/02%20Specular%20IBL/#_2","text":"\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u91cd\u8981\u6027\u91c7\u6837\u6765\u9884\u8ba1\u7b97\u95f4\u63a5\u53cd\u5c04\u65b9\u7a0b\u7684\u955c\u9762\u53cd\u5c04\u90e8\u5206\uff0c\u8be5\u91c7\u6837\u57fa\u4e8e\u62df\u8499\u7279\u5361\u6d1b\u65b9\u6cd5\u7ed9\u51fa\u4e86\u968f\u673a\u7684\u4f4e\u5dee\u5f02\u5e8f\u5217\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u7684\u5e8f\u5217\u88ab\u79f0\u4e3a Hammersley \u5e8f\u5217 \uff0c Holger Dammertz \u66fe\u4ed4\u7ec6\u63cf\u8ff0\u8fc7\u5b83\u3002Hammersley \u5e8f\u5217\u662f\u57fa\u4e8e Van Der Corput \u5e8f\u5217 \uff0c\u8be5\u5e8f\u5217\u662f\u628a\u5341\u8fdb\u5236\u6570\u5b57\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u955c\u50cf\u7ffb\u8f6c\u5230\u5c0f\u6570\u70b9\u53f3\u8fb9\u800c\u5f97\u3002\uff08\u8bd1\u6ce8\uff1a\u539f\u6587\u4e3a Van Der Corpus \u7591\u4f3c\u7b14\u8bef\uff0c\u4e0b\u6587\u5404\u5904\u540c\uff09 \u7ed9\u51fa\u4e00\u4e9b\u5de7\u5999\u7684\u6280\u5de7\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7740\u8272\u5668\u7a0b\u5e8f\u4e2d\u975e\u5e38\u6709\u6548\u5730\u751f\u6210 Van Der Corput \u5e8f\u5217\uff0c\u6211\u4eec\u5c06\u7528\u5b83\u6765\u83b7\u5f97 Hammersley \u5e8f\u5217\uff0c\u8bbe\u603b\u6837\u672c\u6570\u4e3a N \uff0c\u6837\u672c\u7d22\u5f15\u4e3a i \uff1a float RadicalInverse_VdC(uint bits) { bits = (bits << 16u) | (bits >> 16u); bits = ((bits & 0x55555555u) << 1u) | ((bits & 0xAAAAAAAAu) >> 1u); bits = ((bits & 0x33333333u) << 2u) | ((bits & 0xCCCCCCCCu) >> 2u); bits = ((bits & 0x0F0F0F0Fu) << 4u) | ((bits & 0xF0F0F0F0u) >> 4u); bits = ((bits & 0x00FF00FFu) << 8u) | ((bits & 0xFF00FF00u) >> 8u); return float(bits) * 2.3283064365386963e-10; // / 0x100000000 } // ---------------------------------------------------------------------------- vec2 Hammersley(uint i, uint N) { return vec2(float(i)/float(N), RadicalInverse_VdC(i)); } GLSL \u7684 Hammersley \u51fd\u6570\u53ef\u4ee5\u83b7\u53d6\u5927\u5c0f\u4e3a N \u7684\u6837\u672c\u96c6\u4e2d\u7684\u4f4e\u5dee\u5f02\u6837\u672c i \u3002 Important \u65e0\u9700\u4f4d\u8fd0\u7b97\u7684 Hammersley \u5e8f\u5217 \u5e76\u975e\u6240\u6709 OpenGL \u76f8\u5173\u9a71\u52a8\u7a0b\u5e8f\u90fd\u652f\u6301\u4f4d\u8fd0\u7b97\u7b26\uff08\u4f8b\u5982WebGL\u548cOpenGL ES 2.0\uff09\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u4e0d\u4f9d\u8d56\u4f4d\u8fd0\u7b97\u7b26\u7684\u66ff\u4ee3\u7248\u672c Van Der Corput \u5e8f\u5217\uff1a float VanDerCorpus(uint n, uint base) { float invBase = 1.0 / float(base); float denom = 1.0; float result = 0.0; for(uint i = 0u; i < 32u; ++i) { if(n > 0u) { denom = mod(float(n), 2.0); result += denom * invBase; invBase = invBase / 2.0; n = uint(float(n) / 2.0); } } return result; } // ---------------------------------------------------------------------------- vec2 HammersleyNoBitOps(uint i, uint N) { return vec2(float(i)/float(N), VanDerCorpus(i, 2u)); } \u8bf7\u6ce8\u610f\uff0c\u7531\u4e8e\u65e7\u786c\u4ef6\u4e2d\u7684 GLSL \u5faa\u73af\u9650\u5236\uff0c\u8be5\u5e8f\u5217\u5faa\u73af\u904d\u5386\u4e86\u6240\u6709\u53ef\u80fd\u7684 32 \u4f4d\uff0c\u6027\u80fd\u7565\u5dee\u3002\u4f46\u662f\u5982\u679c\u4f60\u6ca1\u6709\u4f4d\u8fd0\u7b97\u7b26\u53ef\u7528\u7684\u8bdd\u53ef\u4ee5\u8003\u8651\u5b83\uff0c\u5b83\u53ef\u4ee5\u5728\u6240\u6709\u786c\u4ef6\u4e0a\u8fd0\u884c\u3002","title":"\u4f4e\u5dee\u5f02\u5e8f\u5217"},{"location":"07%20PBR/03%20IBL/02%20Specular%20IBL/#ggx","text":"\u6709\u522b\u4e8e\u5747\u5300\u6216\u7eaf\u968f\u673a\u5730\uff08\u6bd4\u5982\u8499\u7279\u5361\u6d1b\uff09\u5728\u79ef\u5206\u534a\u7403 \\Omega \u4ea7\u751f\u91c7\u6837\u5411\u91cf\uff0c\u6211\u4eec\u7684\u91c7\u6837\u4f1a\u6839\u636e\u7c97\u7cd9\u5ea6\uff0c\u504f\u5411\u5fae\u8868\u9762\u7684\u534a\u5411\u91cf\u7684\u5b8f\u89c2\u53cd\u5c04\u65b9\u5411\u3002\u91c7\u6837\u8fc7\u7a0b\u5c06\u4e0e\u6211\u4eec\u4e4b\u524d\u770b\u5230\u7684\u8fc7\u7a0b\u76f8\u4f3c\uff1a\u5f00\u59cb\u4e00\u4e2a\u5927\u5faa\u73af\uff0c\u751f\u6210\u4e00\u4e2a\u968f\u673a\uff08\u4f4e\u5dee\u5f02\uff09\u5e8f\u5217\u503c\uff0c\u7528\u8be5\u5e8f\u5217\u503c\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\u751f\u6210\u6837\u672c\u5411\u91cf\uff0c\u5c06\u6837\u672c\u5411\u91cf\u53d8\u6362\u5230\u4e16\u754c\u7a7a\u95f4\u5e76\u5bf9\u573a\u666f\u7684\u8f90\u5c04\u5ea6\u91c7\u6837\u3002\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u6211\u4eec\u73b0\u5728\u4f7f\u7528\u4f4e\u5dee\u5f02\u5e8f\u5217\u503c\u4f5c\u4e3a\u8f93\u5165\u6765\u751f\u6210\u91c7\u6837\u5411\u91cf\uff1a const uint SAMPLE_COUNT = 4096u; for(uint i = 0u; i < SAMPLE_COUNT; ++i) { vec2 Xi = Hammersley(i, SAMPLE_COUNT); } \u6b64\u5916\uff0c\u8981\u6784\u5efa\u91c7\u6837\u5411\u91cf\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u65b9\u6cd5\u5b9a\u5411\u548c\u504f\u79fb\u91c7\u6837\u5411\u91cf\uff0c\u4ee5\u4f7f\u5176\u671d\u5411\u7279\u5b9a\u7c97\u7cd9\u5ea6\u7684\u955c\u9762\u6ce2\u74e3\u65b9\u5411\u3002\u6211\u4eec\u53ef\u4ee5\u5982\u7406\u8bba\u6559\u7a0b\u4e2d\u6240\u8ff0\u4f7f\u7528 NDF\uff0c\u5e76\u5c06 GGX NDF \u7ed3\u5408\u5230 Epic Games \u6240\u8ff0\u7684\u7403\u5f62\u91c7\u6837\u5411\u91cf\u7684\u5904\u7406\u4e2d\uff1a vec3 ImportanceSampleGGX(vec2 Xi, vec3 N, float roughness) { float a = roughness*roughness; float phi = 2.0 * PI * Xi.x; float cosTheta = sqrt((1.0 - Xi.y) / (1.0 + (a*a - 1.0) * Xi.y)); float sinTheta = sqrt(1.0 - cosTheta*cosTheta); // from spherical coordinates to cartesian coordinates vec3 H; H.x = cos(phi) * sinTheta; H.y = sin(phi) * sinTheta; H.z = cosTheta; // from tangent-space vector to world-space sample vector vec3 up = abs(N.z) < 0.999 ? vec3(0.0, 0.0, 1.0) : vec3(1.0, 0.0, 0.0); vec3 tangent = normalize(cross(up, N)); vec3 bitangent = cross(N, tangent); vec3 sampleVec = tangent * H.x + bitangent * H.y + N * H.z; return normalize(sampleVec); } \u57fa\u4e8e\u7279\u5b9a\u7684\u7c97\u7cd9\u5ea6\u8f93\u5165\u548c\u4f4e\u5dee\u5f02\u5e8f\u5217\u503c Xi \uff0c\u6211\u4eec\u83b7\u5f97\u4e86\u4e00\u4e2a\u91c7\u6837\u5411\u91cf\uff0c\u8be5\u5411\u91cf\u5927\u4f53\u56f4\u7ed5\u7740\u9884\u4f30\u7684\u5fae\u8868\u9762\u7684\u534a\u5411\u91cf\u3002\u6ce8\u610f\uff0c\u6839\u636e\u8fea\u58eb\u5c3c\u5bf9 PBR \u7684\u7814\u7a76\uff0cEpic Games \u4f7f\u7528\u4e86\u5e73\u65b9\u7c97\u7cd9\u5ea6\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u89c6\u89c9\u6548\u679c\u3002 \u4f7f\u7528\u4f4e\u5dee\u5f02 Hammersley \u5e8f\u5217\u548c\u4e0a\u8ff0\u5b9a\u4e49\u7684\u6837\u672c\u751f\u6210\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u6700\u7ec8\u5b8c\u6210\u9884\u6ee4\u6ce2\u5668\u5377\u79ef\u7740\u8272\u5668\uff1a #version 330 core out vec4 FragColor; in vec3 localPos; uniform samplerCube environmentMap; uniform float roughness; const float PI = 3.14159265359; float RadicalInverse_VdC(uint bits); vec2 Hammersley(uint i, uint N); vec3 ImportanceSampleGGX(vec2 Xi, vec3 N, float roughness); void main() { vec3 N = normalize(localPos); vec3 R = N; vec3 V = R; const uint SAMPLE_COUNT = 1024u; float totalWeight = 0.0; vec3 prefilteredColor = vec3(0.0); for(uint i = 0u; i < SAMPLE_COUNT; ++i) { vec2 Xi = Hammersley(i, SAMPLE_COUNT); vec3 H = ImportanceSampleGGX(Xi, N, roughness); vec3 L = normalize(2.0 * dot(V, H) * H - V); float NdotL = max(dot(N, L), 0.0); if(NdotL > 0.0) { prefilteredColor += texture(environmentMap, L).rgb * NdotL; totalWeight += NdotL; } } prefilteredColor = prefilteredColor / totalWeight; FragColor = vec4(prefilteredColor, 1.0); } \u8f93\u5165\u7684\u7c97\u7cd9\u5ea6\u968f\u7740\u9884\u8fc7\u6ee4\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u7684 mipmap \u7ea7\u522b\u53d8\u5316\uff08\u4ece0.0\u52301.0\uff09\uff0c\u6211\u4eec\u6839\u636e\u636e\u7c97\u7cd9\u5ea6\u9884\u8fc7\u6ee4\u73af\u5883\u8d34\u56fe\uff0c\u628a\u7ed3\u679c\u5b58\u5728 prefilteredColor \u91cc\u3002\u518d\u7528 prefilteredColor \u9664\u4ee5\u91c7\u6837\u6743\u91cd\u603b\u548c\uff0c\u5176\u4e2d\u5bf9\u6700\u7ec8\u7ed3\u679c\u5f71\u54cd\u8f83\u5c0f\uff08 NdotL \u8f83\u5c0f\uff09\u7684\u91c7\u6837\u6700\u7ec8\u6743\u91cd\u4e5f\u8f83\u5c0f\u3002","title":"GGX \u91cd\u8981\u6027\u91c7\u6837"},{"location":"07%20PBR/03%20IBL/02%20Specular%20IBL/#mipmap","text":"\u5269\u4e0b\u8981\u505a\u7684\u5c31\u662f\u8ba9 OpenGL \u5728\u591a\u4e2a mipmap \u7ea7\u522b\u4e0a\u4ee5\u4e0d\u540c\u7684\u7c97\u7cd9\u5ea6\u503c\u9884\u8fc7\u6ee4\u73af\u5883\u8d34\u56fe\u3002\u6709\u4e86\u6700\u5f00\u59cb\u7684\u8f90\u7167\u5ea6\u6559\u7a0b\u4f5c\u4e3a\u57fa\u7840\uff0c\u5b9e\u9645\u4e0a\u5f88\u7b80\u5355\uff1a prefilterShader.use(); prefilterShader.setInt(\"environmentMap\", 0); prefilterShader.setMat4(\"projection\", captureProjection); glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_CUBE_MAP, envCubemap); glBindFramebuffer(GL_FRAMEBUFFER, captureFBO); unsigned int maxMipLevels = 5; for (unsigned int mip = 0; mip < maxMipLevels; ++mip) { // reisze framebuffer according to mip-level size. unsigned int mipWidth = 128 * std::pow(0.5, mip); unsigned int mipHeight = 128 * std::pow(0.5, mip); glBindRenderbuffer(GL_RENDERBUFFER, captureRBO); glRenderbufferStorage(GL_RENDERBUFFER, GL_DEPTH_COMPONENT24, mipWidth, mipHeight); glViewport(0, 0, mipWidth, mipHeight); float roughness = (float)mip / (float)(maxMipLevels - 1); prefilterShader.setFloat(\"roughness\", roughness); for (unsigned int i = 0; i < 6; ++i) { prefilterShader.setMat4(\"view\", captureViews[i]); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_CUBE_MAP_POSITIVE_X + i, prefilterMap, mip); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); renderCube(); } } glBindFramebuffer(GL_FRAMEBUFFER, 0); \u8fd9\u4e2a\u8fc7\u7a0b\u7c7b\u4f3c\u4e8e\u8f90\u7167\u5ea6\u8d34\u56fe\u5377\u79ef\uff0c\u4f46\u662f\u8fd9\u6b21\u6211\u4eec\u5c06\u5e27\u7f13\u51b2\u533a\u7f29\u653e\u5230\u9002\u5f53\u7684 mipmap \u5c3a\u5bf8\uff0c mip \u7ea7\u522b\u6bcf\u589e\u52a0\u4e00\u7ea7\uff0c\u5c3a\u5bf8\u7f29\u5c0f\u4e3a\u4e00\u534a\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5728 glFramebufferTexture2D \u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u4e2d\u6307\u5b9a\u8981\u6e32\u67d3\u7684\u76ee\u6807 mip \u7ea7\u522b\uff0c\u7136\u540e\u5c06\u8981\u9884\u8fc7\u6ee4\u7684\u7c97\u7cd9\u5ea6\u4f20\u7ed9\u9884\u8fc7\u6ee4\u7740\u8272\u5668\u3002 \u8fd9\u6837\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u5f20\u7ecf\u8fc7\u9002\u5f53\u9884\u8fc7\u6ee4\u7684\u73af\u5883\u8d34\u56fe\uff0c\u8bbf\u95ee\u8be5\u8d34\u56fe\u65f6\u6307\u5b9a\u7684 mip \u7b49\u7ea7\u8d8a\u9ad8\uff0c\u83b7\u5f97\u7684\u53cd\u5c04\u5c31\u8d8a\u6a21\u7cca\u3002\u5982\u679c\u6211\u4eec\u5728\u5929\u7a7a\u76d2\u7740\u8272\u5668\u4e2d\u663e\u793a\u8fd9\u5f20\u9884\u8fc7\u6ee4\u7684\u73af\u5883\u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u5e76\u5728\u5176\u7740\u8272\u5668\u4e2d\u5f3a\u5236\u5728\u5176\u7b2c\u4e00\u4e2a mip \u7ea7\u522b\u4ee5\u4e0a\u91c7\u6837\uff0c\u5982\u4e0b\u6240\u793a\uff1a vec3 envColor = textureLod(environmentMap, WorldPos, 1.2).rgb; \u6211\u4eec\u5f97\u5230\u7684\u7ed3\u679c\u770b\u8d77\u6765\u786e\u5b9e\u50cf\u539f\u59cb\u73af\u5883\u7684\u6a21\u7cca\u7248\u672c\uff1a \u5982\u679c HDR \u73af\u5883\u8d34\u56fe\u7684\u9884\u8fc7\u6ee4\u770b\u8d77\u6765\u5dee\u4e0d\u591a\u6ca1\u95ee\u9898\uff0c\u5c1d\u8bd5\u4e00\u4e0b\u4e0d\u540c\u7684 mipmap \u7ea7\u522b\uff0c\u89c2\u5bdf\u9884\u8fc7\u6ee4\u8d34\u56fe\u968f\u7740 mip \u7ea7\u522b\u589e\u52a0\uff0c\u53cd\u5c04\u9010\u6e10\u4ece\u9510\u5229\u53d8\u6a21\u7cca\u7684\u8fc7\u7a0b\u3002","title":"\u6355\u83b7\u9884\u8fc7\u6ee4 mipmap \u7ea7\u522b"},{"location":"07%20PBR/03%20IBL/02%20Specular%20IBL/#_3","text":"\u5f53\u524d\u7684\u9884\u8fc7\u6ee4\u8d34\u56fe\u53ef\u4ee5\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u6b63\u5e38\u5de5\u4f5c\uff0c\u4e0d\u8fc7\u4f60\u8fdf\u65e9\u4f1a\u9047\u5230\u51e0\u4e2a\u4e0e\u9884\u8fc7\u6ee4\u5377\u79ef\u76f4\u63a5\u76f8\u5173\u7684\u6e32\u67d3\u95ee\u9898\u3002\u6211\u5c06\u5728\u8fd9\u91cc\u5217\u51fa\u6700\u5e38\u89c1\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u4ee5\u53ca\u5982\u4f55\u4fee\u590d\u5b83\u4eec\u3002","title":"\u9884\u8fc7\u6ee4\u5377\u79ef\u7684\u4f2a\u50cf"},{"location":"07%20PBR/03%20IBL/02%20Specular%20IBL/#_4","text":"\u5728\u5177\u6709\u7c97\u7cd9\u8868\u9762\u7684\u8868\u9762\u4e0a\u5bf9\u9884\u8fc7\u6ee4\u8d34\u56fe\u91c7\u6837\uff0c\u4e5f\u5c31\u7b49\u540c\u4e8e\u5728\u8f83\u4f4e\u7684 mip \u7ea7\u522b\u4e0a\u5bf9\u9884\u8fc7\u6ee4\u8d34\u56fe\u91c7\u6837\u3002\u5728\u5bf9\u7acb\u65b9\u4f53\u8d34\u56fe\u8fdb\u884c\u91c7\u6837\u65f6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cOpenGL\u4e0d\u4f1a\u5728\u7acb\u65b9\u4f53\u9762 \u4e4b\u95f4 \u8fdb\u884c\u7ebf\u6027\u63d2\u503c\u3002\u7531\u4e8e\u8f83\u4f4e\u7684 mip \u7ea7\u522b\u5177\u6709\u66f4\u4f4e\u7684\u5206\u8fa8\u7387\uff0c\u5e76\u4e14\u9884\u8fc7\u6ee4\u8d34\u56fe\u4ee3\u8868\u4e86\u4e0e\u66f4\u5927\u7684\u91c7\u6837\u6ce2\u74e3\u5377\u79ef\uff0c\u56e0\u6b64\u7f3a\u4e4f \u7acb\u65b9\u4f53\u7684\u9762\u548c\u9762\u4e4b\u95f4\u7684\u6ee4\u6ce2 \u7684\u95ee\u9898\u5c31\u66f4\u660e\u663e\uff1a \u5e78\u8fd0\u7684\u662f\uff0cOpenGL \u53ef\u4ee5\u542f\u7528 GL_TEXTURE_CUBE_MAP_SEAMLESS \uff0c\u4ee5\u4e3a\u6211\u4eec\u63d0\u4f9b\u5728\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u9762\u4e4b\u95f4\u8fdb\u884c\u6b63\u786e\u8fc7\u6ee4\u7684\u9009\u9879\uff1a glEnable(GL_TEXTURE_CUBE_MAP_SEAMLESS);","title":"\u9ad8\u7c97\u7cd9\u5ea6\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u63a5\u7f1d"},{"location":"07%20PBR/03%20IBL/02%20Specular%20IBL/#_5","text":"\u7531\u4e8e\u955c\u9762\u53cd\u5c04\u4e2d\u5149\u5f3a\u5ea6\u7684\u53d8\u5316\u5927\uff0c\u9ad8\u9891\u7ec6\u8282\u591a\uff0c\u6240\u4ee5\u5bf9\u955c\u9762\u53cd\u5c04\u8fdb\u884c\u5377\u79ef\u9700\u8981\u5927\u91cf\u91c7\u6837\uff0c\u624d\u80fd\u6b63\u786e\u53cd\u6620 HDR \u73af\u5883\u53cd\u5c04\u7684\u6df7\u4e71\u53d8\u5316\u3002\u6211\u4eec\u5df2\u7ecf\u8fdb\u884c\u4e86\u5927\u91cf\u7684\u91c7\u6837\uff0c\u4f46\u662f\u5728\u67d0\u4e9b\u73af\u5883\u4e0b\uff0c\u5728\u67d0\u4e9b\u8f83\u7c97\u7cd9\u7684 mip \u7ea7\u522b\u4e0a\u53ef\u80fd\u4ecd\u7136\u4e0d\u591f\uff0c\u5bfc\u81f4\u660e\u4eae\u533a\u57df\u5468\u56f4\u51fa\u73b0\u70b9\u72b6\u56fe\u6848\uff1a \u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u8fdb\u4e00\u6b65\u589e\u52a0\u6837\u672c\u6570\u91cf\uff0c\u4f46\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u8fd8\u662f\u4e0d\u591f\u3002\u53e6\u4e00\u79cd\u65b9\u6848\u5982 Chetan Jags \u6240\u8ff0\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u9884\u8fc7\u6ee4\u5377\u79ef\u65f6\uff0c\u4e0d\u76f4\u63a5\u91c7\u6837\u73af\u5883\u8d34\u56fe\uff0c\u800c\u662f\u57fa\u4e8e\u79ef\u5206\u7684 PDF \u548c\u7c97\u7cd9\u5ea6\u91c7\u6837\u73af\u5883\u8d34\u56fe\u7684 mipmap \uff0c\u4ee5\u51cf\u5c11\u4f2a\u50cf\uff1a float D = DistributionGGX(NdotH, roughness); float pdf = (D * NdotH / (4.0 * HdotV)) + 0.0001; float resolution = 512.0; // resolution of source cubemap (per face) float saTexel = 4.0 * PI / (6.0 * resolution * resolution); float saSample = 1.0 / (float(SAMPLE_COUNT) * pdf + 0.0001); float mipLevel = roughness == 0.0 ? 0.0 : 0.5 * log2(saSample / saTexel); \u65e2\u7136\u8981\u91c7\u6837 mipmap \uff0c\u4e0d\u8981\u5fd8\u8bb0\u5728\u73af\u5883\u8d34\u56fe\u4e0a\u5f00\u542f\u4e09\u7ebf\u6027\u8fc7\u6ee4\uff1a glBindTexture(GL_TEXTURE_CUBE_MAP, envCubemap); glTexParameteri(GL_TEXTURE_CUBE_MAP, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR); \u8bbe\u7f6e\u7acb\u65b9\u4f53\u8d34\u56fe\u7684\u57fa\u672c\u7eb9\u7406\u540e\uff0c\u8ba9 OpenGL \u751f\u6210 mipmap\uff1a // convert HDR equirectangular environment map to cubemap equivalent [...] // then generate mipmaps glBindTexture(GL_TEXTURE_CUBE_MAP, envCubemap); glGenerateMipmap(GL_TEXTURE_CUBE_MAP); \u8fd9\u4e2a\u65b9\u6cd5\u6548\u679c\u975e\u5e38\u597d\uff0c\u53ef\u4ee5\u53bb\u9664\u9884\u8fc7\u6ee4\u8d34\u56fe\u4e2d\u8f83\u7c97\u7cd9\u8868\u9762\u4e0a\u7684\u5927\u591a\u6570\u751a\u81f3\u5168\u90e8\u4eae\u70b9\u3002","title":"\u9884\u8fc7\u6ee4\u5377\u79ef\u7684\u4eae\u70b9"},{"location":"07%20PBR/03%20IBL/02%20Specular%20IBL/#brdf","text":"\u9884\u8fc7\u6ee4\u7684\u73af\u5883\u8d34\u56fe\u5df2\u7ecf\u53ef\u4ee5\u8bbe\u7f6e\u5e76\u8fd0\u884c\uff0c\u6211\u4eec\u53ef\u4ee5\u96c6\u4e2d\u7cbe\u529b\u4e8e\u6c42\u548c\u8fd1\u4f3c\u7684\u7b2c\u4e8c\u90e8\u5206\uff1aBRDF\u3002\u8ba9\u6211\u4eec\u518d\u6b21\u7b80\u8981\u56de\u987e\u4e00\u4e0b\u955c\u9762\u90e8\u5206\u7684\u5206\u5272\u6c42\u548c\u8fd1\u4f3c\u6cd5\uff1a L_o(p,\\omega_o) = \\int\\limits_{\\Omega} L_i(p,\\omega_i) d\\omega_i * \\int\\limits_{\\Omega} f_r(p, \\omega_i, \\omega_o) n \\cdot \\omega_i d\\omega_i \u6211\u4eec\u5df2\u7ecf\u5728\u9884\u8fc7\u6ee4\u8d34\u56fe\u7684\u5404\u4e2a\u7c97\u7cd9\u5ea6\u7ea7\u522b\u4e0a\u9884\u8ba1\u7b97\u4e86\u5206\u5272\u6c42\u548c\u8fd1\u4f3c\u7684\u5de6\u534a\u90e8\u5206\u3002\u53f3\u534a\u90e8\u5206\u8981\u6c42\u6211\u4eec\u5728 n \\cdot \\omega_o \u3001\u8868\u9762\u7c97\u7cd9\u5ea6\u3001\u83f2\u6d85\u5c14\u7cfb\u6570 F_0 \u4e0a\u8ba1\u7b97 BRDF \u65b9\u7a0b\u7684\u5377\u79ef\u3002\u8fd9\u7b49\u540c\u4e8e\u5728\u7eaf\u767d\u7684\u73af\u5883\u5149\u6216\u8005\u8f90\u5c04\u5ea6\u6052\u5b9a\u4e3a L_i =1.0 \u7684\u8bbe\u7f6e\u4e0b\uff0c\u5bf9\u955c\u9762 BRDF \u6c42\u79ef\u5206\u3002\u5bf93\u4e2a\u53d8\u91cf\u505a\u5377\u79ef\u6709\u70b9\u590d\u6742\uff0c\u4e0d\u8fc7\u6211\u4eec\u53ef\u4ee5\u628a F_0 \u79fb\u51fa\u955c\u9762 BRDF \u65b9\u7a0b\uff1a \\int\\limits_{\\Omega} f_r(p, \\omega_i, \\omega_o) n \\cdot \\omega_i d\\omega_i = \\int\\limits_{\\Omega} f_r(p, \\omega_i, \\omega_o) \\frac{F(\\omega_o, h)}{F(\\omega_o, h)} n \\cdot \\omega_i d\\omega_i F \u4e3a\u83f2\u6d85\u8033\u65b9\u7a0b\u3002\u5c06\u83f2\u6d85\u8033\u5206\u6bcd\u79fb\u5230 BRDF \u4e0b\u9762\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u7b49\u5f0f\uff1a \\int\\limits_{\\Omega} \\frac{f_r(p, \\omega_i, \\omega_o)}{F(\\omega_o, h)} F(\\omega_o, h) n \\cdot \\omega_i d\\omega_i \u7528 Fresnel-Schlick \u8fd1\u4f3c\u516c\u5f0f\u66ff\u6362\u53f3\u8fb9\u7684 F \u53ef\u4ee5\u5f97\u5230\uff1a \\int\\limits_{\\Omega} \\frac{f_r(p, \\omega_i, \\omega_o)}{F(\\omega_o, h)} (F_0 + (1 - F_0){(1 - \\omega_o \\cdot h)}^5) n \\cdot \\omega_i d\\omega_i \u8ba9\u6211\u4eec\u7528 \\alpha \u66ff\u6362 {(1 - \\omega_o \\cdot h)}^5 \u4ee5\u4fbf\u66f4\u8f7b\u677e\u5730\u6c42\u89e3 F_0 \uff1a \\int\\limits_{\\Omega} \\frac{f_r(p, \\omega_i, \\omega_o)}{F(\\omega_o, h)} (F_0 + (1 - F_0)\\alpha) n \\cdot \\omega_i d\\omega_i \\int\\limits_{\\Omega} \\frac{f_r(p, \\omega_i, \\omega_o)}{F(\\omega_o, h)} (F_0 + 1*\\alpha - F_0*\\alpha) n \\cdot \\omega_i d\\omega_i \\int\\limits_{\\Omega} \\frac{f_r(p, \\omega_i, \\omega_o)}{F(\\omega_o, h)} (F_0 * (1 - \\alpha) + \\alpha) n \\cdot \\omega_i d\\omega_i \u7136\u540e\u6211\u4eec\u5c06\u83f2\u6d85\u8033\u51fd\u6570 F \u5206\u62c6\u5230\u4e24\u4e2a\u79ef\u5206\u91cc\uff1a \\int\\limits_{\\Omega} \\frac{f_r(p, \\omega_i, \\omega_o)}{F(\\omega_o, h)} (F_0 * (1 - \\alpha)) n \\cdot \\omega_i d\\omega_i + \\int\\limits_{\\Omega} \\frac{f_r(p, \\omega_i, \\omega_o)}{F(\\omega_o, h)} (\\alpha) n \\cdot \\omega_i d\\omega_i \u8fd9\u6837\uff0c F_0 \u5728\u6574\u4e2a\u79ef\u5206\u4e0a\u662f\u6052\u5b9a\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u79ef\u5206\u4e2d\u63d0\u53d6\u51fa F_0 \u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06 \\alpha \u66ff\u6362\u56de\u5176\u539f\u59cb\u5f62\u5f0f\uff0c\u4ece\u800c\u5f97\u5230\u6700\u7ec8\u5206\u5272\u6c42\u548c\u7684 BRDF \u65b9\u7a0b\uff1a F_0 \\int\\limits_{\\Omega} f_r(p, \\omega_i, \\omega_o)(1 - {(1 - \\omega_o \\cdot h)}^5) n \\cdot \\omega_i d\\omega_i + \\int\\limits_{\\Omega} f_r(p, \\omega_i, \\omega_o) {(1 - \\omega_o \\cdot h)}^5 n \\cdot \\omega_i d\\omega_i \u516c\u5f0f\u4e2d\u7684\u4e24\u4e2a\u79ef\u5206\u5206\u522b\u8868\u793a F_0 \u7684\u6bd4\u4f8b\u548c\u504f\u5dee\u3002\u6ce8\u610f\uff0c\u7531\u4e8e f(p, \\omega_i, \\omega_o) \u5df2\u7ecf\u5305\u542b F \u9879\uff0c\u5b83\u4eec\u88ab\u7ea6\u5206\u4e86\uff0c\u8fd9\u91cc\u7684 f \u4e2d\u4e0d\u8ba1\u7b97 F \u9879\u3002 \u548c\u4e4b\u524d\u5377\u79ef\u73af\u5883\u8d34\u56fe\u7c7b\u4f3c\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9 BRDF \u65b9\u7a0b\u6c42\u5377\u79ef\uff0c\u5176\u8f93\u5165\u662f n \u548c \\omega_o \u7684\u5939\u89d2\uff0c\u4ee5\u53ca\u7c97\u7cd9\u5ea6\uff0c\u5e76\u5c06\u5377\u79ef\u7684\u7ed3\u679c\u5b58\u50a8\u5728\u7eb9\u7406\u4e2d\u3002\u6211\u4eec\u5c06\u5377\u79ef\u540e\u7684\u7ed3\u679c\u5b58\u50a8\u5728 2D \u67e5\u627e\u7eb9\u7406\uff08Look Up Texture, LUT\uff09\u4e2d\uff0c\u8fd9\u5f20\u7eb9\u7406\u88ab\u79f0\u4e3a BRDF \u79ef\u5206\u8d34\u56fe \uff0c\u7a0d\u540e\u4f1a\u5c06\u5176\u7528\u4e8e PBR \u5149\u7167\u7740\u8272\u5668\u4e2d\uff0c\u4ee5\u83b7\u5f97\u95f4\u63a5\u955c\u9762\u53cd\u5c04\u7684\u6700\u7ec8\u5377\u79ef\u7ed3\u679c\u3002 BRDF \u5377\u79ef\u7740\u8272\u5668\u5728 2D \u5e73\u9762\u4e0a\u6267\u884c\u8ba1\u7b97\uff0c\u76f4\u63a5\u4f7f\u7528\u5176 2D \u7eb9\u7406\u5750\u6807\u4f5c\u4e3a\u5377\u79ef\u8f93\u5165\uff08 NdotV \u548c roughness \uff09\u3002\u4ee3\u7801\u4e0e\u9884\u6ee4\u6ce2\u5668\u7684\u5377\u79ef\u4ee3\u7801\u5927\u4f53\u76f8\u4f3c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u5b83\u73b0\u5728\u6839\u636e BRDF \u7684\u51e0\u4f55\u51fd\u6570\u548c Fresnel-Schlick \u8fd1\u4f3c\u6765\u5904\u7406\u91c7\u6837\u5411\u91cf\uff1a vec2 IntegrateBRDF(float NdotV, float roughness) { vec3 V; V.x = sqrt(1.0 - NdotV*NdotV); V.y = 0.0; V.z = NdotV; float A = 0.0; float B = 0.0; vec3 N = vec3(0.0, 0.0, 1.0); const uint SAMPLE_COUNT = 1024u; for(uint i = 0u; i < SAMPLE_COUNT; ++i) { vec2 Xi = Hammersley(i, SAMPLE_COUNT); vec3 H = ImportanceSampleGGX(Xi, N, roughness); vec3 L = normalize(2.0 * dot(V, H) * H - V); float NdotL = max(L.z, 0.0); float NdotH = max(H.z, 0.0); float VdotH = max(dot(V, H), 0.0); if(NdotL > 0.0) { float G = GeometrySmith(N, V, L, roughness); float G_Vis = (G * VdotH) / (NdotH * NdotV); float Fc = pow(1.0 - VdotH, 5.0); A += (1.0 - Fc) * G_Vis; B += Fc * G_Vis; } } A /= float(SAMPLE_COUNT); B /= float(SAMPLE_COUNT); return vec2(A, B); } // ---------------------------------------------------------------------------- void main() { vec2 integratedBRDF = IntegrateBRDF(TexCoords.x, TexCoords.y); FragColor = integratedBRDF; } \u5982\u4f60\u6240\u89c1\uff0cBRDF \u5377\u79ef\u90e8\u5206\u662f\u4ece\u6570\u5b66\u5230\u4ee3\u7801\u7684\u76f4\u63a5\u8f6c\u6362\u3002\u6211\u4eec\u5c06\u89d2\u5ea6 \\theta \u548c\u7c97\u7cd9\u5ea6\u4f5c\u4e3a\u8f93\u5165\uff0c\u4ee5\u91cd\u8981\u6027\u91c7\u6837\u4ea7\u751f\u91c7\u6837\u5411\u91cf\uff0c\u5728\u6574\u4e2a\u51e0\u4f55\u4f53\u4e0a\u7ed3\u5408 BRDF \u7684\u83f2\u6d85\u8033\u9879\u5bf9\u5411\u91cf\u8fdb\u884c\u5904\u7406\uff0c\u7136\u540e\u8f93\u51fa\u6bcf\u4e2a\u6837\u672c\u4e0a F_0 \u7684\u7cfb\u6570\u548c\u504f\u5dee\uff0c\u6700\u540e\u53d6\u5e73\u5747\u503c\u3002 \u4f60\u53ef\u80fd\u56de\u60f3\u8d77 \u7406\u8bba \u6559\u7a0b\u4e2d\u7684\u4e00\u4e2a\u7ec6\u8282\uff1a\u4e0e IBL \u4e00\u8d77\u4f7f\u7528\u65f6\uff0cBRDF \u7684\u51e0\u4f55\u9879\u7565\u6709\u4e0d\u540c\uff0c\u56e0\u4e3a k \u53d8\u91cf\u7684\u542b\u4e49\u7a0d\u6709\u4e0d\u540c\uff1a k_{direct} = \\frac{(\\alpha + 1)^2}{8} k_{IBL} = \\frac{\\alpha^2}{2} \u7531\u4e8e BRDF \u5377\u79ef\u662f\u955c\u9762 IBL \u79ef\u5206\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u5728 Schlick-GGX \u51e0\u4f55\u51fd\u6570\u4e2d\u4f7f\u7528 k_{IBL} \uff1a float GeometrySchlickGGX(float NdotV, float roughness) { float a = roughness; float k = (a * a) / 2.0; float nom = NdotV; float denom = NdotV * (1.0 - k) + k; return nom / denom; } // ---------------------------------------------------------------------------- float GeometrySmith(vec3 N, vec3 V, vec3 L, float roughness) { float NdotV = max(dot(N, V), 0.0); float NdotL = max(dot(N, L), 0.0); float ggx2 = GeometrySchlickGGX(NdotV, roughness); float ggx1 = GeometrySchlickGGX(NdotL, roughness); return ggx1 * ggx2; } \u8bf7\u6ce8\u610f\uff0c\u867d\u7136 k \u8fd8\u662f\u4ece a \u8ba1\u7b97\u51fa\u6765\u7684\uff0c\u4f46\u8fd9\u91cc\u7684 a \u4e0d\u662f roughness \u7684\u5e73\u65b9\u2014\u2014\u5982\u540c\u6700\u521d\u5bf9 a \u7684\u5176\u4ed6\u89e3\u91ca\u90a3\u6837\u2014\u2014\u5728\u8fd9\u91cc\u6211\u4eec\u5047\u88c5\u5e73\u65b9\u8fc7\u4e86\u3002\u6211\u4e0d\u786e\u5b9a\u8fd9\u6837\u5904\u7406\u662f\u5426\u4e0e Epic Games \u6216\u8fea\u58eb\u5c3c\u539f\u59cb\u8bba\u6587\u4e0d\u4e00\u81f4\uff0c\u4f46\u662f\u76f4\u63a5\u5c06 roughness \u8d4b\u7ed9 a \u5f97\u5230\u7684 BRDF \u79ef\u5206\u8d34\u56fe\u4e0e Epic Games \u7684\u7248\u672c\u5b8c\u5168\u4e00\u81f4\u3002 \u6700\u540e\uff0c\u4e3a\u4e86\u5b58\u50a8 BRDF \u5377\u79ef\u7ed3\u679c\uff0c\u6211\u4eec\u9700\u8981\u751f\u6210\u4e00\u5f20 512 \u00d7 512 \u5206\u8fa8\u7387\u7684 2D \u7eb9\u7406\u3002 unsigned int brdfLUTTexture; glGenTextures(1, &brdfLUTTexture); // pre-allocate enough memory for the LUT texture. glBindTexture(GL_TEXTURE_2D, brdfLUTTexture); glTexImage2D(GL_TEXTURE_2D, 0, GL_RG16F, 512, 512, 0, GL_RG, GL_FLOAT, 0); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR); \u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f Epic Games \u63a8\u8350\u768416\u4f4d\u7cbe\u5ea6\u6d6e\u70b9\u683c\u5f0f\u3002\u5c06\u73af\u7ed5\u6a21\u5f0f\u8bbe\u7f6e\u4e3a GL_CLAMP_TO_EDGE \u4ee5\u9632\u6b62\u8fb9\u7f18\u91c7\u6837\u7684\u4f2a\u50cf\u3002 \u7136\u540e\uff0c\u6211\u4eec\u590d\u7528\u540c\u4e00\u4e2a\u5e27\u7f13\u51b2\u533a\u5bf9\u8c61\uff0c\u5e76\u5728 NDC (\u8bd1\u6ce8\uff1aNormalized Device Coordinates) \u5c4f\u5e55\u7a7a\u95f4\u56db\u8fb9\u5f62\u4e0a\u8fd0\u884c\u6b64\u7740\u8272\u5668\uff1a glBindFramebuffer(GL_FRAMEBUFFER, captureFBO); glBindRenderbuffer(GL_RENDERBUFFER, captureRBO); glRenderbufferStorage(GL_RENDERBUFFER, GL_DEPTH_COMPONENT24, 512, 512); glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, brdfLUTTexture, 0); glViewport(0, 0, 512, 512); brdfShader.use(); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); RenderQuad(); glBindFramebuffer(GL_FRAMEBUFFER, 0); \u5206\u5272\u79ef\u5206\u548c\u7684 BRDF \u5377\u79ef\u90e8\u5206\u5e94\u8be5\u5f97\u5230\u4ee5\u4e0b\u7ed3\u679c\uff1a \u9884\u8fc7\u6ee4\u7684\u73af\u5883\u8d34\u56fe\u548c BRDF \u7684 2D LUT \u90fd\u5df2\u7ecf\u9f50\u5907\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5206\u5272\u6c42\u548c\u8fd1\u4f3c\u6cd5\u91cd\u5efa\u95f4\u63a5\u955c\u9762\u90e8\u5206\u79ef\u5206\u4e86\u3002\u6700\u540e\u5408\u5e76\u7684\u7ed3\u679c\u5c06\u88ab\u7528\u4f5c\u95f4\u63a5\u955c\u9762\u53cd\u5c04\u6216\u73af\u5883\u955c\u9762\u53cd\u5c04\u3002","title":"\u9884\u8ba1\u7b97 BRDF"},{"location":"07%20PBR/03%20IBL/02%20Specular%20IBL/#ibl_1","text":"\u4e3a\u4e86\u4f7f\u53cd\u5c04\u65b9\u7a0b\u7684\u95f4\u63a5\u955c\u9762\u53cd\u5c04\u90e8\u5206\u6b63\u786e\u8fd0\u884c\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5206\u5272\u6c42\u548c\u8fd1\u4f3c\u6cd5\u7684\u4e24\u4e2a\u90e8\u5206\u7f1d\u5408\u5728\u4e00\u8d77\u3002\u7b2c\u4e00\u6b65\u662f\u5c06\u9884\u8ba1\u7b97\u7684\u5149\u7167\u6570\u636e\u58f0\u660e\u5230 PBR \u7740\u8272\u5668\u7684\u6700\u4e0a\u9762\uff1a uniform samplerCube prefilterMap; uniform sampler2D brdfLUT; \u9996\u5148\uff0c\u4f7f\u7528\u53cd\u5c04\u5411\u91cf\u91c7\u6837\u9884\u8fc7\u6ee4\u7684\u73af\u5883\u8d34\u56fe\uff0c\u83b7\u53d6\u8868\u9762\u7684\u95f4\u63a5\u955c\u9762\u53cd\u5c04\u3002\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u4f1a\u6839\u636e\u8868\u9762\u7c97\u7cd9\u5ea6\u5728\u5408\u9002\u7684 mip \u7ea7\u522b\u91c7\u6837\uff0c\u4ee5\u4f7f\u66f4\u7c97\u7cd9\u7684\u8868\u9762\u4ea7\u751f\u66f4\u6a21\u7cca\u7684\u955c\u9762\u53cd\u5c04\u3002 void main() { [...] vec3 R = reflect(-V, N); const float MAX_REFLECTION_LOD = 4.0; vec3 prefilteredColor = textureLod(prefilterMap, R, roughness * MAX_REFLECTION_LOD).rgb; [...] } \u5728\u9884\u8fc7\u6ee4\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u4ec5\u5c06\u73af\u5883\u8d34\u56fe\u5377\u79ef\u6700\u591a 5 \u4e2a mip \u7ea7\u522b\uff080\u52304\uff09\uff0c\u6b64\u5904\u8bb0\u4e3a MAX_REFLECTION_LOD \uff0c\u4ee5\u786e\u4fdd\u4e0d\u4f1a\u5bf9\u4e00\u4e2a\u6ca1\u6709\u6570\u636e\u7684 mip \u7ea7\u522b\u91c7\u6837\u3002 \u7136\u540e\u6211\u4eec\u7528\u5df2\u77e5\u7684\u6750\u8d28\u7c97\u7cd9\u5ea6\u548c\u89c6\u7ebf-\u6cd5\u7ebf\u5939\u89d2\u4f5c\u4e3a\u8f93\u5165\uff0c\u91c7\u6837 BRDF LUT\u3002 vec3 F = FresnelSchlickRoughness(max(dot(N, V), 0.0), F0, roughness); vec2 envBRDF = texture(brdfLUT, vec2(max(dot(N, V), 0.0), roughness)).rg; vec3 specular = prefilteredColor * (F * envBRDF.x + envBRDF.y); \u8fd9\u6837\u6211\u4eec\u5c31\u4ece BRDF LUT \u4e2d\u83b7\u5f97\u4e86 F_0 \u7684\u7cfb\u6570\u548c\u504f\u79fb\uff0c\u8fd9\u91cc\u6211\u4eec\u5c31\u76f4\u63a5\u7528\u95f4\u63a5\u5149\u83f2\u6d85\u5c14\u9879 F \u4ee3\u66ff F_0 \u3002\u628a\u8fd9\u4e2a\u7ed3\u679c\u548c IBL \u53cd\u5c04\u65b9\u7a0b\u5de6\u8fb9\u7684\u9884\u8fc7\u6ee4\u90e8\u5206\u7ed3\u5408\u8d77\u6765\uff0c\u4ee5\u91cd\u5efa\u6574\u4e2a\u8fd1\u4f3c\u79ef\u5206\uff0c\u5b58\u5165 specular \u3002 \u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e86\u53cd\u5c04\u65b9\u7a0b\u7684\u95f4\u63a5\u955c\u9762\u53cd\u5c04\u90e8\u5206\u3002\u73b0\u5728\uff0c\u5c06\u5176\u4e0e \u4e0a\u4e00\u8282\u6559\u7a0b \u4e2d\u7684\u53cd\u5c04\u65b9\u7a0b\u7684\u6f2b\u53cd\u5c04\u90e8\u5206\u7ed3\u5408\u8d77\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u5b8c\u6574\u7684 PBR IBL \u7ed3\u679c\uff1a vec3 F = FresnelSchlickRoughness(max(dot(N, V), 0.0), F0, roughness); vec3 kS = F; vec3 kD = 1.0 - kS; kD *= 1.0 - metallic; vec3 irradiance = texture(irradianceMap, N).rgb; vec3 diffuse = irradiance * albedo; const float MAX_REFLECTION_LOD = 4.0; vec3 prefilteredColor = textureLod(prefilterMap, R, roughness * MAX_REFLECTION_LOD).rgb; vec2 envBRDF = texture(brdfLUT, vec2(max(dot(N, V), 0.0), roughness)).rg; vec3 specular = prefilteredColor * (F * envBRDF.x + envBRDF.y); vec3 ambient = (kD * diffuse + specular) * ao; \u8bf7\u6ce8\u610f\uff0c specular \u6ca1\u6709\u4e58\u4ee5 kS \uff0c\u56e0\u4e3a\u5df2\u7ecf\u4e58\u8fc7\u4e86\u83f2\u6d85\u8033\u7cfb\u6570\u3002 \u73b0\u5728\uff0c\u5728\u4e00\u7cfb\u5217\u7c97\u7cd9\u5ea6\u548c\u91d1\u5c5e\u5ea6\u5404\u5f02\u7684\u7403\u4e0a\u8fd0\u884c\u6b64\u4ee3\u7801\uff0c\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u5728\u6700\u7ec8\u7684 PBR \u6e32\u67d3\u5668\u4e2d\u770b\u5230\u5176\u771f\u5b9e\u989c\u8272\uff1a \u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u518d\u75af\u72c2\u4e00\u70b9\uff0c\u4f7f\u7528\u4e00\u4e9b\u5e26\u9177\u70ab\u7eb9\u7406\u7684 PBR \u6750\u8d28 \uff1a \u6216\u52a0\u8f7d Andrew Maximov \u7684 \u8fd9\u6b3e\u51fa\u8272\u7684\u514d\u8d39 PBR 3D \u6a21\u578b \uff1a \u6211\u6562\u80af\u5b9a\u6211\u4eec\u90fd\u540c\u610f\u73b0\u5728\u7684\u5149\u7167\u770b\u8d77\u6765\u66f4\u5177\u8bf4\u670d\u529b\u3002\u66f4\u5999\u7684\u662f\uff0c\u65e0\u8bba\u6211\u4eec\u4f7f\u7528\u54ea\u79cd\u73af\u5883\u8d34\u56fe\uff0c\u6211\u4eec\u7684\u5149\u7167\u770b\u8d77\u6765\u90fd\u662f\u7269\u7406\u6b63\u786e\u7684\u3002\u4e0b\u9762\uff0c\u60a8\u5c06\u770b\u5230\u51e0\u5f20\u4e0d\u540c\u7684\u9884\u8ba1\u7b97 HDR \u8d34\u56fe\uff0c\u5b83\u4eec\u5b8c\u5168\u6539\u53d8\u4e86\u5149\u7167\u52a8\u6001\uff0c\u4f46\u662f\u4e0d\u9700\u8981\u8c03\u6574\u4efb\u4f55\u5149\u7167\u53d8\u91cf\uff0c\u5728\u5916\u89c2\u4e0a\u4f9d\u7136\u6b63\u786e\uff01 \u597d\u5427\uff0c\u8fd9\u662f\u4e00\u573a\u957f\u957f\u7684 PBR \u5192\u9669\u3002\u6709\u5f88\u591a\u6b65\u9aa4\u53ef\u80fd\u4f1a\u51fa\u9519\uff0c\u6240\u4ee5\u5982\u679c\u9047\u5230\u95ee\u9898\u5361\u4f4f\uff0c\u8bf7\u4ed4\u7ec6\u7814\u7a76 \u7403\u5f62\u573a\u666f \u6216 \u5e26\u7eb9\u7406\u7684\u573a\u666f\u4ee3\u7801 \u793a\u4f8b\u2014\u2014\u4e5f\u5305\u62ec\u6240\u6709\u7740\u8272\u5668\uff0c\u6216\u8005\u68c0\u67e5\u4e4b\u540e\u5728\u8bc4\u8bba\u4e2d\u63d0\u95ee\u3002","title":"\u5b8c\u6210 IBL \u53cd\u5c04"},{"location":"07%20PBR/03%20IBL/02%20Specular%20IBL/#_6","text":"\u5e0c\u671b\u5728\u672c\u6559\u7a0b\u7ed3\u675f\u65f6\uff0c\u4f60\u4f1a\u5bf9 PBR \u7684\u76f8\u5173\u5185\u5bb9\u6709\u4e00\u4e2a\u6e05\u6670\u7684\u4e86\u89e3\uff0c\u751a\u81f3\u53ef\u4ee5\u6784\u9020\u5e76\u8fd0\u884c\u4e00\u4e2a\u5b9e\u9645\u7684 PBR \u6e32\u67d3\u5668\u3002\u5728\u8fd9\u51e0\u8282\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u5728\u5e94\u7528\u7a0b\u5e8f\u5f00\u59cb\u9636\u6bb5\uff0c\u6e32\u67d3\u5faa\u73af\u4e4b\u524d\uff0c\u9884\u8ba1\u7b97\u4e86\u6240\u6709 PBR \u76f8\u5173\u7684\u57fa\u4e8e\u56fe\u50cf\u7684\u5149\u7167\u6570\u636e\u3002\u51fa\u4e8e\u6559\u80b2\u76ee\u7684\uff0c\u8fd9\u5f88\u597d\uff0c\u4f46\u5bf9\u4e8e\u4efb\u4f55 PBR \u7684\u5b9e\u8df5\u5e94\u7528\u6765\u8bf4\uff0c\u90fd\u4e0d\u662f\u5f88\u6f02\u4eae\u3002\u9996\u5148\uff0c\u9884\u8ba1\u7b97\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u6267\u884c\u4e00\u6b21\uff0c\u800c\u4e0d\u662f\u6bcf\u6b21\u542f\u52a8\u65f6\u90fd\u8981\u505a\u3002\u5176\u6b21\uff0c\u5f53\u4f7f\u7528\u591a\u4e2a\u73af\u5883\u8d34\u56fe\u65f6\uff0c\u4f60\u5fc5\u987b\u5728\u6bcf\u6b21\u7a0b\u5e8f\u542f\u52a8\u65f6\u5168\u90e8\u9884\u8ba1\u7b97\u4e00\u904d\uff0c\u8fd9\u662f\u4e2a\u5fc5\u987b\u6b65\u9aa4\u3002 \u56e0\u6b64\uff0c\u901a\u5e38\u53ea\u9700\u8981\u4e00\u6b21\u5c06\u73af\u5883\u8d34\u56fe\u9884\u8ba1\u7b97\u4e3a\u8f90\u7167\u5ea6\u8d34\u56fe\u548c\u9884\u8fc7\u6ee4\u8d34\u56fe\uff0c\u7136\u540e\u5c06\u5176\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\uff08\u6ce8\u610f\uff0cBRDF \u79ef\u5206\u8d34\u56fe\u4e0d\u4f9d\u8d56\u4e8e\u73af\u5883\u8d34\u56fe\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u8ba1\u7b97\u6216\u52a0\u8f7d\u4e00\u6b21\uff09\u3002\u8fd9\u610f\u5473\u7740\u60a8\u9700\u8981\u63d0\u51fa\u4e00\u79cd\u81ea\u5b9a\u4e49\u56fe\u50cf\u683c\u5f0f\u6765\u5b58\u50a8 HDR \u7acb\u65b9\u4f53\u8d34\u56fe\uff0c\u5305\u62ec\u5176 mip \u7ea7\u522b\u3002\u6216\u8005\u5c06\u56fe\u50cf\u5b58\u50a8\u4e3a\u67d0\u79cd\u53ef\u7528\u683c\u5f0f\u2014\u2014\u4f8b\u5982\u652f\u6301\u5b58\u50a8 mip \u7ea7\u522b\u7684 .dds\u2014\u2014\u5e76\u6309\u5176\u683c\u5f0f\u52a0\u8f7d\u3002 \u6b64\u5916\uff0c\u6211\u4eec\u4e5f\u5728\u6559\u7a0b\u4e2d\u63cf\u8ff0\u4e86 \u6574\u4e2a \u8fc7\u7a0b\uff0c\u5305\u62ec\u751f\u6210\u9884\u8ba1\u7b97\u7684 IBL \u56fe\u50cf\uff0c\u4ee5\u5e2e\u52a9\u6211\u4eec\u8fdb\u4e00\u6b65\u4e86\u89e3 PBR \u7ba1\u7ebf\u3002\u6b64\u5916\u8fd8\u53ef\u4ee5\u901a\u8fc7 cmftStudio \u6216 IBLBaker \u7b49\u4e00\u4e9b\u51fa\u8272\u7684\u5de5\u5177\u4e3a\u60a8\u751f\u6210\u8fd9\u4e9b\u9884\u8ba1\u7b97\u8d34\u56fe\uff0c\u4e5f\u5f88\u597d\u7528\u3002 \u6709\u4e00\u70b9\u5185\u5bb9\u6211\u4eec\u8df3\u8fc7\u4e86\uff0c\u5373\u5982\u4f55\u5c06\u9884\u8ba1\u7b97\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u4f5c\u4e3a \u53cd\u5c04\u63a2\u9488 \uff1a\u7acb\u65b9\u4f53\u8d34\u56fe\u63d2\u503c\u548c\u89c6\u5dee\u6821\u6b63\u3002\u8fd9\u662f\u4e00\u4e2a\u5728\u573a\u666f\u4e2d\u653e\u7f6e\u591a\u4e2a\u53cd\u5c04\u63a2\u9488\u7684\u8fc7\u7a0b\uff0c\u8fd9\u4e9b\u63a2\u9488\u5728\u7279\u5b9a\u4f4d\u7f6e\u62cd\u6444\u573a\u666f\u7684\u7acb\u65b9\u4f53\u8d34\u56fe\u5feb\u7167\uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5377\u79ef\uff0c\u4f5c\u4e3a\u76f8\u5e94\u90e8\u5206\u573a\u666f\u7684 IBL \u6570\u636e\u3002\u57fa\u4e8e\u76f8\u673a\u7684\u4f4d\u7f6e\u5bf9\u9644\u8fd1\u7684\u63a2\u9488\u63d2\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u5c40\u90e8\u7684\u7ec6\u8282\u4e30\u5bcc\u7684 IBL\uff0c\u53d7\u5230\u7684\u552f\u4e00\u9650\u5236\u5c31\u662f\u63a2\u9488\u653e\u7f6e\u7684\u6570\u91cf\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u4f8b\u5982\u4ece\u4e00\u4e2a\u660e\u4eae\u7684\u5ba4\u5916\u90e8\u5206\u79fb\u52a8\u5230\u8f83\u6697\u7684\u5ba4\u5185\u90e8\u5206\u65f6\uff0cIBL \u5c31\u80fd\u6b63\u786e\u66f4\u65b0\u3002\u6211\u5c06\u6765\u4f1a\u5728\u67d0\u4e2a\u5730\u65b9\u7f16\u5199\u6709\u5173\u53cd\u5c04\u63a2\u9488\u7684\u6559\u7a0b\uff0c\u4f46\u73b0\u5728\uff0c\u6211\u5efa\u8bae\u9605\u8bfb\u4e0b\u9762 Chetan Jags \u7684\u6587\u7ae0\u6765\u4f5c\u4e3a\u5165\u95e8\u3002","title":"\u4e0b\u4e00\u6b65\u662f\uff1f"},{"location":"07%20PBR/03%20IBL/02%20Specular%20IBL/#_7","text":"Real Shading in Unreal Engine 4 \uff1a\u8bb2\u89e3\u4e86 Epic Games \u7684\u5206\u5272\u6c42\u548c\u8fd1\u4f3c\u6cd5\u3002IBL PBR \u90e8\u5206\u7684\u4ee3\u7801\u5c31\u8131\u80ce\u4e8e\u6b64\u6587\u3002 Physically Based Shading and Image Based Lighting \uff1aTrent Reed \u7684\u7cbe\u5f69\u535a\u5ba2\u6587\u7ae0\uff0c\u4ecb\u7ecd\u4e86\u5982\u4f55\u5c06\u955c\u9762\u53cd\u5c04 IBL \u5b9e\u65f6\u96c6\u6210\u5230 PBR \u7ba1\u9053\u4e2d\u3002 Image Based Lighting \uff1aChetan Jags \u5bf9\u57fa\u4e8e\u955c\u9762\u53cd\u5c04\u7684 IBL \u53ca\u5176\u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879\uff08\u5305\u62ec\u5149\u7167\u63a2\u9488\u63d2\u503c\uff09\u8fdb\u884c\u4e86\u5e7f\u6cdb\u7684\u8bb2\u89e3\u3002 Moving Frostbite to PBR \uff1aS\u00e9bastien Lagarde \u548c Charles de Rousiers \u64b0\u5199\u7684\uff0c\u5bf9\u4e8e\u5982\u4f55\u5c06 PBR \u96c6\u6210\u5230 AAA \u6e38\u620f\u5f15\u64ce\u8fdb\u884c\u4e86\u8be6\u5c3d\u800c\u6df1\u5165\u7684\u6982\u8ff0\u3002 Physically Based Rendering \u2013 Part Three \uff1aJMonkeyEngine \u56e2\u961f\u5bf9 IBL \u548c PBR \u8fdb\u884c\u4e86\u8f83\u9ad8\u5c42\u6b21\u7684\u6982\u8ff0\u3002 Implementation Notes: Runtime Environment Map Filtering for Image Based Lighting \uff1aPadraic Hennessy \u64b0\u5199\u7684\u5927\u91cf\u6709\u5173\u9884\u8fc7\u6ee4 HDR \u73af\u5883\u8d34\u56fe\u5e76\u663e\u8457\u4f18\u5316\u91c7\u6837\u8fc7\u7a0b\u7684\u6587\u7ae0\u3002","title":"\u8fdb\u9636\u9605\u8bfb"},{"location":"08%20Guest%20Articles/2020/01%20Skeletal%20Animation/","text":"\u9aa8\u9abc\u52a8\u753b \u539f\u6587 Skeletal-Animation \u4f5c\u8005 Ankit Singh Kushwah \u7ffb\u8bd1 orbitgw \u6821\u5bf9 orbitgw 3D\u52a8\u753b\u53ef\u4ee5\u8ba9\u6211\u4eec\u7684\u6e38\u620f\u6829\u6829\u5982\u751f\u30023D\u4e16\u754c\u4e2d\u7684\u7269\u4f53\uff0c\u6bd4\u5982\u4eba\u7c7b\u548c\u52a8\u7269\uff0c\u5f53\u5b83\u4eec\u505a\u67d0\u4e9b\u4e8b\u60c5\u79fb\u52a8\u56db\u80a2\u65f6\uff0c\u6bd4\u5982\u8d70\u8def\u3001\u8dd1\u6b65\u548c\u653b\u51fb\uff0c\u4f1a\u4f7f\u6211\u4eec\u611f\u5230\u66f4\u751f\u52a8\u3002\u672c\u7bc7\u6559\u7a0b\u662f\u5173\u4e8e\u4f60\u4eec\u4e00\u76f4\u5728\u7b49\u5f85\u7684\u9aa8\u9abc\u52a8\u753b\u3002\u6211\u4eec\u5c06\u9996\u5148\u5f7b\u5e95\u7406\u89e3\u8fd9\u4e2a\u6982\u5ff5\uff0c\u7136\u540e\u4e86\u89e3\u4f7f\u7528Assimp\u5236\u4f5c3D\u6a21\u578b\u52a8\u753b\u6240\u9700\u7684\u6570\u636e\u3002\u6211\u5efa\u8bae\u60a8\u5b8c\u6210\u672c\u6559\u7a0b\u7684 \u6a21\u578b\u52a0\u8f7d \u90e8\u5206\uff0c\u56e0\u4e3a\u672c\u6559\u7a0b\u4ee3\u7801\u5c06\u4ece\u90a3\u91cc\u7ee7\u7eed\u3002\u4f60\u4ecd\u7136\u53ef\u4ee5\u7406\u89e3\u8fd9\u4e2a\u6982\u5ff5\uff0c\u5e76\u4ee5\u81ea\u5df1\u7684\u65b9\u5f0f\u5b9e\u73b0\u5b83\u3002\u6240\u4ee5\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\u3002 \u63d2\u503c \u8981\u4e86\u89e3\u52a8\u753b\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u57fa\u7840\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u63d2\u503c(Interpolation)\u7684\u6982\u5ff5\u3002\u63d2\u503c\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u5c31\u50cf\u654c\u4eba\u5728\u65f6\u95f4T\u4e0a\u4eceA\u70b9\u79fb\u52a8\u5230B\u70b9\u4e00\u6837\uff0c\u5373\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u53d1\u751f\u5e73\u79fb\u3002\u70ae\u5854\u5e73\u6ed1\u65cb\u8f6c\u4ee5\u9762\u5bf9\u76ee\u6807\uff0c\u5373\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u53d1\u751f\u65cb\u8f6c\uff0c\u6811\u5728\u65f6\u95f4T\u5185\u4ece\u5c3a\u5bf8A\u653e\u5927\u5230\u5c3a\u5bf8B\uff0c\u5373\u968f\u65f6\u95f4\u63a8\u79fb\u53d1\u751f\u7f29\u653e\u3002 \u8bd1\u6ce8 (\u52a8\u753b)\u63d2\u503c\u5c31\u662f \u5173\u952e\u5e27 \u7684\u4e2d\u95f4\u503c\u3002\u6bd4\u5982\u6211\u4eec\u4f7f\u7528Blender\u5236\u4f5c\u52a8\u753b\uff0c\u4e0d\u9700\u8981\u8bbe\u7f6e\u6bcf\u4e00\u5e27\u7684\u9aa8\u9abc\u4f4d\u7f6e\uff0c\u53ea\u9700\u8981\u5728\u51e0\u4e2a\u5173\u952e\u5e27\u4e2d\u8bb0\u5f55\u5b83\u4eec\u7684\u4f4d\u7f6e\uff0c\u65cb\u8f6c\uff0c\u7f29\u653e\u7b49\u7b49\u4fe1\u606f\u3002\u7136\u540e\u7531\u7a0b\u5e8f\u81ea\u52a8\u8ba1\u7b97\u51fa\u7684\u4e2d\u95f4\u7684\u8fc7\u6e21\u5e27\u5c31\u662f\u6211\u4eec\u7684\u63d2\u503c\u3002\u901a\u5e38\u63d2\u503c\u53ef\u4ee5\u4f7f\u7528\u66f2\u7ebf\u63cf\u8ff0\uff0c\u6bd4\u5982\u6211\u4eec\u7684\u8d1d\u585e\u5c14\u66f2\u7ebf\u3002 \u7528\u4e8e\u5e73\u79fb\u548c\u7f29\u653e\u7684\u7b80\u5355\u63d2\u503c\u65b9\u7a0b\u5982\u4e0b\u6240\u793a\uff1a a = a \\cdot (1 - t) + b \\cdot t \u5b83\u88ab\u79f0\u4e3a\u7ebf\u6027\u63d2\u503c\u65b9\u7a0b\u6216Lerp\u3002\u5bf9\u4e8e\u65cb\u8f6c\uff0c\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u5411\u91cf\u3002\u539f\u56e0\u662f\uff0c\u5982\u679c\u6211\u4eec\u7ee7\u7eed\u5c1d\u8bd5\u5728X\uff08\u4fef\u4ef0\uff09\u3001Y\uff08\u504f\u822a\uff09\u548cZ\uff08\u6eda\u8f6c\uff09\u7684\u5411\u91cf\u4e0a\u4f7f\u7528\u7ebf\u6027\u63d2\u503c\u65b9\u7a0b\uff0c\u63d2\u503c\u5c31\u4e0d\u4f1a\u662f\u7ebf\u6027\u7684\u3002\u4f60\u4f1a\u9047\u5230\u4e00\u4e9b\u5947\u602a\u7684\u95ee\u9898\uff0c\u6bd4\u5982Gimbal Lock\uff08\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u53c2\u8003\u8d44\u6599\u90e8\u5206\u4e86\u89e3\u5b83\uff09\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u4f7f\u7528\u56db\u5143\u6570\u8fdb\u884c\u65cb\u8f6c\u3002\u56db\u5143\u6570\u63d0\u4f9b\u4e86\u4e00\u79cd\u53eb\u505a\u7403\u9762\u63d2\u503c\u6216Slerp\u65b9\u7a0b\u7684\u4e1c\u897f\uff0c\u5b83\u7ed9\u51fa\u4e86\u4e0eLerp\u76f8\u540c\u7684\u7ed3\u679c\uff0c\u4f46\u5bf9\u4e8e\u4e24\u4e2a\u65cb\u8f6cA\u548cB\u3002\u6211\u65e0\u6cd5\u89e3\u91ca\u8fd9\u4e2a\u65b9\u7a0b\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u56e0\u4e3a\u5b83\u76ee\u524d\u4e0d\u5728\u8303\u56f4\u5185\u3002\u60a8\u53ef\u4ee5\u67e5\u770b\u4e0b\u9762\u7684\u53c2\u8003\u8d44\u6599\u90e8\u5206\u6765\u7406\u89e3\u56db\u5143\u6570\u3002 \u52a8\u753b\u6a21\u578b\u7684\u7ec4\u4ef6\uff1a\u8499\u76ae\u3001\u9aa8\u9abc\u548c\u5173\u952e\u5e27 \u52a8\u753b\u7684\u6574\u4e2a\u8fc7\u7a0b\u59cb\u4e8e\u6dfb\u52a0\u7b2c\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u5373blender\u6216Maya\u7b49\u8f6f\u4ef6\u4e2d\u7684\u8499\u76ae(Skin)\u3002\u8499\u76ae\u53ea\u4e0d\u8fc7\u662f\u7f51\u683c(Mesh)\uff0c\u5b83\u4e3a\u6a21\u578b\u6dfb\u52a0\u4e86\u89c6\u89c9\u65b9\u9762\uff0c\u544a\u8bc9\u89c2\u5bdf\u8005\u5b83\u7684\u5916\u89c2\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u60f3\u79fb\u52a8\u4efb\u4f55\u7f51\u683c\uff0c\u90a3\u4e48\u5c31\u50cf\u73b0\u5b9e\u4e16\u754c\u4e00\u6837\uff0c\u4f60\u9700\u8981\u6dfb\u52a0\u9aa8\u9abc\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u4e0b\u9762\u7684\u56fe\u7247\u6765\u4e86\u89e3\u5b83\u5728blender\u7b49\u8f6f\u4ef6\u4e2d\u7684\u5916\u89c2\u3002 \u8fd9\u4e9b\u9aa8\u5934\u901a\u5e38\u662f\u4ee5\u5206\u5c42\u7684\u65b9\u5f0f\u6dfb\u52a0\u7ed9\u4eba\u7c7b\u548c\u52a8\u7269\u7b49\u89d2\u8272\u7684\uff0c\u539f\u56e0\u5f88\u660e\u663e\u3002\u6211\u4eec\u60f3\u8981\u56db\u80a2\u4e4b\u95f4\u7684\u7236\u5b50\u5173\u7cfb(parent-child relationship)\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u79fb\u52a8\u53f3\u80a9\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u53f3\u4e8c\u5934\u808c\u3001\u524d\u81c2\u3001\u624b\u548c\u624b\u6307\u4e5f\u5e94\u8be5\u79fb\u52a8\u3002\u8fd9\u5c31\u662f\u5c42\u6b21\u7ed3\u6784\u7684\u6837\u5b50\uff1a \u5728\u4e0a\u56fe\u4e2d\uff0c\u5982\u679c\u4f60\u6293\u4f4f\u9acb\u9aa8(hip bone)\u5e76\u79fb\u52a8\u5b83\uff0c\u6240\u6709\u7684\u80a2\u4f53\u90fd\u4f1a\u53d7\u5230\u5b83\u7684\u79fb\u52a8\u7684\u5f71\u54cd\u3002 \u6b64\u65f6\uff0c\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u4e3a\u52a8\u753b\u521b\u5efa\u5173\u952e\u5e27\u4e86\u3002\u5173\u952e\u5e27\u662f\u52a8\u753b\u4e2d\u4e0d\u540c\u65f6\u95f4\u70b9\u7684\u59ff\u52bf\u3002\u6211\u4eec\u5c06\u5728\u8fd9\u4e9b\u5173\u952e\u5e27\u4e4b\u95f4\u8fdb\u884c\u63d2\u503c\uff0c\u4ee5\u4fbf\u5728\u4ee3\u7801\u4e2d\u4ece\u4e00\u4e2a\u59ff\u52bf\u5e73\u6ed1\u5730\u8fc7\u6e21\u5230\u53e6\u4e00\u4e2a\u59ff\u52bf\u3002\u4e0b\u9762\u60a8\u53ef\u4ee5\u770b\u5230\u5982\u4f55\u4e3a\u7b80\u5355\u76844\u5e27\u8df3\u8dc3\u52a8\u753b\u521b\u5efa\u59ff\u52bf\uff1a Assimp\u5982\u4f55\u4fdd\u5b58\u52a8\u753b\u6570\u636e \u6211\u4eec\u9a6c\u4e0a\u5c31\u4f1a\u5230\u4ee3\u7801\u90e8\u5206\uff0c\u4f46\u9996\u5148\u6211\u4eec\u9700\u8981\u4e86\u89e3assimp\u662f\u5982\u4f55\u4fdd\u5b58\u5bfc\u5165\u7684\u52a8\u753b\u6570\u636e\u7684\u3002\u770b\u4e0b\u56fe\uff1a \u5c31\u50cf \u6a21\u578b\u52a0\u8f7d \u90e8\u5206\u4e00\u6837\uff0c\u6211\u4eec\u5c06\u4ece aiScene \u6307\u9488\u5f00\u59cb\uff0c\u8be5\u6307\u9488\u5305\u542b\u6307\u5411\u6839\u8282\u70b9\u7684\u6307\u9488\uff0c\u7136\u540e\u770b\u770b\u6211\u4eec\u8fd9\u91cc\u6709\u4ec0\u4e48\uff0c\u4e00\u4e2a\u52a8\u753b\u6570\u7ec4\u3002\u8fd9\u4e2a aiAnimation \u6570\u7ec4\u5305\u542b\u4e00\u822c\u4fe1\u606f\uff0c\u6bd4\u5982\u52a8\u753b\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u8fd9\u91cc\u8868\u793a\u4e3a mDuration \uff0c\u7136\u540e\u6211\u4eec\u6709\u4e00\u4e2a mTicksPerSecond \u53d8\u91cf\uff0c\u5b83\u63a7\u5236\u6211\u4eec\u5e94\u8be5\u5728\u5e27\u4e4b\u95f4\u63d2\u503c\u7684\u901f\u5ea6\u3002\u5982\u679c\u60a8\u8fd8\u8bb0\u5f97\u4e0a\u4e00\u8282\u4e2d\u7684\u52a8\u753b\u6709\u5173\u952e\u5e27\u3002\u7c7b\u4f3c\u5730\uff0c aiAnimation \u5305\u542b\u4e00\u4e2a\u540d\u4e3a Channels \u7684 aiNodeAnim \u6570\u7ec4\u3002\u6b64\u6570\u7ec4\u5305\u542b\u5c06\u8981\u53c2\u4e0e\u52a8\u753b\u7684\u6240\u6709\u9aa8\u9abc\u53ca\u5176\u5173\u952e\u5e27\u3002\u4e00\u4e2a aiNodeAnim \u5305\u542b\u9aa8\u9abc\u7684\u540d\u79f0\uff0c\u4f60\u4f1a\u53d1\u73b0\u5728\u8fd9\u91cc\u63d2\u5165\u4e09\u79cd\u7c7b\u578b\u7684\u5173\u952e\u70b9\uff0c\u5e73\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u3002 \u597d\u5427\uff0c\u8fd8\u6709\u6700\u540e\u4e00\u4ef6\u4e8b\u6211\u4eec\u9700\u8981\u7406\u89e3\uff0c\u5e76\u4e14\u5f88\u4e50\u610f\u53bb\u505a\u7684\u4e00\u4ef6\u4e8b\u5c31\u662f\u5199\u4ee3\u7801\u3002 \u591a\u4e2a\u9aa8\u9abc\u5bf9\u9876\u70b9\u7684\u5f71\u54cd \u5f53\u6211\u4eec\u5f2f\u66f2\u524d\u81c2\u65f6\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u6211\u4eec\u7684\u4e8c\u5934\u808c\u5f39\u51fa\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u8bf4\u524d\u81c2\u9aa8\u9abc\u7684\u53d8\u5f62\u6b63\u5728\u5f71\u54cd\u6211\u4eec\u80b1\u4e8c\u5934\u808c\u4e0a\u7684\u9876\u70b9\u3002\u7c7b\u4f3c\u5730\uff0c\u53ef\u80fd\u6709\u591a\u4e2a\u9aa8\u9abc\u5f71\u54cd\u7f51\u683c\u4e2d\u7684\u5355\u4e2a\u9876\u70b9\u3002\u5bf9\u4e8e\u50cf\u56fa\u4f53\u91d1\u5c5e\u673a\u5668\u4eba\u8fd9\u6837\u7684\u89d2\u8272\uff0c\u6240\u6709\u524d\u81c2\u9876\u70b9\u90fd\u53ea\u4f1a\u53d7\u5230\u524d\u81c2\u9aa8\u9abc\u7684\u5f71\u54cd\uff0c\u4f46\u5bf9\u4e8e\u50cf\u4eba\u7c7b\u3001\u52a8\u7269\u7b49\u89d2\u8272\uff0c\u53ef\u80fd\u6709\u591a\u8fbe4\u5757\u9aa8\u9abc\u53ef\u4ee5\u5f71\u54cd\u4e00\u4e2a\u9876\u70b9\u3002\u8ba9\u6211\u4eec\u770b\u770bassimp\u662f\u5982\u4f55\u5b58\u50a8\u8fd9\u4e9b\u4fe1\u606f\u7684\uff1a \u6211\u4eec\u518d\u6b21\u4ece aiScene \u6307\u9488\u5f00\u59cb\uff0c\u8be5\u6307\u9488\u5305\u542b\u6240\u6709 aiMeshes \u7684\u6570\u7ec4\u3002\u6bcf\u4e2aaiMesh\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a aiBone \u6570\u7ec4\uff0c\u5176\u4e2d\u5305\u542b\u8bf8\u5982\u6b64 aiBone \u5c06\u5bf9\u7f51\u683c\u4e0a\u7684\u9876\u70b9\u96c6\u4ea7\u751f\u591a\u5927\u5f71\u54cd\u4e4b\u7c7b\u7684\u4fe1\u606f\u3002 aiBone \u5305\u542b\u9aa8\u9abc\u7684\u540d\u79f0\uff0c\u8fd9\u662f\u4e00\u4e2a aiVertexWeight \u6570\u7ec4\uff0c\u57fa\u672c\u4e0a\u544a\u8bc9\u6b64 aiBone \u5bf9\u7f51\u683c\u4e0a\u7684\u9876\u70b9\u6709\u591a\u5927\u5f71\u54cd\u3002\u73b0\u5728\u6211\u4eec\u6709\u4e86 aiBone \u7684\u53e6\u4e00\u4e2a\u6210\u5458\uff0c\u5b83\u662f offsetMatrix \u3002\u8fd9\u662f\u4e00\u4e2a4x4\u77e9\u9635\uff0c\u7528\u4e8e\u5c06\u9876\u70b9\u4ece\u6a21\u578b\u7a7a\u95f4\u8f6c\u6362\u5230\u9aa8\u9abc\u7a7a\u95f4\u3002\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u56fe\u7247\u4e2d\u770b\u5230\u8fd9\u4e00\u70b9\uff1a \u5f53\u9876\u70b9\u4f4d\u4e8e\u9aa8\u9abc\u7a7a\u95f4\u4e2d\u65f6\uff0c\u5b83\u4eec\u5c06\u6309\u7167\u9884\u671f\u76f8\u5bf9\u4e8e\u9aa8\u9abc\u8fdb\u884c\u53d8\u6362\u3002\u60a8\u5f88\u5feb\u5c31\u4f1a\u5728\u4ee3\u7801\u4e2d\u770b\u5230\u8fd9\u4e00\u70b9\u3002 \u6700\u540e\u8ba9\u6211\u4eec\u5199\u4ee3\u7801 \u8c22\u8c22\u4f60\u8d70\u5230\u8fd9\u4e00\u6b65\u3002\u6211\u4eec\u5c06\u4ece\u76f4\u63a5\u67e5\u770b\u6700\u7ec8\u7ed3\u679c\u5f00\u59cb\uff0c\u8fd9\u662f\u6211\u4eec\u7684\u6700\u7ec8\u9876\u70b9\u7740\u8272\u5668\u4ee3\u7801\u3002\u8fd9\u5c06\u7ed9\u6211\u4eec\u5f88\u597d\u7684\u611f\u89c9\uff0c\u6211\u4eec\u6700\u7ec8\u9700\u8981\u4ec0\u4e48\u3002 #version 430 core layout(location = 0) in vec3 pos; layout(location = 1) in vec3 norm; layout(location = 2) in vec2 tex; layout(location = 5) in ivec4 boneIds; layout(location = 6) in vec4 weights; uniform mat4 projection; uniform mat4 view; uniform mat4 model; const int MAX_BONES = 100; const int MAX_BONE_INFLUENCE = 4; uniform mat4 finalBonesMatrices[MAX_BONES]; out vec2 TexCoords; void main() { vec4 totalPosition = vec4(0.0f); for(int i = 0 ; i < MAX_BONE_INFLUENCE ; i++) { if(boneIds[i] == -1) continue; if(boneIds[i] >=MAX_BONES) { totalPosition = vec4(pos,1.0f); break; } vec4 localPosition = finalBonesMatrices[boneIds[i]] * vec4(pos,1.0f); totalPosition += localPosition * weights[i]; vec3 localNormal = mat3(finalBonesMatrices[boneIds[i]]) * norm; } mat4 viewModel = view * model; gl_Position = projection * viewModel * totalPosition; TexCoords = tex; } \u7247\u6bb5\u7740\u8272\u5668\u4e0e \u8fd9\u7bc7\u6559\u7a0b \u4e2d\u7684\u4fdd\u6301\u76f8\u540c\u3002\u4ece\u9876\u90e8\u5f00\u59cb\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u4e24\u4e2a\u65b0\u7684\u5c5e\u6027\u5e03\u5c40\u58f0\u660e\u3002\u7b2c\u4e00\u4e2a\u9aa8\u9abcID\uff0c\u7b2c\u4e8c\u4e2a\u662f\u91cd\u91cf\u3002\u6211\u4eec\u8fd8\u6709\u4e00\u4e2a\u7edf\u4e00\u7684\u6570\u7ec4 finalBonesMatrix \uff0c\u5b83\u5b58\u50a8\u6240\u6709\u9aa8\u9abc\u7684\u53d8\u6362\u3002 boneIds \u5305\u542b\u7528\u4e8e\u8bfb\u53d6\u6700\u7ec8 BonesMatrix \u6570\u7ec4\u5e76\u5c06\u8fd9\u4e9b\u53d8\u6362\u5e94\u7528\u4e8epos\u9876\u70b9\u7684\u7d22\u5f15\uff0c\u5176\u5404\u81ea\u7684\u6743\u91cd\u5b58\u50a8\u5728\u6743\u91cd\u6570\u7ec4\u4e2d\u3002\u8fd9\u53d1\u751f\u5728\u4e0a\u9762\u5faa\u73af\u7684\u5185\u90e8\u3002\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u5148\u5728Mesh\u7c7b\u4e2d\u6dfb\u52a0\u5bf9\u9aa8\u9abc\u91cd\u91cf\u7684\u652f\u6301\uff1a #define MAX_BONE_INFLUENCE 4 struct Vertex { // position glm::vec3 Position; // normal glm::vec3 Normal; // texCoords glm::vec2 TexCoords; // tangent glm::vec3 Tangent; // bitangent glm::vec3 Bitangent; //bone indexes which will influence this vertex int m_BoneIDs[MAX_BONE_INFLUENCE]; //weights from each bone float m_Weights[MAX_BONE_INFLUENCE]; }; \u6211\u4eec\u4e3a\u9876\u70b9\u6dfb\u52a0\u4e86\u4e24\u4e2a\u65b0\u5c5e\u6027\uff0c\u5c31\u50cf\u6211\u4eec\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u770b\u5230\u7684\u90a3\u6837\u3002\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u5c06\u5b83\u4eec\u52a0\u8f7d\u5230GPU\u7f13\u51b2\u533a\u4e2d\uff0c\u5c31\u50cf\u6211\u4eec\u7684 Mesh::setupMesh \u51fd\u6570\u4e2d\u7684\u5176\u4ed6\u5c5e\u6027\u4e00\u6837\uff1a class Mesh { ... void setupMesh() { .... // ids glEnableVertexAttribArray(3); glVertexAttribIPointer(3, 4, GL_INT, sizeof(Vertex), (void*)offsetof(Vertex, m_BoneIDs)); // weights glEnableVertexAttribArray(4); glVertexAttribPointer(4, 4, GL_FLOAT, GL_FALSE, sizeof(Vertex), (void*)offsetof(Vertex, m_Weights)); ... } ... } \u5c31\u50cf\u4ee5\u524d\u4e00\u6837\uff0c\u53ea\u662f\u73b0\u5728\u6211\u4eec\u4e3a boneID \u548c weights \u6dfb\u52a0\u4e863\u4e2a\u548c4\u4e2a\u5e03\u5c40\u4f4d\u7f6eID\u3002\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u4e00\u4ef6\u91cd\u8981\u7684\u4e8b\u60c5\u662f\u6211\u4eec\u5982\u4f55\u4f20\u9012 boneID \u7684\u6570\u636e\u3002\u6211\u4eec\u4f7f\u7528\u7684\u662f glVertexAttribIPointer \uff0c\u5e76\u5c06 GL_INT \u4f5c\u4e3a\u7b2c\u4e09\u4e2a\u53c2\u6570\u4f20\u9012\u3002 \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4eceassimp\u6570\u636e\u7ed3\u6784\u4e2d\u63d0\u53d6\u9aa8\u9abc\u91cd\u91cf\u4fe1\u606f\u3002\u8ba9\u6211\u4eec\u5728Model\u7c7b\u4e2d\u8fdb\u884c\u4e00\u4e9b\u66f4\u6539\uff1a struct BoneInfo { /*id is index in finalBoneMatrices*/ int id; /*offset matrix transforms vertex from model space to bone space*/ glm::mat4 offset; }; \u6b64 BoneInfo \u5c06\u5b58\u50a8\u6211\u4eec\u7684\u504f\u79fb\u77e9\u9635\uff0c\u4ee5\u53ca\u4e00\u4e2a\u552f\u4e00\u7684id\uff0c\u8be5id\u5c06\u7528\u4f5c\u7d22\u5f15\uff0c\u5c06\u5176\u5b58\u50a8\u5728\u6211\u4eec\u4e4b\u524d\u5728\u7740\u8272\u5668\u4e2d\u770b\u5230\u7684\u6700\u7ec8 BoneMatrices \u6570\u7ec4\u4e2d\u3002\u73b0\u5728\u6211\u4eec\u5c06\u5728Model\u4e2d\u6dfb\u52a0\u9aa8\u91cf\u63d0\u53d6\u652f\u6301\uff1a class Model { private: ... std::map<string, BoneInfo> m_BoneInfoMap; // int m_BoneCounter = 0; auto& GetBoneInfoMap() { return m_BoneInfoMap; } int& GetBoneCount() { return m_BoneCounter; } ... void SetVertexBoneDataToDefault(Vertex& vertex) { for (int i = 0; i < MAX_BONE_WEIGHTS; i++) { vertex.m_BoneIDs[i] = -1; vertex.m_Weights[i] = 0.0f; } } Mesh processMesh(aiMesh* mesh, const aiScene* scene) { vector vertices; vector indices; vector textures; for (unsigned int i = 0; i < mesh->mNumVertices; i++) { Vertex vertex; SetVertexBoneDataToDefault(vertex); vertex.Position = AssimpGLMHelpers::GetGLMVec(mesh->mVertices[i]); vertex.Normal = AssimpGLMHelpers::GetGLMVec(mesh->mNormals[i]); if (mesh->mTextureCoords[0]) { glm::vec2 vec; vec.x = mesh->mTextureCoords[0][i].x; vec.y = mesh->mTextureCoords[0][i].y; vertex.TexCoords = vec; } else vertex.TexCoords = glm::vec2(0.0f, 0.0f); vertices.push_back(vertex); } ... ExtractBoneWeightForVertices(vertices,mesh,scene); return Mesh(vertices, indices, textures); } void SetVertexBoneData(Vertex& vertex, int boneID, float weight) { for (int i = 0; i < MAX_BONE_WEIGHTS; ++i) { if (vertex.m_BoneIDs[i] < 0) { vertex.m_Weights[i] = weight; vertex.m_BoneIDs[i] = boneID; break; } } } void ExtractBoneWeightForVertices(std::vector& vertices, aiMesh* mesh, const aiScene* scene) { for (int boneIndex = 0; boneIndex < mesh->mNumBones; ++boneIndex) { int boneID = -1; std::string boneName = mesh->mBones[boneIndex]->mName.C_Str(); if (m_BoneInfoMap.find(boneName) == m_BoneInfoMap.end()) { BoneInfo newBoneInfo; newBoneInfo.id = m_BoneCounter; newBoneInfo.offset = AssimpGLMHelpers::ConvertMatrixToGLMFormat( mesh->mBones[boneIndex]->mOffsetMatrix); m_BoneInfoMap[boneName] = newBoneInfo; boneID = m_BoneCounter; m_BoneCounter++; } else { boneID = m_BoneInfoMap[boneName].id; } assert(boneID != -1); auto weights = mesh->mBones[boneIndex]->mWeights; int numWeights = mesh->mBones[boneIndex]->mNumWeights; for (int weightIndex = 0; weightIndex < numWeights; ++weightIndex) { int vertexId = weights[weightIndex].mVertexId; float weight = weights[weightIndex].mWeight; assert(vertexId <= vertices.size()); SetVertexBoneData(vertices[vertexId], boneID, weight); } } } ... }; \u6211\u4eec\u9996\u5148\u58f0\u660e\u4e00\u4e2a\u6620\u5c04 m_BoneInfoMap \u548c\u4e00\u4e2a\u8ba1\u6570\u5668 m_BoneCounter \uff0c\u4e00\u65e6\u6211\u4eec\u8bfb\u53d6\u5230\u4e00\u4e2a\u65b0\u7684\u9aa8\u9abc\uff0c\u5b83\u5c31\u4f1a\u589e\u52a0\u3002\u6211\u4eec\u5728\u524d\u9762\u7684\u56fe\u8868\u4e2d\u770b\u5230\uff0c\u6bcf\u4e2a aiMesh \u90fd\u5305\u542b\u4e0e aiMesh \u5173\u8054\u7684\u6240\u6709 aiBone \u3002\u9aa8\u91cf\u63d0\u53d6\u7684\u6574\u4e2a\u8fc7\u7a0b\u90fd\u662f\u4ece processMesh \u51fd\u6570\u5f00\u59cb\u7684\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5faa\u73af\u8fed\u4ee3\uff0c\u6211\u4eec\u901a\u8fc7\u8c03\u7528\u51fd\u6570 SetVertexBoneDataToDefault \u5c06 m_BoneID \u548c m_Weights \u8bbe\u7f6e\u4e3a\u5176\u9ed8\u8ba4\u503c\u3002\u5c31\u5728 processMesh \u51fd\u6570\u7ed3\u675f\u4e4b\u524d\uff0c\u6211\u4eec\u8c03\u7528 ExtractBoneWeightData \u3002\u5728 ExtractBoneWeightData \u4e2d\uff0c\u6211\u4eec\u4e3a\u6bcf\u4e2aaiBone\u8fd0\u884cfor\u5faa\u73af\uff0c\u5e76\u68c0\u67e5\u8be5\u9aa8\u9abc\u662f\u5426\u5df2\u5b58\u5728\u4e8e m_BoneInfoMap \u4e2d\u3002\u5982\u679c\u6211\u4eec\u627e\u4e0d\u5230\u5b83\uff0c\u90a3\u4e48\u5b83\u88ab\u8ba4\u4e3a\u662f\u4e00\u5757\u65b0\u9aa8\u5934\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5e26\u6709id\u7684\u65b0 BoneInfo \uff0c\u5e76\u5c06\u5176\u5173\u8054\u7684 mOffsetMatrix \u5b58\u50a8\u5230\u5b83\u3002\u7136\u540e\u6211\u4eec\u5c06\u8fd9\u4e2a\u65b0 BoneIInfo \u5b58\u50a8\u5728 m_BoneInfoMap \u4e2d\uff0c\u7136\u540e\u6211\u4eec\u9012\u589e m_BoneCounter \u8ba1\u6570\u5668\uff0c\u4e3a\u4e0b\u4e00\u5757\u9aa8\u5934\u521b\u5efa\u4e00\u4e2aid\u3002\u5982\u679c\u6211\u4eec\u5728 m_BoneInfoMap \u4e2d\u627e\u5230\u9aa8\u9abc\u540d\u79f0\uff0c\u90a3\u4e48\u8fd9\u610f\u5473\u7740\u8be5\u9aa8\u9abc\u4f1a\u5f71\u54cd\u8d85\u51fa\u5176\u8303\u56f4\u7684\u7f51\u683c\u9876\u70b9\u3002\u6240\u4ee5\u6211\u4eec\u53d6\u5b83\u7684Id\uff0c\u8fdb\u4e00\u6b65\u4e86\u89e3\u5b83\u4f1a\u5f71\u54cd\u54ea\u4e9b\u9876\u70b9\u3002 \u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u6211\u4eec\u6b63\u5728\u8c03\u7528 AssimpGLMHelpers::ConvertMatrixToGLMFormat \u3002Assimp\u4ee5\u4e0eGLM\u4e0d\u540c\u7684\u683c\u5f0f\u5b58\u50a8\u5176\u77e9\u9635\u6570\u636e\uff0c\u56e0\u6b64\u6b64\u51fd\u6570\u4ec5\u4e3a\u6211\u4eec\u63d0\u4f9bGLM\u683c\u5f0f\u7684\u77e9\u9635\u3002 \u6211\u4eec\u5df2\u7ecf\u63d0\u53d6\u4e86\u9aa8\u9abc\u7684 offsetMatrix \uff0c\u73b0\u5728\u6211\u4eec\u5c06\u7b80\u5355\u5730\u8fed\u4ee3\u5176 aiVertexWeightarray \uff0c\u63d0\u53d6\u5c06\u53d7\u6b64\u9aa8\u9abc\u5f71\u54cd\u7684\u6240\u6709\u9876\u70b9\u7d22\u5f15\u53ca\u5176\u5404\u81ea\u7684\u6743\u91cd\uff0c\u5e76\u8c03\u7528 SetVertexBoneData \u4ee5\u4f7f\u7528\u63d0\u53d6\u7684\u4fe1\u606f\u586b\u5145 Vertex.boneIds \u548c Vertex.weights \u3002 \u545c\uff01\u5230\u8fd9\u91cc\u4f60\u5e94\u5f53\u4f11\u606f\u4e00\u4e0b\u3002 \u9aa8\u9abc\u3001\u52a8\u753b\u548c\u52a8\u753b\u5236\u4f5c\u7c7b \u8fd9\u662f\u7c7b\u7684\u89c6\u56fe\uff1a \u8ba9\u6211\u4eec\u63d0\u9192\u81ea\u5df1\u6211\u4eec\u6b63\u5728\u52aa\u529b\u5b9e\u73b0\u4ec0\u4e48\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u6e32\u67d3\u5e27\uff0c\u6211\u4eec\u5e0c\u671b\u5e73\u6ed1\u5730\u63d2\u503c\u7ee7\u627f\u4e2d\u7684\u6240\u6709\u9aa8\u9abc\uff0c\u5e76\u83b7\u5f97\u5b83\u4eec\u7684\u6700\u7ec8\u53d8\u6362\u77e9\u9635\uff0c\u8fd9\u4e9b\u77e9\u9635\u5c06\u63d0\u4f9b\u7ed9\u7740\u8272\u5668\u7edf\u4e00\u7684finalBonesMatrix\u3002\u4ee5\u4e0b\u662f\u6bcf\u4e2a\u7c7b\u7684\u5185\u5bb9\uff1a Bone : \u4eceaiNodeAnim\u8bfb\u53d6\u6240\u6709\u5173\u952e\u5e27\u6570\u636e\u7684\u5355\u4e2a\u9aa8\u9abc\u3002\u5b83\u8fd8\u5c06\u6839\u636e\u5f53\u524d\u52a8\u753b\u65f6\u95f4\u5728\u5173\u952e\u5e27\u4e4b\u95f4\u8fdb\u884c\u63d2\u503c\uff0c\u5373\u5e73\u79fb\u3001\u7f29\u653e\u548c\u65cb\u8f6c\u3002 AssimpNodeData : \u8fd9\u4e2a\u7ed3\u6784\u4f53\u5c06\u5e2e\u52a9\u6211\u4eec\u5c06\u52a8\u753b\u4eceAssimp\u63d0\u53d6\u51fa\u6765\u3002 Animation : \u4eceaiAnimation\u8bfb\u53d6\u6570\u636e\u5e76\u521b\u5efaBones\u7684\u7ee7\u627f\u8bb0\u5f55\u7684\u8d44\u6e90\u3002 Animator : \u8fd9\u5c06\u8bfb\u53d6AssimpNodeData\u7684\u7ee7\u627f\u65b9\u6cd5\uff0c\u4ee5\u9012\u5f52\u65b9\u5f0f\u63d2\u5165\u6240\u6709\u9aa8\u9abc\uff0c\u7136\u540e\u4e3a\u6211\u4eec\u51c6\u5907\u6240\u9700\u7684\u6700\u7ec8\u9aa8\u9abc\u8f6c\u6362\u77e9\u9635\u3002 \u8fd9\u5c31\u662f\u4ee3\u7801\uff1a struct KeyPosition { glm::vec3 position; float timeStamp; }; struct KeyRotation { glm::quat orientation; float timeStamp; }; struct KeyScale { glm::vec3 scale; float timeStamp; }; class Bone { private: std::vector<KeyPosition> m_Positions; std::vector<KeyRotation> m_Rotations; std::vector<KeyScale> m_Scales; int m_NumPositions; int m_NumRotations; int m_NumScalings; glm::mat4 m_LocalTransform; std::string m_Name; int m_ID; public: /*reads keyframes from aiNodeAnim*/ Bone(const std::string& name, int ID, const aiNodeAnim* channel) : m_Name(name), m_ID(ID), m_LocalTransform(1.0f) { m_NumPositions = channel->mNumPositionKeys; for (int positionIndex = 0; positionIndex < m_NumPositions; ++positionIndex) { aiVector3D aiPosition = channel->mPositionKeys[positionIndex].mValue; float timeStamp = channel->mPositionKeys[positionIndex].mTime; KeyPosition data; data.position = AssimpGLMHelpers::GetGLMVec(aiPosition); data.timeStamp = timeStamp; m_Positions.push_back(data); } m_NumRotations = channel->mNumRotationKeys; for (int rotationIndex = 0; rotationIndex < m_NumRotations; ++rotationIndex) { aiQuaternion aiOrientation = channel->mRotationKeys[rotationIndex].mValue; float timeStamp = channel->mRotationKeys[rotationIndex].mTime; KeyRotation data; data.orientation = AssimpGLMHelpers::GetGLMQuat(aiOrientation); data.timeStamp = timeStamp; m_Rotations.push_back(data); } m_NumScalings = channel->mNumScalingKeys; for (int keyIndex = 0; keyIndex < m_NumScalings; ++keyIndex) { aiVector3D scale = channel->mScalingKeys[keyIndex].mValue; float timeStamp = channel->mScalingKeys[keyIndex].mTime; KeyScale data; data.scale = AssimpGLMHelpers::GetGLMVec(scale); data.timeStamp = timeStamp; m_Scales.push_back(data); } } /*interpolates b/w positions,rotations & scaling keys based on the curren time of the animation and prepares the local transformation matrix by combining all keys tranformations*/ void Update(float animationTime) { glm::mat4 translation = InterpolatePosition(animationTime); glm::mat4 rotation = InterpolateRotation(animationTime); glm::mat4 scale = InterpolateScaling(animationTime); m_LocalTransform = translation * rotation * scale; } glm::mat4 GetLocalTransform() { return m_LocalTransform; } std::string GetBoneName() const { return m_Name; } int GetBoneID() { return m_ID; } /* Gets the current index on mKeyPositions to interpolate to based on the current animation time*/ int GetPositionIndex(float animationTime) { for (int index = 0; index < m_NumPositions - 1; ++index) { if (animationTime < m_Positions[index + 1].timeStamp) return index; } assert(0); } /* Gets the current index on mKeyRotations to interpolate to based on the current animation time*/ int GetRotationIndex(float animationTime) { for (int index = 0; index < m_NumRotations - 1; ++index) { if (animationTime < m_Rotations[index + 1].timeStamp) return index; } assert(0); } /* Gets the current index on mKeyScalings to interpolate to based on the current animation time */ int GetScaleIndex(float animationTime) { for (int index = 0; index < m_NumScalings - 1; ++index) { if (animationTime < m_Scales[index + 1].timeStamp) return index; } assert(0); } private: /* Gets normalized value for Lerp & Slerp*/ float GetScaleFactor(float lastTimeStamp, float nextTimeStamp, float animationTime) { float scaleFactor = 0.0f; float midWayLength = animationTime - lastTimeStamp; float framesDiff = nextTimeStamp - lastTimeStamp; scaleFactor = midWayLength / framesDiff; return scaleFactor; } /*figures out which position keys to interpolate b/w and performs the interpolation and returns the translation matrix*/ glm::mat4 InterpolatePosition(float animationTime) { if (1 == m_NumPositions) return glm::translate(glm::mat4(1.0f), m_Positions[0].position); int p0Index = GetPositionIndex(animationTime); int p1Index = p0Index + 1; float scaleFactor = GetScaleFactor(m_Positions[p0Index].timeStamp, m_Positions[p1Index].timeStamp, animationTime); glm::vec3 finalPosition = glm::mix(m_Positions[p0Index].position, m_Positions[p1Index].position, scaleFactor); return glm::translate(glm::mat4(1.0f), finalPosition); } /*figures out which rotations keys to interpolate b/w and performs the interpolation and returns the rotation matrix*/ glm::mat4 InterpolateRotation(float animationTime) { if (1 == m_NumRotations) { auto rotation = glm::normalize(m_Rotations[0].orientation); return glm::toMat4(rotation); } int p0Index = GetRotationIndex(animationTime); int p1Index = p0Index + 1; float scaleFactor = GetScaleFactor(m_Rotations[p0Index].timeStamp, m_Rotations[p1Index].timeStamp, animationTime); glm::quat finalRotation = glm::slerp(m_Rotations[p0Index].orientation, m_Rotations[p1Index].orientation, scaleFactor); finalRotation = glm::normalize(finalRotation); return glm::toMat4(finalRotation); } /*figures out which scaling keys to interpolate b/w and performs the interpolation and returns the scale matrix*/ glm::mat4 Bone::InterpolateScaling(float animationTime) { if (1 == m_NumScalings) return glm::scale(glm::mat4(1.0f), m_Scales[0].scale); int p0Index = GetScaleIndex(animationTime); int p1Index = p0Index + 1; float scaleFactor = GetScaleFactor(m_Scales[p0Index].timeStamp, m_Scales[p1Index].timeStamp, animationTime); glm::vec3 finalScale = glm::mix(m_Scales[p0Index].scale, m_Scales[p1Index].scale , scaleFactor); return glm::scale(glm::mat4(1.0f), finalScale); } }; \u6211\u4eec\u9996\u5148\u4e3a\u6211\u4eec\u7684\u952e\u7c7b\u578b\u521b\u5efa3\u4e2a\u7ed3\u6784\u3002\u6bcf\u4e2a\u7ed3\u6784\u90fd\u6709\u4e00\u4e2a\u503c\u548c\u4e00\u4e2a\u65f6\u95f4\u6233\u3002\u65f6\u95f4\u6233\u544a\u8bc9\u6211\u4eec\u5728\u52a8\u753b\u7684\u54ea\u4e2a\u70b9\u9700\u8981\u63d2\u503c\u5230\u5b83\u7684\u503c\u3002Bone\u6709\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u5b83\u4ece aiNodeAnim \u8bfb\u53d6\u5bc6\u94a5\u5e76\u5c06\u5bc6\u94a5\u53ca\u5176\u65f6\u95f4\u6233\u5b58\u50a8\u5230 mPositionKeys \u3001 mRotationKeys \u548c mScalingKeys \u3002\u4e3b\u8981\u63d2\u503c\u8fc7\u7a0b\u4ece\u66f4\u65b0(float animationTime)\u5f00\u59cb\uff0c\u8be5\u8fc7\u7a0b\u5728\u6bcf\u5e27\u8c03\u7528\u4e00\u6b21\u3002\u6b64\u51fd\u6570\u8c03\u7528\u6240\u6709\u952e\u7c7b\u578b\u7684\u76f8\u5e94\u63d2\u503c\u51fd\u6570\uff0c\u5e76\u7ec4\u5408\u6240\u6709\u6700\u7ec8\u63d2\u503c\u7ed3\u679c\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u52304x4\u77e9\u9635 m_LocalTransform \u4e2d\u3002\u5e73\u79fb\u548c\u7f29\u653e\u5173\u952e\u70b9\u7684\u63d2\u503c\u51fd\u6570\u76f8\u4f3c\uff0c\u4f46\u5bf9\u4e8e\u65cb\u8f6c\uff0c\u6211\u4eec\u4f7f\u7528Slerp\u5728\u56db\u5143\u6570\u4e4b\u95f4\u8fdb\u884c\u63d2\u503c\u3002Lerp\u548cSlerp\u90fd\u67093\u4e2a\u8bba\u70b9\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u53d6\u6700\u540e\u4e00\u4e2a\u952e\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u53d6\u4e0b\u4e00\u4e2a\u952e\u548c\u7b2c\u4e09\u4e2a\u53c2\u6570\u53d6\u8303\u56f4\u4e3a0-1\u7684\u503c\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u79f0\u4e4b\u4e3a\u6bd4\u4f8b\u56e0\u5b50\u3002\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u5728\u51fd\u6570 GetScaleFactor \u4e2d\u8ba1\u7b97\u8fd9\u4e2a\u6bd4\u4f8b\u56e0\u5b50\uff1a \u5728\u4ee3\u7801\u4e2d\uff1a float midWayLength = animationTime - lastTimeStamp; float framesDiff = nextTimeStamp - lastTimeStamp; scaleFactor = midWayLength / framesDiff; \u73b0\u5728\u8ba9\u6211\u4eec\u7ee7\u7eed\u8f6c\u5230 Animation \u7c7b\uff1a struct AssimpNodeData { glm::mat4 transformation; std::string name; int childrenCount; std::vector<AssimpNodeData> children; }; class Animation { public: Animation() = default; Animation(const std::string& animationPath, Model* model) { Assimp::Importer importer; const aiScene* scene = importer.ReadFile(animationPath, aiProcess_Triangulate); assert(scene && scene->mRootNode); auto animation = scene->mAnimations[0]; m_Duration = animation->mDuration; m_TicksPerSecond = animation->mTicksPerSecond; ReadHeirarchyData(m_RootNode, scene->mRootNode); ReadMissingBones(animation, *model); } ~Animation() { } Bone* FindBone(const std::string& name) { auto iter = std::find_if(m_Bones.begin(), m_Bones.end(), [&](const Bone& Bone) { return Bone.GetBoneName() == name; } ); if (iter == m_Bones.end()) return nullptr; else return &(*iter); } inline float GetTicksPerSecond() { return m_TicksPerSecond; } inline float GetDuration() { return m_Duration;} inline const AssimpNodeData& GetRootNode() { return m_RootNode; } inline const std::map<std::string,BoneInfo>& GetBoneIDMap() { return m_BoneInfoMap; } private: void ReadMissingBones(const aiAnimation* animation, Model& model) { int size = animation->mNumChannels; auto& boneInfoMap = model.GetBoneInfoMap();//getting m_BoneInfoMap from Model class int& boneCount = model.GetBoneCount(); //getting the m_BoneCounter from Model class //reading channels(bones engaged in an animation and their keyframes) for (int i = 0; i < size; i++) { auto channel = animation->mChannels[i]; std::string boneName = channel->mNodeName.data; if (boneInfoMap.find(boneName) == boneInfoMap.end()) { boneInfoMap[boneName].id = boneCount; boneCount++; } m_Bones.push_back(Bone(channel->mNodeName.data, boneInfoMap[channel->mNodeName.data].id, channel)); } m_BoneInfoMap = boneInfoMap; } void ReadHeirarchyData(AssimpNodeData& dest, const aiNode* src) { assert(src); dest.name = src->mName.data; dest.transformation = AssimpGLMHelpers::ConvertMatrixToGLMFormat(src->mTransformation); dest.childrenCount = src->mNumChildren; for (int i = 0; i < src->mNumChildren; i++) { AssimpNodeData newData; ReadHeirarchyData(newData, src->mChildren[i]); dest.children.push_back(newData); } } float m_Duration; int m_TicksPerSecond; std::vector<Bone> m_Bones; AssimpNodeData m_RootNode; std::map<std::string, BoneInfo> m_BoneInfoMap; }; \u5728\u8fd9\u91cc\uff0c\u52a8\u753b\u5bf9\u8c61\u7684\u521b\u5efa\u4ece\u6784\u9020\u51fd\u6570\u5f00\u59cb\u3002\u8fd9\u9700\u8981\u4e24\u4e2a\u8bba\u70b9\u3002\u9996\u5148\uff0c\u52a8\u753b\u6587\u4ef6\u7684\u8def\u5f84&\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8be5\u52a8\u753b\u7684\u6a21\u578b\u3002\u7a0d\u540e\u60a8\u5c06\u770b\u5230\u6211\u4eec\u4e3a\u4ec0\u4e48\u9700\u8981\u6b64\u6a21\u578b\u53c2\u8003\u3002\u7136\u540e\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a Assimp::Importer \u6765\u8bfb\u53d6\u52a8\u753b\u6587\u4ef6\uff0c\u7136\u540e\u8fdb\u884c\u65ad\u8a00\u68c0\u67e5\uff0c\u5982\u679c\u627e\u4e0d\u5230\u52a8\u753b\uff0c\u8be5\u68c0\u67e5\u5c06\u5f15\u53d1\u9519\u8bef\u3002\u7136\u540e\u6211\u4eec\u8bfb\u53d6\u4e00\u822c\u7684\u52a8\u753b\u6570\u636e\uff0c\u6bd4\u5982\u8fd9\u4e2a\u52a8\u753b\u6709\u591a\u957f\uff0c\u5373 mDuration \u548c\u7531 mTicksPerSecond \u8868\u793a\u7684\u52a8\u753b\u901f\u5ea6\u3002\u7136\u540e\u6211\u4eec\u8c03\u7528 ReadHeirarchyData \uff0c\u5b83\u590d\u5236Assimp\u7684 aiNode \u7ee7\u627f\u6743\u5e76\u521b\u5efa AssimpNodeData \u7684\u7ee7\u627f\u6743\u3002 \u7136\u540e\u6211\u4eec\u8c03\u7528\u4e00\u4e2a\u540d\u4e3a ReadMissingBones \u7684\u51fd\u6570\u3002\u6211\u4e0d\u5f97\u4e0d\u7f16\u5199\u8fd9\u4e2a\u51fd\u6570\uff0c\u56e0\u4e3a\u6709\u65f6\u5f53\u6211\u5355\u72ec\u52a0\u8f7dFBX\u6a21\u578b\u65f6\uff0c\u5b83\u7f3a\u5c11\u4e00\u4e9b\u9aa8\u9abc\uff0c\u800c\u6211\u5728\u52a8\u753b\u6587\u4ef6\u4e2d\u627e\u5230\u4e86\u8fd9\u4e9b\u7f3a\u5931\u7684\u9aa8\u9abc\u3002\u6b64\u51fd\u6570\u8bfb\u53d6\u4e22\u5931\u7684\u9aa8\u9abc\u4fe1\u606f\uff0c\u5e76\u5c06\u5176\u4fe1\u606f\u5b58\u50a8\u5728\u6a21\u578b\u7684 m_BoneInfoMap \u4e2d\uff0c\u5e76\u5728 m_BoneIInfoMap \u4e2d\u672c\u5730\u4fdd\u5b58 m_BoneIinfoMap \u7684\u5f15\u7528\u3002 \u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u52a8\u753b\u3002\u73b0\u5728\u8ba9\u6211\u4eec\u770b\u770b\u6211\u4eec\u7684\u6700\u540e\u9636\u6bb5\uff0cAnimator\u7c7b\uff1a class Animator { public: Animator::Animator(Animation* Animation) { m_CurrentTime = 0.0; m_CurrentAnimation = currentAnimation; m_FinalBoneMatrices.reserve(100); for (int i = 0; i < 100; i++) m_FinalBoneMatrices.push_back(glm::mat4(1.0f)); } void Animator::UpdateAnimation(float dt) { m_DeltaTime = dt; if (m_CurrentAnimation) { m_CurrentTime += m_CurrentAnimation->GetTicksPerSecond() * dt; m_CurrentTime = fmod(m_CurrentTime, m_CurrentAnimation->GetDuration()); CalculateBoneTransform(&m_CurrentAnimation->GetRootNode(), glm::mat4(1.0f)); } } void Animator::PlayAnimation(Animation* pAnimation) { m_CurrentAnimation = pAnimation; m_CurrentTime = 0.0f; } void Animator::CalculateBoneTransform(const AssimpNodeData* node, glm::mat4 parentTransform) { std::string nodeName = node->name; glm::mat4 nodeTransform = node->transformation; Bone* Bone = m_CurrentAnimation->FindBone(nodeName); if (Bone) { Bone->Update(m_CurrentTime); nodeTransform = Bone->GetLocalTransform(); } glm::mat4 globalTransformation = parentTransform * nodeTransform; auto boneInfoMap = m_CurrentAnimation->GetBoneIDMap(); if (boneInfoMap.find(nodeName) != boneInfoMap.end()) { int index = boneInfoMap[nodeName].id; glm::mat4 offset = boneInfoMap[nodeName].offset; m_FinalBoneMatrices[index] = globalTransformation * offset; } for (int i = 0; i < node->childrenCount; i++) CalculateBoneTransform(&node->children[i], globalTransformation); } std::vector<glm::mat4> GetFinalBoneMatrices() { return m_FinalBoneMatrices; } private: std::vector<glm::mat4> m_FinalBoneMatrices; Animation* m_CurrentAnimation; float m_CurrentTime; float m_DeltaTime; }; Animator \u6784\u9020\u51fd\u6570\u5c06\u64ad\u653e\u52a8\u753b\uff0c\u7136\u540e\u7ee7\u7eed\u5c06\u52a8\u753b\u65f6\u95f4 m_CurrentTime \u91cd\u7f6e\u4e3a0\u3002\u5b83\u8fd8\u521d\u59cb\u5316 m_FinalBoneMatrices \uff0c\u8fd9\u662f\u4e00\u4e2a std::vector\\<glm::mat4\\> \u3002\u8fd9\u91cc\u7684\u4e3b\u8981\u6ce8\u610f\u70b9\u662f UpdateAnimation(float deltaTime) \u51fd\u6570\u3002\u5b83\u4ee5 m_TicksPerSecond \u7684\u901f\u7387\u63a8\u8fdb m_CurrentTime \uff0c\u7136\u540e\u8c03\u7528 CalculateBoneTransform \u51fd\u6570\u3002\u6211\u4eec\u5c06\u5728\u5f00\u59cb\u65f6\u4f20\u9012\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u662f m_CurrentAnimation \u7684 m_RootNode \uff0c\u7b2c\u4e8c\u4e2a\u662f\u4f5c\u4e3a parentTransform \u4f20\u9012\u7684\u8eab\u4efd\u77e9\u9635\u3002\u7136\u540e\uff0c\u901a\u8fc7\u5728 animation \u7684 m_Bones \u6570\u7ec4\u4e2d\u67e5\u627e m_RootNodes \u9aa8\u9abc\u6765\u68c0\u67e5\u8be5\u9aa8\u9abc\u662f\u5426\u53c2\u4e0e\u8be5\u52a8\u753b\u3002\u5982\u679c\u627e\u5230\u9aa8\u9abc\uff0c\u5219\u8c03\u7528 bone.Update() \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5bf9\u6240\u6709\u9aa8\u9abc\u8fdb\u884c\u63d2\u503c\uff0c\u5e76\u5c06\u5c40\u90e8\u9aa8\u9abc\u53d8\u6362\u77e9\u9635\u8fd4\u56de\u5230 nodeTransform \u3002\u4f46\u8fd9\u662f\u5c40\u90e8\u7a7a\u95f4\u77e9\u9635\uff0c\u5982\u679c\u5728\u7740\u8272\u5668\u4e2d\u4f20\u9012\uff0c\u5c06\u56f4\u7ed5\u539f\u70b9\u79fb\u52a8\u9aa8\u9abc\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a nodeTransform \u4e0eparentTransform\u76f8\u4e58\uff0c\u5e76\u5c06\u7ed3\u679c\u5b58\u50a8\u5728 globalTransformation \u4e2d\u3002\u8fd9\u5c31\u8db3\u591f\u4e86\uff0c\u4f46\u9876\u70b9\u4ecd\u5728\u9ed8\u8ba4\u6a21\u578b\u7a7a\u95f4\u4e2d\u3002\u6211\u4eec\u5728 m_BoneInfoMap \u4e2d\u627e\u5230\u504f\u79fb\u77e9\u9635\uff0c\u7136\u540e\u5c06\u5176\u4e0e globalTransfromMatrix \u76f8\u4e58\u3002\u6211\u4eec\u8fd8\u5c06\u83b7\u5f97id\u7d22\u5f15\uff0c\u8be5\u7d22\u5f15\u5c06\u7528\u4e8e\u5199\u5165\u8be5\u9aa8\u9abc\u5230 m_FinalBoneMatrices \u7684\u6700\u7ec8\u8f6c\u6362\u3002 \u6700\u540e\u6211\u4eec\u4e3a\u8be5\u8282\u70b9\u7684\u6bcf\u4e2a\u5b50\u8282\u70b9\u8c03\u7528 CalculateBoneTransform \uff0c\u5e76\u5c06 globalTransformation \u4f5c\u4e3a parentTransform \u4f20\u9012\u3002\u5f53\u6ca1\u6709\u5b50\u8282\u70b9\u9700\u8981\u8fdb\u4e00\u6b65\u5904\u7406\u65f6\uff0c\u6211\u4eec\u4f1a\u8df3\u51fa\u8fd9\u4e2a\u9012\u5f52\u5faa\u73af\u3002 \u8ba9\u6211\u4eec\u52a8\u8d77\u6765 \u6211\u4eec\u8f9b\u52e4\u5de5\u4f5c\u7684\u6210\u679c\u7ec8\u4e8e\u6765\u4e86\uff01\u4ee5\u4e0b\u662f\u6211\u4eec\u5c06\u5982\u4f55\u5728main.cpp\u4e2d\u64ad\u653e\u52a8\u753b\uff1a int main() { ... Model ourModel(FileSystem::getPath(\"resources/objects/vampire/dancing_vampire.dae\")); Animation danceAnimation(FileSystem::getPath(\"resources/objects/vampire/dancing_vampire.dae\"), &ourModel); Animator animator(&danceAnimation); // draw in wireframe //glPolygonMode(GL_FRONT_AND_BACK, GL_LINE); // render loop // ----------- while (!glfwWindowShouldClose(window)) { // per-frame time logic // -------------------- float currentFrame = glfwGetTime(); deltaTime = currentFrame - lastFrame; lastFrame = currentFrame; // input // ----- processInput(window); animator.UpdateAnimation(deltaTime); // render // ------ glClearColor(0.05f, 0.05f, 0.05f, 1.0f); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // don't forget to enable shader before setting uniforms ourShader.use(); // view/projection transformations glm::mat4 projection = glm::perspective(glm::radians(camera.Zoom), (float)SCR_WIDTH / (float)SCR_HEIGHT, 0.1f, 100.0f); glm::mat4 view = camera.GetViewMatrix(); ourShader.setMat4(\"projection\", projection); ourShader.setMat4(\"view\", view); auto transforms = animator.GetFinalBoneMatrices(); for (int i = 0; i < transforms.size(); ++i) ourShader.setMat4(\"finalBonesMatrices[\" + std::to_string(i) + \"]\", transforms[i]); // render the loaded model glm::mat4 model = glm::mat4(1.0f); // translate it down so it's at the center of the scene model = glm::translate(model, glm::vec3(0.0f, -0.4f, 0.0f)); // it's a bit too big for our scene, so scale it down model = glm::scale(model, glm::vec3(.5f, .5f, .5f)); ourShader.setMat4(\"model\", model); ourModel.Draw(ourShader); // glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.) // ------------------------------------------------------------------------------- glfwSwapBuffers(window); glfwPollEvents(); } // glfw: terminate, clearing all previously allocated GLFW resources. // ------------------------------------------------------------------ glfwTerminate(); return 0; \u6211\u4eec\u4ece\u52a0\u8f7d\u6a21\u578b\u5f00\u59cb\uff0c\u8be5\u6a21\u578b\u5c06\u4e3a\u7740\u8272\u5668\u8bbe\u7f6e\u9aa8\u9abc\u91cd\u91cf\u6570\u636e\uff0c\u7136\u540e\u901a\u8fc7\u4e3a\u5176\u63d0\u4f9b\u8def\u5f84\u6765\u521b\u5efa\u52a8\u753b\u3002\u7136\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u5c06\u521b\u5efa\u7684 Animation \u4f20\u9012\u7ed9\u5b83\u6765\u521b\u5efa Animator \u5bf9\u8c61\u3002\u5728\u6e32\u67d3\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u66f4\u65b0 Animator \uff0c\u8fdb\u884c\u6700\u7ec8\u7684\u9aa8\u9abc\u53d8\u6362\u5e76\u5c06\u5176\u63d0\u4f9b\u7ed9\u7740\u8272\u5668\u3002\u8fd9\u662f\u6211\u4eec\u4e00\u76f4\u5728\u7b49\u5f85\u7684\u8f93\u51fa: \u4ece \u6b64\u5904 \u4e0b\u8f7d\u4f7f\u7528\u7684\u6a21\u578b\u3002\u8bf7\u6ce8\u610f\uff0c\u52a8\u753b\u548c\u7f51\u683c\u662f\u5728\u5355\u4e2aDAE(collada)\u6587\u4ef6\u4e2d\u70d8\u7119\u7684\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u8fd9\u4e2a\u6f14\u793a\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002 \u5ef6\u4f38\u9605\u8bfb Quaternions : An article by songho to understand quaternions in depth. Skeletal Animation with Assimp : An article by OGL Dev. Skeletal Animation with Java : A fantastic youtube playlist by Thin Matrix. Why Quaternions should be used for Rotation : An awesome gamasutra article.","title":"\u9aa8\u9abc\u52a8\u753b"},{"location":"08%20Guest%20Articles/2020/01%20Skeletal%20Animation/#_1","text":"\u539f\u6587 Skeletal-Animation \u4f5c\u8005 Ankit Singh Kushwah \u7ffb\u8bd1 orbitgw \u6821\u5bf9 orbitgw 3D\u52a8\u753b\u53ef\u4ee5\u8ba9\u6211\u4eec\u7684\u6e38\u620f\u6829\u6829\u5982\u751f\u30023D\u4e16\u754c\u4e2d\u7684\u7269\u4f53\uff0c\u6bd4\u5982\u4eba\u7c7b\u548c\u52a8\u7269\uff0c\u5f53\u5b83\u4eec\u505a\u67d0\u4e9b\u4e8b\u60c5\u79fb\u52a8\u56db\u80a2\u65f6\uff0c\u6bd4\u5982\u8d70\u8def\u3001\u8dd1\u6b65\u548c\u653b\u51fb\uff0c\u4f1a\u4f7f\u6211\u4eec\u611f\u5230\u66f4\u751f\u52a8\u3002\u672c\u7bc7\u6559\u7a0b\u662f\u5173\u4e8e\u4f60\u4eec\u4e00\u76f4\u5728\u7b49\u5f85\u7684\u9aa8\u9abc\u52a8\u753b\u3002\u6211\u4eec\u5c06\u9996\u5148\u5f7b\u5e95\u7406\u89e3\u8fd9\u4e2a\u6982\u5ff5\uff0c\u7136\u540e\u4e86\u89e3\u4f7f\u7528Assimp\u5236\u4f5c3D\u6a21\u578b\u52a8\u753b\u6240\u9700\u7684\u6570\u636e\u3002\u6211\u5efa\u8bae\u60a8\u5b8c\u6210\u672c\u6559\u7a0b\u7684 \u6a21\u578b\u52a0\u8f7d \u90e8\u5206\uff0c\u56e0\u4e3a\u672c\u6559\u7a0b\u4ee3\u7801\u5c06\u4ece\u90a3\u91cc\u7ee7\u7eed\u3002\u4f60\u4ecd\u7136\u53ef\u4ee5\u7406\u89e3\u8fd9\u4e2a\u6982\u5ff5\uff0c\u5e76\u4ee5\u81ea\u5df1\u7684\u65b9\u5f0f\u5b9e\u73b0\u5b83\u3002\u6240\u4ee5\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\u3002","title":"\u9aa8\u9abc\u52a8\u753b"},{"location":"08%20Guest%20Articles/2020/01%20Skeletal%20Animation/#_2","text":"\u8981\u4e86\u89e3\u52a8\u753b\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u57fa\u7840\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u63d2\u503c(Interpolation)\u7684\u6982\u5ff5\u3002\u63d2\u503c\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u5c31\u50cf\u654c\u4eba\u5728\u65f6\u95f4T\u4e0a\u4eceA\u70b9\u79fb\u52a8\u5230B\u70b9\u4e00\u6837\uff0c\u5373\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u53d1\u751f\u5e73\u79fb\u3002\u70ae\u5854\u5e73\u6ed1\u65cb\u8f6c\u4ee5\u9762\u5bf9\u76ee\u6807\uff0c\u5373\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u53d1\u751f\u65cb\u8f6c\uff0c\u6811\u5728\u65f6\u95f4T\u5185\u4ece\u5c3a\u5bf8A\u653e\u5927\u5230\u5c3a\u5bf8B\uff0c\u5373\u968f\u65f6\u95f4\u63a8\u79fb\u53d1\u751f\u7f29\u653e\u3002 \u8bd1\u6ce8 (\u52a8\u753b)\u63d2\u503c\u5c31\u662f \u5173\u952e\u5e27 \u7684\u4e2d\u95f4\u503c\u3002\u6bd4\u5982\u6211\u4eec\u4f7f\u7528Blender\u5236\u4f5c\u52a8\u753b\uff0c\u4e0d\u9700\u8981\u8bbe\u7f6e\u6bcf\u4e00\u5e27\u7684\u9aa8\u9abc\u4f4d\u7f6e\uff0c\u53ea\u9700\u8981\u5728\u51e0\u4e2a\u5173\u952e\u5e27\u4e2d\u8bb0\u5f55\u5b83\u4eec\u7684\u4f4d\u7f6e\uff0c\u65cb\u8f6c\uff0c\u7f29\u653e\u7b49\u7b49\u4fe1\u606f\u3002\u7136\u540e\u7531\u7a0b\u5e8f\u81ea\u52a8\u8ba1\u7b97\u51fa\u7684\u4e2d\u95f4\u7684\u8fc7\u6e21\u5e27\u5c31\u662f\u6211\u4eec\u7684\u63d2\u503c\u3002\u901a\u5e38\u63d2\u503c\u53ef\u4ee5\u4f7f\u7528\u66f2\u7ebf\u63cf\u8ff0\uff0c\u6bd4\u5982\u6211\u4eec\u7684\u8d1d\u585e\u5c14\u66f2\u7ebf\u3002 \u7528\u4e8e\u5e73\u79fb\u548c\u7f29\u653e\u7684\u7b80\u5355\u63d2\u503c\u65b9\u7a0b\u5982\u4e0b\u6240\u793a\uff1a a = a \\cdot (1 - t) + b \\cdot t \u5b83\u88ab\u79f0\u4e3a\u7ebf\u6027\u63d2\u503c\u65b9\u7a0b\u6216Lerp\u3002\u5bf9\u4e8e\u65cb\u8f6c\uff0c\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u5411\u91cf\u3002\u539f\u56e0\u662f\uff0c\u5982\u679c\u6211\u4eec\u7ee7\u7eed\u5c1d\u8bd5\u5728X\uff08\u4fef\u4ef0\uff09\u3001Y\uff08\u504f\u822a\uff09\u548cZ\uff08\u6eda\u8f6c\uff09\u7684\u5411\u91cf\u4e0a\u4f7f\u7528\u7ebf\u6027\u63d2\u503c\u65b9\u7a0b\uff0c\u63d2\u503c\u5c31\u4e0d\u4f1a\u662f\u7ebf\u6027\u7684\u3002\u4f60\u4f1a\u9047\u5230\u4e00\u4e9b\u5947\u602a\u7684\u95ee\u9898\uff0c\u6bd4\u5982Gimbal Lock\uff08\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u53c2\u8003\u8d44\u6599\u90e8\u5206\u4e86\u89e3\u5b83\uff09\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u4f7f\u7528\u56db\u5143\u6570\u8fdb\u884c\u65cb\u8f6c\u3002\u56db\u5143\u6570\u63d0\u4f9b\u4e86\u4e00\u79cd\u53eb\u505a\u7403\u9762\u63d2\u503c\u6216Slerp\u65b9\u7a0b\u7684\u4e1c\u897f\uff0c\u5b83\u7ed9\u51fa\u4e86\u4e0eLerp\u76f8\u540c\u7684\u7ed3\u679c\uff0c\u4f46\u5bf9\u4e8e\u4e24\u4e2a\u65cb\u8f6cA\u548cB\u3002\u6211\u65e0\u6cd5\u89e3\u91ca\u8fd9\u4e2a\u65b9\u7a0b\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u56e0\u4e3a\u5b83\u76ee\u524d\u4e0d\u5728\u8303\u56f4\u5185\u3002\u60a8\u53ef\u4ee5\u67e5\u770b\u4e0b\u9762\u7684\u53c2\u8003\u8d44\u6599\u90e8\u5206\u6765\u7406\u89e3\u56db\u5143\u6570\u3002","title":"\u63d2\u503c"},{"location":"08%20Guest%20Articles/2020/01%20Skeletal%20Animation/#_3","text":"\u52a8\u753b\u7684\u6574\u4e2a\u8fc7\u7a0b\u59cb\u4e8e\u6dfb\u52a0\u7b2c\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u5373blender\u6216Maya\u7b49\u8f6f\u4ef6\u4e2d\u7684\u8499\u76ae(Skin)\u3002\u8499\u76ae\u53ea\u4e0d\u8fc7\u662f\u7f51\u683c(Mesh)\uff0c\u5b83\u4e3a\u6a21\u578b\u6dfb\u52a0\u4e86\u89c6\u89c9\u65b9\u9762\uff0c\u544a\u8bc9\u89c2\u5bdf\u8005\u5b83\u7684\u5916\u89c2\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u60f3\u79fb\u52a8\u4efb\u4f55\u7f51\u683c\uff0c\u90a3\u4e48\u5c31\u50cf\u73b0\u5b9e\u4e16\u754c\u4e00\u6837\uff0c\u4f60\u9700\u8981\u6dfb\u52a0\u9aa8\u9abc\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u4e0b\u9762\u7684\u56fe\u7247\u6765\u4e86\u89e3\u5b83\u5728blender\u7b49\u8f6f\u4ef6\u4e2d\u7684\u5916\u89c2\u3002 \u8fd9\u4e9b\u9aa8\u5934\u901a\u5e38\u662f\u4ee5\u5206\u5c42\u7684\u65b9\u5f0f\u6dfb\u52a0\u7ed9\u4eba\u7c7b\u548c\u52a8\u7269\u7b49\u89d2\u8272\u7684\uff0c\u539f\u56e0\u5f88\u660e\u663e\u3002\u6211\u4eec\u60f3\u8981\u56db\u80a2\u4e4b\u95f4\u7684\u7236\u5b50\u5173\u7cfb(parent-child relationship)\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u79fb\u52a8\u53f3\u80a9\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u53f3\u4e8c\u5934\u808c\u3001\u524d\u81c2\u3001\u624b\u548c\u624b\u6307\u4e5f\u5e94\u8be5\u79fb\u52a8\u3002\u8fd9\u5c31\u662f\u5c42\u6b21\u7ed3\u6784\u7684\u6837\u5b50\uff1a \u5728\u4e0a\u56fe\u4e2d\uff0c\u5982\u679c\u4f60\u6293\u4f4f\u9acb\u9aa8(hip bone)\u5e76\u79fb\u52a8\u5b83\uff0c\u6240\u6709\u7684\u80a2\u4f53\u90fd\u4f1a\u53d7\u5230\u5b83\u7684\u79fb\u52a8\u7684\u5f71\u54cd\u3002 \u6b64\u65f6\uff0c\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u4e3a\u52a8\u753b\u521b\u5efa\u5173\u952e\u5e27\u4e86\u3002\u5173\u952e\u5e27\u662f\u52a8\u753b\u4e2d\u4e0d\u540c\u65f6\u95f4\u70b9\u7684\u59ff\u52bf\u3002\u6211\u4eec\u5c06\u5728\u8fd9\u4e9b\u5173\u952e\u5e27\u4e4b\u95f4\u8fdb\u884c\u63d2\u503c\uff0c\u4ee5\u4fbf\u5728\u4ee3\u7801\u4e2d\u4ece\u4e00\u4e2a\u59ff\u52bf\u5e73\u6ed1\u5730\u8fc7\u6e21\u5230\u53e6\u4e00\u4e2a\u59ff\u52bf\u3002\u4e0b\u9762\u60a8\u53ef\u4ee5\u770b\u5230\u5982\u4f55\u4e3a\u7b80\u5355\u76844\u5e27\u8df3\u8dc3\u52a8\u753b\u521b\u5efa\u59ff\u52bf\uff1a","title":"\u52a8\u753b\u6a21\u578b\u7684\u7ec4\u4ef6\uff1a\u8499\u76ae\u3001\u9aa8\u9abc\u548c\u5173\u952e\u5e27"},{"location":"08%20Guest%20Articles/2020/01%20Skeletal%20Animation/#assimp","text":"\u6211\u4eec\u9a6c\u4e0a\u5c31\u4f1a\u5230\u4ee3\u7801\u90e8\u5206\uff0c\u4f46\u9996\u5148\u6211\u4eec\u9700\u8981\u4e86\u89e3assimp\u662f\u5982\u4f55\u4fdd\u5b58\u5bfc\u5165\u7684\u52a8\u753b\u6570\u636e\u7684\u3002\u770b\u4e0b\u56fe\uff1a \u5c31\u50cf \u6a21\u578b\u52a0\u8f7d \u90e8\u5206\u4e00\u6837\uff0c\u6211\u4eec\u5c06\u4ece aiScene \u6307\u9488\u5f00\u59cb\uff0c\u8be5\u6307\u9488\u5305\u542b\u6307\u5411\u6839\u8282\u70b9\u7684\u6307\u9488\uff0c\u7136\u540e\u770b\u770b\u6211\u4eec\u8fd9\u91cc\u6709\u4ec0\u4e48\uff0c\u4e00\u4e2a\u52a8\u753b\u6570\u7ec4\u3002\u8fd9\u4e2a aiAnimation \u6570\u7ec4\u5305\u542b\u4e00\u822c\u4fe1\u606f\uff0c\u6bd4\u5982\u52a8\u753b\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u8fd9\u91cc\u8868\u793a\u4e3a mDuration \uff0c\u7136\u540e\u6211\u4eec\u6709\u4e00\u4e2a mTicksPerSecond \u53d8\u91cf\uff0c\u5b83\u63a7\u5236\u6211\u4eec\u5e94\u8be5\u5728\u5e27\u4e4b\u95f4\u63d2\u503c\u7684\u901f\u5ea6\u3002\u5982\u679c\u60a8\u8fd8\u8bb0\u5f97\u4e0a\u4e00\u8282\u4e2d\u7684\u52a8\u753b\u6709\u5173\u952e\u5e27\u3002\u7c7b\u4f3c\u5730\uff0c aiAnimation \u5305\u542b\u4e00\u4e2a\u540d\u4e3a Channels \u7684 aiNodeAnim \u6570\u7ec4\u3002\u6b64\u6570\u7ec4\u5305\u542b\u5c06\u8981\u53c2\u4e0e\u52a8\u753b\u7684\u6240\u6709\u9aa8\u9abc\u53ca\u5176\u5173\u952e\u5e27\u3002\u4e00\u4e2a aiNodeAnim \u5305\u542b\u9aa8\u9abc\u7684\u540d\u79f0\uff0c\u4f60\u4f1a\u53d1\u73b0\u5728\u8fd9\u91cc\u63d2\u5165\u4e09\u79cd\u7c7b\u578b\u7684\u5173\u952e\u70b9\uff0c\u5e73\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u3002 \u597d\u5427\uff0c\u8fd8\u6709\u6700\u540e\u4e00\u4ef6\u4e8b\u6211\u4eec\u9700\u8981\u7406\u89e3\uff0c\u5e76\u4e14\u5f88\u4e50\u610f\u53bb\u505a\u7684\u4e00\u4ef6\u4e8b\u5c31\u662f\u5199\u4ee3\u7801\u3002","title":"Assimp\u5982\u4f55\u4fdd\u5b58\u52a8\u753b\u6570\u636e"},{"location":"08%20Guest%20Articles/2020/01%20Skeletal%20Animation/#_4","text":"\u5f53\u6211\u4eec\u5f2f\u66f2\u524d\u81c2\u65f6\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u6211\u4eec\u7684\u4e8c\u5934\u808c\u5f39\u51fa\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u8bf4\u524d\u81c2\u9aa8\u9abc\u7684\u53d8\u5f62\u6b63\u5728\u5f71\u54cd\u6211\u4eec\u80b1\u4e8c\u5934\u808c\u4e0a\u7684\u9876\u70b9\u3002\u7c7b\u4f3c\u5730\uff0c\u53ef\u80fd\u6709\u591a\u4e2a\u9aa8\u9abc\u5f71\u54cd\u7f51\u683c\u4e2d\u7684\u5355\u4e2a\u9876\u70b9\u3002\u5bf9\u4e8e\u50cf\u56fa\u4f53\u91d1\u5c5e\u673a\u5668\u4eba\u8fd9\u6837\u7684\u89d2\u8272\uff0c\u6240\u6709\u524d\u81c2\u9876\u70b9\u90fd\u53ea\u4f1a\u53d7\u5230\u524d\u81c2\u9aa8\u9abc\u7684\u5f71\u54cd\uff0c\u4f46\u5bf9\u4e8e\u50cf\u4eba\u7c7b\u3001\u52a8\u7269\u7b49\u89d2\u8272\uff0c\u53ef\u80fd\u6709\u591a\u8fbe4\u5757\u9aa8\u9abc\u53ef\u4ee5\u5f71\u54cd\u4e00\u4e2a\u9876\u70b9\u3002\u8ba9\u6211\u4eec\u770b\u770bassimp\u662f\u5982\u4f55\u5b58\u50a8\u8fd9\u4e9b\u4fe1\u606f\u7684\uff1a \u6211\u4eec\u518d\u6b21\u4ece aiScene \u6307\u9488\u5f00\u59cb\uff0c\u8be5\u6307\u9488\u5305\u542b\u6240\u6709 aiMeshes \u7684\u6570\u7ec4\u3002\u6bcf\u4e2aaiMesh\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a aiBone \u6570\u7ec4\uff0c\u5176\u4e2d\u5305\u542b\u8bf8\u5982\u6b64 aiBone \u5c06\u5bf9\u7f51\u683c\u4e0a\u7684\u9876\u70b9\u96c6\u4ea7\u751f\u591a\u5927\u5f71\u54cd\u4e4b\u7c7b\u7684\u4fe1\u606f\u3002 aiBone \u5305\u542b\u9aa8\u9abc\u7684\u540d\u79f0\uff0c\u8fd9\u662f\u4e00\u4e2a aiVertexWeight \u6570\u7ec4\uff0c\u57fa\u672c\u4e0a\u544a\u8bc9\u6b64 aiBone \u5bf9\u7f51\u683c\u4e0a\u7684\u9876\u70b9\u6709\u591a\u5927\u5f71\u54cd\u3002\u73b0\u5728\u6211\u4eec\u6709\u4e86 aiBone \u7684\u53e6\u4e00\u4e2a\u6210\u5458\uff0c\u5b83\u662f offsetMatrix \u3002\u8fd9\u662f\u4e00\u4e2a4x4\u77e9\u9635\uff0c\u7528\u4e8e\u5c06\u9876\u70b9\u4ece\u6a21\u578b\u7a7a\u95f4\u8f6c\u6362\u5230\u9aa8\u9abc\u7a7a\u95f4\u3002\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u56fe\u7247\u4e2d\u770b\u5230\u8fd9\u4e00\u70b9\uff1a \u5f53\u9876\u70b9\u4f4d\u4e8e\u9aa8\u9abc\u7a7a\u95f4\u4e2d\u65f6\uff0c\u5b83\u4eec\u5c06\u6309\u7167\u9884\u671f\u76f8\u5bf9\u4e8e\u9aa8\u9abc\u8fdb\u884c\u53d8\u6362\u3002\u60a8\u5f88\u5feb\u5c31\u4f1a\u5728\u4ee3\u7801\u4e2d\u770b\u5230\u8fd9\u4e00\u70b9\u3002","title":"\u591a\u4e2a\u9aa8\u9abc\u5bf9\u9876\u70b9\u7684\u5f71\u54cd"},{"location":"08%20Guest%20Articles/2020/01%20Skeletal%20Animation/#_5","text":"\u8c22\u8c22\u4f60\u8d70\u5230\u8fd9\u4e00\u6b65\u3002\u6211\u4eec\u5c06\u4ece\u76f4\u63a5\u67e5\u770b\u6700\u7ec8\u7ed3\u679c\u5f00\u59cb\uff0c\u8fd9\u662f\u6211\u4eec\u7684\u6700\u7ec8\u9876\u70b9\u7740\u8272\u5668\u4ee3\u7801\u3002\u8fd9\u5c06\u7ed9\u6211\u4eec\u5f88\u597d\u7684\u611f\u89c9\uff0c\u6211\u4eec\u6700\u7ec8\u9700\u8981\u4ec0\u4e48\u3002 #version 430 core layout(location = 0) in vec3 pos; layout(location = 1) in vec3 norm; layout(location = 2) in vec2 tex; layout(location = 5) in ivec4 boneIds; layout(location = 6) in vec4 weights; uniform mat4 projection; uniform mat4 view; uniform mat4 model; const int MAX_BONES = 100; const int MAX_BONE_INFLUENCE = 4; uniform mat4 finalBonesMatrices[MAX_BONES]; out vec2 TexCoords; void main() { vec4 totalPosition = vec4(0.0f); for(int i = 0 ; i < MAX_BONE_INFLUENCE ; i++) { if(boneIds[i] == -1) continue; if(boneIds[i] >=MAX_BONES) { totalPosition = vec4(pos,1.0f); break; } vec4 localPosition = finalBonesMatrices[boneIds[i]] * vec4(pos,1.0f); totalPosition += localPosition * weights[i]; vec3 localNormal = mat3(finalBonesMatrices[boneIds[i]]) * norm; } mat4 viewModel = view * model; gl_Position = projection * viewModel * totalPosition; TexCoords = tex; } \u7247\u6bb5\u7740\u8272\u5668\u4e0e \u8fd9\u7bc7\u6559\u7a0b \u4e2d\u7684\u4fdd\u6301\u76f8\u540c\u3002\u4ece\u9876\u90e8\u5f00\u59cb\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u4e24\u4e2a\u65b0\u7684\u5c5e\u6027\u5e03\u5c40\u58f0\u660e\u3002\u7b2c\u4e00\u4e2a\u9aa8\u9abcID\uff0c\u7b2c\u4e8c\u4e2a\u662f\u91cd\u91cf\u3002\u6211\u4eec\u8fd8\u6709\u4e00\u4e2a\u7edf\u4e00\u7684\u6570\u7ec4 finalBonesMatrix \uff0c\u5b83\u5b58\u50a8\u6240\u6709\u9aa8\u9abc\u7684\u53d8\u6362\u3002 boneIds \u5305\u542b\u7528\u4e8e\u8bfb\u53d6\u6700\u7ec8 BonesMatrix \u6570\u7ec4\u5e76\u5c06\u8fd9\u4e9b\u53d8\u6362\u5e94\u7528\u4e8epos\u9876\u70b9\u7684\u7d22\u5f15\uff0c\u5176\u5404\u81ea\u7684\u6743\u91cd\u5b58\u50a8\u5728\u6743\u91cd\u6570\u7ec4\u4e2d\u3002\u8fd9\u53d1\u751f\u5728\u4e0a\u9762\u5faa\u73af\u7684\u5185\u90e8\u3002\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u5148\u5728Mesh\u7c7b\u4e2d\u6dfb\u52a0\u5bf9\u9aa8\u9abc\u91cd\u91cf\u7684\u652f\u6301\uff1a #define MAX_BONE_INFLUENCE 4 struct Vertex { // position glm::vec3 Position; // normal glm::vec3 Normal; // texCoords glm::vec2 TexCoords; // tangent glm::vec3 Tangent; // bitangent glm::vec3 Bitangent; //bone indexes which will influence this vertex int m_BoneIDs[MAX_BONE_INFLUENCE]; //weights from each bone float m_Weights[MAX_BONE_INFLUENCE]; }; \u6211\u4eec\u4e3a\u9876\u70b9\u6dfb\u52a0\u4e86\u4e24\u4e2a\u65b0\u5c5e\u6027\uff0c\u5c31\u50cf\u6211\u4eec\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u770b\u5230\u7684\u90a3\u6837\u3002\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u5c06\u5b83\u4eec\u52a0\u8f7d\u5230GPU\u7f13\u51b2\u533a\u4e2d\uff0c\u5c31\u50cf\u6211\u4eec\u7684 Mesh::setupMesh \u51fd\u6570\u4e2d\u7684\u5176\u4ed6\u5c5e\u6027\u4e00\u6837\uff1a class Mesh { ... void setupMesh() { .... // ids glEnableVertexAttribArray(3); glVertexAttribIPointer(3, 4, GL_INT, sizeof(Vertex), (void*)offsetof(Vertex, m_BoneIDs)); // weights glEnableVertexAttribArray(4); glVertexAttribPointer(4, 4, GL_FLOAT, GL_FALSE, sizeof(Vertex), (void*)offsetof(Vertex, m_Weights)); ... } ... } \u5c31\u50cf\u4ee5\u524d\u4e00\u6837\uff0c\u53ea\u662f\u73b0\u5728\u6211\u4eec\u4e3a boneID \u548c weights \u6dfb\u52a0\u4e863\u4e2a\u548c4\u4e2a\u5e03\u5c40\u4f4d\u7f6eID\u3002\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u4e00\u4ef6\u91cd\u8981\u7684\u4e8b\u60c5\u662f\u6211\u4eec\u5982\u4f55\u4f20\u9012 boneID \u7684\u6570\u636e\u3002\u6211\u4eec\u4f7f\u7528\u7684\u662f glVertexAttribIPointer \uff0c\u5e76\u5c06 GL_INT \u4f5c\u4e3a\u7b2c\u4e09\u4e2a\u53c2\u6570\u4f20\u9012\u3002 \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4eceassimp\u6570\u636e\u7ed3\u6784\u4e2d\u63d0\u53d6\u9aa8\u9abc\u91cd\u91cf\u4fe1\u606f\u3002\u8ba9\u6211\u4eec\u5728Model\u7c7b\u4e2d\u8fdb\u884c\u4e00\u4e9b\u66f4\u6539\uff1a struct BoneInfo { /*id is index in finalBoneMatrices*/ int id; /*offset matrix transforms vertex from model space to bone space*/ glm::mat4 offset; }; \u6b64 BoneInfo \u5c06\u5b58\u50a8\u6211\u4eec\u7684\u504f\u79fb\u77e9\u9635\uff0c\u4ee5\u53ca\u4e00\u4e2a\u552f\u4e00\u7684id\uff0c\u8be5id\u5c06\u7528\u4f5c\u7d22\u5f15\uff0c\u5c06\u5176\u5b58\u50a8\u5728\u6211\u4eec\u4e4b\u524d\u5728\u7740\u8272\u5668\u4e2d\u770b\u5230\u7684\u6700\u7ec8 BoneMatrices \u6570\u7ec4\u4e2d\u3002\u73b0\u5728\u6211\u4eec\u5c06\u5728Model\u4e2d\u6dfb\u52a0\u9aa8\u91cf\u63d0\u53d6\u652f\u6301\uff1a class Model { private: ... std::map<string, BoneInfo> m_BoneInfoMap; // int m_BoneCounter = 0; auto& GetBoneInfoMap() { return m_BoneInfoMap; } int& GetBoneCount() { return m_BoneCounter; } ... void SetVertexBoneDataToDefault(Vertex& vertex) { for (int i = 0; i < MAX_BONE_WEIGHTS; i++) { vertex.m_BoneIDs[i] = -1; vertex.m_Weights[i] = 0.0f; } } Mesh processMesh(aiMesh* mesh, const aiScene* scene) { vector vertices; vector indices; vector textures; for (unsigned int i = 0; i < mesh->mNumVertices; i++) { Vertex vertex; SetVertexBoneDataToDefault(vertex); vertex.Position = AssimpGLMHelpers::GetGLMVec(mesh->mVertices[i]); vertex.Normal = AssimpGLMHelpers::GetGLMVec(mesh->mNormals[i]); if (mesh->mTextureCoords[0]) { glm::vec2 vec; vec.x = mesh->mTextureCoords[0][i].x; vec.y = mesh->mTextureCoords[0][i].y; vertex.TexCoords = vec; } else vertex.TexCoords = glm::vec2(0.0f, 0.0f); vertices.push_back(vertex); } ... ExtractBoneWeightForVertices(vertices,mesh,scene); return Mesh(vertices, indices, textures); } void SetVertexBoneData(Vertex& vertex, int boneID, float weight) { for (int i = 0; i < MAX_BONE_WEIGHTS; ++i) { if (vertex.m_BoneIDs[i] < 0) { vertex.m_Weights[i] = weight; vertex.m_BoneIDs[i] = boneID; break; } } } void ExtractBoneWeightForVertices(std::vector& vertices, aiMesh* mesh, const aiScene* scene) { for (int boneIndex = 0; boneIndex < mesh->mNumBones; ++boneIndex) { int boneID = -1; std::string boneName = mesh->mBones[boneIndex]->mName.C_Str(); if (m_BoneInfoMap.find(boneName) == m_BoneInfoMap.end()) { BoneInfo newBoneInfo; newBoneInfo.id = m_BoneCounter; newBoneInfo.offset = AssimpGLMHelpers::ConvertMatrixToGLMFormat( mesh->mBones[boneIndex]->mOffsetMatrix); m_BoneInfoMap[boneName] = newBoneInfo; boneID = m_BoneCounter; m_BoneCounter++; } else { boneID = m_BoneInfoMap[boneName].id; } assert(boneID != -1); auto weights = mesh->mBones[boneIndex]->mWeights; int numWeights = mesh->mBones[boneIndex]->mNumWeights; for (int weightIndex = 0; weightIndex < numWeights; ++weightIndex) { int vertexId = weights[weightIndex].mVertexId; float weight = weights[weightIndex].mWeight; assert(vertexId <= vertices.size()); SetVertexBoneData(vertices[vertexId], boneID, weight); } } } ... }; \u6211\u4eec\u9996\u5148\u58f0\u660e\u4e00\u4e2a\u6620\u5c04 m_BoneInfoMap \u548c\u4e00\u4e2a\u8ba1\u6570\u5668 m_BoneCounter \uff0c\u4e00\u65e6\u6211\u4eec\u8bfb\u53d6\u5230\u4e00\u4e2a\u65b0\u7684\u9aa8\u9abc\uff0c\u5b83\u5c31\u4f1a\u589e\u52a0\u3002\u6211\u4eec\u5728\u524d\u9762\u7684\u56fe\u8868\u4e2d\u770b\u5230\uff0c\u6bcf\u4e2a aiMesh \u90fd\u5305\u542b\u4e0e aiMesh \u5173\u8054\u7684\u6240\u6709 aiBone \u3002\u9aa8\u91cf\u63d0\u53d6\u7684\u6574\u4e2a\u8fc7\u7a0b\u90fd\u662f\u4ece processMesh \u51fd\u6570\u5f00\u59cb\u7684\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5faa\u73af\u8fed\u4ee3\uff0c\u6211\u4eec\u901a\u8fc7\u8c03\u7528\u51fd\u6570 SetVertexBoneDataToDefault \u5c06 m_BoneID \u548c m_Weights \u8bbe\u7f6e\u4e3a\u5176\u9ed8\u8ba4\u503c\u3002\u5c31\u5728 processMesh \u51fd\u6570\u7ed3\u675f\u4e4b\u524d\uff0c\u6211\u4eec\u8c03\u7528 ExtractBoneWeightData \u3002\u5728 ExtractBoneWeightData \u4e2d\uff0c\u6211\u4eec\u4e3a\u6bcf\u4e2aaiBone\u8fd0\u884cfor\u5faa\u73af\uff0c\u5e76\u68c0\u67e5\u8be5\u9aa8\u9abc\u662f\u5426\u5df2\u5b58\u5728\u4e8e m_BoneInfoMap \u4e2d\u3002\u5982\u679c\u6211\u4eec\u627e\u4e0d\u5230\u5b83\uff0c\u90a3\u4e48\u5b83\u88ab\u8ba4\u4e3a\u662f\u4e00\u5757\u65b0\u9aa8\u5934\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5e26\u6709id\u7684\u65b0 BoneInfo \uff0c\u5e76\u5c06\u5176\u5173\u8054\u7684 mOffsetMatrix \u5b58\u50a8\u5230\u5b83\u3002\u7136\u540e\u6211\u4eec\u5c06\u8fd9\u4e2a\u65b0 BoneIInfo \u5b58\u50a8\u5728 m_BoneInfoMap \u4e2d\uff0c\u7136\u540e\u6211\u4eec\u9012\u589e m_BoneCounter \u8ba1\u6570\u5668\uff0c\u4e3a\u4e0b\u4e00\u5757\u9aa8\u5934\u521b\u5efa\u4e00\u4e2aid\u3002\u5982\u679c\u6211\u4eec\u5728 m_BoneInfoMap \u4e2d\u627e\u5230\u9aa8\u9abc\u540d\u79f0\uff0c\u90a3\u4e48\u8fd9\u610f\u5473\u7740\u8be5\u9aa8\u9abc\u4f1a\u5f71\u54cd\u8d85\u51fa\u5176\u8303\u56f4\u7684\u7f51\u683c\u9876\u70b9\u3002\u6240\u4ee5\u6211\u4eec\u53d6\u5b83\u7684Id\uff0c\u8fdb\u4e00\u6b65\u4e86\u89e3\u5b83\u4f1a\u5f71\u54cd\u54ea\u4e9b\u9876\u70b9\u3002 \u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u6211\u4eec\u6b63\u5728\u8c03\u7528 AssimpGLMHelpers::ConvertMatrixToGLMFormat \u3002Assimp\u4ee5\u4e0eGLM\u4e0d\u540c\u7684\u683c\u5f0f\u5b58\u50a8\u5176\u77e9\u9635\u6570\u636e\uff0c\u56e0\u6b64\u6b64\u51fd\u6570\u4ec5\u4e3a\u6211\u4eec\u63d0\u4f9bGLM\u683c\u5f0f\u7684\u77e9\u9635\u3002 \u6211\u4eec\u5df2\u7ecf\u63d0\u53d6\u4e86\u9aa8\u9abc\u7684 offsetMatrix \uff0c\u73b0\u5728\u6211\u4eec\u5c06\u7b80\u5355\u5730\u8fed\u4ee3\u5176 aiVertexWeightarray \uff0c\u63d0\u53d6\u5c06\u53d7\u6b64\u9aa8\u9abc\u5f71\u54cd\u7684\u6240\u6709\u9876\u70b9\u7d22\u5f15\u53ca\u5176\u5404\u81ea\u7684\u6743\u91cd\uff0c\u5e76\u8c03\u7528 SetVertexBoneData \u4ee5\u4f7f\u7528\u63d0\u53d6\u7684\u4fe1\u606f\u586b\u5145 Vertex.boneIds \u548c Vertex.weights \u3002 \u545c\uff01\u5230\u8fd9\u91cc\u4f60\u5e94\u5f53\u4f11\u606f\u4e00\u4e0b\u3002","title":"\u6700\u540e\u8ba9\u6211\u4eec\u5199\u4ee3\u7801"},{"location":"08%20Guest%20Articles/2020/01%20Skeletal%20Animation/#_6","text":"\u8fd9\u662f\u7c7b\u7684\u89c6\u56fe\uff1a \u8ba9\u6211\u4eec\u63d0\u9192\u81ea\u5df1\u6211\u4eec\u6b63\u5728\u52aa\u529b\u5b9e\u73b0\u4ec0\u4e48\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u6e32\u67d3\u5e27\uff0c\u6211\u4eec\u5e0c\u671b\u5e73\u6ed1\u5730\u63d2\u503c\u7ee7\u627f\u4e2d\u7684\u6240\u6709\u9aa8\u9abc\uff0c\u5e76\u83b7\u5f97\u5b83\u4eec\u7684\u6700\u7ec8\u53d8\u6362\u77e9\u9635\uff0c\u8fd9\u4e9b\u77e9\u9635\u5c06\u63d0\u4f9b\u7ed9\u7740\u8272\u5668\u7edf\u4e00\u7684finalBonesMatrix\u3002\u4ee5\u4e0b\u662f\u6bcf\u4e2a\u7c7b\u7684\u5185\u5bb9\uff1a Bone : \u4eceaiNodeAnim\u8bfb\u53d6\u6240\u6709\u5173\u952e\u5e27\u6570\u636e\u7684\u5355\u4e2a\u9aa8\u9abc\u3002\u5b83\u8fd8\u5c06\u6839\u636e\u5f53\u524d\u52a8\u753b\u65f6\u95f4\u5728\u5173\u952e\u5e27\u4e4b\u95f4\u8fdb\u884c\u63d2\u503c\uff0c\u5373\u5e73\u79fb\u3001\u7f29\u653e\u548c\u65cb\u8f6c\u3002 AssimpNodeData : \u8fd9\u4e2a\u7ed3\u6784\u4f53\u5c06\u5e2e\u52a9\u6211\u4eec\u5c06\u52a8\u753b\u4eceAssimp\u63d0\u53d6\u51fa\u6765\u3002 Animation : \u4eceaiAnimation\u8bfb\u53d6\u6570\u636e\u5e76\u521b\u5efaBones\u7684\u7ee7\u627f\u8bb0\u5f55\u7684\u8d44\u6e90\u3002 Animator : \u8fd9\u5c06\u8bfb\u53d6AssimpNodeData\u7684\u7ee7\u627f\u65b9\u6cd5\uff0c\u4ee5\u9012\u5f52\u65b9\u5f0f\u63d2\u5165\u6240\u6709\u9aa8\u9abc\uff0c\u7136\u540e\u4e3a\u6211\u4eec\u51c6\u5907\u6240\u9700\u7684\u6700\u7ec8\u9aa8\u9abc\u8f6c\u6362\u77e9\u9635\u3002 \u8fd9\u5c31\u662f\u4ee3\u7801\uff1a struct KeyPosition { glm::vec3 position; float timeStamp; }; struct KeyRotation { glm::quat orientation; float timeStamp; }; struct KeyScale { glm::vec3 scale; float timeStamp; }; class Bone { private: std::vector<KeyPosition> m_Positions; std::vector<KeyRotation> m_Rotations; std::vector<KeyScale> m_Scales; int m_NumPositions; int m_NumRotations; int m_NumScalings; glm::mat4 m_LocalTransform; std::string m_Name; int m_ID; public: /*reads keyframes from aiNodeAnim*/ Bone(const std::string& name, int ID, const aiNodeAnim* channel) : m_Name(name), m_ID(ID), m_LocalTransform(1.0f) { m_NumPositions = channel->mNumPositionKeys; for (int positionIndex = 0; positionIndex < m_NumPositions; ++positionIndex) { aiVector3D aiPosition = channel->mPositionKeys[positionIndex].mValue; float timeStamp = channel->mPositionKeys[positionIndex].mTime; KeyPosition data; data.position = AssimpGLMHelpers::GetGLMVec(aiPosition); data.timeStamp = timeStamp; m_Positions.push_back(data); } m_NumRotations = channel->mNumRotationKeys; for (int rotationIndex = 0; rotationIndex < m_NumRotations; ++rotationIndex) { aiQuaternion aiOrientation = channel->mRotationKeys[rotationIndex].mValue; float timeStamp = channel->mRotationKeys[rotationIndex].mTime; KeyRotation data; data.orientation = AssimpGLMHelpers::GetGLMQuat(aiOrientation); data.timeStamp = timeStamp; m_Rotations.push_back(data); } m_NumScalings = channel->mNumScalingKeys; for (int keyIndex = 0; keyIndex < m_NumScalings; ++keyIndex) { aiVector3D scale = channel->mScalingKeys[keyIndex].mValue; float timeStamp = channel->mScalingKeys[keyIndex].mTime; KeyScale data; data.scale = AssimpGLMHelpers::GetGLMVec(scale); data.timeStamp = timeStamp; m_Scales.push_back(data); } } /*interpolates b/w positions,rotations & scaling keys based on the curren time of the animation and prepares the local transformation matrix by combining all keys tranformations*/ void Update(float animationTime) { glm::mat4 translation = InterpolatePosition(animationTime); glm::mat4 rotation = InterpolateRotation(animationTime); glm::mat4 scale = InterpolateScaling(animationTime); m_LocalTransform = translation * rotation * scale; } glm::mat4 GetLocalTransform() { return m_LocalTransform; } std::string GetBoneName() const { return m_Name; } int GetBoneID() { return m_ID; } /* Gets the current index on mKeyPositions to interpolate to based on the current animation time*/ int GetPositionIndex(float animationTime) { for (int index = 0; index < m_NumPositions - 1; ++index) { if (animationTime < m_Positions[index + 1].timeStamp) return index; } assert(0); } /* Gets the current index on mKeyRotations to interpolate to based on the current animation time*/ int GetRotationIndex(float animationTime) { for (int index = 0; index < m_NumRotations - 1; ++index) { if (animationTime < m_Rotations[index + 1].timeStamp) return index; } assert(0); } /* Gets the current index on mKeyScalings to interpolate to based on the current animation time */ int GetScaleIndex(float animationTime) { for (int index = 0; index < m_NumScalings - 1; ++index) { if (animationTime < m_Scales[index + 1].timeStamp) return index; } assert(0); } private: /* Gets normalized value for Lerp & Slerp*/ float GetScaleFactor(float lastTimeStamp, float nextTimeStamp, float animationTime) { float scaleFactor = 0.0f; float midWayLength = animationTime - lastTimeStamp; float framesDiff = nextTimeStamp - lastTimeStamp; scaleFactor = midWayLength / framesDiff; return scaleFactor; } /*figures out which position keys to interpolate b/w and performs the interpolation and returns the translation matrix*/ glm::mat4 InterpolatePosition(float animationTime) { if (1 == m_NumPositions) return glm::translate(glm::mat4(1.0f), m_Positions[0].position); int p0Index = GetPositionIndex(animationTime); int p1Index = p0Index + 1; float scaleFactor = GetScaleFactor(m_Positions[p0Index].timeStamp, m_Positions[p1Index].timeStamp, animationTime); glm::vec3 finalPosition = glm::mix(m_Positions[p0Index].position, m_Positions[p1Index].position, scaleFactor); return glm::translate(glm::mat4(1.0f), finalPosition); } /*figures out which rotations keys to interpolate b/w and performs the interpolation and returns the rotation matrix*/ glm::mat4 InterpolateRotation(float animationTime) { if (1 == m_NumRotations) { auto rotation = glm::normalize(m_Rotations[0].orientation); return glm::toMat4(rotation); } int p0Index = GetRotationIndex(animationTime); int p1Index = p0Index + 1; float scaleFactor = GetScaleFactor(m_Rotations[p0Index].timeStamp, m_Rotations[p1Index].timeStamp, animationTime); glm::quat finalRotation = glm::slerp(m_Rotations[p0Index].orientation, m_Rotations[p1Index].orientation, scaleFactor); finalRotation = glm::normalize(finalRotation); return glm::toMat4(finalRotation); } /*figures out which scaling keys to interpolate b/w and performs the interpolation and returns the scale matrix*/ glm::mat4 Bone::InterpolateScaling(float animationTime) { if (1 == m_NumScalings) return glm::scale(glm::mat4(1.0f), m_Scales[0].scale); int p0Index = GetScaleIndex(animationTime); int p1Index = p0Index + 1; float scaleFactor = GetScaleFactor(m_Scales[p0Index].timeStamp, m_Scales[p1Index].timeStamp, animationTime); glm::vec3 finalScale = glm::mix(m_Scales[p0Index].scale, m_Scales[p1Index].scale , scaleFactor); return glm::scale(glm::mat4(1.0f), finalScale); } }; \u6211\u4eec\u9996\u5148\u4e3a\u6211\u4eec\u7684\u952e\u7c7b\u578b\u521b\u5efa3\u4e2a\u7ed3\u6784\u3002\u6bcf\u4e2a\u7ed3\u6784\u90fd\u6709\u4e00\u4e2a\u503c\u548c\u4e00\u4e2a\u65f6\u95f4\u6233\u3002\u65f6\u95f4\u6233\u544a\u8bc9\u6211\u4eec\u5728\u52a8\u753b\u7684\u54ea\u4e2a\u70b9\u9700\u8981\u63d2\u503c\u5230\u5b83\u7684\u503c\u3002Bone\u6709\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u5b83\u4ece aiNodeAnim \u8bfb\u53d6\u5bc6\u94a5\u5e76\u5c06\u5bc6\u94a5\u53ca\u5176\u65f6\u95f4\u6233\u5b58\u50a8\u5230 mPositionKeys \u3001 mRotationKeys \u548c mScalingKeys \u3002\u4e3b\u8981\u63d2\u503c\u8fc7\u7a0b\u4ece\u66f4\u65b0(float animationTime)\u5f00\u59cb\uff0c\u8be5\u8fc7\u7a0b\u5728\u6bcf\u5e27\u8c03\u7528\u4e00\u6b21\u3002\u6b64\u51fd\u6570\u8c03\u7528\u6240\u6709\u952e\u7c7b\u578b\u7684\u76f8\u5e94\u63d2\u503c\u51fd\u6570\uff0c\u5e76\u7ec4\u5408\u6240\u6709\u6700\u7ec8\u63d2\u503c\u7ed3\u679c\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u52304x4\u77e9\u9635 m_LocalTransform \u4e2d\u3002\u5e73\u79fb\u548c\u7f29\u653e\u5173\u952e\u70b9\u7684\u63d2\u503c\u51fd\u6570\u76f8\u4f3c\uff0c\u4f46\u5bf9\u4e8e\u65cb\u8f6c\uff0c\u6211\u4eec\u4f7f\u7528Slerp\u5728\u56db\u5143\u6570\u4e4b\u95f4\u8fdb\u884c\u63d2\u503c\u3002Lerp\u548cSlerp\u90fd\u67093\u4e2a\u8bba\u70b9\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u53d6\u6700\u540e\u4e00\u4e2a\u952e\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u53d6\u4e0b\u4e00\u4e2a\u952e\u548c\u7b2c\u4e09\u4e2a\u53c2\u6570\u53d6\u8303\u56f4\u4e3a0-1\u7684\u503c\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u79f0\u4e4b\u4e3a\u6bd4\u4f8b\u56e0\u5b50\u3002\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u5728\u51fd\u6570 GetScaleFactor \u4e2d\u8ba1\u7b97\u8fd9\u4e2a\u6bd4\u4f8b\u56e0\u5b50\uff1a \u5728\u4ee3\u7801\u4e2d\uff1a float midWayLength = animationTime - lastTimeStamp; float framesDiff = nextTimeStamp - lastTimeStamp; scaleFactor = midWayLength / framesDiff; \u73b0\u5728\u8ba9\u6211\u4eec\u7ee7\u7eed\u8f6c\u5230 Animation \u7c7b\uff1a struct AssimpNodeData { glm::mat4 transformation; std::string name; int childrenCount; std::vector<AssimpNodeData> children; }; class Animation { public: Animation() = default; Animation(const std::string& animationPath, Model* model) { Assimp::Importer importer; const aiScene* scene = importer.ReadFile(animationPath, aiProcess_Triangulate); assert(scene && scene->mRootNode); auto animation = scene->mAnimations[0]; m_Duration = animation->mDuration; m_TicksPerSecond = animation->mTicksPerSecond; ReadHeirarchyData(m_RootNode, scene->mRootNode); ReadMissingBones(animation, *model); } ~Animation() { } Bone* FindBone(const std::string& name) { auto iter = std::find_if(m_Bones.begin(), m_Bones.end(), [&](const Bone& Bone) { return Bone.GetBoneName() == name; } ); if (iter == m_Bones.end()) return nullptr; else return &(*iter); } inline float GetTicksPerSecond() { return m_TicksPerSecond; } inline float GetDuration() { return m_Duration;} inline const AssimpNodeData& GetRootNode() { return m_RootNode; } inline const std::map<std::string,BoneInfo>& GetBoneIDMap() { return m_BoneInfoMap; } private: void ReadMissingBones(const aiAnimation* animation, Model& model) { int size = animation->mNumChannels; auto& boneInfoMap = model.GetBoneInfoMap();//getting m_BoneInfoMap from Model class int& boneCount = model.GetBoneCount(); //getting the m_BoneCounter from Model class //reading channels(bones engaged in an animation and their keyframes) for (int i = 0; i < size; i++) { auto channel = animation->mChannels[i]; std::string boneName = channel->mNodeName.data; if (boneInfoMap.find(boneName) == boneInfoMap.end()) { boneInfoMap[boneName].id = boneCount; boneCount++; } m_Bones.push_back(Bone(channel->mNodeName.data, boneInfoMap[channel->mNodeName.data].id, channel)); } m_BoneInfoMap = boneInfoMap; } void ReadHeirarchyData(AssimpNodeData& dest, const aiNode* src) { assert(src); dest.name = src->mName.data; dest.transformation = AssimpGLMHelpers::ConvertMatrixToGLMFormat(src->mTransformation); dest.childrenCount = src->mNumChildren; for (int i = 0; i < src->mNumChildren; i++) { AssimpNodeData newData; ReadHeirarchyData(newData, src->mChildren[i]); dest.children.push_back(newData); } } float m_Duration; int m_TicksPerSecond; std::vector<Bone> m_Bones; AssimpNodeData m_RootNode; std::map<std::string, BoneInfo> m_BoneInfoMap; }; \u5728\u8fd9\u91cc\uff0c\u52a8\u753b\u5bf9\u8c61\u7684\u521b\u5efa\u4ece\u6784\u9020\u51fd\u6570\u5f00\u59cb\u3002\u8fd9\u9700\u8981\u4e24\u4e2a\u8bba\u70b9\u3002\u9996\u5148\uff0c\u52a8\u753b\u6587\u4ef6\u7684\u8def\u5f84&\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8be5\u52a8\u753b\u7684\u6a21\u578b\u3002\u7a0d\u540e\u60a8\u5c06\u770b\u5230\u6211\u4eec\u4e3a\u4ec0\u4e48\u9700\u8981\u6b64\u6a21\u578b\u53c2\u8003\u3002\u7136\u540e\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a Assimp::Importer \u6765\u8bfb\u53d6\u52a8\u753b\u6587\u4ef6\uff0c\u7136\u540e\u8fdb\u884c\u65ad\u8a00\u68c0\u67e5\uff0c\u5982\u679c\u627e\u4e0d\u5230\u52a8\u753b\uff0c\u8be5\u68c0\u67e5\u5c06\u5f15\u53d1\u9519\u8bef\u3002\u7136\u540e\u6211\u4eec\u8bfb\u53d6\u4e00\u822c\u7684\u52a8\u753b\u6570\u636e\uff0c\u6bd4\u5982\u8fd9\u4e2a\u52a8\u753b\u6709\u591a\u957f\uff0c\u5373 mDuration \u548c\u7531 mTicksPerSecond \u8868\u793a\u7684\u52a8\u753b\u901f\u5ea6\u3002\u7136\u540e\u6211\u4eec\u8c03\u7528 ReadHeirarchyData \uff0c\u5b83\u590d\u5236Assimp\u7684 aiNode \u7ee7\u627f\u6743\u5e76\u521b\u5efa AssimpNodeData \u7684\u7ee7\u627f\u6743\u3002 \u7136\u540e\u6211\u4eec\u8c03\u7528\u4e00\u4e2a\u540d\u4e3a ReadMissingBones \u7684\u51fd\u6570\u3002\u6211\u4e0d\u5f97\u4e0d\u7f16\u5199\u8fd9\u4e2a\u51fd\u6570\uff0c\u56e0\u4e3a\u6709\u65f6\u5f53\u6211\u5355\u72ec\u52a0\u8f7dFBX\u6a21\u578b\u65f6\uff0c\u5b83\u7f3a\u5c11\u4e00\u4e9b\u9aa8\u9abc\uff0c\u800c\u6211\u5728\u52a8\u753b\u6587\u4ef6\u4e2d\u627e\u5230\u4e86\u8fd9\u4e9b\u7f3a\u5931\u7684\u9aa8\u9abc\u3002\u6b64\u51fd\u6570\u8bfb\u53d6\u4e22\u5931\u7684\u9aa8\u9abc\u4fe1\u606f\uff0c\u5e76\u5c06\u5176\u4fe1\u606f\u5b58\u50a8\u5728\u6a21\u578b\u7684 m_BoneInfoMap \u4e2d\uff0c\u5e76\u5728 m_BoneIInfoMap \u4e2d\u672c\u5730\u4fdd\u5b58 m_BoneIinfoMap \u7684\u5f15\u7528\u3002 \u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u52a8\u753b\u3002\u73b0\u5728\u8ba9\u6211\u4eec\u770b\u770b\u6211\u4eec\u7684\u6700\u540e\u9636\u6bb5\uff0cAnimator\u7c7b\uff1a class Animator { public: Animator::Animator(Animation* Animation) { m_CurrentTime = 0.0; m_CurrentAnimation = currentAnimation; m_FinalBoneMatrices.reserve(100); for (int i = 0; i < 100; i++) m_FinalBoneMatrices.push_back(glm::mat4(1.0f)); } void Animator::UpdateAnimation(float dt) { m_DeltaTime = dt; if (m_CurrentAnimation) { m_CurrentTime += m_CurrentAnimation->GetTicksPerSecond() * dt; m_CurrentTime = fmod(m_CurrentTime, m_CurrentAnimation->GetDuration()); CalculateBoneTransform(&m_CurrentAnimation->GetRootNode(), glm::mat4(1.0f)); } } void Animator::PlayAnimation(Animation* pAnimation) { m_CurrentAnimation = pAnimation; m_CurrentTime = 0.0f; } void Animator::CalculateBoneTransform(const AssimpNodeData* node, glm::mat4 parentTransform) { std::string nodeName = node->name; glm::mat4 nodeTransform = node->transformation; Bone* Bone = m_CurrentAnimation->FindBone(nodeName); if (Bone) { Bone->Update(m_CurrentTime); nodeTransform = Bone->GetLocalTransform(); } glm::mat4 globalTransformation = parentTransform * nodeTransform; auto boneInfoMap = m_CurrentAnimation->GetBoneIDMap(); if (boneInfoMap.find(nodeName) != boneInfoMap.end()) { int index = boneInfoMap[nodeName].id; glm::mat4 offset = boneInfoMap[nodeName].offset; m_FinalBoneMatrices[index] = globalTransformation * offset; } for (int i = 0; i < node->childrenCount; i++) CalculateBoneTransform(&node->children[i], globalTransformation); } std::vector<glm::mat4> GetFinalBoneMatrices() { return m_FinalBoneMatrices; } private: std::vector<glm::mat4> m_FinalBoneMatrices; Animation* m_CurrentAnimation; float m_CurrentTime; float m_DeltaTime; }; Animator \u6784\u9020\u51fd\u6570\u5c06\u64ad\u653e\u52a8\u753b\uff0c\u7136\u540e\u7ee7\u7eed\u5c06\u52a8\u753b\u65f6\u95f4 m_CurrentTime \u91cd\u7f6e\u4e3a0\u3002\u5b83\u8fd8\u521d\u59cb\u5316 m_FinalBoneMatrices \uff0c\u8fd9\u662f\u4e00\u4e2a std::vector\\<glm::mat4\\> \u3002\u8fd9\u91cc\u7684\u4e3b\u8981\u6ce8\u610f\u70b9\u662f UpdateAnimation(float deltaTime) \u51fd\u6570\u3002\u5b83\u4ee5 m_TicksPerSecond \u7684\u901f\u7387\u63a8\u8fdb m_CurrentTime \uff0c\u7136\u540e\u8c03\u7528 CalculateBoneTransform \u51fd\u6570\u3002\u6211\u4eec\u5c06\u5728\u5f00\u59cb\u65f6\u4f20\u9012\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u662f m_CurrentAnimation \u7684 m_RootNode \uff0c\u7b2c\u4e8c\u4e2a\u662f\u4f5c\u4e3a parentTransform \u4f20\u9012\u7684\u8eab\u4efd\u77e9\u9635\u3002\u7136\u540e\uff0c\u901a\u8fc7\u5728 animation \u7684 m_Bones \u6570\u7ec4\u4e2d\u67e5\u627e m_RootNodes \u9aa8\u9abc\u6765\u68c0\u67e5\u8be5\u9aa8\u9abc\u662f\u5426\u53c2\u4e0e\u8be5\u52a8\u753b\u3002\u5982\u679c\u627e\u5230\u9aa8\u9abc\uff0c\u5219\u8c03\u7528 bone.Update() \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5bf9\u6240\u6709\u9aa8\u9abc\u8fdb\u884c\u63d2\u503c\uff0c\u5e76\u5c06\u5c40\u90e8\u9aa8\u9abc\u53d8\u6362\u77e9\u9635\u8fd4\u56de\u5230 nodeTransform \u3002\u4f46\u8fd9\u662f\u5c40\u90e8\u7a7a\u95f4\u77e9\u9635\uff0c\u5982\u679c\u5728\u7740\u8272\u5668\u4e2d\u4f20\u9012\uff0c\u5c06\u56f4\u7ed5\u539f\u70b9\u79fb\u52a8\u9aa8\u9abc\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a nodeTransform \u4e0eparentTransform\u76f8\u4e58\uff0c\u5e76\u5c06\u7ed3\u679c\u5b58\u50a8\u5728 globalTransformation \u4e2d\u3002\u8fd9\u5c31\u8db3\u591f\u4e86\uff0c\u4f46\u9876\u70b9\u4ecd\u5728\u9ed8\u8ba4\u6a21\u578b\u7a7a\u95f4\u4e2d\u3002\u6211\u4eec\u5728 m_BoneInfoMap \u4e2d\u627e\u5230\u504f\u79fb\u77e9\u9635\uff0c\u7136\u540e\u5c06\u5176\u4e0e globalTransfromMatrix \u76f8\u4e58\u3002\u6211\u4eec\u8fd8\u5c06\u83b7\u5f97id\u7d22\u5f15\uff0c\u8be5\u7d22\u5f15\u5c06\u7528\u4e8e\u5199\u5165\u8be5\u9aa8\u9abc\u5230 m_FinalBoneMatrices \u7684\u6700\u7ec8\u8f6c\u6362\u3002 \u6700\u540e\u6211\u4eec\u4e3a\u8be5\u8282\u70b9\u7684\u6bcf\u4e2a\u5b50\u8282\u70b9\u8c03\u7528 CalculateBoneTransform \uff0c\u5e76\u5c06 globalTransformation \u4f5c\u4e3a parentTransform \u4f20\u9012\u3002\u5f53\u6ca1\u6709\u5b50\u8282\u70b9\u9700\u8981\u8fdb\u4e00\u6b65\u5904\u7406\u65f6\uff0c\u6211\u4eec\u4f1a\u8df3\u51fa\u8fd9\u4e2a\u9012\u5f52\u5faa\u73af\u3002","title":"\u9aa8\u9abc\u3001\u52a8\u753b\u548c\u52a8\u753b\u5236\u4f5c\u7c7b"},{"location":"08%20Guest%20Articles/2020/01%20Skeletal%20Animation/#_7","text":"\u6211\u4eec\u8f9b\u52e4\u5de5\u4f5c\u7684\u6210\u679c\u7ec8\u4e8e\u6765\u4e86\uff01\u4ee5\u4e0b\u662f\u6211\u4eec\u5c06\u5982\u4f55\u5728main.cpp\u4e2d\u64ad\u653e\u52a8\u753b\uff1a int main() { ... Model ourModel(FileSystem::getPath(\"resources/objects/vampire/dancing_vampire.dae\")); Animation danceAnimation(FileSystem::getPath(\"resources/objects/vampire/dancing_vampire.dae\"), &ourModel); Animator animator(&danceAnimation); // draw in wireframe //glPolygonMode(GL_FRONT_AND_BACK, GL_LINE); // render loop // ----------- while (!glfwWindowShouldClose(window)) { // per-frame time logic // -------------------- float currentFrame = glfwGetTime(); deltaTime = currentFrame - lastFrame; lastFrame = currentFrame; // input // ----- processInput(window); animator.UpdateAnimation(deltaTime); // render // ------ glClearColor(0.05f, 0.05f, 0.05f, 1.0f); glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // don't forget to enable shader before setting uniforms ourShader.use(); // view/projection transformations glm::mat4 projection = glm::perspective(glm::radians(camera.Zoom), (float)SCR_WIDTH / (float)SCR_HEIGHT, 0.1f, 100.0f); glm::mat4 view = camera.GetViewMatrix(); ourShader.setMat4(\"projection\", projection); ourShader.setMat4(\"view\", view); auto transforms = animator.GetFinalBoneMatrices(); for (int i = 0; i < transforms.size(); ++i) ourShader.setMat4(\"finalBonesMatrices[\" + std::to_string(i) + \"]\", transforms[i]); // render the loaded model glm::mat4 model = glm::mat4(1.0f); // translate it down so it's at the center of the scene model = glm::translate(model, glm::vec3(0.0f, -0.4f, 0.0f)); // it's a bit too big for our scene, so scale it down model = glm::scale(model, glm::vec3(.5f, .5f, .5f)); ourShader.setMat4(\"model\", model); ourModel.Draw(ourShader); // glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.) // ------------------------------------------------------------------------------- glfwSwapBuffers(window); glfwPollEvents(); } // glfw: terminate, clearing all previously allocated GLFW resources. // ------------------------------------------------------------------ glfwTerminate(); return 0; \u6211\u4eec\u4ece\u52a0\u8f7d\u6a21\u578b\u5f00\u59cb\uff0c\u8be5\u6a21\u578b\u5c06\u4e3a\u7740\u8272\u5668\u8bbe\u7f6e\u9aa8\u9abc\u91cd\u91cf\u6570\u636e\uff0c\u7136\u540e\u901a\u8fc7\u4e3a\u5176\u63d0\u4f9b\u8def\u5f84\u6765\u521b\u5efa\u52a8\u753b\u3002\u7136\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u5c06\u521b\u5efa\u7684 Animation \u4f20\u9012\u7ed9\u5b83\u6765\u521b\u5efa Animator \u5bf9\u8c61\u3002\u5728\u6e32\u67d3\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u66f4\u65b0 Animator \uff0c\u8fdb\u884c\u6700\u7ec8\u7684\u9aa8\u9abc\u53d8\u6362\u5e76\u5c06\u5176\u63d0\u4f9b\u7ed9\u7740\u8272\u5668\u3002\u8fd9\u662f\u6211\u4eec\u4e00\u76f4\u5728\u7b49\u5f85\u7684\u8f93\u51fa: \u4ece \u6b64\u5904 \u4e0b\u8f7d\u4f7f\u7528\u7684\u6a21\u578b\u3002\u8bf7\u6ce8\u610f\uff0c\u52a8\u753b\u548c\u7f51\u683c\u662f\u5728\u5355\u4e2aDAE(collada)\u6587\u4ef6\u4e2d\u70d8\u7119\u7684\u3002\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u8fd9\u4e2a\u6f14\u793a\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002","title":"\u8ba9\u6211\u4eec\u52a8\u8d77\u6765"},{"location":"08%20Guest%20Articles/2020/01%20Skeletal%20Animation/#_8","text":"Quaternions : An article by songho to understand quaternions in depth. Skeletal Animation with Assimp : An article by OGL Dev. Skeletal Animation with Java : A fantastic youtube playlist by Thin Matrix. Why Quaternions should be used for Rotation : An awesome gamasutra article.","title":"\u5ef6\u4f38\u9605\u8bfb"},{"location":"08%20Guest%20Articles/2022/03%20Area%20Lights/","text":"\u533a\u57df\u5149 \u539f\u6587 Area Lights \u4f5c\u8005 Alexander Christensen \u7ffb\u8bd1 XDzZyq \u6821\u5bf9 \u6682\u65e0 \u6709\u7eb9\u7406\u7684\u77e9\u5f62\u533a\u57df\u5149[1] \u524d\u8a00 \u5149\u7ebf\u65e0\u5904\u4e0d\u5728\u3002\u540c\u6837\uff0c\u5408\u9002\u7684\u706f\u5149\u5728\u6e32\u67d3\u4e2d\u4e5f\u5341\u5206\u91cd\u8981\u3002 \u76ee\u524d\u4e3a\u6b62\u6211\u4eec\u5df2\u7ecf\u5728\u7b2c\u4e09\u7ae0\u4e2d \u3010\u6295\u5149\u7269\u3011 \u8fd9\u4e00\u8282\u5b66\u4e60\u4e86\u4e09\u79cd\u622a\u7136\u4e0d\u540c\u7684\u706f\u5149\u7c7b\u578b\uff1a \u5e73\u884c\u5149\u3001\u70b9\u5149\u548c\u805a\u5149 \u3002\u4f46\u662f\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u5149\u6e90\u901a\u5e38\u5177\u6709\u4e00\u5b9a\u8303\u56f4\u548c\u9762\u79ef\uff0c\u800c\u4ee5\u4e0a\u4e09\u79cd\u5149\u6e90\u8981\u4e48\u662f\u6765\u81ea\u4e00\u70b9\uff0c\u8981\u4e48\u5149\u7ebf\u5728\u7a7a\u95f4\u4e2d\u5404\u4e2a\u4f4d\u7f6e\u76f8\u540c\uff08\u5e73\u884c\u5149\uff09\u3002 \u5f88\u663e\u7136\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u4ee5\u4e0a\u4e09\u79cd\u5149\u6e90\u53bb\u5b9e\u73b0\u4e00\u79cd\u5177\u6709\u9762\u79ef\u7684\u5149\u6e90\u3002\u5047\u8bbe\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u77e9\u5f62\u5149\u6e90\uff0c\u5982\u679c\u4ec5\u7528\u70b9\u5149\u6216\u805a\u5149\u5b9e\u73b0\uff0c\u5219\u9700\u8981\u6210\u5343\u4e0a\u4e07\u7684\u5fae\u5c0f\u5149\u6e90\u9635\u5217\u5728\u8fd9\u4e2a\u77e9\u5f62\u533a\u57df\u4e2d\u3002\u53c8\u5373\u4f7f\u6211\u4eec\u6210\u529f\u521b\u5efa\u4e86\u8fd9\u4e9b\u5149\u6e90\uff0c\u5f88\u660e\u663e\uff0c\u4e3a\u4e86\u8ffd\u6c42\u5b9e\u65f6\u6e32\u67d3\u7684\u6027\u80fd\u8981\u6c42\uff0c\u6e32\u67d3\u7ed3\u679c\u80af\u5b9a\u4e0d\u5c3d\u5982\u4eba\u610f\uff08\u5982\u679c\u76f8\u673a\u975e\u5e38\u63a5\u8fd1\u77e9\u5f62\u5149\u6e90\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u80fd\u8fd8\u9700\u8981\u66f4\u5bc6\u7684\u706f\u5149\uff09\u3002\u9664\u6b64\u4e4b\u5916\u53c8\u53ef\u80fd\u51fa\u73b0\u7684\u7167\u660e\u8fc7\u5ea6\uff0c\u6240\u4ee5\u4e3a\u4e86\u80fd\u91cf\u5b88\u6052\uff0c\u6bcf\u4e2a\u5149\u6e90\u7684\u4eae\u5ea6\u53c8\u9700\u8981\u5c3d\u53ef\u80fd\u7684\u5c0f\u3002\u5f88\u660e\u663e\u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\u662f\u4e0d\u5408\u7406\u7684\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4e00\u79cd\u65b0\u7684\u706f\u5149\u7c7b\u578b\uff1a \u533a\u57df\u5149 \u3002 \u8fd9\u79cd\u5177\u6709\u533a\u57df\u7684\u5149\u6e90\u5728\u79bb\u7ebf\u6e32\u67d3\u4e2d\uff0c\u901a\u8fc7\u8499\u7279\u5361\u6d1b\u91c7\u6837\uff0c\u4f7f\u7528\u5149\u7ebf\u8ffd\u8e2a\u53ef\u4ee5\u76f8\u5bf9\u7b80\u5355\u7c97\u66b4\u5730\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u4f46\u662f\u672c\u7bc7\u6559\u7a0b\u4e3b\u8981\u9762\u5411\u5b9e\u65f6\u6e32\u67d3\u9886\u57df\uff0c\u4e0a\u8ff0\u79bb\u7ebf\u6e32\u67d3\u7684\u5b9e\u73b0\u65b9\u5f0f\u5728\u672c\u6587\u4e2d\u4e0d\u4f1a\u88ab\u63d0\u53ca\u3002 \u672c\u7bc7\u6559\u7a0b\u63cf\u8ff0\u4e86\u4e00\u79cd\u4f7f\u7528 \u7ebf\u6027\u53d8\u6362\u4f59\u5f26\u5206\u5e03\u96c6 (Linearly Transformed Cosines)\u7684\u65b9\u6cd5\u4ece\u4efb\u610f\u51f8\u591a\u9762\u4f53\u4e2d\u6e32\u67d3\u533a\u57df\u5149\u3002\u8be5\u65b9\u6cd5\u6700\u521d\u7531Eric Heitz\u3001Jonathan Dupuy\u3001Stephen Hill\u548cDavid Neubelt\u5728SIGGRAPH2016\u5e74\u53d1\u8868\u3002\u540e\u7eed\u4eba\u4eec\u53c8\u5bf9\u8be5\u65b9\u6cd5\u8fdb\u884c\u4e86\u62d3\u5c55\uff0c\u9664\u4e86\u77e9\u5f62\u6216\u591a\u9762\u4f53\u5916\u53c8\u652f\u6301\u4e86\u5706\u5f62\u5149\u6e90\u3002 \u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u4e3b\u8981\u7814\u7a76\u77e9\u5f62\u533a\u57df\u5149\u7684\u5177\u4f53\u5b9e\u73b0\u65b9\u6cd5\u3002 \u524d\u7f6e\u77e5\u8bc6 \u533a\u57df\u5149\u6e32\u67d3\u662f\u57fa\u4e8e \u7269\u7406\u6e32\u67d3 (PBR)\u7684\uff0c\u56e0\u6b64\u5efa\u8bae\u5728\u5f00\u59cb\u5b66\u4e60\u524d\u5148\u719f\u6089\u5176\u6838\u5fc3\u6982\u5ff5\uff0c\u4ee5\u83b7\u5f97\u6700\u4f73\u5b66\u4e60\u4f53\u9a8c\u3002\u6b64\u5916\u8fd9\u4e2a\u65b9\u6cd5\u6d89\u53ca\u5230\u975e\u5e38\u591a\u7684\u6570\u5b66\u77e5\u8bc6\uff0c\u5efa\u8bae\u5148\u719f\u6089\u51e0\u4e2a\u6570\u5b66\u6982\u5ff5\uff1a\u79ef\u5206\u3001\u7ebf\u6027\u4ee3\u6570\u3001\u4e09\u89d2\u51fd\u6570\u3001\u7acb\u4f53\u89d2\u89d2\u5ea6\u6d4b\u91cf\u548c\u7403\u9762\u5206\u5e03\u51fd\u6570\u3002\u4e0d\u8fc7\u5982\u679c\u4f60\u4ec5\u4ec5\u662f\u60f3\u5b9e\u73b0\u533a\u57df\u5149\uff0c\u90a3\u4e48\u4f60\u5b8c\u5168\u53ef\u4ee5\u76f4\u63a5\u590d\u5236\u6587\u4e2d\u3010\u6574\u4f53\u5b9e\u73b0\u3011\u6240\u7ed9\u51fa\u7684\u4ee3\u7801\u3002\u5b9e\u73b0\u533a\u57df\u5149\u6240\u9700\u8981\u7684\u7406\u8bba\u77e5\u8bc6\u6bd4\u8f83\u6df1\u5965\uff0c\u5228\u6839\u95ee\u5e95\u53ef\u80fd\u662f\u503c\u5f97\u7684\uff0c\u4f46\u662f\u4e0d\u5b8c\u5168\u7406\u89e3\u5176\u539f\u7406\u4e0d\u4f1a\u5f71\u54cd\u5e94\u7528\u3002\u7814\u7a76\u4eba\u5458\u5df2\u7ecf\u4e3a\u5e2e\u6211\u4eec\u5b8c\u6210\u4e86\u590d\u6742\u7684\u63a8\u5bfc\u8fc7\u7a0b\uff0c\u611f\u8c22\u4ed6\u4eec\u8ba9\u6211\u4eec\u7684\u6e32\u67d3\u770b\u8d77\u6765\u5f88\u9177\uff01 :) \u4f60\u53ef\u80fd\u8fd8\u6ce8\u610f\u5230\u5c01\u9762\u56fe\u50cf\u6709\u4e00\u4e2a\u5e26\u7eb9\u7406\u7684\u5149\u6e90\u3002\u4e0d\u8fc7\u672c\u6587\u4e0d\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u5c3d\u7ba1\u53ef\u80fd\u4f1a\u5728\u672a\u6765\u7684\u7ae0\u8282\u4e2d\u63d0\u53ca\u3002\u6240\u4ee5\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\uff01 Important \u6587\u672b\u53c2\u8003\u6587\u732e\u4e2d\u6709\u76f8\u5173\u8bba\u6587\u548c\u5b9e\u73b0\u539f\u7406 \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u573a\u666f\uff0c\u5e76\u5728\u573a\u666f\u4e2d\u7684\u67d0\u4e2a\u4f4d\u7f6e\u653e\u7f6e\u4e00\u4e2a\u77e9\u5f62\u3002\u6211\u4eec\u5e0c\u671b\u8fd9\u4e2a\u77e9\u5f62\u8868\u793a\u4e00\u4e2a\u5149\u6e90\u5e76\u53d1\u5c04\u5149\u7ebf\u3002\u9664\u6b64\u4e4b\u5916\u8fd8\u6709\u7269\u7406\u6e32\u67d3\u4e2d\u7684BRDF\u51fd\u6570\uff0c\u5b83\u63cf\u8ff0\u4e86\u573a\u666f\u4e2d\u8868\u9762\u5982\u4f55\u6563\u5c04\u5149\u7ebf\uff08\u6216\u8005\u51fa\u5c04\u5149\u548c\u6bcf\u6761\u5165\u5c04\u5149\u95f4\u7684\u6bd4\u4f8b\uff09\u3002 \u5728\u6e32\u67d3\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u89e3\u51b3BRDF\u7684\u79ef\u5206\uff0c\u79ef\u5206\u8303\u56f4\u662f\u81ea\u53d1\u5149\u591a\u9762\u4f53\uff08\u533a\u57df\u5149\u6e90\uff09\u5728\u5355\u4f4d\u534a\u7403\u9762\u56f4\u7ed5\u7740\u7740\u8272\u70b9\u5f62\u6210\u7684\u7acb\u4f53\u89d2\uff0c\u4ee5\u8ba1\u7b97\u51fa\u5c04 \u8f90\u7167\u5ea6 (Irradiance)\u3002\u8fd9\u4e2a\u51fa\u5c04\u8f90\u7167\u5ea6\u5c06\u53cd\u5c04\u56de\u6444\u50cf\u673a\uff0c\u4ece\u800c\u5b8c\u6210\u6e32\u67d3\u3002 \u5728\u8bba\u6587\u4e2d\u63cf\u8ff0\u4e86\u5982\u4f55\u5c06\u7ebf\u6027\u53d8\u6362\u4f5c\u7528\u4e8e\u7403\u9762\u5206\u5e03\u51fd\u6570\uff0c\u4ece\u800c\u6784\u9020\u4e00\u7cfb\u5217\u53ef\u4ee5\u62df\u5408\u4e0d\u540c\u6750\u8d28\u548c\u6444\u50cf\u673a\u89c6\u89d2\u4e0bBRDF\u7279\u6027\u7684\u7403\u9762\u5206\u5e03\u51fd\u6570\u3002\u8fd9\u4e9b\u7279\u6027\u5728Eric Heitz\u7684PPT[3]\u4e2d\u6709\u5f88\u597d\u7684\u8868\u73b0\u3002\u4f46\u7531\u4e8e\u672c\u6559\u7a0b\u4e3b\u8981\u9762\u5411\u7a0b\u5e8f\u7684\u5b9e\u73b0\uff0c\u6240\u4ee5\u4e0d\u4f1a\u5728\u8fd9\u91cc\u753b\u592a\u591a\u7bc7\u5e45\u8bb2\u89e3\u7406\u8bba\u63a8\u5bfc\u3002\u8fd9\u4e9b\u7ecf\u8fc7\u4e0d\u540c\u77e9\u9635\u53d8\u6362\u51fa\u7684\u5206\u5e03\u51fd\u6570\u88ab\u7edf\u79f0\u4e3a\u201d\u7ebf\u6027\u53d8\u6362\u4f59\u5f26\u5206\u5e03\u96c6\u201d(Linearly Transformed Cosines)\uff0c\u4e4b\u6240\u4ee5\u662f\u201c\u4f59\u5f26\u201d\u662f\u56e0\u4e3a\u6240\u6709\u7684\u5206\u5e03\u51fd\u6570\u662f\u6765\u81ea\u4e00\u4e2a\u53d8\u6362\u540e\u7684\u53d7\u7ea6\u4f59\u5f26\u5206\u5e03\u51fd\u6570\uff0c\u540c\u65f6\u5177\u6709\u8fd1\u4f3c\u7684BRDF\u7684\u91cd\u8981\u7279\u6027\u3002\u201d\u53d7\u7ea6\u201d\u6307\u7684\u662f\u4f59\u5f26\u5206\u5e03\u51fd\u6570\uff08\u6216Lambertian\u5206\u5e03\uff09\u4ec5\u8003\u8651\u6b63\u534a\u7403\u9762\u3002\u8fd9\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u5355\u4f4d\u7403\u9762\u56fa\u4f53\u89d2\u5ea6\u6d4b\u91cf\u503c\u5728\u533a\u95f4[0, 4\u03c0]\u5185\uff0c\u800c\u5149\u6e90\u53ef\u80fd\u6c38\u8fdc\u4e0d\u4f1a\u7167\u4eae\u6c34\u5e73\u9762\u4ee5\u4e0b\u7684\u533a\u57df\uff1b\u56e0\u6b64\u6211\u4eec\u5c06\u4f59\u5f26\u5206\u5e03\u51fd\u6570\u7ea6\u675f\u5230\u6b63\u534a\u7403\u9762\uff08\u4e0a\u534a\u7403\uff09\uff08\u4ee5\u5165\u5c04\u7740\u8272\u70b9\u7684\u8868\u9762\u6cd5\u7ebf\u4e3a\u4e2d\u5fc3\uff09\u3002 \u5728\u7269\u7406\u6e32\u67d3(PBR)\u4e2d\u6211\u4eec\u5b66\u5230\uff0cGGX\u5fae\u8868\u9762\u6a21\u578b\u4e2d\u7684BRDF\u5206\u5e03\u51fd\u6570\u5177\u6709\u590d\u6742\u7684\u5f62\u72b6\u3002\u6bd4\u5982\u5728\u63a5\u8fd1\u5165\u5c04\u89d2\u5ea6\u5904\u7684\u5404\u5411\u5f02\u6027\u62c9\u4f38\u3001\u504f\u659c\u5ea6\u548c\u4e0d\u540c\u7a0b\u5ea6\u7684\u6750\u8d28\u7c97\u7cd9\u5ea6\u7b49\u7279\u6027\u3002\u6b63\u662f\u7531\u4e8e\u8fd9\u4e9b\u7279\u6027\uff0cBRDF\u80fd\u591f\u4ea7\u751f\u5199\u5b9e\u7684\u6e32\u67d3\u6548\u679c\u3002\u6240\u4ee5\u5982\u679c\u6211\u4eec\u80fd\u591f\u8bbe\u8ba1\u4e00\u4e2a\u7ebf\u6027\u53d8\u6362\uff0c\u901a\u8fc7\u77e9\u9635\u4e58\u6cd5\u5c06\u8fd9\u4e9b\u7279\u6027\u6dfb\u52a0\u5230\u53d7\u7ea6\u4f59\u5f26\u5206\u5e03\u4e2d\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u83b7\u5f97\u5ab2\u7f8eBRDF\u7684\u6548\u679c\u3002\u8bba\u6587[1]\u4e2d\u63cf\u8ff0\u4e86\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u4f59\u5f26\u5206\u5e03\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u6211\u4eec\u5bf9\u5176\u79ef\u5206\u6709\u4e00\u4e2a\u95ed\u5408\u5f62\u5f0f\uff08Closed-Form\uff09\u7684\u8868\u793a\uff1a D_o(\u03c9_o)=\\frac1\u03c0\\cos\u03b8_o \u603b\u7ed3\u4e00\u4e0b\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\uff1a\u6784\u5efa\u4e00\u4e2a\u4e09\u4e58\u4e09\u7ebf\u6027\u53d8\u6362\u77e9\u9635\u5e76\u5c06\u5176\u5e94\u7528\u5728\u53d7\u7ea6\u4f59\u5f26\u5206\u5e03\u51fd\u6570\u4e0a\uff0c\u4ece\u800c\u8fd1\u4f3c\u67d0\u4e00\u6761\u4ef6\u4e0bBRDF\u5206\u5e03\u51fd\u6570\u3002\u7136\u540e\u5728\u533a\u57df\u5149\u6240\u5728\u7684\u7acb\u4f53\u89d2\u4e0a\u8fdb\u884c\u8ba1\u7b97\u5e76\u83b7\u5f97\u6e32\u67d3\u7ed3\u679c\u3002 \u5728\u7ebf\u6027\u4ee3\u6570\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e24\u4e2a\u77e9\u9635\u4e2d\u5e94\u7528\u4e58\u6cd5\uff0c\u540c\u6837\u4e5f\u53ef\u4ee5\u8fdb\u884c\u9006\u8fd0\u7b97\uff1a A\u00d7B=C~~~~~~~~~~\u21d4~~~~~~~~~~C\u00d7B^{\u22121}=A \u5982\u679c\u6211\u4eec\u4e3a\u4e86\u5f97\u5230\u4e86BRDF\u5c06\u77e9\u9635M\u5e94\u7528\u4e8e\u4f59\u5f26\u5206\u5e03\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9006\u8fd0\u7b97\uff0c\u4ece\u800c\u4f18\u96c5\u5730\u89e3\u51b3\u7acb\u4f53\u89d2\u7684\u7403\u9762\u79ef\u5206\u3002\u4e0b\u9762\u7684\u793a\u610f\u56fe\u5c55\u793a\u4e86\u8fd9\u4e2a\u601d\u60f3\u3002\u6b63\u5982\u8bba\u6587\u4f5c\u8005\u5efa\u8bae\u7684\u90a3\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u53d8\u6362\u56de\u521d\u59cb\u7684\u4f59\u5f26\u7a7a\u95f4\u3002 \u53cd\u5411\u53d8\u6362\u56de\u4f59\u5f26\u7a7a\u95f4\uff0c\u4f7f\u7528\u9006\u7ebf\u6027\u53d8\u6362\u77e9\u9635[2] \u6784\u5efa\u53d8\u6362\u77e9\u9635 \u7ebf\u6027\u53d8\u6362\u77e9\u9635M\u9700\u8981\u80fd\u591f\u8868\u793aBRDF\u7684\u7279\u6027\uff0c\u6bd4\u5982\u5728\u4e0d\u540c\u89c2\u5bdf\u89d2\u5ea6\u548c\u6750\u8d28\u7c97\u7cd9\u5ea6\u4e0a\u77e9\u9635M\u9700\u8981\u8fdb\u884c\u53c2\u6570\u5316\u3002\u5982\u4e0b\u56fe\uff1a \u901a\u8fc7\u77e9\u9635\u8fde\u4e58\u6784\u5efa\u7ebf\u6027\u53d8\u6362\uff0c\u4ece\u800c\u83b7\u5f97\u60f3\u8981\u7684BRDF\u7279\u6027[2] \u7c97\u7cd9\u5ea6 (roughness)\u76f4\u63a5\u4ece\u6750\u8d28\u7684\u7c97\u7cd9\u5ea6\u7eb9\u7406\u4e2d\u83b7\u53d6\uff0c \u5404\u5411\u5f02\u6027 (anisotropy)\u548c \u504f\u659c\u5ea6 (skewness)\u6765\u81ea\u4e8e\u6444\u50cf\u673a\u548c\u8868\u9762\u6cd5\u7ebf\u7684\u5939\u89d2\uff0c\u4ece\u800c\u5b9e\u73b0\u903c\u771f\u7684\u6e32\u67d3\u6548\u679c\u3002\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u548c\u8981\u8868\u793a\u7684\u7279\u5b9aBRDF\u6a21\u578b\u9009\u62e9\u4efb\u610f\u7a0b\u5ea6\u7684\u53d8\u6362\u3002\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u77e9\u9635\u6765\u8fd1\u4f3cGGX\u5fae\u8868\u9762\u6a21\u578b\u3002\u5982\u524d\u6587\u6240\u8ff0\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u4e2a\u7c97\u7cd9\u5ea6\u548c\u89c2\u5bdf\u89d2\u5ea6\u7684\u7ec4\u5408\u8ba1\u7b97\u4e00\u4e2a\u77e9\u9635M\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5bf9\u77e9\u9635\u8fdb\u884c\u591a\u6b21\u91c7\u6837\uff0c\u4ece\u800c\u6700\u5c0f\u5316\u4e0e\u76ee\u6807BRDF\u7684\u8bef\u5dee\u3002\u663e\u7136\uff0c\u8fd9\u5bf9\u4e8e\u5b9e\u65f6\u6e32\u67d3\u6765\u8bf4\u662f\u4e0d\u53ef\u884c\u7684\uff0c\u56e0\u6b64\u9700\u8981\u9884\u5148\u8ba1\u7b97\u5728\u4e0d\u540c\u7c97\u7cd9\u5ea6/\u89c2\u5bdf\u89d2\u5ea6\u4e0b\u7684\u77e9\u9635M\u3002\u7531\u4e8e\u77e9\u9635M\u53ca\u5176\u9006\u77e9\u9635\u90fd\u662f\u7a00\u758f\u77e9\u9635\uff0c\u53ea\u67095\u4e2a\u975e\u96f6\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5f52\u4e00\u5316\u6765\u5c06\u9006\u77e9\u9635\u5b58\u50a8\u5728\u4e00\u4e2a4\u7ef4\u5411\u91cf\u4e2d\u3002\u8fd9\u5728\u5b9e\u8df5\u4e2d\u6548\u679c\u5f88\u597d\uff0c\u5e76\u4e14\u53ef\u4ee5\u5c06\u77e9\u9635\u4fe1\u606f\u4ee52D\u7eb9\u7406\u7684\u5f62\u5f0f\u4f20\u5165\u5230shader\u4e2d\u53bb\u67e5\u8868\u3002\u672c\u6559\u7a0b\u4e2d\u6211\u4eec\u9009\u62e9\u4e00\u4e2a64x64\u7684\u7eb9\u7406\u6765\u8282\u7701\u663e\u5b58\u3002 \u8ba1\u7b97\u79ef\u5206 \u524d\u6587\u6211\u4eec\u63d0\u5230\uff0c\u8ba1\u7b97\u533a\u57df\u5149\u65f6\u6211\u4eec\u9700\u8981\u5728\u533a\u57df\u5149\u6240\u5728\u7acb\u4f53\u89d2\u5185\u79ef\u5206 \u8f90\u5c04\u5ea6 (Radiance)\uff0c\u4f46\u662f\u5728\u5b9e\u9645\u64cd\u4f5c\u4e2d\u6211\u4eec\u4ec5\u9700\u8981\u6cbf\u591a\u9762\u4f53\u5149\u6e90\u7684\u8fb9\u7f18\u8fdb\u884c\u79ef\u5206\u3002\u8fd9\u4e2a\u79ef\u5206\u7684\u7b49\u4ef7\u8f6c\u6362\u8fc7\u7a0b\u5341\u5206\u795e\u5947\uff0c\u4e0d\u8fc7\u7531\u4e8e\u6559\u7a0b\u7bc7\u5e45\u7684\u539f\u56e0\u6211\u4ec5\u5f15\u7528\u4e00\u53e5ppt\u4e2d\u7684\u539f\u8bdd\uff0c\u5e0c\u671b\u8bfb\u8005\u8fdb\u4e00\u6b65\u7684\u4e86\u89e3\uff1a \u201c\u5176\u4e2d\u4e00\u79cd\u7406\u89e3\u65b9\u6cd5\u662f\u65af\u6258\u514b\u65af\u5b9a\u7406(Stoke\u2019s theorem)\u7684\u5e94\u7528\uff0c\u4f60\u53ef\u80fd\u5728\u5176\u4ed6\u9886\u57df\u9047\u5230\u8fc7\uff0c\u6bd4\u5982\u6d41\u4f53\u6a21\u62df\u3002\u201d \u65af\u6258\u514b\u65af\u5b9a\u7406 \u8bb2\u7684\u662f\uff1a\u5728\u5411\u91cf\u573a\u4e2d\uff0c\u573a\u4e2d\u4e00\u4e2a\u95ed\u5408\u66f2\u7ebf\u4e0a\u7684\u7ebf\u79ef\u5206\u7b49\u4e8e\u5176\u6240\u56f4\u9762\u79ef\u4e2d \u6563\u5ea6 (Curl)\u7684 \u901a\u91cf (Flux)\u4e4b\u548c[11]\u3002\u540c\u7406\u5728\u5bf9\u533a\u57df\u5149\u5149\u6e90\u7684\u79ef\u5206\u4e2d\uff0c\u7ed9\u5b9a\u5149\u6e90\u4e2d\u4efb\u610f\u4e24\u4e2a\u9876\u70b9v1\u548cv2\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u4e0b\u5f0f\u8fdb\u884c\u79ef\u5206\u6c42\u548c\uff1a \\arccos(v_1\u22c5v_2)\\frac{v_1\u00d7v_2}{\\|v_1\u00d7v_2\\|}\u22c5n \u5bf9\u4e8e\u5177\u6709N\u4e2a\u9876\u70b9\u7684\u6574\u4e2a\u533a\u57df\u5149\u5149\u6e90\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u4e0a\u5f0f\u5c06\u5168\u90e8\u8fb9\u7f18\u6c42\u548c\u6765\u51c6\u786e\u5730\u8ba1\u7b97\u51fa\u8be5\u533a\u57df\u5149\u6240\u6784\u6210\u7684\u7acb\u4f53\u89d2\uff1a \u222b_\u03a9\u2248\\frac1{2\u03c0}\u2211_i\\frac1N[\\arccos(v_1\u22c5v_2)\\frac{v_1\u00d7v_2}{\\|v_1\u00d7v_2\\|}\u22c5n] \u8bd1\u6ce8 \u5177\u4f53\u516c\u5f0f\u63a8\u5bfc\u53ef\u4ee5\u53c2\u8003\u6587\u672b\u5ef6\u4f38\u9605\u8bfb\u4e2d\u7684\u4e2d\u6587\u7b14\u8bb0[14] \u4e0b\u56fe\u4e2d\uff0c\u5411\u91cfv1\u548cv2\u662f\u4ece\u7740\u8272\u70b9\u5230\u591a\u9762\u4f53\u5149\u6e90\u7684\u9876\u70b9\u7684\u65b9\u5411\u5411\u91cf\uff0c\u201cacos(v1\u00b7v2)\u201d\u662f\u6295\u5f71\u5230\u4f4d\u4e8e\u7740\u8272\u70b9\u9644\u8fd1\u7684\u5355\u4f4d\u7403\u4f53\u4e0a\u7684\u591a\u9762\u4f53\u5f27\u957f\uff08\u4ee5\u5f27\u5ea6\u4e3a\u5355\u4f4d\uff09\uff0c\u5411\u91cfu\u4e3a\u5f52\u4e00\u5316\u53c9\u79ef\u6240\u4ea7\u751f\u7684\u5782\u76f4\u4e8ev1\u548cv2\u7684\u5355\u4f4d\u5411\u91cf\u3002\u6211\u4eec\u7528\u7740\u8272\u70b9\u7684\u6cd5\u5411\u91cf\u548c\u5411\u91cfu\uff0c\u5c06\u5149\u6e90\u6295\u5f71\u5230\u4e0e\u7740\u8272\u70b9\u76f8\u5207\u7684\u5e73\u9762\u4e0a\uff0c\u8be5\u5e73\u9762\u7684\u6cd5\u5411\u91cf\u4e3an\u3002 \u5e94\u7528\u65af\u6258\u514b\u65af\u5b9a\u7406\uff0c\u901a\u8fc7\u8fb9\u7f18\u79ef\u5206\u6765\u8ba1\u7b97\u8f6c\u6362\u540e\u7684\u5149\u6e90\u79ef\u5206[2] \u9664\u6b64\u4e4b\u5916\uff0c\u6839\u636ePPT[2]\u4e2d\u6240\u63cf\u8ff0\u7684\uff0c\u8ba1\u7b97\u53cd\u4f59\u5f26\u51fd\u6570\u65f6\u9020\u6210\u7684\u7cbe\u5ea6\u4e22\u5931\u4f1a\u5bfc\u81f4\u660e\u663e\u7684\u7455\u75b5\u3002\u8bba\u6587\u4e2d\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u901a\u8fc7\u4e00\u4e2a\u4e09\u6b21\u51fd\u6570\u6765\u8fd1\u4f3c\u53cd\u4f59\u5f26\u51fd\u6570\u3002\u4e0d\u8fc7\u672c\u6559\u7a0b\u4e2d\u6240\u91c7\u7528\u7684\u62df\u5408\u51fd\u6570\u8ddfppt[2]\u6240\u5199\u7684\u6709\u6240\u4e0d\u540c\uff0c\u8fd9\u4e2a\u7248\u672c\u7684\u62df\u5408\u6548\u679c\u66f4\u597d\u3002\u5173\u4e8e\u8fb9\u7f18\u79ef\u5206\u7684\u4ee3\u7801\u8bf7\u53c2\u8003\u5982\u4e0b\uff1a float IntegrateEdge(vec3 v1, vec3 v2, vec3 N) { float x = dot(v1, v2); float y = abs(x); float a = 0.8543985 + (0.4965155 + 0.0145206*y)*y; float b = 3.4175940 + (4.1616724 + y)*y; float v = a / b; float theta_sintheta = (x > 0.0) ? v : 0.5*inversesqrt(max(1.0 - x*x, 1e-7)) - v; return dot(cross(v1, v2)*theta_sintheta, N); } \u5c06\u591a\u9762\u4f53\u88c1\u526a\u5230\u6b63\u534a\u7403\u9762 \u4e0a\u8ff0\u7684 IntegrateEdge \u51fd\u6570\u867d\u7136\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u6709\u5f85\u63d0\u5347\u3002\u4e3a\u4e86\u83b7\u5f97\u6b63\u786e\u7684\u8f90\u7167\u5ea6\uff0c\u6211\u4eec\u9700\u8981\u5c06\u53d8\u6362\u540e\u7684\u4f59\u5f26\u5206\u5e03\u7ea6\u675f\u5230\u4e0a\u534a\u7403\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4e5f\u53ef\u4ee5\u88ab\u79f0\u4e3a\u201c\u6c34\u5e73\u9762\u88c1\u526a\u201d\uff0c\u6d89\u53ca\u5230\u5f88\u591a\u5206\u652f\u3002\u5982\u4e0b\u56fe\uff1a \u5982\u679c\u5149\u6e90\u591a\u9762\u4f53\u5728\u6c34\u5e73\u9762\uff08\u76f8\u5bf9\u4e8e\u7269\u4f53\u8868\u9762\uff09\u4ee5\u4e0b\uff0c\u6216\u8005\u90e8\u5206\u5728\u6c34\u5e73\u9762\u4ee5\u4e0b\uff0c\u8fd9\u4e2a\u591a\u9762\u4f53\u5219\u9700\u8981\u88ab\u4fee\u6b63\uff08\u88c1\u526a\uff09\u5230\u4e0a\u534a\u7403\u9762\u3002\u7406\u8bba\u4e0a\u6765\u8bf4\uff0c\u4fee\u6b63\u65b9\u6cd5\u662f\u5c06\u5b58\u5728\u95ee\u9898\u7684\u6bcf\u6761\u8fb9\u7684\u8f83\u4f4e\u7684\u9876\u70b9\u4e0a\u79fb\uff0c\u4f7f\u5176\u4e0d\u518d\u4f4d\u4e8e\u6c34\u5e73\u9762\u4ee5\u4e0b\u3002\u5982\u679c\u4e00\u6761\u8fb9\u5b8c\u5168\u4f4d\u4e8e\u6c34\u5e73\u9762\u4ee5\u4e0b\uff0c\u5219\u9700\u8981\u5c06\u5176\u6574\u4f53\u4e0a\u79fb\u3002\u6700\u540e\u4ee5\u4e0a\u5224\u65ad\u6761\u4ef6\u4e0b\uff0c\u8ba1\u7b97\u6240\u5f97\u5230\u7684\u8fb9\u7f18\u79ef\u5206\u5c06\u5c0f\u4e8e\u4fee\u6b63\u524d\u7684\u503c\uff08\u751a\u81f3\u7b49\u4e8e\u96f6\uff09\uff0c\u4ece\u800c\u51cf\u5c11\u51fa\u5c04\u8f90\u7167\u5ea6\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u5bf9\u6240\u6709\u8fb9\u7684\u6bcf\u4e2a\u9876\u70b9\u8fdb\u884c\u4e0a\u8ff0\u5224\u65ad\uff0cshader\u4e2d\u4f1a\u589e\u52a0\u8bb8\u591a\u5206\u652f\u8bed\u53e5\uff08if-else\uff09\u8fdb\u800c\u5f71\u54cd\u6e32\u67d3\u6027\u80fd\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4ece\u516c\u5f0f\u5165\u624b\uff0c\u7ee7\u7eed\u4fee\u6539\u8fb9\u7f18\u79ef\u5206\u7684\u516c\u5f0f\uff1a\u5220\u9664\u4e0e\u8868\u9762\u6cd5\u5411\u91cf\u7684\u70b9\u79ef\uff08\u4ece\u800c\u4e0d\u6295\u5f71\u5230\u5e73\u9762\u4e0a\uff09\u3002\u4fee\u6b63\u540e\u7684\u516c\u5f0f\u5982\u4e0b\uff1a \\arccos(v_1\u22c5v_2)\\frac{v_1\u00d7v_2}{\\|v_1\u00d7v_2\\|} \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u73b0\u5728\u79ef\u5206\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u5411\u91cf\uff08\u4e0e\u6cd5\u5411\u91cf\u70b9\u4e58\u7684\u524d\u4e00\u6b65\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u5411\u91cf\u5f62\u5f0f\u56e0\u5b50\u6216\u5411\u91cf\u8f90\u7167\u5ea6\u3002\u6211\u4eec\u5c06\u5176\u79f0\u4e3a\u5411\u91cfF\uff0c\u5411\u91cfF\u6709\u4e00\u4e2a\u6bd4\u8f83\u660e\u663e\u7684\u7279\u6027\uff1a\u5411\u91cfF\u7684\u6a21\u957f\u4e3a\u8be5\u5149\u6e90\u5728F\u65b9\u5411\u4e0a\u7684\u8f90\u7167\u5ea6\u7684\u5927\u5c0f[2]\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5047\u60f3\u91ca\u653e\u8f90\u7167\u5ea6\u5927\u5c0f\u4e3a||F||\u7684\u5149\u6e90\u6765\u81ea\u4e00\u4e2a\u7403\u4f53\uff08Proxy Sphere\uff09\uff0c\u901a\u8fc7\u5411\u91cfF\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u8be5\u5706\u9762\u76f8\u5bf9\u4f59\u5f26\u5206\u5e03\u51fd\u6570\u7684\u5f20\u89d2\u548c\u503e\u659c\u5ea6\u3002\u516c\u5f0f\u5982\u4e0b\uff1a \\vec F=\\arccos(v_1\u22c5v_2)\\frac{v_1\u00d7v_2}{\\|v_1\u00d7v_2\\|}\\\\ \u8f90\u7167\u5ea6\u5927\u5c0f=\\|\\vec F\\|\\\\ \u5f20\u89d2=\\arcsin\\sqrt{\\|\\vec F\\|}\\\\ \u503e\u659c\u5ea6=n\\cdot \\frac{\\vec F}{\\|\\vec F\\|} \u901a\u8fc7\u6784\u9020 \u5047\u60f3\u7403\u4f53 (Proxy Sphere)\u6211\u4eec\u53ef\u4ee5\u5b8c\u7f8e\u89e3\u51b3\u4e0a\u534a\u7403\u9762\u4fee\u6b63\u7684\u95ee\u9898\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u901a\u8fc7\u9884\u8ba1\u7b97\u4fee\u6b63\u540e\u7684\u8f90\u7167\u5ea6\u548c\u4fee\u6b63\u524d\u7684\u6bd4\u4f8b\u4e0e\u5176\u5f20\u89d2\u548c\u503e\u659c\u5ea6\u7684\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u7b2c\u4e8c\u5f20\u7eb9\u7406LUT\u3002\u5728\u6e32\u67d3\u8fc7\u7a0b\u4e2d\u901a\u8fc7\u67e5\u8868\u53ef\u4ee5\u76f4\u63a5\u83b7\u5f97\u8fd9\u4e00\u6bd4\u4f8b\u5173\u7cfb\uff0c\u4ece\u800c\u9ad8\u6548\u5730\u8fd1\u4f3c\u8ba1\u7b97\u6b63\u534a\u7403\u4fee\u6b63\u3002\u66f4\u591a\u7ec6\u8282\u8be6\u89c1[1] [2]\u3002 Important \u5411\u91cfF\u7684\u6a21\u957f\u8868\u793a\u7740\u8272\u70b9\u63a5\u53d7\u7684\u603b\u8f90\u7167\u5ea6\uff0c\u4ece\u9762\u79efA\u4f20\u8f93\u5230\u9762\u79efB\u3002\u8fd9\u4e00\u70b9\u7c7b\u4f3c\u4e8e\u6211\u4eec\u5c06\u591a\u9762\u4f53\u5149\u6e90\u7684\u8f90\u7167\u5ea6\u8f6c\u6362\u4e3a\u591a\u9762\u4f53\u5728\u7ecf\u8fc7\u534a\u7403\u9762\u4e0a\u7acb\u4f53\u89d2\u6240\u7684\u8f90\u7167\u5ea6\u7684\u8fc7\u7a0b\u3002\u4e0d\u8fc7\u7269\u4f53\u8868\u9762\u63a5\u6536\u7684\u8f90\u7167\u5ea6\u53d7\u6b63\u534a\u7403\u4fee\u6b63\u548c\u5149\u6e90\u503e\u659c\u5ea6\u7684\u5f71\u54cd\uff0c\u8fd9\u4e2a\u6bd4\u4f8b\u5173\u7cfb\u88ab\u5b58\u50a8\u5728\u4e86\u4e00\u4e2a64\u00d764\u7684LUT\u4e2d\uff0c\u6a2a\u7eb5\u5750\u6807\u5206\u522b\u4e3a\u5047\u60f3\u7403\u4f53\u7684\u5f20\u89d2\u548c\u503e\u659c\u5ea6\u3002\u4e0a\u6587\u4e2d\u4e4b\u6240\u4ee5\u7528\u201c\u5411\u91cf\u8f90\u7167\u5ea6\u201d\u4f5c\u4e3a\u5411\u91cfF\u7684\u540d\u8bcd\uff0c\u662f\u56e0\u4e3a\u4f5c\u8005\u60f3\u5f3a\u8c03\u5165\u5c04\u5149\u7684\u80fd\u91cf\u3002\u5bf9\u4e8e\u5411\u91cfF\u66f4\u5b8c\u5907\u7684\u8868\u8ff0\u8be6\u89c1[13] \u6574\u4f53\u5b9e\u73b0 \u606d\u559c\u5927\u5bb6\u5df2\u7ecf\u5b8c\u6210\u4e86\u6f2b\u957f\u7684\u7406\u8bba\u73af\u8282\uff01\u5982\u679c\u6ca1\u6709\u5b8c\u5168\u7406\u89e3\u4e5f\u6ca1\u5173\u7cfb\uff0c\u5982\u4e0b\u7684\u4ee3\u7801\u76f4\u63a5\u590d\u5236\u7c98\u8d34\u4e5f\u53ef\u4ee5\u5feb\u901f\u8ba9\u4f60\u5b9e\u73b0\u533a\u57df\u5149\u3002\uff08\u5982\u679c\u4f60\u60f3\u7ee7\u7eed\u6311\u6218\u7406\u8bba\u63a8\u5bfc\uff0c\u53ef\u4ee5\u770b\u4e00\u770b\u6587\u672b\u7684\u53c2\u8003\u8d44\u6599\uff09\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u6574\u70b9\u6709\u610f\u601d\u7684\u3002\u7b2c\u4e00\u6b65\u662f\u8f7d\u5165\u524d\u6587\u63d0\u5230\u7684\u90a3\u4e24\u4e2aLUT\uff0c\u4f5c\u4e3a2D\u7eb9\u7406\u5b58\u50a8\u5728GPU\u91cc\u3002\u5728\u8f7d\u5165\u7684\u8fc7\u7a0b\u4e2d\u786e\u4fdd\u5f00\u542f\u53cc\u7ebf\u6027\u63d2\u503c\u4ee5\u4fdd\u8bc1\u5e73\u6ed1\u91c7\u6837\uff0c\u7136\u540e\u7ea6\u675f\u4ee5\u4fdd\u8bc1\u8bfb\u53d6\u7684\u65f6\u5019\u4e0d\u4f1a\u8d85\u8fc7LUT\u7684\u8303\u56f4\u3002 #include \"ltc_matrix.hpp\" // \u5305\u542b\u4e86float\u6570\u7ec4 LTC1 \u548c LTC2 unsigned int loadMTexture(float* matrixTable) { unsigned int texture = 0; glGenTextures(1, &texture); glBindTexture(GL_TEXTURE_2D, texture); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, 64, 64, 0, GL_RGBA, GL_FLOAT, matrixTable); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR); glBindTexture(GL_TEXTURE_2D, 0); return texture; } unsigned int m1 = loadMTexture(LTC1); unsigned int m2 = loadMTexture(LTC2); \u4e0a\u8ff0\u51fd\u6570\u6240\u9700\u8981\u7684\u9006\u53d8\u6362\u77e9\u9635\u4f5c\u8005\u5df2\u7ecf\u5f88\u53cb\u597d\u5730\u4e3a\u6211\u4eec\u9884\u5148\u8ba1\u7b97\u4e86\u5b83\u4eec\uff0c\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230C++\u5934\u6587\u4ef6\uff0c\u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4ece[4]\u4e0b\u8f7d\u6e90\u4ee3\u7801\u6765\u751f\u6210\u5b83\u4eec\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u5b83\u4eec\u4f5c\u4e3aDXT10\u538b\u7f29\u56fe\u50cf\uff08.dds\uff09\u52a0\u8f7d\u3002\u6559\u7a0b\u4f5c\u8005\u9009\u62e9\u4e86C++\u5934\u6587\u4ef6\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u56fe\u50cf\u52a0\u8f7d\u5e93\u4e0d\u652f\u6301DXT10\u538b\u7f29\uff08\u6587\u4ef6\u5934\u6ca1\u6709\u6807\u51c6\u5316\uff01\uff09\u3002\u867d\u7136\u5728\u5b66\u4e60\u65f6\u4f7f\u7528\u5934\u6587\u4ef6\u5b58\u50a8\u6570\u636e\u5f88\u65b9\u4fbf\uff0c\u4f46\u5728\u53d1\u5e03\u6e38\u620f\u65f6\u6700\u597d\u4f7f\u7528.dds\u56fe\u50cf\u3002 \u7b2c\u4e00\u4e2aLUT\u7eb9\u7406\u5305\u542b\u5982\u524d\u6587\u6240\u8ff0\u7684\u9006\u8f6c\u6362\u77e9\u9635\uff0c\u800c\u7b2c\u4e8c\u4e2aLUT\u7eb9\u7406\u5305\u542bFresnel90\u3001\u6c34\u5e73\u526a\u88c1\u56e0\u5b50\u548c\u51e0\u4f55\u8870\u51cf\u7684Smith\u7cfb\u6570\uff08\u603b\u51713\u4e2a\u503c\uff09\u3002\u6211\u4eec\u5728\u6e32\u67d3\u65f6\u5c06\u8fd9\u4e24\u4e2a\u7eb9\u7406\u7ed1\u5b9a\u5230Shader\u4e2d\uff1a glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_2D, m1); glActiveTexture(GL_TEXTURE1); glBindTexture(GL_TEXTURE_2D, m2); \u9664\u6b64\u4e4b\u5916\u6211\u4eec\u8fd8\u9700\u8981\u521b\u5efa\u4e00\u4e2a \u9876\u70b9\u7f13\u51b2 (Vertex Buffer)\u6765\u5b58\u50a8\u591a\u9762\u4f53\u5149\u6e90\u7684\u591a\u9762\u4f53\u3002\u4e3a\u4e86\u7b80\u5316\u548c\u6280\u672f\u6f14\u793a\uff0c\u573a\u666f\u6700\u597d\u53ea\u6709\u4e00\u4e2a\u6c34\u5e73\u7684\u5730\u9762\u7ec4\u6210\uff0c\u706f\u5149\u7684\u8bdd\u6700\u597d\u662f\u77e9\u5f62\u3002\u5177\u4f53\u7684C++\u5b9e\u73b0\u4ee3\u7801\u8be6\u89c1 \u8fd9\u91cc \u3002 Shader \u7247\u5143\u7740\u8272\u5668 (Fragment Shader)\u662f\u91cd\u4e2d\u4e4b\u91cd\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u91c7\u6837LUT\u6765\u6784\u9020\u9006\u77e9\u9635\uff0c\u5e76\u68c0\u7d22\u51e0\u4f55\u8870\u51cf\u7cfb\u6570\u3002\u6211\u4eec\u8fd8\u9700\u8981\u5728\u7269\u4f53\u8868\u9762\u7684\u5207\u7a7a\u95f4\u4e2d\u6784\u9020\u4e86\u6b63\u4ea4\u53d8\u6362\u77e9\u9635\uff0c\u5e76\u8ba1\u7b97\u8fb9\u7f18\u79ef\u5206\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u53c2\u6570\u8f93\u5165\u548c\u5e38\u89c4\u6e32\u67d3\u7684\u5fc5\u8981\u73af\u8282\uff0c\u6bd4\u5982\u6750\u6599\u548c\u5149\u6e90\u7684\u4fe1\u606f\u3002\u5b8c\u6574\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a #version 330 core out vec4 fragColor; in vec3 worldPosition; in vec3 worldNormal; in vec2 texcoord; struct Light { float intensity; vec3 color; vec3 points[4]; bool twoSided; }; uniform Light areaLight; uniform vec3 areaLightTranslate; struct Material { sampler2D diffuse; // \u7eb9\u7406\u6620\u5c04 vec4 albedoRoughness; // (x,y,z) = \u989c\u8272, w = \u7c97\u7cd9\u5ea6 }; uniform Material material; uniform vec3 viewPosition; uniform sampler2D LTC1; // \u7528\u4e8e\u6784\u5efa\u9006\u53d8\u6362\u77e9\u9635M uniform sampler2D LTC2; // GGX\u9884\u79ef\u5206, \u83f2\u6d85\u5c14, 0(unused), \u51e0\u4f55\u8870\u51cf const float LUT_SIZE = 64.0; // LUT\u5927\u5c0f const float LUT_SCALE = (LUT_SIZE - 1.0)/LUT_SIZE; const float LUT_BIAS = 0.5/LUT_SIZE; \u53d8\u91cf areaLightTranslate \u662f\u4f5c\u8005\u7528\u6765\u79fb\u52a8\u5149\u6e90\u7684\u53c2\u6570\uff0c\u4f5c\u4e3a\u6f14\u793a\u5e76\u4e0d\u4e00\u5b9a\u9700\u8981\u3002\u7136\u540e\u90a3\u4e9b\u5e38\u91cf\u662f\u91c7\u6837LUT\u7684\u65f6\u5019\u9700\u8981\u7684\u3002\u5176\u4f59\u7684\u90e8\u5206\u76f8\u6bd4\u4f60\u5df2\u7ecf\u5f88\u719f\u6089\u4e86\u3002 Important LUT\u662f\u56fe\u5f62\u5b66\u7ecf\u5e38\u9047\u5230\u7684\u6982\u5ff5\uff0c\u5b83\u662fLook-Up Table\u7684\u7b80\u79f0\uff0c\u800c\u4e14\u5927\u591a\u6570\u60c5\u51b5\u4ee5\u7eb9\u7406\u8d34\u56fe\u7684\u5f62\u5f0f\u5728shader\u4e2d\u53d1\u6325\u4f5c\u7528\u3002\u7ed3\u6784\u4f53 Material \u4ec5\u5305\u542b\u4e09\u901a\u9053\u7684\u989c\u8272\u4fe1\u606f\u548c\u4e00\u901a\u9053\u7684\u7c97\u7cd9\u5ea6\u4fe1\u606f\u3002\u5982\u679c\u4f60\u91c7\u7528\u5ef6\u8fdf\u6e32\u67d3\uff0c\u8fd9\u79cd\u538b\u7f29\u65b9\u5f0f\u975e\u5e38\u6709\u7528\u3002\u867d\u7136\u989c\u8272\u4fe1\u606f\u5728\u672c\u6848\u4f8b\u4e2d\u672a\u88ab\u4f7f\u7528\uff0c\u4e14\u7269\u4f53\u7684\u7c97\u7cd9\u5ea6\u662f\u4e2a\u5b9a\u503c\uff0c\u5728\u5927\u591a\u6570PBR\u6e32\u67d3\u7ba1\u7ebf\u4e2d\u7c97\u7cd9\u5ea6\u53ef\u4ee5\u662f\u8868\u9762\u7eb9\u7406\u7684\u5f62\u5f0f\u3002 \u63a5\u4e0b\u6765\u662f\u51c6\u5907\u7d22\u5f15LUT\u6240\u7528\u7684\u53c2\u6570\uff0c\u8fdb\u800c\u6784\u5efauv\u5750\u6807\u7136\u540e\u6784\u5efa\u53d8\u6362\u77e9\u9635\uff1a vec3 N = normalize(worldNormal); vec3 V = normalize(viewPosition - worldPosition); vec3 P = worldPosition; float dotNV = clamp(dot(N, V), 0.0f, 1.0f); // \u901a\u8fc7\u7c97\u7cd9\u5ea6\u548csqrt(1-cos_theta)\u91c7\u6837M_texture vec2 uv = vec2(material.albedoRoughness.w, sqrt(1.0f - dotNV)); uv = uv*LUT_SCALE + LUT_BIAS; // \u83b7\u5f97inverse_M\u7684\u56db\u4e2a\u53c2\u6570 vec4 t1 = texture(LTC1, uv); // \u83b7\u5f97\u7528\u4e8e\u8ba1\u7b97\u83f2\u6d85\u5c14\u7684\u4e24\u4e2a\u53c2\u6570 vec4 t2 = texture(LTC2, uv); mat3 Minv = mat3( vec3(t1.x, 0, t1.y), vec3( 0, 1, 0), vec3(t1.z, 0, t1.w) ); \u4e3a\u4e86\u8ba1\u7b97\u7acb\u4f53\u89d2\uff0c\u6211\u4eec\u4e00\u5171\u9700\u8981\u4e24\u4e2a\u51fd\u6570\uff1a\u4e00\u4e2a\u7528\u6765\u8ba1\u7b97\u5355\u4e2a\u8fb9\u7f18\u7684\u79ef\u5206\uff0c\u53e6\u4e00\u4e2a\u662f\u591a\u6b21\u8c03\u7528\u8be5\u51fd\u6570\u5e76\u5bf9\u7ed3\u679c\u6c42\u548c\uff0c\u7136\u540e\u6267\u884c\u6b63\u534a\u7403\u4fee\u6b63\u3002\u8fb9\u7f18\u79ef\u5206\u51fd\u6570\u662f\u5176\u4e2d\u6700\u77ed\u7684\uff0c\u6b63\u5982\u672c\u6559\u7a0b\u524d\u9762\u6240\u793a\uff0c\u552f\u4e00\u7684\u533a\u522b\u662f\u6211\u4eec\u73b0\u5728\u4e0d\u6267\u884c\u70b9\u79ef\uff0c\u800c\u53ea\u8fd4\u56de\u53c9\u79ef\u4e58\u4ee5\u5f27\u957f\u3002\u53e6\u4e00\u4e2a\u51fd\u6570\u76f8\u5f53\u957f\uff0c\u4e0b\u9762\u6709\u5b8c\u6574\u7684\u4ee3\u7801\u548c\u4e00\u4e9b\u63cf\u8ff0\u8ba1\u7b97\u7684\u6ce8\u91ca\u3002 vec3 IntegrateEdge(vec3 v1, vec3 v2, vec3 N) { float x = dot(v1, v2); float y = abs(x); float a = 0.8543985 + (0.4965155 + 0.0145206*y)*y; float b = 3.4175940 + (4.1616724 + y)*y; float v = a / b; float theta_sintheta = (x > 0.0) ? v : 0.5*inversesqrt(max(1.0 - x*x, 1e-7)) - v; return cross(v1, v2)*theta_sintheta; } vec3 LTC_Evaluate(vec3 N, vec3 V, vec3 P, mat3 Minv, vec3 points[4], bool twoSided) { // \u6784\u5efaTBN\u77e9\u9635\u7684\u4e09\u4e2a\u57fa\u5411\u91cf vec3 T1, T2; T1 = normalize(V - N * dot(V, N)); T2 = cross(N, T1); // \u4f9d\u636eTBN\u77e9\u9635\u65cb\u8f6c\u5149\u6e90 Minv = Minv * transpose(mat3(T1, T2, N)); // \u591a\u8fb9\u5f62\u56db\u4e2a\u9876\u70b9 vec3 L[4]; // \u901a\u8fc7\u9006\u53d8\u6362\u77e9\u9635\u5c06\u9876\u70b9\u53d8\u6362\u4e8e \u53d7\u7ea6\u4f59\u5f26\u5206\u5e03 \u4e2d L[0] = Minv * (points[0] - P); L[1] = Minv * (points[1] - P); L[2] = Minv * (points[2] - P); L[3] = Minv * (points[3] - P); // use tabulated horizon-clipped sphere // \u5224\u65ad\u7740\u8272\u70b9\u662f\u5426\u4f4d\u4e8e\u5149\u6e90\u4e4b\u540e vec3 dir = points[0] - P; // LTC \u7a7a\u95f4 vec3 lightNormal = cross(points[1] - points[0], points[3] - points[0]); bool behind = (dot(dir, lightNormal) < 0.0); // \u6295\u5f71\u81f3\u5355\u4f4d\u7403\u9762\u4e0a L[0] = normalize(L[0]); L[1] = normalize(L[1]); L[2] = normalize(L[2]); L[3] = normalize(L[3]); // \u8fb9\u7f18\u79ef\u5206 vec3 vsum = vec3(0.0); vsum += IntegrateEdgeVec(L[0], L[1]); vsum += IntegrateEdgeVec(L[1], L[2]); vsum += IntegrateEdgeVec(L[2], L[3]); vsum += IntegrateEdgeVec(L[3], L[0]); // \u8ba1\u7b97\u6b63\u534a\u7403\u4fee\u6b63\u6240\u9700\u8981\u7684\u7684\u53c2\u6570 float len = length(vsum); float z = vsum.z/len; if (behind) z = -z; vec2 uv = vec2(z*0.5f + 0.5f, len); // range [0, 1] uv = uv*LUT_SCALE + LUT_BIAS; // \u901a\u8fc7\u53c2\u6570\u83b7\u5f97\u51e0\u4f55\u8870\u51cf\u7cfb\u6570 float scale = texture(LTC2, uv).w; float sum = len*scale; if (!behind && !twoSided) sum = 0.0; // \u8f93\u51fa vec3 Lo_i = vec3(sum, sum, sum); return Lo_i; } \u786e\u5b9e\u6709\u4e9b\u957f\uff0c\u4e0d\u8fc7\u5982\u679c\u4f60\u7406\u89e3\u4e86\u539f\u7406\u7684\u8bdd\u5176\u5b9e\u633a\u5408\u7406\u7684\u3002\u9664\u6b64\u4e4b\u5916\u8fd8\u6709\u4e00\u70b9\u6ca1\u63d0\u5230\u7684\u662f\u53d8\u91cf twoSided \uff0c\u901a\u8fc7\u4f20\u5165\u8fd9\u4e2a\u53c2\u6570\u6765\u63a7\u5236\u5f00\u542f/\u5173\u95ed\u533a\u57df\u5149\u7684\u53cc\u5411\u7167\u660e\u3002\u5b8c\u6574\u7684\u4ee3\u7801\u5728 \u8fd9\u91cc \u7ed3\u679c \u8fd9\u91cc \u662fC++\u4ee3\u7801\uff0c\u8fd9\u4efd\u4ee3\u7801\u52a0\u4e0a\u524d\u6587\u63d0\u4f9b\u7684shader\u548c\u5934\u6587\u4ef6\u5373\u53ef\u8fd0\u884c\u3002\u4f5c\u8005\u8fd8\u989d\u5916\u589e\u52a0\u4e86\u4e00\u4e9b\u529f\u80fd\uff1a \u6309\u4f4fR/Shift+R\u4ee5\u51cf\u5c0f/\u589e\u52a0\u6750\u6599\u7c97\u7cd9\u5ea6\u3002 \u6309\u4f4fI/Shift+I\u4ee5\u964d\u4f4e/\u589e\u52a0\u5149\u5f3a\u5ea6\u3002 \u4f7f\u7528\u7bad\u5934\u952e\u79fb\u52a8\u5149\u6e90\u3002 \u4f7f\u7528B\u542f\u7528/\u7981\u7528\u53cc\u9762\u7167\u660e\u3002 \u4f7f\u7528WASD\u952e\u79fb\u52a8\u76f8\u673a\uff0c\u901a\u8fc7\u9f20\u6807\u65cb\u8f6c\u76f8\u673a\u3002\u8fd8\u652f\u6301\u4f7f\u7528\u9f20\u6807\u6eda\u8f6e\u8fdb\u884c\u7f29\u653e\u3002 \u4f5c\u8005\u8fd8\u589e\u52a0\u4e86\u5730\u9762\u8d34\u56fe\u8ba9\u573a\u666f\u770b\u8d77\u6765\u66f4\u771f\u5b9e\u3002\u5982\u679c\u7f16\u8bd1\u6210\u529f\u4f60\u5927\u6982\u7387\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u7ed3\u679c\uff1a \u8bc4\u4f30\u6027\u80fd \u7ed3\u679c\u770b\u8d77\u6765\u4e0d\u9519\uff0c\u4e0d\u8fc7\u4e5f\u8bb8\u4f60\u66f4\u60f3\u77e5\u9053\uff1a \u5982\u679c\u6dfb\u52a0\u66f4\u591a\u706f\u5149\u4f1a\u5982\u4f55 \u6e32\u67d3\u6027\u80fd\u5982\u4f55 \u663e\u7136\uff0c\u6839\u636e\u56fe\u5f62\u786c\u4ef6\u7684\u4e0d\u540c\uff0c\u8fd9\u4e24\u4e2a\u95ee\u9898\u53ef\u80fd\u4f1a\u6709\u4e0d\u540c\u7684\u7b54\u6848\u3002\u4f46\u603b\u7684\u6765\u8bf4\u6d4b\u8bd5\u8d77\u6765\u5f88\u7b80\u5355\uff1a\u6211\u4eec\u7ed9shader\u4f20\u5165\u4e00\u4e2a\u6570\u7ec4\u6765\u8868\u793a\u51e0\u4e2a\u533a\u57df\u5149\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 OpenGL\u961f\u5217 \u6765\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002\u8fd9\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u6848\u4f8b\u56e0\u4e3a\u533a\u57df\u5149\u9700\u8981\u5927\u91cf\u7684\u8ba1\u7b97\u2014\u2014\u6bd4\u5176\u5b83\u7c7b\u578b\u7684\u5149\u6e90\u8981\u591a\u5f97\u591a\u3002\u6bd4\u5982\u5bf9\u4e8e\u70b9\u5149\u6e90\u7684\u6d4b\u8bd5\uff0c\u6211\u4eec\u53ef\u4ee5\u7a97\u524d100-200\u4e2a\u5e76\u4e14\u91c7\u7528\u5411\u524d\u6e32\u67d3\u4ecd\u7136\u5177\u6709\u53ef\u63a5\u53d7\u7684\u5e27\u7387\uff0c\u4f46\u8fd9\u5bf9\u4e8e\u533a\u57df\u5149\u6e90\u6765\u8bf4\u662f\u4e0d\u53ef\u884c\u7684\u3002\u56e0\u6b64\u5982\u679c\u4f60\u60f3\u53d1\u5e03\u4e00\u6b3e\u6e38\u620f\uff0c\u901a\u8fc7\u6027\u80fd\u8bc4\u4f30\u6765\u89c4\u5212\u7167\u660e\u5360\u7528\u7684\u6027\u80fd\u5341\u5206\u91cd\u8981\u3002OpenGL\u961f\u5217\u7684\u5e38\u89c4\u8bbe\u7f6e\u5982\u4e0b\u6240\u793a\uff1a GLuint timeQuery; glGenQueries(1, &timeQuery); GLuint64 totalQueryTimeNs = 0; GLuint64 numQueries = 0; while (!glfwWindowShouldClose(window)) { [...] glBeginQuery(GL_TIME_ELAPSED, timeQuery); renderPlane(); glEndQuery(GL_TIME_ELAPSED); GLuint64 elapsed = 0; // will be in nanoseconds glGetQueryObjectui64v(timeQuery, GL_QUERY_RESULT, &elapsed); numQueries++; totalQueryTimeNs += elapsed; } double measuredAverageNs = (double)totalQueryTimeNs / (double)numQueries; double measuredAverageMs = measuredAverageNs * 1.0e-6; std::cout << \"Total average time(ms) = \" << measuredAverageMs << '\\n'; \u4e0a\u8ff0\u6d4b\u8bd5\u65b9\u5f0f\u6bd4\u8f83\u521d\u7ea7\uff0c\u6ca1\u6709\u8003\u8651\u5f02\u5e38\u503c\u6216\u65b9\u5dee\u3002\u4e0d\u8fc7\u91cd\u8981\u662f\u7edf\u8ba1\u7ed3\u679c\u4ece\u7eb3\u79d2\u53d8\u6210\u4e86\u6beb\u79d2\u3002 \u7247\u5143\u7740\u8272\u5668\u5c06\u4f7f\u7528\u5faa\u73af\u5728\u904d\u5386\u6240\u6709\u5149\u6e90\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u91cd\u590d\u5229\u7528\u5176\u4e2d\u7684\u4e00\u4e9b\u6570\u636e\uff0c\u6bd4\u5982\u6211\u4eec\u4e0d\u9700\u8981\u5bf9\u6bcf\u4e2a\u5149\u6e90\u6267\u884cLUT\u7eb9\u7406\u67e5\u627e\u3002\u7740\u8272\u5668\u7684\u66f4\u6539\u90e8\u5206\u73b0\u5728\u770b\u8d77\u6765\u5982\u4e0b\uff1a struct AreaLight { float intensity; vec3 color; vec3 points[4]; bool twoSided; }; uniform AreaLight areaLights[16]; uniform int numAreaLights; // [...] void main() { // [...] for (int i = 0; i < numAreaLights; i++) { // Evaluate LTC shading vec3 diffuse = LTC_Evaluate(N, V, P, mat3(1), areaLights[i].points, areaLights[i].twoSided); vec3 specular = LTC_Evaluate(N, V, P, Minv, areaLights[i].points, areaLights[i].twoSided); // GGX BRDF shadowing and Fresnel specular *= mSpecular*t2.x + (1.0f - mSpecular) * t2.y; // Add contribution result += areaLights[i].color * areaLights[i].intensity * (specular + mDiffuse * diffuse); } fragColor = vec4(ToSRGB(result), 1.0f); } Important \u6211\u4eec\u5fc5\u987b\u5728OpenGL\u4e2d\u6307\u5b9a\u4e00\u4e2a\u56fa\u5b9a\u957f\u5ea6\u7684\u7edf\u4e00\u6570\u7ec4\uff0c\u5373\u4f7f\u5b9e\u9645\u60c5\u51b5\u4e2d\u706f\u5149\u6570\u91cf\u4e0d\u4f1a\u90a3\u4e48\u591a\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06 numAreaLights \u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u7b49\u4e8e\u6216\u5c0f\u4e8e\u6700\u5927\u5141\u8bb8\u5149\u6e90\u6570\u91cf\u7684\u6570\u5b57\uff0c\u5728\u4ee5\u4e0a\u4f8b\u5b50\u4e2d\u4e3a16\u3002 \u8bd1\u6ce8 \u5982\u679c\u6709\u4f7f\u7528\u4e0d\u5b9a\u957f\u6570\u7ec4\u7684\u53bb\u4fee\uff0c\u53ef\u4ee5\u4f7f\u7528Shader Storage Buffer SSBO \u6839\u636e\u4f60\u7684\u9700\u6c42\uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u642d\u5efa\u6d4b\u8bd5\u7a0b\u5e8f\u3002\u7a0b\u5e8f\u7684\u6838\u5fc3\u662f\u521b\u5efa\u4e00\u4e2a\u533a\u57df\u5149\u4f4d\u7f6e\u9635\u5217\uff0c\u5e76\u5c06\u5b83\u4eec\u8f93\u5165\u5230shader\u4e2d\u3002\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e00\u70b9\u5728 \u3010\u591a\u5149\u6e90\u3011 \u4e00\u8282\u4e2d\u8fdb\u884c\u4e86\u8bb2\u89e3\u3002\u4e00\u4e0b\u4e3a\u4f5c\u8005\u6240\u5c55\u793a\u7684\u57fa\u7840\u6027\u80fd\u6d4b\u8bd5\u7ed3\u679c\uff1a # area lights Avg. rendering time (ms) 1 0.557326 2 0.897486 4 2.32212 8 3.9175 12 4.37243 16 3.95511 24 4.50246 32 5.67573 \u8fd9\u91cc \u662f\u6d4b\u8bd5\u7528\u7684\u6e90\u7801\uff0c\u5f53\u7136\u8fd8\u6709 \u4fee\u6539\u540e\u7684shader \u5c0f\u8282 \u867d\u7136\u8fd9\u4e2a\u6f14\u793a\u4e0d\u662f\u5f88\u7cbe\u7f8e\uff0c\u4f46\u4e0d\u59a8\u788d\u4ece\u4e2d\u5f97\u51fa\u4e00\u4e9b\u7ed3\u8bba\uff1a \u706f\u5149\u662f\u4f2a\u968f\u673a\u653e\u7f6e\u5728\u7eb9\u7406\u5e73\u9762\u5468\u56f4\u7684\u3002 \u8fd9\u4e9b\u6d4b\u8bd5\u662f\u57282015\u5e74\u7684\u201cNVIDIA GeForce GTX 850M\u201d\u7b14\u8bb0\u672c\u7535\u8111GPU\u4e0a\u8fdb\u884c\u7684\u3002\u4f60\u53ef\u80fd\u4f1a\u6709\u66f4\u597d\u7684\u6d4b\u8bd5\u7ed3\u679c\u3002 \u8fd9\u4e9b\u706f\u5149\u662f\u4f7f\u7528\u5411\u524d\u6e32\u67d3\u7684\u3002 \u5728\u6267\u884c\u8fd9\u4e9b\u57fa\u51c6\u6d4b\u8bd5\u65f6\uff0c\u6211\u7ecf\u5386\u4e86\u5f88\u591a\u53d8\u6570\u3002\u8fd8\u6709\u5f88\u591a\u56e0\u7d20\u9700\u8981\u8003\u8651\uff0c\u6bd4\u5982\u9a71\u52a8\u7684\u5f71\u54cd\uff0c\u7a0b\u5e8f\u5728\u6267\u884c\u4ec0\u4e48\u64cd\u4f5c\u7b49\u7b49\u3002\u4e0a\u9762\u7684\u56fe\u8868\u663e\u793a\u4e86\u603b\u4f53\u8d8b\u52bf\uff0c\u6e32\u67d3\u65f6\u95f4\u968f\u706f\u5149\u6570\u91cf\u5927\u81f4\u5448\u7ebf\u6027\u7684\u589e\u957f\u3002 \u5728\u6e32\u67d3\u51fd\u6570\u524d\u540e\u6dfb\u52a0 glBeginQuery(GL_TIME_ELAPSED) \u548c glEndQuery(GL_TIME_ELAPSED) \u6765\u8bb0\u5f55\u6d4b\u8bd5\u6570\u636e\u3002\u67e5\u8be2\u8bb0\u5f55\u7684\u7ed3\u679c\u53ef\u4ee5\u7528 glGetQueryObjectui64v \u83b7\u5f97\uff0c\u5e76\u4ece\u7eb3\u79d2\u8f6c\u6362\u4e3a\u6beb\u79d2\u4ee5\u8ba1\u7b97\u5e73\u5747\u503c\u3002 \u8fd9\u91cc\u7279\u522b\u6709\u8da3\u7684\u5173\u4e8e\u6b63\u5411\u6e32\u67d3\u7684\u8981\u70b9\uff1a\u5728\u8fd9\u4e2a\u6f14\u793a\u573a\u666f\u4e2d\u53ea\u6709\u7eb9\u7406\u5e73\u9762\uff08\u5ffd\u7565\u663e\u793a\u5149\u6e90\u7684\u5f69\u8272\u5e73\u9762\uff09\u6709 \u7ed8\u5236\u8c03\u7528 (Draw Call)\u3002\u4f46\u5982\u679c\u6709\u8bb8\u591a\u5bf9\u8c61\u9700\u8981\u6e32\u67d3\uff0c\u5373\u8ba1\u7b97\u6bcf\u4e2a\u5149\u6e90\u3001\u6bcf\u4e2a\u7247\u7247\u5143\u3001\u6bcf\u4e2a\u7f51\u683c\u7684\u4eae\u5ea6\u8d21\u732e\uff0c\u5219\u8fd9\u6837\u7684\u7ba1\u7ebf\u662f\u975e\u5e38\u4f4e\u6548\u7684\uff0c\u56e0\u4e3a\u6df1\u5ea6\u6d4b\u8bd5\u4f1a\u5bfc\u81f4\u5927\u91cf\u7247\u5143\u88ab\u8986\u76d6\u3002\u6240\u4ee5\u66f4\u597d\u7684\u5b9e\u73b0\u65b9\u6cd5\u662f\u4f7f\u7528\u5ef6\u8fdf\u6e32\u67d3\uff0c\u8fd9\u610f\u5473\u7740\u65e0\u8bba\u7ed8\u5236\u7684\u5bf9\u8c61\u6570\u91cf\u5982\u4f55\uff0c\u9700\u8981\u8ba1\u7b97\u7167\u660e\u7684\u7247\u5143\u7d27\u8ddf\u5c4f\u5e55\u5927\u5c0f\u6709\u5173\u3002 \u5982\u679c\u7ee7\u7eed\u6cbf\u7528\u5411\u524d\u6e32\u67d3\uff0c\u5219\u53ef\u4ee5\u8c03\u7528\u4e00\u4e2a \u8ba1\u7b97\u7740\u8272\u5668 (Compute Shader)\uff0c\u8be5\u7740\u8272\u5668\u5c06\u5c4f\u5e55\u7a7a\u95f4\u5212\u5206\u4e3a\u5c0f\u533a\u5757\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u533a\u5757\u5206\u914d\u4e00\u4e2a\u533a\u57df\u5149\u5217\u8868\uff08\u5373\u5411\u524d\u6e32\u67d3plus\uff09\uff0c\u4ee5\u8fdb\u884c\u8fdb\u4e00\u6b65\u4f18\u5316\u3002\u4e0d\u8fc7\u8fd9\u4e2a\u7ba1\u7ebf\u7684\u57fa\u7840\u662f\u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u4e2a\u533a\u57df\u5149\u5b9a\u4e49\u4e00\u4e2a\u6700\u5927\u8870\u51cf\u534a\u5f84\u65f6\u3002\u8fd9\u5df2\u7ecf\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u5b8c\u6210\uff08\u8bf7\u53c2\u89c1 \u77e9\u5f62\u533a\u57df\u5149 \uff09\u3002 \u5176\u4ed6\u706f\u5149\u7c7b\u578b \u9664\u4e86\u77e9\u5f62\u548c\u591a\u9762\u4f53\u5149\u6e90\uff0c\u8fd8\u53ef\u4ee5\u5b9e\u73b0\u5176\u4ed6\u7c7b\u578b\u7684\u533a\u57df\u5149\u6e90\u4f8b\u5982\u6761\u5f62\u706f\u6216\u67f1\u9762\u706f\u3002\u5c3d\u7ba1\u8d85\u51fa\u4e86\u672c\u6587\u7684\u8303\u56f4\uff0c\u4f46\u6570\u5b66\u57fa\u7840\u53ef\u4ee5\u5728[12]\u4e2d\u627e\u5230\u3002\u4f5c\u8005\u672c\u4eba\u5e76\u6ca1\u6709\u5c1d\u8bd5\u5b9e\u73b0\uff0c\u56e0\u6b64\u65e0\u6cd5\u8c08\u8bba\u5176\u6e32\u67d3\u6027\u80fd\u6216\u5b9e\u65bd\u7ec6\u8282\u3002\u4e0d\u8fc7\u4e3a\u4e86\u5b8c\u6574\u8d77\u89c1\u6b64\u5904\u7a0d\u5fae\u63d0\u4e00\u5634\u5df4\u3002\u9664\u6b64\u4e4b\u5916\u4f5c\u8005\u8fd8\u53d1\u73b0\u4e86\u4e00\u4e9b\u5305\u62ec\u5706\u5f62\u533a\u57df\u706f\u7684\u6f14\u793a\u3002 \u603b\u7ed3 \u611f\u8c22\u60a8\u7684\u9605\u8bfb\u3002\u4f5c\u8005\u548c\u8bd1\u8005\u90fd\u5e0c\u671b\u4f60\u559c\u6b22\u5e76\u4ece\u8fd9\u4e00\u8282\u5b66\u5230\u4e86\u4e00\u4e9b\u4e1c\u897f\u3002\u5bf9\u6211\u81ea\u5df1\u6765\u8bf4\uff0c\u5b66\u4e60\u8fd9\u9879\u4ee4\u4eba\u656c\u754f\u7684\u6280\u672f\u662f\u4e00\u79cd\u5de8\u5927\u7684\u4e50\u8da3\uff0c\u5982\u679c\u9080\u529f\u8bf7\u8d4f\u7684\u8bdd\uff0c\u6240\u6709\u7684\u529f\u52b3\u7406\u5e94\u90fd\u5f52\u529f\u4e8e\u53d1\u73b0\u5b83\u7684\u7814\u7a76\u4eba\u5458\u4eec\u3002\u6b63\u5982\u672c\u8282\u5f00\u5934\u6240\u63d0\u5230\u7684\uff0c\u4eba\u4eec\u540e\u6765\u5bf9\u8fd9\u9879\u6280\u672f\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u5305\u62ec\u5176\u4ed6\u7c7b\u578b\u7684\u591a\u8fb9\u5f62\u5149\u6e90\u3002\u51fa\u4e8e\u7b80\u6d01\u7684\u539f\u56e0\uff0c\u672c\u6559\u7a0b\u7701\u7565\u4e86\u8fd9\u4e9b\u5185\u5bb9\u4ee5\u53ca\u5173\u4e8e\u7eb9\u7406\u6620\u5c04\u7684\u90e8\u5206\u3002\u8bf4\u4e0d\u5b9a\u5b83\u4eec\u53ef\u80fd\u4f1a\u5728\u672a\u6765\u7684\u7ae0\u8282\u4e2d\u88ab\u63d0\u53ca\u3002 \u6700\u540e\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u5728\u533a\u57df\u5149\u4e2d\u6dfb\u52a0\u9634\u5f71\u662f\u4e00\u4e2a\u5f00\u653e\u7684\u7814\u7a76\u9886\u57df\u3002\u4e00\u4e9b\u53ef\u80fd\u7684\u60f3\u6cd5\u6d89\u53ca\u5c4f\u5e55\u7a7a\u95f4\u5149\u7ebf\u8ddf\u8e2a\u548c\u7b97\u6cd5\u964d\u566a\uff0c\u4f8b\u5982[9]\u6216[10]\u3002\u867d\u7136\u8fd9\u4e9b\u6280\u672f\u975e\u5e38\u6709\u8da3\uff0c\u4f46\u6709\u70b9\u8d85\u51fa\u4e86\u672c\u7cfb\u5217\u6559\u7a0b\u7684\u8303\u56f4\u3002\u5982\u679c\u4f60\u613f\u610f\uff0c\u4f60\u5f53\u7136\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5b66\u4e60\u548c\u4e86\u89e3\u3002 \u5ef6\u4f38\u9605\u8bfb [1] Real-Time Polygonal-Light Shading with Linearly Transformed Cosines , ACM Siggraph \u201816, LTC.pdf [2] Real-Time Area Lighting: a Journey from Research to Production , presentation slides by Stephen Hill: s2016_ltc_rnd.pdf [3] Real-Time Polygonal-Light Shading with Linearly Transformed Cosines , presentationslides by Eric Heitz: slides.pdf [4] Main reference github repo: https://github.com/selfshadow/ltc_code. Contains precomputed matrices, source code for WebGL examples, and source code for recomputing the matrices with different BRDF-models. [5] Lighting with Linearly Transformed Cosines , blog post by Tom Grove further investigating the technique. blog [6] Real-Time Polygonal-Light Shading with Linearly Transformed Cosines , Supplemental video showcasing the technique: Youtube [7] Adam - Unity , award-winning real-time-rendered short film by the Unity Demo team using the technique: Youtube [8] Interactive WebGL-demo: blog.selfshadow.com [9] Combining Analytic Direct Illumination and Stochastic Shadows , Eric Heitz et al.: I3D2018 combining.pdf [10] Fast Analytic Soft Shadows from Area Lights , Aakash KT et al.: 111-120.pdf [11] Stoke\u2019s theorem : Wikipedia [12] Linear-Light Shading with Linearly Transformed Cosines : HAL archives [13] Alan Watt and Mark Watt: Advanced Animation and Rendering Techniques, Theory and Practice , Addison Wesley, 1992 [14] \u5b9e\u65f6\u8303\u56f4\u5149Area Light\u6e32\u67d3\u53ca\u5176\u6570\u5b66\u539f\u7406\u63a8\u5bfc\uff0cXDzZyq\uff1a \u7b14\u8bb0","title":"\u533a\u57df\u5149"},{"location":"08%20Guest%20Articles/2022/03%20Area%20Lights/#_1","text":"\u539f\u6587 Area Lights \u4f5c\u8005 Alexander Christensen \u7ffb\u8bd1 XDzZyq \u6821\u5bf9 \u6682\u65e0 \u6709\u7eb9\u7406\u7684\u77e9\u5f62\u533a\u57df\u5149[1]","title":"\u533a\u57df\u5149"},{"location":"08%20Guest%20Articles/2022/03%20Area%20Lights/#_2","text":"\u5149\u7ebf\u65e0\u5904\u4e0d\u5728\u3002\u540c\u6837\uff0c\u5408\u9002\u7684\u706f\u5149\u5728\u6e32\u67d3\u4e2d\u4e5f\u5341\u5206\u91cd\u8981\u3002 \u76ee\u524d\u4e3a\u6b62\u6211\u4eec\u5df2\u7ecf\u5728\u7b2c\u4e09\u7ae0\u4e2d \u3010\u6295\u5149\u7269\u3011 \u8fd9\u4e00\u8282\u5b66\u4e60\u4e86\u4e09\u79cd\u622a\u7136\u4e0d\u540c\u7684\u706f\u5149\u7c7b\u578b\uff1a \u5e73\u884c\u5149\u3001\u70b9\u5149\u548c\u805a\u5149 \u3002\u4f46\u662f\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u5149\u6e90\u901a\u5e38\u5177\u6709\u4e00\u5b9a\u8303\u56f4\u548c\u9762\u79ef\uff0c\u800c\u4ee5\u4e0a\u4e09\u79cd\u5149\u6e90\u8981\u4e48\u662f\u6765\u81ea\u4e00\u70b9\uff0c\u8981\u4e48\u5149\u7ebf\u5728\u7a7a\u95f4\u4e2d\u5404\u4e2a\u4f4d\u7f6e\u76f8\u540c\uff08\u5e73\u884c\u5149\uff09\u3002 \u5f88\u663e\u7136\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u4ee5\u4e0a\u4e09\u79cd\u5149\u6e90\u53bb\u5b9e\u73b0\u4e00\u79cd\u5177\u6709\u9762\u79ef\u7684\u5149\u6e90\u3002\u5047\u8bbe\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u77e9\u5f62\u5149\u6e90\uff0c\u5982\u679c\u4ec5\u7528\u70b9\u5149\u6216\u805a\u5149\u5b9e\u73b0\uff0c\u5219\u9700\u8981\u6210\u5343\u4e0a\u4e07\u7684\u5fae\u5c0f\u5149\u6e90\u9635\u5217\u5728\u8fd9\u4e2a\u77e9\u5f62\u533a\u57df\u4e2d\u3002\u53c8\u5373\u4f7f\u6211\u4eec\u6210\u529f\u521b\u5efa\u4e86\u8fd9\u4e9b\u5149\u6e90\uff0c\u5f88\u660e\u663e\uff0c\u4e3a\u4e86\u8ffd\u6c42\u5b9e\u65f6\u6e32\u67d3\u7684\u6027\u80fd\u8981\u6c42\uff0c\u6e32\u67d3\u7ed3\u679c\u80af\u5b9a\u4e0d\u5c3d\u5982\u4eba\u610f\uff08\u5982\u679c\u76f8\u673a\u975e\u5e38\u63a5\u8fd1\u77e9\u5f62\u5149\u6e90\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u80fd\u8fd8\u9700\u8981\u66f4\u5bc6\u7684\u706f\u5149\uff09\u3002\u9664\u6b64\u4e4b\u5916\u53c8\u53ef\u80fd\u51fa\u73b0\u7684\u7167\u660e\u8fc7\u5ea6\uff0c\u6240\u4ee5\u4e3a\u4e86\u80fd\u91cf\u5b88\u6052\uff0c\u6bcf\u4e2a\u5149\u6e90\u7684\u4eae\u5ea6\u53c8\u9700\u8981\u5c3d\u53ef\u80fd\u7684\u5c0f\u3002\u5f88\u660e\u663e\u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\u662f\u4e0d\u5408\u7406\u7684\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4e00\u79cd\u65b0\u7684\u706f\u5149\u7c7b\u578b\uff1a \u533a\u57df\u5149 \u3002 \u8fd9\u79cd\u5177\u6709\u533a\u57df\u7684\u5149\u6e90\u5728\u79bb\u7ebf\u6e32\u67d3\u4e2d\uff0c\u901a\u8fc7\u8499\u7279\u5361\u6d1b\u91c7\u6837\uff0c\u4f7f\u7528\u5149\u7ebf\u8ffd\u8e2a\u53ef\u4ee5\u76f8\u5bf9\u7b80\u5355\u7c97\u66b4\u5730\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u4f46\u662f\u672c\u7bc7\u6559\u7a0b\u4e3b\u8981\u9762\u5411\u5b9e\u65f6\u6e32\u67d3\u9886\u57df\uff0c\u4e0a\u8ff0\u79bb\u7ebf\u6e32\u67d3\u7684\u5b9e\u73b0\u65b9\u5f0f\u5728\u672c\u6587\u4e2d\u4e0d\u4f1a\u88ab\u63d0\u53ca\u3002 \u672c\u7bc7\u6559\u7a0b\u63cf\u8ff0\u4e86\u4e00\u79cd\u4f7f\u7528 \u7ebf\u6027\u53d8\u6362\u4f59\u5f26\u5206\u5e03\u96c6 (Linearly Transformed Cosines)\u7684\u65b9\u6cd5\u4ece\u4efb\u610f\u51f8\u591a\u9762\u4f53\u4e2d\u6e32\u67d3\u533a\u57df\u5149\u3002\u8be5\u65b9\u6cd5\u6700\u521d\u7531Eric Heitz\u3001Jonathan Dupuy\u3001Stephen Hill\u548cDavid Neubelt\u5728SIGGRAPH2016\u5e74\u53d1\u8868\u3002\u540e\u7eed\u4eba\u4eec\u53c8\u5bf9\u8be5\u65b9\u6cd5\u8fdb\u884c\u4e86\u62d3\u5c55\uff0c\u9664\u4e86\u77e9\u5f62\u6216\u591a\u9762\u4f53\u5916\u53c8\u652f\u6301\u4e86\u5706\u5f62\u5149\u6e90\u3002 \u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u4e3b\u8981\u7814\u7a76\u77e9\u5f62\u533a\u57df\u5149\u7684\u5177\u4f53\u5b9e\u73b0\u65b9\u6cd5\u3002","title":"\u524d\u8a00"},{"location":"08%20Guest%20Articles/2022/03%20Area%20Lights/#_3","text":"\u533a\u57df\u5149\u6e32\u67d3\u662f\u57fa\u4e8e \u7269\u7406\u6e32\u67d3 (PBR)\u7684\uff0c\u56e0\u6b64\u5efa\u8bae\u5728\u5f00\u59cb\u5b66\u4e60\u524d\u5148\u719f\u6089\u5176\u6838\u5fc3\u6982\u5ff5\uff0c\u4ee5\u83b7\u5f97\u6700\u4f73\u5b66\u4e60\u4f53\u9a8c\u3002\u6b64\u5916\u8fd9\u4e2a\u65b9\u6cd5\u6d89\u53ca\u5230\u975e\u5e38\u591a\u7684\u6570\u5b66\u77e5\u8bc6\uff0c\u5efa\u8bae\u5148\u719f\u6089\u51e0\u4e2a\u6570\u5b66\u6982\u5ff5\uff1a\u79ef\u5206\u3001\u7ebf\u6027\u4ee3\u6570\u3001\u4e09\u89d2\u51fd\u6570\u3001\u7acb\u4f53\u89d2\u89d2\u5ea6\u6d4b\u91cf\u548c\u7403\u9762\u5206\u5e03\u51fd\u6570\u3002\u4e0d\u8fc7\u5982\u679c\u4f60\u4ec5\u4ec5\u662f\u60f3\u5b9e\u73b0\u533a\u57df\u5149\uff0c\u90a3\u4e48\u4f60\u5b8c\u5168\u53ef\u4ee5\u76f4\u63a5\u590d\u5236\u6587\u4e2d\u3010\u6574\u4f53\u5b9e\u73b0\u3011\u6240\u7ed9\u51fa\u7684\u4ee3\u7801\u3002\u5b9e\u73b0\u533a\u57df\u5149\u6240\u9700\u8981\u7684\u7406\u8bba\u77e5\u8bc6\u6bd4\u8f83\u6df1\u5965\uff0c\u5228\u6839\u95ee\u5e95\u53ef\u80fd\u662f\u503c\u5f97\u7684\uff0c\u4f46\u662f\u4e0d\u5b8c\u5168\u7406\u89e3\u5176\u539f\u7406\u4e0d\u4f1a\u5f71\u54cd\u5e94\u7528\u3002\u7814\u7a76\u4eba\u5458\u5df2\u7ecf\u4e3a\u5e2e\u6211\u4eec\u5b8c\u6210\u4e86\u590d\u6742\u7684\u63a8\u5bfc\u8fc7\u7a0b\uff0c\u611f\u8c22\u4ed6\u4eec\u8ba9\u6211\u4eec\u7684\u6e32\u67d3\u770b\u8d77\u6765\u5f88\u9177\uff01 :) \u4f60\u53ef\u80fd\u8fd8\u6ce8\u610f\u5230\u5c01\u9762\u56fe\u50cf\u6709\u4e00\u4e2a\u5e26\u7eb9\u7406\u7684\u5149\u6e90\u3002\u4e0d\u8fc7\u672c\u6587\u4e0d\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u5c3d\u7ba1\u53ef\u80fd\u4f1a\u5728\u672a\u6765\u7684\u7ae0\u8282\u4e2d\u63d0\u53ca\u3002\u6240\u4ee5\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\uff01 Important \u6587\u672b\u53c2\u8003\u6587\u732e\u4e2d\u6709\u76f8\u5173\u8bba\u6587\u548c\u5b9e\u73b0\u539f\u7406 \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u573a\u666f\uff0c\u5e76\u5728\u573a\u666f\u4e2d\u7684\u67d0\u4e2a\u4f4d\u7f6e\u653e\u7f6e\u4e00\u4e2a\u77e9\u5f62\u3002\u6211\u4eec\u5e0c\u671b\u8fd9\u4e2a\u77e9\u5f62\u8868\u793a\u4e00\u4e2a\u5149\u6e90\u5e76\u53d1\u5c04\u5149\u7ebf\u3002\u9664\u6b64\u4e4b\u5916\u8fd8\u6709\u7269\u7406\u6e32\u67d3\u4e2d\u7684BRDF\u51fd\u6570\uff0c\u5b83\u63cf\u8ff0\u4e86\u573a\u666f\u4e2d\u8868\u9762\u5982\u4f55\u6563\u5c04\u5149\u7ebf\uff08\u6216\u8005\u51fa\u5c04\u5149\u548c\u6bcf\u6761\u5165\u5c04\u5149\u95f4\u7684\u6bd4\u4f8b\uff09\u3002 \u5728\u6e32\u67d3\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u89e3\u51b3BRDF\u7684\u79ef\u5206\uff0c\u79ef\u5206\u8303\u56f4\u662f\u81ea\u53d1\u5149\u591a\u9762\u4f53\uff08\u533a\u57df\u5149\u6e90\uff09\u5728\u5355\u4f4d\u534a\u7403\u9762\u56f4\u7ed5\u7740\u7740\u8272\u70b9\u5f62\u6210\u7684\u7acb\u4f53\u89d2\uff0c\u4ee5\u8ba1\u7b97\u51fa\u5c04 \u8f90\u7167\u5ea6 (Irradiance)\u3002\u8fd9\u4e2a\u51fa\u5c04\u8f90\u7167\u5ea6\u5c06\u53cd\u5c04\u56de\u6444\u50cf\u673a\uff0c\u4ece\u800c\u5b8c\u6210\u6e32\u67d3\u3002 \u5728\u8bba\u6587\u4e2d\u63cf\u8ff0\u4e86\u5982\u4f55\u5c06\u7ebf\u6027\u53d8\u6362\u4f5c\u7528\u4e8e\u7403\u9762\u5206\u5e03\u51fd\u6570\uff0c\u4ece\u800c\u6784\u9020\u4e00\u7cfb\u5217\u53ef\u4ee5\u62df\u5408\u4e0d\u540c\u6750\u8d28\u548c\u6444\u50cf\u673a\u89c6\u89d2\u4e0bBRDF\u7279\u6027\u7684\u7403\u9762\u5206\u5e03\u51fd\u6570\u3002\u8fd9\u4e9b\u7279\u6027\u5728Eric Heitz\u7684PPT[3]\u4e2d\u6709\u5f88\u597d\u7684\u8868\u73b0\u3002\u4f46\u7531\u4e8e\u672c\u6559\u7a0b\u4e3b\u8981\u9762\u5411\u7a0b\u5e8f\u7684\u5b9e\u73b0\uff0c\u6240\u4ee5\u4e0d\u4f1a\u5728\u8fd9\u91cc\u753b\u592a\u591a\u7bc7\u5e45\u8bb2\u89e3\u7406\u8bba\u63a8\u5bfc\u3002\u8fd9\u4e9b\u7ecf\u8fc7\u4e0d\u540c\u77e9\u9635\u53d8\u6362\u51fa\u7684\u5206\u5e03\u51fd\u6570\u88ab\u7edf\u79f0\u4e3a\u201d\u7ebf\u6027\u53d8\u6362\u4f59\u5f26\u5206\u5e03\u96c6\u201d(Linearly Transformed Cosines)\uff0c\u4e4b\u6240\u4ee5\u662f\u201c\u4f59\u5f26\u201d\u662f\u56e0\u4e3a\u6240\u6709\u7684\u5206\u5e03\u51fd\u6570\u662f\u6765\u81ea\u4e00\u4e2a\u53d8\u6362\u540e\u7684\u53d7\u7ea6\u4f59\u5f26\u5206\u5e03\u51fd\u6570\uff0c\u540c\u65f6\u5177\u6709\u8fd1\u4f3c\u7684BRDF\u7684\u91cd\u8981\u7279\u6027\u3002\u201d\u53d7\u7ea6\u201d\u6307\u7684\u662f\u4f59\u5f26\u5206\u5e03\u51fd\u6570\uff08\u6216Lambertian\u5206\u5e03\uff09\u4ec5\u8003\u8651\u6b63\u534a\u7403\u9762\u3002\u8fd9\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u5355\u4f4d\u7403\u9762\u56fa\u4f53\u89d2\u5ea6\u6d4b\u91cf\u503c\u5728\u533a\u95f4[0, 4\u03c0]\u5185\uff0c\u800c\u5149\u6e90\u53ef\u80fd\u6c38\u8fdc\u4e0d\u4f1a\u7167\u4eae\u6c34\u5e73\u9762\u4ee5\u4e0b\u7684\u533a\u57df\uff1b\u56e0\u6b64\u6211\u4eec\u5c06\u4f59\u5f26\u5206\u5e03\u51fd\u6570\u7ea6\u675f\u5230\u6b63\u534a\u7403\u9762\uff08\u4e0a\u534a\u7403\uff09\uff08\u4ee5\u5165\u5c04\u7740\u8272\u70b9\u7684\u8868\u9762\u6cd5\u7ebf\u4e3a\u4e2d\u5fc3\uff09\u3002 \u5728\u7269\u7406\u6e32\u67d3(PBR)\u4e2d\u6211\u4eec\u5b66\u5230\uff0cGGX\u5fae\u8868\u9762\u6a21\u578b\u4e2d\u7684BRDF\u5206\u5e03\u51fd\u6570\u5177\u6709\u590d\u6742\u7684\u5f62\u72b6\u3002\u6bd4\u5982\u5728\u63a5\u8fd1\u5165\u5c04\u89d2\u5ea6\u5904\u7684\u5404\u5411\u5f02\u6027\u62c9\u4f38\u3001\u504f\u659c\u5ea6\u548c\u4e0d\u540c\u7a0b\u5ea6\u7684\u6750\u8d28\u7c97\u7cd9\u5ea6\u7b49\u7279\u6027\u3002\u6b63\u662f\u7531\u4e8e\u8fd9\u4e9b\u7279\u6027\uff0cBRDF\u80fd\u591f\u4ea7\u751f\u5199\u5b9e\u7684\u6e32\u67d3\u6548\u679c\u3002\u6240\u4ee5\u5982\u679c\u6211\u4eec\u80fd\u591f\u8bbe\u8ba1\u4e00\u4e2a\u7ebf\u6027\u53d8\u6362\uff0c\u901a\u8fc7\u77e9\u9635\u4e58\u6cd5\u5c06\u8fd9\u4e9b\u7279\u6027\u6dfb\u52a0\u5230\u53d7\u7ea6\u4f59\u5f26\u5206\u5e03\u4e2d\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u83b7\u5f97\u5ab2\u7f8eBRDF\u7684\u6548\u679c\u3002\u8bba\u6587[1]\u4e2d\u63cf\u8ff0\u4e86\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u4f59\u5f26\u5206\u5e03\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u6211\u4eec\u5bf9\u5176\u79ef\u5206\u6709\u4e00\u4e2a\u95ed\u5408\u5f62\u5f0f\uff08Closed-Form\uff09\u7684\u8868\u793a\uff1a D_o(\u03c9_o)=\\frac1\u03c0\\cos\u03b8_o \u603b\u7ed3\u4e00\u4e0b\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\uff1a\u6784\u5efa\u4e00\u4e2a\u4e09\u4e58\u4e09\u7ebf\u6027\u53d8\u6362\u77e9\u9635\u5e76\u5c06\u5176\u5e94\u7528\u5728\u53d7\u7ea6\u4f59\u5f26\u5206\u5e03\u51fd\u6570\u4e0a\uff0c\u4ece\u800c\u8fd1\u4f3c\u67d0\u4e00\u6761\u4ef6\u4e0bBRDF\u5206\u5e03\u51fd\u6570\u3002\u7136\u540e\u5728\u533a\u57df\u5149\u6240\u5728\u7684\u7acb\u4f53\u89d2\u4e0a\u8fdb\u884c\u8ba1\u7b97\u5e76\u83b7\u5f97\u6e32\u67d3\u7ed3\u679c\u3002 \u5728\u7ebf\u6027\u4ee3\u6570\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e24\u4e2a\u77e9\u9635\u4e2d\u5e94\u7528\u4e58\u6cd5\uff0c\u540c\u6837\u4e5f\u53ef\u4ee5\u8fdb\u884c\u9006\u8fd0\u7b97\uff1a A\u00d7B=C~~~~~~~~~~\u21d4~~~~~~~~~~C\u00d7B^{\u22121}=A \u5982\u679c\u6211\u4eec\u4e3a\u4e86\u5f97\u5230\u4e86BRDF\u5c06\u77e9\u9635M\u5e94\u7528\u4e8e\u4f59\u5f26\u5206\u5e03\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9006\u8fd0\u7b97\uff0c\u4ece\u800c\u4f18\u96c5\u5730\u89e3\u51b3\u7acb\u4f53\u89d2\u7684\u7403\u9762\u79ef\u5206\u3002\u4e0b\u9762\u7684\u793a\u610f\u56fe\u5c55\u793a\u4e86\u8fd9\u4e2a\u601d\u60f3\u3002\u6b63\u5982\u8bba\u6587\u4f5c\u8005\u5efa\u8bae\u7684\u90a3\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u53d8\u6362\u56de\u521d\u59cb\u7684\u4f59\u5f26\u7a7a\u95f4\u3002 \u53cd\u5411\u53d8\u6362\u56de\u4f59\u5f26\u7a7a\u95f4\uff0c\u4f7f\u7528\u9006\u7ebf\u6027\u53d8\u6362\u77e9\u9635[2]","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"08%20Guest%20Articles/2022/03%20Area%20Lights/#_4","text":"\u7ebf\u6027\u53d8\u6362\u77e9\u9635M\u9700\u8981\u80fd\u591f\u8868\u793aBRDF\u7684\u7279\u6027\uff0c\u6bd4\u5982\u5728\u4e0d\u540c\u89c2\u5bdf\u89d2\u5ea6\u548c\u6750\u8d28\u7c97\u7cd9\u5ea6\u4e0a\u77e9\u9635M\u9700\u8981\u8fdb\u884c\u53c2\u6570\u5316\u3002\u5982\u4e0b\u56fe\uff1a \u901a\u8fc7\u77e9\u9635\u8fde\u4e58\u6784\u5efa\u7ebf\u6027\u53d8\u6362\uff0c\u4ece\u800c\u83b7\u5f97\u60f3\u8981\u7684BRDF\u7279\u6027[2] \u7c97\u7cd9\u5ea6 (roughness)\u76f4\u63a5\u4ece\u6750\u8d28\u7684\u7c97\u7cd9\u5ea6\u7eb9\u7406\u4e2d\u83b7\u53d6\uff0c \u5404\u5411\u5f02\u6027 (anisotropy)\u548c \u504f\u659c\u5ea6 (skewness)\u6765\u81ea\u4e8e\u6444\u50cf\u673a\u548c\u8868\u9762\u6cd5\u7ebf\u7684\u5939\u89d2\uff0c\u4ece\u800c\u5b9e\u73b0\u903c\u771f\u7684\u6e32\u67d3\u6548\u679c\u3002\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u548c\u8981\u8868\u793a\u7684\u7279\u5b9aBRDF\u6a21\u578b\u9009\u62e9\u4efb\u610f\u7a0b\u5ea6\u7684\u53d8\u6362\u3002\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u77e9\u9635\u6765\u8fd1\u4f3cGGX\u5fae\u8868\u9762\u6a21\u578b\u3002\u5982\u524d\u6587\u6240\u8ff0\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u4e2a\u7c97\u7cd9\u5ea6\u548c\u89c2\u5bdf\u89d2\u5ea6\u7684\u7ec4\u5408\u8ba1\u7b97\u4e00\u4e2a\u77e9\u9635M\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5bf9\u77e9\u9635\u8fdb\u884c\u591a\u6b21\u91c7\u6837\uff0c\u4ece\u800c\u6700\u5c0f\u5316\u4e0e\u76ee\u6807BRDF\u7684\u8bef\u5dee\u3002\u663e\u7136\uff0c\u8fd9\u5bf9\u4e8e\u5b9e\u65f6\u6e32\u67d3\u6765\u8bf4\u662f\u4e0d\u53ef\u884c\u7684\uff0c\u56e0\u6b64\u9700\u8981\u9884\u5148\u8ba1\u7b97\u5728\u4e0d\u540c\u7c97\u7cd9\u5ea6/\u89c2\u5bdf\u89d2\u5ea6\u4e0b\u7684\u77e9\u9635M\u3002\u7531\u4e8e\u77e9\u9635M\u53ca\u5176\u9006\u77e9\u9635\u90fd\u662f\u7a00\u758f\u77e9\u9635\uff0c\u53ea\u67095\u4e2a\u975e\u96f6\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5f52\u4e00\u5316\u6765\u5c06\u9006\u77e9\u9635\u5b58\u50a8\u5728\u4e00\u4e2a4\u7ef4\u5411\u91cf\u4e2d\u3002\u8fd9\u5728\u5b9e\u8df5\u4e2d\u6548\u679c\u5f88\u597d\uff0c\u5e76\u4e14\u53ef\u4ee5\u5c06\u77e9\u9635\u4fe1\u606f\u4ee52D\u7eb9\u7406\u7684\u5f62\u5f0f\u4f20\u5165\u5230shader\u4e2d\u53bb\u67e5\u8868\u3002\u672c\u6559\u7a0b\u4e2d\u6211\u4eec\u9009\u62e9\u4e00\u4e2a64x64\u7684\u7eb9\u7406\u6765\u8282\u7701\u663e\u5b58\u3002","title":"\u6784\u5efa\u53d8\u6362\u77e9\u9635"},{"location":"08%20Guest%20Articles/2022/03%20Area%20Lights/#_5","text":"\u524d\u6587\u6211\u4eec\u63d0\u5230\uff0c\u8ba1\u7b97\u533a\u57df\u5149\u65f6\u6211\u4eec\u9700\u8981\u5728\u533a\u57df\u5149\u6240\u5728\u7acb\u4f53\u89d2\u5185\u79ef\u5206 \u8f90\u5c04\u5ea6 (Radiance)\uff0c\u4f46\u662f\u5728\u5b9e\u9645\u64cd\u4f5c\u4e2d\u6211\u4eec\u4ec5\u9700\u8981\u6cbf\u591a\u9762\u4f53\u5149\u6e90\u7684\u8fb9\u7f18\u8fdb\u884c\u79ef\u5206\u3002\u8fd9\u4e2a\u79ef\u5206\u7684\u7b49\u4ef7\u8f6c\u6362\u8fc7\u7a0b\u5341\u5206\u795e\u5947\uff0c\u4e0d\u8fc7\u7531\u4e8e\u6559\u7a0b\u7bc7\u5e45\u7684\u539f\u56e0\u6211\u4ec5\u5f15\u7528\u4e00\u53e5ppt\u4e2d\u7684\u539f\u8bdd\uff0c\u5e0c\u671b\u8bfb\u8005\u8fdb\u4e00\u6b65\u7684\u4e86\u89e3\uff1a \u201c\u5176\u4e2d\u4e00\u79cd\u7406\u89e3\u65b9\u6cd5\u662f\u65af\u6258\u514b\u65af\u5b9a\u7406(Stoke\u2019s theorem)\u7684\u5e94\u7528\uff0c\u4f60\u53ef\u80fd\u5728\u5176\u4ed6\u9886\u57df\u9047\u5230\u8fc7\uff0c\u6bd4\u5982\u6d41\u4f53\u6a21\u62df\u3002\u201d \u65af\u6258\u514b\u65af\u5b9a\u7406 \u8bb2\u7684\u662f\uff1a\u5728\u5411\u91cf\u573a\u4e2d\uff0c\u573a\u4e2d\u4e00\u4e2a\u95ed\u5408\u66f2\u7ebf\u4e0a\u7684\u7ebf\u79ef\u5206\u7b49\u4e8e\u5176\u6240\u56f4\u9762\u79ef\u4e2d \u6563\u5ea6 (Curl)\u7684 \u901a\u91cf (Flux)\u4e4b\u548c[11]\u3002\u540c\u7406\u5728\u5bf9\u533a\u57df\u5149\u5149\u6e90\u7684\u79ef\u5206\u4e2d\uff0c\u7ed9\u5b9a\u5149\u6e90\u4e2d\u4efb\u610f\u4e24\u4e2a\u9876\u70b9v1\u548cv2\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u4e0b\u5f0f\u8fdb\u884c\u79ef\u5206\u6c42\u548c\uff1a \\arccos(v_1\u22c5v_2)\\frac{v_1\u00d7v_2}{\\|v_1\u00d7v_2\\|}\u22c5n \u5bf9\u4e8e\u5177\u6709N\u4e2a\u9876\u70b9\u7684\u6574\u4e2a\u533a\u57df\u5149\u5149\u6e90\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u4e0a\u5f0f\u5c06\u5168\u90e8\u8fb9\u7f18\u6c42\u548c\u6765\u51c6\u786e\u5730\u8ba1\u7b97\u51fa\u8be5\u533a\u57df\u5149\u6240\u6784\u6210\u7684\u7acb\u4f53\u89d2\uff1a \u222b_\u03a9\u2248\\frac1{2\u03c0}\u2211_i\\frac1N[\\arccos(v_1\u22c5v_2)\\frac{v_1\u00d7v_2}{\\|v_1\u00d7v_2\\|}\u22c5n] \u8bd1\u6ce8 \u5177\u4f53\u516c\u5f0f\u63a8\u5bfc\u53ef\u4ee5\u53c2\u8003\u6587\u672b\u5ef6\u4f38\u9605\u8bfb\u4e2d\u7684\u4e2d\u6587\u7b14\u8bb0[14] \u4e0b\u56fe\u4e2d\uff0c\u5411\u91cfv1\u548cv2\u662f\u4ece\u7740\u8272\u70b9\u5230\u591a\u9762\u4f53\u5149\u6e90\u7684\u9876\u70b9\u7684\u65b9\u5411\u5411\u91cf\uff0c\u201cacos(v1\u00b7v2)\u201d\u662f\u6295\u5f71\u5230\u4f4d\u4e8e\u7740\u8272\u70b9\u9644\u8fd1\u7684\u5355\u4f4d\u7403\u4f53\u4e0a\u7684\u591a\u9762\u4f53\u5f27\u957f\uff08\u4ee5\u5f27\u5ea6\u4e3a\u5355\u4f4d\uff09\uff0c\u5411\u91cfu\u4e3a\u5f52\u4e00\u5316\u53c9\u79ef\u6240\u4ea7\u751f\u7684\u5782\u76f4\u4e8ev1\u548cv2\u7684\u5355\u4f4d\u5411\u91cf\u3002\u6211\u4eec\u7528\u7740\u8272\u70b9\u7684\u6cd5\u5411\u91cf\u548c\u5411\u91cfu\uff0c\u5c06\u5149\u6e90\u6295\u5f71\u5230\u4e0e\u7740\u8272\u70b9\u76f8\u5207\u7684\u5e73\u9762\u4e0a\uff0c\u8be5\u5e73\u9762\u7684\u6cd5\u5411\u91cf\u4e3an\u3002 \u5e94\u7528\u65af\u6258\u514b\u65af\u5b9a\u7406\uff0c\u901a\u8fc7\u8fb9\u7f18\u79ef\u5206\u6765\u8ba1\u7b97\u8f6c\u6362\u540e\u7684\u5149\u6e90\u79ef\u5206[2] \u9664\u6b64\u4e4b\u5916\uff0c\u6839\u636ePPT[2]\u4e2d\u6240\u63cf\u8ff0\u7684\uff0c\u8ba1\u7b97\u53cd\u4f59\u5f26\u51fd\u6570\u65f6\u9020\u6210\u7684\u7cbe\u5ea6\u4e22\u5931\u4f1a\u5bfc\u81f4\u660e\u663e\u7684\u7455\u75b5\u3002\u8bba\u6587\u4e2d\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u901a\u8fc7\u4e00\u4e2a\u4e09\u6b21\u51fd\u6570\u6765\u8fd1\u4f3c\u53cd\u4f59\u5f26\u51fd\u6570\u3002\u4e0d\u8fc7\u672c\u6559\u7a0b\u4e2d\u6240\u91c7\u7528\u7684\u62df\u5408\u51fd\u6570\u8ddfppt[2]\u6240\u5199\u7684\u6709\u6240\u4e0d\u540c\uff0c\u8fd9\u4e2a\u7248\u672c\u7684\u62df\u5408\u6548\u679c\u66f4\u597d\u3002\u5173\u4e8e\u8fb9\u7f18\u79ef\u5206\u7684\u4ee3\u7801\u8bf7\u53c2\u8003\u5982\u4e0b\uff1a float IntegrateEdge(vec3 v1, vec3 v2, vec3 N) { float x = dot(v1, v2); float y = abs(x); float a = 0.8543985 + (0.4965155 + 0.0145206*y)*y; float b = 3.4175940 + (4.1616724 + y)*y; float v = a / b; float theta_sintheta = (x > 0.0) ? v : 0.5*inversesqrt(max(1.0 - x*x, 1e-7)) - v; return dot(cross(v1, v2)*theta_sintheta, N); }","title":"\u8ba1\u7b97\u79ef\u5206"},{"location":"08%20Guest%20Articles/2022/03%20Area%20Lights/#_6","text":"\u4e0a\u8ff0\u7684 IntegrateEdge \u51fd\u6570\u867d\u7136\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u6709\u5f85\u63d0\u5347\u3002\u4e3a\u4e86\u83b7\u5f97\u6b63\u786e\u7684\u8f90\u7167\u5ea6\uff0c\u6211\u4eec\u9700\u8981\u5c06\u53d8\u6362\u540e\u7684\u4f59\u5f26\u5206\u5e03\u7ea6\u675f\u5230\u4e0a\u534a\u7403\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4e5f\u53ef\u4ee5\u88ab\u79f0\u4e3a\u201c\u6c34\u5e73\u9762\u88c1\u526a\u201d\uff0c\u6d89\u53ca\u5230\u5f88\u591a\u5206\u652f\u3002\u5982\u4e0b\u56fe\uff1a \u5982\u679c\u5149\u6e90\u591a\u9762\u4f53\u5728\u6c34\u5e73\u9762\uff08\u76f8\u5bf9\u4e8e\u7269\u4f53\u8868\u9762\uff09\u4ee5\u4e0b\uff0c\u6216\u8005\u90e8\u5206\u5728\u6c34\u5e73\u9762\u4ee5\u4e0b\uff0c\u8fd9\u4e2a\u591a\u9762\u4f53\u5219\u9700\u8981\u88ab\u4fee\u6b63\uff08\u88c1\u526a\uff09\u5230\u4e0a\u534a\u7403\u9762\u3002\u7406\u8bba\u4e0a\u6765\u8bf4\uff0c\u4fee\u6b63\u65b9\u6cd5\u662f\u5c06\u5b58\u5728\u95ee\u9898\u7684\u6bcf\u6761\u8fb9\u7684\u8f83\u4f4e\u7684\u9876\u70b9\u4e0a\u79fb\uff0c\u4f7f\u5176\u4e0d\u518d\u4f4d\u4e8e\u6c34\u5e73\u9762\u4ee5\u4e0b\u3002\u5982\u679c\u4e00\u6761\u8fb9\u5b8c\u5168\u4f4d\u4e8e\u6c34\u5e73\u9762\u4ee5\u4e0b\uff0c\u5219\u9700\u8981\u5c06\u5176\u6574\u4f53\u4e0a\u79fb\u3002\u6700\u540e\u4ee5\u4e0a\u5224\u65ad\u6761\u4ef6\u4e0b\uff0c\u8ba1\u7b97\u6240\u5f97\u5230\u7684\u8fb9\u7f18\u79ef\u5206\u5c06\u5c0f\u4e8e\u4fee\u6b63\u524d\u7684\u503c\uff08\u751a\u81f3\u7b49\u4e8e\u96f6\uff09\uff0c\u4ece\u800c\u51cf\u5c11\u51fa\u5c04\u8f90\u7167\u5ea6\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u5bf9\u6240\u6709\u8fb9\u7684\u6bcf\u4e2a\u9876\u70b9\u8fdb\u884c\u4e0a\u8ff0\u5224\u65ad\uff0cshader\u4e2d\u4f1a\u589e\u52a0\u8bb8\u591a\u5206\u652f\u8bed\u53e5\uff08if-else\uff09\u8fdb\u800c\u5f71\u54cd\u6e32\u67d3\u6027\u80fd\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4ece\u516c\u5f0f\u5165\u624b\uff0c\u7ee7\u7eed\u4fee\u6539\u8fb9\u7f18\u79ef\u5206\u7684\u516c\u5f0f\uff1a\u5220\u9664\u4e0e\u8868\u9762\u6cd5\u5411\u91cf\u7684\u70b9\u79ef\uff08\u4ece\u800c\u4e0d\u6295\u5f71\u5230\u5e73\u9762\u4e0a\uff09\u3002\u4fee\u6b63\u540e\u7684\u516c\u5f0f\u5982\u4e0b\uff1a \\arccos(v_1\u22c5v_2)\\frac{v_1\u00d7v_2}{\\|v_1\u00d7v_2\\|} \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u73b0\u5728\u79ef\u5206\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u5411\u91cf\uff08\u4e0e\u6cd5\u5411\u91cf\u70b9\u4e58\u7684\u524d\u4e00\u6b65\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u5411\u91cf\u5f62\u5f0f\u56e0\u5b50\u6216\u5411\u91cf\u8f90\u7167\u5ea6\u3002\u6211\u4eec\u5c06\u5176\u79f0\u4e3a\u5411\u91cfF\uff0c\u5411\u91cfF\u6709\u4e00\u4e2a\u6bd4\u8f83\u660e\u663e\u7684\u7279\u6027\uff1a\u5411\u91cfF\u7684\u6a21\u957f\u4e3a\u8be5\u5149\u6e90\u5728F\u65b9\u5411\u4e0a\u7684\u8f90\u7167\u5ea6\u7684\u5927\u5c0f[2]\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5047\u60f3\u91ca\u653e\u8f90\u7167\u5ea6\u5927\u5c0f\u4e3a||F||\u7684\u5149\u6e90\u6765\u81ea\u4e00\u4e2a\u7403\u4f53\uff08Proxy Sphere\uff09\uff0c\u901a\u8fc7\u5411\u91cfF\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u8be5\u5706\u9762\u76f8\u5bf9\u4f59\u5f26\u5206\u5e03\u51fd\u6570\u7684\u5f20\u89d2\u548c\u503e\u659c\u5ea6\u3002\u516c\u5f0f\u5982\u4e0b\uff1a \\vec F=\\arccos(v_1\u22c5v_2)\\frac{v_1\u00d7v_2}{\\|v_1\u00d7v_2\\|}\\\\ \u8f90\u7167\u5ea6\u5927\u5c0f=\\|\\vec F\\|\\\\ \u5f20\u89d2=\\arcsin\\sqrt{\\|\\vec F\\|}\\\\ \u503e\u659c\u5ea6=n\\cdot \\frac{\\vec F}{\\|\\vec F\\|} \u901a\u8fc7\u6784\u9020 \u5047\u60f3\u7403\u4f53 (Proxy Sphere)\u6211\u4eec\u53ef\u4ee5\u5b8c\u7f8e\u89e3\u51b3\u4e0a\u534a\u7403\u9762\u4fee\u6b63\u7684\u95ee\u9898\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u901a\u8fc7\u9884\u8ba1\u7b97\u4fee\u6b63\u540e\u7684\u8f90\u7167\u5ea6\u548c\u4fee\u6b63\u524d\u7684\u6bd4\u4f8b\u4e0e\u5176\u5f20\u89d2\u548c\u503e\u659c\u5ea6\u7684\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u7b2c\u4e8c\u5f20\u7eb9\u7406LUT\u3002\u5728\u6e32\u67d3\u8fc7\u7a0b\u4e2d\u901a\u8fc7\u67e5\u8868\u53ef\u4ee5\u76f4\u63a5\u83b7\u5f97\u8fd9\u4e00\u6bd4\u4f8b\u5173\u7cfb\uff0c\u4ece\u800c\u9ad8\u6548\u5730\u8fd1\u4f3c\u8ba1\u7b97\u6b63\u534a\u7403\u4fee\u6b63\u3002\u66f4\u591a\u7ec6\u8282\u8be6\u89c1[1] [2]\u3002 Important \u5411\u91cfF\u7684\u6a21\u957f\u8868\u793a\u7740\u8272\u70b9\u63a5\u53d7\u7684\u603b\u8f90\u7167\u5ea6\uff0c\u4ece\u9762\u79efA\u4f20\u8f93\u5230\u9762\u79efB\u3002\u8fd9\u4e00\u70b9\u7c7b\u4f3c\u4e8e\u6211\u4eec\u5c06\u591a\u9762\u4f53\u5149\u6e90\u7684\u8f90\u7167\u5ea6\u8f6c\u6362\u4e3a\u591a\u9762\u4f53\u5728\u7ecf\u8fc7\u534a\u7403\u9762\u4e0a\u7acb\u4f53\u89d2\u6240\u7684\u8f90\u7167\u5ea6\u7684\u8fc7\u7a0b\u3002\u4e0d\u8fc7\u7269\u4f53\u8868\u9762\u63a5\u6536\u7684\u8f90\u7167\u5ea6\u53d7\u6b63\u534a\u7403\u4fee\u6b63\u548c\u5149\u6e90\u503e\u659c\u5ea6\u7684\u5f71\u54cd\uff0c\u8fd9\u4e2a\u6bd4\u4f8b\u5173\u7cfb\u88ab\u5b58\u50a8\u5728\u4e86\u4e00\u4e2a64\u00d764\u7684LUT\u4e2d\uff0c\u6a2a\u7eb5\u5750\u6807\u5206\u522b\u4e3a\u5047\u60f3\u7403\u4f53\u7684\u5f20\u89d2\u548c\u503e\u659c\u5ea6\u3002\u4e0a\u6587\u4e2d\u4e4b\u6240\u4ee5\u7528\u201c\u5411\u91cf\u8f90\u7167\u5ea6\u201d\u4f5c\u4e3a\u5411\u91cfF\u7684\u540d\u8bcd\uff0c\u662f\u56e0\u4e3a\u4f5c\u8005\u60f3\u5f3a\u8c03\u5165\u5c04\u5149\u7684\u80fd\u91cf\u3002\u5bf9\u4e8e\u5411\u91cfF\u66f4\u5b8c\u5907\u7684\u8868\u8ff0\u8be6\u89c1[13]","title":"\u5c06\u591a\u9762\u4f53\u88c1\u526a\u5230\u6b63\u534a\u7403\u9762"},{"location":"08%20Guest%20Articles/2022/03%20Area%20Lights/#_7","text":"\u606d\u559c\u5927\u5bb6\u5df2\u7ecf\u5b8c\u6210\u4e86\u6f2b\u957f\u7684\u7406\u8bba\u73af\u8282\uff01\u5982\u679c\u6ca1\u6709\u5b8c\u5168\u7406\u89e3\u4e5f\u6ca1\u5173\u7cfb\uff0c\u5982\u4e0b\u7684\u4ee3\u7801\u76f4\u63a5\u590d\u5236\u7c98\u8d34\u4e5f\u53ef\u4ee5\u5feb\u901f\u8ba9\u4f60\u5b9e\u73b0\u533a\u57df\u5149\u3002\uff08\u5982\u679c\u4f60\u60f3\u7ee7\u7eed\u6311\u6218\u7406\u8bba\u63a8\u5bfc\uff0c\u53ef\u4ee5\u770b\u4e00\u770b\u6587\u672b\u7684\u53c2\u8003\u8d44\u6599\uff09\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u6574\u70b9\u6709\u610f\u601d\u7684\u3002\u7b2c\u4e00\u6b65\u662f\u8f7d\u5165\u524d\u6587\u63d0\u5230\u7684\u90a3\u4e24\u4e2aLUT\uff0c\u4f5c\u4e3a2D\u7eb9\u7406\u5b58\u50a8\u5728GPU\u91cc\u3002\u5728\u8f7d\u5165\u7684\u8fc7\u7a0b\u4e2d\u786e\u4fdd\u5f00\u542f\u53cc\u7ebf\u6027\u63d2\u503c\u4ee5\u4fdd\u8bc1\u5e73\u6ed1\u91c7\u6837\uff0c\u7136\u540e\u7ea6\u675f\u4ee5\u4fdd\u8bc1\u8bfb\u53d6\u7684\u65f6\u5019\u4e0d\u4f1a\u8d85\u8fc7LUT\u7684\u8303\u56f4\u3002 #include \"ltc_matrix.hpp\" // \u5305\u542b\u4e86float\u6570\u7ec4 LTC1 \u548c LTC2 unsigned int loadMTexture(float* matrixTable) { unsigned int texture = 0; glGenTextures(1, &texture); glBindTexture(GL_TEXTURE_2D, texture); glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, 64, 64, 0, GL_RGBA, GL_FLOAT, matrixTable); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR); glBindTexture(GL_TEXTURE_2D, 0); return texture; } unsigned int m1 = loadMTexture(LTC1); unsigned int m2 = loadMTexture(LTC2); \u4e0a\u8ff0\u51fd\u6570\u6240\u9700\u8981\u7684\u9006\u53d8\u6362\u77e9\u9635\u4f5c\u8005\u5df2\u7ecf\u5f88\u53cb\u597d\u5730\u4e3a\u6211\u4eec\u9884\u5148\u8ba1\u7b97\u4e86\u5b83\u4eec\uff0c\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230C++\u5934\u6587\u4ef6\uff0c\u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4ece[4]\u4e0b\u8f7d\u6e90\u4ee3\u7801\u6765\u751f\u6210\u5b83\u4eec\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u5b83\u4eec\u4f5c\u4e3aDXT10\u538b\u7f29\u56fe\u50cf\uff08.dds\uff09\u52a0\u8f7d\u3002\u6559\u7a0b\u4f5c\u8005\u9009\u62e9\u4e86C++\u5934\u6587\u4ef6\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u56fe\u50cf\u52a0\u8f7d\u5e93\u4e0d\u652f\u6301DXT10\u538b\u7f29\uff08\u6587\u4ef6\u5934\u6ca1\u6709\u6807\u51c6\u5316\uff01\uff09\u3002\u867d\u7136\u5728\u5b66\u4e60\u65f6\u4f7f\u7528\u5934\u6587\u4ef6\u5b58\u50a8\u6570\u636e\u5f88\u65b9\u4fbf\uff0c\u4f46\u5728\u53d1\u5e03\u6e38\u620f\u65f6\u6700\u597d\u4f7f\u7528.dds\u56fe\u50cf\u3002 \u7b2c\u4e00\u4e2aLUT\u7eb9\u7406\u5305\u542b\u5982\u524d\u6587\u6240\u8ff0\u7684\u9006\u8f6c\u6362\u77e9\u9635\uff0c\u800c\u7b2c\u4e8c\u4e2aLUT\u7eb9\u7406\u5305\u542bFresnel90\u3001\u6c34\u5e73\u526a\u88c1\u56e0\u5b50\u548c\u51e0\u4f55\u8870\u51cf\u7684Smith\u7cfb\u6570\uff08\u603b\u51713\u4e2a\u503c\uff09\u3002\u6211\u4eec\u5728\u6e32\u67d3\u65f6\u5c06\u8fd9\u4e24\u4e2a\u7eb9\u7406\u7ed1\u5b9a\u5230Shader\u4e2d\uff1a glActiveTexture(GL_TEXTURE0); glBindTexture(GL_TEXTURE_2D, m1); glActiveTexture(GL_TEXTURE1); glBindTexture(GL_TEXTURE_2D, m2); \u9664\u6b64\u4e4b\u5916\u6211\u4eec\u8fd8\u9700\u8981\u521b\u5efa\u4e00\u4e2a \u9876\u70b9\u7f13\u51b2 (Vertex Buffer)\u6765\u5b58\u50a8\u591a\u9762\u4f53\u5149\u6e90\u7684\u591a\u9762\u4f53\u3002\u4e3a\u4e86\u7b80\u5316\u548c\u6280\u672f\u6f14\u793a\uff0c\u573a\u666f\u6700\u597d\u53ea\u6709\u4e00\u4e2a\u6c34\u5e73\u7684\u5730\u9762\u7ec4\u6210\uff0c\u706f\u5149\u7684\u8bdd\u6700\u597d\u662f\u77e9\u5f62\u3002\u5177\u4f53\u7684C++\u5b9e\u73b0\u4ee3\u7801\u8be6\u89c1 \u8fd9\u91cc \u3002","title":"\u6574\u4f53\u5b9e\u73b0"},{"location":"08%20Guest%20Articles/2022/03%20Area%20Lights/#shader","text":"\u7247\u5143\u7740\u8272\u5668 (Fragment Shader)\u662f\u91cd\u4e2d\u4e4b\u91cd\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u91c7\u6837LUT\u6765\u6784\u9020\u9006\u77e9\u9635\uff0c\u5e76\u68c0\u7d22\u51e0\u4f55\u8870\u51cf\u7cfb\u6570\u3002\u6211\u4eec\u8fd8\u9700\u8981\u5728\u7269\u4f53\u8868\u9762\u7684\u5207\u7a7a\u95f4\u4e2d\u6784\u9020\u4e86\u6b63\u4ea4\u53d8\u6362\u77e9\u9635\uff0c\u5e76\u8ba1\u7b97\u8fb9\u7f18\u79ef\u5206\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u53c2\u6570\u8f93\u5165\u548c\u5e38\u89c4\u6e32\u67d3\u7684\u5fc5\u8981\u73af\u8282\uff0c\u6bd4\u5982\u6750\u6599\u548c\u5149\u6e90\u7684\u4fe1\u606f\u3002\u5b8c\u6574\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a #version 330 core out vec4 fragColor; in vec3 worldPosition; in vec3 worldNormal; in vec2 texcoord; struct Light { float intensity; vec3 color; vec3 points[4]; bool twoSided; }; uniform Light areaLight; uniform vec3 areaLightTranslate; struct Material { sampler2D diffuse; // \u7eb9\u7406\u6620\u5c04 vec4 albedoRoughness; // (x,y,z) = \u989c\u8272, w = \u7c97\u7cd9\u5ea6 }; uniform Material material; uniform vec3 viewPosition; uniform sampler2D LTC1; // \u7528\u4e8e\u6784\u5efa\u9006\u53d8\u6362\u77e9\u9635M uniform sampler2D LTC2; // GGX\u9884\u79ef\u5206, \u83f2\u6d85\u5c14, 0(unused), \u51e0\u4f55\u8870\u51cf const float LUT_SIZE = 64.0; // LUT\u5927\u5c0f const float LUT_SCALE = (LUT_SIZE - 1.0)/LUT_SIZE; const float LUT_BIAS = 0.5/LUT_SIZE; \u53d8\u91cf areaLightTranslate \u662f\u4f5c\u8005\u7528\u6765\u79fb\u52a8\u5149\u6e90\u7684\u53c2\u6570\uff0c\u4f5c\u4e3a\u6f14\u793a\u5e76\u4e0d\u4e00\u5b9a\u9700\u8981\u3002\u7136\u540e\u90a3\u4e9b\u5e38\u91cf\u662f\u91c7\u6837LUT\u7684\u65f6\u5019\u9700\u8981\u7684\u3002\u5176\u4f59\u7684\u90e8\u5206\u76f8\u6bd4\u4f60\u5df2\u7ecf\u5f88\u719f\u6089\u4e86\u3002 Important LUT\u662f\u56fe\u5f62\u5b66\u7ecf\u5e38\u9047\u5230\u7684\u6982\u5ff5\uff0c\u5b83\u662fLook-Up Table\u7684\u7b80\u79f0\uff0c\u800c\u4e14\u5927\u591a\u6570\u60c5\u51b5\u4ee5\u7eb9\u7406\u8d34\u56fe\u7684\u5f62\u5f0f\u5728shader\u4e2d\u53d1\u6325\u4f5c\u7528\u3002\u7ed3\u6784\u4f53 Material \u4ec5\u5305\u542b\u4e09\u901a\u9053\u7684\u989c\u8272\u4fe1\u606f\u548c\u4e00\u901a\u9053\u7684\u7c97\u7cd9\u5ea6\u4fe1\u606f\u3002\u5982\u679c\u4f60\u91c7\u7528\u5ef6\u8fdf\u6e32\u67d3\uff0c\u8fd9\u79cd\u538b\u7f29\u65b9\u5f0f\u975e\u5e38\u6709\u7528\u3002\u867d\u7136\u989c\u8272\u4fe1\u606f\u5728\u672c\u6848\u4f8b\u4e2d\u672a\u88ab\u4f7f\u7528\uff0c\u4e14\u7269\u4f53\u7684\u7c97\u7cd9\u5ea6\u662f\u4e2a\u5b9a\u503c\uff0c\u5728\u5927\u591a\u6570PBR\u6e32\u67d3\u7ba1\u7ebf\u4e2d\u7c97\u7cd9\u5ea6\u53ef\u4ee5\u662f\u8868\u9762\u7eb9\u7406\u7684\u5f62\u5f0f\u3002 \u63a5\u4e0b\u6765\u662f\u51c6\u5907\u7d22\u5f15LUT\u6240\u7528\u7684\u53c2\u6570\uff0c\u8fdb\u800c\u6784\u5efauv\u5750\u6807\u7136\u540e\u6784\u5efa\u53d8\u6362\u77e9\u9635\uff1a vec3 N = normalize(worldNormal); vec3 V = normalize(viewPosition - worldPosition); vec3 P = worldPosition; float dotNV = clamp(dot(N, V), 0.0f, 1.0f); // \u901a\u8fc7\u7c97\u7cd9\u5ea6\u548csqrt(1-cos_theta)\u91c7\u6837M_texture vec2 uv = vec2(material.albedoRoughness.w, sqrt(1.0f - dotNV)); uv = uv*LUT_SCALE + LUT_BIAS; // \u83b7\u5f97inverse_M\u7684\u56db\u4e2a\u53c2\u6570 vec4 t1 = texture(LTC1, uv); // \u83b7\u5f97\u7528\u4e8e\u8ba1\u7b97\u83f2\u6d85\u5c14\u7684\u4e24\u4e2a\u53c2\u6570 vec4 t2 = texture(LTC2, uv); mat3 Minv = mat3( vec3(t1.x, 0, t1.y), vec3( 0, 1, 0), vec3(t1.z, 0, t1.w) ); \u4e3a\u4e86\u8ba1\u7b97\u7acb\u4f53\u89d2\uff0c\u6211\u4eec\u4e00\u5171\u9700\u8981\u4e24\u4e2a\u51fd\u6570\uff1a\u4e00\u4e2a\u7528\u6765\u8ba1\u7b97\u5355\u4e2a\u8fb9\u7f18\u7684\u79ef\u5206\uff0c\u53e6\u4e00\u4e2a\u662f\u591a\u6b21\u8c03\u7528\u8be5\u51fd\u6570\u5e76\u5bf9\u7ed3\u679c\u6c42\u548c\uff0c\u7136\u540e\u6267\u884c\u6b63\u534a\u7403\u4fee\u6b63\u3002\u8fb9\u7f18\u79ef\u5206\u51fd\u6570\u662f\u5176\u4e2d\u6700\u77ed\u7684\uff0c\u6b63\u5982\u672c\u6559\u7a0b\u524d\u9762\u6240\u793a\uff0c\u552f\u4e00\u7684\u533a\u522b\u662f\u6211\u4eec\u73b0\u5728\u4e0d\u6267\u884c\u70b9\u79ef\uff0c\u800c\u53ea\u8fd4\u56de\u53c9\u79ef\u4e58\u4ee5\u5f27\u957f\u3002\u53e6\u4e00\u4e2a\u51fd\u6570\u76f8\u5f53\u957f\uff0c\u4e0b\u9762\u6709\u5b8c\u6574\u7684\u4ee3\u7801\u548c\u4e00\u4e9b\u63cf\u8ff0\u8ba1\u7b97\u7684\u6ce8\u91ca\u3002 vec3 IntegrateEdge(vec3 v1, vec3 v2, vec3 N) { float x = dot(v1, v2); float y = abs(x); float a = 0.8543985 + (0.4965155 + 0.0145206*y)*y; float b = 3.4175940 + (4.1616724 + y)*y; float v = a / b; float theta_sintheta = (x > 0.0) ? v : 0.5*inversesqrt(max(1.0 - x*x, 1e-7)) - v; return cross(v1, v2)*theta_sintheta; } vec3 LTC_Evaluate(vec3 N, vec3 V, vec3 P, mat3 Minv, vec3 points[4], bool twoSided) { // \u6784\u5efaTBN\u77e9\u9635\u7684\u4e09\u4e2a\u57fa\u5411\u91cf vec3 T1, T2; T1 = normalize(V - N * dot(V, N)); T2 = cross(N, T1); // \u4f9d\u636eTBN\u77e9\u9635\u65cb\u8f6c\u5149\u6e90 Minv = Minv * transpose(mat3(T1, T2, N)); // \u591a\u8fb9\u5f62\u56db\u4e2a\u9876\u70b9 vec3 L[4]; // \u901a\u8fc7\u9006\u53d8\u6362\u77e9\u9635\u5c06\u9876\u70b9\u53d8\u6362\u4e8e \u53d7\u7ea6\u4f59\u5f26\u5206\u5e03 \u4e2d L[0] = Minv * (points[0] - P); L[1] = Minv * (points[1] - P); L[2] = Minv * (points[2] - P); L[3] = Minv * (points[3] - P); // use tabulated horizon-clipped sphere // \u5224\u65ad\u7740\u8272\u70b9\u662f\u5426\u4f4d\u4e8e\u5149\u6e90\u4e4b\u540e vec3 dir = points[0] - P; // LTC \u7a7a\u95f4 vec3 lightNormal = cross(points[1] - points[0], points[3] - points[0]); bool behind = (dot(dir, lightNormal) < 0.0); // \u6295\u5f71\u81f3\u5355\u4f4d\u7403\u9762\u4e0a L[0] = normalize(L[0]); L[1] = normalize(L[1]); L[2] = normalize(L[2]); L[3] = normalize(L[3]); // \u8fb9\u7f18\u79ef\u5206 vec3 vsum = vec3(0.0); vsum += IntegrateEdgeVec(L[0], L[1]); vsum += IntegrateEdgeVec(L[1], L[2]); vsum += IntegrateEdgeVec(L[2], L[3]); vsum += IntegrateEdgeVec(L[3], L[0]); // \u8ba1\u7b97\u6b63\u534a\u7403\u4fee\u6b63\u6240\u9700\u8981\u7684\u7684\u53c2\u6570 float len = length(vsum); float z = vsum.z/len; if (behind) z = -z; vec2 uv = vec2(z*0.5f + 0.5f, len); // range [0, 1] uv = uv*LUT_SCALE + LUT_BIAS; // \u901a\u8fc7\u53c2\u6570\u83b7\u5f97\u51e0\u4f55\u8870\u51cf\u7cfb\u6570 float scale = texture(LTC2, uv).w; float sum = len*scale; if (!behind && !twoSided) sum = 0.0; // \u8f93\u51fa vec3 Lo_i = vec3(sum, sum, sum); return Lo_i; } \u786e\u5b9e\u6709\u4e9b\u957f\uff0c\u4e0d\u8fc7\u5982\u679c\u4f60\u7406\u89e3\u4e86\u539f\u7406\u7684\u8bdd\u5176\u5b9e\u633a\u5408\u7406\u7684\u3002\u9664\u6b64\u4e4b\u5916\u8fd8\u6709\u4e00\u70b9\u6ca1\u63d0\u5230\u7684\u662f\u53d8\u91cf twoSided \uff0c\u901a\u8fc7\u4f20\u5165\u8fd9\u4e2a\u53c2\u6570\u6765\u63a7\u5236\u5f00\u542f/\u5173\u95ed\u533a\u57df\u5149\u7684\u53cc\u5411\u7167\u660e\u3002\u5b8c\u6574\u7684\u4ee3\u7801\u5728 \u8fd9\u91cc","title":"Shader"},{"location":"08%20Guest%20Articles/2022/03%20Area%20Lights/#_8","text":"\u8fd9\u91cc \u662fC++\u4ee3\u7801\uff0c\u8fd9\u4efd\u4ee3\u7801\u52a0\u4e0a\u524d\u6587\u63d0\u4f9b\u7684shader\u548c\u5934\u6587\u4ef6\u5373\u53ef\u8fd0\u884c\u3002\u4f5c\u8005\u8fd8\u989d\u5916\u589e\u52a0\u4e86\u4e00\u4e9b\u529f\u80fd\uff1a \u6309\u4f4fR/Shift+R\u4ee5\u51cf\u5c0f/\u589e\u52a0\u6750\u6599\u7c97\u7cd9\u5ea6\u3002 \u6309\u4f4fI/Shift+I\u4ee5\u964d\u4f4e/\u589e\u52a0\u5149\u5f3a\u5ea6\u3002 \u4f7f\u7528\u7bad\u5934\u952e\u79fb\u52a8\u5149\u6e90\u3002 \u4f7f\u7528B\u542f\u7528/\u7981\u7528\u53cc\u9762\u7167\u660e\u3002 \u4f7f\u7528WASD\u952e\u79fb\u52a8\u76f8\u673a\uff0c\u901a\u8fc7\u9f20\u6807\u65cb\u8f6c\u76f8\u673a\u3002\u8fd8\u652f\u6301\u4f7f\u7528\u9f20\u6807\u6eda\u8f6e\u8fdb\u884c\u7f29\u653e\u3002 \u4f5c\u8005\u8fd8\u589e\u52a0\u4e86\u5730\u9762\u8d34\u56fe\u8ba9\u573a\u666f\u770b\u8d77\u6765\u66f4\u771f\u5b9e\u3002\u5982\u679c\u7f16\u8bd1\u6210\u529f\u4f60\u5927\u6982\u7387\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u7ed3\u679c\uff1a","title":"\u7ed3\u679c"},{"location":"08%20Guest%20Articles/2022/03%20Area%20Lights/#_9","text":"\u7ed3\u679c\u770b\u8d77\u6765\u4e0d\u9519\uff0c\u4e0d\u8fc7\u4e5f\u8bb8\u4f60\u66f4\u60f3\u77e5\u9053\uff1a \u5982\u679c\u6dfb\u52a0\u66f4\u591a\u706f\u5149\u4f1a\u5982\u4f55 \u6e32\u67d3\u6027\u80fd\u5982\u4f55 \u663e\u7136\uff0c\u6839\u636e\u56fe\u5f62\u786c\u4ef6\u7684\u4e0d\u540c\uff0c\u8fd9\u4e24\u4e2a\u95ee\u9898\u53ef\u80fd\u4f1a\u6709\u4e0d\u540c\u7684\u7b54\u6848\u3002\u4f46\u603b\u7684\u6765\u8bf4\u6d4b\u8bd5\u8d77\u6765\u5f88\u7b80\u5355\uff1a\u6211\u4eec\u7ed9shader\u4f20\u5165\u4e00\u4e2a\u6570\u7ec4\u6765\u8868\u793a\u51e0\u4e2a\u533a\u57df\u5149\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 OpenGL\u961f\u5217 \u6765\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002\u8fd9\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u6848\u4f8b\u56e0\u4e3a\u533a\u57df\u5149\u9700\u8981\u5927\u91cf\u7684\u8ba1\u7b97\u2014\u2014\u6bd4\u5176\u5b83\u7c7b\u578b\u7684\u5149\u6e90\u8981\u591a\u5f97\u591a\u3002\u6bd4\u5982\u5bf9\u4e8e\u70b9\u5149\u6e90\u7684\u6d4b\u8bd5\uff0c\u6211\u4eec\u53ef\u4ee5\u7a97\u524d100-200\u4e2a\u5e76\u4e14\u91c7\u7528\u5411\u524d\u6e32\u67d3\u4ecd\u7136\u5177\u6709\u53ef\u63a5\u53d7\u7684\u5e27\u7387\uff0c\u4f46\u8fd9\u5bf9\u4e8e\u533a\u57df\u5149\u6e90\u6765\u8bf4\u662f\u4e0d\u53ef\u884c\u7684\u3002\u56e0\u6b64\u5982\u679c\u4f60\u60f3\u53d1\u5e03\u4e00\u6b3e\u6e38\u620f\uff0c\u901a\u8fc7\u6027\u80fd\u8bc4\u4f30\u6765\u89c4\u5212\u7167\u660e\u5360\u7528\u7684\u6027\u80fd\u5341\u5206\u91cd\u8981\u3002OpenGL\u961f\u5217\u7684\u5e38\u89c4\u8bbe\u7f6e\u5982\u4e0b\u6240\u793a\uff1a GLuint timeQuery; glGenQueries(1, &timeQuery); GLuint64 totalQueryTimeNs = 0; GLuint64 numQueries = 0; while (!glfwWindowShouldClose(window)) { [...] glBeginQuery(GL_TIME_ELAPSED, timeQuery); renderPlane(); glEndQuery(GL_TIME_ELAPSED); GLuint64 elapsed = 0; // will be in nanoseconds glGetQueryObjectui64v(timeQuery, GL_QUERY_RESULT, &elapsed); numQueries++; totalQueryTimeNs += elapsed; } double measuredAverageNs = (double)totalQueryTimeNs / (double)numQueries; double measuredAverageMs = measuredAverageNs * 1.0e-6; std::cout << \"Total average time(ms) = \" << measuredAverageMs << '\\n'; \u4e0a\u8ff0\u6d4b\u8bd5\u65b9\u5f0f\u6bd4\u8f83\u521d\u7ea7\uff0c\u6ca1\u6709\u8003\u8651\u5f02\u5e38\u503c\u6216\u65b9\u5dee\u3002\u4e0d\u8fc7\u91cd\u8981\u662f\u7edf\u8ba1\u7ed3\u679c\u4ece\u7eb3\u79d2\u53d8\u6210\u4e86\u6beb\u79d2\u3002 \u7247\u5143\u7740\u8272\u5668\u5c06\u4f7f\u7528\u5faa\u73af\u5728\u904d\u5386\u6240\u6709\u5149\u6e90\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u91cd\u590d\u5229\u7528\u5176\u4e2d\u7684\u4e00\u4e9b\u6570\u636e\uff0c\u6bd4\u5982\u6211\u4eec\u4e0d\u9700\u8981\u5bf9\u6bcf\u4e2a\u5149\u6e90\u6267\u884cLUT\u7eb9\u7406\u67e5\u627e\u3002\u7740\u8272\u5668\u7684\u66f4\u6539\u90e8\u5206\u73b0\u5728\u770b\u8d77\u6765\u5982\u4e0b\uff1a struct AreaLight { float intensity; vec3 color; vec3 points[4]; bool twoSided; }; uniform AreaLight areaLights[16]; uniform int numAreaLights; // [...] void main() { // [...] for (int i = 0; i < numAreaLights; i++) { // Evaluate LTC shading vec3 diffuse = LTC_Evaluate(N, V, P, mat3(1), areaLights[i].points, areaLights[i].twoSided); vec3 specular = LTC_Evaluate(N, V, P, Minv, areaLights[i].points, areaLights[i].twoSided); // GGX BRDF shadowing and Fresnel specular *= mSpecular*t2.x + (1.0f - mSpecular) * t2.y; // Add contribution result += areaLights[i].color * areaLights[i].intensity * (specular + mDiffuse * diffuse); } fragColor = vec4(ToSRGB(result), 1.0f); } Important \u6211\u4eec\u5fc5\u987b\u5728OpenGL\u4e2d\u6307\u5b9a\u4e00\u4e2a\u56fa\u5b9a\u957f\u5ea6\u7684\u7edf\u4e00\u6570\u7ec4\uff0c\u5373\u4f7f\u5b9e\u9645\u60c5\u51b5\u4e2d\u706f\u5149\u6570\u91cf\u4e0d\u4f1a\u90a3\u4e48\u591a\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06 numAreaLights \u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u7b49\u4e8e\u6216\u5c0f\u4e8e\u6700\u5927\u5141\u8bb8\u5149\u6e90\u6570\u91cf\u7684\u6570\u5b57\uff0c\u5728\u4ee5\u4e0a\u4f8b\u5b50\u4e2d\u4e3a16\u3002 \u8bd1\u6ce8 \u5982\u679c\u6709\u4f7f\u7528\u4e0d\u5b9a\u957f\u6570\u7ec4\u7684\u53bb\u4fee\uff0c\u53ef\u4ee5\u4f7f\u7528Shader Storage Buffer SSBO \u6839\u636e\u4f60\u7684\u9700\u6c42\uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u642d\u5efa\u6d4b\u8bd5\u7a0b\u5e8f\u3002\u7a0b\u5e8f\u7684\u6838\u5fc3\u662f\u521b\u5efa\u4e00\u4e2a\u533a\u57df\u5149\u4f4d\u7f6e\u9635\u5217\uff0c\u5e76\u5c06\u5b83\u4eec\u8f93\u5165\u5230shader\u4e2d\u3002\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e00\u70b9\u5728 \u3010\u591a\u5149\u6e90\u3011 \u4e00\u8282\u4e2d\u8fdb\u884c\u4e86\u8bb2\u89e3\u3002\u4e00\u4e0b\u4e3a\u4f5c\u8005\u6240\u5c55\u793a\u7684\u57fa\u7840\u6027\u80fd\u6d4b\u8bd5\u7ed3\u679c\uff1a # area lights Avg. rendering time (ms) 1 0.557326 2 0.897486 4 2.32212 8 3.9175 12 4.37243 16 3.95511 24 4.50246 32 5.67573 \u8fd9\u91cc \u662f\u6d4b\u8bd5\u7528\u7684\u6e90\u7801\uff0c\u5f53\u7136\u8fd8\u6709 \u4fee\u6539\u540e\u7684shader","title":"\u8bc4\u4f30\u6027\u80fd"},{"location":"08%20Guest%20Articles/2022/03%20Area%20Lights/#_10","text":"\u867d\u7136\u8fd9\u4e2a\u6f14\u793a\u4e0d\u662f\u5f88\u7cbe\u7f8e\uff0c\u4f46\u4e0d\u59a8\u788d\u4ece\u4e2d\u5f97\u51fa\u4e00\u4e9b\u7ed3\u8bba\uff1a \u706f\u5149\u662f\u4f2a\u968f\u673a\u653e\u7f6e\u5728\u7eb9\u7406\u5e73\u9762\u5468\u56f4\u7684\u3002 \u8fd9\u4e9b\u6d4b\u8bd5\u662f\u57282015\u5e74\u7684\u201cNVIDIA GeForce GTX 850M\u201d\u7b14\u8bb0\u672c\u7535\u8111GPU\u4e0a\u8fdb\u884c\u7684\u3002\u4f60\u53ef\u80fd\u4f1a\u6709\u66f4\u597d\u7684\u6d4b\u8bd5\u7ed3\u679c\u3002 \u8fd9\u4e9b\u706f\u5149\u662f\u4f7f\u7528\u5411\u524d\u6e32\u67d3\u7684\u3002 \u5728\u6267\u884c\u8fd9\u4e9b\u57fa\u51c6\u6d4b\u8bd5\u65f6\uff0c\u6211\u7ecf\u5386\u4e86\u5f88\u591a\u53d8\u6570\u3002\u8fd8\u6709\u5f88\u591a\u56e0\u7d20\u9700\u8981\u8003\u8651\uff0c\u6bd4\u5982\u9a71\u52a8\u7684\u5f71\u54cd\uff0c\u7a0b\u5e8f\u5728\u6267\u884c\u4ec0\u4e48\u64cd\u4f5c\u7b49\u7b49\u3002\u4e0a\u9762\u7684\u56fe\u8868\u663e\u793a\u4e86\u603b\u4f53\u8d8b\u52bf\uff0c\u6e32\u67d3\u65f6\u95f4\u968f\u706f\u5149\u6570\u91cf\u5927\u81f4\u5448\u7ebf\u6027\u7684\u589e\u957f\u3002 \u5728\u6e32\u67d3\u51fd\u6570\u524d\u540e\u6dfb\u52a0 glBeginQuery(GL_TIME_ELAPSED) \u548c glEndQuery(GL_TIME_ELAPSED) \u6765\u8bb0\u5f55\u6d4b\u8bd5\u6570\u636e\u3002\u67e5\u8be2\u8bb0\u5f55\u7684\u7ed3\u679c\u53ef\u4ee5\u7528 glGetQueryObjectui64v \u83b7\u5f97\uff0c\u5e76\u4ece\u7eb3\u79d2\u8f6c\u6362\u4e3a\u6beb\u79d2\u4ee5\u8ba1\u7b97\u5e73\u5747\u503c\u3002 \u8fd9\u91cc\u7279\u522b\u6709\u8da3\u7684\u5173\u4e8e\u6b63\u5411\u6e32\u67d3\u7684\u8981\u70b9\uff1a\u5728\u8fd9\u4e2a\u6f14\u793a\u573a\u666f\u4e2d\u53ea\u6709\u7eb9\u7406\u5e73\u9762\uff08\u5ffd\u7565\u663e\u793a\u5149\u6e90\u7684\u5f69\u8272\u5e73\u9762\uff09\u6709 \u7ed8\u5236\u8c03\u7528 (Draw Call)\u3002\u4f46\u5982\u679c\u6709\u8bb8\u591a\u5bf9\u8c61\u9700\u8981\u6e32\u67d3\uff0c\u5373\u8ba1\u7b97\u6bcf\u4e2a\u5149\u6e90\u3001\u6bcf\u4e2a\u7247\u7247\u5143\u3001\u6bcf\u4e2a\u7f51\u683c\u7684\u4eae\u5ea6\u8d21\u732e\uff0c\u5219\u8fd9\u6837\u7684\u7ba1\u7ebf\u662f\u975e\u5e38\u4f4e\u6548\u7684\uff0c\u56e0\u4e3a\u6df1\u5ea6\u6d4b\u8bd5\u4f1a\u5bfc\u81f4\u5927\u91cf\u7247\u5143\u88ab\u8986\u76d6\u3002\u6240\u4ee5\u66f4\u597d\u7684\u5b9e\u73b0\u65b9\u6cd5\u662f\u4f7f\u7528\u5ef6\u8fdf\u6e32\u67d3\uff0c\u8fd9\u610f\u5473\u7740\u65e0\u8bba\u7ed8\u5236\u7684\u5bf9\u8c61\u6570\u91cf\u5982\u4f55\uff0c\u9700\u8981\u8ba1\u7b97\u7167\u660e\u7684\u7247\u5143\u7d27\u8ddf\u5c4f\u5e55\u5927\u5c0f\u6709\u5173\u3002 \u5982\u679c\u7ee7\u7eed\u6cbf\u7528\u5411\u524d\u6e32\u67d3\uff0c\u5219\u53ef\u4ee5\u8c03\u7528\u4e00\u4e2a \u8ba1\u7b97\u7740\u8272\u5668 (Compute Shader)\uff0c\u8be5\u7740\u8272\u5668\u5c06\u5c4f\u5e55\u7a7a\u95f4\u5212\u5206\u4e3a\u5c0f\u533a\u5757\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u533a\u5757\u5206\u914d\u4e00\u4e2a\u533a\u57df\u5149\u5217\u8868\uff08\u5373\u5411\u524d\u6e32\u67d3plus\uff09\uff0c\u4ee5\u8fdb\u884c\u8fdb\u4e00\u6b65\u4f18\u5316\u3002\u4e0d\u8fc7\u8fd9\u4e2a\u7ba1\u7ebf\u7684\u57fa\u7840\u662f\u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u4e2a\u533a\u57df\u5149\u5b9a\u4e49\u4e00\u4e2a\u6700\u5927\u8870\u51cf\u534a\u5f84\u65f6\u3002\u8fd9\u5df2\u7ecf\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u5b8c\u6210\uff08\u8bf7\u53c2\u89c1 \u77e9\u5f62\u533a\u57df\u5149 \uff09\u3002","title":"\u5c0f\u8282"},{"location":"08%20Guest%20Articles/2022/03%20Area%20Lights/#_11","text":"\u9664\u4e86\u77e9\u5f62\u548c\u591a\u9762\u4f53\u5149\u6e90\uff0c\u8fd8\u53ef\u4ee5\u5b9e\u73b0\u5176\u4ed6\u7c7b\u578b\u7684\u533a\u57df\u5149\u6e90\u4f8b\u5982\u6761\u5f62\u706f\u6216\u67f1\u9762\u706f\u3002\u5c3d\u7ba1\u8d85\u51fa\u4e86\u672c\u6587\u7684\u8303\u56f4\uff0c\u4f46\u6570\u5b66\u57fa\u7840\u53ef\u4ee5\u5728[12]\u4e2d\u627e\u5230\u3002\u4f5c\u8005\u672c\u4eba\u5e76\u6ca1\u6709\u5c1d\u8bd5\u5b9e\u73b0\uff0c\u56e0\u6b64\u65e0\u6cd5\u8c08\u8bba\u5176\u6e32\u67d3\u6027\u80fd\u6216\u5b9e\u65bd\u7ec6\u8282\u3002\u4e0d\u8fc7\u4e3a\u4e86\u5b8c\u6574\u8d77\u89c1\u6b64\u5904\u7a0d\u5fae\u63d0\u4e00\u5634\u5df4\u3002\u9664\u6b64\u4e4b\u5916\u4f5c\u8005\u8fd8\u53d1\u73b0\u4e86\u4e00\u4e9b\u5305\u62ec\u5706\u5f62\u533a\u57df\u706f\u7684\u6f14\u793a\u3002","title":"\u5176\u4ed6\u706f\u5149\u7c7b\u578b"},{"location":"08%20Guest%20Articles/2022/03%20Area%20Lights/#_12","text":"\u611f\u8c22\u60a8\u7684\u9605\u8bfb\u3002\u4f5c\u8005\u548c\u8bd1\u8005\u90fd\u5e0c\u671b\u4f60\u559c\u6b22\u5e76\u4ece\u8fd9\u4e00\u8282\u5b66\u5230\u4e86\u4e00\u4e9b\u4e1c\u897f\u3002\u5bf9\u6211\u81ea\u5df1\u6765\u8bf4\uff0c\u5b66\u4e60\u8fd9\u9879\u4ee4\u4eba\u656c\u754f\u7684\u6280\u672f\u662f\u4e00\u79cd\u5de8\u5927\u7684\u4e50\u8da3\uff0c\u5982\u679c\u9080\u529f\u8bf7\u8d4f\u7684\u8bdd\uff0c\u6240\u6709\u7684\u529f\u52b3\u7406\u5e94\u90fd\u5f52\u529f\u4e8e\u53d1\u73b0\u5b83\u7684\u7814\u7a76\u4eba\u5458\u4eec\u3002\u6b63\u5982\u672c\u8282\u5f00\u5934\u6240\u63d0\u5230\u7684\uff0c\u4eba\u4eec\u540e\u6765\u5bf9\u8fd9\u9879\u6280\u672f\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u5305\u62ec\u5176\u4ed6\u7c7b\u578b\u7684\u591a\u8fb9\u5f62\u5149\u6e90\u3002\u51fa\u4e8e\u7b80\u6d01\u7684\u539f\u56e0\uff0c\u672c\u6559\u7a0b\u7701\u7565\u4e86\u8fd9\u4e9b\u5185\u5bb9\u4ee5\u53ca\u5173\u4e8e\u7eb9\u7406\u6620\u5c04\u7684\u90e8\u5206\u3002\u8bf4\u4e0d\u5b9a\u5b83\u4eec\u53ef\u80fd\u4f1a\u5728\u672a\u6765\u7684\u7ae0\u8282\u4e2d\u88ab\u63d0\u53ca\u3002 \u6700\u540e\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u5728\u533a\u57df\u5149\u4e2d\u6dfb\u52a0\u9634\u5f71\u662f\u4e00\u4e2a\u5f00\u653e\u7684\u7814\u7a76\u9886\u57df\u3002\u4e00\u4e9b\u53ef\u80fd\u7684\u60f3\u6cd5\u6d89\u53ca\u5c4f\u5e55\u7a7a\u95f4\u5149\u7ebf\u8ddf\u8e2a\u548c\u7b97\u6cd5\u964d\u566a\uff0c\u4f8b\u5982[9]\u6216[10]\u3002\u867d\u7136\u8fd9\u4e9b\u6280\u672f\u975e\u5e38\u6709\u8da3\uff0c\u4f46\u6709\u70b9\u8d85\u51fa\u4e86\u672c\u7cfb\u5217\u6559\u7a0b\u7684\u8303\u56f4\u3002\u5982\u679c\u4f60\u613f\u610f\uff0c\u4f60\u5f53\u7136\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5b66\u4e60\u548c\u4e86\u89e3\u3002","title":"\u603b\u7ed3"},{"location":"08%20Guest%20Articles/2022/03%20Area%20Lights/#_13","text":"[1] Real-Time Polygonal-Light Shading with Linearly Transformed Cosines , ACM Siggraph \u201816, LTC.pdf [2] Real-Time Area Lighting: a Journey from Research to Production , presentation slides by Stephen Hill: s2016_ltc_rnd.pdf [3] Real-Time Polygonal-Light Shading with Linearly Transformed Cosines , presentationslides by Eric Heitz: slides.pdf [4] Main reference github repo: https://github.com/selfshadow/ltc_code. Contains precomputed matrices, source code for WebGL examples, and source code for recomputing the matrices with different BRDF-models. [5] Lighting with Linearly Transformed Cosines , blog post by Tom Grove further investigating the technique. blog [6] Real-Time Polygonal-Light Shading with Linearly Transformed Cosines , Supplemental video showcasing the technique: Youtube [7] Adam - Unity , award-winning real-time-rendered short film by the Unity Demo team using the technique: Youtube [8] Interactive WebGL-demo: blog.selfshadow.com [9] Combining Analytic Direct Illumination and Stochastic Shadows , Eric Heitz et al.: I3D2018 combining.pdf [10] Fast Analytic Soft Shadows from Area Lights , Aakash KT et al.: 111-120.pdf [11] Stoke\u2019s theorem : Wikipedia [12] Linear-Light Shading with Linearly Transformed Cosines : HAL archives [13] Alan Watt and Mark Watt: Advanced Animation and Rendering Techniques, Theory and Practice , Addison Wesley, 1992 [14] \u5b9e\u65f6\u8303\u56f4\u5149Area Light\u6e32\u67d3\u53ca\u5176\u6570\u5b66\u539f\u7406\u63a8\u5bfc\uff0cXDzZyq\uff1a \u7b14\u8bb0","title":"\u5ef6\u4f38\u9605\u8bfb"},{"location":"img/","text":"\u56fe\u7247 \u8fd9\u4e2a\u76ee\u5f55\u4e2d\u6240\u6709\u56fe\u7247\u548c\u6587\u4ef6\u4ec5\u4e3a\u4fdd\u6301\u6559\u7a0b\u7684\u5b8c\u6574\u6027\u4ee5\u53ca\u53ef\u7528\u6027\u3002\u6587\u4ef6\u4e3a Joey de Vries \u6240\u6709\u3002\u6240\u6709\u6743\u5229\u5747\u4fdd\u7559\u3002 The images and files under this directory are here for integrity and accessibility purposes. All credit goes to Joey de Vries . All rights reserved.","title":"\u56fe\u7247"},{"location":"img/#_1","text":"\u8fd9\u4e2a\u76ee\u5f55\u4e2d\u6240\u6709\u56fe\u7247\u548c\u6587\u4ef6\u4ec5\u4e3a\u4fdd\u6301\u6559\u7a0b\u7684\u5b8c\u6574\u6027\u4ee5\u53ca\u53ef\u7528\u6027\u3002\u6587\u4ef6\u4e3a Joey de Vries \u6240\u6709\u3002\u6240\u6709\u6743\u5229\u5747\u4fdd\u7559\u3002 The images and files under this directory are here for integrity and accessibility purposes. All credit goes to Joey de Vries . All rights reserved.","title":"\u56fe\u7247"}]}